androidx.compose.ui.test.MouseInjectionScopeKt
<androidx.compose.ui.test.MouseInjectionScopeKt: long SingleClickDelayMillis>
<androidx.compose.ui.test.MouseInjectionScopeKt: long DefaultMouseGestureDurationMillis>
    public static final void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0;
        boolean $z0;
        androidx.compose.ui.test.MouseButton$Companion $r1, $r2;
        int $i1, $i2;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$click");

        $z0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: boolean isSpecified-k-4lQ0M(long)>(l0);

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void updatePointerTo-k-4lQ0M(long)>(l0);

     label1:
        $r1 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.test.MouseButton$Companion: int getPrimary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void press-SMKQcqU(int)>($i1);

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>(60L);

        $r2 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.test.MouseButton$Companion: int getPrimary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void release-SMKQcqU(int)>($i2);

        return;
    }

    public static void click-Uv8p0NA$default(androidx.compose.ui.test.MouseInjectionScope, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        int i0, $i1;
        java.lang.Object r1;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l2 = interfaceinvoke r0.<androidx.compose.ui.test.MouseInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>(r0, l2);

        return;
    }

    public static final void rightClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0;
        boolean $z0;
        androidx.compose.ui.test.MouseButton$Companion $r1, $r2;
        int $i1, $i2;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$rightClick");

        $z0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: boolean isSpecified-k-4lQ0M(long)>(l0);

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void updatePointerTo-k-4lQ0M(long)>(l0);

     label1:
        $r1 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.test.MouseButton$Companion: int getSecondary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void press-SMKQcqU(int)>($i1);

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>(60L);

        $r2 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.test.MouseButton$Companion: int getSecondary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void release-SMKQcqU(int)>($i2);

        return;
    }

    public static void rightClick-Uv8p0NA$default(androidx.compose.ui.test.MouseInjectionScope, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        int i0, $i1;
        java.lang.Object r1;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l2 = interfaceinvoke r0.<androidx.compose.ui.test.MouseInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void rightClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>(r0, l2);

        return;
    }

    private static final long getDefaultDoubleTapDelayMillis(androidx.compose.ui.platform.ViewConfiguration)
    {
        androidx.compose.ui.platform.ViewConfiguration $r0;
        long $l0, $l1, $l2, $l3, $l4;

        $r0 := @parameter0: androidx.compose.ui.platform.ViewConfiguration;

        $l0 = interfaceinvoke $r0.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapMinTimeMillis()>();

        $l1 = interfaceinvoke $r0.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapTimeoutMillis()>();

        $l3 = $l0 + $l1;

        $l2 = (long) 2;

        $l4 = $l3 / $l2;

        return $l4;
    }

    public static final void doubleClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0, $l1;
        androidx.compose.ui.platform.ViewConfiguration $r1;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$doubleClick");

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>($r0, l0);

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l1 = staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: long getDefaultDoubleTapDelayMillis(androidx.compose.ui.platform.ViewConfiguration)>($r1);

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>($l1);

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>($r0, l0);

        return;
    }

    public static void doubleClick-Uv8p0NA$default(androidx.compose.ui.test.MouseInjectionScope, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        int i0, $i1;
        java.lang.Object r1;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l2 = interfaceinvoke r0.<androidx.compose.ui.test.MouseInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void doubleClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>(r0, l2);

        return;
    }

    public static final void tripleClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0, $l1, $l2;
        androidx.compose.ui.platform.ViewConfiguration $r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$tripleClick");

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>($r0, l0);

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l1 = staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: long getDefaultDoubleTapDelayMillis(androidx.compose.ui.platform.ViewConfiguration)>($r1);

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>($l1);

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>($r0, l0);

        $r2 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l2 = staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: long getDefaultDoubleTapDelayMillis(androidx.compose.ui.platform.ViewConfiguration)>($r2);

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>($l2);

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>($r0, l0);

        return;
    }

    public static void tripleClick-Uv8p0NA$default(androidx.compose.ui.test.MouseInjectionScope, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        int i0, $i1;
        java.lang.Object r1;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l2 = interfaceinvoke r0.<androidx.compose.ui.test.MouseInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void tripleClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>(r0, l2);

        return;
    }

    public static final void longClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0, $l2, $l3;
        boolean $z0;
        androidx.compose.ui.test.MouseButton$Companion $r1, $r3;
        int $i1, $i4;
        androidx.compose.ui.platform.ViewConfiguration $r2;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$longClick");

        $z0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: boolean isSpecified-k-4lQ0M(long)>(l0);

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void updatePointerTo-k-4lQ0M(long)>(l0);

     label1:
        $r1 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.test.MouseButton$Companion: int getPrimary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void press-SMKQcqU(int)>($i1);

        $r2 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l2 = interfaceinvoke $r2.<androidx.compose.ui.platform.ViewConfiguration: long getLongPressTimeoutMillis()>();

        $l3 = $l2 + 100L;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>($l3);

        $r3 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i4 = virtualinvoke $r3.<androidx.compose.ui.test.MouseButton$Companion: int getPrimary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void release-SMKQcqU(int)>($i4);

        return;
    }

    public static void longClick-Uv8p0NA$default(androidx.compose.ui.test.MouseInjectionScope, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        int i0, $i1;
        java.lang.Object r1;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l2 = interfaceinvoke r0.<androidx.compose.ui.test.MouseInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void longClick-Uv8p0NA(androidx.compose.ui.test.MouseInjectionScope,long)>(r0, l2);

        return;
    }

    public static final void animateTo-d-4ec7I(androidx.compose.ui.test.MouseInjectionScope, long, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0, l1, l2;
        float f0;
        androidx.compose.ui.test.MouseInjectionScopeKt$animateTo$1 $r1;
        kotlin.jvm.functions.Function1 $r2;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$animateTo");

        f0 = (float) l1;

        l2 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: long getCurrentPosition-F1C5BW0()>();

        $r1 = new androidx.compose.ui.test.MouseInjectionScopeKt$animateTo$1;

        specialinvoke $r1.<androidx.compose.ui.test.MouseInjectionScopeKt$animateTo$1: void <init>(long,long,float)>(l2, l0, f0);

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void animateAlong(androidx.compose.ui.test.MouseInjectionScope,kotlin.jvm.functions.Function1,long)>($r0, $r2, l1);

        return;
    }

    public static void animateTo-d-4ec7I$default(androidx.compose.ui.test.MouseInjectionScope, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        long l0, l3;
        int i1, $i2;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        l3 := @parameter2: long;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        l3 = 300L;

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void animateTo-d-4ec7I(androidx.compose.ui.test.MouseInjectionScope,long,long)>(r0, l0, l3);

        return;
    }

    public static final void animateBy-d-4ec7I(androidx.compose.ui.test.MouseInjectionScope, long, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0, l1, $l2, $l3;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$animateBy");

        $l2 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: long getCurrentPosition-F1C5BW0()>();

        $l3 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-MK-Hz9U(long,long)>($l2, l0);

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void animateTo-d-4ec7I(androidx.compose.ui.test.MouseInjectionScope,long,long)>($r0, $l3, l1);

        return;
    }

    public static void animateBy-d-4ec7I$default(androidx.compose.ui.test.MouseInjectionScope, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        long l0, l3;
        int i1, $i2;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        l3 := @parameter2: long;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        l3 = 300L;

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void animateBy-d-4ec7I(androidx.compose.ui.test.MouseInjectionScope,long,long)>(r0, l0, l3);

        return;
    }

    public static final void animateAlong(androidx.compose.ui.test.MouseInjectionScope, kotlin.jvm.functions.Function1, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        kotlin.jvm.functions.Function1 r1;
        long l0, l1, l3, $l5, $l6, $l8, $l9, $l10, l12;
        int i2, $i7, i11, $i13;
        float f0, $f1, $f2, $f3, $f4, $f5;
        byte $b4;
        java.lang.Long $r2, $r5, $r8;
        java.lang.Object $r3, $r6, $r9;
        androidx.compose.ui.geometry.Offset $r4, $r7, $r10;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r11;
        java.lang.String $r12, $r13;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "curve");

        $b4 = l0 cmp 0L;

        if $b4 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r13 = "Duration is 0";

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label3:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (androidx.compose.ui.geometry.Offset) $r3;

        l1 = virtualinvoke $r4.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $l5 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: long getCurrentPosition-F1C5BW0()>();

        $z0 = staticinvoke <androidx.compose.ui.geometry.Offset: boolean equals-impl0(long,long)>(l1, $l5);

        if $z0 != 0 goto label4;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r9 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

        $r10 = (androidx.compose.ui.geometry.Offset) $r9;

        $l10 = virtualinvoke $r10.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void moveTo-3MmeM6k(long,long)>($l10, 0L);

     label4:
        i11 = 0;

        $f1 = (float) l0;

        $l6 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: long getEventPeriodMillis()>();

        $f2 = (float) $l6;

        $f3 = $f1 / $f2;

        $i7 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f3);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i7);

        l12 = 0L;

     label5:
        $i13 = i11;

        i11 = i11 + 1;

        if $i13 >= i2 goto label6;

        $f5 = (float) i11;

        $f4 = (float) i2;

        f0 = $f5 / $f4;

        l3 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: long lerp(long,long,float)>(0L, l0, f0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (androidx.compose.ui.geometry.Offset) $r6;

        $l8 = virtualinvoke $r7.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $l9 = l3 - l12;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void moveTo-3MmeM6k(long,long)>($l8, $l9);

        l12 = l3;

        goto label5;

     label6:
        return;
    }

    public static void animateAlong$default(androidx.compose.ui.test.MouseInjectionScope, kotlin.jvm.functions.Function1, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1;
        java.lang.Object r2;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        l2 := @parameter2: long;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        l2 = 300L;

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void animateAlong(androidx.compose.ui.test.MouseInjectionScope,kotlin.jvm.functions.Function1,long)>(r0, r1, l2);

        return;
    }

    public static final void dragAndDrop-DUneCvk(androidx.compose.ui.test.MouseInjectionScope, long, long, long)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        long l0, l1, l2;
        androidx.compose.ui.test.MouseButton$Companion $r1, $r2;
        int $i3, $i4;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$dragAndDrop");

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void updatePointerTo-k-4lQ0M(long)>(l0);

        $r1 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i3 = virtualinvoke $r1.<androidx.compose.ui.test.MouseButton$Companion: int getPrimary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void press-SMKQcqU(int)>($i3);

        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void animateTo-d-4ec7I(androidx.compose.ui.test.MouseInjectionScope,long,long)>($r0, l1, l2);

        $r2 = <androidx.compose.ui.test.MouseButton: androidx.compose.ui.test.MouseButton$Companion Companion>;

        $i4 = virtualinvoke $r2.<androidx.compose.ui.test.MouseButton$Companion: int getPrimary-ipIFwKQ()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void release-SMKQcqU(int)>($i4);

        return;
    }

    public static void dragAndDrop-DUneCvk$default(androidx.compose.ui.test.MouseInjectionScope, long, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        long l0, l1, l4;
        int i2, $i3;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l4 := @parameter3: long;

        i2 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i3 = i2 & 4;

        if $i3 == 0 goto label1;

        l4 = 300L;

     label1:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void dragAndDrop-DUneCvk(androidx.compose.ui.test.MouseInjectionScope,long,long,long)>(r0, l0, l1, l4);

        return;
    }

    public static final void smoothScroll-rNbqR-4(androidx.compose.ui.test.MouseInjectionScope, float, long, int)
    {
        androidx.compose.ui.test.MouseInjectionScope $r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, f9;
        long l0, l3, $l4, $l7, l9;
        int i1, i2, $i5, $i6, i8;

        $r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        f0 := @parameter1: float;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$smoothScroll");

        i8 = 0;

        $f3 = (float) l0;

        $l4 = interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: long getEventPeriodMillis()>();

        $f4 = (float) $l4;

        $f5 = $f3 / $f4;

        $i5 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f5);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i5);

        l9 = 0L;

        f9 = 0.0F;

     label1:
        $i6 = i8;

        i8 = i8 + 1;

        if $i6 >= i2 goto label2;

        $f7 = (float) i8;

        $f6 = (float) i2;

        f1 = $f7 / $f6;

        l3 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: long lerp(long,long,float)>(0L, l0, f1);

        f2 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: float lerp(float,float,float)>(0.0F, f0, f1);

        $l7 = l3 - l9;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void advanceEventTime(long)>($l7);

        $f8 = f2 - f9;

        interfaceinvoke $r0.<androidx.compose.ui.test.MouseInjectionScope: void scroll-I7Dg0i0(float,int)>($f8, i1);

        l9 = l3;

        f9 = f2;

        goto label1;

     label2:
        return;
    }

    public static void smoothScroll-rNbqR-4$default(androidx.compose.ui.test.MouseInjectionScope, float, long, int, int, java.lang.Object)
    {
        androidx.compose.ui.test.MouseInjectionScope r0;
        float f0;
        int i0, $i1, $i2, i4;
        java.lang.Object r1;
        androidx.compose.ui.test.ScrollWheel$Companion $r2;
        long l3;

        r0 := @parameter0: androidx.compose.ui.test.MouseInjectionScope;

        f0 := @parameter1: float;

        l3 := @parameter2: long;

        i4 := @parameter3: int;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        l3 = 300L;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r2 = <androidx.compose.ui.test.ScrollWheel: androidx.compose.ui.test.ScrollWheel$Companion Companion>;

        i4 = virtualinvoke $r2.<androidx.compose.ui.test.ScrollWheel$Companion: int getVertical-LTdd5XU()>();

     label2:
        staticinvoke <androidx.compose.ui.test.MouseInjectionScopeKt: void smoothScroll-rNbqR-4(androidx.compose.ui.test.MouseInjectionScope,float,long,int)>(r0, f0, l3, i4);

        return;
    }

