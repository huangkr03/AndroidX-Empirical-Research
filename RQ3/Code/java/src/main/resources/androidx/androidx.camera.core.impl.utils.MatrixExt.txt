androidx.camera.core.impl.utils.MatrixExt
<androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>
    private void <init>()
    {
        androidx.camera.core.impl.utils.MatrixExt r0;

        r0 := @this: androidx.camera.core.impl.utils.MatrixExt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setRotate(float[], float, float, float)
    {
        float[] r0;
        float f0, f1, f2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>(r0, 0);

        staticinvoke <androidx.camera.core.impl.utils.MatrixExt: void preRotate(float[],float,float,float)>(r0, f0, f1, f2);

        return;
    }

    public static void preRotate(float[], float, float, float)
    {
        float[] r0;
        float f0, f1, f2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        staticinvoke <androidx.camera.core.impl.utils.MatrixExt: void normalize(float[],float,float)>(r0, f1, f2);

        staticinvoke <android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>(r0, 0, f0, 0.0F, 0.0F, 1.0F);

        staticinvoke <androidx.camera.core.impl.utils.MatrixExt: void denormalize(float[],float,float)>(r0, f1, f2);

        return;
    }

    public static void postRotate(float[], float, float, float)
    {
        float[] r0, r1, $r3, $r4, $r5, $r6, $r7, $r8;
        float f0, f1, f2;
        java.lang.Throwable r2, $r9;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        $r3 = <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>($r4, 0);

        $r5 = <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>;

        staticinvoke <androidx.camera.core.impl.utils.MatrixExt: void normalize(float[],float,float)>($r5, f1, f2);

        $r6 = <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>;

        staticinvoke <android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>($r6, 0, f0, 0.0F, 0.0F, 1.0F);

        $r7 = <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>;

        staticinvoke <androidx.camera.core.impl.utils.MatrixExt: void denormalize(float[],float,float)>($r7, f1, f2);

        $r8 = <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp>;

        staticinvoke <android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>(r0, 0, $r8, 0, r0, 0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String toString(float[], int)
    {
        float[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object[] $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        java.util.Locale $r2;
        java.lang.Float $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.String $r19;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[16];

        $f0 = r0[i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[0] = $r3;

        $i1 = i0 + 4;

        $f1 = r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r1[1] = $r4;

        $i2 = i0 + 8;

        $f2 = r0[$i2];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r1[2] = $r5;

        $i3 = i0 + 12;

        $f3 = r0[$i3];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r1[3] = $r6;

        $i4 = i0 + 1;

        $f4 = r0[$i4];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r1[4] = $r7;

        $i5 = i0 + 5;

        $f5 = r0[$i5];

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r1[5] = $r8;

        $i6 = i0 + 9;

        $f6 = r0[$i6];

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r1[6] = $r9;

        $i7 = i0 + 13;

        $f7 = r0[$i7];

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $r1[7] = $r10;

        $i8 = i0 + 2;

        $f8 = r0[$i8];

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        $r1[8] = $r11;

        $i9 = i0 + 6;

        $f9 = r0[$i9];

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f9);

        $r1[9] = $r12;

        $i10 = i0 + 10;

        $f10 = r0[$i10];

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f10);

        $r1[10] = $r13;

        $i11 = i0 + 14;

        $f11 = r0[$i11];

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        $r1[11] = $r14;

        $i12 = i0 + 3;

        $f12 = r0[$i12];

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f12);

        $r1[12] = $r15;

        $i13 = i0 + 7;

        $f13 = r0[$i13];

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f13);

        $r1[13] = $r16;

        $i14 = i0 + 11;

        $f14 = r0[$i14];

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f14);

        $r1[14] = $r17;

        $i15 = i0 + 15;

        $f15 = r0[$i15];

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f15);

        $r1[15] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "Matrix:\n%2.1f %2.1f %2.1f %2.1f\n%2.1f %2.1f %2.1f %2.1f\n%2.1f %2.1f %2.1f %2.1f\n%2.1f %2.1f %2.1f %2.1f", $r1);

        return $r19;
    }

    private static void normalize(float[], float, float)
    {
        float[] r0;
        float f0, f1;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <android.opengl.Matrix: void translateM(float[],int,float,float,float)>(r0, 0, f0, f1, 0.0F);

        return;
    }

    private static void denormalize(float[], float, float)
    {
        float[] r0;
        float f0, f1, $f2, $f3;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $f3 = neg f0;

        $f2 = neg f1;

        staticinvoke <android.opengl.Matrix: void translateM(float[],int,float,float,float)>(r0, 0, $f3, $f2, 0.0F);

        return;
    }

    static void <clinit>()
    {
        float[] $r0;

        $r0 = newarray (float)[16];

        <androidx.camera.core.impl.utils.MatrixExt: float[] sTemp> = $r0;

        return;
    }

