androidx.mediarouter.app.MediaRouteVolumeSlider
<androidx.mediarouter.app.MediaRouteVolumeSlider: java.lang.String TAG>
<androidx.mediarouter.app.MediaRouteVolumeSlider: float mDisabledAlpha>
<androidx.mediarouter.app.MediaRouteVolumeSlider: boolean mHideThumb>
<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable mThumb>
<androidx.mediarouter.app.MediaRouteVolumeSlider: int mProgressAndThumbColor>
<androidx.mediarouter.app.MediaRouteVolumeSlider: int mBackgroundColor>
    public void <init>(android.content.Context)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        android.content.Context r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.appcompat.R$attr: int seekBarStyle>;

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        float $f0;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $f0 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: float getDisabledAlpha(android.content.Context)>(r1);

        r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: float mDisabledAlpha> = $f0;

        return;
    }

    protected void drawableStateChanged()
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.LayerDrawable r1;
        android.graphics.drawable.Drawable r2, $r4, $r5, $r7, r9;
        boolean $z0, $z1;
        float $f0, $f1;
        android.graphics.PorterDuff$Mode $r3, $r6, $r8;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()>();

        $z0 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i4 = 255;

        goto label2;

     label1:
        $f0 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: float mDisabledAlpha>;

        $f1 = 255.0F * $f0;

        $i4 = (int) $f1;

     label2:
        i0 = $i4;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable mThumb>;

        $i1 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mProgressAndThumbColor>;

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i1, $r3);

        $r5 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable mThumb>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        r9 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable getProgressDrawable()>();

        $z1 = r9 instanceof android.graphics.drawable.LayerDrawable;

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable getProgressDrawable()>();

        r1 = (android.graphics.drawable.LayerDrawable) $r7;

        r9 = virtualinvoke r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        r2 = virtualinvoke r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i3 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mBackgroundColor>;

        $r8 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i3, $r8);

     label3:
        $i2 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mProgressAndThumbColor>;

        $r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke r9.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i2, $r6);

        virtualinvoke r9.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        return;
    }

    public void setThumb(android.graphics.drawable.Drawable)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        android.graphics.drawable.Drawable r1, $r3;
        boolean $z0;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable mThumb> = r1;

        $z0 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: boolean mHideThumb>;

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable mThumb>;

     label2:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatSeekBar: void setThumb(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setHideThumb(boolean)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        boolean z0, $z1, $z2;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: boolean mHideThumb>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: boolean mHideThumb> = z0;

        $z2 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: boolean mHideThumb>;

        if $z2 == 0 goto label2;

        $r2 = null;

        goto label3;

     label2:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: android.graphics.drawable.Drawable mThumb>;

     label3:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatSeekBar: void setThumb(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setColor(int)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        int i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setColor(int,int)>(i0, i0);

        return;
    }

    public void setColor(int, int)
    {
        androidx.mediarouter.app.MediaRouteVolumeSlider r0;
        int i0, i1, $i2, $i3, $i5, $i7;
        java.lang.StringBuilder $r1, $r2, $r4, $r6, $r7, $r9;
        java.lang.String $r3, $r5, $r8, $r10;

        r0 := @this: androidx.mediarouter.app.MediaRouteVolumeSlider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mProgressAndThumbColor>;

        if $i2 == i0 goto label2;

        $i5 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        if $i5 == 255 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Volume slider progress and thumb color cannot be translucent: #");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaRouteVolumeSlider", $r10);

     label1:
        r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mProgressAndThumbColor> = i0;

     label2:
        $i7 = r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mBackgroundColor>;

        if $i7 == i1 goto label4;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        if $i3 == 255 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Volume slider background color cannot be translucent: #");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaRouteVolumeSlider", $r5);

     label3:
        r0.<androidx.mediarouter.app.MediaRouteVolumeSlider: int mBackgroundColor> = i1;

     label4:
        return;
    }

