androidx.work.impl.constraints.controllers.NetworkConnectedController
    public void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)
    {
        androidx.work.impl.constraints.controllers.NetworkConnectedController r0;
        androidx.work.impl.constraints.trackers.ConstraintTracker r1;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkConnectedController;

        r1 := @parameter0: androidx.work.impl.constraints.trackers.ConstraintTracker;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tracker");

        specialinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>(r1);

        return;
    }

    public boolean hasConstraint(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.constraints.controllers.NetworkConnectedController r0;
        androidx.work.impl.model.WorkSpec r1;
        androidx.work.Constraints $r2;
        androidx.work.NetworkType $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkConnectedController;

        r1 := @parameter0: androidx.work.impl.model.WorkSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpec");

        $r2 = r1.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints>;

        $r3 = virtualinvoke $r2.<androidx.work.Constraints: androidx.work.NetworkType getRequiredNetworkType()>();

        $r4 = <androidx.work.NetworkType: androidx.work.NetworkType CONNECTED>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isConstrained(androidx.work.impl.constraints.NetworkState)
    {
        androidx.work.impl.constraints.controllers.NetworkConnectedController r0;
        androidx.work.impl.constraints.NetworkState r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkConnectedController;

        r1 := @parameter0: androidx.work.impl.constraints.NetworkState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label3;

        $z1 = virtualinvoke r1.<androidx.work.impl.constraints.NetworkState: boolean isConnected()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<androidx.work.impl.constraints.NetworkState: boolean isValidated()>();

        if $z2 != 0 goto label2;

     label1:
        $z3 = 1;

        goto label5;

     label2:
        $z3 = 0;

        goto label5;

     label3:
        $z0 = virtualinvoke r1.<androidx.work.impl.constraints.NetworkState: boolean isConnected()>();

        if $z0 != 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public volatile boolean isConstrained(java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.NetworkConnectedController r0;
        java.lang.Object r1;
        androidx.work.impl.constraints.NetworkState $r2;
        boolean $z0;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkConnectedController;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.work.impl.constraints.NetworkState) r1;

        $z0 = virtualinvoke r0.<androidx.work.impl.constraints.controllers.NetworkConnectedController: boolean isConstrained(androidx.work.impl.constraints.NetworkState)>($r2);

        return $z0;
    }

