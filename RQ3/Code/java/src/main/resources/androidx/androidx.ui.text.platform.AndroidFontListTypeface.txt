androidx.ui.text.platform.AndroidFontListTypeface
<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.platform.AndroidFontListTypeface$Companion Companion>
<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher fontMatcher$1>
<androidx.ui.text.platform.AndroidFontListTypeface: java.util.Map loadedTypefaces>
<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontFamily fontFamily>
<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher fontMatcher>
    public void <init>(androidx.ui.text.font.FontListFontFamily, android.content.Context, java.util.List, androidx.ui.text.font.FontMatcher)
    {
        androidx.ui.text.platform.AndroidFontListTypeface r0;
        androidx.ui.text.font.FontListFontFamily r1;
        android.content.Context r2;
        java.util.List r3, r5, $r9, $r23;
        androidx.ui.text.font.FontMatcher r4, $r18;
        boolean z0, $z1;
        java.util.Collection r6, $r12, r25;
        androidx.ui.text.font.Font r7, $r34;
        java.util.ArrayList $r8;
        int $i0, $i1, i2, $i3, i4;
        java.lang.Iterable $r10, $r19, $r24;
        java.util.LinkedHashMap $r11;
        androidx.ui.text.font.FontFamily $r13;
        androidx.ui.text.platform.AndroidTypefaceCache $r14;
        java.lang.Object $r16, $r17, r27, r33;
        java.lang.Throwable $r20, r37;
        java.lang.IllegalStateException $r21;
        java.lang.String $r22;
        java.util.Iterator r26;
        kotlin.Pair $r28;
        androidx.ui.text.font.FontWeight r29;
        androidx.ui.text.font.FontStyle r30;
        java.util.Map $r31, r35;
        android.graphics.Typeface r36;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface;

        r1 := @parameter0: androidx.ui.text.font.FontListFontFamily;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: androidx.ui.text.font.FontMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fontFamily");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "fontMatcher");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher fontMatcher$1> = r4;

        if r3 != null goto label01;

        $r23 = virtualinvoke r1.<androidx.ui.text.font.FontListFontFamily: java.util.List getFonts()>();

        goto label04;

     label01:
        $r24 = (java.lang.Iterable) r3;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r24, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r25 = (java.util.Collection) $r8;

        r26 = interfaceinvoke $r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (kotlin.Pair) r27;

        r6 = r25;

        $r16 = virtualinvoke $r28.<kotlin.Pair: java.lang.Object component1()>();

        r29 = (androidx.ui.text.font.FontWeight) $r16;

        $r17 = virtualinvoke $r28.<kotlin.Pair: java.lang.Object component2()>();

        r30 = (androidx.ui.text.font.FontStyle) $r17;

        $r18 = virtualinvoke r0.<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher getFontMatcher()>();

        $r19 = (java.lang.Iterable) r1;

        r7 = virtualinvoke $r18.<androidx.ui.text.font.FontMatcher: androidx.ui.text.font.Font matchFont(java.lang.Iterable,androidx.ui.text.font.FontWeight,androidx.ui.text.font.FontStyle)>($r19, r29, r30);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label02;

     label03:
        $r9 = (java.util.List) r25;

        $r10 = (java.lang.Iterable) $r9;

        $r23 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List distinct(java.lang.Iterable)>($r10);

     label04:
        r5 = $r23;

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        $r31 = (java.util.Map) $r11;

        i2 = 0;

        $r12 = (java.util.Collection) r5;

        $i1 = interfaceinvoke $r12.<java.util.Collection: int size()>();

        $i3 = $i1 + -1;

        if i2 > $i3 goto label10;

     label05:
        i4 = i2;

        i2 = i2 + 1;

        r33 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i4);

        $r34 = (androidx.ui.text.font.Font) r33;

     label06:
        r35 = $r31;

        $r14 = <androidx.ui.text.platform.AndroidTypefaceCache: androidx.ui.text.platform.AndroidTypefaceCache INSTANCE>;

        r36 = virtualinvoke $r14.<androidx.ui.text.platform.AndroidTypefaceCache: android.graphics.Typeface getOrCreate(android.content.Context,androidx.ui.text.font.Font)>(r2, $r34);

        z0 = 0;

        interfaceinvoke r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r36);

     label07:
        goto label09;

     label08:
        $r20 := @caughtexception;

        r37 = $r20;

        $r21 = new java.lang.IllegalStateException;

        $r22 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Cannot create Typeface from ", $r34);

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label09:
        if i2 <= $i3 goto label05;

     label10:
        r0.<androidx.ui.text.platform.AndroidFontListTypeface: java.util.Map loadedTypefaces> = $r31;

        $r13 = (androidx.ui.text.font.FontFamily) r1;

        r0.<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontFamily fontFamily> = $r13;

        return;

        catch java.lang.Exception from label06 to label07 with label08;
    }

    public void <init>(androidx.ui.text.font.FontListFontFamily, android.content.Context, java.util.List, androidx.ui.text.font.FontMatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.platform.AndroidFontListTypeface r0;
        androidx.ui.text.font.FontListFontFamily r1;
        android.content.Context r2;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.ui.text.platform.AndroidFontListTypeface$Companion $r4;
        java.util.List r5;
        androidx.ui.text.font.FontMatcher r6;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface;

        r1 := @parameter0: androidx.ui.text.font.FontListFontFamily;

        r2 := @parameter1: android.content.Context;

        r5 := @parameter2: java.util.List;

        r6 := @parameter3: androidx.ui.text.font.FontMatcher;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r5 = (java.util.List) null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r4 = <androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.platform.AndroidFontListTypeface$Companion Companion>;

        r6 = virtualinvoke $r4.<androidx.ui.text.platform.AndroidFontListTypeface$Companion: androidx.ui.text.font.FontMatcher getFontMatcher()>();

     label2:
        specialinvoke r0.<androidx.ui.text.platform.AndroidFontListTypeface: void <init>(androidx.ui.text.font.FontListFontFamily,android.content.Context,java.util.List,androidx.ui.text.font.FontMatcher)>(r1, r2, r5, r6);

        return;
    }

    public final androidx.ui.text.font.FontMatcher getFontMatcher()
    {
        androidx.ui.text.platform.AndroidFontListTypeface r0;
        androidx.ui.text.font.FontMatcher $r1;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface;

        $r1 = r0.<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher fontMatcher$1>;

        return $r1;
    }

    public androidx.ui.text.font.FontFamily getFontFamily()
    {
        androidx.ui.text.platform.AndroidFontListTypeface r0;
        androidx.ui.text.font.FontFamily $r1;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface;

        $r1 = r0.<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontFamily fontFamily>;

        return $r1;
    }

    public android.graphics.Typeface getNativeTypeface(androidx.ui.text.font.FontWeight, androidx.ui.text.font.FontStyle, androidx.ui.text.font.FontSynthesis)
    {
        androidx.ui.text.platform.AndroidFontListTypeface r0;
        androidx.ui.text.font.FontWeight r1, $r12;
        androidx.ui.text.font.FontStyle r2, $r16;
        androidx.ui.text.font.FontSynthesis r3, $r13;
        androidx.ui.text.font.Font r4;
        android.graphics.Typeface r5, $r15;
        boolean z0, z1, $z2, $z3, $z4, z5, z6, z7;
        androidx.ui.text.font.FontMatcher $r6;
        java.util.Map $r7, $r10;
        java.util.Set $r8;
        java.lang.Iterable $r9;
        java.lang.Object $r11;
        androidx.ui.text.platform.TypefaceAdapter$Companion $r14;
        java.lang.IllegalArgumentException $r17;
        java.lang.String $r18, r20;
        java.lang.Throwable $r19;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface;

        r1 := @parameter0: androidx.ui.text.font.FontWeight;

        r2 := @parameter1: androidx.ui.text.font.FontStyle;

        r3 := @parameter2: androidx.ui.text.font.FontSynthesis;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fontWeight");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "fontStyle");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "synthesis");

        $r6 = virtualinvoke r0.<androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher getFontMatcher()>();

        $r7 = r0.<androidx.ui.text.platform.AndroidFontListTypeface: java.util.Map loadedTypefaces>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = (java.lang.Iterable) $r8;

        r4 = virtualinvoke $r6.<androidx.ui.text.font.FontMatcher: androidx.ui.text.font.Font matchFont(java.lang.Iterable,androidx.ui.text.font.FontWeight,androidx.ui.text.font.FontStyle)>($r9, r1, r2);

        $r10 = r0.<androidx.ui.text.platform.AndroidFontListTypeface: java.util.Map loadedTypefaces>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.graphics.Typeface) $r11;

        z0 = 0;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        if r5 != null goto label1;

        z1 = 0;

        r20 = "Required value was null.";

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        $r19 = (java.lang.Throwable) $r17;

        throw $r19;

     label1:
        $r12 = interfaceinvoke r4.<androidx.ui.text.font.Font: androidx.ui.text.font.FontWeight getWeight()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, r1);

        if $z2 == 0 goto label2;

        $r16 = interfaceinvoke r4.<androidx.ui.text.font.Font: androidx.ui.text.font.FontStyle getStyle()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, r2);

        if $z4 != 0 goto label3;

     label2:
        $r13 = <androidx.ui.text.font.FontSynthesis: androidx.ui.text.font.FontSynthesis None>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r13);

        if $z3 == 0 goto label4;

     label3:
        return r5;

     label4:
        $r14 = <androidx.ui.text.platform.TypefaceAdapter: androidx.ui.text.platform.TypefaceAdapter$Companion Companion>;

        $r15 = virtualinvoke $r14.<androidx.ui.text.platform.TypefaceAdapter$Companion: android.graphics.Typeface synthesize(android.graphics.Typeface,androidx.ui.text.font.Font,androidx.ui.text.font.FontWeight,androidx.ui.text.font.FontStyle,androidx.ui.text.font.FontSynthesis)>(r5, r4, r1, r2, r3);

        return $r15;
    }

    public static final androidx.ui.text.font.FontMatcher access$getFontMatcher$cp$s-339819085()
    {
        androidx.ui.text.font.FontMatcher $r0;

        $r0 = <androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher fontMatcher>;

        return $r0;
    }

    public static final void <clinit>()
    {
        androidx.ui.text.platform.AndroidFontListTypeface$Companion $r0;
        androidx.ui.text.font.FontMatcher $r1;

        $r0 = new androidx.ui.text.platform.AndroidFontListTypeface$Companion;

        specialinvoke $r0.<androidx.ui.text.platform.AndroidFontListTypeface$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.platform.AndroidFontListTypeface$Companion Companion> = $r0;

        $r1 = new androidx.ui.text.font.FontMatcher;

        specialinvoke $r1.<androidx.ui.text.font.FontMatcher: void <init>()>();

        <androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher fontMatcher> = $r1;

        return;
    }

androidx.ui.text.platform.AndroidFontListTypeface$Companion
    private void <init>()
    {
        androidx.ui.text.platform.AndroidFontListTypeface$Companion r0;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.ui.text.font.FontMatcher getFontMatcher()
    {
        androidx.ui.text.platform.AndroidFontListTypeface$Companion r0;
        androidx.ui.text.font.FontMatcher $r1;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface$Companion;

        $r1 = staticinvoke <androidx.ui.text.platform.AndroidFontListTypeface: androidx.ui.text.font.FontMatcher access$getFontMatcher$cp$s-339819085()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.platform.AndroidFontListTypeface$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.text.platform.AndroidFontListTypeface$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.text.platform.AndroidFontListTypeface$Companion: void <init>()>();

        return;
    }

