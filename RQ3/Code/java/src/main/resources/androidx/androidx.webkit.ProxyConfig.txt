androidx.webkit.ProxyConfig
<androidx.webkit.ProxyConfig: java.lang.String MATCH_HTTP>
<androidx.webkit.ProxyConfig: java.lang.String MATCH_HTTPS>
<androidx.webkit.ProxyConfig: java.lang.String MATCH_ALL_SCHEMES>
<androidx.webkit.ProxyConfig: java.lang.String DIRECT>
<androidx.webkit.ProxyConfig: java.lang.String BYPASS_RULE_SIMPLE_NAMES>
<androidx.webkit.ProxyConfig: java.lang.String BYPASS_RULE_REMOVE_IMPLICIT>
<androidx.webkit.ProxyConfig: java.util.List mProxyRules>
<androidx.webkit.ProxyConfig: java.util.List mBypassRules>
<androidx.webkit.ProxyConfig: boolean mReverseBypass>
    public void <init>(java.util.List, java.util.List, boolean)
    {
        androidx.webkit.ProxyConfig r0;
        java.util.List r1, r2;
        boolean z0;

        r0 := @this: androidx.webkit.ProxyConfig;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.ProxyConfig: java.util.List mProxyRules> = r1;

        r0.<androidx.webkit.ProxyConfig: java.util.List mBypassRules> = r2;

        r0.<androidx.webkit.ProxyConfig: boolean mReverseBypass> = z0;

        return;
    }

    public java.util.List getProxyRules()
    {
        androidx.webkit.ProxyConfig r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.webkit.ProxyConfig;

        $r1 = r0.<androidx.webkit.ProxyConfig: java.util.List mProxyRules>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getBypassRules()
    {
        androidx.webkit.ProxyConfig r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.webkit.ProxyConfig;

        $r1 = r0.<androidx.webkit.ProxyConfig: java.util.List mBypassRules>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean isReverseBypassEnabled()
    {
        androidx.webkit.ProxyConfig r0;
        boolean $z0;

        r0 := @this: androidx.webkit.ProxyConfig;

        $z0 = r0.<androidx.webkit.ProxyConfig: boolean mReverseBypass>;

        return $z0;
    }

androidx.webkit.ProxyConfig$Builder
<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules>
<androidx.webkit.ProxyConfig$Builder: java.util.List mBypassRules>
<androidx.webkit.ProxyConfig$Builder: boolean mReverseBypass>
    public void <init>()
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.ProxyConfig$Builder: boolean mReverseBypass> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mBypassRules> = $r2;

        return;
    }

    public void <init>(androidx.webkit.ProxyConfig)
    {
        androidx.webkit.ProxyConfig$Builder r0;
        androidx.webkit.ProxyConfig r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        r1 := @parameter0: androidx.webkit.ProxyConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.ProxyConfig$Builder: boolean mReverseBypass> = 0;

        $r2 = virtualinvoke r1.<androidx.webkit.ProxyConfig: java.util.List getProxyRules()>();

        r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules> = $r2;

        $r3 = virtualinvoke r1.<androidx.webkit.ProxyConfig: java.util.List getBypassRules()>();

        r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mBypassRules> = $r3;

        $z0 = virtualinvoke r1.<androidx.webkit.ProxyConfig: boolean isReverseBypassEnabled()>();

        r0.<androidx.webkit.ProxyConfig$Builder: boolean mReverseBypass> = $z0;

        return;
    }

    public androidx.webkit.ProxyConfig build()
    {
        androidx.webkit.ProxyConfig$Builder r0;
        androidx.webkit.ProxyConfig $r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $r1 = new androidx.webkit.ProxyConfig;

        $r2 = specialinvoke r0.<androidx.webkit.ProxyConfig$Builder: java.util.List proxyRules()>();

        $r3 = specialinvoke r0.<androidx.webkit.ProxyConfig$Builder: java.util.List bypassRules()>();

        $z0 = specialinvoke r0.<androidx.webkit.ProxyConfig$Builder: boolean reverseBypass()>();

        specialinvoke $r1.<androidx.webkit.ProxyConfig: void <init>(java.util.List,java.util.List,boolean)>($r2, $r3, $z0);

        return $r1;
    }

    public androidx.webkit.ProxyConfig$Builder addProxyRule(java.lang.String)
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.lang.String r1;
        androidx.webkit.ProxyConfig$ProxyRule $r2;
        java.util.List $r3;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules>;

        $r2 = new androidx.webkit.ProxyConfig$ProxyRule;

        specialinvoke $r2.<androidx.webkit.ProxyConfig$ProxyRule: void <init>(java.lang.String)>(r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    public androidx.webkit.ProxyConfig$Builder addProxyRule(java.lang.String, java.lang.String)
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.lang.String r1, r2;
        androidx.webkit.ProxyConfig$ProxyRule $r3;
        java.util.List $r4;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules>;

        $r3 = new androidx.webkit.ProxyConfig$ProxyRule;

        specialinvoke $r3.<androidx.webkit.ProxyConfig$ProxyRule: void <init>(java.lang.String,java.lang.String)>(r2, r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public androidx.webkit.ProxyConfig$Builder addBypassRule(java.lang.String)
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mBypassRules>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.webkit.ProxyConfig$Builder addDirect(java.lang.String)
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.lang.String r1;
        androidx.webkit.ProxyConfig$ProxyRule $r2;
        java.util.List $r3;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules>;

        $r2 = new androidx.webkit.ProxyConfig$ProxyRule;

        specialinvoke $r2.<androidx.webkit.ProxyConfig$ProxyRule: void <init>(java.lang.String,java.lang.String)>(r1, "direct://");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    public androidx.webkit.ProxyConfig$Builder addDirect()
    {
        androidx.webkit.ProxyConfig$Builder r0, $r1;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $r1 = virtualinvoke r0.<androidx.webkit.ProxyConfig$Builder: androidx.webkit.ProxyConfig$Builder addDirect(java.lang.String)>("*");

        return $r1;
    }

    public androidx.webkit.ProxyConfig$Builder bypassSimpleHostnames()
    {
        androidx.webkit.ProxyConfig$Builder r0, $r1;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $r1 = virtualinvoke r0.<androidx.webkit.ProxyConfig$Builder: androidx.webkit.ProxyConfig$Builder addBypassRule(java.lang.String)>("<local>");

        return $r1;
    }

    public androidx.webkit.ProxyConfig$Builder removeImplicitRules()
    {
        androidx.webkit.ProxyConfig$Builder r0, $r1;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $r1 = virtualinvoke r0.<androidx.webkit.ProxyConfig$Builder: androidx.webkit.ProxyConfig$Builder addBypassRule(java.lang.String)>("<-loopback>");

        return $r1;
    }

    public androidx.webkit.ProxyConfig$Builder setReverseBypassEnabled(boolean)
    {
        androidx.webkit.ProxyConfig$Builder r0;
        boolean z0;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.webkit.ProxyConfig$Builder: boolean mReverseBypass> = z0;

        return r0;
    }

    private java.util.List proxyRules()
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.util.List $r1;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $r1 = r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mProxyRules>;

        return $r1;
    }

    private java.util.List bypassRules()
    {
        androidx.webkit.ProxyConfig$Builder r0;
        java.util.List $r1;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $r1 = r0.<androidx.webkit.ProxyConfig$Builder: java.util.List mBypassRules>;

        return $r1;
    }

    private boolean reverseBypass()
    {
        androidx.webkit.ProxyConfig$Builder r0;
        boolean $z0;

        r0 := @this: androidx.webkit.ProxyConfig$Builder;

        $z0 = r0.<androidx.webkit.ProxyConfig$Builder: boolean mReverseBypass>;

        return $z0;
    }

androidx.webkit.ProxyConfig$ProxyRule
<androidx.webkit.ProxyConfig$ProxyRule: java.lang.String mSchemeFilter>
<androidx.webkit.ProxyConfig$ProxyRule: java.lang.String mUrl>
    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.webkit.ProxyConfig$ProxyRule r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.webkit.ProxyConfig$ProxyRule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.ProxyConfig$ProxyRule: java.lang.String mSchemeFilter> = r1;

        r0.<androidx.webkit.ProxyConfig$ProxyRule: java.lang.String mUrl> = r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        androidx.webkit.ProxyConfig$ProxyRule r0;
        java.lang.String r1;

        r0 := @this: androidx.webkit.ProxyConfig$ProxyRule;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.webkit.ProxyConfig$ProxyRule: void <init>(java.lang.String,java.lang.String)>("*", r1);

        return;
    }

    public java.lang.String getSchemeFilter()
    {
        androidx.webkit.ProxyConfig$ProxyRule r0;
        java.lang.String $r1;

        r0 := @this: androidx.webkit.ProxyConfig$ProxyRule;

        $r1 = r0.<androidx.webkit.ProxyConfig$ProxyRule: java.lang.String mSchemeFilter>;

        return $r1;
    }

    public java.lang.String getUrl()
    {
        androidx.webkit.ProxyConfig$ProxyRule r0;
        java.lang.String $r1;

        r0 := @this: androidx.webkit.ProxyConfig$ProxyRule;

        $r1 = r0.<androidx.webkit.ProxyConfig$ProxyRule: java.lang.String mUrl>;

        return $r1;
    }

androidx.webkit.ProxyConfig$ProxyScheme
