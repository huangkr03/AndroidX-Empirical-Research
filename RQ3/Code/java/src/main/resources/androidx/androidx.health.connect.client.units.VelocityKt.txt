androidx.health.connect.client.units.VelocityKt
    public static final androidx.health.connect.client.units.Velocity getMetersPerSecond(double)
    {
        double $d0;
        androidx.health.connect.client.units.Velocity$Companion $r0;
        androidx.health.connect.client.units.Velocity $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Velocity: androidx.health.connect.client.units.Velocity$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Velocity$Companion: androidx.health.connect.client.units.Velocity metersPerSecond(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Velocity getMetersPerSecond(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getMetersPerSecond(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getMetersPerSecond(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getMetersPerSecond(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getMetersPerSecond(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getMetersPerSecond(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getKilometersPerHour(double)
    {
        double $d0;
        androidx.health.connect.client.units.Velocity$Companion $r0;
        androidx.health.connect.client.units.Velocity $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Velocity: androidx.health.connect.client.units.Velocity$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Velocity$Companion: androidx.health.connect.client.units.Velocity kilometersPerHour(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Velocity getKilometersPerHour(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getKilometersPerHour(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getKilometersPerHour(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getKilometersPerHour(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getKilometersPerHour(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getKilometersPerHour(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getMilesPerHour(double)
    {
        double $d0;
        androidx.health.connect.client.units.Velocity$Companion $r0;
        androidx.health.connect.client.units.Velocity $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Velocity: androidx.health.connect.client.units.Velocity$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Velocity$Companion: androidx.health.connect.client.units.Velocity milesPerHour(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Velocity getMilesPerHour(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getMilesPerHour(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getMilesPerHour(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getMilesPerHour(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Velocity getMilesPerHour(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Velocity $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.VelocityKt: androidx.health.connect.client.units.Velocity getMilesPerHour(double)>($d0);

        return $r0;
    }

