androidx.appsearch.app.SetSchemaRequest
<androidx.appsearch.app.SetSchemaRequest: int READ_SMS>
<androidx.appsearch.app.SetSchemaRequest: int READ_CALENDAR>
<androidx.appsearch.app.SetSchemaRequest: int READ_CONTACTS>
<androidx.appsearch.app.SetSchemaRequest: int READ_EXTERNAL_STORAGE>
<androidx.appsearch.app.SetSchemaRequest: int READ_HOME_APP_SEARCH_DATA>
<androidx.appsearch.app.SetSchemaRequest: int READ_ASSISTANT_APP_SEARCH_DATA>
<androidx.appsearch.app.SetSchemaRequest: java.util.Set mSchemas>
<androidx.appsearch.app.SetSchemaRequest: java.util.Set mSchemasNotDisplayedBySystem>
<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPackages>
<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPermissions>
<androidx.appsearch.app.SetSchemaRequest: java.util.Map mMigrators>
<androidx.appsearch.app.SetSchemaRequest: boolean mForceOverride>
<androidx.appsearch.app.SetSchemaRequest: int mVersion>
    void <init>(java.util.Set, java.util.Set, java.util.Map, java.util.Map, java.util.Map, boolean, int)
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        java.util.Set r1, r2, $r7, $r9;
        java.util.Map r3, r4, r5, $r11, $r13, $r15;
        boolean z0;
        int i0;
        java.lang.Object $r6, $r8, $r10, $r12, $r14;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.util.Map;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (java.util.Set) $r6;

        r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Set mSchemas> = $r7;

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.util.Set) $r8;

        r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Set mSchemasNotDisplayedBySystem> = $r9;

        $r10 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r11 = (java.util.Map) $r10;

        r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPackages> = $r11;

        $r12 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r13 = (java.util.Map) $r12;

        r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPermissions> = $r13;

        $r14 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r15 = (java.util.Map) $r14;

        r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mMigrators> = $r15;

        r0.<androidx.appsearch.app.SetSchemaRequest: boolean mForceOverride> = z0;

        r0.<androidx.appsearch.app.SetSchemaRequest: int mVersion> = i0;

        return;
    }

    public java.util.Set getSchemas()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        java.util.Set $r1, $r2;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $r1 = r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Set mSchemas>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public java.util.Set getSchemasNotDisplayedBySystem()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        java.util.Set $r1, $r2;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $r1 = r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Set mSchemasNotDisplayedBySystem>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public java.util.Map getSchemasVisibleToPackages()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        androidx.collection.ArrayMap r1, $r4;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r11;
        androidx.collection.ArraySet $r9;
        java.lang.String $r10;
        java.util.Collection $r12;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $r4 = new androidx.collection.ArrayMap;

        specialinvoke $r4.<androidx.collection.ArrayMap: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPackages>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r8;

        $r9 = new androidx.collection.ArraySet;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.Collection) $r11;

        specialinvoke $r9.<androidx.collection.ArraySet: void <init>(java.util.Collection)>($r12);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

        goto label1;

     label2:
        return r1;
    }

    public java.util.Map getRequiredPermissionsForSchemaTypeVisibility()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        java.util.Map $r1;
        androidx.collection.ArrayMap $r2;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $r1 = r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPermissions>;

        $r2 = staticinvoke <androidx.appsearch.app.SetSchemaRequest: androidx.collection.ArrayMap deepCopy(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Map getMigrators()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        java.util.Map $r1, $r2;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $r1 = r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mMigrators>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Map getSchemasVisibleToPackagesInternal()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        java.util.Map $r1;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $r1 = r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map mSchemasVisibleToPackages>;

        return $r1;
    }

    public boolean isForceOverride()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        boolean $z0;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $z0 = r0.<androidx.appsearch.app.SetSchemaRequest: boolean mForceOverride>;

        return $z0;
    }

    public int getVersion()
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        int $i0;

        r0 := @this: androidx.appsearch.app.SetSchemaRequest;

        $i0 = r0.<androidx.appsearch.app.SetSchemaRequest: int mVersion>;

        return $i0;
    }

    static androidx.collection.ArrayMap deepCopy(java.util.Map)
    {
        java.util.Map r0;
        androidx.collection.ArrayMap r1, $r7;
        java.util.Iterator r2, r5;
        java.util.Map$Entry r3;
        androidx.collection.ArraySet r4, $r10, $r17;
        java.util.Set r6, $r8, $r12;
        int $i0;
        boolean $z0, $z1;
        java.lang.Object $r9, $r11, $r13, $r16;
        java.lang.String $r14;

        r0 := @parameter0: java.util.Map;

        $r7 = new androidx.collection.ArrayMap;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        specialinvoke $r7.<androidx.collection.ArrayMap: void <init>(int)>($i0);

        r1 = $r7;

        $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r9;

        $r10 = new androidx.collection.ArraySet;

        specialinvoke $r10.<androidx.collection.ArraySet: void <init>()>();

        r4 = $r10;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.Set) $r11;

        r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Set) $r16;

        $r17 = new androidx.collection.ArraySet;

        specialinvoke $r17.<androidx.collection.ArraySet: void <init>(java.util.Collection)>(r6);

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label2;

     label3:
        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.lang.String) $r13;

        virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r4);

        goto label1;

     label4:
        return r1;
    }

