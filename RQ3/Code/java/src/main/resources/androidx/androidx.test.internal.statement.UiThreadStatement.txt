androidx.test.internal.statement.UiThreadStatement
<androidx.test.internal.statement.UiThreadStatement: org.junit.runners.model.Statement base>
<androidx.test.internal.statement.UiThreadStatement: boolean runOnUiThread>
    static volatile org.junit.runners.model.Statement '-$$Nest$fgetbase'(androidx.test.internal.statement.UiThreadStatement)
    {
        androidx.test.internal.statement.UiThreadStatement r0;
        org.junit.runners.model.Statement $r1;

        r0 := @parameter0: androidx.test.internal.statement.UiThreadStatement;

        $r1 = r0.<androidx.test.internal.statement.UiThreadStatement: org.junit.runners.model.Statement base>;

        return $r1;
    }

    public void <init>(org.junit.runners.model.Statement, boolean)
    {
        androidx.test.internal.statement.UiThreadStatement r0;
        org.junit.runners.model.Statement r1;
        boolean z0;

        r0 := @this: androidx.test.internal.statement.UiThreadStatement;

        r1 := @parameter0: org.junit.runners.model.Statement;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        r0.<androidx.test.internal.statement.UiThreadStatement: org.junit.runners.model.Statement base> = r1;

        r0.<androidx.test.internal.statement.UiThreadStatement: boolean runOnUiThread> = z0;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        androidx.test.internal.statement.UiThreadStatement r0;
        java.util.concurrent.atomic.AtomicReference r1, $r4;
        java.lang.Throwable r2;
        boolean $z0;
        org.junit.runners.model.Statement $r3;
        android.app.Instrumentation $r5;
        androidx.test.internal.statement.UiThreadStatement$1 $r6;
        java.lang.Object $r7;

        r0 := @this: androidx.test.internal.statement.UiThreadStatement;

        $z0 = r0.<androidx.test.internal.statement.UiThreadStatement: boolean runOnUiThread>;

        if $z0 == 0 goto label2;

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r6 = new androidx.test.internal.statement.UiThreadStatement$1;

        specialinvoke $r6.<androidx.test.internal.statement.UiThreadStatement$1: void <init>(androidx.test.internal.statement.UiThreadStatement,java.util.concurrent.atomic.AtomicReference)>(r0, r1);

        virtualinvoke $r5.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r6);

        $r7 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (java.lang.Throwable) $r7;

        if r2 == null goto label1;

        throw r2;

     label1:
        goto label3;

     label2:
        $r3 = r0.<androidx.test.internal.statement.UiThreadStatement: org.junit.runners.model.Statement base>;

        virtualinvoke $r3.<org.junit.runners.model.Statement: void evaluate()>();

     label3:
        return;
    }

