androidx.media3.exoplayer.source.MergingMediaSource
<androidx.media3.exoplayer.source.MergingMediaSource: int PERIOD_COUNT_UNSET>
<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM>
<androidx.media3.exoplayer.source.MergingMediaSource: boolean adjustPeriodTimeOffsets>
<androidx.media3.exoplayer.source.MergingMediaSource: boolean clipDurations>
<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>
<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>
<androidx.media3.exoplayer.source.MergingMediaSource: java.util.ArrayList pendingTimelineSources>
<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>
<androidx.media3.exoplayer.source.MergingMediaSource: java.util.Map clippedDurationsUs>
<androidx.media3.exoplayer.source.MergingMediaSource: com.google.common.collect.Multimap clippedMediaPeriods>
<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount>
<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs>
<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError>
    public transient void <init>(androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource[] r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource[];

        specialinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void <init>(boolean,androidx.media3.exoplayer.source.MediaSource[])>(0, r1);

        return;
    }

    public transient void <init>(boolean, androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        boolean z0;
        androidx.media3.exoplayer.source.MediaSource[] r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource[];

        specialinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void <init>(boolean,boolean,androidx.media3.exoplayer.source.MediaSource[])>(z0, 0, r1);

        return;
    }

    public transient void <init>(boolean, boolean, androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        boolean z0, z1;
        androidx.media3.exoplayer.source.MediaSource[] r1;
        androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: androidx.media3.exoplayer.source.MediaSource[];

        $r2 = new androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory;

        specialinvoke $r2.<androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void <init>(boolean,boolean,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.source.MediaSource[])>(z0, z1, $r2, r1);

        return;
    }

    public transient void <init>(boolean, boolean, androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory, androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        boolean z0, z1;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r1;
        androidx.media3.exoplayer.source.MediaSource[] r2;
        java.util.ArrayList $r3;
        java.util.List $r4;
        int $i0;
        androidx.media3.common.Timeline[] $r5;
        long[][] $r6;
        java.util.HashMap $r7;
        com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys $r8;
        com.google.common.collect.MultimapBuilder$ListMultimapBuilder $r9;
        com.google.common.collect.ListMultimap $r10;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        r2 := @parameter3: androidx.media3.exoplayer.source.MediaSource[];

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: boolean adjustPeriodTimeOffsets> = z0;

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: boolean clipDurations> = z1;

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources> = r2;

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = r1;

        $r3 = new java.util.ArrayList;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.ArrayList pendingTimelineSources> = $r3;

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount> = -1;

        $i0 = lengthof r2;

        $r5 = newarray (androidx.media3.common.Timeline)[$i0];

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines> = $r5;

        $r6 = newarray (long[])[0];

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.Map clippedDurationsUs> = $r7;

        $r8 = staticinvoke <com.google.common.collect.MultimapBuilder: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys()>();

        $r9 = virtualinvoke $r8.<com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys: com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues()>();

        $r10 = virtualinvoke $r9.<com.google.common.collect.MultimapBuilder$ListMultimapBuilder: com.google.common.collect.ListMultimap build()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: com.google.common.collect.Multimap clippedMediaPeriods> = $r10;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource[] $r1, $r2;
        int $i0;
        androidx.media3.exoplayer.source.MediaSource $r3;
        androidx.media3.common.MediaItem $r4;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $r3 = $r2[0];

        $r4 = interfaceinvoke $r3.<androidx.media3.exoplayer.source.MediaSource: androidx.media3.common.MediaItem getMediaItem()>();

        goto label2;

     label1:
        $r4 = <androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM>;

     label2:
        return $r4;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.exoplayer.source.MediaSource[] $r2, $r4;
        int $i0, i1;
        java.lang.Integer $r3;
        androidx.media3.exoplayer.source.MediaSource $r5;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void prepareSourceInternal(androidx.media3.datasource.TransferListener)>(r1);

        i1 = 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $r5 = $r4[i1];

        virtualinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void prepareChildSource(java.lang.Object,androidx.media3.exoplayer.source.MediaSource)>($r3, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void maybeThrowSourceInfoRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException $r1, $r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError>;

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void maybeThrowSourceInfoRefreshError()>();

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1, r4;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0, $l4, $l5, $l6;
        androidx.media3.exoplayer.source.MediaPeriod[] r3;
        int i1, $i2, $i3, i7;
        androidx.media3.exoplayer.source.MediaSource[] $r5, $r26;
        androidx.media3.common.Timeline[] $r6, $r23;
        java.lang.Object $r7, $r14, $r16, $r18, $r21, $r25;
        androidx.media3.common.Timeline $r8, $r24;
        androidx.media3.exoplayer.source.MergingMediaPeriod $r9;
        long[][] $r10, $r27;
        long[] $r11, $r28;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r12;
        boolean $z0;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r13, $r20;
        java.util.Map $r15;
        java.lang.Long $r17, $r19;
        com.google.common.collect.Multimap $r22;
        androidx.media3.exoplayer.source.MediaSource $r29;
        androidx.media3.exoplayer.source.MediaPeriod $r30, r31;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $i2 = lengthof $r5;

        r3 = newarray (androidx.media3.exoplayer.source.MediaPeriod)[$i2];

        $r6 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $r8 = $r6[0];

        $r7 = r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        i1 = virtualinvoke $r8.<androidx.media3.common.Timeline: int getIndexOfPeriod(java.lang.Object)>($r7);

        i7 = 0;

     label1:
        $i3 = lengthof r3;

        if i7 >= $i3 goto label2;

        $r23 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $r24 = $r23[i7];

        $r25 = virtualinvoke $r24.<androidx.media3.common.Timeline: java.lang.Object getUidOfPeriod(int)>(i1);

        r4 = virtualinvoke r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithPeriodUid(java.lang.Object)>($r25);

        $r26 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $r29 = $r26[i7];

        $r27 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs>;

        $r28 = $r27[i1];

        $l5 = $r28[i7];

        $l6 = l0 - $l5;

        $r30 = interfaceinvoke $r29.<androidx.media3.exoplayer.source.MediaSource: androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long)>(r4, r2, $l6);

        r3[i7] = $r30;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r9 = new androidx.media3.exoplayer.source.MergingMediaPeriod;

        $r12 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $r10 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs>;

        $r11 = $r10[i1];

        specialinvoke $r9.<androidx.media3.exoplayer.source.MergingMediaPeriod: void <init>(androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,long[],androidx.media3.exoplayer.source.MediaPeriod[])>($r12, $r11, r3);

        r31 = $r9;

        $z0 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: boolean clipDurations>;

        if $z0 == 0 goto label3;

        $r13 = new androidx.media3.exoplayer.source.ClippingMediaPeriod;

        $r15 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.Map clippedDurationsUs>;

        $r14 = r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r17 = (java.lang.Long) $r16;

        $r18 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r17);

        $r19 = (java.lang.Long) $r18;

        $l4 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

        specialinvoke $r13.<androidx.media3.exoplayer.source.ClippingMediaPeriod: void <init>(androidx.media3.exoplayer.source.MediaPeriod,boolean,long,long)>(r31, 1, 0L, $l4);

        r31 = $r13;

        $r22 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: com.google.common.collect.Multimap clippedMediaPeriods>;

        $r21 = r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        $r20 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) r31;

        interfaceinvoke $r22.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r21, $r20);

     label3:
        return r31;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        java.util.Map$Entry r1;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.source.MediaSource[] $r2, $r17;
        androidx.media3.exoplayer.source.MediaSource $r3;
        androidx.media3.exoplayer.source.MediaPeriod $r4, r13;
        com.google.common.collect.Multimap $r5, $r10;
        java.util.Collection $r6;
        java.lang.Object $r7, $r8, $r11, $r12;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r9, r14;
        java.util.Iterator r15;
        androidx.media3.exoplayer.source.MergingMediaPeriod r16;
        int i0, $i1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r13 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $z0 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: boolean clipDurations>;

        if $z0 == 0 goto label4;

        r14 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) r13;

        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: com.google.common.collect.Multimap clippedMediaPeriods>;

        $r6 = interfaceinvoke $r5.<com.google.common.collect.Multimap: java.util.Collection entries()>();

        r15 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) $r8;

        $z2 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r14);

        if $z2 == 0 goto label2;

        $r10 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: com.google.common.collect.Multimap clippedMediaPeriods>;

        $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r10.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>($r11, $r12);

        goto label3;

     label2:
        goto label1;

     label3:
        r13 = r14.<androidx.media3.exoplayer.source.ClippingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

     label4:
        r16 = (androidx.media3.exoplayer.source.MergingMediaPeriod) r13;

        i0 = 0;

     label5:
        $r17 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $i1 = lengthof $r17;

        if i0 >= $i1 goto label6;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        $r3 = $r2[i0];

        $r4 = virtualinvoke r16.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod getChildPeriod(int)>(i0);

        interfaceinvoke $r3.<androidx.media3.exoplayer.source.MediaSource: void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)>($r4);

        i0 = i0 + 1;

        goto label5;

     label6:
        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.common.Timeline[] $r1;
        java.util.ArrayList $r2, $r4;
        androidx.media3.exoplayer.source.MediaSource[] $r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void releaseSourceInternal()>();

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount> = -1;

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError> = null;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.ArrayList pendingTimelineSources>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.ArrayList pendingTimelineSources>;

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource[] mediaSources>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r4, $r3);

        return;
    }

    protected void onChildSourceInfoRefreshed(java.lang.Integer, androidx.media3.exoplayer.source.MediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        java.lang.Integer r1;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.common.Timeline r3, r18, r19;
        androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException $r4, r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        long[][] $r5, $r13;
        java.util.ArrayList $r6, $r8;
        androidx.media3.common.Timeline[] $r7, $r9, $r12;
        boolean $z1, $z2, $z3;
        java.util.Map $r11;
        java.lang.Object r15;
        androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline r17;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        r3 := @parameter2: androidx.media3.common.Timeline;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError>;

        if $r4 == null goto label1;

        return;

     label1:
        $i0 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount>;

        if $i0 != -1 goto label2;

        $i7 = virtualinvoke r3.<androidx.media3.common.Timeline: int getPeriodCount()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount> = $i7;

        goto label3;

     label2:
        $i1 = virtualinvoke r3.<androidx.media3.common.Timeline: int getPeriodCount()>();

        $i2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount>;

        if $i1 == $i2 goto label3;

        r16 = new androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException;

        specialinvoke r16.<androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException: void <init>(int)>(0);

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError> = r16;

        return;

     label3:
        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs>;

        $i3 = lengthof $r5;

        if $i3 != 0 goto label4;

        $i6 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount>;

        $r12 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $i5 = lengthof $r12;

        $r13 = newmultiarray (long)[$i6][$i5];

        r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs> = $r13;

     label4:
        $r6 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.ArrayList pendingTimelineSources>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $r7 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r7[$i4] = r3;

        $r8 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.ArrayList pendingTimelineSources>;

        $z1 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label7;

        $z2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: boolean adjustPeriodTimeOffsets>;

        if $z2 == 0 goto label5;

        specialinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void computePeriodTimeOffsets()>();

     label5:
        $r9 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        r15 = $r9[0];

        $z3 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: boolean clipDurations>;

        if $z3 == 0 goto label6;

        specialinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void updateClippedDuration()>();

        r17 = new androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline;

        $r11 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.Map clippedDurationsUs>;

        r18 = (androidx.media3.common.Timeline) r15;

        specialinvoke r17.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: void <init>(androidx.media3.common.Timeline,java.util.Map)>(r18, $r11);

        r15 = r17;

     label6:
        r19 = (androidx.media3.common.Timeline) r15;

        virtualinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>(r19);

     label7:
        return;
    }

    protected androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Integer, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        java.lang.Integer r1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r2, $r3;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    private void computePeriodTimeOffsets()
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.common.Timeline$Period r1, $r2, $r5, $r9;
        long l0, l1, $l3, $l5, $l6;
        int $i2, $i4, i7, i8;
        androidx.media3.common.Timeline[] $r3, $r6, $r7;
        androidx.media3.common.Timeline $r4, $r8;
        long[][] $r10;
        long[] $r11;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        $r2 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r2.<androidx.media3.common.Timeline$Period: void <init>()>();

        r1 = $r2;

        i7 = 0;

     label1:
        $i2 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount>;

        if i7 >= $i2 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i7, r1);

        $l3 = virtualinvoke $r5.<androidx.media3.common.Timeline$Period: long getPositionInWindowUs()>();

        l0 = neg $l3;

        i8 = 1;

     label2:
        $r6 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $i4 = lengthof $r6;

        if i8 >= $i4 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $r8 = $r7[i8];

        $r9 = virtualinvoke $r8.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i7, r1);

        $l5 = virtualinvoke $r9.<androidx.media3.common.Timeline$Period: long getPositionInWindowUs()>();

        l1 = neg $l5;

        $r10 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs>;

        $r11 = $r10[i7];

        $l6 = l0 - l1;

        $r11[i8] = $l6;

        i8 = i8 + 1;

        goto label2;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        return;
    }

    private void updateClippedDuration()
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        androidx.media3.common.Timeline$Period r1, $r3, $r15;
        androidx.media3.exoplayer.source.ClippingMediaPeriod r2;
        long l0, $l4, l8, l10;
        int $i1, $i2, i7, i9;
        androidx.media3.common.Timeline[] $r4, $r5, $r13;
        androidx.media3.common.Timeline $r6, $r14;
        java.util.Map $r7;
        java.lang.Long $r8;
        com.google.common.collect.Multimap $r10;
        java.util.Collection $r11;
        boolean $z0;
        java.lang.Object $r12, r18;
        byte $b3, $b5, $b6;
        long[][] $r16;
        long[] $r17;
        java.util.Iterator r19;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        $r3 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r3.<androidx.media3.common.Timeline$Period: void <init>()>();

        r1 = $r3;

        i7 = 0;

     label1:
        $i1 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: int periodCount>;

        if i7 >= $i1 goto label9;

        l8 = -9223372036854775808L;

        i9 = 0;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $i2 = lengthof $r4;

        if i9 >= $i2 goto label6;

        $r13 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $r14 = $r13[i9];

        $r15 = virtualinvoke $r14.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i7, r1);

        l10 = virtualinvoke $r15.<androidx.media3.common.Timeline$Period: long getDurationUs()>();

        $b3 = l10 cmp -9223372036854775807L;

        if $b3 != 0 goto label3;

        goto label5;

     label3:
        $r16 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: long[][] periodTimeOffsetsUs>;

        $r17 = $r16[i7];

        $l4 = $r17[i9];

        l0 = l10 + $l4;

        $b5 = l8 cmp -9223372036854775808L;

        if $b5 == 0 goto label4;

        $b6 = l0 cmp l8;

        if $b6 >= 0 goto label5;

     label4:
        l8 = l0;

     label5:
        i9 = i9 + 1;

        goto label2;

     label6:
        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.Timeline[] timelines>;

        $r6 = $r5[0];

        r18 = virtualinvoke $r6.<androidx.media3.common.Timeline: java.lang.Object getUidOfPeriod(int)>(i7);

        $r7 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: java.util.Map clippedDurationsUs>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r8);

        $r10 = r0.<androidx.media3.exoplayer.source.MergingMediaSource: com.google.common.collect.Multimap clippedMediaPeriods>;

        $r11 = interfaceinvoke $r10.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(r18);

        r19 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r12 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) $r12;

        virtualinvoke r2.<androidx.media3.exoplayer.source.ClippingMediaPeriod: void updateClipping(long,long)>(0L, l8);

        goto label7;

     label8:
        i7 = i7 + 1;

        goto label1;

     label9:
        return;
    }

    protected volatile androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r2, $r4;
        java.lang.Integer $r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r3 = (java.lang.Integer) r1;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Integer,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r3, r2);

        return $r4;
    }

    protected volatile void onChildSourceInfoRefreshed(java.lang.Object, androidx.media3.exoplayer.source.MediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.MergingMediaSource r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.common.Timeline r3;
        java.lang.Integer $r4;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        r3 := @parameter2: androidx.media3.common.Timeline;

        $r4 = (java.lang.Integer) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.source.MergingMediaSource: void onChildSourceInfoRefreshed(java.lang.Integer,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        androidx.media3.common.MediaItem$Builder $r0, $r1;
        androidx.media3.common.MediaItem $r2;

        $r0 = new androidx.media3.common.MediaItem$Builder;

        specialinvoke $r0.<androidx.media3.common.MediaItem$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setMediaId(java.lang.String)>("MergingMediaSource");

        $r2 = virtualinvoke $r1.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        <androidx.media3.exoplayer.source.MergingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM> = $r2;

        return;
    }

androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline
<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] periodDurationsUs>
<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] windowDurationsUs>
    public void <init>(androidx.media3.common.Timeline, java.util.Map)
    {
        androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline r0;
        androidx.media3.common.Timeline r1;
        java.util.Map r2;
        int i0, $i2, $i6, $i12, i14, i15, i16;
        androidx.media3.common.Timeline$Window r3, $r6, $r19;
        androidx.media3.common.Timeline$Period r4, $r8;
        long l1, $l4, $l7, $l8, $l9, $l10, $l11, $l13, $l17;
        long[] $r5, $r7, $r15, $r16, $r17, $r18;
        java.lang.Object $r10, $r11, $r13;
        java.lang.Long $r12, $r14;
        byte $b3, $b5;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline;

        r1 := @parameter0: androidx.media3.common.Timeline;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: void <init>(androidx.media3.common.Timeline)>(r1);

        i0 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        $i2 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r5 = newarray (long)[$i2];

        r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] windowDurationsUs> = $r5;

        $r6 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r6.<androidx.media3.common.Timeline$Window: void <init>()>();

        r3 = $r6;

        i14 = 0;

     label1:
        if i14 >= i0 goto label2;

        $r18 = r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] windowDurationsUs>;

        $r19 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i14, r3);

        $l13 = $r19.<androidx.media3.common.Timeline$Window: long durationUs>;

        $r18[i14] = $l13;

        i14 = i14 + 1;

        goto label1;

     label2:
        i15 = virtualinvoke r1.<androidx.media3.common.Timeline: int getPeriodCount()>();

        $r7 = newarray (long)[i15];

        r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] periodDurationsUs> = $r7;

        $r8 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r8.<androidx.media3.common.Timeline$Period: void <init>()>();

        r4 = $r8;

        i16 = 0;

     label3:
        if i16 >= i15 goto label7;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i16, r4, 1);

        $r10 = r4.<androidx.media3.common.Timeline$Period: java.lang.Object uid>;

        $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (java.lang.Long) $r11;

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        $r14 = (java.lang.Long) $r13;

        l1 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $r15 = r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] periodDurationsUs>;

        $i12 = i16;

        $b3 = l1 cmp -9223372036854775808L;

        if $b3 == 0 goto label4;

        $l17 = l1;

        goto label5;

     label4:
        $l17 = r4.<androidx.media3.common.Timeline$Period: long durationUs>;

     label5:
        $r15[$i12] = $l17;

        $l4 = r4.<androidx.media3.common.Timeline$Period: long durationUs>;

        $b5 = $l4 cmp -9223372036854775807L;

        if $b5 == 0 goto label6;

        $r16 = r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] windowDurationsUs>;

        $i6 = r4.<androidx.media3.common.Timeline$Period: int windowIndex>;

        $l10 = $r16[$i6];

        $l8 = r4.<androidx.media3.common.Timeline$Period: long durationUs>;

        $r17 = r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] periodDurationsUs>;

        $l7 = $r17[i16];

        $l9 = $l8 - $l7;

        $l11 = $l10 - $l9;

        $r16[$i6] = $l11;

     label6:
        i16 = i16 + 1;

        goto label3;

     label7:
        return;
    }

    public androidx.media3.common.Timeline$Window getWindow(int, androidx.media3.common.Timeline$Window, long)
    {
        androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline r0;
        int i0;
        androidx.media3.common.Timeline$Window r1;
        long l1, $l2, $l3, $l5, $l7, $l8, $l9;
        long[] $r3;
        byte $b4, $b6;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long)>(i0, r1, l1);

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] windowDurationsUs>;

        $l2 = $r3[i0];

        r1.<androidx.media3.common.Timeline$Window: long durationUs> = $l2;

        $l3 = r1.<androidx.media3.common.Timeline$Window: long durationUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 == 0 goto label1;

        $l5 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 != 0 goto label2;

     label1:
        $l9 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        goto label3;

     label2:
        $l8 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        $l7 = r1.<androidx.media3.common.Timeline$Window: long durationUs>;

        $l9 = staticinvoke <java.lang.Math: long min(long,long)>($l8, $l7);

     label3:
        r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs> = $l9;

        return r1;
    }

    public androidx.media3.common.Timeline$Period getPeriod(int, androidx.media3.common.Timeline$Period, boolean)
    {
        androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline r0;
        int i0;
        androidx.media3.common.Timeline$Period r1;
        boolean z0;
        long[] $r3;
        long $l1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i0, r1, z0);

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline: long[] periodDurationsUs>;

        $l1 = $r3[i0];

        r1.<androidx.media3.common.Timeline$Period: long durationUs> = $l1;

        return r1;
    }

androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException$Reason
androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException
<androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException: int REASON_PERIOD_COUNT_MISMATCH>
<androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException: int reason>
    public void <init>(int)
    {
        androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException: int reason> = i0;

        return;
    }

