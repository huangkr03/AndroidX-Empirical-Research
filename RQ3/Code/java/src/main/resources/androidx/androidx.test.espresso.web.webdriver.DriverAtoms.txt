androidx.test.espresso.web.webdriver.DriverAtoms
    public static androidx.test.espresso.web.model.Atom clearElement()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom r0;

        r0 = new androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom: void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom-IA)>(null);

        return r0;
    }

    public static androidx.test.espresso.web.model.Atom findElement(androidx.test.espresso.web.webdriver.Locator, java.lang.String)
    {
        androidx.test.espresso.web.webdriver.Locator r0;
        java.lang.String r1, $r4;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom r3;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r5;

        r0 := @parameter0: androidx.test.espresso.web.webdriver.Locator;

        r1 := @parameter1: java.lang.String;

        r2 = new androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom;

        r3 = new androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom;

        $r4 = virtualinvoke r0.<androidx.test.espresso.web.webdriver.Locator: java.lang.String getType()>();

        specialinvoke r3.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: void <init>(java.lang.String,java.lang.String)>($r4, r1);

        $r5 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Landroidx/test/espresso/web/model/ElementReference;");

        specialinvoke r2.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom-IA)>(r3, $r5, null);

        return r2;
    }

    public static androidx.test.espresso.web.model.Atom findMultipleElements(androidx.test.espresso.web.webdriver.Locator, java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom r1;
        androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom r2;
        androidx.test.espresso.web.webdriver.Locator r5;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom r6;

        r5 := @parameter0: androidx.test.espresso.web.webdriver.Locator;

        r0 := @parameter1: java.lang.String;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom;

        $r3 = virtualinvoke r5.<androidx.test.espresso.web.webdriver.Locator: java.lang.String getType()>();

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: void <init>(java.lang.String,java.lang.String,androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom-IA)>($r3, r0, null);

        r2 = new androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom;

        $r4 = virtualinvoke r5.<androidx.test.espresso.web.webdriver.Locator: java.lang.String getType()>();

        specialinvoke r2.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: void <init>(java.lang.String,java.lang.String,androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom-IA)>($r4, r0, null);

        r6 = new androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom;

        specialinvoke r6.<androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom-IA)>(r1, r2, null);

        return r6;
    }

    public static androidx.test.espresso.web.model.Atom getText()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r2;

        r0 = new androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom;

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom: void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom-IA)>(null);

        $r2 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Ljava/lang/String;");

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom-IA)>(r1, $r2, null);

        return r0;
    }

    public static androidx.test.espresso.web.model.Atom selectActiveElement()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r2;

        r0 = new androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom;

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom: void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom-IA)>(null);

        $r2 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Landroidx/test/espresso/web/model/ElementReference;");

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom-IA)>(r1, $r2, null);

        return r0;
    }

    public static androidx.test.espresso.web.model.Atom selectFrameByIdOrName(java.lang.String)
    {
        java.lang.String r0, $r4;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom r1;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom r2;
        java.lang.Object $r3;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r5;

        r0 := @parameter0: java.lang.String;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom;

        r2 = new androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom;

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = (java.lang.String) $r3;

        specialinvoke r2.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom: void <init>(java.lang.String,androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom-IA)>($r4, null);

        $r5 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Landroidx/test/espresso/web/model/WindowReference;");

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom-IA)>(r2, $r5, null);

        return r1;
    }

    public static androidx.test.espresso.web.model.Atom selectFrameByIdOrName(java.lang.String, androidx.test.espresso.web.model.WindowReference)
    {
        java.lang.String r0, $r5;
        androidx.test.espresso.web.model.WindowReference r1, $r7;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom r3;
        java.lang.Object $r4, $r6;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.test.espresso.web.model.WindowReference;

        r2 = new androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom;

        r3 = new androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom;

        $r4 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (androidx.test.espresso.web.model.WindowReference) $r6;

        specialinvoke r3.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: void <init>(java.lang.String,androidx.test.espresso.web.model.WindowReference,androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom-IA)>($r5, $r7, null);

        $r8 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Landroidx/test/espresso/web/model/WindowReference;");

        specialinvoke r2.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom-IA)>(r3, $r8, null);

        return r2;
    }

    public static androidx.test.espresso.web.model.Atom selectFrameByIndex(int)
    {
        int i0;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r2;

        i0 := @parameter0: int;

        r0 = new androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom;

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom: void <init>(int,androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom-IA)>(i0, null);

        $r2 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Landroidx/test/espresso/web/model/WindowReference;");

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom-IA)>(r1, $r2, null);

        return r0;
    }

    public static androidx.test.espresso.web.model.Atom selectFrameByIndex(int, androidx.test.espresso.web.model.WindowReference)
    {
        int i0;
        androidx.test.espresso.web.model.WindowReference r0, $r4;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom r1;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom r2;
        java.lang.Object $r3;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.web.model.WindowReference;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom;

        r2 = new androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom;

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = (androidx.test.espresso.web.model.WindowReference) $r3;

        specialinvoke r2.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: void <init>(int,androidx.test.espresso.web.model.WindowReference,androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom-IA)>(i0, $r4, null);

        $r5 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Landroidx/test/espresso/web/model/WindowReference;");

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom-IA)>(r2, $r5, null);

        return r1;
    }

    public static androidx.test.espresso.web.model.Atom webClick()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom r0;

        r0 = new androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom: void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom-IA)>(null);

        return r0;
    }

    public static androidx.test.espresso.web.model.Atom webKeys(java.lang.String)
    {
        java.lang.String r0, $r3;
        androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom;

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = (java.lang.String) $r2;

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom: void <init>(java.lang.String,androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom-IA)>($r3, null);

        return r1;
    }

    public static androidx.test.espresso.web.model.Atom webScrollIntoView()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer $r2;

        r0 = new androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom;

        r1 = new androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom;

        specialinvoke r1.<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom: void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom-IA)>(null);

        $r2 = staticinvoke <androidx.test.espresso.web.model.Atoms: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDie(java.lang.Class)>(class "Ljava/lang/Boolean;");

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer,androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom-IA)>(r1, $r2, null);

        return r0;
    }

    static volatile java.util.Map '-$$Nest$smmakeLocatorJSON'(androidx.test.espresso.web.webdriver.Locator, java.lang.String)
    {
        androidx.test.espresso.web.webdriver.Locator r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @parameter0: androidx.test.espresso.web.webdriver.Locator;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <androidx.test.espresso.web.webdriver.DriverAtoms: java.util.Map makeLocatorJSON(androidx.test.espresso.web.webdriver.Locator,java.lang.String)>(r0, r1);

        return $r2;
    }

    private static java.util.Map makeLocatorJSON(androidx.test.espresso.web.webdriver.Locator, java.lang.String)
    {
        androidx.test.espresso.web.webdriver.Locator r0;
        java.lang.String r1, $r5;
        java.util.HashMap r2;
        java.util.Map r7, r8;

        r0 := @parameter0: androidx.test.espresso.web.webdriver.Locator;

        r1 := @parameter1: java.lang.String;

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Maps: java.util.HashMap newHashMap()>();

        $r5 = virtualinvoke r0.<androidx.test.espresso.web.webdriver.Locator: java.lang.String getType()>();

        r7 = (java.util.Map) r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        r8 = (java.util.Map) r2;

        return r8;
    }

    private void <init>()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms r0;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom
    private void <init>()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom;

        $r1 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String ACTIVE_ELEMENT_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom-IA r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom;

        r1 := @parameter0: androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ActiveElementSimpleAtom: void <init>()>();

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom
    private void <init>()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom;

        $r1 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String CLEAR_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom-IA r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom;

        r1 := @parameter0: androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom: void <init>()>();

        return;
    }

    public void handleNoElementReference()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom r0;
        java.lang.RuntimeException r1, r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ClearElementSimpleAtom;

        r2 = new java.lang.RuntimeException;

        r1 = r2;

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("clearElement: Need an element to clear!");

        r3 = (java.lang.Throwable) r1;

        throw r3;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String locatorType>
<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String value>
    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom r0;
        java.lang.Object r1;
        androidx.test.espresso.web.model.Evaluation $r2;
        java.util.List $r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.test.espresso.web.model.Evaluation) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.util.List apply(androidx.test.espresso.web.model.Evaluation)>($r2);

        return $r3;
    }

    public java.util.List apply(androidx.test.espresso.web.model.Evaluation)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom r0;
        androidx.test.espresso.web.model.Evaluation r1;
        java.lang.Object r2, r16;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r5, $r6, $r7, $r9, $r11, $r12, $r13;
        androidx.test.espresso.web.webdriver.Locator $r4, $r10;
        java.lang.Iterable $r8;
        androidx.test.espresso.web.model.ElementReference $r14;
        java.util.ArrayList $r15, r17;
        java.util.Iterator r18;
        java.lang.RuntimeException r19, r21, r23, r24;
        java.lang.Object[] r20, r22;
        java.util.List r25, r26, r29;
        java.lang.Throwable r27, r28;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Evaluation;

        r16 = virtualinvoke r1.<androidx.test.espresso.web.model.Evaluation: java.lang.Object getValue()>();

        if r16 != null goto label1;

        $r15 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r25 = (java.util.List) $r15;

        return r25;

     label1:
        $z0 = r16 instanceof java.lang.Iterable;

        if $z0 == 0 goto label4;

        r17 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        $r8 = (java.lang.Iterable) r16;

        r18 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r2 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $z2 = r2 instanceof androidx.test.espresso.web.model.ElementReference;

        if $z2 == 0 goto label3;

        $r14 = (androidx.test.espresso.web.model.ElementReference) r2;

        r26 = (java.util.List) r17;

        interfaceinvoke r26.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label2;

     label3:
        r23 = new java.lang.RuntimeException;

        r19 = r23;

        r20 = newarray (java.lang.Object)[4];

        $r9 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String locatorType>;

        $r10 = staticinvoke <androidx.test.espresso.web.webdriver.Locator: androidx.test.espresso.web.webdriver.Locator forType(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<androidx.test.espresso.web.webdriver.Locator: java.lang.String name()>();

        r20[0] = $r11;

        $r12 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String value>;

        r20[1] = $r12;

        r20[2] = r2;

        r20[3] = r1;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected non-elementReference in findMultipleElements(%s, %s): (%s) all: %s ", r20);

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        r27 = (java.lang.Throwable) r19;

        throw r27;

     label4:
        r24 = new java.lang.RuntimeException;

        r21 = r24;

        r22 = newarray (java.lang.Object)[3];

        $r3 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String locatorType>;

        $r4 = staticinvoke <androidx.test.espresso.web.webdriver.Locator: androidx.test.espresso.web.webdriver.Locator forType(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<androidx.test.espresso.web.webdriver.Locator: java.lang.String name()>();

        r22[0] = $r5;

        $r6 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String value>;

        r22[1] = $r6;

        r22[2] = r1;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected non-iterableType in findMultipleElements(%s, %s): return evaluation: %s ", r22);

        specialinvoke r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        r28 = (java.lang.Throwable) r21;

        throw r28;

     label5:
        r29 = (java.util.List) r17;

        return r29;
    }

    private void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String locatorType> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: java.lang.String value> = r2;

        return;
    }

    void <init>(java.lang.String, java.lang.String, androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom r0;
        java.lang.String r1, r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$ElementReferenceListAtom: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: java.lang.String locatorType>
<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: java.lang.String value>
    protected java.util.List getNonContextualArguments()
    {
        java.util.ArrayList $r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom r1;
        java.lang.String r2, r4;
        androidx.test.espresso.web.webdriver.Locator r3;
        java.util.Map r5;
        java.lang.Object[] r6;
        java.util.List r7;

        r1 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom;

        r2 = r1.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: java.lang.String locatorType>;

        r3 = staticinvoke <androidx.test.espresso.web.webdriver.Locator: androidx.test.espresso.web.webdriver.Locator forType(java.lang.String)>(r2);

        r4 = r1.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: java.lang.String value>;

        r5 = staticinvoke <androidx.test.espresso.web.webdriver.DriverAtoms: java.util.Map '-$$Nest$smmakeLocatorJSON'(androidx.test.espresso.web.webdriver.Locator,java.lang.String)>(r3, r4);

        r6 = newarray (java.lang.Object)[1];

        r6[0] = r5;

        $r0 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r6);

        r7 = (java.util.List) $r0;

        return r7;
    }

    void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom r0;
        java.lang.String r1, r2, $r4;
        androidx.test.espresso.web.model.SimpleAtom$ElementReferencePlacement $r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String FIND_ELEMENT_ANDROID>;

        $r3 = <androidx.test.espresso.web.model.SimpleAtom$ElementReferencePlacement: androidx.test.espresso.web.model.SimpleAtom$ElementReferencePlacement LAST>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String,androidx.test.espresso.web.model.SimpleAtom$ElementReferencePlacement)>($r4, $r3);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: java.lang.String locatorType> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementSimpleAtom: java.lang.String value> = r2;

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: java.lang.String locatorType>
<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: java.lang.String value>
    public java.util.List getNonContextualArguments()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom r0;
        java.lang.Object[] r1;
        java.lang.String $r2, $r4;
        androidx.test.espresso.web.webdriver.Locator $r3;
        java.util.Map $r5;
        java.util.ArrayList $r6;
        java.util.List r7;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom;

        r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: java.lang.String locatorType>;

        $r3 = staticinvoke <androidx.test.espresso.web.webdriver.Locator: androidx.test.espresso.web.webdriver.Locator forType(java.lang.String)>($r2);

        $r4 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: java.lang.String value>;

        $r5 = staticinvoke <androidx.test.espresso.web.webdriver.DriverAtoms: java.util.Map '-$$Nest$smmakeLocatorJSON'(androidx.test.espresso.web.webdriver.Locator,java.lang.String)>($r3, $r4);

        r1[0] = $r5;

        $r6 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r1);

        r7 = (java.util.List) $r6;

        return r7;
    }

    private void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom r0;
        java.lang.String r1, r2, $r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String FIND_ELEMENTS_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r3);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: java.lang.String locatorType> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: java.lang.String value> = r2;

        return;
    }

    void <init>(java.lang.String, java.lang.String, androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom r0;
        java.lang.String r1, r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementsScriptSimpleAtom: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom: androidx.test.espresso.web.model.Atom findElementSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom: androidx.test.espresso.web.model.Atom findElementSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindElementTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom: androidx.test.espresso.web.model.Atom findElementsScriptSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer elementReferenceListAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom: androidx.test.espresso.web.model.Atom findElementsScriptSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer elementReferenceListAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FindMultipleElementsTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom: java.lang.String idOrName>
    public java.util.List getNonContextualArguments()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom r0;
        java.lang.Object[] r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        java.util.List r4;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom;

        r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom: java.lang.String idOrName>;

        r1[0] = $r2;

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r1);

        r4 = (java.util.List) $r3;

        return r4;
    }

    private void <init>(java.lang.String)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom r0;
        java.lang.String r1, $r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom;

        r1 := @parameter0: java.lang.String;

        $r2 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String FRAME_BY_ID_OR_NAME_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom: java.lang.String idOrName> = r1;

        return;
    }

    void <init>(java.lang.String, androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom r0;
        java.lang.String r1;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom-IA r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameSimpleAtom: void <init>(java.lang.String)>(r1);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: java.lang.String idOrName>
<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: androidx.test.espresso.web.model.WindowReference root>
    public java.util.List getNonContextualArguments()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom r0;
        java.lang.String $r1;
        androidx.test.espresso.web.model.WindowReference $r2;
        java.lang.Object[] r3;
        java.util.ArrayList r4;
        java.util.List r5, r6;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom;

        r3 = newarray (java.lang.Object)[1];

        $r1 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: java.lang.String idOrName>;

        r3[0] = $r1;

        r4 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r3);

        $r2 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: androidx.test.espresso.web.model.WindowReference root>;

        r5 = (java.util.List) r4;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        r6 = (java.util.List) r4;

        return r6;
    }

    private void <init>(java.lang.String, androidx.test.espresso.web.model.WindowReference)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom r0;
        java.lang.String r1, $r3;
        androidx.test.espresso.web.model.WindowReference r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.test.espresso.web.model.WindowReference;

        $r3 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String FRAME_BY_ID_OR_NAME_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r3);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: java.lang.String idOrName> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: androidx.test.espresso.web.model.WindowReference root> = r2;

        return;
    }

    void <init>(java.lang.String, androidx.test.espresso.web.model.WindowReference, androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom r0;
        java.lang.String r1;
        androidx.test.espresso.web.model.WindowReference r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.test.espresso.web.model.WindowReference;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIdOrNameWithRootSimpleAtom: void <init>(java.lang.String,androidx.test.espresso.web.model.WindowReference)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom: int index>
    public java.util.List getNonContextualArguments()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom r0;
        java.lang.Object[] r1;
        int $i0;
        java.lang.Integer $r2;
        java.util.ArrayList $r3;
        java.util.List r4;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom;

        r1 = newarray (java.lang.Object)[1];

        $i0 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom: int index>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r1[0] = $r2;

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r1);

        r4 = (java.util.List) $r3;

        return r4;
    }

    private void <init>(int)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom;

        i0 := @parameter0: int;

        $r1 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String FRAME_BY_INDEX_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r1);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom: int index> = i0;

        return;
    }

    void <init>(int, androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom r0;
        int i0;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom-IA r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexSimpleAtom: void <init>(int)>(i0);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: int index>
<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: androidx.test.espresso.web.model.WindowReference root>
    public java.util.List getNonContextualArguments()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom r0;
        int $i0;
        java.lang.Integer $r1;
        androidx.test.espresso.web.model.WindowReference $r2;
        java.lang.Object[] r3;
        java.util.ArrayList r4;
        java.util.List r5, r6;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom;

        r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: int index>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r3[0] = $r1;

        r4 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r3);

        $r2 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: androidx.test.espresso.web.model.WindowReference root>;

        r5 = (java.util.List) r4;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        r6 = (java.util.List) r4;

        return r6;
    }

    private void <init>(int, androidx.test.espresso.web.model.WindowReference)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom r0;
        int i0;
        androidx.test.espresso.web.model.WindowReference r1;
        java.lang.String $r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.web.model.WindowReference;

        $r2 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String FRAME_BY_INDEX_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: int index> = i0;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: androidx.test.espresso.web.model.WindowReference root> = r1;

        return;
    }

    void <init>(int, androidx.test.espresso.web.model.WindowReference, androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom r0;
        int i0;
        androidx.test.espresso.web.model.WindowReference r1;
        androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom-IA r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.web.model.WindowReference;

        r2 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$FrameByIndexWithRootSimpleAtom: void <init>(int,androidx.test.espresso.web.model.WindowReference)>(i0, r1);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom: androidx.test.espresso.web.model.Atom getTextSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom: androidx.test.espresso.web.model.Atom getTextSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$GetTextTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom
    private void <init>()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom;

        $r1 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String GET_VISIBLE_TEXT_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom-IA r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom;

        r1 := @parameter0: androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$GetVisibleTextSimpleAtom: void <init>()>();

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom: androidx.test.espresso.web.model.Atom selectActiveElementSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom: androidx.test.espresso.web.model.Atom selectActiveElementSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectActiveElementTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: androidx.test.espresso.web.model.Atom frameByIndexOrNameSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: androidx.test.espresso.web.model.Atom frameByIndexOrNameSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIdOrNameTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: androidx.test.espresso.web.model.Atom frameByIndexSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: androidx.test.espresso.web.model.Atom frameByIndexSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$SelectFrameByIndexTransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom
    private void <init>()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom;

        $r1 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String CLICK_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom-IA r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom;

        r1 := @parameter0: androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom: void <init>()>();

        return;
    }

    public void handleNoElementReference()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom r0;
        java.lang.RuntimeException r1, r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebClickSimpleAtom;

        r2 = new java.lang.RuntimeException;

        r1 = r2;

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("webClick: Need an element to click on!");

        r3 = (java.lang.Throwable) r1;

        throw r3;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom: java.lang.String text>
    public java.util.List getNonContextualArguments()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom r0;
        java.lang.Object[] r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        java.util.List r4;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom;

        r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom: java.lang.String text>;

        r1[0] = $r2;

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r1);

        r4 = (java.util.List) $r3;

        return r4;
    }

    private void <init>(java.lang.String)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom r0;
        java.lang.String r1, $r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom;

        r1 := @parameter0: java.lang.String;

        $r2 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String SEND_KEYS_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom: java.lang.String text> = r1;

        return;
    }

    void <init>(java.lang.String, androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom r0;
        java.lang.String r1;
        androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom-IA r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom: void <init>(java.lang.String)>(r1);

        return;
    }

    public void handleNoElementReference()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom r0;
        java.lang.RuntimeException r1, r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebKeysSimpleAtom;

        r2 = new java.lang.RuntimeException;

        r1 = r2;

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("webKeys: Need an element to type on!");

        r3 = (java.lang.Throwable) r1;

        throw r3;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom
<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom: androidx.test.espresso.web.model.Atom scrollIntoViewSimpleAtom>
<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom>
    private void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        specialinvoke r0.<androidx.test.espresso.web.model.TransformingAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom: androidx.test.espresso.web.model.Atom scrollIntoViewSimpleAtom> = r1;

        r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom: androidx.test.espresso.web.model.TransformingAtom$Transformer castOrDieAtom> = r2;

        return;
    }

    void <init>(androidx.test.espresso.web.model.Atom, androidx.test.espresso.web.model.TransformingAtom$Transformer, androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom r0;
        androidx.test.espresso.web.model.Atom r1;
        androidx.test.espresso.web.model.TransformingAtom$Transformer r2;
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom-IA r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        r2 := @parameter1: androidx.test.espresso.web.model.TransformingAtom$Transformer;

        r3 := @parameter2: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewAtom: void <init>(androidx.test.espresso.web.model.Atom,androidx.test.espresso.web.model.TransformingAtom$Transformer)>(r1, r2);

        return;
    }

androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom-IA
androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom
    private void <init>()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom;

        $r1 = <androidx.test.espresso.web.webdriver.WebDriverAtomScripts: java.lang.String SCROLL_INTO_VIEW_ANDROID>;

        specialinvoke r0.<androidx.test.espresso.web.model.SimpleAtom: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom-IA)
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom r0;
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom-IA r1;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom;

        r1 := @parameter0: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom-IA;

        specialinvoke r0.<androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom: void <init>()>();

        return;
    }

    public void handleNoElementReference()
    {
        androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom r0;
        java.lang.RuntimeException r1, r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.web.webdriver.DriverAtoms$WebScrollIntoViewSimpleAtom;

        r2 = new java.lang.RuntimeException;

        r1 = r2;

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("scrollIntoView: need an element to scroll to");

        r3 = (java.lang.Throwable) r1;

        throw r3;
    }

