androidx.hilt.assisted.AssistedFactoryGenerator
<androidx.hilt.assisted.AssistedFactoryGenerator: javax.'annotation'.processing.ProcessingEnvironment processingEnv>
<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName productClassName>
<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName factoryClassName>
<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ParameterizedTypeName factorySuperTypeName>
<androidx.hilt.assisted.AssistedFactoryGenerator: javax.lang.model.element.TypeElement originatingElement>
<androidx.hilt.assisted.AssistedFactoryGenerator: java.util.List dependencyRequests>
    public final void generate()
    {
        androidx.hilt.assisted.AssistedFactoryGenerator r0;
        com.squareup.javapoet.TypeSpec r1;
        com.squareup.javapoet.ClassName $r2, $r26;
        com.squareup.javapoet.TypeSpec$Builder $r3, $r6, $r9, $r13, $r18, $r21, $r23, $r25;
        javax.lang.model.element.TypeElement $r4;
        javax.lang.model.element.Element $r5;
        com.squareup.javapoet.ParameterizedTypeName $r7;
        com.squareup.javapoet.TypeName $r8;
        javax.lang.model.element.Modifier[] $r10;
        javax.lang.model.element.Modifier $r11, $r12;
        javax.'annotation'.processing.ProcessingEnvironment $r14, $r16, $r30;
        javax.lang.model.util.Elements $r15;
        javax.lang.model.SourceVersion $r17;
        java.util.List $r19;
        java.lang.Iterable $r20;
        com.squareup.javapoet.MethodSpec $r22, $r24;
        java.lang.String $r27;
        com.squareup.javapoet.JavaFile$Builder $r28;
        com.squareup.javapoet.JavaFile $r29;
        javax.'annotation'.processing.Filer $r31;

        r0 := @this: androidx.hilt.assisted.AssistedFactoryGenerator;

        $r2 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName factoryClassName>;

        $r3 = staticinvoke <com.squareup.javapoet.TypeSpec: com.squareup.javapoet.TypeSpec$Builder classBuilder(com.squareup.javapoet.ClassName)>($r2);

        $r4 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.lang.model.element.TypeElement originatingElement>;

        $r5 = (javax.lang.model.element.Element) $r4;

        $r6 = virtualinvoke $r3.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addOriginatingElement(javax.lang.model.element.Element)>($r5);

        $r7 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ParameterizedTypeName factorySuperTypeName>;

        $r8 = (com.squareup.javapoet.TypeName) $r7;

        $r9 = virtualinvoke $r6.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addSuperinterface(com.squareup.javapoet.TypeName)>($r8);

        $r10 = newarray (javax.lang.model.element.Modifier)[2];

        $r11 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r10[0] = $r11;

        $r12 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier FINAL>;

        $r10[1] = $r12;

        $r13 = virtualinvoke $r9.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "TypeSpec.classBuilder(fa\u2026r.PUBLIC, Modifier.FINAL)");

        $r14 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r15 = interfaceinvoke $r14.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "processingEnv.elementUtils");

        $r16 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r17 = interfaceinvoke $r16.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.SourceVersion getSourceVersion()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "processingEnv.sourceVersion");

        $r18 = staticinvoke <androidx.hilt.ext.JavaPoetKt: com.squareup.javapoet.TypeSpec$Builder addGeneratedAnnotation(com.squareup.javapoet.TypeSpec$Builder,javax.lang.model.util.Elements,javax.lang.model.SourceVersion)>($r13, $r15, $r17);

        $r19 = specialinvoke r0.<androidx.hilt.assisted.AssistedFactoryGenerator: java.util.List getFieldSpecs()>();

        $r20 = (java.lang.Iterable) $r19;

        $r21 = virtualinvoke $r18.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addFields(java.lang.Iterable)>($r20);

        $r22 = specialinvoke r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.MethodSpec getConstructorMethodSpec()>();

        $r23 = virtualinvoke $r21.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r22);

        $r24 = specialinvoke r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.MethodSpec getCreateMethodSpec()>();

        $r25 = virtualinvoke $r23.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r24);

        r1 = virtualinvoke $r25.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>();

        $r26 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName factoryClassName>;

        $r27 = virtualinvoke $r26.<com.squareup.javapoet.ClassName: java.lang.String packageName()>();

        $r28 = staticinvoke <com.squareup.javapoet.JavaFile: com.squareup.javapoet.JavaFile$Builder builder(java.lang.String,com.squareup.javapoet.TypeSpec)>($r27, r1);

        $r29 = virtualinvoke $r28.<com.squareup.javapoet.JavaFile$Builder: com.squareup.javapoet.JavaFile build()>();

        $r30 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r31 = interfaceinvoke $r30.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Filer getFiler()>();

        virtualinvoke $r29.<com.squareup.javapoet.JavaFile: void writeTo(javax.'annotation'.processing.Filer)>($r31);

        return;
    }

    private final java.util.List getFieldSpecs()
    {
        androidx.hilt.assisted.AssistedFactoryGenerator r0;
        com.squareup.javapoet.TypeName r1, $r9;
        java.util.Collection r2, r18, r23;
        com.squareup.javapoet.FieldSpec r3;
        java.util.List $r4, $r6, $r8;
        java.util.ArrayList $r5, $r7;
        int $i0;
        boolean $z0, $z2, $z6;
        java.lang.String $r10;
        javax.lang.model.element.Modifier[] $r11, $r13;
        com.squareup.javapoet.FieldSpec$Builder $r12, $r16;
        javax.lang.model.element.Modifier $r14, $r15;
        java.lang.Iterable $r17, $r22;
        java.util.Iterator r19, r24;
        java.lang.Object r20, r25;
        androidx.hilt.assisted.DependencyRequest r21, r26;

        r0 := @this: androidx.hilt.assisted.AssistedFactoryGenerator;

        $r4 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: java.util.List dependencyRequests>;

        $r17 = (java.lang.Iterable) $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r18 = (java.util.Collection) $r5;

        r19 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z6 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label2;

        r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (androidx.hilt.assisted.DependencyRequest) r20;

        $z2 = virtualinvoke r21.<androidx.hilt.assisted.DependencyRequest: boolean isAssisted()>();

        if $z2 != 0 goto label1;

        interfaceinvoke r18.<java.util.Collection: boolean add(java.lang.Object)>(r20);

        goto label1;

     label2:
        $r6 = (java.util.List) r18;

        $r22 = (java.lang.Iterable) $r6;

        $r7 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r22, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r23 = (java.util.Collection) $r7;

        r24 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r26 = (androidx.hilt.assisted.DependencyRequest) r25;

        r2 = r23;

        $r9 = virtualinvoke r26.<androidx.hilt.assisted.DependencyRequest: com.squareup.javapoet.TypeName getProviderTypeName()>();

        r1 = virtualinvoke $r9.<com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName withoutAnnotations()>();

        $r10 = virtualinvoke r26.<androidx.hilt.assisted.DependencyRequest: java.lang.String getName()>();

        $r11 = newarray (javax.lang.model.element.Modifier)[0];

        $r12 = staticinvoke <com.squareup.javapoet.FieldSpec: com.squareup.javapoet.FieldSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>(r1, $r10, $r11);

        $r13 = newarray (javax.lang.model.element.Modifier)[2];

        $r14 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        $r13[0] = $r14;

        $r15 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier FINAL>;

        $r13[1] = $r15;

        $r16 = virtualinvoke $r12.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r13);

        r3 = virtualinvoke $r16.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec build()>();

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        goto label3;

     label4:
        $r8 = (java.util.List) r23;

        return $r8;
    }

    private final com.squareup.javapoet.MethodSpec getConstructorMethodSpec()
    {
        androidx.hilt.assisted.AssistedFactoryGenerator r0;
        com.squareup.javapoet.MethodSpec$Builder r1, $r5;
        boolean z0, z1, $z4, $z5, $z9;
        java.lang.Object r3, r24;
        androidx.hilt.assisted.DependencyRequest r4, $r25;
        androidx.hilt.ClassNames $r6;
        com.squareup.javapoet.ClassName $r7;
        java.util.List $r8, $r10;
        java.util.ArrayList $r9;
        com.squareup.javapoet.MethodSpec $r11;
        com.squareup.javapoet.TypeName $r12;
        java.lang.String $r13, $r17;
        javax.lang.model.element.Modifier[] $r14;
        java.lang.Object[] $r16;
        java.lang.Iterable $r19, $r22;
        java.util.Collection r20;
        java.util.Iterator $r21, $r23;

        r0 := @this: androidx.hilt.assisted.AssistedFactoryGenerator;

        $r5 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder constructorBuilder()>();

        $r6 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getINJECT()>();

        r1 = virtualinvoke $r5.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r7);

        z0 = 0;

        z1 = 0;

        $r8 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: java.util.List dependencyRequests>;

        $r19 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r20 = (java.util.Collection) $r9;

        $r21 = interfaceinvoke $r19.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z9 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label2;

        r3 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.hilt.assisted.DependencyRequest) r3;

        $z5 = virtualinvoke r4.<androidx.hilt.assisted.DependencyRequest: boolean isAssisted()>();

        if $z5 != 0 goto label1;

        interfaceinvoke r20.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        $r10 = (java.util.List) r20;

        $r22 = (java.lang.Iterable) $r10;

        $r23 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (androidx.hilt.assisted.DependencyRequest) r24;

        $r12 = virtualinvoke $r25.<androidx.hilt.assisted.DependencyRequest: com.squareup.javapoet.TypeName getProviderTypeName()>();

        $r13 = virtualinvoke $r25.<androidx.hilt.assisted.DependencyRequest: java.lang.String getName()>();

        $r14 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r1.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r12, $r13, $r14);

        $r16 = newarray (java.lang.Object)[1];

        $r17 = virtualinvoke $r25.<androidx.hilt.assisted.DependencyRequest: java.lang.String getName()>();

        $r16[0] = $r17;

        virtualinvoke r1.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("this.$1N = $1N", $r16);

        goto label3;

     label4:
        $r11 = virtualinvoke r1.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        return $r11;
    }

    private final com.squareup.javapoet.MethodSpec getCreateMethodSpec()
    {
        androidx.hilt.assisted.AssistedFactoryGenerator r0;
        javax.lang.model.element.TypeElement r1;
        javax.lang.model.element.ExecutableElement r2;
        java.util.List r3, $r15, $r17, $r19, $r21, $r48, $r73;
        java.lang.Iterable $r4, $r16, $r36, $r40, $r56, $r63, r64;
        java.util.Iterator r5, $r58, r66;
        java.lang.Object r6, $r18, r59, r67;
        javax.lang.model.element.VariableElement r7, $r54, r60;
        java.lang.String r8, $r13, $r24, $r45, $r70;
        javax.'annotation'.processing.ProcessingEnvironment $r9;
        javax.lang.model.util.Elements $r10;
        com.squareup.javapoet.ParameterizedTypeName $r11;
        com.squareup.javapoet.ClassName $r12, $r28, $r33, $r39;
        java.lang.CharSequence $r14;
        java.util.ArrayList $r20, $r22;
        int $i0, $i1;
        boolean $z3, $z4, $z5, $z6, $z8, $z9;
        javax.lang.model.element.Name $r23, $r55;
        com.squareup.javapoet.MethodSpec$Builder $r25, $r26, $r29, $r32, $r35, $r37, $r42;
        androidx.hilt.ClassNames $r27;
        javax.lang.model.element.Modifier[] $r30;
        javax.lang.model.element.Modifier $r31;
        com.squareup.javapoet.TypeName $r34, $r52, $r53;
        java.lang.Object[] $r38, $r71;
        com.squareup.javapoet.CodeBlock $r41, r72;
        com.squareup.javapoet.MethodSpec $r43;
        java.lang.StringBuilder $r44, $r46, $r47;
        java.util.NoSuchElementException $r49;
        java.lang.Throwable $r50;
        javax.lang.model.type.TypeMirror $r51;
        java.util.Collection r57, r61, $r65, r69;
        com.squareup.javapoet.ParameterSpec r62;
        androidx.hilt.assisted.DependencyRequest $r68;

        r0 := @this: androidx.hilt.assisted.AssistedFactoryGenerator;

        $r9 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r10 = interfaceinvoke $r9.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r11 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ParameterizedTypeName factorySuperTypeName>;

        $r12 = $r11.<com.squareup.javapoet.ParameterizedTypeName: com.squareup.javapoet.ClassName rawType>;

        $r13 = virtualinvoke $r12.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        $r14 = (java.lang.CharSequence) $r13;

        r1 = interfaceinvoke $r10.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "factoryTypeElement");

        $r15 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>();

        $r16 = (java.lang.Iterable) $r15;

        $r17 = staticinvoke <javax.lang.model.util.ElementFilter: java.util.List methodsIn(java.lang.Iterable)>($r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "ElementFilter.methodsIn(\u2026Element.enclosedElements)");

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r17);

        r2 = (javax.lang.model.element.ExecutableElement) $r18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "factoryMethod");

        $r19 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "factoryMethod.parameters");

        $r56 = (java.lang.Iterable) $r19;

        $r20 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r56, 10);

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i0);

        r57 = (java.util.Collection) $r20;

        $r58 = interfaceinvoke $r56.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke $r58.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label02;

        r59 = interfaceinvoke $r58.<java.util.Iterator: java.lang.Object next()>();

        r60 = (javax.lang.model.element.VariableElement) r59;

        r61 = r57;

        r62 = staticinvoke <com.squareup.javapoet.ParameterSpec: com.squareup.javapoet.ParameterSpec get(javax.lang.model.element.VariableElement)>(r60);

        interfaceinvoke r61.<java.util.Collection: boolean add(java.lang.Object)>(r62);

        goto label01;

     label02:
        r3 = (java.util.List) r57;

        $r21 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: java.util.List dependencyRequests>;

        $r63 = (java.lang.Iterable) $r21;

        r64 = $r63;

        $r22 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r63, 10);

        specialinvoke $r22.<java.util.ArrayList: void <init>(int)>($i1);

        $r65 = (java.util.Collection) $r22;

        r66 = interfaceinvoke r64.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        r67 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        $r68 = (androidx.hilt.assisted.DependencyRequest) r67;

        r69 = $r65;

        $z5 = virtualinvoke $r68.<androidx.hilt.assisted.DependencyRequest: boolean isAssisted()>();

        if $z5 == 0 goto label07;

        $r48 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r48, "factoryMethod.parameters");

        $r4 = (java.lang.Iterable) $r48;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z8 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label05;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.VariableElement) r6;

        $r51 = interfaceinvoke r7.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        $r52 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($r51);

        $r53 = virtualinvoke $r68.<androidx.hilt.assisted.DependencyRequest: com.squareup.javapoet.TypeName getType()>();

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r52, $r53);

        if $z9 == 0 goto label04;

        goto label06;

     label05:
        $r49 = new java.util.NoSuchElementException;

        specialinvoke $r49.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        $r50 = (java.lang.Throwable) $r49;

        throw $r50;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "factoryMethod.parameters\u2026ype\n                    }");

        $r54 = (javax.lang.model.element.VariableElement) r6;

        $r55 = interfaceinvoke $r54.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $r70 = virtualinvoke $r55.<java.lang.Object: java.lang.String toString()>();

        goto label09;

     label07:
        $z6 = virtualinvoke $r68.<androidx.hilt.assisted.DependencyRequest: boolean isProvider()>();

        if $z6 == 0 goto label08;

        $r70 = virtualinvoke $r68.<androidx.hilt.assisted.DependencyRequest: java.lang.String getName()>();

        goto label09;

     label08:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r68.<androidx.hilt.assisted.DependencyRequest: java.lang.String getName()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".get()");

        $r70 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        r8 = $r70;

        $r71 = newarray (java.lang.Object)[1];

        $r71[0] = r8;

        r72 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock of(java.lang.String,java.lang.Object[])>("$L", $r71);

        interfaceinvoke r69.<java.util.Collection: boolean add(java.lang.Object)>(r72);

        goto label03;

     label10:
        $r73 = (java.util.List) $r65;

        $r23 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        $r25 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(java.lang.Class)>(class "Ljava/lang/Override;");

        $r27 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r28 = virtualinvoke $r27.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getNON_NULL()>();

        $r29 = virtualinvoke $r26.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r28);

        $r30 = newarray (javax.lang.model.element.Modifier)[1];

        $r31 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r30[0] = $r31;

        $r32 = virtualinvoke $r29.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r30);

        $r33 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName productClassName>;

        $r34 = (com.squareup.javapoet.TypeName) $r33;

        $r35 = virtualinvoke $r32.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder returns(com.squareup.javapoet.TypeName)>($r34);

        $r36 = (java.lang.Iterable) r3;

        $r37 = virtualinvoke $r35.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameters(java.lang.Iterable)>($r36);

        $r38 = newarray (java.lang.Object)[2];

        $r39 = r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName productClassName>;

        $r38[0] = $r39;

        $r40 = (java.lang.Iterable) $r73;

        $r41 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock join(java.lang.Iterable,java.lang.String)>($r40, ",$W");

        $r38[1] = $r41;

        $r42 = virtualinvoke $r37.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("return new $T($L)", $r38);

        $r43 = virtualinvoke $r42.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r43, "MethodSpec.methodBuilder\u2026   )\n            .build()");

        return $r43;
    }

    public void <init>(javax.'annotation'.processing.ProcessingEnvironment, com.squareup.javapoet.ClassName, com.squareup.javapoet.ClassName, com.squareup.javapoet.ParameterizedTypeName, javax.lang.model.element.TypeElement, java.util.List)
    {
        androidx.hilt.assisted.AssistedFactoryGenerator r0;
        javax.'annotation'.processing.ProcessingEnvironment r1;
        com.squareup.javapoet.ClassName r2, r3;
        com.squareup.javapoet.ParameterizedTypeName r4;
        javax.lang.model.element.TypeElement r5;
        java.util.List r6;

        r0 := @this: androidx.hilt.assisted.AssistedFactoryGenerator;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r2 := @parameter1: com.squareup.javapoet.ClassName;

        r3 := @parameter2: com.squareup.javapoet.ClassName;

        r4 := @parameter3: com.squareup.javapoet.ParameterizedTypeName;

        r5 := @parameter4: javax.lang.model.element.TypeElement;

        r6 := @parameter5: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "processingEnv");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "productClassName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "factoryClassName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "factorySuperTypeName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "originatingElement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "dependencyRequests");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.'annotation'.processing.ProcessingEnvironment processingEnv> = r1;

        r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName productClassName> = r2;

        r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ClassName factoryClassName> = r3;

        r0.<androidx.hilt.assisted.AssistedFactoryGenerator: com.squareup.javapoet.ParameterizedTypeName factorySuperTypeName> = r4;

        r0.<androidx.hilt.assisted.AssistedFactoryGenerator: javax.lang.model.element.TypeElement originatingElement> = r5;

        r0.<androidx.hilt.assisted.AssistedFactoryGenerator: java.util.List dependencyRequests> = r6;

        return;
    }

