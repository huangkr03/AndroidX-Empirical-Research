androidx.media3.extractor.ChunkIndex
<androidx.media3.extractor.ChunkIndex: int length>
<androidx.media3.extractor.ChunkIndex: int[] sizes>
<androidx.media3.extractor.ChunkIndex: long[] offsets>
<androidx.media3.extractor.ChunkIndex: long[] durationsUs>
<androidx.media3.extractor.ChunkIndex: long[] timesUs>
<androidx.media3.extractor.ChunkIndex: long durationUs>
    public void <init>(int[], long[], long[], long[])
    {
        androidx.media3.extractor.ChunkIndex r0;
        int[] r1;
        long[] r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        long $l6, $l7, $l8;

        r0 := @this: androidx.media3.extractor.ChunkIndex;

        r1 := @parameter0: int[];

        r2 := @parameter1: long[];

        r3 := @parameter2: long[];

        r4 := @parameter3: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.ChunkIndex: int[] sizes> = r1;

        r0.<androidx.media3.extractor.ChunkIndex: long[] offsets> = r2;

        r0.<androidx.media3.extractor.ChunkIndex: long[] durationsUs> = r3;

        r0.<androidx.media3.extractor.ChunkIndex: long[] timesUs> = r4;

        $i0 = lengthof r1;

        r0.<androidx.media3.extractor.ChunkIndex: int length> = $i0;

        $i1 = r0.<androidx.media3.extractor.ChunkIndex: int length>;

        if $i1 <= 0 goto label1;

        $i2 = r0.<androidx.media3.extractor.ChunkIndex: int length>;

        $i3 = $i2 - 1;

        $l7 = r3[$i3];

        $i4 = r0.<androidx.media3.extractor.ChunkIndex: int length>;

        $i5 = $i4 - 1;

        $l6 = r4[$i5];

        $l8 = $l7 + $l6;

        r0.<androidx.media3.extractor.ChunkIndex: long durationUs> = $l8;

        goto label2;

     label1:
        r0.<androidx.media3.extractor.ChunkIndex: long durationUs> = 0L;

     label2:
        return;
    }

    public int getChunkIndex(long)
    {
        androidx.media3.extractor.ChunkIndex r0;
        long l0;
        long[] $r1;
        int $i1;

        r0 := @this: androidx.media3.extractor.ChunkIndex;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.extractor.ChunkIndex: long[] timesUs>;

        $i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(long[],long,boolean,boolean)>($r1, l0, 1, 1);

        return $i1;
    }

    public boolean isSeekable()
    {
        androidx.media3.extractor.ChunkIndex r0;

        r0 := @this: androidx.media3.extractor.ChunkIndex;

        return 1;
    }

    public long getDurationUs()
    {
        androidx.media3.extractor.ChunkIndex r0;
        long $l0;

        r0 := @this: androidx.media3.extractor.ChunkIndex;

        $l0 = r0.<androidx.media3.extractor.ChunkIndex: long durationUs>;

        return $l0;
    }

    public androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long)
    {
        androidx.media3.extractor.ChunkIndex r0;
        long l0, $l2, $l3, $l4, $l10, $l11;
        int i1, $i6, $i7, $i8, $i9;
        androidx.media3.extractor.SeekPoint r1, r2, $r3, $r7;
        long[] $r4, $r5, $r8, $r9;
        byte $b5;
        androidx.media3.extractor.SeekMap$SeekPoints $r6, $r10;

        r0 := @this: androidx.media3.extractor.ChunkIndex;

        l0 := @parameter0: long;

        i1 = virtualinvoke r0.<androidx.media3.extractor.ChunkIndex: int getChunkIndex(long)>(l0);

        $r3 = new androidx.media3.extractor.SeekPoint;

        $r4 = r0.<androidx.media3.extractor.ChunkIndex: long[] timesUs>;

        $l3 = $r4[i1];

        $r5 = r0.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $l2 = $r5[i1];

        specialinvoke $r3.<androidx.media3.extractor.SeekPoint: void <init>(long,long)>($l3, $l2);

        r1 = $r3;

        $l4 = r1.<androidx.media3.extractor.SeekPoint: long timeUs>;

        $b5 = $l4 cmp l0;

        if $b5 >= 0 goto label1;

        $i6 = r0.<androidx.media3.extractor.ChunkIndex: int length>;

        $i7 = $i6 - 1;

        if i1 != $i7 goto label2;

     label1:
        $r6 = new androidx.media3.extractor.SeekMap$SeekPoints;

        specialinvoke $r6.<androidx.media3.extractor.SeekMap$SeekPoints: void <init>(androidx.media3.extractor.SeekPoint)>(r1);

        return $r6;

     label2:
        $r7 = new androidx.media3.extractor.SeekPoint;

        $r8 = r0.<androidx.media3.extractor.ChunkIndex: long[] timesUs>;

        $i8 = i1 + 1;

        $l11 = $r8[$i8];

        $r9 = r0.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $i9 = i1 + 1;

        $l10 = $r9[$i9];

        specialinvoke $r7.<androidx.media3.extractor.SeekPoint: void <init>(long,long)>($l11, $l10);

        r2 = $r7;

        $r10 = new androidx.media3.extractor.SeekMap$SeekPoints;

        specialinvoke $r10.<androidx.media3.extractor.SeekMap$SeekPoints: void <init>(androidx.media3.extractor.SeekPoint,androidx.media3.extractor.SeekPoint)>(r1, r2);

        return $r10;
    }

    public java.lang.String toString()
    {
        androidx.media3.extractor.ChunkIndex r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7, $r8, $r11, $r12, $r15, $r16, $r19, $r20;
        int $i0;
        int[] $r5;
        java.lang.String $r6, $r10, $r14, $r18, $r21;
        long[] $r9, $r13, $r17;

        r0 := @this: androidx.media3.extractor.ChunkIndex;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChunkIndex(length=");

        $i0 = r0.<androidx.media3.extractor.ChunkIndex: int length>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sizes=");

        $r5 = r0.<androidx.media3.extractor.ChunkIndex: int[] sizes>;

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsets=");

        $r9 = r0.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeUs=");

        $r13 = r0.<androidx.media3.extractor.ChunkIndex: long[] timesUs>;

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", durationsUs=");

        $r17 = r0.<androidx.media3.extractor.ChunkIndex: long[] durationsUs>;

        $r18 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

