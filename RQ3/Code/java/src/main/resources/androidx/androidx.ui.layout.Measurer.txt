androidx.ui.layout.Measurer
<androidx.ui.layout.Measurer: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>
<androidx.ui.layout.Measurer: java.util.Map placeables>
<androidx.ui.layout.Measurer: java.util.Map lastMeasures>
<androidx.ui.layout.Measurer: java.lang.Integer[] lastMeasureDefaultsHolder>
<androidx.ui.layout.Measurer: androidx.ui.unit.Density density>
<androidx.ui.layout.Measurer: androidx.ui.core.MeasureScope measureScope>
<androidx.ui.layout.Measurer: kotlin.Lazy state$delegate>
<androidx.ui.layout.Measurer: int[] widthConstraintsHolder>
<androidx.ui.layout.Measurer: int[] heightConstraintsHolder>
    public void <init>()
    {
        androidx.ui.layout.Measurer r0, r16, r18, r20;
        boolean z0, z1, z3, z4;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r1, $r2, r15, r17;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer $r3;
        java.util.LinkedHashMap $r4, $r5;
        java.lang.Integer $r6, $r7, $r8;
        androidx.ui.layout.Measurer$state$2 $r9;
        kotlin.LazyThreadSafetyMode $r10;
        kotlin.jvm.functions.Function0 $r11;
        kotlin.Lazy $r12;
        int[] $r13, $r14;
        java.util.Map r19, r21;
        java.lang.Integer[] r22;

        r0 := @this: androidx.ui.layout.Measurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        specialinvoke $r2.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void <init>(int,int)>(0, 0);

        r15 = $r2;

        r16 = r0;

        z0 = 0;

        z1 = 0;

        r1 = r15;

        $r3 = (androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) r0;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer)>($r3);

        r17 = r15;

        r16.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root> = r17;

        r18 = r0;

        z3 = 0;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r19 = (java.util.Map) $r4;

        r18.<androidx.ui.layout.Measurer: java.util.Map placeables> = r19;

        r20 = r0;

        z4 = 0;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r21 = (java.util.Map) $r5;

        r20.<androidx.ui.layout.Measurer: java.util.Map lastMeasures> = r21;

        r22 = newarray (java.lang.Integer)[3];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r22[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r22[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r22[2] = $r8;

        r0.<androidx.ui.layout.Measurer: java.lang.Integer[] lastMeasureDefaultsHolder> = r22;

        $r10 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r9 = new androidx.ui.layout.Measurer$state$2;

        specialinvoke $r9.<androidx.ui.layout.Measurer$state$2: void <init>(androidx.ui.layout.Measurer)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r9;

        $r12 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r10, $r11);

        r0.<androidx.ui.layout.Measurer: kotlin.Lazy state$delegate> = $r12;

        $r13 = newarray (int)[2];

        r0.<androidx.ui.layout.Measurer: int[] widthConstraintsHolder> = $r13;

        $r14 = newarray (int)[2];

        r0.<androidx.ui.layout.Measurer: int[] heightConstraintsHolder> = $r14;

        return;
    }

    private final androidx.ui.layout.State getState()
    {
        androidx.ui.layout.Measurer r0;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r2;
        boolean z0;
        kotlin.reflect.KProperty[] $r3;
        java.lang.Object $r4;
        androidx.ui.layout.State $r5;

        r0 := @this: androidx.ui.layout.Measurer;

        r1 = r0.<androidx.ui.layout.Measurer: kotlin.Lazy state$delegate>;

        $r3 = <androidx.ui.layout.Measurer: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r3[0];

        z0 = 0;

        $r4 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r5 = (androidx.ui.layout.State) $r4;

        return $r5;
    }

    public final int[] getWidthConstraintsHolder()
    {
        androidx.ui.layout.Measurer r0;
        int[] $r1;

        r0 := @this: androidx.ui.layout.Measurer;

        $r1 = r0.<androidx.ui.layout.Measurer: int[] widthConstraintsHolder>;

        return $r1;
    }

    public final int[] getHeightConstraintsHolder()
    {
        androidx.ui.layout.Measurer r0;
        int[] $r1;

        r0 := @this: androidx.ui.layout.Measurer;

        $r1 = r0.<androidx.ui.layout.Measurer: int[] heightConstraintsHolder>;

        return $r1;
    }

    public final void reset()
    {
        androidx.ui.layout.Measurer r0;
        java.util.Map $r1, $r2;
        androidx.ui.layout.State $r3;

        r0 := @this: androidx.ui.layout.Measurer;

        $r1 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<androidx.ui.layout.Measurer: java.util.Map lastMeasures>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        virtualinvoke $r3.<androidx.ui.layout.State: void reset()>();

        return;
    }

    public void measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)
    {
        androidx.ui.layout.Measurer r0, $r132, r184;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r2;
        java.lang.Object r3, $r7, $r29, $r31, $r32, $r63, $r65, $r66, $r74, $r77, $r81, $r84, $r89, $r99, $r102, $r112, r121, r122, r141, r164, r167, $r171, $r185, $r188, r189;
        java.util.Map r4, $r6, r140, $r169, r182;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z12, z13, z16, $z18, z19, $z29, $z33, $z37, $z41, $z42, z47, $z49, $z52;
        androidx.ui.core.Measurable $r5, $r34, $r68, $r73, $r88, $r98, $r111, r142, r168, $r170, $r183;
        java.lang.Integer $r8, $r10, $r12, $r37, $r43, $r54, $r55, $r56, r144, $r146, r147, r148, $r151, r152, $r153, $r155, r156, $r157, $r160, r161, $r174, $r177, $r180, $r181;
        java.lang.Number $r9, $r11, $r13, $r38, $r39, $r42, $r44, $r45, $r48;
        kotlin.jvm.internal.Ref$ObjectRef $r14, $r27, $r61, r130, r131;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i32, $i34, $i35, i37, i38, i39, $i40, i41, $i42, $i43;
        androidx.ui.layout.State $r15, $r18;
        androidx.ui.core.Constraints $r16, $r19, $r33, $r67, $r78, $r82, $r83, $r85, $r86, $r103, r135;
        int[] $r17, $r20, $r21, $r22, $r23, $r24;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour $r25, $r26, $r106, $r107, $r133, $r134;
        androidx.ui.core.MeasureScope $r28, $r30, $r62, $r64, $r137, $r163;
        kotlin.Unit $r36, $r49, $r70, $r108;
        java.lang.Comparable $r40, $r41, $r46, $r47, r145, r149, r150, r154, r158, r159;
        androidx.ui.core.HorizontalAlignmentLine $r50;
        androidx.ui.core.AlignmentLine $r51;
        java.lang.Integer[] $r52, r123, r124, $r125, r126, r127, r128, r129, $r186;
        java.lang.StringBuilder $r71, $r72, $r75, $r76, $r79, $r87, $r90, $r91, $r92, $r93, $r94, $r96, $r97, $r100, $r101, $r104, $r109, $r110, $r113, $r114, $r116, $r117, $r119;
        java.lang.String $r80, $r95, $r105, $r115, $r118, $r120;
        androidx.ui.core.Placeable $r138, r139, r165, r166, $r172, r173, r176, r179;

        r0 := @this: androidx.ui.layout.Measurer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        r2 := @parameter1: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraintWidget");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measure");

        r3 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()>();

        $z1 = r3 instanceof androidx.ui.core.Measurable;

        if $z1 != 0 goto label01;

        return;

     label01:
        $z2 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z2 == 0 goto label02;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Measuring ");

        r121 = r3;

        $r111 = (androidx.ui.core.Measurable) r121;

        $r112 = staticinvoke <androidx.ui.core.LayoutTagKt: java.lang.Object getTag(androidx.ui.core.Measurable)>($r111);

        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r112);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with: ");

        $r115 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: java.lang.String access$toDebugString(androidx.constraintlayout.core.widgets.ConstraintWidget)>(r1);

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r118 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: java.lang.String access$toDebugString(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r2);

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r120);

     label02:
        $r6 = r0.<androidx.ui.layout.Measurer: java.util.Map lastMeasures>;

        r122 = r3;

        $r5 = (androidx.ui.core.Measurable) r122;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r123 = (java.lang.Integer[]) $r7;

        if r123 != null goto label03;

        r124 = r0.<androidx.ui.layout.Measurer: java.lang.Integer[] lastMeasureDefaultsHolder>;

        z9 = 0;

        z10 = 0;

        virtualinvoke r0.<androidx.ui.layout.Measurer: void copyFrom(java.lang.Integer[],androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r124, r2);

        $r108 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r125 = r124;

        goto label04;

     label03:
        $r125 = r123;

     label04:
        r126 = $r125;

        r127 = r126;

        z12 = 0;

        $r8 = r127[0];

        $r9 = (java.lang.Number) $r8;

        i37 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        r128 = r126;

        z13 = 0;

        $r10 = r128[1];

        $r11 = (java.lang.Number) $r10;

        i38 = virtualinvoke $r11.<java.lang.Number: int intValue()>();

        r129 = r126;

        $r12 = r129[2];

        $r13 = (java.lang.Number) $r12;

        i39 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        $r14 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r14.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r130 = $r14;

        r131 = r130;

        z16 = 0;

        $r132 = (androidx.ui.layout.Measurer) r0;

        $r133 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r133, "constraintWidget.horizontalDimensionBehaviour");

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        $i1 = r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        $z3 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean useDeprecated>;

        $r15 = specialinvoke $r132.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        $r16 = virtualinvoke $r15.<androidx.ui.layout.State: androidx.ui.core.Constraints getRootIncomingConstraints()>();

        $i2 = virtualinvoke $r16.<androidx.ui.core.Constraints: int getMaxWidth()>();

        $r17 = virtualinvoke $r132.<androidx.ui.layout.Measurer: int[] getWidthConstraintsHolder()>();

        specialinvoke $r132.<androidx.ui.layout.Measurer: void obtainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,int,boolean,int,int[])>($r133, $i0, $i1, $z3, $i2, $r17);

        $r134 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r134, "constraintWidget.verticalDimensionBehaviour");

        $i3 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        $i4 = r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        $z4 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean useDeprecated>;

        $r18 = specialinvoke $r132.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        $r19 = virtualinvoke $r18.<androidx.ui.layout.State: androidx.ui.core.Constraints getRootIncomingConstraints()>();

        $i5 = virtualinvoke $r19.<androidx.ui.core.Constraints: int getMaxHeight()>();

        $r20 = virtualinvoke $r132.<androidx.ui.layout.Measurer: int[] getHeightConstraintsHolder()>();

        specialinvoke $r132.<androidx.ui.layout.Measurer: void obtainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,int,boolean,int,int[])>($r134, $i3, $i4, $z4, $i5, $r20);

        $r21 = virtualinvoke $r132.<androidx.ui.layout.Measurer: int[] getWidthConstraintsHolder()>();

        $i6 = $r21[0];

        $r22 = virtualinvoke $r132.<androidx.ui.layout.Measurer: int[] getWidthConstraintsHolder()>();

        $i7 = $r22[1];

        $r23 = virtualinvoke $r132.<androidx.ui.layout.Measurer: int[] getHeightConstraintsHolder()>();

        $i8 = $r23[0];

        $r24 = virtualinvoke $r132.<androidx.ui.layout.Measurer: int[] getHeightConstraintsHolder()>();

        $i9 = $r24[1];

        r135 = staticinvoke <androidx.ui.core.ConstraintsKt: androidx.ui.core.Constraints Constraints(int,int,int,int)>($i6, $i7, $i8, $i9);

        r131.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r135;

        $r25 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $r26 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r26);

        if $z5 == 0 goto label05;

        $i34 = r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        if $i34 != 0 goto label05;

        $r106 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        $r107 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r106, $r107);

        if $z8 == 0 goto label05;

        $i35 = r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        if $i35 == 0 goto label30;

     label05:
        $z18 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z18 == 0 goto label06;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Measuring ");

        $r98 = (androidx.ui.core.Measurable) r3;

        $r99 = staticinvoke <androidx.ui.core.LayoutTagKt: java.lang.Object getTag(androidx.ui.core.Measurable)>($r98);

        $r100 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r102 = r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r103 = (androidx.ui.core.Constraints) $r102;

        $r104 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r105);

     label06:
        $r27 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r27.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r28 = r0.<androidx.ui.layout.Measurer: androidx.ui.core.MeasureScope measureScope>;

        $r27.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r28;

        $r29 = $r27.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r30 = (androidx.ui.core.MeasureScope) $r29;

        if $r30 != null goto label07;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("measureScope");

        throw null;

     label07:
        $r31 = $r27.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        z19 = 0;

        $r137 = (androidx.ui.core.MeasureScope) $r31;

        $r34 = (androidx.ui.core.Measurable) r3;

        $r32 = r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r33 = (androidx.ui.core.Constraints) $r32;

        $r138 = virtualinvoke $r137.<androidx.ui.core.MeasureScope: androidx.ui.core.Placeable measure(androidx.ui.core.Measurable,androidx.ui.core.Constraints)>($r34, $r33);

        r139 = $r138;

        r140 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        r141 = r3;

        r142 = (androidx.ui.core.Measurable) r141;

        interfaceinvoke r140.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, r139);

        $r36 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $z6 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z6 == 0 goto label08;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = (androidx.ui.core.Measurable) r3;

        $r89 = staticinvoke <androidx.ui.core.LayoutTagKt: java.lang.Object getTag(androidx.ui.core.Measurable)>($r88);

        $r90 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is size ");

        $i29 = virtualinvoke $r138.<androidx.ui.core.Placeable: int getWidth()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i30 = virtualinvoke $r138.<androidx.ui.core.Placeable: int getHeight()>();

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r95);

     label08:
        $i10 = virtualinvoke $r138.<androidx.ui.core.Placeable: int getWidth()>();

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $i11 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getMinWidth()>();

        r144 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        r145 = (java.lang.Comparable) $r37;

        $r38 = (java.lang.Number) r144;

        $i32 = virtualinvoke $r38.<java.lang.Number: int intValue()>();

        if $i32 <= 0 goto label09;

        $z29 = 1;

        goto label10;

     label09:
        $z29 = 0;

     label10:
        if $z29 == 0 goto label11;

        $r146 = r144;

        goto label12;

     label11:
        $r146 = null;

     label12:
        r147 = $r146;

        $i12 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getMaxWidth()>();

        r148 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        r149 = (java.lang.Comparable) r147;

        r150 = r145;

        $r39 = (java.lang.Number) r148;

        $i28 = virtualinvoke $r39.<java.lang.Number: int intValue()>();

        if $i28 <= 0 goto label13;

        $z33 = 1;

        goto label14;

     label13:
        $z33 = 0;

     label14:
        if $z33 == 0 goto label15;

        $r151 = r148;

        goto label16;

     label15:
        $r151 = null;

     label16:
        r152 = $r151;

        $r40 = (java.lang.Comparable) r152;

        $r41 = staticinvoke <kotlin.ranges.RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)>(r150, r149, $r40);

        $r42 = (java.lang.Number) $r41;

        $i40 = virtualinvoke $r42.<java.lang.Number: int intValue()>();

        $i13 = virtualinvoke $r138.<androidx.ui.core.Placeable: int getHeight()>();

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $i14 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getMinHeight()>();

        $r153 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        r154 = (java.lang.Comparable) $r43;

        $r44 = (java.lang.Number) $r153;

        $i27 = virtualinvoke $r44.<java.lang.Number: int intValue()>();

        if $i27 <= 0 goto label17;

        $z37 = 1;

        goto label18;

     label17:
        $z37 = 0;

     label18:
        if $z37 == 0 goto label19;

        $r155 = $r153;

        goto label20;

     label19:
        $r155 = null;

     label20:
        r156 = $r155;

        $i15 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getMaxHeight()>();

        $r157 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        r158 = (java.lang.Comparable) r156;

        r159 = r154;

        $r45 = (java.lang.Number) $r157;

        $i26 = virtualinvoke $r45.<java.lang.Number: int intValue()>();

        if $i26 <= 0 goto label21;

        $z41 = 1;

        goto label22;

     label21:
        $z41 = 0;

     label22:
        if $z41 == 0 goto label23;

        $r160 = $r157;

        goto label24;

     label23:
        $r160 = null;

     label24:
        r161 = $r160;

        $r46 = (java.lang.Comparable) r161;

        $r47 = staticinvoke <kotlin.ranges.RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)>(r159, r158, $r46);

        $r48 = (java.lang.Number) $r47;

        i41 = virtualinvoke $r48.<java.lang.Number: int intValue()>();

        $z42 = 0;

        $i16 = virtualinvoke $r138.<androidx.ui.core.Placeable: int getWidth()>();

        if $i40 == $i16 goto label25;

        $r84 = r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r85 = (androidx.ui.core.Constraints) $r84;

        $r86 = staticinvoke <androidx.ui.core.Constraints: androidx.ui.core.Constraints copy$default(androidx.ui.core.Constraints,int,int,int,int,int,java.lang.Object)>($r85, $i40, $i40, 0, 0, 12, null);

        r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r86;

        $z42 = 1;

     label25:
        $i17 = virtualinvoke $r138.<androidx.ui.core.Placeable: int getHeight()>();

        if i41 == $i17 goto label26;

        $r81 = r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r82 = (androidx.ui.core.Constraints) $r81;

        $r83 = staticinvoke <androidx.ui.core.Constraints: androidx.ui.core.Constraints copy$default(androidx.ui.core.Constraints,int,int,int,int,int,java.lang.Object)>($r82, 0, 0, i41, i41, 3, null);

        r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r83;

        $z42 = 1;

     label26:
        if $z42 == 0 goto label29;

        $z7 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z7 == 0 goto label27;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remeasuring coerced ");

        $r73 = (androidx.ui.core.Measurable) r3;

        $r74 = staticinvoke <androidx.ui.core.LayoutTagKt: java.lang.Object getTag(androidx.ui.core.Measurable)>($r73);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r77 = r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r78 = (androidx.ui.core.Constraints) $r77;

        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r80);

     label27:
        $r61 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r61.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r62 = r0.<androidx.ui.layout.Measurer: androidx.ui.core.MeasureScope measureScope>;

        $r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r62;

        $r63 = $r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r64 = (androidx.ui.core.MeasureScope) $r63;

        if $r64 != null goto label28;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("measureScope");

        throw null;

     label28:
        $r65 = $r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r163 = (androidx.ui.core.MeasureScope) $r65;

        r164 = r3;

        $r68 = (androidx.ui.core.Measurable) r164;

        $r66 = r130.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r67 = (androidx.ui.core.Constraints) $r66;

        r165 = virtualinvoke $r163.<androidx.ui.core.MeasureScope: androidx.ui.core.Placeable measure(androidx.ui.core.Measurable,androidx.ui.core.Constraints)>($r68, $r67);

        z47 = 0;

        r166 = r165;

        r4 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        r167 = r3;

        r168 = (androidx.ui.core.Measurable) r167;

        z0 = 0;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r168, r166);

        $r70 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label29:
        $r49 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label30:
        $r169 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        $r170 = (androidx.ui.core.Measurable) r3;

        $r171 = interfaceinvoke $r169.<java.util.Map: java.lang.Object get(java.lang.Object)>($r170);

        $r172 = (androidx.ui.core.Placeable) $r171;

        r173 = $r172;

        if r173 != null goto label31;

        $r174 = (java.lang.Integer) null;

        goto label32;

     label31:
        $i18 = virtualinvoke r173.<androidx.ui.core.Placeable: int getWidth()>();

        $r174 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

     label32:
        if $r174 != null goto label33;

        $i42 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        goto label34;

     label33:
        $i42 = virtualinvoke $r174.<java.lang.Integer: int intValue()>();

     label34:
        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth> = $i42;

        r176 = $r172;

        if r176 != null goto label35;

        $r177 = (java.lang.Integer) null;

        goto label36;

     label35:
        $i19 = virtualinvoke r176.<androidx.ui.core.Placeable: int getHeight()>();

        $r177 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

     label36:
        if $r177 != null goto label37;

        $i43 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        goto label38;

     label37:
        $i43 = virtualinvoke $r177.<java.lang.Integer: int intValue()>();

     label38:
        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight> = $i43;

        r179 = $r172;

        if r179 != null goto label39;

        $r180 = (java.lang.Integer) null;

        goto label40;

     label39:
        $r50 = staticinvoke <androidx.ui.text.CoreTextKt: androidx.ui.core.HorizontalAlignmentLine getFirstBaseline()>();

        $r51 = (androidx.ui.core.AlignmentLine) $r50;

        $i20 = virtualinvoke r179.<androidx.ui.core.Placeable: int get(androidx.ui.core.AlignmentLine)>($r51);

        $r180 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

     label40:
        $r181 = $r180;

        if $r180 == null goto label41;

        $z49 = 1;

        goto label42;

     label41:
        $z49 = 0;

     label42:
        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean measuredHasBaseline> = $z49;

        if $r181 == null goto label43;

        $i24 = virtualinvoke $r181.<java.lang.Integer: int intValue()>();

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredBaseline> = $i24;

     label43:
        r182 = r0.<androidx.ui.layout.Measurer: java.util.Map lastMeasures>;

        $r183 = (androidx.ui.core.Measurable) r3;

        r184 = r0;

        $r185 = interfaceinvoke r182.<java.util.Map: java.lang.Object get(java.lang.Object)>($r183);

        if $r185 != null goto label44;

        $r186 = newarray (java.lang.Integer)[3];

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r186[0] = $r54;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r186[1] = $r55;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r186[2] = $r56;

        interfaceinvoke r182.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r183, $r186);

        $r188 = $r186;

        goto label45;

     label44:
        $r188 = $r185;

     label45:
        r189 = $r188;

        $r52 = (java.lang.Integer[]) r189;

        virtualinvoke r184.<androidx.ui.layout.Measurer: void copyFrom(java.lang.Integer[],androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>($r52, r2);

        $i21 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth>;

        if $i21 != i37 goto label46;

        $i22 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight>;

        if $i22 != i38 goto label46;

        $i23 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredBaseline>;

        if $i23 == i39 goto label47;

     label46:
        $z52 = 1;

        goto label48;

     label47:
        $z52 = 0;

     label48:
        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean measuredNeedsSolverPass> = $z52;

        return;
    }

    private final void obtainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, int, boolean, int, int[])
    {
        androidx.ui.layout.Measurer r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour r1, r3;
        int i0, i1, i2, i3, $i4, $i7, $i8;
        boolean z0, z1, $z2, z3;
        int[] r2, $r4;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;

        r0 := @this: androidx.ui.layout.Measurer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r2 := @parameter5: int[];

        r3 = r1;

        $r4 = <androidx.ui.layout.Measurer$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i4 = virtualinvoke r3.<androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: int ordinal()>();

        i3 = $r4[$i4];

        tableswitch(i3)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label10;
        };

     label01:
        r2[0] = i0;

        r2[1] = i0;

        goto label11;

     label02:
        r2[0] = 0;

        r2[1] = i2;

        goto label11;

     label03:
        if z0 == 0 goto label04;

        if i1 != 1 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        z3 = $z2;

        if z3 == 0 goto label06;

        $i7 = i0;

        goto label07;

     label06:
        $i7 = 0;

     label07:
        r2[0] = $i7;

        if z3 == 0 goto label08;

        $i8 = i0;

        goto label09;

     label08:
        $i8 = i2;

     label09:
        r2[1] = $i8;

        goto label11;

     label10:
        r10 = "MATCH_PARENT is not supported";

        z1 = 0;

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label11:
        return;
    }

    public final void copyFrom(java.lang.Integer[], androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)
    {
        androidx.ui.layout.Measurer r0;
        java.lang.Integer[] $r1;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r4, $r5;

        r0 := @this: androidx.ui.layout.Measurer;

        $r1 := @parameter0: java.lang.Integer[];

        r2 := @parameter1: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measure");

        $i0 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $i1 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r4;

        $i2 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredBaseline>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r5;

        return;
    }

    public final androidx.ui.unit.IntSize performMeasure(androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection, androidx.ui.layout.ConstraintSet, java.util.List, androidx.ui.core.MeasureScope)
    {
        androidx.ui.layout.Measurer r0;
        androidx.ui.core.Constraints r1, $r44;
        androidx.ui.core.LayoutDirection r2;
        androidx.ui.layout.ConstraintSet r3;
        java.util.List r4;
        androidx.ui.core.MeasureScope r5;
        boolean z0, z1, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z17, z18, z19;
        androidx.ui.core.Placeable r6, r91, r95, r99;
        java.util.Map r7, $r39;
        androidx.ui.unit.Density $r8;
        androidx.ui.layout.State $r9, $r12, $r15, $r16, $r17, $r18;
        androidx.constraintlayout.core.state.Dimension $r10, $r13, $r68, $r69;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i21, $i22;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r31, $r34, $r57, $r58, $r60, $r63;
        java.util.ArrayList $r25, $r64, $r70;
        androidx.ui.unit.IntSize $r28;
        java.lang.StringBuilder $r29, $r30, $r32, $r33, $r35, $r46, $r47, $r50, $r51, $r52, $r53, $r54;
        java.lang.String $r36, $r55, $r59, $r62, $r66, $r80, $r82;
        java.lang.Object $r37, $r40, $r49, $r65, r73, r75, $r78, r89, r90, r97, r98, r100;
        androidx.ui.core.Measurable $r38, $r42, $r48, $r76, r77, r101;
        java.lang.Integer $r41, $r56, $r93, r94, $r96;
        androidx.ui.core.Constraints$Companion $r43;
        androidx.constraintlayout.core.widgets.ConstraintWidget $r61, r74, r85, $r88;
        java.lang.Iterable $r71;
        java.util.Iterator r72, $r83, $r86;

        r0 := @this: androidx.ui.layout.Measurer;

        r1 := @parameter0: androidx.ui.core.Constraints;

        r2 := @parameter1: androidx.ui.core.LayoutDirection;

        r3 := @parameter2: androidx.ui.layout.ConstraintSet;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: androidx.ui.core.MeasureScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "constraintSet");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "measureScope");

        $r8 = (androidx.ui.unit.Density) r5;

        r0.<androidx.ui.layout.Measurer: androidx.ui.unit.Density density> = $r8;

        r0.<androidx.ui.layout.Measurer: androidx.ui.core.MeasureScope measureScope> = r5;

        virtualinvoke r0.<androidx.ui.layout.Measurer: void reset()>();

        $r9 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        $z4 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean getHasFixedWidth(androidx.ui.core.Constraints)>(r1);

        if $z4 == 0 goto label01;

        $i22 = virtualinvoke r1.<androidx.ui.core.Constraints: int getMaxWidth()>();

        $r68 = staticinvoke <androidx.constraintlayout.core.state.Dimension: androidx.constraintlayout.core.state.Dimension Fixed(int)>($i22);

        goto label02;

     label01:
        $r10 = staticinvoke <androidx.constraintlayout.core.state.Dimension: androidx.constraintlayout.core.state.Dimension Wrap()>();

        $i0 = virtualinvoke r1.<androidx.ui.core.Constraints: int getMinWidth()>();

        $r68 = virtualinvoke $r10.<androidx.constraintlayout.core.state.Dimension: androidx.constraintlayout.core.state.Dimension min(int)>($i0);

     label02:
        virtualinvoke $r9.<androidx.ui.layout.State: androidx.constraintlayout.core.state.State width(androidx.constraintlayout.core.state.Dimension)>($r68);

        $r12 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        $z5 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean getHasFixedHeight(androidx.ui.core.Constraints)>(r1);

        if $z5 == 0 goto label03;

        $i21 = virtualinvoke r1.<androidx.ui.core.Constraints: int getMaxHeight()>();

        $r69 = staticinvoke <androidx.constraintlayout.core.state.Dimension: androidx.constraintlayout.core.state.Dimension Fixed(int)>($i21);

        goto label04;

     label03:
        $r13 = staticinvoke <androidx.constraintlayout.core.state.Dimension: androidx.constraintlayout.core.state.Dimension Wrap()>();

        $i1 = virtualinvoke r1.<androidx.ui.core.Constraints: int getMinHeight()>();

        $r69 = virtualinvoke $r13.<androidx.constraintlayout.core.state.Dimension: androidx.constraintlayout.core.state.Dimension min(int)>($i1);

     label04:
        virtualinvoke $r12.<androidx.ui.layout.State: androidx.constraintlayout.core.state.State height(androidx.constraintlayout.core.state.Dimension)>($r69);

        $r15 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        virtualinvoke $r15.<androidx.ui.layout.State: void setRootIncomingConstraints(androidx.ui.core.Constraints)>(r1);

        $r16 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        virtualinvoke $r16.<androidx.ui.layout.State: void setLayoutDirection(androidx.ui.core.LayoutDirection)>(r2);

        $r17 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        interfaceinvoke r3.<androidx.ui.layout.ConstraintSet: void applyTo(androidx.ui.layout.State,java.util.List)>($r17, r4);

        $r18 = specialinvoke r0.<androidx.ui.layout.Measurer: androidx.ui.layout.State getState()>();

        $r19 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        virtualinvoke $r18.<androidx.ui.layout.State: void apply(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>($r19);

        $r20 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $i2 = virtualinvoke r1.<androidx.ui.core.Constraints: int getMaxWidth()>();

        virtualinvoke $r20.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setWidth(int)>($i2);

        $r21 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $i3 = virtualinvoke r1.<androidx.ui.core.Constraints: int getMaxHeight()>();

        virtualinvoke $r21.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setHeight(int)>($i3);

        $r22 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        virtualinvoke $r22.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void updateHierarchy()>();

        $z6 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z6 == 0 goto label16;

        $r57 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        virtualinvoke $r57.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setDebugName(java.lang.String)>("ConstraintLayout");

        $r58 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $r70 = virtualinvoke $r58.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList getChildren()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r70, "root.children");

        $r71 = (java.lang.Iterable) $r70;

        r72 = interfaceinvoke $r71.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z12 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label14;

        r73 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        r74 = (androidx.constraintlayout.core.widgets.ConstraintWidget) r73;

        r75 = virtualinvoke r74.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()>();

        $z14 = r75 instanceof androidx.ui.core.Measurable;

        if $z14 == 0 goto label06;

        $r76 = (androidx.ui.core.Measurable) r75;

        goto label07;

     label06:
        $r76 = null;

     label07:
        r77 = $r76;

        if r77 != null goto label08;

        $r78 = null;

        goto label09;

     label08:
        $r78 = staticinvoke <androidx.ui.core.LayoutTagKt: java.lang.Object getTag(androidx.ui.core.Measurable)>(r77);

     label09:
        if $r78 != null goto label10;

        $r80 = (java.lang.String) null;

        goto label11;

     label10:
        $r80 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r78);

     label11:
        if $r80 != null goto label12;

        $r82 = "NOTAG";

        goto label13;

     label12:
        $r82 = $r80;

     label13:
        virtualinvoke r74.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setDebugName(java.lang.String)>($r82);

        goto label05;

     label14:
        $r59 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("ConstraintLayout is asked to measure with ", r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r59);

        $r60 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $r61 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r60;

        $r62 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: java.lang.String access$toDebugString(androidx.constraintlayout.core.widgets.ConstraintWidget)>($r61);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r62);

        $r63 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $r64 = virtualinvoke $r63.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList getChildren()>();

        $r83 = virtualinvoke $r64.<java.util.ArrayList: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r83, "root.children");

     label15:
        $z13 = interfaceinvoke $r83.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label16;

        $r65 = interfaceinvoke $r83.<java.util.Iterator: java.lang.Object next()>();

        r85 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r65;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r85, "child");

        $r66 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: java.lang.String access$toDebugString(androidx.constraintlayout.core.widgets.ConstraintWidget)>(r85);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r66);

        goto label15;

     label16:
        $r23 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        virtualinvoke $r23.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void measure(int,int,int,int,int,int,int,int,int)>(0, 0, 0, 0, 0, 0, 0, 0, 0);

        $r24 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $r25 = virtualinvoke $r24.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList getChildren()>();

        $r86 = virtualinvoke $r25.<java.util.ArrayList: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r86, "root.children");

     label17:
        $z17 = interfaceinvoke $r86.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label25;

        $r37 = interfaceinvoke $r86.<java.util.Iterator: java.lang.Object next()>();

        $r88 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r37;

        r89 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()>();

        $z8 = r89 instanceof androidx.ui.core.Measurable;

        if $z8 != 0 goto label18;

        goto label17;

     label18:
        $r39 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        r90 = r89;

        $r38 = (androidx.ui.core.Measurable) r90;

        $r40 = interfaceinvoke $r39.<java.util.Map: java.lang.Object get(java.lang.Object)>($r38);

        r91 = (androidx.ui.core.Placeable) $r40;

        if r91 != null goto label19;

        $r93 = (java.lang.Integer) null;

        goto label20;

     label19:
        $i9 = virtualinvoke r91.<androidx.ui.core.Placeable: int getWidth()>();

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

     label20:
        r94 = $r93;

        r95 = r91;

        if r95 != null goto label21;

        $r96 = (java.lang.Integer) null;

        goto label22;

     label21:
        $i10 = virtualinvoke r95.<androidx.ui.core.Placeable: int getHeight()>();

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

     label22:
        $i11 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r41, r94);

        if $z9 == 0 goto label23;

        $i17 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r56, $r96);

        if $z11 != 0 goto label17;

     label23:
        $z10 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z10 == 0 goto label24;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final measurement for ");

        r97 = r89;

        $r48 = (androidx.ui.core.Measurable) r97;

        $r49 = staticinvoke <androidx.ui.core.LayoutTagKt: java.lang.Object getTag(androidx.ui.core.Measurable)>($r48);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to confirm size ");

        $i14 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i15 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r55);

     label24:
        z18 = 0;

        z19 = 0;

        r98 = r89;

        $r42 = (androidx.ui.core.Measurable) r98;

        $r43 = <androidx.ui.core.Constraints: androidx.ui.core.Constraints$Companion Companion>;

        $i12 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        $i13 = virtualinvoke $r88.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        $r44 = virtualinvoke $r43.<androidx.ui.core.Constraints$Companion: androidx.ui.core.Constraints fixed(int,int)>($i12, $i13);

        r99 = virtualinvoke r5.<androidx.ui.core.MeasureScope: androidx.ui.core.Placeable measure(androidx.ui.core.Measurable,androidx.ui.core.Constraints)>($r42, $r44);

        z0 = 0;

        z1 = 0;

        r6 = r99;

        r7 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        r100 = r89;

        r101 = (androidx.ui.core.Measurable) r100;

        z3 = 0;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r101, r6);

        goto label17;

     label25:
        $z7 = staticinvoke <androidx.ui.layout.ConstraintLayoutKt: boolean access$getDEBUG$cp$s511503184()>();

        if $z7 == 0 goto label26;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConstraintLayout is at the end ");

        $r31 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $i6 = virtualinvoke $r31.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $i7 = virtualinvoke $r34.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCL", $r36);

     label26:
        $r26 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $i4 = virtualinvoke $r26.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        $r27 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $i5 = virtualinvoke $r27.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        $r28 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>($i4, $i5);

        return $r28;
    }

    public final void performLayout(androidx.ui.core.Placeable$PlacementScope)
    {
        androidx.ui.layout.Measurer r0;
        androidx.ui.core.Placeable$PlacementScope $r1;
        java.util.Iterator r2, r12;
        java.lang.Object r3, r5, $r8, $r11;
        androidx.ui.core.Placeable r4;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer $r6;
        java.util.ArrayList $r7;
        boolean $z0, $z1;
        androidx.ui.core.Measurable $r9;
        java.util.Map $r10;
        int $i0, $i1;
        androidx.constraintlayout.core.widgets.ConstraintWidget r13;

        r0 := @this: androidx.ui.layout.Measurer;

        $r1 := @parameter0: androidx.ui.core.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r6 = r0.<androidx.ui.layout.Measurer: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer root>;

        $r7 = virtualinvoke $r6.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList getChildren()>();

        r12 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "root.children");

        r2 = r12;

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r8;

        r3 = virtualinvoke r13.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()>();

        $z0 = r3 instanceof androidx.ui.core.Measurable;

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r10 = r0.<androidx.ui.layout.Measurer: java.util.Map placeables>;

        r5 = r3;

        $r9 = (androidx.ui.core.Measurable) r5;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r4 = (androidx.ui.core.Placeable) $r11;

        if r4 != null goto label3;

        goto label1;

     label3:
        $i0 = virtualinvoke r13.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getX()>();

        $i1 = virtualinvoke r13.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getY()>();

        virtualinvoke $r1.<androidx.ui.core.Placeable$PlacementScope: void placeAbsolute(androidx.ui.core.Placeable,int,int)>(r4, $i0, $i1);

        goto label1;

     label4:
        return;
    }

    public void didMeasures()
    {
        androidx.ui.layout.Measurer r0;

        r0 := @this: androidx.ui.layout.Measurer;

        return;
    }

    public static final androidx.ui.unit.Density access$getDensity$p(androidx.ui.layout.Measurer)
    {
        androidx.ui.layout.Measurer r0;
        androidx.ui.unit.Density $r1;

        r0 := @parameter0: androidx.ui.layout.Measurer;

        $r1 = r0.<androidx.ui.layout.Measurer: androidx.ui.unit.Density density>;

        return $r1;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.PropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.PropertyReference1 $r4;
        kotlin.reflect.KProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/layout/Measurer;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "state", "getState()Landroidx/ui/layout/State;");

        $r4 = (kotlin.jvm.internal.PropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.ui.layout.Measurer: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

androidx.ui.layout.Measurer$state$2
<androidx.ui.layout.Measurer$state$2: androidx.ui.layout.Measurer $this>
    void <init>(androidx.ui.layout.Measurer)
    {
        androidx.ui.layout.Measurer$state$2 r0;
        androidx.ui.layout.Measurer $r1;

        r0 := @this: androidx.ui.layout.Measurer$state$2;

        $r1 := @parameter0: androidx.ui.layout.Measurer;

        r0.<androidx.ui.layout.Measurer$state$2: androidx.ui.layout.Measurer $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.ui.layout.State invoke()
    {
        androidx.ui.layout.Measurer$state$2 r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r3, $r4, $r7, $r10, $r14;
        androidx.ui.layout.State $r2;
        java.lang.Object $r5, $r9, $r11, $r13, $r15;
        androidx.ui.layout.Measurer $r6;
        androidx.ui.unit.Density $r8, $r12, $r16;

        r0 := @this: androidx.ui.layout.Measurer$state$2;

        $r2 = new androidx.ui.layout.State;

        $r3 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r3.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r3;

        $r4 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r4.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r4;

        $r5 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = (kotlin.jvm.internal.Ref$ObjectRef) $r5;

        $r6 = r0.<androidx.ui.layout.Measurer$state$2: androidx.ui.layout.Measurer $this>;

        $r8 = staticinvoke <androidx.ui.layout.Measurer: androidx.ui.unit.Density access$getDensity$p(androidx.ui.layout.Measurer)>($r6);

        $r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r8;

        $r9 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r10 = (kotlin.jvm.internal.Ref$ObjectRef) $r9;

        $r11 = $r10.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r12 = (androidx.ui.unit.Density) $r11;

        if $r12 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("density");

        throw null;

     label1:
        $r13 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r14 = (kotlin.jvm.internal.Ref$ObjectRef) $r13;

        $r15 = $r14.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r16 = (androidx.ui.unit.Density) $r15;

        specialinvoke $r2.<androidx.ui.layout.State: void <init>(androidx.ui.unit.Density)>($r16);

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.layout.Measurer$state$2 r0;
        androidx.ui.layout.State $r1;

        r0 := @this: androidx.ui.layout.Measurer$state$2;

        $r1 = virtualinvoke r0.<androidx.ui.layout.Measurer$state$2: androidx.ui.layout.State invoke()>();

        return $r1;
    }

androidx.ui.layout.Measurer$WhenMappings
<androidx.ui.layout.Measurer$WhenMappings: int[] $EnumSwitchMapping$0>
    public static final void <clinit>()
    {
        int[] r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $i1 = virtualinvoke $r2.<androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        $i2 = virtualinvoke $r3.<androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        $i3 = virtualinvoke $r4.<androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: int ordinal()>();

        r0[$i3] = 3;

        <androidx.ui.layout.Measurer$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

