androidx.privacysandbox.tools.core.validator.ModelValidator
<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.validator.ModelValidator$Companion Companion>
<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>
<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List values>
<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List interfaces>
<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List callbacks>
<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>
    private void <init>(androidx.privacysandbox.tools.core.model.ParsedApi)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0, r20, r27, r34;
        androidx.privacysandbox.tools.core.model.ParsedApi r1, $r2, $r6, $r10;
        java.util.Set $r3, $r7, $r11;
        java.util.ArrayList $r4, $r8, $r12, $r14;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.util.List $r5, $r9, $r13, $r15;
        androidx.privacysandbox.tools.core.model.Type $r16, $r17, $r18;
        java.lang.Iterable $r19, $r26, $r33;
        java.util.Collection r21, r25, r28, r32, r35, r39;
        java.util.Iterator r22, r29, r36;
        java.lang.Object r23, r30, r37;
        androidx.privacysandbox.tools.core.model.AnnotatedValue r24;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface r31, r38;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.ParsedApi;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api> = r1;

        $r2 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r3 = virtualinvoke $r2.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getValues()>();

        $r19 = (java.lang.Iterable) $r3;

        r20 = r0;

        $r4 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r19, 10);

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r21 = (java.util.Collection) $r4;

        r22 = interfaceinvoke $r19.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (androidx.privacysandbox.tools.core.model.AnnotatedValue) r23;

        r25 = r21;

        $r18 = virtualinvoke r24.<androidx.privacysandbox.tools.core.model.AnnotatedValue: androidx.privacysandbox.tools.core.model.Type getType()>();

        interfaceinvoke r25.<java.util.Collection: boolean add(java.lang.Object)>($r18);

        goto label1;

     label2:
        $r5 = (java.util.List) r21;

        r20.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List values> = $r5;

        $r6 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r7 = virtualinvoke $r6.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getInterfaces()>();

        $r26 = (java.lang.Iterable) $r7;

        r27 = r0;

        $r8 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r26, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r28 = (java.util.Collection) $r8;

        r29 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) r30;

        r32 = r28;

        $r17 = virtualinvoke r31.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        interfaceinvoke r32.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        goto label3;

     label4:
        $r9 = (java.util.List) r28;

        r27.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List interfaces> = $r9;

        $r10 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r11 = virtualinvoke $r10.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getCallbacks()>();

        $r33 = (java.lang.Iterable) $r11;

        r34 = r0;

        $r12 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r33, 10);

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i2);

        r35 = (java.util.Collection) $r12;

        r36 = interfaceinvoke $r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r38 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) r37;

        r39 = r35;

        $r16 = virtualinvoke r38.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        interfaceinvoke r39.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label5;

     label6:
        $r13 = (java.util.List) r35;

        r34.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List callbacks> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r15 = (java.util.List) $r14;

        r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors> = $r15;

        return;
    }

    public final androidx.privacysandbox.tools.core.model.ParsedApi getApi()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.ParsedApi $r1;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r1 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        return $r1;
    }

    private final androidx.privacysandbox.tools.core.validator.ValidationResult validate()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.validator.ValidationResult $r1;
        java.util.List $r2;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: void validateSingleService()>();

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: void validateNonSuspendFunctionsReturnUnit()>();

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: void validateServiceAndInterfaceMethods()>();

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: void validateValuePropertyTypes()>();

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: void validateCallbackMethods()>();

        $r1 = new androidx.privacysandbox.tools.core.validator.ValidationResult;

        $r2 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        specialinvoke $r1.<androidx.privacysandbox.tools.core.validator.ValidationResult: void <init>(java.util.List)>($r2);

        return $r1;
    }

    private final void validateSingleService()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.ParsedApi $r1, $r6;
        java.util.Set $r2, $r7;
        int $i0;
        java.lang.StringBuilder $r3, $r5, $r12, $r13;
        java.util.List $r4;
        androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 $r8;
        kotlin.jvm.functions.Function1 $r9;
        java.lang.Iterable $r10;
        java.lang.String $r11, $r14;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r1 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r2 = virtualinvoke $r1.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getServices()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        if $i0 <= 1 goto label1;

        $r4 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple services are not supported. Found: ");

        $r6 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r7 = virtualinvoke $r6.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getServices()>();

        $r10 = (java.lang.Iterable) $r7;

        $r8 = <androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1: androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r10, null, null, null, 0, null, $r9, 31, null);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r14);

     label1:
        return;
    }

    private final void validateNonSuspendFunctionsReturnUnit()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        java.util.Set r1, $r7, $r9;
        java.util.Iterator r2, r4;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface r3;
        androidx.privacysandbox.tools.core.model.Method r5;
        androidx.privacysandbox.tools.core.model.ParsedApi $r6, $r8;
        java.lang.Iterable $r10;
        boolean $z0, $z1, $z2, $z4;
        java.lang.Object $r11, $r13;
        java.util.List $r12, $r18;
        androidx.privacysandbox.tools.core.model.Type $r14, $r16, $r20;
        androidx.privacysandbox.tools.core.model.Types $r15;
        java.lang.StringBuilder $r17, $r19, $r22, $r23, $r25, $r26;
        java.lang.String $r21, $r24, $r27;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r6 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r7 = virtualinvoke $r6.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getServices()>();

        $r8 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r9 = virtualinvoke $r8.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getInterfaces()>();

        $r10 = (java.lang.Iterable) $r9;

        r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)>($r7, $r10);

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r11;

        $r12 = virtualinvoke r3.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: java.util.List getMethods()>();

        r4 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label1;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.privacysandbox.tools.core.model.Method) $r13;

        $z1 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: boolean isSuspend()>();

        if $z1 != 0 goto label2;

        $r14 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: androidx.privacysandbox.tools.core.model.Type getReturnType()>();

        $r15 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getUnit()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r16);

        if $z2 != 0 goto label2;

        $r18 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r20 = virtualinvoke r3.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r21 = virtualinvoke $r20.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r24 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": functions with return values should be suspending functions.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label2;

     label3:
        return;
    }

    private final void validateServiceAndInterfaceMethods()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        java.util.Set r1, $r11, $r13;
        java.util.Iterator r2, r4, r7;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface r3;
        androidx.privacysandbox.tools.core.model.Method r5;
        java.lang.Iterable $r6, $r14;
        java.lang.Object r8, $r15, $r17;
        androidx.privacysandbox.tools.core.model.Parameter r9;
        androidx.privacysandbox.tools.core.model.ParsedApi $r10, $r12;
        boolean $z2, $z3, $z4, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.List $r16, $r18, $r21, $r32;
        androidx.privacysandbox.tools.core.model.Type $r19, $r23, $r34, $r42;
        java.lang.StringBuilder $r20, $r22, $r25, $r26, $r28, $r29, $r31, $r33, $r36, $r37, $r39, $r40;
        java.lang.String $r24, $r27, $r30, $r35, $r38, $r41;
        java.util.Collection $r43;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r10 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r11 = virtualinvoke $r10.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getServices()>();

        $r12 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r13 = virtualinvoke $r12.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getInterfaces()>();

        $r14 = (java.lang.Iterable) $r13;

        r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)>($r11, $r14);

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r15;

        $r16 = virtualinvoke r3.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: java.util.List getMethods()>();

        r4 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label01;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.privacysandbox.tools.core.model.Method) $r17;

        $r18 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: java.util.List getParameters()>();

        $r6 = (java.lang.Iterable) $r18;

        $z3 = $r6 instanceof java.util.Collection;

        if $z3 == 0 goto label03;

        $r43 = (java.util.Collection) $r6;

        $z8 = interfaceinvoke $r43.<java.util.Collection: boolean isEmpty()>();

        if $z8 == 0 goto label03;

        $z10 = 0;

        goto label08;

     label03:
        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z11 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label07;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.privacysandbox.tools.core.model.Parameter) r8;

        $r42 = virtualinvoke r9.<androidx.privacysandbox.tools.core.model.Parameter: androidx.privacysandbox.tools.core.model.Type getType()>();

        $z7 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValidInterfaceParameterType(androidx.privacysandbox.tools.core.model.Type)>($r42);

        if $z7 != 0 goto label05;

        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        if $z12 == 0 goto label04;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        if $z10 == 0 goto label09;

        $r32 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r34 = virtualinvoke r3.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r35 = virtualinvoke $r34.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r38 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: java.lang.String getName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only primitives, lists, data classes annotated with @PrivacySandboxValue and interfaces annotated with @PrivacySandboxCallback or @PrivacySandboxInterface are supported as parameter types.");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r41);

     label09:
        $r19 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: androidx.privacysandbox.tools.core.model.Type getReturnType()>();

        $z4 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValidInterfaceReturnType(androidx.privacysandbox.tools.core.model.Type)>($r19);

        if $z4 != 0 goto label02;

        $r21 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r23 = virtualinvoke r3.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r24 = virtualinvoke $r23.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r27 = virtualinvoke r5.<androidx.privacysandbox.tools.core.model.Method: java.lang.String getName()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only primitives, lists, data classes annotated with @PrivacySandboxValue and interfaces annotated with @PrivacySandboxInterface are supported as return types.");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r30);

        goto label02;

     label10:
        return;
    }

    private final void validateValuePropertyTypes()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        java.util.Iterator r1, r3;
        androidx.privacysandbox.tools.core.model.AnnotatedValue r2;
        androidx.privacysandbox.tools.core.model.ValueProperty r4;
        androidx.privacysandbox.tools.core.model.ParsedApi $r5;
        java.util.Set $r6;
        boolean $z0, $z1, $z3;
        java.lang.Object $r7, $r9;
        java.util.List $r8, $r12;
        androidx.privacysandbox.tools.core.model.Type $r10, $r14;
        java.lang.StringBuilder $r11, $r13, $r16, $r17, $r19, $r20;
        java.lang.String $r15, $r18, $r21;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r5 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getValues()>();

        r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.privacysandbox.tools.core.model.AnnotatedValue) $r7;

        $r8 = virtualinvoke r2.<androidx.privacysandbox.tools.core.model.AnnotatedValue: java.util.List getProperties()>();

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label1;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.privacysandbox.tools.core.model.ValueProperty) $r9;

        $r10 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.ValueProperty: androidx.privacysandbox.tools.core.model.Type getType()>();

        $z1 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValidValuePropertyType(androidx.privacysandbox.tools.core.model.Type)>($r10);

        if $z1 != 0 goto label2;

        $r12 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r14 = virtualinvoke r2.<androidx.privacysandbox.tools.core.model.AnnotatedValue: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r15 = virtualinvoke $r14.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r18 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.ValueProperty: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only primitives, lists, data classes annotated with @PrivacySandboxValue and interfaces annotated with @PrivacySandboxInterface are supported as properties.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label2;

     label3:
        return;
    }

    private final void validateCallbackMethods()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        java.util.Iterator r1, r3, r6;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface r2;
        androidx.privacysandbox.tools.core.model.Method r4;
        java.lang.Iterable $r5;
        java.lang.Object r7, $r11, $r13;
        androidx.privacysandbox.tools.core.model.Parameter r8;
        androidx.privacysandbox.tools.core.model.ParsedApi $r9;
        java.util.Set $r10;
        boolean $z2, $z3, $z4, $z6, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.List $r12, $r14, $r19, $r30;
        androidx.privacysandbox.tools.core.model.Type $r15, $r17, $r21, $r32, $r40;
        androidx.privacysandbox.tools.core.model.Types $r16;
        java.lang.StringBuilder $r18, $r20, $r23, $r24, $r26, $r27, $r29, $r31, $r34, $r35, $r37, $r38;
        java.lang.String $r22, $r25, $r28, $r33, $r36, $r39;
        java.util.Collection $r41;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r9 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r10 = virtualinvoke $r9.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Set getCallbacks()>();

        r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r11;

        $r12 = virtualinvoke r2.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: java.util.List getMethods()>();

        r3 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label01;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.privacysandbox.tools.core.model.Method) $r13;

        $r14 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.Method: java.util.List getParameters()>();

        $r5 = (java.lang.Iterable) $r14;

        $z3 = $r5 instanceof java.util.Collection;

        if $z3 == 0 goto label03;

        $r41 = (java.util.Collection) $r5;

        $z9 = interfaceinvoke $r41.<java.util.Collection: boolean isEmpty()>();

        if $z9 == 0 goto label03;

        $z11 = 0;

        goto label08;

     label03:
        r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z12 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label07;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.privacysandbox.tools.core.model.Parameter) r7;

        $r40 = virtualinvoke r8.<androidx.privacysandbox.tools.core.model.Parameter: androidx.privacysandbox.tools.core.model.Type getType()>();

        $z8 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValidCallbackParameterType(androidx.privacysandbox.tools.core.model.Type)>($r40);

        if $z8 != 0 goto label05;

        $z13 = 1;

        goto label06;

     label05:
        $z13 = 0;

     label06:
        if $z13 == 0 goto label04;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        if $z11 == 0 goto label09;

        $r30 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r32 = virtualinvoke r2.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r33 = virtualinvoke $r32.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r36 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.Method: java.lang.String getName()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only primitives, lists, data classes annotated with @PrivacySandboxValue and interfaces annotated with @PrivacySandboxInterface are supported as callback parameter types.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r39);

     label09:
        $r15 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.Method: androidx.privacysandbox.tools.core.model.Type getReturnType()>();

        $r16 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r17 = virtualinvoke $r16.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getUnit()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r17);

        if $z4 == 0 goto label10;

        $z6 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.Method: boolean isSuspend()>();

        if $z6 == 0 goto label02;

     label10:
        $r19 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r21 = virtualinvoke r2.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r22 = virtualinvoke $r21.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r25 = virtualinvoke r4.<androidx.privacysandbox.tools.core.model.Method: java.lang.String getName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": callback methods should be non-suspending and have no return values.");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r28);

        goto label02;

     label11:
        return;
    }

    private final boolean isValidInterfaceParameterType(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $z0 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValue(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isInterface(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isPrimitive(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isList(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z3 != 0 goto label1;

        $z4 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isCallback(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    private final boolean isValidInterfaceReturnType(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $z0 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValue(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isInterface(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isPrimitive(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isList(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private final boolean isValidValuePropertyType(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $z0 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValue(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isInterface(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isPrimitive(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isList(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private final boolean isValidCallbackParameterType(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $z0 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValue(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isInterface(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isPrimitive(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isList(androidx.privacysandbox.tools.core.model.Type)>(r1);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private final boolean isValue(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r4;
        androidx.privacysandbox.tools.core.model.Types $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $r3 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List values>;

        $r2 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        return $z0;
    }

    private final boolean isInterface(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r4;
        androidx.privacysandbox.tools.core.model.Types $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $r3 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List interfaces>;

        $r2 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        return $z0;
    }

    private final boolean isCallback(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r4;
        androidx.privacysandbox.tools.core.model.Types $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $r3 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List callbacks>;

        $r2 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        return $z0;
    }

    private final boolean isPrimitive(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r5;
        androidx.privacysandbox.tools.core.model.Types $r2, $r4;
        java.util.Set $r3;
        boolean $z0;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $r2 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.privacysandbox.tools.core.model.Types: java.util.Set getPrimitiveTypes()>();

        $r4 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        return $z0;
    }

    private final boolean isList(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r15;
        java.lang.String $r2, $r13, $r14;
        boolean $z1, $z2, $z3, $z4, $z6, $z8;
        java.util.List $r3, $r4, $r6, $r9;
        int $i0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        $r2 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, "kotlin.collections.List");

        if $z1 == 0 goto label8;

        $r3 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        if $z6 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List type should have one type parameter, found ");

        $r9 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        $z2 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: boolean isNullable()>();

        if $z2 == 0 goto label4;

        $r6 = r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: java.util.List errors>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("Nullable lists are not supported");

     label4:
        $r4 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (androidx.privacysandbox.tools.core.model.Type) $r5;

        $z3 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isValue(androidx.privacysandbox.tools.core.model.Type)>($r15);

        if $z3 != 0 goto label5;

        $z4 = specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: boolean isPrimitive(androidx.privacysandbox.tools.core.model.Type)>($r15);

        if $z4 == 0 goto label6;

     label5:
        $z8 = 1;

        goto label7;

     label6:
        $z8 = 0;

     label7:
        return $z8;

     label8:
        return 0;
    }

    public static final androidx.privacysandbox.tools.core.validator.ValidationResult access$validate(androidx.privacysandbox.tools.core.validator.ModelValidator)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator $r0;
        androidx.privacysandbox.tools.core.validator.ValidationResult $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.validator.ModelValidator;

        $r1 = specialinvoke $r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.validator.ValidationResult validate()>();

        return $r1;
    }

    public void <init>(androidx.privacysandbox.tools.core.model.ParsedApi, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator r0;
        androidx.privacysandbox.tools.core.model.ParsedApi r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.ParsedApi;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator: void <init>(androidx.privacysandbox.tools.core.model.ParsedApi)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$Companion $r0;

        $r0 = new androidx.privacysandbox.tools.core.validator.ModelValidator$Companion;

        specialinvoke $r0.<androidx.privacysandbox.tools.core.validator.ModelValidator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.validator.ModelValidator$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.tools.core.validator.ModelValidator$Companion
    private void <init>()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$Companion r0;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.privacysandbox.tools.core.validator.ValidationResult validate(androidx.privacysandbox.tools.core.model.ParsedApi)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$Companion r0;
        androidx.privacysandbox.tools.core.model.ParsedApi r1;
        androidx.privacysandbox.tools.core.validator.ModelValidator $r2;
        androidx.privacysandbox.tools.core.validator.ValidationResult $r3;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator$Companion;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.ParsedApi;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "api");

        $r2 = new androidx.privacysandbox.tools.core.validator.ModelValidator;

        specialinvoke $r2.<androidx.privacysandbox.tools.core.validator.ModelValidator: void <init>(androidx.privacysandbox.tools.core.model.ParsedApi,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        $r3 = staticinvoke <androidx.privacysandbox.tools.core.validator.ModelValidator: androidx.privacysandbox.tools.core.validator.ValidationResult access$validate(androidx.privacysandbox.tools.core.validator.ModelValidator)>($r2);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator$Companion: void <init>()>();

        return;
    }

androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1
<androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1: androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 INSTANCE>
    void <init>()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 r0;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.CharSequence invoke(androidx.privacysandbox.tools.core.model.AnnotatedInterface)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 r0;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface r1;
        androidx.privacysandbox.tools.core.model.Type $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.AnnotatedInterface;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.AnnotatedInterface: androidx.privacysandbox.tools.core.model.Type getType()>();

        $r3 = virtualinvoke $r2.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 r0;
        java.lang.Object r1;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) r1;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1: java.lang.CharSequence invoke(androidx.privacysandbox.tools.core.model.AnnotatedInterface)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 $r0;

        $r0 = new androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1;

        specialinvoke $r0.<androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1: void <init>()>();

        <androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1: androidx.privacysandbox.tools.core.validator.ModelValidator$validateSingleService$1 INSTANCE> = $r0;

        return;
    }

