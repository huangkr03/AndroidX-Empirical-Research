androidx.appcompat.widget.DrawableUtils
<androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET>
<androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET>
<androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE>
    private void <init>()
    {
        androidx.appcompat.widget.DrawableUtils r0;

        r0 := @this: androidx.appcompat.widget.DrawableUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0, $r3;
        android.graphics.Insets r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect $r2, $r4, $r5;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        r1 = staticinvoke <androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)>(r0);

        $r5 = new android.graphics.Rect;

        $i5 = r1.<android.graphics.Insets: int left>;

        $i4 = r1.<android.graphics.Insets: int top>;

        $i3 = r1.<android.graphics.Insets: int right>;

        $i2 = r1.<android.graphics.Insets: int bottom>;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>($i5, $i4, $i3, $i2);

        return $r5;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label2;

        $r3 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)>(r0);

        $r4 = staticinvoke <androidx.appcompat.widget.DrawableUtils$Api18Impl: android.graphics.Rect getOpticalInsets(android.graphics.drawable.Drawable)>($r3);

        return $r4;

     label2:
        $r2 = <androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE>;

        return $r2;
    }

    static void fixDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        java.lang.String r1, $r3, $r4;
        java.lang.Class $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 21 goto label1;

        $r4 = "android.graphics.drawable.VectorDrawable";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        staticinvoke <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>(r0);

        goto label2;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label2;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 31 goto label2;

        $r3 = "android.graphics.drawable.ColorStateListDrawable";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.appcompat.widget.DrawableUtils: void forceDrawableStateChange(android.graphics.drawable.Drawable)>(r0);

     label2:
        return;
    }

    public static boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0, r4, $r6, $r8, $r10;
        android.graphics.drawable.Drawable$ConstantState r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r2;
        android.graphics.drawable.Drawable[] r3;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.graphics.drawable.ScaleDrawable $r5;
        androidx.appcompat.graphics.drawable.DrawableWrapperCompat $r7;
        androidx.core.graphics.drawable.WrappedDrawable $r9;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label01;

        return 1;

     label01:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 15 goto label02;

        $z11 = r0 instanceof android.graphics.drawable.InsetDrawable;

        if $z11 == 0 goto label02;

        return 0;

     label02:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 >= 15 goto label03;

        $z10 = r0 instanceof android.graphics.drawable.GradientDrawable;

        if $z10 == 0 goto label03;

        return 0;

     label03:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 >= 17 goto label04;

        $z9 = r0 instanceof android.graphics.drawable.LayerDrawable;

        if $z9 == 0 goto label04;

        return 0;

     label04:
        $z0 = r0 instanceof android.graphics.drawable.DrawableContainer;

        if $z0 == 0 goto label08;

        r1 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $z7 = r1 instanceof android.graphics.drawable.DrawableContainer$DrawableContainerState;

        if $z7 == 0 goto label07;

        r2 = (android.graphics.drawable.DrawableContainer$DrawableContainerState) r1;

        r3 = virtualinvoke r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>();

        i0 = lengthof r3;

        i5 = 0;

     label05:
        if i5 >= i0 goto label07;

        r4 = r3[i5];

        $z8 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r4);

        if $z8 != 0 goto label06;

        return 0;

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        goto label11;

     label08:
        $z1 = r0 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if $z1 == 0 goto label09;

        $r9 = (androidx.core.graphics.drawable.WrappedDrawable) r0;

        $r10 = interfaceinvoke $r9.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

        $z6 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r10);

        return $z6;

     label09:
        $z2 = r0 instanceof androidx.appcompat.graphics.drawable.DrawableWrapperCompat;

        if $z2 == 0 goto label10;

        $r7 = (androidx.appcompat.graphics.drawable.DrawableWrapperCompat) r0;

        $r8 = virtualinvoke $r7.<androidx.appcompat.graphics.drawable.DrawableWrapperCompat: android.graphics.drawable.Drawable getDrawable()>();

        $z5 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r8);

        return $z5;

     label10:
        $z3 = r0 instanceof android.graphics.drawable.ScaleDrawable;

        if $z3 == 0 goto label11;

        $r5 = (android.graphics.drawable.ScaleDrawable) r0;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>();

        $z4 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r6);

        return $z4;

     label11:
        return 1;
    }

    private static void forceDrawableStateChange(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int[] r1, $r2, $r3;
        int $i0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = <androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET>;

        virtualinvoke r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        goto label3;

     label2:
        $r3 = <androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET>;

        virtualinvoke r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label3:
        virtualinvoke r0.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return;
    }

    public static android.graphics.PorterDuff$Mode parseTintMode(int, android.graphics.PorterDuff$Mode)
    {
        int i0;
        android.graphics.PorterDuff$Mode r0, $r1, $r2, $r3, $r4, $r5, $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.PorterDuff$Mode;

        tableswitch(i0)
        {
            case 3: goto label1;
            case 4: goto label7;
            case 5: goto label2;
            case 6: goto label7;
            case 7: goto label7;
            case 8: goto label7;
            case 9: goto label3;
            case 10: goto label7;
            case 11: goto label7;
            case 12: goto label7;
            case 13: goto label7;
            case 14: goto label4;
            case 15: goto label5;
            case 16: goto label6;
            default: goto label7;
        };

     label1:
        $r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER>;

        return $r6;

     label2:
        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        return $r5;

     label3:
        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        return $r4;

     label4:
        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return $r3;

     label5:
        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SCREEN>;

        return $r2;

     label6:
        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode ADD>;

        return $r1;

     label7:
        return r0;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;
        android.graphics.Rect $r2;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET> = $r0;

        $r1 = newarray (int)[0];

        <androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        <androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE> = $r2;

        return;
    }

androidx.appcompat.widget.DrawableUtils$Api18Impl
<androidx.appcompat.widget.DrawableUtils$Api18Impl: boolean sReflectionSuccessful>
<androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Method sGetOpticalInsets>
<androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sLeft>
<androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sTop>
<androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sRight>
<androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sBottom>
    private void <init>()
    {
        androidx.appcompat.widget.DrawableUtils$Api18Impl r0;

        r0 := @this: androidx.appcompat.widget.DrawableUtils$Api18Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.Rect getOpticalInsets(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.reflect.Method $r2;
        android.graphics.Rect $r3, $r13;
        java.lang.reflect.Field $r4, $r5, $r6, $r7;
        java.lang.Throwable $r8, $r9, r11, r12;
        java.lang.Object r10;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 29 goto label6;

        $z0 = <androidx.appcompat.widget.DrawableUtils$Api18Impl: boolean sReflectionSuccessful>;

        if $z0 == 0 goto label6;

     label1:
        $r2 = <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Method sGetOpticalInsets>;

        $r1 = newarray (java.lang.Object)[0];

        r10 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r1);

        if r10 == null goto label3;

        $r3 = new android.graphics.Rect;

        $r4 = <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sLeft>;

        $i1 = virtualinvoke $r4.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r10);

        $r5 = <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sTop>;

        $i2 = virtualinvoke $r5.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r10);

        $r6 = <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sRight>;

        $i3 = virtualinvoke $r6.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r10);

        $r7 = <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sBottom>;

        $i4 = virtualinvoke $r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r10);

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>($i1, $i2, $i3, $i4);

     label2:
        return $r3;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r11 = $r9;

        goto label6;

     label5:
        $r8 := @caughtexception;

        r12 = $r8;

     label6:
        $r13 = <androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE>;

        return $r13;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r1, r10;
        java.lang.Throwable $r2, $r3, $r4, r11, r12, r13;
        java.lang.reflect.Method r5;
        java.lang.reflect.Field r6, r7, r8, r9;
        boolean z0;

        r5 = null;

        r6 = null;

        r7 = null;

        r8 = null;

        r9 = null;

        z0 = 0;

     label1:
        r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.graphics.Insets");

        $r1 = class "Landroid/graphics/drawable/Drawable;";

        $r0 = newarray (java.lang.Class)[0];

        r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getOpticalInsets", $r0);

        r6 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("left");

        r7 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("top");

        r8 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("right");

        r9 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("bottom");

        z0 = 1;

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

        r11 = $r3;

        goto label6;

     label4:
        $r2 := @caughtexception;

        r12 = $r2;

        goto label6;

     label5:
        $r4 := @caughtexception;

        r13 = $r4;

     label6:
        if z0 == 0 goto label7;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Method sGetOpticalInsets> = r5;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sLeft> = r6;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sTop> = r7;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sRight> = r8;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sBottom> = r9;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: boolean sReflectionSuccessful> = 1;

        goto label8;

     label7:
        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Method sGetOpticalInsets> = null;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sLeft> = null;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sTop> = null;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sRight> = null;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: java.lang.reflect.Field sBottom> = null;

        <androidx.appcompat.widget.DrawableUtils$Api18Impl: boolean sReflectionSuccessful> = 0;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
    }

androidx.appcompat.widget.DrawableUtils$Api29Impl
    private void <init>()
    {
        androidx.appcompat.widget.DrawableUtils$Api29Impl r0;

        r0 := @this: androidx.appcompat.widget.DrawableUtils$Api29Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        android.graphics.Insets $r1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        return $r1;
    }

