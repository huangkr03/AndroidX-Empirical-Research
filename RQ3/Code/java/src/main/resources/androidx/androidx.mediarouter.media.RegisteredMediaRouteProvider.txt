androidx.mediarouter.media.RegisteredMediaRouteProvider
<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.lang.String TAG>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.ComponentName mComponentName>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler mPrivateHandler>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mStarted>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mConnectionReady>
<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback mControllerCallback>
    public void <init>(android.content.Context, android.content.ComponentName)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata $r3;
        java.util.ArrayList $r4;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        $r3 = new androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        specialinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: void <init>(android.content.ComponentName)>(r2);

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider: void <init>(android.content.Context,androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata)>(r1, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections> = $r4;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.ComponentName mComponentName> = r2;

        $r5 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler;

        specialinvoke $r5.<androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler mPrivateHandler> = $r5;

        return;
    }

    public androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$RouteController createRouteController(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.String r1, r2;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId cannot be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeGroupId cannot be null");

        throw $r4;

     label2:
        $r3 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$RouteController createRouteController(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController onCreateDynamicGroupRouteController(java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("initialMemberRouteId cannot be null.");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController createDynamicGroupRouteController(java.lang.String)>(r1);

        return $r2;
    }

    public void onDiscoveryRequestChanged(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r1;
        boolean $z0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mConnectionReady>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void setDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest)>(r1);

     label1:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void updateBinding()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        android.os.Messenger r3, $r18;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r14, $r15, $r16;
        java.lang.String $r8, $r13, $r17;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $z0 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Connected");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r17);

     label1:
        $z1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound>;

        if $z1 == 0 goto label7;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void disconnect()>();

        if r2 == null goto label2;

        $r18 = new android.os.Messenger;

        specialinvoke $r18.<android.os.Messenger: void <init>(android.os.IBinder)>(r2);

        goto label3;

     label2:
        $r18 = null;

     label3:
        r3 = $r18;

        $z2 = staticinvoke <androidx.mediarouter.media.MediaRouteProviderProtocol: boolean isValidRemoteMessenger(android.os.Messenger)>(r3);

        if $z2 == 0 goto label6;

        $r9 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        specialinvoke $r9.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider,android.os.Messenger)>(r0, r3);

        r4 = $r9;

        $z3 = virtualinvoke r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean register()>();

        if $z3 == 0 goto label4;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection> = r4;

        goto label5;

     label4:
        $z4 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z4 == 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Registration failed");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r13);

     label5:
        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Service returned invalid messenger binder");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r8);

     label7:
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        android.content.ComponentName r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: android.content.ComponentName;

        $z0 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Service disconnected");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r5);

     label1:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void disconnect()>();

        return;
    }

    public java.lang.String toString()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        android.content.ComponentName $r3;
        java.lang.String $r4, $r6;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service connection ");

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.ComponentName mComponentName>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean hasComponentName(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.String r1, r2, $r4, $r6;
        android.content.ComponentName $r3, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.ComponentName mComponentName>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.ComponentName mComponentName>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getClassName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void start()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mStarted>;

        if $z0 != 0 goto label2;

        $z1 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Starting");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r4);

     label1:
        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mStarted> = 1;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void updateBinding()>();

     label2:
        return;
    }

    public void stop()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mStarted>;

        if $z0 == 0 goto label2;

        $z1 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Stopping");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r4);

     label1:
        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mStarted> = 0;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void updateBinding()>();

     label2:
        return;
    }

    public void rebindIfDisconnected()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r1 != null goto label1;

        $z0 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean shouldBind()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void unbind()>();

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void bind()>();

     label1:
        return;
    }

    public void setControllerCallback(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback mControllerCallback> = r1;

        return;
    }

    private void updateBinding()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $z0 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean shouldBind()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void bind()>();

        goto label2;

     label1:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void unbind()>();

     label2:
        return;
    }

    private boolean shouldBind()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        boolean $z0, $z1;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mStarted>;

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest getDiscoveryRequest()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void bind()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        android.content.Intent r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.ComponentName $r3;
        int $i0;
        android.content.Context $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r15, $r16, $r17;
        java.lang.String $r9, $r13, $r18;
        java.lang.Throwable $r14, r19;
        short s4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound>;

        if $z0 != 0 goto label6;

        $z1 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Binding");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r13);

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.media.MediaRouteProviderService");

        r1 = $r2;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.ComponentName mComponentName>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r3);

     label2:
        s4 = 1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label3;

        s4 = s4 | 4096;

     label3:
        $r5 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.Context getContext()>();

        $z2 = virtualinvoke $r5.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r1, r0, s4);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound> = $z2;

        $z3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound>;

        if $z3 != 0 goto label4;

        $z4 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z4 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Bind failed");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r9);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        r19 = $r14;

        $z5 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z5 == 0 goto label6;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Bind failed");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouteProviderProxy", $r18, r19);

     label6:
        return;

        catch java.lang.SecurityException from label2 to label4 with label5;
    }

    private void unbind()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.Throwable r1, $r7;
        boolean $z0, $z1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound>;

        if $z0 == 0 goto label5;

        $z1 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unbinding");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r6);

     label1:
        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mBound> = 0;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void disconnect()>();

     label2:
        $r2 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unbindService failed");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouteProviderProxy", $r11, r1);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private androidx.mediarouter.media.MediaRouteProvider$RouteController createRouteController(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.String r1, r2, $r8;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r3;
        java.util.List r4;
        int i0, i1;
        androidx.mediarouter.media.MediaRouteDescriptor r5;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r6, $r9;
        java.lang.Object $r7;
        boolean $z0, $z2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection $r10, $r13;
        java.util.ArrayList $r11;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r12;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor getDescriptor()>();

        if r3 == null goto label4;

        r4 = virtualinvoke r3.<androidx.mediarouter.media.MediaRouteProviderDescriptor: java.util.List getRoutes()>();

        i0 = interfaceinvoke r4.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (androidx.mediarouter.media.MediaRouteDescriptor) $r7;

        $r8 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r9 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        specialinvoke $r9.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider,java.lang.String,java.lang.String)>(r0, r1, r2);

        r6 = $r9;

        $r11 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        $r10 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) r6;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $z2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mConnectionReady>;

        if $z2 == 0 goto label2;

        $r13 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) r6;

        $r12 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        interfaceinvoke $r13.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void attachConnection(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>($r12);

     label2:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void updateBinding()>();

        return r6;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return null;
    }

    private androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController createDynamicGroupRouteController(java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        java.lang.String r1, $r7;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r2;
        java.util.List r3;
        int i0, i1;
        androidx.mediarouter.media.MediaRouteDescriptor r4;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r5, $r8;
        java.lang.Object $r6;
        boolean $z0, $z2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection $r9, $r12;
        java.util.ArrayList $r10;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r11;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor getDescriptor()>();

        if r2 == null goto label4;

        r3 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProviderDescriptor: java.util.List getRoutes()>();

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.mediarouter.media.MediaRouteDescriptor) $r6;

        $r7 = virtualinvoke r4.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r8 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        specialinvoke $r8.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider,java.lang.String)>(r0, r1);

        r5 = $r8;

        $r10 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        $r9 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) r5;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $z2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mConnectionReady>;

        if $z2 == 0 goto label2;

        $r12 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) r5;

        $r11 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        interfaceinvoke $r12.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void attachConnection(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>($r11);

     label2:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void updateBinding()>();

        return r5;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return null;
    }

    void onConnectionReady(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1, $r3, $r4;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r3 != r1 goto label1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mConnectionReady> = 1;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void attachControllersToConnection()>();

        r2 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest getDiscoveryRequest()>();

        if r2 == null goto label1;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        virtualinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void setDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest)>(r2);

     label1:
        return;
    }

    void onConnectionDied(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r2 != r1 goto label2;

        $z0 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Service connection died");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r6);

     label1:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void disconnect()>();

     label2:
        return;
    }

    void onConnectionError(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1, $r3;
        java.lang.String r2, $r8;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r3 != r1 goto label2;

        $z0 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Service connection error - ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r8);

     label1:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void unbind()>();

     label2:
        return;
    }

    void onConnectionDescriptorChanged(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection, androidx.mediarouter.media.MediaRouteProviderDescriptor)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1, $r3;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProviderDescriptor;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r3 != r1 goto label2;

        $z0 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Descriptor changed, descriptor=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r8);

     label1:
        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void setDescriptor(androidx.mediarouter.media.MediaRouteProviderDescriptor)>(r2);

     label2:
        return;
    }

    void onDynamicRouteDescriptorChanged(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection, int, androidx.mediarouter.media.MediaRouteDescriptor, java.util.List)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1, $r5;
        int i0;
        androidx.mediarouter.media.MediaRouteDescriptor r2;
        java.util.List r3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection r4;
        boolean $z0, $z1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.mediarouter.media.MediaRouteDescriptor;

        r3 := @parameter3: java.util.List;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r5 != r1 goto label2;

        $z0 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": DynamicRouteDescriptors changed, descriptors=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r11);

     label1:
        r4 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection findControllerById(int)>(i0);

        $z1 = r4 instanceof androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        if $z1 == 0 goto label2;

        $r6 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController) r4;

        virtualinvoke $r6.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: void onDynamicRoutesChanged(androidx.mediarouter.media.MediaRouteDescriptor,java.util.List)>(r2, r3);

     label2:
        return;
    }

    void onConnectionControllerReleasedByProvider(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection, int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1, $r3;
        int i0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection r2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback $r4, $r6;
        boolean $z0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r3 != r1 goto label2;

        r2 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection findControllerById(int)>(i0);

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback mControllerCallback>;

        if $r4 == null goto label1;

        $z0 = r2 instanceof androidx.mediarouter.media.MediaRouteProvider$RouteController;

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback mControllerCallback>;

        $r5 = (androidx.mediarouter.media.MediaRouteProvider$RouteController) r2;

        interfaceinvoke $r6.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback: void onControllerReleasedByProvider(androidx.mediarouter.media.MediaRouteProvider$RouteController)>($r5);

     label1:
        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onControllerReleased(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection)>(r2);

     label2:
        return;
    }

    private androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection findControllerById(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        int i0, $i1;
        java.util.Iterator r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) $r4;

        $i1 = interfaceinvoke r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: int getControllerId()>();

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private void disconnect()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        if $r1 == null goto label1;

        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void setDescriptor(androidx.mediarouter.media.MediaRouteProviderDescriptor)>(null);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean mConnectionReady> = 0;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void detachControllersFromConnection()>();

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void dispose()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection> = null;

     label1:
        return;
    }

    void onControllerReleased(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void detachConnection()>();

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void updateBinding()>();

        return;
    }

    private void attachControllersToConnection()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r4;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) $r3;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mActiveConnection>;

        interfaceinvoke $r5.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void attachConnection(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void detachControllersFromConnection()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider: java.util.ArrayList mControllerConnections>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection) $r3;

        interfaceinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void detachConnection()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaRouteProviderProxy", 3);

        <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG> = $z0;

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1>;

        virtualinvoke $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void failPendingCallbacks()>();

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1>;

        $r3 = $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection this$1>;

        virtualinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onConnectionDied(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>($r2);

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mServiceMessenger>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler mReceiveHandler>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mReceiveMessenger>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextControllerId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mServiceVersion>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>
    public void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider, android.os.Messenger)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider r1;
        android.os.Messenger r2, $r5;
        android.util.SparseArray $r3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler $r4, $r6;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r2 := @parameter1: android.os.Messenger;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextControllerId> = 1;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks> = $r3;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mServiceMessenger> = r2;

        $r4 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler;

        specialinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>(r0);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler mReceiveHandler> = $r4;

        $r5 = new android.os.Messenger;

        $r6 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler mReceiveHandler>;

        specialinvoke $r5.<android.os.Messenger: void <init>(android.os.Handler)>($r6);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mReceiveMessenger> = $r5;

        return;
    }

    public boolean register()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        java.lang.Throwable r1, $r4;
        int $i0, $i1, $i2;
        boolean $z0;
        android.os.Messenger $r2;
        android.os.IBinder $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i1 = $i0 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId> = $i0;

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId>;

        $z0 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(1, $i2, 4, null, null);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mServiceMessenger>;

        $r3 = virtualinvoke $r2.<android.os.Messenger: android.os.IBinder getBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void binderDied()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispose()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler $r1;
        android.os.Messenger $r2;
        android.os.IBinder $r3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r4;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1 $r5;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler $r6;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(2, 0, 0, null, null);

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler mReceiveHandler>;

        virtualinvoke $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: void dispose()>();

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mServiceMessenger>;

        $r3 = virtualinvoke $r2.<android.os.Messenger: android.os.IBinder getBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        $r6 = $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler mPrivateHandler>;

        $r5 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1;

        specialinvoke $r5.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$1: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>(r0);

        virtualinvoke $r6.<androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    void failPendingCallbacks()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1;
        android.util.SparseArray $r1, $r2, $r3;
        java.lang.Object $r4;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (androidx.mediarouter.media.MediaRouter$ControlRequestCallback) $r4;

        virtualinvoke $r5.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onError(java.lang.String,android.os.Bundle)>(null, null);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        return;
    }

    public boolean onGenericFailure(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId>;

        if i0 != $i1 goto label1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId> = 0;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        virtualinvoke $r5.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onConnectionError(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection,java.lang.String)>(r0, "Registration failed");

     label1:
        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (androidx.mediarouter.media.MediaRouter$ControlRequestCallback) $r3;

        if r1 == null goto label2;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onError(java.lang.String,android.os.Bundle)>(null, null);

     label2:
        return 1;
    }

    public boolean onGenericSuccess(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        return 1;
    }

    public boolean onRegistered(int, int, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1, $i2, $i3;
        android.os.Bundle r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r2, $r4;
        androidx.mediarouter.media.MediaRouteProviderDescriptor $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mServiceVersion>;

        if $i2 != 0 goto label1;

        $i3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId>;

        if i0 != $i3 goto label1;

        if i1 < 1 goto label1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mPendingRegisterRequestId> = 0;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mServiceVersion> = i1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        $r3 = staticinvoke <androidx.mediarouter.media.MediaRouteProviderDescriptor: androidx.mediarouter.media.MediaRouteProviderDescriptor fromBundle(android.os.Bundle)>(r1);

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onConnectionDescriptorChanged(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection,androidx.mediarouter.media.MediaRouteProviderDescriptor)>(r0, $r3);

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        virtualinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onConnectionReady(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>(r0);

        return 1;

     label1:
        return 0;
    }

    public boolean onDescriptorChanged(android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        android.os.Bundle r1;
        int $i0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r2;
        androidx.mediarouter.media.MediaRouteProviderDescriptor $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r1 := @parameter0: android.os.Bundle;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mServiceVersion>;

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        $r3 = staticinvoke <androidx.mediarouter.media.MediaRouteProviderDescriptor: androidx.mediarouter.media.MediaRouteProviderDescriptor fromBundle(android.os.Bundle)>(r1);

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onConnectionDescriptorChanged(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection,androidx.mediarouter.media.MediaRouteProviderDescriptor)>(r0, $r3);

        return 1;

     label1:
        return 0;
    }

    public boolean onDynamicRouteDescriptorsChanged(int, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1;
        android.os.Bundle r1, r2, r6;
        java.util.ArrayList r3, r4, $r8;
        java.util.Iterator r5;
        android.os.Parcelable $r7;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r9;
        java.lang.Object $r10;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor $r11;
        androidx.mediarouter.media.MediaRouteDescriptor r12;
        boolean $z1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mServiceVersion>;

        if $i1 == 0 goto label4;

        r12 = null;

        $r7 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("groupRoute");

        r2 = (android.os.Bundle) $r7;

        if r2 == null goto label1;

        r12 = staticinvoke <androidx.mediarouter.media.MediaRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor fromBundle(android.os.Bundle)>(r2);

     label1:
        r3 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("dynamicRoutes");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        r5 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.os.Bundle) $r10;

        $r11 = staticinvoke <androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor fromBundle(android.os.Bundle)>(r6);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label2;

     label3:
        $r9 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        virtualinvoke $r9.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onDynamicRouteDescriptorChanged(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection,int,androidx.mediarouter.media.MediaRouteDescriptor,java.util.List)>(r0, i0, r12, r4);

        return 1;

     label4:
        return 0;
    }

    public boolean onControlRequestSucceeded(int, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0;
        android.os.Bundle r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (androidx.mediarouter.media.MediaRouter$ControlRequestCallback) $r4;

        if r2 == null goto label1;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onResult(android.os.Bundle)>(r1);

        return 1;

     label1:
        return 0;
    }

    public boolean onControlRequestFailed(int, java.lang.String, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r3;
        android.util.SparseArray $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (androidx.mediarouter.media.MediaRouter$ControlRequestCallback) $r5;

        if r3 == null goto label1;

        $r6 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r3.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onError(java.lang.String,android.os.Bundle)>(r1, r2);

        return 1;

     label1:
        return 0;
    }

    public void onDynamicGroupRouteControllerCreated(int, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0;
        android.os.Bundle r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (androidx.mediarouter.media.MediaRouter$ControlRequestCallback) $r4;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("routeId");

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onResult(android.os.Bundle)>(r1);

        goto label2;

     label1:
        virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onError(java.lang.String,android.os.Bundle)>("DynamicGroupRouteController is created without valid route id.", r1);

     label2:
        return;
    }

    public void onControllerReleasedByProvider(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        virtualinvoke $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onConnectionControllerReleasedByProvider(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection,int)>(r0, i0);

        return;
    }

    public void binderDied()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2 $r2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        $r3 = $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider: androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler mPrivateHandler>;

        $r2 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2;

        specialinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection$2: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>(r0);

        virtualinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public int createRouteController(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2, $i3, $i4;
        android.os.Bundle r3, $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextControllerId>;

        $i2 = $i1 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextControllerId> = $i2;

        i0 = $i1;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("routeId", r1);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("routeGroupId", r2);

        $i3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i4 = $i3 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i4;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(3, $i3, i0, null, r3);

        return i0;
    }

    public int createDynamicGroupRouteController(java.lang.String, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.os.Bundle r3, $r4;
        android.util.SparseArray $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextControllerId>;

        $i3 = $i2 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextControllerId> = $i3;

        i0 = $i2;

        $i4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i5 = $i4 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i5;

        i1 = $i4;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("memberRouteId", r1);

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(11, i1, i0, null, r3);

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r2);

        return i0;
    }

    public void releaseRouteController(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1, $i2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i2 = $i1 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i2;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(4, $i1, i0, null, null);

        return;
    }

    public void selectRoute(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1, $i2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i2 = $i1 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i2;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(5, $i1, i0, null, null);

        return;
    }

    public void unselectRoute(int, int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1, $i2, $i3;
        android.os.Bundle r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("unselectReason", i1);

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i3 = $i2 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i3;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(6, $i2, i0, null, r1);

        return;
    }

    public void setVolume(int, int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1, $i2, $i3;
        android.os.Bundle r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("volume", i1);

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i3 = $i2 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i3;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(7, $i2, i0, null, r1);

        return;
    }

    public void updateVolume(int, int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1, $i2, $i3;
        android.os.Bundle r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("volume", i1);

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i3 = $i2 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i3;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(8, $i2, i0, null, r1);

        return;
    }

    public boolean sendControlRequest(int, android.content.Intent, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1, $i2, $i3;
        android.content.Intent r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        boolean $z0;
        android.util.SparseArray $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i3 = $i2 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i3;

        i1 = $i2;

        $z0 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(9, i1, i0, r1, null);

        if $z0 == 0 goto label2;

        if r2 == null goto label1;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r2);

     label1:
        return 1;

     label2:
        return 0;
    }

    public void updateMemberRoutes(int, java.util.List)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1, $i2;
        java.util.List r1;
        android.os.Bundle r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        virtualinvoke r2.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("memberRouteIds", $r4);

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i2 = $i1 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i2;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(14, $i1, i0, null, r2);

        return;
    }

    public void addMemberRoute(int, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        android.os.Bundle r2, $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("memberRouteId", r1);

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i2 = $i1 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i2;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(12, $i1, i0, null, r2);

        return;
    }

    public void removeMemberRoute(int, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        android.os.Bundle r2, $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("memberRouteId", r1);

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i2 = $i1 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i2;

        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(13, $i1, i0, null, r2);

        return;
    }

    public void setDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r1;
        int $i0, $i1;
        android.os.Bundle $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId>;

        $i1 = $i0 + 1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int mNextRequestId> = $i1;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle asBundle()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle)>(10, $i0, 0, $r3, null);

        return;
    }

    private boolean sendRequest(int, int, int, java.lang.Object, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.Bundle r2;
        android.os.Message r3;
        android.os.Messenger $r4, $r5;
        java.lang.Throwable $r6, $r7, r8, r9;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        r2 := @parameter4: android.os.Bundle;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = i0;

        r3.<android.os.Message: int arg1> = i1;

        r3.<android.os.Message: int arg2> = i2;

        r3.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r3.<android.os.Message: void setData(android.os.Bundle)>(r2);

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mReceiveMessenger>;

        r3.<android.os.Message: android.os.Messenger replyTo> = $r4;

     label1:
        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: android.os.Messenger mServiceMessenger>;

        virtualinvoke $r5.<android.os.Messenger: void send(android.os.Message)>(r3);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

        goto label5;

     label4:
        $r6 := @caughtexception;

        r9 = $r6;

        if i0 == 2 goto label5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouteProviderProxy", "Could not send message to service.", r9);

     label5:
        return 0;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback
<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback: void onControllerReleasedByProvider(androidx.mediarouter.media.MediaRouteProvider$RouteController)>
androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection
<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: int getControllerId()>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void attachConnection(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection: void detachConnection()>
androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler
    void <init>()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler r0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$PrivateHandler;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler
<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: java.lang.ref.WeakReference mConnectionRef>
    public void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: java.lang.ref.WeakReference mConnectionRef> = $r2;

        return;
    }

    public void dispose()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: java.lang.ref.WeakReference mConnectionRef>;

        virtualinvoke $r1.<java.lang.ref.WeakReference: void clear()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler r0;
        android.os.Message r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r2;
        int i0, i1, i2;
        java.lang.Object r3, $r6;
        android.os.Bundle r4;
        java.lang.ref.WeakReference $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler;

        r1 := @parameter0: android.os.Message;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: java.lang.ref.WeakReference mConnectionRef>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection) $r6;

        if r2 == null goto label1;

        i0 = r1.<android.os.Message: int what>;

        i1 = r1.<android.os.Message: int arg1>;

        i2 = r1.<android.os.Message: int arg2>;

        r3 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = virtualinvoke r1.<android.os.Message: android.os.Bundle peekData()>();

        $z0 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler: boolean processMessage(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection,int,int,int,java.lang.Object,android.os.Bundle)>(r2, i0, i1, i2, r3, r4);

        if $z0 != 0 goto label1;

        $z1 = <androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message from server: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r10);

     label1:
        return;
    }

    private boolean processMessage(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection, int, int, int, java.lang.Object, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1;
        int i0, i1, i2;
        java.lang.Object r2;
        android.os.Bundle r3, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String r4, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$ReceiveHandler;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        r3 := @parameter5: android.os.Bundle;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label09;
            case 4: goto label11;
            case 5: goto label05;
            case 6: goto label15;
            case 7: goto label07;
            case 8: goto label17;
            default: goto label18;
        };

     label01:
        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onGenericFailure(int)>(i1);

        return 1;

     label02:
        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onGenericSuccess(int)>(i1);

        return 1;

     label03:
        if r2 == null goto label04;

        $z10 = r2 instanceof android.os.Bundle;

        if $z10 == 0 goto label18;

     label04:
        $r10 = (android.os.Bundle) r2;

        $z9 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onRegistered(int,int,android.os.Bundle)>(i1, i2, $r10);

        return $z9;

     label05:
        if r2 == null goto label06;

        $z4 = r2 instanceof android.os.Bundle;

        if $z4 == 0 goto label18;

     label06:
        $r7 = (android.os.Bundle) r2;

        $z3 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onDescriptorChanged(android.os.Bundle)>($r7);

        return $z3;

     label07:
        if r2 == null goto label08;

        $z1 = r2 instanceof android.os.Bundle;

        if $z1 == 0 goto label18;

     label08:
        $r5 = (android.os.Bundle) r2;

        $z0 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onDynamicRouteDescriptorsChanged(int,android.os.Bundle)>(i2, $r5);

        return $z0;

     label09:
        if r2 == null goto label10;

        $z8 = r2 instanceof android.os.Bundle;

        if $z8 == 0 goto label18;

     label10:
        $r9 = (android.os.Bundle) r2;

        $z7 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onControlRequestSucceeded(int,android.os.Bundle)>(i1, $r9);

        return $z7;

     label11:
        if r2 == null goto label12;

        $z6 = r2 instanceof android.os.Bundle;

        if $z6 == 0 goto label18;

     label12:
        if r3 != null goto label13;

        $r11 = null;

        goto label14;

     label13:
        $r11 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("error");

     label14:
        r4 = $r11;

        $r8 = (android.os.Bundle) r2;

        $z5 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean onControlRequestFailed(int,java.lang.String,android.os.Bundle)>(i1, r4, $r8);

        return $z5;

     label15:
        $z2 = r2 instanceof android.os.Bundle;

        if $z2 == 0 goto label16;

        $r6 = (android.os.Bundle) r2;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void onDynamicGroupRouteControllerCreated(int,android.os.Bundle)>(i1, $r6);

        goto label18;

     label16:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", "No further information on the dynamic group controller");

        goto label18;

     label17:
        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void onControllerReleasedByProvider(int)>(i2);

     label18:
        return 0;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController this$1>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController this$1> = r1;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void <init>()>();

        return;
    }

    public void onResult(android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1 r0;
        android.os.Bundle r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController this$1>;

        $r3 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("groupableTitle");

        $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mGroupableSectionTitle> = $r3;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController this$1>;

        $r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("transferableTitle");

        $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mTransferableSectionTitle> = $r5;

        return;
    }

    public void onError(java.lang.String, android.os.Bundle)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1 r0;
        java.lang.String r1, $r8;
        android.os.Bundle r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteProviderProxy", $r8);

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mInitialMemberRouteId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mGroupableSectionTitle>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mTransferableSectionTitle>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: boolean mSelected>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingSetVolume>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider r1;
        java.lang.String r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0> = r1;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingSetVolume> = -1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId> = -1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mInitialMemberRouteId> = r2;

        return;
    }

    public int getControllerId()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        return $i0;
    }

    public void attachConnection(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1 r2, $r3;
        java.lang.String $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        $r3 = new androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1;

        specialinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController$1: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController)>(r0);

        r2 = $r3;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection> = r1;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mInitialMemberRouteId>;

        $i0 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int createDynamicGroupRouteController(java.lang.String,androidx.mediarouter.media.MediaRouter$ControlRequestCallback)>($r4, r2);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId> = $i0;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: boolean mSelected>;

        if $z0 == 0 goto label2;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void selectRoute(int)>($i1);

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingSetVolume>;

        if $i2 < 0 goto label1;

        $i7 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        $i6 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingSetVolume>;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void setVolume(int,int)>($i7, $i6);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingSetVolume> = -1;

     label1:
        $i3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta>;

        if $i3 == 0 goto label2;

        $i5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        $i4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta>;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void updateVolume(int,int)>($i5, $i4);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta> = 0;

     label2:
        return;
    }

    public void detachConnection()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void releaseRouteController(int)>($i0);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection> = null;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId> = 0;

     label1:
        return;
    }

    public void onRelease()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        virtualinvoke $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onControllerReleased(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection)>(r0);

        return;
    }

    public void onSelect()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: boolean mSelected> = 1;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void selectRoute(int)>($i0);

     label1:
        return;
    }

    public void onUnselect()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: void onUnselect(int)>(0);

        return;
    }

    public void onUnselect(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        int i0, $i1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        i0 := @parameter0: int;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: boolean mSelected> = 0;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void unselectRoute(int,int)>($i1, i0);

     label1:
        return;
    }

    public void onSetVolume(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        int i0, $i1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void setVolume(int,int)>($i1, i0);

        goto label2;

     label1:
        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingSetVolume> = i0;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta> = 0;

     label2:
        return;
    }

    public void onUpdateVolume(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        int i0, $i1, $i2, $i3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void updateVolume(int,int)>($i3, i0);

        goto label2;

     label1:
        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta>;

        $i2 = $i1 + i0;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mPendingUpdateVolumeDelta> = $i2;

     label2:
        return;
    }

    public boolean onControlRequest(android.content.Intent, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        android.content.Intent r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r3, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        $z0 = virtualinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendControlRequest(int,android.content.Intent,androidx.mediarouter.media.MediaRouter$ControlRequestCallback)>($i0, r1, r2);

        return $z0;

     label1:
        return 0;
    }

    public java.lang.String getGroupableSelectionTitle()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        java.lang.String $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mGroupableSectionTitle>;

        return $r1;
    }

    public java.lang.String getTransferableSectionTitle()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        java.lang.String $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: java.lang.String mTransferableSectionTitle>;

        return $r1;
    }

    public void onUpdateMemberRoutes(java.util.List)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        java.util.List r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r2, $r3;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void updateMemberRoutes(int,java.util.List)>($i0, r1);

     label1:
        return;
    }

    public void onAddMemberRoute(java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        java.lang.String r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r2, $r3;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void addMemberRoute(int,java.lang.String)>($i0, r1);

     label1:
        return;
    }

    public void onRemoveMemberRoute(java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        java.lang.String r1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r2, $r3;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: int mControllerId>;

        virtualinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void removeMemberRoute(int,java.lang.String)>($i0, r1);

     label1:
        return;
    }

    void onDynamicRoutesChanged(androidx.mediarouter.media.MediaRouteDescriptor, java.util.List)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1;
        java.util.List r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        r2 := @parameter1: java.util.List;

        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredDynamicController: void notifyDynamicRoutesChanged(androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>(r1, r2);

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: java.lang.String mRouteId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: java.lang.String mRouteGroupId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: boolean mSelected>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingSetVolume>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>
<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProvider, java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider r1;
        java.lang.String r2, r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0> = r1;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingSetVolume> = -1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: java.lang.String mRouteId> = r2;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: java.lang.String mRouteGroupId> = r3;

        return;
    }

    public int getControllerId()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        return $i0;
    }

    public void attachConnection(androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection r1;
        java.lang.String $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection> = r1;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: java.lang.String mRouteId>;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: java.lang.String mRouteGroupId>;

        $i0 = virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: int createRouteController(java.lang.String,java.lang.String)>($r3, $r2);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId> = $i0;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: boolean mSelected>;

        if $z0 == 0 goto label2;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void selectRoute(int)>($i1);

        $i2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingSetVolume>;

        if $i2 < 0 goto label1;

        $i7 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        $i6 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingSetVolume>;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void setVolume(int,int)>($i7, $i6);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingSetVolume> = -1;

     label1:
        $i3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta>;

        if $i3 == 0 goto label2;

        $i5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        $i4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta>;

        virtualinvoke r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void updateVolume(int,int)>($i5, $i4);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta> = 0;

     label2:
        return;
    }

    public void detachConnection()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void releaseRouteController(int)>($i0);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection> = null;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId> = 0;

     label1:
        return;
    }

    public void onRelease()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider this$0>;

        virtualinvoke $r1.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void onControllerReleased(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerConnection)>(r0);

        return;
    }

    public void onSelect()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;
        int $i0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: boolean mSelected> = 1;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void selectRoute(int)>($i0);

     label1:
        return;
    }

    public void onUnselect()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: void onUnselect(int)>(0);

        return;
    }

    public void onUnselect(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        int i0, $i1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        i0 := @parameter0: int;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: boolean mSelected> = 0;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void unselectRoute(int,int)>($i1, i0);

     label1:
        return;
    }

    public void onSetVolume(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        int i0, $i1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void setVolume(int,int)>($i1, i0);

        goto label2;

     label1:
        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingSetVolume> = i0;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta> = 0;

     label2:
        return;
    }

    public void onUpdateVolume(int)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        int i0, $i1, $i2, $i3;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r1, $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        virtualinvoke $r2.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: void updateVolume(int,int)>($i3, i0);

        goto label2;

     label1:
        $i1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta>;

        $i2 = $i1 + i0;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mPendingUpdateVolumeDelta> = $i2;

     label2:
        return;
    }

    public boolean onControlRequest(android.content.Intent, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController r0;
        android.content.Intent r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection $r3, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection mConnection>;

        $i0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProvider$RegisteredRouteController: int mControllerId>;

        $z0 = virtualinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProvider$Connection: boolean sendControlRequest(int,android.content.Intent,androidx.mediarouter.media.MediaRouter$ControlRequestCallback)>($i0, r1, r2);

        return $z0;

     label1:
        return 0;
    }

