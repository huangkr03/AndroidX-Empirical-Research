androidx.privacysandbox.tools.core.generator.BinderCodeConverter
<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>
    public void <init>(androidx.privacysandbox.tools.core.model.ParsedApi)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.ParsedApi r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.ParsedApi;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "api");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api> = r1;

        return;
    }

    public final com.squareup.kotlinpoet.CodeBlock convertToModelCode(androidx.privacysandbox.tools.core.model.Type, java.lang.String)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r6, $r20, $r28, $r49, $r52;
        java.lang.String r2, $r16, $r18, $r43, $r58, $r59;
        java.lang.Object[] r3, r4, $r21, $r29, $r36, r60, r61, r64, r68;
        androidx.privacysandbox.tools.core.model.Types $r5, $r19, $r46, $r48, $r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.privacysandbox.tools.core.model.ParsedApi $r7, $r10, $r13;
        java.util.Map $r8, $r11, $r14;
        java.lang.Object $r9, $r12, $r15, $r27;
        kotlin.reflect.KClass $r17;
        com.squareup.kotlinpoet.CodeBlock$Companion $r22, $r24, $r30, $r31, $r34, $r37, $r40, $r51, $r55;
        com.squareup.kotlinpoet.CodeBlock $r23, $r25, $r33, $r35, $r39, $r44, $r45, $r53, $r54, $r56, r66, $r67;
        java.util.List $r26;
        com.squareup.kotlinpoet.ClassName $r41;
        androidx.privacysandbox.tools.core.generator.SpecNames $r42;
        java.util.Set $r47;
        java.lang.IllegalArgumentException $r57;
        androidx.privacysandbox.tools.core.model.AnnotatedValue r62;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface $r63, r65;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "expression");

        $r5 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getUnit()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r6);

        if $z0 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if $z6 != 0 goto label03;

        $r59 = "Cannot convert Unit.";

        $r57 = new java.lang.IllegalArgumentException;

        $r58 = virtualinvoke $r59.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r57.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r58);

        throw $r57;

     label03:
        $z1 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: boolean isNullable()>();

        if $z1 == 0 goto label05;

        $r46 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r47 = virtualinvoke $r46.<androidx.privacysandbox.tools.core.model.Types: java.util.Set getPrimitiveTypes()>();

        $r48 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r49 = virtualinvoke $r48.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $z5 = interfaceinvoke $r47.<java.util.Set: boolean contains(java.lang.Object)>($r49);

        if $z5 == 0 goto label04;

        $r55 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r60 = newarray (java.lang.Object)[1];

        r60[0] = r2;

        $r56 = virtualinvoke $r55.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L.firstOrNull()", r60);

        return $r56;

     label04:
        $r51 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r61 = newarray (java.lang.Object)[2];

        r61[0] = r2;

        $r50 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r52 = virtualinvoke $r50.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $r53 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToModelCode(androidx.privacysandbox.tools.core.model.Type,java.lang.String)>($r52, "notNullValue");

        r61[1] = $r53;

        $r54 = virtualinvoke $r51.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L?.let { notNullValue -> %L }", r61);

        return $r54;

     label05:
        $r7 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getValueMap()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r62 = (androidx.privacysandbox.tools.core.model.AnnotatedValue) $r9;

        if r62 == null goto label06;

        $r45 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToValueModelCode(androidx.privacysandbox.tools.core.model.AnnotatedValue,java.lang.String)>(r62, r2);

        return $r45;

     label06:
        $r10 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r11 = virtualinvoke $r10.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getCallbackMap()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r63 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r12;

        if $r63 == null goto label07;

        $r40 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r64 = newarray (java.lang.Object)[3];

        $r41 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.ClassName clientProxyNameSpec(androidx.privacysandbox.tools.core.model.AnnotatedInterface)>($r63);

        r64[0] = $r41;

        r64[1] = r2;

        $r42 = <androidx.privacysandbox.tools.core.generator.SpecNames: androidx.privacysandbox.tools.core.generator.SpecNames INSTANCE>;

        $r43 = virtualinvoke $r42.<androidx.privacysandbox.tools.core.generator.SpecNames: java.lang.String getContextPropertyName()>();

        r64[2] = $r43;

        $r44 = virtualinvoke $r40.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%T(%L, %N)", r64);

        return $r44;

     label07:
        $r13 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r14 = virtualinvoke $r13.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getInterfaceMap()>();

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r65 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r15;

        if r65 == null goto label08;

        $r39 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToInterfaceModelCode(androidx.privacysandbox.tools.core.model.AnnotatedInterface,java.lang.String)>(r65, r2);

        return $r39;

     label08:
        $r16 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r17 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/util/List;");

        $r18 = interfaceinvoke $r17.<kotlin.reflect.KClass: java.lang.String getQualifiedName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r18);

        if $z2 == 0 goto label11;

        $r26 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0);

        $r28 = (androidx.privacysandbox.tools.core.model.Type) $r27;

        r66 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToModelCode(androidx.privacysandbox.tools.core.model.Type,java.lang.String)>($r28, "it");

        $r31 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r3 = newarray (java.lang.Object)[2];

        r3[0] = r2;

        $r30 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r29 = newarray (java.lang.Object)[0];

        $r33 = virtualinvoke $r30.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("it", $r29);

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r66, $r33);

        if $z4 == 0 goto label09;

        $r37 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r36 = newarray (java.lang.Object)[0];

        $r67 = virtualinvoke $r37.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("", $r36);

        goto label10;

     label09:
        $r34 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r4 = newarray (java.lang.Object)[1];

        r4[0] = r66;

        $r67 = virtualinvoke $r34.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>(".map { %L }", r4);

     label10:
        r3[1] = $r67;

        $r35 = virtualinvoke $r31.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L%L.toList()", r3);

        return $r35;

     label11:
        $r19 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r20 = virtualinvoke $r19.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getShort()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r20);

        if $z3 == 0 goto label12;

        $r24 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r68 = newarray (java.lang.Object)[1];

        r68[0] = r2;

        $r25 = virtualinvoke $r24.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L.toShort()", r68);

        return $r25;

     label12:
        $r22 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r21 = newarray (java.lang.Object)[0];

        $r23 = virtualinvoke $r22.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>(r2, $r21);

        return $r23;
    }

    public final com.squareup.kotlinpoet.CodeBlock convertToBinderCode(androidx.privacysandbox.tools.core.model.Type, java.lang.String)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r6, $r20, $r28, $r37, r59;
        java.lang.String r2, $r16, $r18, $r38, $r57, $r58, $r60;
        java.lang.Object[] r3, r4, $r21, $r29, $r40, r61, $r62, r65, r69;
        androidx.privacysandbox.tools.core.model.Types $r5, $r19, $r48, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.privacysandbox.tools.core.model.ParsedApi $r7, $r10, $r13;
        java.util.Map $r8, $r11, $r14;
        java.lang.Object $r9, $r12, $r15, $r27, $r36;
        kotlin.reflect.KClass $r17;
        com.squareup.kotlinpoet.CodeBlock$Companion $r22, $r24, $r30, $r31, $r34, $r41, $r44, $r51, $r54;
        com.squareup.kotlinpoet.CodeBlock $r23, $r25, $r33, $r39, $r43, $r46, $r47, $r52, $r53, $r55, r67, $r68;
        java.util.List $r26, $r35;
        com.squareup.kotlinpoet.ClassName $r45;
        java.util.Set $r50;
        java.lang.IllegalArgumentException $r56;
        androidx.privacysandbox.tools.core.model.AnnotatedValue r63;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface $r64, r66;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "expression");

        $r5 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getUnit()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r6);

        if $z0 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if $z6 != 0 goto label03;

        $r58 = "Cannot convert to Unit.";

        $r56 = new java.lang.IllegalArgumentException;

        $r57 = virtualinvoke $r58.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57);

        throw $r56;

     label03:
        $z1 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: boolean isNullable()>();

        if $z1 == 0 goto label05;

        $r48 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        r59 = virtualinvoke $r48.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $r49 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r50 = virtualinvoke $r49.<androidx.privacysandbox.tools.core.model.Types: java.util.Set getPrimitiveTypes()>();

        $z5 = interfaceinvoke $r50.<java.util.Set: boolean contains(java.lang.Object)>(r59);

        if $z5 == 0 goto label04;

        $r60 = specialinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: java.lang.String createBinderList(androidx.privacysandbox.tools.core.model.Type)>(r59);

        $r54 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r61 = newarray (java.lang.Object)[4];

        r61[0] = r2;

        r61[1] = $r60;

        r61[2] = $r60;

        r61[3] = r2;

        $r55 = virtualinvoke $r54.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("if (%L == null) %L() else %L(%L)", r61);

        return $r55;

     label04:
        $r51 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r62 = newarray (java.lang.Object)[2];

        $r62[0] = r2;

        $r52 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToBinderCode(androidx.privacysandbox.tools.core.model.Type,java.lang.String)>(r59, "notNullValue");

        $r62[1] = $r52;

        $r53 = virtualinvoke $r51.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L?.let { notNullValue -> %L }", $r62);

        return $r53;

     label05:
        $r7 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getValueMap()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r63 = (androidx.privacysandbox.tools.core.model.AnnotatedValue) $r9;

        if r63 == null goto label06;

        $r47 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToValueBinderCode(androidx.privacysandbox.tools.core.model.AnnotatedValue,java.lang.String)>(r63, r2);

        return $r47;

     label06:
        $r10 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r11 = virtualinvoke $r10.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getCallbackMap()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r64 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r12;

        if $r64 == null goto label07;

        $r44 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r65 = newarray (java.lang.Object)[2];

        $r45 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.ClassName stubDelegateNameSpec(androidx.privacysandbox.tools.core.model.AnnotatedInterface)>($r64);

        r65[0] = $r45;

        r65[1] = r2;

        $r46 = virtualinvoke $r44.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%T(%L)", r65);

        return $r46;

     label07:
        $r13 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r14 = virtualinvoke $r13.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getInterfaceMap()>();

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r66 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r15;

        if r66 == null goto label08;

        $r43 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToInterfaceBinderCode(androidx.privacysandbox.tools.core.model.AnnotatedInterface,java.lang.String)>(r66, r2);

        return $r43;

     label08:
        $r16 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r17 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/util/List;");

        $r18 = interfaceinvoke $r17.<kotlin.reflect.KClass: java.lang.String getQualifiedName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r18);

        if $z2 == 0 goto label11;

        $r26 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0);

        $r28 = (androidx.privacysandbox.tools.core.model.Type) $r27;

        r67 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToBinderCode(androidx.privacysandbox.tools.core.model.Type,java.lang.String)>($r28, "it");

        $r31 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r3 = newarray (java.lang.Object)[3];

        r3[0] = r2;

        $r30 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r29 = newarray (java.lang.Object)[0];

        $r33 = virtualinvoke $r30.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("it", $r29);

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r67, $r33);

        if $z4 == 0 goto label09;

        $r41 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r40 = newarray (java.lang.Object)[0];

        $r68 = virtualinvoke $r41.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("", $r40);

        goto label10;

     label09:
        $r34 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r4 = newarray (java.lang.Object)[1];

        r4[0] = r67;

        $r68 = virtualinvoke $r34.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>(".map { %L }", r4);

     label10:
        r3[1] = $r68;

        $r35 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $r36 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>(0);

        $r37 = (androidx.privacysandbox.tools.core.model.Type) $r36;

        $r38 = specialinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: java.lang.String toBinderList(androidx.privacysandbox.tools.core.model.Type)>($r37);

        r3[2] = $r38;

        $r39 = virtualinvoke $r31.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L%L.%L()", r3);

        return $r39;

     label11:
        $r19 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r20 = virtualinvoke $r19.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getShort()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r20);

        if $z3 == 0 goto label12;

        $r24 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        r69 = newarray (java.lang.Object)[1];

        r69[0] = r2;

        $r25 = virtualinvoke $r24.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>("%L.toInt()", r69);

        return $r25;

     label12:
        $r22 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r21 = newarray (java.lang.Object)[0];

        $r23 = virtualinvoke $r22.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>(r2, $r21);

        return $r23;
    }

<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToInterfaceModelCode(androidx.privacysandbox.tools.core.model.AnnotatedInterface,java.lang.String)>
<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToInterfaceBinderCode(androidx.privacysandbox.tools.core.model.AnnotatedInterface,java.lang.String)>
<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToValueModelCode(androidx.privacysandbox.tools.core.model.AnnotatedValue,java.lang.String)>
<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.CodeBlock convertToValueBinderCode(androidx.privacysandbox.tools.core.model.AnnotatedValue,java.lang.String)>
<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.TypeName convertToInterfaceBinderType(androidx.privacysandbox.tools.core.model.AnnotatedInterface)>
    private final java.lang.String toBinderList(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.Type r1, r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        androidx.privacysandbox.tools.core.model.Types $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r17;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        r2 = r1;

        $r3 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getBoolean()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z0 == 0 goto label1;

        $r17 = "toBooleanArray";

        goto label8;

     label1:
        $r5 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getInt()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z1 == 0 goto label2;

        $r17 = "toIntArray";

        goto label8;

     label2:
        $r7 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getLong()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z2 == 0 goto label3;

        $r17 = "toLongArray";

        goto label8;

     label3:
        $r9 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r10 = virtualinvoke $r9.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getShort()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r10);

        if $z3 == 0 goto label4;

        $r17 = "toIntArray";

        goto label8;

     label4:
        $r11 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getFloat()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r12);

        if $z4 == 0 goto label5;

        $r17 = "toFloatArray";

        goto label8;

     label5:
        $r13 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r14 = virtualinvoke $r13.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getDouble()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r14);

        if $z5 == 0 goto label6;

        $r17 = "toDoubleArray";

        goto label8;

     label6:
        $r15 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getChar()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r16);

        if $z6 == 0 goto label7;

        $r17 = "toCharArray";

        goto label8;

     label7:
        $r17 = "toTypedArray";

     label8:
        return $r17;
    }

    private final java.lang.String createBinderList(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.Type r1, r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        androidx.privacysandbox.tools.core.model.Types $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r17;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        r2 = r1;

        $r3 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getBoolean()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z0 == 0 goto label1;

        $r17 = "booleanArrayOf";

        goto label8;

     label1:
        $r5 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getInt()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z1 == 0 goto label2;

        $r17 = "intArrayOf";

        goto label8;

     label2:
        $r7 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getLong()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z2 == 0 goto label3;

        $r17 = "longArrayOf";

        goto label8;

     label3:
        $r9 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r10 = virtualinvoke $r9.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getShort()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r10);

        if $z3 == 0 goto label4;

        $r17 = "intArrayOf";

        goto label8;

     label4:
        $r11 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getFloat()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r12);

        if $z4 == 0 goto label5;

        $r17 = "floatArrayOf";

        goto label8;

     label5:
        $r13 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r14 = virtualinvoke $r13.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getDouble()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r14);

        if $z5 == 0 goto label6;

        $r17 = "doubleArrayOf";

        goto label8;

     label6:
        $r15 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getChar()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r16);

        if $z6 == 0 goto label7;

        $r17 = "charArrayOf";

        goto label8;

     label7:
        $r17 = "arrayOf";

     label8:
        return $r17;
    }

    public final com.squareup.kotlinpoet.TypeName convertToBinderType(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.Type r1, $r19, $r23, r33;
        androidx.privacysandbox.tools.core.model.AnnotatedInterface r2, r3;
        boolean $z0, $z1, $z2;
        androidx.privacysandbox.tools.core.model.ParsedApi $r4, $r7, $r10;
        java.util.Map $r5, $r8, $r11;
        java.lang.Object $r6, $r9, $r12, $r18;
        java.lang.String $r13, $r15;
        kotlin.reflect.KClass $r14;
        com.squareup.kotlinpoet.TypeName $r16, $r20, $r21, $r24, $r26, $r30, $r31, $r32;
        java.util.List $r17;
        androidx.privacysandbox.tools.core.generator.poet.AidlTypeSpec $r22;
        com.squareup.kotlinpoet.ClassName $r25;
        androidx.privacysandbox.tools.core.model.Types $r27, $r28;
        java.util.Set $r29;
        androidx.privacysandbox.tools.core.model.AnnotatedValue r34;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        $z0 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: boolean isNullable()>();

        if $z0 == 0 goto label2;

        $r27 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        r33 = virtualinvoke $r27.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type asNonNull(androidx.privacysandbox.tools.core.model.Type)>(r1);

        $r28 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r29 = virtualinvoke $r28.<androidx.privacysandbox.tools.core.model.Types: java.util.Set getPrimitiveTypes()>();

        $z2 = interfaceinvoke $r29.<java.util.Set: boolean contains(java.lang.Object)>(r33);

        if $z2 == 0 goto label1;

        $r32 = specialinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.TypeName convertToBinderListType(androidx.privacysandbox.tools.core.model.Type)>(r33);

        return $r32;

     label1:
        $r30 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.TypeName convertToBinderType(androidx.privacysandbox.tools.core.model.Type)>(r33);

        $r31 = staticinvoke <com.squareup.kotlinpoet.TypeName: com.squareup.kotlinpoet.TypeName copy$default(com.squareup.kotlinpoet.TypeName,boolean,java.util.List,int,java.lang.Object)>($r30, 1, null, 2, null);

        return $r31;

     label2:
        $r4 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r5 = virtualinvoke $r4.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getValueMap()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r34 = (androidx.privacysandbox.tools.core.model.AnnotatedValue) $r6;

        if r34 == null goto label3;

        $r25 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.ClassName parcelableNameSpec(androidx.privacysandbox.tools.core.model.AnnotatedValue)>(r34);

        $r26 = (com.squareup.kotlinpoet.TypeName) $r25;

        return $r26;

     label3:
        $r7 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getCallbackMap()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r9;

        if r2 == null goto label4;

        $r22 = staticinvoke <androidx.privacysandbox.tools.core.generator.AidlGeneratorKt: androidx.privacysandbox.tools.core.generator.poet.AidlTypeSpec aidlType(androidx.privacysandbox.tools.core.model.AnnotatedInterface)>(r2);

        $r23 = virtualinvoke $r22.<androidx.privacysandbox.tools.core.generator.poet.AidlTypeSpec: androidx.privacysandbox.tools.core.model.Type getInnerType()>();

        $r24 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.TypeName poetTypeName(androidx.privacysandbox.tools.core.model.Type)>($r23);

        return $r24;

     label4:
        $r10 = r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: androidx.privacysandbox.tools.core.model.ParsedApi api>;

        $r11 = virtualinvoke $r10.<androidx.privacysandbox.tools.core.model.ParsedApi: java.util.Map getInterfaceMap()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.privacysandbox.tools.core.model.AnnotatedInterface) $r12;

        if r3 == null goto label5;

        $r21 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.TypeName convertToInterfaceBinderType(androidx.privacysandbox.tools.core.model.AnnotatedInterface)>(r3);

        return $r21;

     label5:
        $r13 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.lang.String getQualifiedName()>();

        $r14 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/util/List;");

        $r15 = interfaceinvoke $r14.<kotlin.reflect.KClass: java.lang.String getQualifiedName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r15);

        if $z1 == 0 goto label6;

        $r17 = virtualinvoke r1.<androidx.privacysandbox.tools.core.model.Type: java.util.List getTypeParameters()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = (androidx.privacysandbox.tools.core.model.Type) $r18;

        $r20 = specialinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.TypeName convertToBinderListType(androidx.privacysandbox.tools.core.model.Type)>($r19);

        return $r20;

     label6:
        $r16 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.TypeName poetTypeName(androidx.privacysandbox.tools.core.model.Type)>(r1);

        return $r16;
    }

    private final com.squareup.kotlinpoet.TypeName convertToBinderListType(androidx.privacysandbox.tools.core.model.Type)
    {
        androidx.privacysandbox.tools.core.generator.BinderCodeConverter r0;
        androidx.privacysandbox.tools.core.model.Type r1, r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        androidx.privacysandbox.tools.core.model.Types $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.squareup.kotlinpoet.ClassName $r17, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        com.squareup.kotlinpoet.ParameterizedTypeName$Companion $r18;
        com.squareup.kotlinpoet.TypeName $r19, $r29;
        com.squareup.kotlinpoet.ParameterizedTypeName $r20;
        java.lang.String[] r28, r30, r31, r32, r33, r34, r35, r36;
        com.squareup.kotlinpoet.TypeName[] r37;

        r0 := @this: androidx.privacysandbox.tools.core.generator.BinderCodeConverter;

        r1 := @parameter0: androidx.privacysandbox.tools.core.model.Type;

        r2 = r1;

        $r3 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getBoolean()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z0 == 0 goto label1;

        $r27 = new com.squareup.kotlinpoet.ClassName;

        r28 = newarray (java.lang.String)[1];

        r28[0] = "BooleanArray";

        specialinvoke $r27.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r28);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r27;

        goto label8;

     label1:
        $r5 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getInt()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z1 == 0 goto label2;

        $r26 = new com.squareup.kotlinpoet.ClassName;

        r30 = newarray (java.lang.String)[1];

        r30[0] = "IntArray";

        specialinvoke $r26.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r30);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r26;

        goto label8;

     label2:
        $r7 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getLong()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z2 == 0 goto label3;

        $r25 = new com.squareup.kotlinpoet.ClassName;

        r31 = newarray (java.lang.String)[1];

        r31[0] = "LongArray";

        specialinvoke $r25.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r31);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r25;

        goto label8;

     label3:
        $r9 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r10 = virtualinvoke $r9.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getShort()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r10);

        if $z3 == 0 goto label4;

        $r24 = new com.squareup.kotlinpoet.ClassName;

        r32 = newarray (java.lang.String)[1];

        r32[0] = "IntArray";

        specialinvoke $r24.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r32);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r24;

        goto label8;

     label4:
        $r11 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getFloat()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r12);

        if $z4 == 0 goto label5;

        $r23 = new com.squareup.kotlinpoet.ClassName;

        r33 = newarray (java.lang.String)[1];

        r33[0] = "FloatArray";

        specialinvoke $r23.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r33);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r23;

        goto label8;

     label5:
        $r13 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r14 = virtualinvoke $r13.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getDouble()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r14);

        if $z5 == 0 goto label6;

        $r22 = new com.squareup.kotlinpoet.ClassName;

        r34 = newarray (java.lang.String)[1];

        r34[0] = "DoubleArray";

        specialinvoke $r22.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r34);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r22;

        goto label8;

     label6:
        $r15 = <androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Types INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.privacysandbox.tools.core.model.Types: androidx.privacysandbox.tools.core.model.Type getChar()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r16);

        if $z6 == 0 goto label7;

        $r21 = new com.squareup.kotlinpoet.ClassName;

        r35 = newarray (java.lang.String)[1];

        r35[0] = "CharArray";

        specialinvoke $r21.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r35);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r21;

        goto label8;

     label7:
        $r18 = <com.squareup.kotlinpoet.ParameterizedTypeName: com.squareup.kotlinpoet.ParameterizedTypeName$Companion Companion>;

        $r17 = new com.squareup.kotlinpoet.ClassName;

        r36 = newarray (java.lang.String)[1];

        r36[0] = "Array";

        specialinvoke $r17.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("kotlin", r36);

        r37 = newarray (com.squareup.kotlinpoet.TypeName)[1];

        $r19 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.BinderCodeConverter: com.squareup.kotlinpoet.TypeName convertToBinderType(androidx.privacysandbox.tools.core.model.Type)>(r1);

        r37[0] = $r19;

        $r20 = virtualinvoke $r18.<com.squareup.kotlinpoet.ParameterizedTypeName$Companion: com.squareup.kotlinpoet.ParameterizedTypeName get(com.squareup.kotlinpoet.ClassName,com.squareup.kotlinpoet.TypeName[])>($r17, r37);

        $r29 = (com.squareup.kotlinpoet.TypeName) $r20;

     label8:
        return $r29;
    }

