androidx.camera.core.MetadataImageReader
<androidx.camera.core.MetadataImageReader: java.lang.String TAG>
<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>
<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback>
<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>
<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mTransformedListener>
<androidx.camera.core.MetadataImageReader: boolean mClosed>
<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>
<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener>
<androidx.camera.core.MetadataImageReader: java.util.concurrent.Executor mExecutor>
<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>
<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>
<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>
<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>
<androidx.camera.core.MetadataImageReader: java.util.List mAcquiredImageProxies>
    public void <init>(int, int, int, int)
    {
        androidx.camera.core.MetadataImageReader r0;
        int i0, i1, i2, i3;
        androidx.camera.core.impl.ImageReaderProxy $r1;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = staticinvoke <androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy createImageReaderProxy(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void <init>(androidx.camera.core.impl.ImageReaderProxy)>($r1);

        return;
    }

    private static androidx.camera.core.impl.ImageReaderProxy createImageReaderProxy(int, int, int, int)
    {
        int i0, i1, i2, i3;
        androidx.camera.core.AndroidImageReaderProxy $r0;
        android.media.ImageReader $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r0 = new androidx.camera.core.AndroidImageReaderProxy;

        $r1 = staticinvoke <android.media.ImageReader: android.media.ImageReader newInstance(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke $r0.<androidx.camera.core.AndroidImageReaderProxy: void <init>(android.media.ImageReader)>($r1);

        return $r0;
    }

    void <init>(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        java.lang.Object $r2;
        androidx.camera.core.MetadataImageReader$1 $r3;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener $r4;
        android.util.LongSparseArray $r5, $r6;
        java.util.ArrayList $r7, $r8;
        int $i0;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock> = $r2;

        $r3 = new androidx.camera.core.MetadataImageReader$1;

        specialinvoke $r3.<androidx.camera.core.MetadataImageReader$1: void <init>(androidx.camera.core.MetadataImageReader)>(r0);

        r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback> = $r3;

        r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount> = 0;

        $r4 = dynamicinvoke "onImageAvailable" <androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener (androidx.camera.core.MetadataImageReader)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.camera.core.impl.ImageReaderProxy), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.MetadataImageReader: void lambda$new$0(androidx.camera.core.impl.ImageReaderProxy)>, methodtype: void __METHODTYPE__(androidx.camera.core.impl.ImageReaderProxy));

        r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mTransformedListener> = $r4;

        r0.<androidx.camera.core.MetadataImageReader: boolean mClosed> = 0;

        $r5 = new android.util.LongSparseArray;

        specialinvoke $r5.<android.util.LongSparseArray: void <init>()>();

        r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos> = $r5;

        $r6 = new android.util.LongSparseArray;

        specialinvoke $r6.<android.util.LongSparseArray: void <init>()>();

        r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.MetadataImageReader: java.util.List mAcquiredImageProxies> = $r7;

        r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy> = r1;

        r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex> = 0;

        $r8 = new java.util.ArrayList;

        $i0 = virtualinvoke r0.<androidx.camera.core.MetadataImageReader: int getMaxImages()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies> = $r8;

        return;
    }

    public androidx.camera.core.ImageProxy acquireLatestImage()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r5, $r12, $r14, $r17, $r19;
        java.util.ArrayList r2, $r8;
        androidx.camera.core.ImageProxy r3, $r20, r24;
        java.lang.Throwable r4, $r22;
        java.util.List $r6, $r7, $r9, $r10, $r11, $r13, $r15, $r16, $r18;
        boolean $z0, $z1, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.IllegalStateException $r21;
        java.util.Iterator r23;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r5 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return null;

     label03:
        $i0 = r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>;

        $r7 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 < $i1 goto label04;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Maximum image number reached.");

        throw $r21;

     label04:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        i8 = 0;

     label05:
        $r9 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if i8 >= $i3 goto label07;

        $r16 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mAcquiredImageProxies>;

        $r15 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i8);

        $z3 = interfaceinvoke $r16.<java.util.List: boolean contains(java.lang.Object)>($r17);

        if $z3 != 0 goto label06;

        $r18 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i8);

        $r20 = (androidx.camera.core.ImageProxy) $r19;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20);

     label06:
        i8 = i8 + 1;

        goto label05;

     label07:
        r23 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r14 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.ImageProxy) $r14;

        interfaceinvoke r3.<androidx.camera.core.ImageProxy: void close()>();

        goto label08;

     label09:
        $r10 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex> = $i5;

        $r11 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i6 = r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>;

        $i7 = $i6 + 1;

        r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex> = $i7;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i6);

        r24 = (androidx.camera.core.ImageProxy) $r12;

        $r13 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mAcquiredImageProxies>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r24);

        exitmonitor r1;

     label10:
        return r24;

     label11:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r1;

     label12:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public androidx.camera.core.ImageProxy acquireNextImage()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r4, $r8;
        androidx.camera.core.ImageProxy r2;
        java.lang.Throwable r3, $r11;
        java.util.List $r5, $r6, $r7, $r9;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r4 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        $i0 = r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>;

        $r6 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 < $i1 goto label4;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Maximum image number reached.");

        throw $r10;

     label4:
        $r7 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i2 = r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>;

        $i3 = $i2 + 1;

        r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex> = $i3;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        r2 = (androidx.camera.core.ImageProxy) $r8;

        $r9 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mAcquiredImageProxies>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void close()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r6, $r11;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        androidx.camera.core.ImageProxy r4;
        java.lang.Throwable r5, $r12;
        boolean $z0, $z1;
        java.util.List $r8, $r9;
        androidx.camera.core.impl.ImageReaderProxy $r10;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r6 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $z0 = r0.<androidx.camera.core.MetadataImageReader: boolean mClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 = new java.util.ArrayList;

        $r8 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r2 = $r7;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.core.ImageProxy) $r11;

        interfaceinvoke r4.<androidx.camera.core.ImageProxy: void close()>();

        goto label4;

     label5:
        $r9 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        interfaceinvoke $r9.<java.util.List: void clear()>();

        $r10 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        interfaceinvoke $r10.<androidx.camera.core.impl.ImageReaderProxy: void close()>();

        r0.<androidx.camera.core.MetadataImageReader: boolean mClosed> = 1;

        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r1;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getHeight()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getHeight()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getWidth()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getWidth()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getImageFormat()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getImageFormat()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMaxImages()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.Surface getSurface()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        android.view.Surface $r5;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: android.view.Surface getSurface()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener, java.util.concurrent.Executor)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r1, $r7, $r10;
        java.util.concurrent.Executor r2, $r9;
        java.lang.Object r3, $r5, $r6, $r8;
        java.lang.Throwable r4, $r12;
        androidx.camera.core.impl.ImageReaderProxy $r11;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r5 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener) $r6;

        r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener> = $r7;

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.util.concurrent.Executor) $r8;

        r0.<androidx.camera.core.MetadataImageReader: java.util.concurrent.Executor mExecutor> = $r9;

        $r11 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $r10 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mTransformedListener>;

        interfaceinvoke $r11.<androidx.camera.core.impl.ImageReaderProxy: void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor)>($r10, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearOnImageAvailableListener()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener> = null;

        r0.<androidx.camera.core.MetadataImageReader: java.util.concurrent.Executor mExecutor> = null;

        r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount> = 0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onImageClose(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.ImageProxy r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        $r4 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void dequeImageProxy(androidx.camera.core.ImageProxy)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void enqueueImageProxy(androidx.camera.core.SettableImageProxy)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.SettableImageProxy r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        java.util.List $r5, $r7;
        int $i0, $i1;
        java.lang.Runnable $r6;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r9;
        java.util.concurrent.Executor r10;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.SettableImageProxy;

        $r4 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = virtualinvoke r0.<androidx.camera.core.MetadataImageReader: int getMaxImages()>();

        if $i0 >= $i1 goto label2;

        virtualinvoke r1.<androidx.camera.core.SettableImageProxy: void addOnImageCloseListener(androidx.camera.core.ForwardingImageProxy$OnImageCloseListener)>(r0);

        $r7 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        r9 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener>;

        r10 = r0.<androidx.camera.core.MetadataImageReader: java.util.concurrent.Executor mExecutor>;

        goto label3;

     label2:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TAG", "Maximum image number reached.");

        virtualinvoke r1.<androidx.camera.core.SettableImageProxy: void close()>();

        r9 = null;

        r10 = null;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        if r9 == null goto label9;

        if r10 == null goto label8;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.MetadataImageReader,androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)>(r0, r9) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.MetadataImageReader: void lambda$enqueueImageProxy$1(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r10.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label9;

     label8:
        interfaceinvoke r9.<androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener: void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)>(r0);

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void dequeImageProxy(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.ImageProxy r1;
        java.lang.Object r2, $r4;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable r3, $r9;
        java.util.List $r5, $r7, $r10;
        androidx.camera.core.impl.ImageReaderProxy $r6;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        $r4 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label2;

        $r7 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i0);

        $i1 = r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>;

        if i0 > $i1 goto label2;

        $i2 = r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex>;

        $i3 = $i2 - 1;

        r0.<androidx.camera.core.MetadataImageReader: int mImageProxiesIndex> = $i3;

     label2:
        $r10 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mAcquiredImageProxies>;

        interfaceinvoke $r10.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $i4 = r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>;

        if $i4 <= 0 goto label3;

        $r6 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        virtualinvoke r0.<androidx.camera.core.MetadataImageReader: void imageIncoming(androidx.camera.core.impl.ImageReaderProxy)>($r6);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.camera.core.impl.CameraCaptureCallback getCameraCaptureCallback()
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.CameraCaptureCallback $r1;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r1 = r0.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback>;

        return $r1;
    }

    void imageIncoming(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, r4, r5, $r11, $r14, $r15;
        boolean $z0;
        android.util.LongSparseArray $r7, $r9, $r12, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, i14, i15;
        java.util.List $r8;
        androidx.camera.core.ImageInfo $r10, $r13, $r17;
        long $l7, $l10, $l13;
        androidx.camera.core.ImageProxy r18;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r6 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $z0 = r0.<androidx.camera.core.MetadataImageReader: boolean mClosed>;

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r7 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $i0 = virtualinvoke $r7.<android.util.LongSparseArray: int size()>();

        $r8 = r0.<androidx.camera.core.MetadataImageReader: java.util.List mMatchedImageProxies>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        i14 = $i0 + $i1;

        $i2 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        if i14 < $i2 goto label05;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("MetadataImageReader", "Skip to acquire the next image because the acquired image count has reached the max images count.");

        exitmonitor r2;

     label04:
        return;

     label05:
        r18 = null;

     label06:
        r18 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireNextImage()>();

     label07:
        if r18 == null goto label13;

        $i5 = r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>;

        $i6 = $i5 - 1;

        r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount> = $i6;

        i14 = i14 + 1;

        $r9 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $r10 = interfaceinvoke r18.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        $l7 = interfaceinvoke $r10.<androidx.camera.core.ImageInfo: long getTimestamp()>();

        virtualinvoke $r9.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l7, r18);

        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void matchImages()>();

        goto label13;

     label08:
        $r15 := @caughtexception;

        r3 = $r15;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>("MetadataImageReader", "Failed to acquire next image.", r3);

     label09:
        if r18 == null goto label13;

        $i11 = r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>;

        $i12 = $i11 - 1;

        r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount> = $i12;

        i14 = i14 + 1;

        $r16 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $r17 = interfaceinvoke r18.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        $l13 = interfaceinvoke $r17.<androidx.camera.core.ImageInfo: long getTimestamp()>();

        virtualinvoke $r16.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l13, r18);

        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void matchImages()>();

        goto label13;

     label10:
        $r11 := @caughtexception;

        r4 = $r11;

     label11:
        if r18 == null goto label12;

        $i8 = r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>;

        $i9 = $i8 - 1;

        r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount> = $i9;

        i15 = i14 + 1;

        $r12 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $r13 = interfaceinvoke r18.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        $l10 = interfaceinvoke $r13.<androidx.camera.core.ImageInfo: long getTimestamp()>();

        virtualinvoke $r12.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l10, r18);

        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void matchImages()>();

     label12:
        throw r4;

     label13:
        if r18 == null goto label14;

        $i3 = r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>;

        if $i3 <= 0 goto label14;

        $i4 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        if i14 < $i4 goto label05;

     label14:
        exitmonitor r2;

     label15:
        goto label18;

     label16:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label17:
        throw r5;

     label18:
        return;

        catch java.lang.IllegalStateException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    void resultIncoming(androidx.camera.core.impl.CameraCaptureResult)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.CameraCaptureResult r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        android.util.LongSparseArray $r5;
        long $l0;
        androidx.camera.core.internal.CameraCaptureResultImageInfo $r6;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureResult;

        $r4 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<androidx.camera.core.MetadataImageReader: boolean mClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $l0 = interfaceinvoke r1.<androidx.camera.core.impl.CameraCaptureResult: long getTimestamp()>();

        $r6 = new androidx.camera.core.internal.CameraCaptureResultImageInfo;

        specialinvoke $r6.<androidx.camera.core.internal.CameraCaptureResultImageInfo: void <init>(androidx.camera.core.impl.CameraCaptureResult)>(r1);

        virtualinvoke $r5.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l0, $r6);

        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void matchImages()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void removeStaleData()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r6, $r17;
        java.lang.Long r2, r3;
        androidx.camera.core.ImageProxy r4;
        java.lang.Throwable r5, $r19;
        android.util.LongSparseArray $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        int $i0, $i1, $i7, $i11, i15, i16;
        long $l2, $l3, $l4, $l5, $l8, $l9, $l12, $l13;
        boolean $z0, $z1;
        byte $b6, $b10, $b14;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r6 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $i0 = virtualinvoke $r7.<android.util.LongSparseArray: int size()>();

        if $i0 == 0 goto label02;

        $r8 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $i1 = virtualinvoke $r8.<android.util.LongSparseArray: int size()>();

        if $i1 != 0 goto label04;

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        $r9 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $l2 = virtualinvoke $r9.<android.util.LongSparseArray: long keyAt(int)>(0);

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r10 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $l3 = virtualinvoke $r10.<android.util.LongSparseArray: long keyAt(int)>(0);

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $z0 = virtualinvoke r3.<java.lang.Long: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z1);

        $l4 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        $l5 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $b6 = $l4 cmp $l5;

        if $b6 <= 0 goto label10;

        $r14 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $i11 = virtualinvoke $r14.<android.util.LongSparseArray: int size()>();

        i15 = $i11 - 1;

     label07:
        if i15 < 0 goto label09;

        $r15 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $l12 = virtualinvoke $r15.<android.util.LongSparseArray: long keyAt(int)>(i15);

        $l13 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        $b14 = $l12 cmp $l13;

        if $b14 >= 0 goto label08;

        $r16 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $r17 = virtualinvoke $r16.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i15);

        r4 = (androidx.camera.core.ImageProxy) $r17;

        interfaceinvoke r4.<androidx.camera.core.ImageProxy: void close()>();

        $r18 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        virtualinvoke $r18.<android.util.LongSparseArray: void removeAt(int)>(i15);

     label08:
        i15 = i15 + -1;

        goto label07;

     label09:
        goto label13;

     label10:
        $r11 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $i7 = virtualinvoke $r11.<android.util.LongSparseArray: int size()>();

        i16 = $i7 - 1;

     label11:
        if i16 < 0 goto label13;

        $r12 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $l8 = virtualinvoke $r12.<android.util.LongSparseArray: long keyAt(int)>(i16);

        $l9 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $b10 = $l8 cmp $l9;

        if $b10 >= 0 goto label12;

        $r13 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        virtualinvoke $r13.<android.util.LongSparseArray: void removeAt(int)>(i16);

     label12:
        i16 = i16 + -1;

        goto label11;

     label13:
        exitmonitor r1;

     label14:
        goto label17;

     label15:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r1;

     label16:
        throw r5;

     label17:
        return;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label04 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void matchImages()
    {
        androidx.camera.core.MetadataImageReader r0;
        java.lang.Object r1, $r5, $r8, $r10;
        androidx.camera.core.ImageInfo r2;
        long l0;
        androidx.camera.core.ImageProxy r3;
        java.lang.Throwable r4, $r14;
        android.util.LongSparseArray $r6, $r7, $r9, $r11, $r12;
        int $i1, i2;
        androidx.camera.core.SettableImageProxy $r13;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        $r5 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $i1 = virtualinvoke $r6.<android.util.LongSparseArray: int size()>();

        i2 = $i1 - 1;

     label2:
        if i2 < 0 goto label4;

        $r7 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        $r8 = virtualinvoke $r7.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (androidx.camera.core.ImageInfo) $r8;

        l0 = interfaceinvoke r2.<androidx.camera.core.ImageInfo: long getTimestamp()>();

        $r9 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        $r10 = virtualinvoke $r9.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r3 = (androidx.camera.core.ImageProxy) $r10;

        if r3 == null goto label3;

        $r11 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImages>;

        virtualinvoke $r11.<android.util.LongSparseArray: void remove(long)>(l0);

        $r12 = r0.<androidx.camera.core.MetadataImageReader: android.util.LongSparseArray mPendingImageInfos>;

        virtualinvoke $r12.<android.util.LongSparseArray: void removeAt(int)>(i2);

        $r13 = new androidx.camera.core.SettableImageProxy;

        specialinvoke $r13.<androidx.camera.core.SettableImageProxy: void <init>(androidx.camera.core.ImageProxy,androidx.camera.core.ImageInfo)>(r3, r2);

        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void enqueueImageProxy(androidx.camera.core.SettableImageProxy)>($r13);

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        specialinvoke r0.<androidx.camera.core.MetadataImageReader: void removeStaleData()>();

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r1;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void lambda$enqueueImageProxy$1(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r1;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener;

        interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener: void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)>(r0);

        return;
    }

    private void lambda$new$0(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.MetadataImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        java.lang.Object r2, $r3;
        int $i0, $i1;

        r0 := @this: androidx.camera.core.MetadataImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r3 = r0.<androidx.camera.core.MetadataImageReader: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        $i0 = r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount>;

        $i1 = $i0 + 1;

        r0.<androidx.camera.core.MetadataImageReader: int mUnAcquiredAvailableImageCount> = $i1;

        exitmonitor r2;

        goto label1;

     label1:
        virtualinvoke r0.<androidx.camera.core.MetadataImageReader: void imageIncoming(androidx.camera.core.impl.ImageReaderProxy)>(r1);

        return;
    }

androidx.camera.core.MetadataImageReader$1
<androidx.camera.core.MetadataImageReader$1: androidx.camera.core.MetadataImageReader this$0>
    void <init>(androidx.camera.core.MetadataImageReader)
    {
        androidx.camera.core.MetadataImageReader$1 r0;
        androidx.camera.core.MetadataImageReader r1;

        r0 := @this: androidx.camera.core.MetadataImageReader$1;

        r1 := @parameter0: androidx.camera.core.MetadataImageReader;

        r0.<androidx.camera.core.MetadataImageReader$1: androidx.camera.core.MetadataImageReader this$0> = r1;

        specialinvoke r0.<androidx.camera.core.impl.CameraCaptureCallback: void <init>()>();

        return;
    }

    public void onCaptureCompleted(androidx.camera.core.impl.CameraCaptureResult)
    {
        androidx.camera.core.MetadataImageReader$1 r0;
        androidx.camera.core.impl.CameraCaptureResult r1;
        androidx.camera.core.MetadataImageReader $r2;

        r0 := @this: androidx.camera.core.MetadataImageReader$1;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureResult;

        specialinvoke r0.<androidx.camera.core.impl.CameraCaptureCallback: void onCaptureCompleted(androidx.camera.core.impl.CameraCaptureResult)>(r1);

        $r2 = r0.<androidx.camera.core.MetadataImageReader$1: androidx.camera.core.MetadataImageReader this$0>;

        virtualinvoke $r2.<androidx.camera.core.MetadataImageReader: void resultIncoming(androidx.camera.core.impl.CameraCaptureResult)>(r1);

        return;
    }

