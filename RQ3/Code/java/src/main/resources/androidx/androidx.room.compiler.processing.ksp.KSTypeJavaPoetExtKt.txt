androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt
<androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.ClassName ERROR_JTYPE_NAME>
<androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: kotlin.Lazy typeVarNameConstructor$delegate>
    public static final com.squareup.javapoet.ClassName getERROR_JTYPE_NAME()
    {
        com.squareup.javapoet.ClassName $r0;

        $r0 = <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.ClassName ERROR_JTYPE_NAME>;

        return $r0;
    }

    public static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference, com.google.devtools.ksp.processing.Resolver)
    {
        com.google.devtools.ksp.symbol.KSTypeReference $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap $r2;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeReference;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resolver");

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, $r2);

        return $r3;
    }

    private static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSTypeReference $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap r2;
        com.google.devtools.ksp.symbol.KSType $r3;
        com.squareup.javapoet.ClassName $r4;
        com.squareup.javapoet.TypeName $r5;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeReference;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        r2 := @parameter2: java.util.LinkedHashMap;

        if $r0 != null goto label1;

        $r4 = <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.ClassName ERROR_JTYPE_NAME>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "{\n        ERROR_JTYPE_NAME\n    }");

        $r5 = (com.squareup.javapoet.TypeName) $r4;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r5 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r3, r1, r2);

     label2:
        return $r5;
    }

    public static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSDeclaration, com.google.devtools.ksp.processing.Resolver)
    {
        com.google.devtools.ksp.symbol.KSDeclaration $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap $r2;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resolver");

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSDeclaration,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, $r2);

        return $r3;
    }

    private static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSDeclaration, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSDeclaration $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap r2;
        java.lang.String r3, r4, r5, $r13, $r17, $r32;
        java.util.List r6, $r18;
        char[] r7;
        java.lang.String[] r8, $r19, $r22;
        java.util.Collection r9;
        boolean $z1, $z2, $z3, $z4, $z5;
        com.google.devtools.ksp.symbol.KSName $r10;
        com.squareup.javapoet.ClassName $r11, $r23;
        com.squareup.javapoet.TypeName $r12, $r24, $r26, $r28, $r31;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r14, $r25;
        java.lang.Object $r15;
        java.lang.Iterable $r16;
        java.lang.Object[] $r20, $r21;
        com.google.devtools.ksp.symbol.KSTypeParameter $r27;
        com.google.devtools.ksp.symbol.KSTypeAlias $r29;
        com.google.devtools.ksp.symbol.KSTypeReference $r30;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        r2 := @parameter2: java.util.LinkedHashMap;

        $z1 = $r0 instanceof com.google.devtools.ksp.symbol.KSTypeAlias;

        if $z1 == 0 goto label1;

        $r29 = (com.google.devtools.ksp.symbol.KSTypeAlias) $r0;

        $r30 = interfaceinvoke $r29.<com.google.devtools.ksp.symbol.KSTypeAlias: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        $r31 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r30, r1, r2);

        return $r31;

     label1:
        $z2 = $r0 instanceof com.google.devtools.ksp.symbol.KSTypeParameter;

        if $z2 == 0 goto label2;

        $r27 = (com.google.devtools.ksp.symbol.KSTypeParameter) $r0;

        $r28 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeParameter,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r27, r1, r2);

        return $r28;

     label2:
        $r10 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r10 == null goto label3;

        $r13 = interfaceinvoke $r10.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        if $r13 != null goto label4;

     label3:
        $r11 = <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.ClassName ERROR_JTYPE_NAME>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "ERROR_JTYPE_NAME");

        $r12 = (com.squareup.javapoet.TypeName) $r11;

        return $r12;

     label4:
        r3 = $r13;

        r4 = interfaceinvoke r1.<com.google.devtools.ksp.processing.Resolver: java.lang.String mapToJvmSignature(com.google.devtools.ksp.symbol.KSDeclaration)>($r0);

        if r4 == null goto label7;

        $r25 = (java.lang.CharSequence) r4;

        $z4 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r25);

        if $z4 != 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        if $z5 == 0 goto label7;

        $r26 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: com.squareup.javapoet.TypeName typeNameFromJvmSignature(java.lang.String)>(r4);

        return $r26;

     label7:
        r5 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: java.lang.String getNormalizedPackageName(com.google.devtools.ksp.symbol.KSDeclaration)>($r0);

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r5, "");

        if $z3 == 0 goto label8;

        $r32 = r3;

        goto label9;

     label8:
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $r32 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "this as java.lang.String).substring(startIndex)");

     label9:
        $r14 = (java.lang.CharSequence) $r32;

        r7 = newarray (char)[1];

        r7[0] = 46;

        r6 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)>($r14, r7, 0, 0, 6, null);

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r6);

        $r17 = (java.lang.String) $r15;

        $r16 = (java.lang.Iterable) r6;

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List drop(java.lang.Iterable,int)>($r16, 1);

        r9 = (java.util.Collection) $r18;

        $r19 = newarray (java.lang.String)[0];

        $r20 = interfaceinvoke r9.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r20, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r8 = (java.lang.String[]) $r20;

        $i2 = lengthof r8;

        $r21 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r8, $i2);

        $r22 = (java.lang.String[]) $r21;

        $r23 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>(r5, $r17, $r22);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "get(pkg, shortNames.firs\u2026.drop(1).toTypedArray()))");

        $r24 = (com.squareup.javapoet.TypeName) $r23;

        return $r24;
    }

    public static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeArgument, com.google.devtools.ksp.processing.Resolver)
    {
        com.google.devtools.ksp.symbol.KSTypeArgument $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap $r2;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeArgument;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resolver");

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, $r2);

        return $r3;
    }

    private static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeParameter, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSTypeParameter $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap r2;
        com.squareup.javapoet.TypeVariableName r3;
        com.google.devtools.ksp.symbol.KSName $r4, $r7, $r10, $r17;
        java.lang.Object $r5;
        java.util.ArrayList $r6;
        java.lang.String $r8;
        java.util.Map $r9;
        kotlin.sequences.Sequence $r12, $r15;
        androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$asJTypeName$resolvedBounds$1 $r13;
        kotlin.jvm.functions.Function1 $r14;
        java.util.Collection $r16, $r20;
        boolean $z1, $z4;
        com.squareup.javapoet.TypeName $r19, r22, r23;
        com.squareup.javapoet.ClassName $r21;
        java.util.List r24, r25;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeParameter;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        r2 := @parameter2: java.util.LinkedHashMap;

        $r4 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        $r5 = virtualinvoke r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r4);

        r22 = (com.squareup.javapoet.TypeName) $r5;

        if r22 == null goto label1;

        r23 = r22;

        return r23;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r24 = (java.util.List) $r6;

        $r7 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        $r8 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeVariableName createModifiableTypeVariableName(java.lang.String,java.util.List)>($r8, r24);

        $r9 = (java.util.Map) r2;

        $r10 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3);

        $r12 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeParameter: kotlin.sequences.Sequence getBounds()>();

        $r13 = new androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$asJTypeName$resolvedBounds$1;

        specialinvoke $r13.<androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$asJTypeName$resolvedBounds$1: void <init>(com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>(r1, r2);

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        $r15 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r12, $r14);

        r25 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>($r15);

        $r16 = (java.util.Collection) r25;

        $z1 = interfaceinvoke $r16.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $r20 = (java.util.Collection) r25;

        interfaceinvoke r24.<java.util.List: boolean addAll(java.util.Collection)>($r20);

        $r21 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.ClassName OBJECT>;

        interfaceinvoke r24.<java.util.List: boolean remove(java.lang.Object)>($r21);

     label4:
        $r17 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        virtualinvoke r2.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r17);

        $r19 = (com.squareup.javapoet.TypeName) r3;

        return $r19;
    }

    private static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeArgument, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSTypeArgument $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap r2;
        com.google.devtools.ksp.symbol.Variance $r3;
        int[] $r4;
        int $i0, $i1;
        com.squareup.javapoet.ClassName $r5;
        com.squareup.javapoet.TypeName $r6, $r8, $r10, $r13, $r15, $r16;
        com.squareup.javapoet.WildcardTypeName $r7, $r9, $r11, $r14;
        com.google.devtools.ksp.symbol.KSAnnotated $r12;
        boolean $z0;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeArgument;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        r2 := @parameter2: java.util.LinkedHashMap;

        $r3 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.Variance getVariance()>();

        $r4 = <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<com.google.devtools.ksp.symbol.Variance: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r10 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName$resolveTypeName(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, r2);

        $r11 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName supertypeOf(com.squareup.javapoet.TypeName)>($r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "supertypeOf(resolveTypeName())");

        $r15 = (com.squareup.javapoet.TypeName) $r11;

        goto label7;

     label2:
        $r8 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName$resolveTypeName(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, r2);

        $r9 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName subtypeOf(com.squareup.javapoet.TypeName)>($r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "subtypeOf(resolveTypeName())");

        $r15 = (com.squareup.javapoet.TypeName) $r9;

        goto label7;

     label3:
        $r5 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.ClassName OBJECT>;

        $r6 = (com.squareup.javapoet.TypeName) $r5;

        $r7 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName subtypeOf(com.squareup.javapoet.TypeName)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "{\n            JWildcardT\u2026ypeName.OBJECT)\n        }");

        $r15 = (com.squareup.javapoet.TypeName) $r7;

        goto label7;

     label4:
        $r12 = (com.google.devtools.ksp.symbol.KSAnnotated) $r0;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasJvmWildcardAnnotation(com.google.devtools.ksp.symbol.KSAnnotated)>($r12);

        if $z0 == 0 goto label5;

        $r13 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName$resolveTypeName(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, r2);

        $r14 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName subtypeOf(com.squareup.javapoet.TypeName)>($r13);

        $r16 = (com.squareup.javapoet.TypeName) $r14;

        $r15 = $r16;

        goto label6;

     label5:
        $r16 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName$resolveTypeName(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, r2);

        $r15 = $r16;

     label6:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "{\n            if (hasJvm\u2026)\n            }\n        }");

     label7:
        return $r15;
    }

    public static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSType, com.google.devtools.ksp.processing.Resolver)
    {
        com.google.devtools.ksp.symbol.KSType $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap $r2;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resolver");

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, $r2);

        return $r3;
    }

    private static final com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSType, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSType $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap r2;
        com.squareup.javapoet.TypeName r3, $r15, $r27, $r30, $r31, r42, $r46, $r47, $r48;
        com.squareup.javapoet.TypeName[] r4, $r12, $r24;
        java.util.List $r5, $r8, $r10, $r44, $r45;
        java.util.Collection $r6, $r29, r33, r37, r39, r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z9;
        com.google.devtools.ksp.symbol.KSDeclaration $r7, $r14;
        java.util.ArrayList $r9, $r11;
        int $i0, $i1, $i2;
        java.lang.Object[] $r13, $r23;
        java.lang.IllegalStateException $r16;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.String $r20, $r21;
        com.squareup.javapoet.ClassName $r22;
        com.squareup.javapoet.ParameterizedTypeName $r25;
        java.lang.Object $r26, r35, r41;
        com.squareup.javapoet.ArrayTypeName $r28;
        java.lang.Iterable $r32, $r38;
        java.util.Iterator r34, r40;
        com.google.devtools.ksp.symbol.KSTypeArgument r36;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        r2 := @parameter2: java.util.LinkedHashMap;

        $r5 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        $r6 = (java.util.Collection) $r5;

        $z0 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        if $z9 == 0 goto label12;

        $z1 = interfaceinvoke r1.<com.google.devtools.ksp.processing.Resolver: boolean isJavaRawType(com.google.devtools.ksp.symbol.KSType)>($r0);

        if $z1 != 0 goto label12;

        $r8 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        $r32 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r32, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r33 = (java.util.Collection) $r9;

        r34 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.google.devtools.ksp.symbol.KSTypeArgument) r35;

        r37 = r33;

        $r31 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>(r36, r1, r2);

        interfaceinvoke r37.<java.util.Collection: boolean add(java.lang.Object)>($r31);

        goto label03;

     label04:
        $r10 = (java.util.List) r33;

        $r38 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r38, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i1);

        r39 = (java.util.Collection) $r11;

        r40 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r42 = (com.squareup.javapoet.TypeName) r41;

        r43 = r39;

        $r30 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeName tryBox(com.squareup.javapoet.TypeName)>(r42);

        interfaceinvoke r43.<java.util.Collection: boolean add(java.lang.Object)>($r30);

        goto label05;

     label06:
        $r44 = (java.util.List) r39;

        $z4 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: boolean isSuspendFunctionType()>();

        if $z4 == 0 goto label07;

        $r45 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: java.util.List convertToSuspendSignature(java.util.List)>($r44);

        goto label08;

     label07:
        $r45 = $r44;

     label08:
        $r29 = (java.util.Collection) $r45;

        $r12 = newarray (com.squareup.javapoet.TypeName)[0];

        $r13 = interfaceinvoke $r29.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r13, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r4 = (com.squareup.javapoet.TypeName[]) $r13;

        $r14 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r15 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSDeclaration,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r14, r1, r2);

        $r46 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeName tryBox(com.squareup.javapoet.TypeName)>($r15);

        $z5 = $r46 instanceof com.squareup.javapoet.ArrayTypeName;

        if $z5 == 0 goto label09;

        $r26 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object single(java.lang.Object[])>(r4);

        $r27 = (com.squareup.javapoet.TypeName) $r26;

        $r28 = staticinvoke <com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName of(com.squareup.javapoet.TypeName)>($r27);

        $r47 = (com.squareup.javapoet.TypeName) $r28;

        goto label11;

     label09:
        $z6 = $r46 instanceof com.squareup.javapoet.ClassName;

        if $z6 == 0 goto label10;

        $r22 = (com.squareup.javapoet.ClassName) $r46;

        $i2 = lengthof r4;

        $r23 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, $i2);

        $r24 = (com.squareup.javapoet.TypeName[]) $r23;

        $r25 = staticinvoke <com.squareup.javapoet.ParameterizedTypeName: com.squareup.javapoet.ParameterizedTypeName get(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r22, $r24);

        $r47 = (com.squareup.javapoet.TypeName) $r25;

        goto label11;

     label10:
        $r16 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected type name for KSType: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label11:
        r3 = $r47;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "{\n        val args: Arra\u2026ypeName\")\n        }\n    }");

        $r48 = r3;

        goto label13;

     label12:
        $r7 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r48 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSDeclaration,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r7, r1, r2);

     label13:
        return $r48;
    }

    private static final java.util.List convertToSuspendSignature(java.util.List)
    {
        java.util.List $r0, r1, r2, $r15, $r17;
        com.squareup.javapoet.WildcardTypeName r3, $r11, $r14;
        com.squareup.javapoet.ParameterizedTypeName r4;
        int $i0, $i1;
        java.lang.Object $r5;
        com.squareup.javapoet.TypeName $r6, $r8, $r9, $r13;
        com.squareup.javapoet.ClassName $r7, $r12;
        java.util.Collection $r10;
        java.lang.Iterable $r16;
        com.squareup.javapoet.TypeName[] r18;
        com.squareup.javapoet.WildcardTypeName[] r19;

        $r0 := @parameter0: java.util.List;

        r1 = $r0;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        r2 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(0, $i1);

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>(r1);

        $r6 = (com.squareup.javapoet.TypeName) $r5;

        r3 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName supertypeOf(com.squareup.javapoet.TypeName)>($r6);

        $r7 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.Class)>(class "Lkotlin/coroutines/Continuation;");

        r18 = newarray (com.squareup.javapoet.TypeName)[1];

        $r8 = (com.squareup.javapoet.TypeName) r3;

        r18[0] = $r8;

        r4 = staticinvoke <com.squareup.javapoet.ParameterizedTypeName: com.squareup.javapoet.ParameterizedTypeName get(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r7, r18);

        $r10 = (java.util.Collection) r2;

        r19 = newarray (com.squareup.javapoet.WildcardTypeName)[2];

        $r9 = (com.squareup.javapoet.TypeName) r4;

        $r11 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName supertypeOf(com.squareup.javapoet.TypeName)>($r9);

        r19[0] = $r11;

        $r12 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.ClassName OBJECT>;

        $r13 = (com.squareup.javapoet.TypeName) $r12;

        $r14 = staticinvoke <com.squareup.javapoet.WildcardTypeName: com.squareup.javapoet.WildcardTypeName subtypeOf(com.squareup.javapoet.TypeName)>($r13);

        r19[1] = $r14;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r19);

        $r16 = (java.lang.Iterable) $r15;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r10, $r16);

        return $r17;
    }

    private static final java.lang.reflect.Constructor getTypeVarNameConstructor()
    {
        kotlin.Lazy r0;
        java.lang.Object $r1;
        java.lang.reflect.Constructor $r2;

        r0 = <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: kotlin.Lazy typeVarNameConstructor$delegate>;

        $r1 = interfaceinvoke r0.<kotlin.Lazy: java.lang.Object getValue()>();

        $r2 = (java.lang.reflect.Constructor) $r1;

        return $r2;
    }

    private static final com.squareup.javapoet.TypeVariableName createModifiableTypeVariableName(java.lang.String, java.util.List)
    {
        java.lang.String r0;
        java.util.List r1;
        java.lang.Object[] r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        com.squareup.javapoet.TypeVariableName $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: java.lang.reflect.Constructor getTypeVarNameConstructor()>();

        r2 = newarray (java.lang.Object)[2];

        r2[0] = r0;

        r2[1] = r1;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type com.squareup.javapoet.TypeVariableName{ com.squareup.kotlinpoet.javapoet.TypeAliasesKt.JTypeVariableName }");

        $r5 = (com.squareup.javapoet.TypeVariableName) $r4;

        return $r5;
    }

    private static final com.squareup.javapoet.TypeName asJTypeName$resolveTypeName(com.google.devtools.ksp.symbol.KSTypeArgument, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSTypeArgument $r0;
        com.google.devtools.ksp.processing.Resolver $r1;
        java.util.LinkedHashMap $r2;
        com.google.devtools.ksp.symbol.KSTypeReference $r3;
        com.squareup.javapoet.TypeName $r4, $r5;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeArgument;

        $r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        $r2 := @parameter2: java.util.LinkedHashMap;

        $r3 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        $r4 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r3, $r1, $r2);

        $r5 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeName tryBox(com.squareup.javapoet.TypeName)>($r4);

        return $r5;
    }

    public static final com.squareup.javapoet.TypeName access$asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference, com.google.devtools.ksp.processing.Resolver, java.util.LinkedHashMap)
    {
        com.google.devtools.ksp.symbol.KSTypeReference $r0;
        com.google.devtools.ksp.processing.Resolver r1;
        java.util.LinkedHashMap r2;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeReference;

        r1 := @parameter1: com.google.devtools.ksp.processing.Resolver;

        r2 := @parameter2: java.util.LinkedHashMap;

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.TypeName asJTypeName(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.processing.Resolver,java.util.LinkedHashMap)>($r0, r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        com.squareup.javapoet.ClassName $r1;
        androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$typeVarNameConstructor$2 $r2;
        kotlin.jvm.functions.Function0 $r3;
        kotlin.Lazy $r4;

        $r0 = newarray (java.lang.String)[0];

        $r1 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("error", "NonExistentClass", $r0);

        <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.ClassName ERROR_JTYPE_NAME> = $r1;

        $r2 = <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$typeVarNameConstructor$2: androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt$typeVarNameConstructor$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r3);

        <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: kotlin.Lazy typeVarNameConstructor$delegate> = $r4;

        return;
    }

