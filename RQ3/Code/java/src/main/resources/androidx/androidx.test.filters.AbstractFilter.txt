androidx.test.filters.AbstractFilter
    protected java.util.List getClassAnnotations(org.junit.runner.Description)
    {
        androidx.test.filters.AbstractFilter r0;
        org.junit.runner.Description r1;
        java.util.ArrayList r2, $r6;
        java.lang.'annotation'.Annotation[] r3;
        int i0, i1;
        java.lang.'annotation'.Annotation r4, $r9;
        androidx.test.filters.CustomFilter r5;
        java.lang.Class $r7, $r8, $r10;
        boolean $z0;

        r0 := @this: androidx.test.filters.AbstractFilter;

        r1 := @parameter0: org.junit.runner.Description;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = virtualinvoke r1.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        r3 = virtualinvoke $r7.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $r8 = interfaceinvoke r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroidx/test/filters/CustomFilter;");

        r5 = (androidx.test.filters.CustomFilter) $r9;

        if r5 == null goto label2;

        $r10 = interfaceinvoke r5.<androidx.test.filters.CustomFilter: java.lang.Class filterClass()>();

        $z0 = virtualinvoke $r10.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r2;
    }

    protected java.util.List getMethodAnnotations(org.junit.runner.Description)
    {
        androidx.test.filters.AbstractFilter r0;
        org.junit.runner.Description r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        java.lang.'annotation'.Annotation r4, $r10;
        androidx.test.filters.CustomFilter r5;
        java.util.Collection $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.lang.Class $r9, $r11;

        r0 := @this: androidx.test.filters.AbstractFilter;

        r1 := @parameter0: org.junit.runner.Description;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = virtualinvoke r1.<org.junit.runner.Description: java.util.Collection getAnnotations()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.'annotation'.Annotation) $r8;

        $r9 = interfaceinvoke r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroidx/test/filters/CustomFilter;");

        r5 = (androidx.test.filters.CustomFilter) $r10;

        if r5 == null goto label2;

        $r11 = interfaceinvoke r5.<androidx.test.filters.CustomFilter: java.lang.Class filterClass()>();

        $z1 = virtualinvoke $r11.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        return r2;
    }

    public void <init>()
    {
        androidx.test.filters.AbstractFilter r0;

        r0 := @this: androidx.test.filters.AbstractFilter;

        specialinvoke r0.<org.junit.runner.manipulation.Filter: void <init>()>();

        return;
    }

<androidx.test.filters.AbstractFilter: boolean evaluateTest(org.junit.runner.Description)>
    public boolean shouldRun(org.junit.runner.Description)
    {
        androidx.test.filters.AbstractFilter r0;
        org.junit.runner.Description r1, r3;
        java.util.Iterator r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.test.filters.AbstractFilter;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r1.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<androidx.test.filters.AbstractFilter: boolean evaluateTest(org.junit.runner.Description)>(r1);

        return $z3;

     label1:
        $r4 = virtualinvoke r1.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.junit.runner.Description) $r5;

        $z2 = virtualinvoke r0.<androidx.test.filters.AbstractFilter: boolean shouldRun(org.junit.runner.Description)>(r3);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

