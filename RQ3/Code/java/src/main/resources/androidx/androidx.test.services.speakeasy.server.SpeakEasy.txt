androidx.test.services.speakeasy.server.SpeakEasy
<androidx.test.services.speakeasy.server.SpeakEasy: androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback binderDeathCallback>
<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders>
    static volatile androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback '-$$Nest$fgetbinderDeathCallback'(androidx.test.services.speakeasy.server.SpeakEasy)
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback r1;

        $r0 := @parameter0: androidx.test.services.speakeasy.server.SpeakEasy;

        r1 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback binderDeathCallback>;

        return r1;
    }

    void <init>(androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback)
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        java.lang.Object $r1;
        androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback $r2;
        java.util.HashMap r3;
        java.util.Map r4;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy;

        $r2 := @parameter0: androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        r4 = (java.util.Map) r3;

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders> = r4;

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback) $r1;

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy: androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback binderDeathCallback> = $r2;

        return;
    }

    private void doFind(androidx.test.services.speakeasy.SpeakEasyProtocol$Find)
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r1;
        java.util.Map $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        androidx.test.services.speakeasy.server.SpeakEasy$Holder $r5;
        android.os.ResultReceiver $r6;
        java.lang.Object[] $r7;
        android.os.Bundle $r8;
        android.os.IBinder $r9;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Find;

        $r2 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: java.lang.String key>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (androidx.test.services.speakeasy.server.SpeakEasy$Holder) $r4;

        if $r5 != null goto label1;

        $r6 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: android.os.ResultReceiver resultReceiver>;

        $r7 = newarray (java.lang.Object)[1];

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: java.lang.String key>;

        $r7[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("no binder for key: \'%s\'", $r7);

        $r8 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: android.os.Bundle asBundle(boolean,android.os.IBinder,java.lang.String)>(0, null, $r3);

        virtualinvoke $r6.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(-1, $r8);

        return;

     label1:
        $r6 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: android.os.ResultReceiver resultReceiver>;

        $r9 = staticinvoke <androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder '-$$Nest$fgetbinder'(androidx.test.services.speakeasy.server.SpeakEasy$Holder)>($r5);

        $r8 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: android.os.Bundle asBundle(boolean,android.os.IBinder,java.lang.String)>(1, $r9, "");

        virtualinvoke $r6.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(-1, $r8);

        return;
    }

    private void doPublish(androidx.test.services.speakeasy.SpeakEasyProtocol$Publish)
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r1;
        java.util.Map $r2;
        java.lang.String $r3, $r6;
        boolean $z0;
        android.os.ResultReceiver $r4;
        java.lang.Object[] $r5;
        android.os.Bundle $r7;
        androidx.test.services.speakeasy.server.SpeakEasy$1 $r8;
        android.os.IBinder $r9;
        androidx.test.services.speakeasy.server.SpeakEasy$Holder $r10;
        java.lang.Throwable $r11;
        java.lang.StringBuilder $r12;
        androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback $r13;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        $r2 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': already in use", $r5);

        $r7 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: android.os.Bundle asBundle(java.lang.String,boolean,java.lang.String)>($r3, 0, $r6);

        virtualinvoke $r4.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(-1, $r7);

        return;

     label1:
        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r8 = new androidx.test.services.speakeasy.server.SpeakEasy$1;

        specialinvoke $r8.<androidx.test.services.speakeasy.server.SpeakEasy$1: void <init>(androidx.test.services.speakeasy.server.SpeakEasy,java.lang.String,androidx.test.services.speakeasy.SpeakEasyProtocol$Publish)>($r0, $r3, $r1);

        $r9 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>;

     label2:
        interfaceinvoke $r9.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r8, 0);

     label3:
        $r10 = new androidx.test.services.speakeasy.server.SpeakEasy$Holder;

        $r9 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>;

        specialinvoke $r10.<androidx.test.services.speakeasy.server.SpeakEasy$Holder: void <init>(android.os.IBinder,android.os.IBinder$DeathRecipient)>($r9, $r8);

        $r2 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r10);

        $r4 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r7 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: android.os.Bundle asBundle(java.lang.String,boolean,java.lang.String)>($r3, 1, "published");

        virtualinvoke $r4.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(-1, $r7);

        return;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Super early death of: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SpeakEasy", $r6, $r11);

        $r13 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback binderDeathCallback>;

        $r9 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>;

        interfaceinvoke $r13.<androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback: void binderDeath(java.lang.String,android.os.IBinder)>($r3, $r9);

        $r4 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': already dead", $r5);

        $r7 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: android.os.Bundle asBundle(java.lang.String,boolean,java.lang.String)>($r3, 0, $r6);

        virtualinvoke $r4.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(-1, $r7);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void doRemove(androidx.test.services.speakeasy.SpeakEasyProtocol$Remove)
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r1;
        java.util.Map $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        androidx.test.services.speakeasy.server.SpeakEasy$Holder $r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.os.IBinder$DeathRecipient $r7;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove;

        $r2 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders>;

        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: java.lang.String key>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        $r5 = (androidx.test.services.speakeasy.server.SpeakEasy$Holder) $r4;

        if $r5 == null goto label1;

        $r6 = staticinvoke <androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder '-$$Nest$fgetbinder'(androidx.test.services.speakeasy.server.SpeakEasy$Holder)>($r5);

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean isBinderAlive()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder '-$$Nest$fgetbinder'(androidx.test.services.speakeasy.server.SpeakEasy$Holder)>($r5);

        $r7 = staticinvoke <androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder$DeathRecipient '-$$Nest$fgetdeath'(androidx.test.services.speakeasy.server.SpeakEasy$Holder)>($r5);

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

     label1:
        return;
    }

    void serve(androidx.test.services.speakeasy.SpeakEasyProtocol)
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r1;
        int $i0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r5;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r6;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r7;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $i0 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type>;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid/Unknown protocol: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $r5 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find>;

        specialinvoke $r0.<androidx.test.services.speakeasy.server.SpeakEasy: void doFind(androidx.test.services.speakeasy.SpeakEasyProtocol$Find)>($r5);

        return;

     label3:
        $r6 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove>;

        specialinvoke $r0.<androidx.test.services.speakeasy.server.SpeakEasy: void doRemove(androidx.test.services.speakeasy.SpeakEasyProtocol$Remove)>($r6);

        return;

     label4:
        $r7 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish>;

        specialinvoke $r0.<androidx.test.services.speakeasy.server.SpeakEasy: void doPublish(androidx.test.services.speakeasy.SpeakEasyProtocol$Publish)>($r7);

        return;
    }

    int size()
    {
        androidx.test.services.speakeasy.server.SpeakEasy $r0;
        int $i0;
        java.util.Map $r1;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy;

        $r1 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy: java.util.Map binders>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

androidx.test.services.speakeasy.server.SpeakEasy$1
<androidx.test.services.speakeasy.server.SpeakEasy$1: androidx.test.services.speakeasy.server.SpeakEasy this$0>
<androidx.test.services.speakeasy.server.SpeakEasy$1: java.lang.String val$key>
<androidx.test.services.speakeasy.server.SpeakEasy$1: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish val$p>
    void <init>(androidx.test.services.speakeasy.server.SpeakEasy, java.lang.String, androidx.test.services.speakeasy.SpeakEasyProtocol$Publish)
    {
        androidx.test.services.speakeasy.server.SpeakEasy$1 $r0;
        androidx.test.services.speakeasy.server.SpeakEasy $r1;
        java.lang.String $r2;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r3;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy$1;

        $r1 := @parameter0: androidx.test.services.speakeasy.server.SpeakEasy;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy$1: androidx.test.services.speakeasy.server.SpeakEasy this$0> = $r1;

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy$1: java.lang.String val$key> = $r2;

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy$1: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish val$p> = $r3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void binderDied()
    {
        androidx.test.services.speakeasy.server.SpeakEasy$1 $r0;
        java.lang.String $r1;
        androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback $r2;
        androidx.test.services.speakeasy.server.SpeakEasy $r3;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r4;
        android.os.IBinder $r5;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy$1;

        $r3 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy$1: androidx.test.services.speakeasy.server.SpeakEasy this$0>;

        $r2 = staticinvoke <androidx.test.services.speakeasy.server.SpeakEasy: androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback '-$$Nest$fgetbinderDeathCallback'(androidx.test.services.speakeasy.server.SpeakEasy)>($r3);

        $r1 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy$1: java.lang.String val$key>;

        $r4 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy$1: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish val$p>;

        $r5 = $r4.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>;

        interfaceinvoke $r2.<androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback: void binderDeath(java.lang.String,android.os.IBinder)>($r1, $r5);

        return;
    }

androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback
<androidx.test.services.speakeasy.server.SpeakEasy$BinderDeathCallback: void binderDeath(java.lang.String,android.os.IBinder)>
androidx.test.services.speakeasy.server.SpeakEasy$Holder
<androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder binder>
<androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder$DeathRecipient death>
    static volatile android.os.IBinder '-$$Nest$fgetbinder'(androidx.test.services.speakeasy.server.SpeakEasy$Holder)
    {
        androidx.test.services.speakeasy.server.SpeakEasy$Holder $r0;
        android.os.IBinder r1;

        $r0 := @parameter0: androidx.test.services.speakeasy.server.SpeakEasy$Holder;

        r1 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder binder>;

        return r1;
    }

    static volatile android.os.IBinder$DeathRecipient '-$$Nest$fgetdeath'(androidx.test.services.speakeasy.server.SpeakEasy$Holder)
    {
        androidx.test.services.speakeasy.server.SpeakEasy$Holder $r0;
        android.os.IBinder$DeathRecipient r1;

        $r0 := @parameter0: androidx.test.services.speakeasy.server.SpeakEasy$Holder;

        r1 = $r0.<androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder$DeathRecipient death>;

        return r1;
    }

    void <init>(android.os.IBinder, android.os.IBinder$DeathRecipient)
    {
        androidx.test.services.speakeasy.server.SpeakEasy$Holder $r0;
        android.os.IBinder $r1;
        android.os.IBinder$DeathRecipient $r2;

        $r0 := @this: androidx.test.services.speakeasy.server.SpeakEasy$Holder;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.os.IBinder$DeathRecipient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder binder> = $r1;

        $r0.<androidx.test.services.speakeasy.server.SpeakEasy$Holder: android.os.IBinder$DeathRecipient death> = $r2;

        return;
    }

