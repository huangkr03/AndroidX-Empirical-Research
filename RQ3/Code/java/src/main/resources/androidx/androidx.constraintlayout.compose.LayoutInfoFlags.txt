androidx.constraintlayout.compose.LayoutInfoFlags
<androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags NONE>
<androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags BOUNDS>
<androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.constraintlayout.compose.LayoutInfoFlags r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.constraintlayout.compose.LayoutInfoFlags;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.constraintlayout.compose.LayoutInfoFlags[] values()
    {
        androidx.constraintlayout.compose.LayoutInfoFlags[] r0, $r2;
        int $i0;
        java.lang.Object[] $r1;

        r0 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags[] $VALUES>;

        $i0 = lengthof r0;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, $i0);

        $r2 = (androidx.constraintlayout.compose.LayoutInfoFlags[]) $r1;

        return $r2;
    }

    public static androidx.constraintlayout.compose.LayoutInfoFlags valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.constraintlayout.compose.LayoutInfoFlags $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/constraintlayout/compose/LayoutInfoFlags;", r0);

        $r2 = (androidx.constraintlayout.compose.LayoutInfoFlags) $r1;

        return $r2;
    }

    private static final androidx.constraintlayout.compose.LayoutInfoFlags[] $values()
    {
        androidx.constraintlayout.compose.LayoutInfoFlags[] r0;
        androidx.constraintlayout.compose.LayoutInfoFlags $r1, $r2;

        r0 = newarray (androidx.constraintlayout.compose.LayoutInfoFlags)[2];

        $r1 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags NONE>;

        r0[0] = $r1;

        $r2 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags BOUNDS>;

        r0[1] = $r2;

        return r0;
    }

    static void <clinit>()
    {
        androidx.constraintlayout.compose.LayoutInfoFlags $r0, $r1;
        androidx.constraintlayout.compose.LayoutInfoFlags[] $r2;

        $r0 = new androidx.constraintlayout.compose.LayoutInfoFlags;

        specialinvoke $r0.<androidx.constraintlayout.compose.LayoutInfoFlags: void <init>(java.lang.String,int)>("NONE", 0);

        <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags NONE> = $r0;

        $r1 = new androidx.constraintlayout.compose.LayoutInfoFlags;

        specialinvoke $r1.<androidx.constraintlayout.compose.LayoutInfoFlags: void <init>(java.lang.String,int)>("BOUNDS", 1);

        <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags BOUNDS> = $r1;

        $r2 = staticinvoke <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags[] $values()>();

        <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags[] $VALUES> = $r2;

        return;
    }

