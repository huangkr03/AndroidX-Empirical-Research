androidx.compose.ui.node.MeasureScopeWithLayoutNodeKt
    public static final java.util.List getChildrenOfVirtualChildren(androidx.compose.ui.layout.IntrinsicMeasureScope)
    {
        androidx.compose.ui.layout.IntrinsicMeasureScope r0;
        androidx.compose.ui.node.LayoutNode r1, r7;
        boolean z0;
        java.util.List $r2, $r11, $r12;
        java.util.ArrayList r3, $r10;
        int i0, $i1, i2;
        java.lang.Object r5, r6;
        java.util.Collection r8;
        androidx.compose.ui.node.MeasureScopeWithLayoutNode $r9;

        r0 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "scope");

        $r9 = (androidx.compose.ui.node.MeasureScopeWithLayoutNode) r0;

        r1 = interfaceinvoke $r9.<androidx.compose.ui.node.MeasureScopeWithLayoutNode: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        z0 = staticinvoke <androidx.compose.ui.node.MeasureScopeWithLayoutNodeKt: boolean isInLookaheadPass(androidx.compose.ui.node.LayoutNode)>(r1);

        $r2 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: java.util.List getFoldedChildren$ui_release()>();

        $r10 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i1);

        r3 = $r10;

        i2 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label4;

        r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = r5;

        r7 = (androidx.compose.ui.node.LayoutNode) r6;

        r8 = (java.util.Collection) r3;

        if z0 == 0 goto label2;

        $r12 = virtualinvoke r7.<androidx.compose.ui.node.LayoutNode: java.util.List getChildLookaheadMeasurables$ui_release()>();

        goto label3;

     label2:
        $r12 = virtualinvoke r7.<androidx.compose.ui.node.LayoutNode: java.util.List getChildMeasurables$ui_release()>();

     label3:
        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r11 = (java.util.List) r3;

        return $r11;
    }

    private static final boolean isInLookaheadPass(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode $r0, $r4;
        java.lang.String r1, $r6;
        androidx.compose.ui.node.LayoutNode$LayoutState $r2;
        int[] $r3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        kotlin.NoWhenBranchMatchedException $r7;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode$LayoutState getLayoutState$ui_release()>();

        $r3 = <androidx.compose.ui.node.MeasureScopeWithLayoutNodeKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutNode$LayoutState: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            default: goto label5;
        };

     label1:
        $z0 = 1;

        goto label6;

     label2:
        $z0 = 0;

        goto label6;

     label3:
        $r4 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        if $r4 != null goto label4;

        r1 = "Required value was null.";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        $z0 = staticinvoke <androidx.compose.ui.node.MeasureScopeWithLayoutNodeKt: boolean isInLookaheadPass(androidx.compose.ui.node.LayoutNode)>($r4);

        goto label6;

     label5:
        $r7 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r7.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r7;

     label6:
        return $z0;
    }

