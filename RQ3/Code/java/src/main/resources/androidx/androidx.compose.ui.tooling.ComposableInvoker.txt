androidx.compose.ui.tooling.ComposableInvoker
<androidx.compose.ui.tooling.ComposableInvoker: androidx.compose.ui.tooling.ComposableInvoker INSTANCE>
<androidx.compose.ui.tooling.ComposableInvoker: int SLOTS_PER_INT>
<androidx.compose.ui.tooling.ComposableInvoker: int BITS_PER_INT>
<androidx.compose.ui.tooling.ComposableInvoker: int $stable>
    private void <init>()
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final boolean compatibleTypes(java.lang.Class[], java.lang.Class[])
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;
        java.lang.Class[] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Class r3, r4, $r10;
        java.util.Collection r5, $r9, r14;
        java.util.ArrayList $r6;
        java.util.List $r7;
        boolean $z1, $z2, $z3, $z8, $z9, $z10, z11, $z12;
        java.lang.Boolean $r8, $r11;
        java.lang.Iterable $r15;
        java.util.Iterator $r16;
        java.lang.Object r17;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: java.lang.Class[];

        $i3 = lengthof r1;

        $i2 = lengthof r2;

        if $i3 != $i2 goto label7;

        $r6 = new java.util.ArrayList;

        $i4 = lengthof r1;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i4);

        r14 = (java.util.Collection) $r6;

        i6 = 0;

        i7 = 0;

        i0 = lengthof r1;

     label1:
        if i7 >= i0 goto label2;

        r3 = r1[i7];

        $i5 = i6;

        i6 = i6 + 1;

        r4 = r3;

        i1 = $i5;

        r5 = r14;

        $r10 = r2[i1];

        $z3 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r11);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r7 = (java.util.List) r14;

        $r15 = (java.lang.Iterable) $r7;

        $z1 = $r15 instanceof java.util.Collection;

        if $z1 == 0 goto label3;

        $r9 = (java.util.Collection) $r15;

        $z2 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $z8 = 1;

        goto label6;

     label3:
        $r16 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z9 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label5;

        r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Boolean) r17;

        $z10 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        z11 = 0;

        if $z10 != 0 goto label4;

        $z8 = 0;

        goto label6;

     label5:
        $z8 = 1;

     label6:
        if $z8 == 0 goto label7;

        $z12 = 1;

        goto label8;

     label7:
        $z12 = 0;

     label8:
        return $z12;
    }

    private final transient java.lang.reflect.Method getDeclaredCompatibleMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        androidx.compose.ui.tooling.ComposableInvoker r0, $r17;
        java.lang.Class $r1;
        java.lang.String r2, $r15, $r16;
        java.lang.Class[] r3, r4, $r18;
        java.lang.Object[] $r5, $r8;
        int i0, $i1, i2;
        java.lang.Object r6, $r19;
        java.lang.reflect.Method r7, $r10;
        java.lang.reflect.Method[] $r9;
        java.lang.NoSuchMethodException $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        boolean $z2, $z3, $z4;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        $r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class[];

        $i1 = lengthof r3;

        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r3, $i1);

        r4 = (java.lang.Class[]) $r8;

        $r9 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "declaredMethods");

        $r5 = (java.lang.Object[]) $r9;

        i2 = 0;

        i0 = lengthof $r5;

     label1:
        if i2 >= i0 goto label5;

        r6 = $r5[i2];

        r7 = (java.lang.reflect.Method) r6;

        $r16 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r16);

        if $z2 == 0 goto label2;

        $r17 = <androidx.compose.ui.tooling.ComposableInvoker: androidx.compose.ui.tooling.ComposableInvoker INSTANCE>;

        $r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "it.parameterTypes");

        $z3 = specialinvoke $r17.<androidx.compose.ui.tooling.ComposableInvoker: boolean compatibleTypes(java.lang.Class[],java.lang.Class[])>($r18, r4);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $r19 = r6;

        goto label6;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r19 = null;

     label6:
        $r10 = (java.lang.reflect.Method) $r19;

        if $r10 != null goto label7;

        $r11 = new java.lang.NoSuchMethodException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label7:
        return $r10;
    }

    private final java.lang.Object[] dup(java.lang.Object, int)
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;
        java.lang.Object $r1;
        int i0, i1, i2, $i3;
        java.util.Collection r2, r4, $r13, $r14;
        java.util.Iterator r3;
        kotlin.ranges.IntRange $r5;
        java.util.ArrayList $r6;
        boolean $z3;
        java.util.List $r7;
        java.lang.Object[] $r8, $r9, $r10;
        kotlin.collections.IntIterator $r11;
        java.lang.Iterable $r12;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        $r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r5 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i0);

        $r12 = (java.lang.Iterable) $r5;

        $r6 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r12, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i3);

        r2 = (java.util.Collection) $r6;

        r3 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r11 = (kotlin.collections.IntIterator) r3;

        i1 = virtualinvoke $r11.<kotlin.collections.IntIterator: int nextInt()>();

        i2 = i1;

        r4 = r2;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        goto label1;

     label2:
        $r7 = (java.util.List) r2;

        $r13 = (java.util.Collection) $r7;

        $r14 = (java.util.Collection) $r13;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T?");

        $r8 = newarray (java.lang.Object)[0];

        $r9 = interfaceinvoke $r14.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        $r10 = (java.lang.Object[]) $r9;

        return $r10;
    }

    private final transient java.lang.reflect.Method findComposableMethod(java.lang.Class, java.lang.String, java.lang.Object[])
    {
        androidx.compose.ui.tooling.ComposableInvoker r0, r34, r48;
        java.lang.Class $r1, r5, r33, $r40, $r44, r47;
        java.lang.String r2, $r20, $r24, $r29, r32, r46;
        java.lang.Object[] r3, $r9, $r14, $r16, r53, $r56;
        java.lang.reflect.Method r4, r54, $r58, $r60;
        int $i0, $i1, $i2, i3, $i4, i5, i6, i7, $i8, i9;
        kotlin.jvm.internal.SpreadBuilder $r6, r30, r31, r45;
        java.util.ArrayList $r7, $r11;
        java.lang.Class[] $r8, $r13, $r15, $r17;
        kotlin.ranges.IntRange $r10;
        boolean $z2, $z5, z14;
        java.util.List $r12, r41;
        java.lang.NoSuchMethodException $r18;
        java.lang.StringBuilder $r19, $r21, $r22, $r23;
        kotlin.collections.IntIterator $r25;
        java.lang.Throwable $r26, $r27, r55;
        java.lang.reflect.Method[] $r28;
        java.util.Collection r35, $r42, $r50, r52;
        java.lang.Object r37, r38, r39, $r57, $r59;
        java.lang.Iterable r49;
        java.util.Iterator r51;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        $r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

     label01:
        $i0 = lengthof r3;

        i3 = specialinvoke r0.<androidx.compose.ui.tooling.ComposableInvoker: int changedParamCount(int,int)>($i0, 0);

        $r6 = new kotlin.jvm.internal.SpreadBuilder;

        specialinvoke $r6.<kotlin.jvm.internal.SpreadBuilder: void <init>(int)>(3);

        r30 = $r6;

        r31 = r30;

        r32 = r2;

        r33 = $r1;

        r34 = r0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r35 = (java.util.Collection) $r7;

        $i4 = 0;

        i5 = lengthof r3;

     label02:
        if $i4 >= i5 goto label06;

        r37 = r3[$i4];

        r38 = r37;

        r39 = r38;

        if r39 == null goto label03;

        $r40 = virtualinvoke r39.<java.lang.Object: java.lang.Class getClass()>();

        goto label04;

     label03:
        $r40 = null;

     label04:
        if $r40 == null goto label05;

        r5 = $r40;

        interfaceinvoke r35.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label05;

     label05:
        $i4 = $i4 + 1;

        goto label02;

     label06:
        r41 = (java.util.List) r35;

        $r42 = (java.util.Collection) r41;

        $r8 = newarray (java.lang.Class)[0];

        $r9 = interfaceinvoke $r42.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        virtualinvoke r31.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>($r9);

        virtualinvoke r30.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>(class "Landroidx/compose/runtime/Composer;");

        $r44 = <java.lang.Integer: java.lang.Class TYPE>;

        r45 = r30;

        r46 = r32;

        r47 = r33;

        r48 = r34;

        $r10 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i3);

        r49 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r49, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i1);

        $r50 = (java.util.Collection) $r11;

        r51 = interfaceinvoke r49.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r25 = (kotlin.collections.IntIterator) r51;

        i6 = virtualinvoke $r25.<kotlin.collections.IntIterator: int nextInt()>();

        i7 = i6;

        z14 = 0;

        interfaceinvoke $r50.<java.util.Collection: boolean add(java.lang.Object)>($r44);

        goto label07;

     label08:
        $r12 = (java.util.List) $r50;

        r52 = (java.util.Collection) $r12;

        $r13 = newarray (java.lang.Class)[0];

        $r14 = interfaceinvoke r52.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r14, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r53 = $r14;

        virtualinvoke r45.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r53);

        $i2 = virtualinvoke r30.<kotlin.jvm.internal.SpreadBuilder: int size()>();

        $r15 = newarray (java.lang.Class)[$i2];

        $r16 = virtualinvoke r30.<kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r17 = (java.lang.Class[]) $r16;

        r54 = specialinvoke r48.<androidx.compose.ui.tooling.ComposableInvoker: java.lang.reflect.Method getDeclaredCompatibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r47, r46, $r17);

     label09:
        goto label19;

     label10:
        $r27 := @caughtexception;

        r55 = $r27;

     label11:
        $r28 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "declaredMethods");

        $r56 = (java.lang.Object[]) $r28;

        $i8 = 0;

        i9 = lengthof $r56;

     label12:
        if $i8 >= i9 goto label14;

        $r57 = $r56[$i8];

        $r58 = (java.lang.reflect.Method) $r57;

        $r29 = virtualinvoke $r58.<java.lang.reflect.Method: java.lang.String getName()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r29, r2);

        if $z5 == 0 goto label13;

        $r59 = $r57;

        goto label15;

     label13:
        $i8 = $i8 + 1;

        goto label12;

     label14:
        $r59 = null;

     label15:
        $r60 = (java.lang.reflect.Method) $r59;

     label16:
        goto label18;

     label17:
        $r26 := @caughtexception;

        $r60 = (java.lang.reflect.Method) null;

     label18:
        r54 = $r60;

     label19:
        if r54 != null goto label20;

        $r18 = new java.lang.NoSuchMethodException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label20:
        r4 = r54;

        return r4;

        catch java.lang.ReflectiveOperationException from label11 to label16 with label17;
        catch java.lang.ReflectiveOperationException from label01 to label09 with label10;
    }

    private final java.lang.Object getDefaultValue(java.lang.Class)
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;
        java.lang.Class $r1;
        java.lang.String r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        $r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        if r2 == null goto label17;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1325958191: goto label03;
            case 104431: goto label07;
            case 3039496: goto label02;
            case 3052374: goto label04;
            case 3327612: goto label08;
            case 64711720: goto label01;
            case 97526364: goto label06;
            case 109413500: goto label05;
            default: goto label17;
        };

     label01:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z2 != 0 goto label15;

        goto label17;

     label02:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z5 != 0 goto label11;

        goto label17;

     label03:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z7 != 0 goto label13;

        goto label17;

     label04:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z4 != 0 goto label16;

        goto label17;

     label05:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 != 0 goto label10;

        goto label17;

     label06:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z1 != 0 goto label14;

        goto label17;

     label07:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 != 0 goto label09;

        goto label17;

     label08:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z3 != 0 goto label12;

        goto label17;

     label09:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label18;

     label10:
        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        goto label18;

     label11:
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        goto label18;

     label12:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        goto label18;

     label13:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label18;

     label14:
        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        goto label18;

     label15:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label18;

     label16:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        goto label18;

     label17:
        $r3 = null;

     label18:
        return $r3;
    }

    private final transient java.lang.Object invokeComposableMethod(java.lang.reflect.Method, java.lang.Object, androidx.compose.runtime.Composer, java.lang.Object[])
    {
        androidx.compose.ui.tooling.ComposableInvoker r0, $r17;
        java.lang.reflect.Method $r1;
        java.lang.Object r2, r9, $r13, $r22, $r27;
        androidx.compose.runtime.Composer r3;
        java.lang.Object[] r4, r5, r6, r7, r8, $r12, $r23, $r26;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, i19, i20, i21, $i22, i23, i24, $i25;
        java.lang.Class[] $r10, $r11, $r18;
        java.lang.IllegalStateException $r14, $r20;
        java.lang.String $r15, $r16, $r21, r25;
        java.lang.Class $r19, r24;
        boolean $z1, $z4, $z5, $z6, $z7, $z8;
        byte $b18;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        $r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.compose.runtime.Composer;

        r4 := @parameter3: java.lang.Object[];

        $r10 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "parameterTypes");

        $r23 = (java.lang.Object[]) $r10;

        $i7 = lengthof $r23;

        i14 = $i7 + -1;

        if 0 > i14 goto label03;

     label01:
        i15 = i14;

        i14 = i14 + -1;

        $r22 = $r23[i15];

        r24 = (java.lang.Class) $r22;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r24, class "Landroidx/compose/runtime/Composer;");

        if $z1 == 0 goto label02;

        $i16 = i15;

        goto label04;

     label02:
        if 0 <= i14 goto label01;

     label03:
        $i16 = -1;

     label04:
        i0 = $i16;

        if r2 == null goto label05;

        $b18 = 1;

        goto label06;

     label05:
        $b18 = 0;

     label06:
        i19 = specialinvoke r0.<androidx.compose.ui.tooling.ComposableInvoker: int changedParamCount(int,int)>(i0, $b18);

        $i8 = i0 + 1;

        i20 = $i8 + i19;

        $r11 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i21 = lengthof $r11;

        if i21 == i20 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        if $z4 == 0 goto label09;

        $i22 = specialinvoke r0.<androidx.compose.ui.tooling.ComposableInvoker: int defaultParamCount(int)>(i0);

        goto label10;

     label09:
        $i22 = 0;

     label10:
        i1 = $i22;

        $i9 = i0 + 1;

        $i10 = $i9 + i19;

        $i11 = $i10 + i1;

        if $i11 != i21 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        if $z5 != 0 goto label13;

        r25 = "Check failed.";

        $r20 = new java.lang.IllegalStateException;

        $r21 = virtualinvoke r25.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label13:
        i2 = i0 + 1;

        i23 = i2 + i19;

        i24 = 0;

        r6 = newarray (java.lang.Object)[i21];

     label14:
        if i24 >= i21 goto label30;

        i3 = i24;

        $r26 = r6;

        $i25 = i3;

        i4 = i3;

        if 0 > i4 goto label16;

        if i4 >= i0 goto label15;

        $z6 = 1;

        goto label17;

     label15:
        $z6 = 0;

        goto label17;

     label16:
        $z6 = 0;

     label17:
        if $z6 == 0 goto label19;

        r7 = r4;

        if i3 < 0 goto label18;

        $i13 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r7);

        if i3 > $i13 goto label18;

        $r27 = r7[i3];

        goto label29;

     label18:
        i5 = i3;

        i6 = i3;

        r8 = r6;

        $r17 = <androidx.compose.ui.tooling.ComposableInvoker: androidx.compose.ui.tooling.ComposableInvoker INSTANCE>;

        $r18 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r19 = $r18[i3];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "parameterTypes[idx]");

        r9 = specialinvoke $r17.<androidx.compose.ui.tooling.ComposableInvoker: java.lang.Object getDefaultValue(java.lang.Class)>($r19);

        $r26 = r8;

        $i25 = i6;

        $r27 = r9;

        goto label29;

     label19:
        if i4 != i0 goto label20;

        $r27 = r3;

        goto label29;

     label20:
        if i2 > i4 goto label22;

        if i4 >= i23 goto label21;

        $z7 = 1;

        goto label23;

     label21:
        $z7 = 0;

        goto label23;

     label22:
        $z7 = 0;

     label23:
        if $z7 == 0 goto label24;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label29;

     label24:
        if i23 > i4 goto label26;

        if i4 >= i21 goto label25;

        $z8 = 1;

        goto label27;

     label25:
        $z8 = 0;

        goto label27;

     label26:
        $z8 = 0;

     label27:
        if $z8 == 0 goto label28;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097151);

        goto label29;

     label28:
        $r14 = new java.lang.IllegalStateException;

        $r15 = "Unexpected index";

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label29:
        $r26[$i25] = $r27;

        i24 = i24 + 1;

        goto label14;

     label30:
        r5 = r6;

        $i12 = lengthof r5;

        $r12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r5, $i12);

        $r13 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r12);

        return $r13;
    }

    private final int changedParamCount(int, int)
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;
        int i0, i1, i2, $i3;
        double $d0, $d1, $d2;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        i2 = i0 + i1;

        $d0 = (double) i2;

        $d1 = $d0 / 10.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i3 = (int) $d2;

        return $i3;
    }

    private final int defaultParamCount(int)
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;
        int i0, $i1;
        double $d0, $d1, $d2;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 / 31.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i1 = (int) $d2;

        return $i1;
    }

    public final transient void invokeComposable(java.lang.String, java.lang.String, androidx.compose.runtime.Composer, java.lang.Object[])
    {
        androidx.compose.ui.tooling.ComposableInvoker r0;
        java.lang.String r1, r2, $r23;
        androidx.compose.runtime.Composer r3;
        java.lang.Object[] r4, $r7, $r10, $r11, $r13;
        java.lang.reflect.Method r5;
        java.lang.Object r6;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Class[] $r8;
        java.lang.reflect.Constructor $r9;
        java.lang.Throwable $r15, $r24, r26;
        java.lang.ClassNotFoundException $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.Class r25;

        r0 := @this: androidx.compose.ui.tooling.ComposableInvoker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.compose.runtime.Composer;

        r4 := @parameter3: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "methodName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "args");

     label1:
        r25 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r25, "composableClass");

        $i0 = lengthof r4;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, $i0);

        r5 = specialinvoke r0.<androidx.compose.ui.tooling.ComposableInvoker: java.lang.reflect.Method findComposableMethod(java.lang.Class,java.lang.String,java.lang.Object[])>(r25, r2, $r7);

        virtualinvoke r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $i1 = virtualinvoke r5.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z0 == 0 goto label2;

        $i3 = lengthof r4;

        $r13 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, $i3);

        specialinvoke r0.<androidx.compose.ui.tooling.ComposableInvoker: java.lang.Object invokeComposableMethod(java.lang.reflect.Method,java.lang.Object,androidx.compose.runtime.Composer,java.lang.Object[])>(r5, null, r3, $r13);

        goto label5;

     label2:
        $r8 = newarray (java.lang.Class)[0];

        $r9 = virtualinvoke r25.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r8);

        $r10 = newarray (java.lang.Object)[0];

        r6 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        $i2 = lengthof r4;

        $r11 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, $i2);

        specialinvoke r0.<androidx.compose.ui.tooling.ComposableInvoker: java.lang.Object invokeComposableMethod(java.lang.reflect.Method,java.lang.Object,androidx.compose.runtime.Composer,java.lang.Object[])>(r5, r6, r3, $r11);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        r26 = $r15;

        $r16 = new java.lang.ClassNotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Composable Method \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not found");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = (java.lang.Throwable) r26;

        specialinvoke $r16.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r24);

        throw $r16;

     label5:
        return;

        catch java.lang.ReflectiveOperationException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        androidx.compose.ui.tooling.ComposableInvoker $r0;

        $r0 = new androidx.compose.ui.tooling.ComposableInvoker;

        specialinvoke $r0.<androidx.compose.ui.tooling.ComposableInvoker: void <init>()>();

        <androidx.compose.ui.tooling.ComposableInvoker: androidx.compose.ui.tooling.ComposableInvoker INSTANCE> = $r0;

        return;
    }

