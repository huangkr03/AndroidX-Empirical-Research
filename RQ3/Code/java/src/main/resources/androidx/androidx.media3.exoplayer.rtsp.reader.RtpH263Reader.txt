androidx.media3.exoplayer.rtsp.reader.RtpH263Reader
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: java.lang.String TAG>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int MEDIA_CLOCK_FREQUENCY>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int I_VOP>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int PICTURE_START_CODE>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long firstReceivedTimestamp>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int previousSequenceNumber>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int width>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int height>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isKeyFrame>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isOutputFormatSet>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long startTimeOffsetUs>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long fragmentedSampleTimeUs>
<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean gotFirstPacketOfH263Frame>
    public void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat)
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        androidx.media3.exoplayer.rtsp.RtpPayloadFormat r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        r1 := @parameter0: androidx.media3.exoplayer.rtsp.RtpPayloadFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat> = r1;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long firstReceivedTimestamp> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int previousSequenceNumber> = -1;

        return;
    }

    public void createTracks(androidx.media3.extractor.ExtractorOutput, int)
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        androidx.media3.extractor.ExtractorOutput r1;
        int i0;
        androidx.media3.extractor.TrackOutput $r2, $r5;
        androidx.media3.exoplayer.rtsp.RtpPayloadFormat $r3;
        androidx.media3.common.Format $r4;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        i0 := @parameter1: int;

        $r2 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(i0, 2);

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput> = $r2;

        $r5 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput>;

        $r3 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat>;

        $r4 = $r3.<androidx.media3.exoplayer.rtsp.RtpPayloadFormat: androidx.media3.common.Format format>;

        interfaceinvoke $r5.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r4);

        return;
    }

    public void onReceivingFirstPacket(long, int)
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        long l0, $l2;
        int i1;
        byte $b3;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l2 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long firstReceivedTimestamp>;

        $b3 = $l2 cmp -9223372036854775807L;

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long firstReceivedTimestamp> = l0;

        return;
    }

    public void consume(androidx.media3.common.util.ParsableByteArray, long, int, boolean)
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        long l0, $l24, $l25, $l26;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, $i22, $i23;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        androidx.media3.extractor.TrackOutput $r2, $r8, $r21;
        androidx.media3.exoplayer.rtsp.RtpPayloadFormat $r4, $r6, $r13;
        androidx.media3.common.Format $r5, $r7, $r12, $r14;
        androidx.media3.common.Format$Builder $r9, $r10, $r11;
        java.lang.Object[] $r15;
        java.lang.Integer $r16, $r17;
        java.lang.String $r18;
        byte[] $r19, $r20;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r2);

        i2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        i3 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        $i4 = i3 & 1024;

        if $i4 <= 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z1 = $z7;

        $i5 = i3 & 512;

        if $i5 != 0 goto label03;

        $i6 = i3 & 504;

        if $i6 != 0 goto label03;

        $i7 = i3 & 7;

        if $i7 == 0 goto label04;

     label03:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("RtpH263Reader", "Dropping packet: video reduncancy coding is not supported, packet header VRC, or PLEN or PEBIT is non-zero");

        return;

     label04:
        if z1 == 0 goto label07;

        $z6 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean gotFirstPacketOfH263Frame>;

        if $z6 == 0 goto label05;

        $i17 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes>;

        if $i17 <= 0 goto label05;

        specialinvoke r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: void outputSampleMetadataForFragmentedPackets()>();

     label05:
        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean gotFirstPacketOfH263Frame> = 1;

        $i18 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int peekUnsignedByte()>();

        i19 = $i18 & 252;

        if i19 >= 128 goto label06;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("RtpH263Reader", "Picture start Code (PSC) missing, dropping packet.");

        return;

     label06:
        $r19 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $r19[i2] = 0;

        $r20 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i16 = i2 + 1;

        $r20[$i16] = 0;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i2);

        goto label10;

     label07:
        $z2 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean gotFirstPacketOfH263Frame>;

        if $z2 == 0 goto label09;

        $i8 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int previousSequenceNumber>;

        i20 = staticinvoke <androidx.media3.exoplayer.rtsp.RtpPacket: int getNextSequenceNumber(int)>($i8);

        if i1 >= i20 goto label08;

        $r15 = newarray (java.lang.Object)[2];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r15[0] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r15[1] = $r17;

        $r18 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("Received RTP packet with unexpected sequence number. Expected: %d; received: %d. Dropping packet.", $r15);

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("RtpH263Reader", $r18);

        return;

     label08:
        goto label10;

     label09:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("RtpH263Reader", "First payload octet of the H263 packet is not the beginning of a new H263 partition, Dropping current packet.");

        return;

     label10:
        $i9 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes>;

        if $i9 != 0 goto label13;

        $z3 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isOutputFormatSet>;

        specialinvoke r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: void parseVopHeader(androidx.media3.common.util.ParsableByteArray,boolean)>(r1, $z3);

        $z4 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isOutputFormatSet>;

        if $z4 != 0 goto label13;

        $z5 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isKeyFrame>;

        if $z5 == 0 goto label13;

        $i11 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int width>;

        $r4 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat>;

        $r5 = $r4.<androidx.media3.exoplayer.rtsp.RtpPayloadFormat: androidx.media3.common.Format format>;

        $i10 = $r5.<androidx.media3.common.Format: int width>;

        if $i11 != $i10 goto label11;

        $i15 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int height>;

        $r13 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat>;

        $r14 = $r13.<androidx.media3.exoplayer.rtsp.RtpPayloadFormat: androidx.media3.common.Format format>;

        $i14 = $r14.<androidx.media3.common.Format: int height>;

        if $i15 == $i14 goto label12;

     label11:
        $r8 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput>;

        $r6 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat>;

        $r7 = $r6.<androidx.media3.exoplayer.rtsp.RtpPayloadFormat: androidx.media3.common.Format format>;

        $r9 = virtualinvoke $r7.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $i12 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int width>;

        $r10 = virtualinvoke $r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i12);

        $i13 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int height>;

        $r11 = virtualinvoke $r10.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i13);

        $r12 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke $r8.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r12);

     label12:
        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isOutputFormatSet> = 1;

     label13:
        i21 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $r21 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput>;

        interfaceinvoke $r21.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r1, i21);

        $i22 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes>;

        $i23 = $i22 + i21;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes> = $i23;

        $l24 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long startTimeOffsetUs>;

        $l25 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long firstReceivedTimestamp>;

        $l26 = staticinvoke <androidx.media3.exoplayer.rtsp.reader.RtpReaderUtils: long toSampleTimeUs(long,long,long,int)>($l24, l0, $l25, 90000);

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long fragmentedSampleTimeUs> = $l26;

        if z0 == 0 goto label14;

        specialinvoke r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: void outputSampleMetadataForFragmentedPackets()>();

     label14:
        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int previousSequenceNumber> = i1;

        return;
    }

    public void seek(long, long)
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long firstReceivedTimestamp> = l0;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes> = 0;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long startTimeOffsetUs> = l1;

        return;
    }

    private void parseVopHeader(androidx.media3.common.util.ParsableByteArray, boolean)
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        boolean z0, $z1;
        int i0, i2, i3, i4, $i8, $i9, $i10, $i11, $i12, $i13;
        long l1, $l5, $l6;
        byte $b7;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        l1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: long readUnsignedInt()>();

        $l5 = l1 >> 10;

        $l6 = $l5 & 63L;

        $b7 = $l6 cmp 32L;

        if $b7 != 0 goto label5;

        i2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int peekUnsignedByte()>();

        $i8 = i2 >> 1;

        i3 = $i8 & 1;

        if z0 != 0 goto label2;

        if i3 != 0 goto label2;

        $i9 = i2 >> 2;

        i4 = $i9 & 7;

        if i4 != 1 goto label1;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int width> = 128;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int height> = 96;

        goto label2;

     label1:
        $i10 = i4 - 2;

        $i11 = 176 << $i10;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int width> = $i11;

        $i12 = i4 - 2;

        $i13 = 144 << $i12;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int height> = $i13;

     label2:
        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i0);

        if i3 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isKeyFrame> = $z1;

        return;

     label5:
        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i0);

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isKeyFrame> = 0;

        return;
    }

    private void outputSampleMetadataForFragmentedPackets()
    {
        androidx.media3.exoplayer.rtsp.reader.RtpH263Reader r0;
        androidx.media3.extractor.TrackOutput $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        int $i0;
        long $l1;
        byte $b2;

        r0 := @this: androidx.media3.exoplayer.rtsp.reader.RtpH263Reader;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: androidx.media3.extractor.TrackOutput trackOutput>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.extractor.TrackOutput) $r2;

        $l1 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long fragmentedSampleTimeUs>;

        $z0 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isKeyFrame>;

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $i0 = r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes>;

        interfaceinvoke $r3.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l1, $b2, $i0, 0, null);

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: int fragmentedSampleSizeBytes> = 0;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: long fragmentedSampleTimeUs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean isKeyFrame> = 0;

        r0.<androidx.media3.exoplayer.rtsp.reader.RtpH263Reader: boolean gotFirstPacketOfH263Frame> = 0;

        return;
    }

