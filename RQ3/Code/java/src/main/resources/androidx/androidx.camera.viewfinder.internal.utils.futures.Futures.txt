androidx.camera.viewfinder.internal.utils.futures.Futures
<androidx.camera.viewfinder.internal.utils.futures.Futures: androidx.arch.core.util.Function IDENTITY_FUNCTION>
    public static com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture$ImmediateSuccessfulFuture $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r2 = staticinvoke <androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture: com.google.common.util.concurrent.ListenableFuture nullFuture()>();

        return $r2;

     label1:
        $r1 = new androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture$ImmediateSuccessfulFuture;

        specialinvoke $r1.<androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture$ImmediateSuccessfulFuture: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.util.concurrent.ScheduledFuture immediateFailedScheduledFuture(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture$ImmediateFailedScheduledFuture $r1;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = new androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture$ImmediateFailedScheduledFuture;

        specialinvoke $r1.<androidx.camera.viewfinder.internal.utils.futures.ImmediateFuture$ImmediateFailedScheduledFuture: void <init>(java.lang.Throwable)>(r0);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture, androidx.camera.viewfinder.internal.utils.futures.AsyncFunction, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.camera.viewfinder.internal.utils.futures.AsyncFunction r1;
        java.util.concurrent.Executor r2;
        androidx.camera.viewfinder.internal.utils.futures.ChainingListenableFuture r3, $r4;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.camera.viewfinder.internal.utils.futures.AsyncFunction;

        r2 := @parameter2: java.util.concurrent.Executor;

        $r4 = new androidx.camera.viewfinder.internal.utils.futures.ChainingListenableFuture;

        specialinvoke $r4.<androidx.camera.viewfinder.internal.utils.futures.ChainingListenableFuture: void <init>(androidx.camera.viewfinder.internal.utils.futures.AsyncFunction,com.google.common.util.concurrent.ListenableFuture)>(r1, r0);

        r3 = $r4;

        interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r3, r2);

        return r3;
    }

    public static com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture, androidx.arch.core.util.Function, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture r0, $r5;
        androidx.arch.core.util.Function r1;
        java.util.concurrent.Executor r2;
        androidx.camera.viewfinder.internal.utils.futures.Futures$1 $r4;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.arch.core.util.Function;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new androidx.camera.viewfinder.internal.utils.futures.Futures$1;

        specialinvoke $r4.<androidx.camera.viewfinder.internal.utils.futures.Futures$1: void <init>(androidx.arch.core.util.Function)>(r1);

        $r5 = staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,androidx.camera.viewfinder.internal.utils.futures.AsyncFunction,java.util.concurrent.Executor)>(r0, $r4, r2);

        return $r5;
    }

    public static void propagate(com.google.common.util.concurrent.ListenableFuture, androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.arch.core.util.Function r2;
        java.util.concurrent.Executor $r3;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 = <androidx.camera.viewfinder.internal.utils.futures.Futures: androidx.arch.core.util.Function IDENTITY_FUNCTION>;

        $r3 = staticinvoke <androidx.camera.viewfinder.internal.utils.executor.CameraExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: void propagateTransform(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.util.concurrent.Executor)>(r0, r2, r1, $r3);

        return;
    }

    public static void propagateTransform(com.google.common.util.concurrent.ListenableFuture, androidx.arch.core.util.Function, androidx.concurrent.futures.CallbackToFutureAdapter$Completer, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.arch.core.util.Function r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.util.concurrent.Executor r3;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.arch.core.util.Function;

        r2 := @parameter2: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r3 := @parameter3: java.util.concurrent.Executor;

        staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: void propagateTransform(boolean,com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.util.concurrent.Executor)>(1, r0, r1, r2, r3);

        return;
    }

    private static void propagateTransform(boolean, com.google.common.util.concurrent.ListenableFuture, androidx.arch.core.util.Function, androidx.concurrent.futures.CallbackToFutureAdapter$Completer, java.util.concurrent.Executor)
    {
        boolean z0;
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.arch.core.util.Function r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.util.concurrent.Executor r3, $r10;
        androidx.camera.viewfinder.internal.utils.futures.Futures$3 $r8;
        androidx.camera.viewfinder.internal.utils.futures.Futures$4 $r9;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter2: androidx.arch.core.util.Function;

        r2 := @parameter3: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r3 := @parameter4: java.util.concurrent.Executor;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r8 = new androidx.camera.viewfinder.internal.utils.futures.Futures$3;

        specialinvoke $r8.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.arch.core.util.Function)>(r2, r1);

        staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.viewfinder.internal.utils.futures.FutureCallback,java.util.concurrent.Executor)>(r0, $r8, r3);

        if z0 == 0 goto label1;

        $r9 = new androidx.camera.viewfinder.internal.utils.futures.Futures$4;

        specialinvoke $r9.<androidx.camera.viewfinder.internal.utils.futures.Futures$4: void <init>(com.google.common.util.concurrent.ListenableFuture)>(r0);

        $r10 = staticinvoke <androidx.camera.viewfinder.internal.utils.executor.CameraExecutors: java.util.concurrent.Executor directExecutor()>();

        virtualinvoke r2.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor)>($r9, $r10);

     label1:
        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.ListenableFuture r0, r1;
        boolean $z0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r3;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (com.google.common.util.concurrent.ListenableFuture)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.viewfinder.internal.utils.futures.Futures: java.lang.Object lambda$nonCancellationPropagating$0(com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        r1 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r3);

        return r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture successfulAsList(java.util.Collection)
    {
        java.util.Collection r0;
        androidx.camera.viewfinder.internal.utils.futures.ListFuture $r1;
        java.util.ArrayList $r2;
        java.util.concurrent.Executor $r3;

        r0 := @parameter0: java.util.Collection;

        $r1 = new androidx.camera.viewfinder.internal.utils.futures.ListFuture;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r0);

        $r3 = staticinvoke <androidx.camera.viewfinder.internal.utils.executor.CameraExecutors: java.util.concurrent.Executor directExecutor()>();

        specialinvoke $r1.<androidx.camera.viewfinder.internal.utils.futures.ListFuture: void <init>(java.util.List,boolean,java.util.concurrent.Executor)>($r2, 0, $r3);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture allAsList(java.util.Collection)
    {
        java.util.Collection r0;
        androidx.camera.viewfinder.internal.utils.futures.ListFuture $r1;
        java.util.ArrayList $r2;
        java.util.concurrent.Executor $r3;

        r0 := @parameter0: java.util.Collection;

        $r1 = new androidx.camera.viewfinder.internal.utils.futures.ListFuture;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r0);

        $r3 = staticinvoke <androidx.camera.viewfinder.internal.utils.executor.CameraExecutors: java.util.concurrent.Executor directExecutor()>();

        specialinvoke $r1.<androidx.camera.viewfinder.internal.utils.futures.ListFuture: void <init>(java.util.List,boolean,java.util.concurrent.Executor)>($r2, 1, $r3);

        return $r1;
    }

    public static void addCallback(com.google.common.util.concurrent.ListenableFuture, androidx.camera.viewfinder.internal.utils.futures.FutureCallback, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.camera.viewfinder.internal.utils.futures.FutureCallback r1;
        java.util.concurrent.Executor r2;
        androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener r5;
        java.util.concurrent.Future r6;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.camera.viewfinder.internal.utils.futures.FutureCallback;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r5 = new androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener;

        r6 = (java.util.concurrent.Future) r0;

        specialinvoke r5.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: void <init>(java.util.concurrent.Future,androidx.camera.viewfinder.internal.utils.futures.FutureCallback)>(r6, r1);

        interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r5, r2);

        return;
    }

    public static java.lang.Object getDone(java.util.concurrent.Future) throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.Future r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.concurrent.Future;

        $z0 = interfaceinvoke r0.<java.util.concurrent.Future: boolean isDone()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Future was expected to be done, ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z0, $r4);

        $r5 = staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>(r0);

        return $r5;
    }

    public static java.lang.Object getUninterruptibly(java.util.concurrent.Future) throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.Future r0;
        java.lang.Throwable r1, $r3, $r4, r7;
        java.lang.Thread $r2, $r5;
        boolean z0;
        java.lang.Object r6;

        r0 := @parameter0: java.util.concurrent.Future;

        z0 = 0;

     label1:
        r6 = interfaceinvoke r0.<java.util.concurrent.Future: java.lang.Object get()>();

     label2:
        if z0 == 0 goto label3;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

     label3:
        return r6;

     label4:
        $r3 := @caughtexception;

        r7 = $r3;

        z0 = 1;

        goto label1;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

     label6:
        if z0 == 0 goto label7;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void interrupt()>();

     label7:
        throw r1;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    private void <init>()
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures r0;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object lambda$nonCancellationPropagating$0(com.google.common.util.concurrent.ListenableFuture, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.arch.core.util.Function r2;
        java.util.concurrent.Executor $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 = <androidx.camera.viewfinder.internal.utils.futures.Futures: androidx.arch.core.util.Function IDENTITY_FUNCTION>;

        $r3 = staticinvoke <androidx.camera.viewfinder.internal.utils.executor.CameraExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: void propagateTransform(boolean,com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.util.concurrent.Executor)>(0, r0, r2, r1, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nonCancellationPropagating[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$2 $r0;

        $r0 = new androidx.camera.viewfinder.internal.utils.futures.Futures$2;

        specialinvoke $r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$2: void <init>()>();

        <androidx.camera.viewfinder.internal.utils.futures.Futures: androidx.arch.core.util.Function IDENTITY_FUNCTION> = $r0;

        return;
    }

androidx.camera.viewfinder.internal.utils.futures.Futures$1
<androidx.camera.viewfinder.internal.utils.futures.Futures$1: androidx.arch.core.util.Function val$function>
    void <init>(androidx.arch.core.util.Function)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$1 r0;
        androidx.arch.core.util.Function r1;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$1;

        r1 := @parameter0: androidx.arch.core.util.Function;

        r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$1: androidx.arch.core.util.Function val$function> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$1 r0;
        java.lang.Object r1, $r3;
        androidx.arch.core.util.Function $r2;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$1: androidx.arch.core.util.Function val$function>;

        $r3 = interfaceinvoke $r2.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r3);

        return $r4;
    }

androidx.camera.viewfinder.internal.utils.futures.Futures$2
    void <init>()
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$2 r0;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object apply(java.lang.Object)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$2 r0;
        java.lang.Object r1;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$2;

        r1 := @parameter0: java.lang.Object;

        return r1;
    }

androidx.camera.viewfinder.internal.utils.futures.Futures$3
<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>
<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.arch.core.util.Function val$function>
    void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, androidx.arch.core.util.Function)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$3 r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.arch.core.util.Function r2;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$3;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 := @parameter1: androidx.arch.core.util.Function;

        r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer> = r1;

        r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.arch.core.util.Function val$function> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(java.lang.Object)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$3 r0;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r6;
        androidx.arch.core.util.Function $r3;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r4, $r7;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$3;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r4 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>;

        $r3 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.arch.core.util.Function val$function>;

        $r5 = interfaceinvoke $r3.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r1);

        virtualinvoke $r4.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>;

        virtualinvoke $r7.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$3 r0;
        java.lang.Throwable r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r2;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$3;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$3: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>;

        virtualinvoke $r2.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r1);

        return;
    }

androidx.camera.viewfinder.internal.utils.futures.Futures$4
<androidx.camera.viewfinder.internal.utils.futures.Futures$4: com.google.common.util.concurrent.ListenableFuture val$input>
    void <init>(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$4 r0;
        com.google.common.util.concurrent.ListenableFuture r1;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$4;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$4: com.google.common.util.concurrent.ListenableFuture val$input> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$4 r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$4;

        $r1 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$4: com.google.common.util.concurrent.ListenableFuture val$input>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

        return;
    }

androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener
<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: java.util.concurrent.Future mFuture>
<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: androidx.camera.viewfinder.internal.utils.futures.FutureCallback mCallback>
    void <init>(java.util.concurrent.Future, androidx.camera.viewfinder.internal.utils.futures.FutureCallback)
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener r0;
        java.util.concurrent.Future r1;
        androidx.camera.viewfinder.internal.utils.futures.FutureCallback r2;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener;

        r1 := @parameter0: java.util.concurrent.Future;

        r2 := @parameter1: androidx.camera.viewfinder.internal.utils.futures.FutureCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: java.util.concurrent.Future mFuture> = r1;

        r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: androidx.camera.viewfinder.internal.utils.futures.FutureCallback mCallback> = r2;

        return;
    }

    public void run()
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener r0;
        java.lang.Object r1;
        java.util.concurrent.Future $r2;
        androidx.camera.viewfinder.internal.utils.futures.FutureCallback $r3, $r5, $r7;
        java.lang.Throwable $r4, $r6, $r8, r9, r10;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener;

     label1:
        $r2 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: java.util.concurrent.Future mFuture>;

        r1 = staticinvoke <androidx.camera.viewfinder.internal.utils.futures.Futures: java.lang.Object getDone(java.util.concurrent.Future)>($r2);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

        $r7 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: androidx.camera.viewfinder.internal.utils.futures.FutureCallback mCallback>;

        $r8 = virtualinvoke r9.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        interfaceinvoke $r7.<androidx.camera.viewfinder.internal.utils.futures.FutureCallback: void onFailure(java.lang.Throwable)>($r8);

        return;

     label4:
        $r4 := @caughtexception;

        r10 = $r4;

        $r5 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: androidx.camera.viewfinder.internal.utils.futures.FutureCallback mCallback>;

        interfaceinvoke $r5.<androidx.camera.viewfinder.internal.utils.futures.FutureCallback: void onFailure(java.lang.Throwable)>(r10);

        return;

     label5:
        $r3 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: androidx.camera.viewfinder.internal.utils.futures.FutureCallback mCallback>;

        interfaceinvoke $r3.<androidx.camera.viewfinder.internal.utils.futures.FutureCallback: void onSuccess(java.lang.Object)>(r1);

        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Error from label1 to label2 with label4;
    }

    public java.lang.String toString()
    {
        androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r8;
        androidx.camera.viewfinder.internal.utils.futures.FutureCallback $r6;

        r0 := @this: androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = r0.<androidx.camera.viewfinder.internal.utils.futures.Futures$CallbackListener: androidx.camera.viewfinder.internal.utils.futures.FutureCallback mCallback>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

