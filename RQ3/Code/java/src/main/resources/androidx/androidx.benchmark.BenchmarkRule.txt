androidx.benchmark.BenchmarkRule
<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState internalState>
<androidx.benchmark.BenchmarkRule: boolean applied>
<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkRule$Scope scope>
<androidx.benchmark.BenchmarkRule: java.lang.String TAG>
<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkRule$Companion Companion>
    public final androidx.benchmark.BenchmarkState getInternalState$benchmark_release()
    {
        androidx.benchmark.BenchmarkRule r0;
        androidx.benchmark.BenchmarkState $r1;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        $r1 = r0.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState internalState>;

        return $r1;
    }

    public final androidx.benchmark.BenchmarkState getState()
    {
        androidx.benchmark.BenchmarkRule r0;
        boolean $z0;
        androidx.benchmark.BenchmarkState $r1;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        $z0 = r0.<androidx.benchmark.BenchmarkRule: boolean applied>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get state before BenchmarkRule is applied to a test. Check that your BenchmarkRule is annotated correctly (@Rule in Java, @get:Rule in Kotlin).");

        $r3 = (java.lang.Throwable) $r2;

        throw $r3;

     label1:
        $r1 = r0.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState internalState>;

        return $r1;
    }

    public final boolean getApplied$benchmark_release()
    {
        androidx.benchmark.BenchmarkRule r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        $z0 = r0.<androidx.benchmark.BenchmarkRule: boolean applied>;

        return $z0;
    }

    public final void setApplied$benchmark_release(boolean)
    {
        androidx.benchmark.BenchmarkRule r0;
        boolean z0;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        z0 := @parameter0: boolean;

        r0.<androidx.benchmark.BenchmarkRule: boolean applied> = z0;

        return;
    }

    public final androidx.benchmark.BenchmarkRule$Scope getScope()
    {
        androidx.benchmark.BenchmarkRule r0;
        androidx.benchmark.BenchmarkRule$Scope $r1;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        $r1 = r0.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkRule$Scope scope>;

        return $r1;
    }

    public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.BenchmarkRule r0, $r9;
        org.junit.runners.model.Statement r1, $r13;
        org.junit.runner.Description r2;
        kotlin.jvm.functions.Function2 r3;
        java.lang.String[] $r4;
        androidx.test.rule.GrantPermissionRule $r5;
        org.junit.rules.TestRule $r6, $r11;
        org.junit.rules.RuleChain $r7, $r12;
        androidx.benchmark.BenchmarkRule$apply$1 $r8;
        androidx.benchmark.BenchmarkRuleKt$sam$org_junit_rules_TestRule$0 $r10;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "base");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "description");

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "android.permission.WRITE_EXTERNAL_STORAGE";

        $r5 = staticinvoke <androidx.test.rule.GrantPermissionRule: androidx.test.rule.GrantPermissionRule grant(java.lang.String[])>($r4);

        $r6 = (org.junit.rules.TestRule) $r5;

        $r7 = staticinvoke <org.junit.rules.RuleChain: org.junit.rules.RuleChain outerRule(org.junit.rules.TestRule)>($r6);

        $r8 = new androidx.benchmark.BenchmarkRule$apply$1;

        $r9 = (androidx.benchmark.BenchmarkRule) r0;

        specialinvoke $r8.<androidx.benchmark.BenchmarkRule$apply$1: void <init>(androidx.benchmark.BenchmarkRule)>($r9);

        r3 = (kotlin.jvm.functions.Function2) $r8;

        $r10 = new androidx.benchmark.BenchmarkRuleKt$sam$org_junit_rules_TestRule$0;

        specialinvoke $r10.<androidx.benchmark.BenchmarkRuleKt$sam$org_junit_rules_TestRule$0: void <init>(kotlin.jvm.functions.Function2)>(r3);

        $r11 = (org.junit.rules.TestRule) $r10;

        $r12 = virtualinvoke $r7.<org.junit.rules.RuleChain: org.junit.rules.RuleChain around(org.junit.rules.TestRule)>($r11);

        $r13 = virtualinvoke $r12.<org.junit.rules.RuleChain: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>(r1, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r13, "RuleChain\n            .o\u2026.apply(base, description)");

        return $r13;
    }

    private final org.junit.runners.model.Statement applyInternal(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.BenchmarkRule r0;
        org.junit.runners.model.Statement r1, $r5;
        org.junit.runner.Description r2;
        androidx.benchmark.BenchmarkRule$applyInternal$1 $r3;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        $r3 = new androidx.benchmark.BenchmarkRule$applyInternal$1;

        specialinvoke $r3.<androidx.benchmark.BenchmarkRule$applyInternal$1: void <init>(androidx.benchmark.BenchmarkRule,org.junit.runner.Description,org.junit.runners.model.Statement)>(r0, r2, r1);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <androidx.benchmark.BenchmarkRuleKt: org.junit.runners.model.Statement Statement(kotlin.jvm.functions.Function0)>($r4);

        return $r5;
    }

    public void <init>()
    {
        androidx.benchmark.BenchmarkRule r0;
        androidx.benchmark.BenchmarkState $r1;
        androidx.benchmark.BenchmarkRule$Scope $r2;

        r0 := @this: androidx.benchmark.BenchmarkRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.benchmark.BenchmarkState;

        specialinvoke $r1.<androidx.benchmark.BenchmarkState: void <init>()>();

        r0.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState internalState> = $r1;

        $r2 = new androidx.benchmark.BenchmarkRule$Scope;

        specialinvoke $r2.<androidx.benchmark.BenchmarkRule$Scope: void <init>(androidx.benchmark.BenchmarkRule)>(r0);

        r0.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkRule$Scope scope> = $r2;

        return;
    }

    static void <clinit>()
    {
        androidx.benchmark.BenchmarkRule$Companion $r0;

        $r0 = new androidx.benchmark.BenchmarkRule$Companion;

        specialinvoke $r0.<androidx.benchmark.BenchmarkRule$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkRule$Companion Companion> = $r0;

        return;
    }

    public static final org.junit.runners.model.Statement access$applyInternal(androidx.benchmark.BenchmarkRule, org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.BenchmarkRule $r0;
        org.junit.runners.model.Statement r1, $r3;
        org.junit.runner.Description r2;

        $r0 := @parameter0: androidx.benchmark.BenchmarkRule;

        r1 := @parameter1: org.junit.runners.model.Statement;

        r2 := @parameter2: org.junit.runner.Description;

        $r3 = specialinvoke $r0.<androidx.benchmark.BenchmarkRule: org.junit.runners.model.Statement applyInternal(org.junit.runners.model.Statement,org.junit.runner.Description)>(r1, r2);

        return $r3;
    }

androidx.benchmark.BenchmarkRule$apply$1
    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.benchmark.BenchmarkRule$apply$1 r0;
        java.lang.Object r1, r2;
        org.junit.runner.Description $r3;
        org.junit.runners.model.Statement $r4, $r5;

        r0 := @this: androidx.benchmark.BenchmarkRule$apply$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.junit.runners.model.Statement) r1;

        $r3 = (org.junit.runner.Description) r2;

        $r5 = virtualinvoke r0.<androidx.benchmark.BenchmarkRule$apply$1: org.junit.runners.model.Statement invoke(org.junit.runners.model.Statement,org.junit.runner.Description)>($r4, $r3);

        return $r5;
    }

    public final org.junit.runners.model.Statement invoke(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.BenchmarkRule$apply$1 r0;
        org.junit.runners.model.Statement r1, $r5;
        org.junit.runner.Description r2;
        java.lang.Object $r3;
        androidx.benchmark.BenchmarkRule $r4;

        r0 := @this: androidx.benchmark.BenchmarkRule$apply$1;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "p1");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "p2");

        $r3 = r0.<androidx.benchmark.BenchmarkRule$apply$1: java.lang.Object receiver>;

        $r4 = (androidx.benchmark.BenchmarkRule) $r3;

        $r5 = staticinvoke <androidx.benchmark.BenchmarkRule: org.junit.runners.model.Statement access$applyInternal(androidx.benchmark.BenchmarkRule,org.junit.runners.model.Statement,org.junit.runner.Description)>($r4, r1, r2);

        return $r5;
    }

    public final kotlin.reflect.KDeclarationContainer getOwner()
    {
        androidx.benchmark.BenchmarkRule$apply$1 r0;
        kotlin.reflect.KClass $r1;

        r0 := @this: androidx.benchmark.BenchmarkRule$apply$1;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/benchmark/BenchmarkRule;");

        return $r1;
    }

    public final java.lang.String getName()
    {
        androidx.benchmark.BenchmarkRule$apply$1 r0;

        r0 := @this: androidx.benchmark.BenchmarkRule$apply$1;

        return "applyInternal";
    }

    public final java.lang.String getSignature()
    {
        androidx.benchmark.BenchmarkRule$apply$1 r0;

        r0 := @this: androidx.benchmark.BenchmarkRule$apply$1;

        return "applyInternal(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;";
    }

    void <init>(androidx.benchmark.BenchmarkRule)
    {
        androidx.benchmark.BenchmarkRule$apply$1 r0;
        androidx.benchmark.BenchmarkRule r1;

        r0 := @this: androidx.benchmark.BenchmarkRule$apply$1;

        r1 := @parameter0: androidx.benchmark.BenchmarkRule;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReference: void <init>(int,java.lang.Object)>(2, r1);

        return;
    }

androidx.benchmark.BenchmarkRule$applyInternal$1
<androidx.benchmark.BenchmarkRule$applyInternal$1: androidx.benchmark.BenchmarkRule this$0>
<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runner.Description $description>
<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runners.model.Statement $base>
    public volatile java.lang.Object invoke()
    {
        androidx.benchmark.BenchmarkRule$applyInternal$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.benchmark.BenchmarkRule$applyInternal$1;

        virtualinvoke r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.benchmark.BenchmarkRule$applyInternal$1 r0;
        boolean z0, $z1, $z2, z3, z4;
        androidx.benchmark.BenchmarkRule $r1, $r22, $r24;
        org.junit.runner.Description $r2, $r5, $r16, $r33;
        java.lang.StringBuilder $r3, $r4, $r7, $r8, $r9, $r12, $r15, $r19, $r20, $r21, $r27, $r30, $r31, $r36, $r37, $r38, $r39, $r41, $r45, r50, r53, r56;
        java.lang.String $r6, $r10, $r14, $r18, $r29, $r32, $r34, $r40, $r42, $r43, $r44, r48, r49, r51, r52, r54, r55, r57, r58;
        org.junit.runners.model.Statement $r11;
        androidx.benchmark.WarningState $r13, $r28;
        java.lang.Class $r17;
        androidx.benchmark.BenchmarkState $r23, $r26;
        androidx.benchmark.ResultWriter $r25;
        androidx.benchmark.BenchmarkState$Report $r35;
        int $i1;
        kotlin.TypeCastException $r46;
        byte b2, b3, b4;

        r0 := @this: androidx.benchmark.BenchmarkRule$applyInternal$1;

        $r1 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: androidx.benchmark.BenchmarkRule this$0>;

        virtualinvoke $r1.<androidx.benchmark.BenchmarkRule: void setApplied$benchmark_release(boolean)>(1);

        $r2 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runner.Description $description>;

        r48 = virtualinvoke $r2.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ");

        $r5 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runner.Description $description>;

        $r6 = virtualinvoke $r5.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BenchmarkRule", $r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r48, "invokeMethodName");

        $z1 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r48, "test", 0, 2, null);

        if $z1 == 0 goto label4;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The test name ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too short");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r48.<java.lang.String: int length()>();

        if $i1 <= 5 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r40, $z2);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        r49 = r48;

        b2 = 4;

        b3 = 5;

        r50 = $r41;

        z0 = 0;

        $r42 = virtualinvoke r49.<java.lang.String: java.lang.String substring(int,int)>(b2, b3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r42, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        r51 = $r42;

        r52 = r51;

        r53 = r50;

        z3 = 0;

        if r52 != null goto label3;

        $r46 = new kotlin.TypeCastException;

        specialinvoke $r46.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r46;

     label3:
        $r43 = virtualinvoke r52.<java.lang.String: java.lang.String toLowerCase()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r43, "(this as java.lang.String).toLowerCase()");

        r54 = $r43;

        r55 = r48;

        b4 = 5;

        r56 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        z4 = 0;

        $r44 = virtualinvoke r55.<java.lang.String: java.lang.String substring(int)>(b4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r44, "(this as java.lang.String).substring(startIndex)");

        r57 = $r44;

        $r45 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57);

        r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r11 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runners.model.Statement $base>;

        virtualinvoke $r11.<org.junit.runners.model.Statement: void evaluate()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = <androidx.benchmark.WarningState: androidx.benchmark.WarningState INSTANCE>;

        $r14 = virtualinvoke $r13.<androidx.benchmark.WarningState: java.lang.String getWARNING_PREFIX()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runner.Description $description>;

        $r17 = virtualinvoke $r16.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r17, "description.testClass");

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        r58 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: androidx.benchmark.BenchmarkRule this$0>;

        $r23 = virtualinvoke $r22.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState getInternalState$benchmark_release()>();

        virtualinvoke $r23.<androidx.benchmark.BenchmarkState: void sendStatus$benchmark_release(java.lang.String)>(r58);

        $r25 = <androidx.benchmark.ResultWriter: androidx.benchmark.ResultWriter INSTANCE>;

        $r24 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: androidx.benchmark.BenchmarkRule this$0>;

        $r26 = virtualinvoke $r24.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState getInternalState$benchmark_release()>();

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = <androidx.benchmark.WarningState: androidx.benchmark.WarningState INSTANCE>;

        $r29 = virtualinvoke $r28.<androidx.benchmark.WarningState: java.lang.String getWARNING_PREFIX()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runner.Description $description>;

        $r34 = virtualinvoke $r33.<org.junit.runner.Description: java.lang.String getClassName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r34, "description.className");

        $r35 = virtualinvoke $r26.<androidx.benchmark.BenchmarkState: androidx.benchmark.BenchmarkState$Report getReport$benchmark_release(java.lang.String,java.lang.String)>($r32, $r34);

        virtualinvoke $r25.<androidx.benchmark.ResultWriter: void appendReport(androidx.benchmark.BenchmarkState$Report)>($r35);

        return;
    }

    void <init>(androidx.benchmark.BenchmarkRule, org.junit.runner.Description, org.junit.runners.model.Statement)
    {
        androidx.benchmark.BenchmarkRule$applyInternal$1 r0;
        androidx.benchmark.BenchmarkRule r1;
        org.junit.runner.Description r2;
        org.junit.runners.model.Statement r3;

        r0 := @this: androidx.benchmark.BenchmarkRule$applyInternal$1;

        r1 := @parameter0: androidx.benchmark.BenchmarkRule;

        r2 := @parameter1: org.junit.runner.Description;

        r3 := @parameter2: org.junit.runners.model.Statement;

        r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: androidx.benchmark.BenchmarkRule this$0> = r1;

        r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runner.Description $description> = r2;

        r0.<androidx.benchmark.BenchmarkRule$applyInternal$1: org.junit.runners.model.Statement $base> = r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.benchmark.BenchmarkRule$Companion
    private void <init>()
    {
        androidx.benchmark.BenchmarkRule$Companion r0;

        r0 := @this: androidx.benchmark.BenchmarkRule$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.BenchmarkRule$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.BenchmarkRule$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.BenchmarkRule$Companion: void <init>()>();

        return;
    }

androidx.benchmark.BenchmarkRule$Scope
<androidx.benchmark.BenchmarkRule$Scope: androidx.benchmark.BenchmarkRule this$0>
    public final java.lang.Object runWithTimingDisabled(kotlin.jvm.functions.Function0)
    {
        androidx.benchmark.BenchmarkRule$Scope r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object r2;
        androidx.benchmark.BenchmarkState $r3, $r4;

        r0 := @this: androidx.benchmark.BenchmarkRule$Scope;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = virtualinvoke r0.<androidx.benchmark.BenchmarkRule$Scope: androidx.benchmark.BenchmarkState getOuterState()>();

        virtualinvoke $r3.<androidx.benchmark.BenchmarkState: void pauseTiming()>();

        r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = virtualinvoke r0.<androidx.benchmark.BenchmarkRule$Scope: androidx.benchmark.BenchmarkState getOuterState()>();

        virtualinvoke $r4.<androidx.benchmark.BenchmarkState: void resumeTiming()>();

        return r2;
    }

    public final androidx.benchmark.BenchmarkState getOuterState()
    {
        androidx.benchmark.BenchmarkRule$Scope r0;
        androidx.benchmark.BenchmarkRule $r1;
        androidx.benchmark.BenchmarkState $r2;

        r0 := @this: androidx.benchmark.BenchmarkRule$Scope;

        $r1 = r0.<androidx.benchmark.BenchmarkRule$Scope: androidx.benchmark.BenchmarkRule this$0>;

        $r2 = virtualinvoke $r1.<androidx.benchmark.BenchmarkRule: androidx.benchmark.BenchmarkState getState()>();

        return $r2;
    }

    public void <init>(androidx.benchmark.BenchmarkRule)
    {
        androidx.benchmark.BenchmarkRule$Scope r0;
        androidx.benchmark.BenchmarkRule $r1;

        r0 := @this: androidx.benchmark.BenchmarkRule$Scope;

        $r1 := @parameter0: androidx.benchmark.BenchmarkRule;

        r0.<androidx.benchmark.BenchmarkRule$Scope: androidx.benchmark.BenchmarkRule this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

