androidx.camera.core.impl.SessionProcessor
<androidx.camera.core.impl.SessionProcessor: androidx.camera.core.impl.SessionConfig initSession(androidx.camera.core.CameraInfo,androidx.camera.core.impl.OutputSurface,androidx.camera.core.impl.OutputSurface,androidx.camera.core.impl.OutputSurface)>
<androidx.camera.core.impl.SessionProcessor: void deInitSession()>
<androidx.camera.core.impl.SessionProcessor: void setParameters(androidx.camera.core.impl.Config)>
<androidx.camera.core.impl.SessionProcessor: void onCaptureSessionStart(androidx.camera.core.impl.RequestProcessor)>
<androidx.camera.core.impl.SessionProcessor: void onCaptureSessionEnd()>
<androidx.camera.core.impl.SessionProcessor: int startRepeating(androidx.camera.core.impl.SessionProcessor$CaptureCallback)>
<androidx.camera.core.impl.SessionProcessor: void stopRepeating()>
<androidx.camera.core.impl.SessionProcessor: int startCapture(androidx.camera.core.impl.SessionProcessor$CaptureCallback)>
<androidx.camera.core.impl.SessionProcessor: void abortCapture(int)>
androidx.camera.core.impl.SessionProcessor$CaptureCallback
<androidx.camera.core.impl.SessionProcessor$CaptureCallback: void onCaptureStarted(int,long)>
<androidx.camera.core.impl.SessionProcessor$CaptureCallback: void onCaptureProcessStarted(int)>
<androidx.camera.core.impl.SessionProcessor$CaptureCallback: void onCaptureFailed(int)>
<androidx.camera.core.impl.SessionProcessor$CaptureCallback: void onCaptureSequenceCompleted(int)>
<androidx.camera.core.impl.SessionProcessor$CaptureCallback: void onCaptureSequenceAborted(int)>
<androidx.camera.core.impl.SessionProcessor$CaptureCallback: void onCaptureCompleted(long,int,java.util.Map)>
