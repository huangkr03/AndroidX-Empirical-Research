androidx.media3.effect.Crop
<androidx.media3.effect.Crop: float left>
<androidx.media3.effect.Crop: float right>
<androidx.media3.effect.Crop: float bottom>
<androidx.media3.effect.Crop: float top>
<androidx.media3.effect.Crop: android.graphics.Matrix transformationMatrix>
    public void <init>(float, float, float, float)
    {
        androidx.media3.effect.Crop r0;
        float f0, f1, f2, f3;
        byte $b0, $b1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r6, $r12;
        android.graphics.Matrix $r13;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.effect.Crop;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = f1 cmpl f0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("right value ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be greater than left value ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, $r6);

        $b1 = f3 cmpl f2;

        if $b1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("top value ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be greater than bottom value ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, $r12);

        r0.<androidx.media3.effect.Crop: float left> = f0;

        r0.<androidx.media3.effect.Crop: float right> = f1;

        r0.<androidx.media3.effect.Crop: float bottom> = f2;

        r0.<androidx.media3.effect.Crop: float top> = f3;

        $r13 = new android.graphics.Matrix;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.media3.effect.Crop: android.graphics.Matrix transformationMatrix> = $r13;

        return;
    }

    public android.util.Pair configure(int, int)
    {
        androidx.media3.effect.Crop r0;
        int i0, i1, i2, i3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        android.graphics.Matrix $r1, $r5, $r6;
        byte $b4, $b5, $b6, $b7;
        java.lang.Integer $r2, $r3, $r7, $r8;
        android.util.Pair $r4, $r9;
        boolean $z2, $z3;

        r0 := @this: androidx.media3.effect.Crop;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z2, "inputWidth must be positive");

        if i1 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z3, "inputHeight must be positive");

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.media3.effect.Crop: android.graphics.Matrix transformationMatrix> = $r1;

        $f4 = r0.<androidx.media3.effect.Crop: float left>;

        $b4 = $f4 cmpl -1.0F;

        if $b4 != 0 goto label5;

        $f5 = r0.<androidx.media3.effect.Crop: float right>;

        $b5 = $f5 cmpl 1.0F;

        if $b5 != 0 goto label5;

        $f6 = r0.<androidx.media3.effect.Crop: float bottom>;

        $b6 = $f6 cmpl -1.0F;

        if $b6 != 0 goto label5;

        $f7 = r0.<androidx.media3.effect.Crop: float top>;

        $b7 = $f7 cmpl 1.0F;

        if $b7 != 0 goto label5;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r4;

     label5:
        $f8 = r0.<androidx.media3.effect.Crop: float right>;

        $f9 = r0.<androidx.media3.effect.Crop: float left>;

        $f10 = $f8 - $f9;

        f0 = $f10 / 2.0F;

        $f11 = r0.<androidx.media3.effect.Crop: float top>;

        $f12 = r0.<androidx.media3.effect.Crop: float bottom>;

        $f13 = $f11 - $f12;

        f1 = $f13 / 2.0F;

        $f14 = r0.<androidx.media3.effect.Crop: float left>;

        $f15 = r0.<androidx.media3.effect.Crop: float right>;

        $f16 = $f14 + $f15;

        f2 = $f16 / 2.0F;

        $f17 = r0.<androidx.media3.effect.Crop: float bottom>;

        $f18 = r0.<androidx.media3.effect.Crop: float top>;

        $f19 = $f17 + $f18;

        f3 = $f19 / 2.0F;

        $r5 = r0.<androidx.media3.effect.Crop: android.graphics.Matrix transformationMatrix>;

        $f20 = neg f2;

        $f21 = neg f3;

        virtualinvoke $r5.<android.graphics.Matrix: boolean postTranslate(float,float)>($f20, $f21);

        $r6 = r0.<androidx.media3.effect.Crop: android.graphics.Matrix transformationMatrix>;

        $f22 = 1.0F / f0;

        $f23 = 1.0F / f1;

        virtualinvoke $r6.<android.graphics.Matrix: boolean postScale(float,float)>($f22, $f23);

        $f24 = (float) i0;

        $f25 = $f24 * f0;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f25);

        $f26 = (float) i1;

        $f27 = $f26 * f1;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f27);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r9 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $r9;
    }

    public android.graphics.Matrix getMatrix(long)
    {
        androidx.media3.effect.Crop r0;
        long l0;
        android.graphics.Matrix $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.effect.Crop;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.effect.Crop: android.graphics.Matrix transformationMatrix>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object,java.lang.Object)>($r1, "configure must be called first");

        $r3 = (android.graphics.Matrix) $r2;

        return $r3;
    }

