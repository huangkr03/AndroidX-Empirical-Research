androidx.compose.ui.semantics.SemanticsNode
<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>
<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>
<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>
<androidx.compose.ui.semantics.SemanticsNode: boolean isFake>
<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode fakeNodeParent>
<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>
<androidx.compose.ui.semantics.SemanticsNode: int id>
<androidx.compose.ui.semantics.SemanticsNode: int $stable>
    public void <init>(androidx.compose.ui.node.SemanticsModifierNode, boolean, androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.SemanticsModifierNode r1, $r3;
        boolean z0;
        androidx.compose.ui.node.LayoutNode r2, $r5;
        androidx.compose.ui.semantics.SemanticsConfiguration $r4;
        int $i0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: androidx.compose.ui.node.SemanticsModifierNode;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outerSemanticsNode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutNode");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode> = r1;

        r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled> = z0;

        r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode> = r2;

        $r3 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>;

        $r4 = staticinvoke <androidx.compose.ui.node.SemanticsModifierNodeKt: androidx.compose.ui.semantics.SemanticsConfiguration collapsedSemanticsConfiguration(androidx.compose.ui.node.SemanticsModifierNode)>($r3);

        r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig> = $r4;

        $r5 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $i0 = virtualinvoke $r5.<androidx.compose.ui.node.LayoutNode: int getSemanticsId()>();

        r0.<androidx.compose.ui.semantics.SemanticsNode: int id> = $i0;

        return;
    }

    public void <init>(androidx.compose.ui.node.SemanticsModifierNode, boolean, androidx.compose.ui.node.LayoutNode, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.SemanticsModifierNode r1;
        boolean z0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.compose.ui.node.DelegatableNode $r3;
        androidx.compose.ui.node.LayoutNode r4;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: androidx.compose.ui.node.SemanticsModifierNode;

        z0 := @parameter1: boolean;

        r4 := @parameter2: androidx.compose.ui.node.LayoutNode;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r3 = (androidx.compose.ui.node.DelegatableNode) r1;

        r4 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r3);

     label1:
        specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode)>(r1, z0, r4);

        return;
    }

    public final androidx.compose.ui.node.SemanticsModifierNode getOuterSemanticsNode$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.SemanticsModifierNode $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>;

        return $r1;
    }

    public final boolean getMergingEnabled()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $z0 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>;

        return $z0;
    }

    public final androidx.compose.ui.node.LayoutNode getLayoutNode$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        return $r1;
    }

    public final boolean isFake$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $z0 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake>;

        return $z0;
    }

    public final void setFake$ui_release(boolean)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake> = z0;

        return;
    }

    public final androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.semantics.SemanticsConfiguration $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        return $r1;
    }

    public final androidx.compose.ui.layout.LayoutInfo getLayoutInfo()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;
        androidx.compose.ui.layout.LayoutInfo $r2;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r2 = (androidx.compose.ui.layout.LayoutInfo) $r1;

        return $r2;
    }

    public final androidx.compose.ui.node.RootForTest getRoot()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;
        androidx.compose.ui.node.Owner $r2;
        androidx.compose.ui.node.RootForTest $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<androidx.compose.ui.node.Owner: androidx.compose.ui.node.RootForTest getRootForTest()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public final int getId()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        int $i0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $i0 = r0.<androidx.compose.ui.semantics.SemanticsNode: int id>;

        return $i0;
    }

    public final androidx.compose.ui.geometry.Rect getTouchBoundsInRoot()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.SemanticsModifierNode r1, $r4;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2;
        boolean $z0;
        androidx.compose.ui.node.LayoutNode $r3;
        androidx.compose.ui.geometry.Rect $r5;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r2 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r4 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterMergingSemantics(androidx.compose.ui.node.LayoutNode)>($r3);

        if $r4 != null goto label2;

        $r4 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>;

        goto label2;

     label1:
        $r4 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>;

     label2:
        r1 = $r4;

        $r5 = staticinvoke <androidx.compose.ui.node.SemanticsModifierNodeKt: androidx.compose.ui.geometry.Rect touchBoundsInRoot(androidx.compose.ui.node.SemanticsModifierNode)>(r1);

        return $r5;
    }

    public final long getSize-YbymL2g()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $l0 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: long getSize-YbymL2g()>();

        return $l0;
    }

    public final androidx.compose.ui.geometry.Rect getBoundsInRoot()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;
        boolean $z0;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.layout.LayoutCoordinates $r3;
        androidx.compose.ui.geometry.Rect $r4, $r6;
        androidx.compose.ui.geometry.Rect$Companion $r5;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        $r5 = <androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.geometry.Rect$Companion: androidx.compose.ui.geometry.Rect getZero()>();

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $r3 = (androidx.compose.ui.layout.LayoutCoordinates) $r2;

        $r4 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: androidx.compose.ui.geometry.Rect boundsInRoot(androidx.compose.ui.layout.LayoutCoordinates)>($r3);

        return $r4;
    }

    public final long getPositionInRoot-F1C5BW0()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;
        boolean $z0;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.layout.LayoutCoordinates $r3;
        long $l0, $l1;
        androidx.compose.ui.geometry.Offset$Companion $r4;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        $r4 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l1 = virtualinvoke $r4.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        return $l1;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $r3 = (androidx.compose.ui.layout.LayoutCoordinates) $r2;

        $l0 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: long positionInRoot(androidx.compose.ui.layout.LayoutCoordinates)>($r3);

        return $l0;
    }

    public final androidx.compose.ui.geometry.Rect getBoundsInWindow()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;
        boolean $z0;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.layout.LayoutCoordinates $r3;
        androidx.compose.ui.geometry.Rect $r4, $r6;
        androidx.compose.ui.geometry.Rect$Companion $r5;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        $r5 = <androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.geometry.Rect$Companion: androidx.compose.ui.geometry.Rect getZero()>();

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $r3 = (androidx.compose.ui.layout.LayoutCoordinates) $r2;

        $r4 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: androidx.compose.ui.geometry.Rect boundsInWindow(androidx.compose.ui.layout.LayoutCoordinates)>($r3);

        return $r4;
    }

    public final long getPositionInWindow-F1C5BW0()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.node.LayoutNode $r1;
        boolean $z0;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.layout.LayoutCoordinates $r3;
        long $l0, $l1;
        androidx.compose.ui.geometry.Offset$Companion $r4;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        $r4 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l1 = virtualinvoke $r4.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        return $l1;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $r3 = (androidx.compose.ui.layout.LayoutCoordinates) $r2;

        $l0 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: long positionInWindow(androidx.compose.ui.layout.LayoutCoordinates)>($r3);

        return $l0;
    }

    public final int getAlignmentLinePosition(androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.layout.AlignmentLine r1;
        androidx.compose.ui.node.NodeCoordinator $r2;
        int $i0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: androidx.compose.ui.layout.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        $r2 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $i0 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: int get(androidx.compose.ui.layout.AlignmentLine)>(r1);

        return $i0;
    }

    public final androidx.compose.ui.semantics.SemanticsConfiguration getConfig()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.semantics.SemanticsConfiguration r1, $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $z0 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: boolean isMergingSemanticsOfDescendants()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        r1 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsConfiguration: androidx.compose.ui.semantics.SemanticsConfiguration copy()>();

        specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: void mergeConfig(androidx.compose.ui.semantics.SemanticsConfiguration)>(r1);

        return r1;

     label1:
        $r2 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        return $r2;
    }

    private final void mergeConfig(androidx.compose.ui.semantics.SemanticsConfiguration)
    {
        androidx.compose.ui.semantics.SemanticsNode r0, r4;
        androidx.compose.ui.semantics.SemanticsConfiguration r1, $r5, $r6;
        java.util.List $r2;
        int i0, i1;
        java.lang.Object r3;
        boolean $z2, $z3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsConfiguration;

        $r5 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z2 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isClearingSemantics()>();

        if $z2 != 0 goto label3;

        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNode: java.util.List unmergedChildren$ui_release$default(androidx.compose.ui.semantics.SemanticsNode,boolean,boolean,int,java.lang.Object)>(r0, 0, 0, 3, null);

        i1 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label3;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.compose.ui.semantics.SemanticsNode) r3;

        $z3 = specialinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: boolean isMergingSemanticsOfDescendants()>();

        if $z3 != 0 goto label2;

        $r6 = r4.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsConfiguration: void mergeChild$ui_release(androidx.compose.ui.semantics.SemanticsConfiguration)>($r6);

        specialinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: void mergeConfig(androidx.compose.ui.semantics.SemanticsConfiguration)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private final boolean isMergingSemanticsOfDescendants()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.semantics.SemanticsConfiguration $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $z0 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z1 = virtualinvoke $r1.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public final java.util.List unmergedChildren$ui_release(boolean, boolean)
    {
        androidx.compose.ui.semantics.SemanticsNode r0, $r8;
        boolean z0, z1, $z4, $z5;
        java.util.List r1, r2, $r10, $r11;
        int i0, i1;
        java.lang.Object r4;
        androidx.compose.ui.node.SemanticsModifierNode r5;
        java.util.ArrayList $r6;
        androidx.compose.ui.node.LayoutNode $r7, $r9;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z4 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake>;

        if $z4 == 0 goto label1;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r10;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r6;

        if z0 == 0 goto label2;

        $r9 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r11 = staticinvoke <androidx.compose.ui.semantics.SemanticsSortKt: java.util.List findOneLayerOfSemanticsWrappersSortedByBounds$default(androidx.compose.ui.node.LayoutNode,java.util.List,int,java.lang.Object)>($r9, null, 1, null);

        goto label3;

     label2:
        $r7 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r11 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: java.util.List findOneLayerOfSemanticsWrappers$default(androidx.compose.ui.node.LayoutNode,java.util.List,int,java.lang.Object)>($r7, null, 1, null);

     label3:
        r2 = $r11;

        i1 = 0;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label4:
        if i1 >= i0 goto label5;

        r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (androidx.compose.ui.node.SemanticsModifierNode) r4;

        $r8 = new androidx.compose.ui.semantics.SemanticsNode;

        $z5 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>;

        specialinvoke $r8.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r5, $z5, null, 4, null);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label4;

     label5:
        if z1 == 0 goto label6;

        specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: void emitFakeNodes(java.util.List)>(r1);

     label6:
        return r1;
    }

    public static java.util.List unmergedChildren$ui_release$default(androidx.compose.ui.semantics.SemanticsNode, boolean, boolean, int, java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.util.List $r2;
        boolean z0, z1;

        r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z1 = 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List unmergedChildren$ui_release(boolean,boolean)>(z0, z1);

        return $r2;
    }

    public final java.util.List getChildren()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        boolean $z0, $z2;
        java.util.List $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $z0 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>;

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r1 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren(boolean,boolean,boolean)>(0, $z2, 0);

        return $r1;
    }

    public final java.util.List getReplacedChildren$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren(boolean,boolean,boolean)>(0, 0, 1);

        return $r1;
    }

    public final java.util.List getReplacedChildrenSortedByBounds$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren(boolean,boolean,boolean)>(1, 0, 1);

        return $r1;
    }

    private final java.util.List getChildren(boolean, boolean, boolean)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        boolean z0, z1, z2, $z3, $z4;
        java.util.List $r1, $r2, $r4;
        androidx.compose.ui.semantics.SemanticsConfiguration $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z1 != 0 goto label1;

        $r3 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z4 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isClearingSemantics()>();

        if $z4 == 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r4;

     label1:
        $z3 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: boolean isMergingSemanticsOfDescendants()>();

        if $z3 == 0 goto label2;

        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNode: java.util.List findOneLayerOfMergingSemanticsNodes$default(androidx.compose.ui.semantics.SemanticsNode,java.util.List,boolean,int,java.lang.Object)>(r0, null, z0, 1, null);

        return $r2;

     label2:
        $r1 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List unmergedChildren$ui_release(boolean,boolean)>(z0, z2);

        return $r1;
    }

    public final boolean isRoot()
    {
        androidx.compose.ui.semantics.SemanticsNode r0, $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final androidx.compose.ui.semantics.SemanticsNode getParent()
    {
        androidx.compose.ui.semantics.SemanticsNode r0, $r2, $r3, $r11;
        androidx.compose.ui.node.SemanticsModifierNode r1, $r13;
        boolean $z0, $z1;
        androidx.compose.ui.semantics.SemanticsNode$parent$2 $r4;
        kotlin.jvm.functions.Function1 $r5, $r9;
        androidx.compose.ui.node.LayoutNode $r6, $r10, r12;
        androidx.compose.ui.semantics.SemanticsNode$parent$1 $r8;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r2 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode fakeNodeParent>;

        if $r2 == null goto label1;

        $r11 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode fakeNodeParent>;

        return $r11;

     label1:
        r12 = null;

        $z0 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>;

        if $z0 == 0 goto label2;

        $r10 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r8 = <androidx.compose.ui.semantics.SemanticsNode$parent$1: androidx.compose.ui.semantics.SemanticsNode$parent$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        r12 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.LayoutNode access$findClosestParentNode(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>($r10, $r9);

     label2:
        if r12 != null goto label3;

        $r6 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r4 = <androidx.compose.ui.semantics.SemanticsNode$parent$2: androidx.compose.ui.semantics.SemanticsNode$parent$2 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r12 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.LayoutNode access$findClosestParentNode(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>($r6, $r5);

     label3:
        if r12 == null goto label4;

        $r13 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r12);

        goto label5;

     label4:
        $r13 = null;

     label5:
        r1 = $r13;

        if r1 != null goto label6;

        return null;

     label6:
        $r3 = new androidx.compose.ui.semantics.SemanticsNode;

        $z1 = r0.<androidx.compose.ui.semantics.SemanticsNode: boolean mergingEnabled>;

        specialinvoke $r3.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, $z1, null, 4, null);

        return $r3;
    }

    private final java.util.List findOneLayerOfMergingSemanticsNodes(java.util.List, boolean)
    {
        androidx.compose.ui.semantics.SemanticsNode r0, r4;
        java.util.List r1, $r2;
        boolean z0, $z3, $z4;
        int i0, i1;
        java.lang.Object r3;
        androidx.compose.ui.semantics.SemanticsConfiguration $r5;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNode: java.util.List unmergedChildren$ui_release$default(androidx.compose.ui.semantics.SemanticsNode,boolean,boolean,int,java.lang.Object)>(r0, z0, 0, 2, null);

        i1 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label4;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.compose.ui.semantics.SemanticsNode) r3;

        $z3 = specialinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: boolean isMergingSemanticsOfDescendants()>();

        if $z3 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label3;

     label2:
        $r5 = r4.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z4 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isClearingSemantics()>();

        if $z4 != 0 goto label3;

        staticinvoke <androidx.compose.ui.semantics.SemanticsNode: java.util.List findOneLayerOfMergingSemanticsNodes$default(androidx.compose.ui.semantics.SemanticsNode,java.util.List,boolean,int,java.lang.Object)>(r4, r1, 0, 2, null);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r1;
    }

    static java.util.List findOneLayerOfMergingSemanticsNodes$default(androidx.compose.ui.semantics.SemanticsNode, java.util.List, boolean, int, java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.util.List $r2, r4;
        java.util.ArrayList $r3;
        boolean z0;

        r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r4 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r3;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        $r2 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List findOneLayerOfMergingSemanticsNodes(java.util.List,boolean)>(r4, z0);

        return $r2;
    }

    public final androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        androidx.compose.ui.semantics.SemanticsConfiguration $r1;
        boolean $z0;
        androidx.compose.ui.node.SemanticsModifierNode $r2, $r8;
        androidx.compose.ui.node.Nodes $r3, $r6;
        androidx.compose.ui.node.DelegatableNode $r4, $r7;
        int $i0, $i1;
        androidx.compose.ui.node.LayoutNode $r5;
        androidx.compose.ui.node.NodeCoordinator $r9;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode layoutNode>;

        $r8 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterMergingSemantics(androidx.compose.ui.node.LayoutNode)>($r5);

        if $r8 != null goto label1;

        $r8 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>;

     label1:
        $r7 = (androidx.compose.ui.node.DelegatableNode) $r8;

        $r6 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        $i1 = virtualinvoke $r6.<androidx.compose.ui.node.Nodes: int getSemantics-OLwlOKw()>();

        $r9 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.NodeCoordinator requireCoordinator-64DMado(androidx.compose.ui.node.DelegatableNode,int)>($r7, $i1);

        goto label3;

     label2:
        $r2 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode outerSemanticsNode>;

        $r4 = (androidx.compose.ui.node.DelegatableNode) $r2;

        $r3 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        $i0 = virtualinvoke $r3.<androidx.compose.ui.node.Nodes: int getSemantics-OLwlOKw()>();

        $r9 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.NodeCoordinator requireCoordinator-64DMado(androidx.compose.ui.node.DelegatableNode,int)>($r4, $i0);

     label3:
        return $r9;
    }

    private final void emitFakeNodes(java.util.List)
    {
        androidx.compose.ui.semantics.SemanticsNode r0, r3, r18;
        java.util.List r1, $r10;
        androidx.compose.ui.semantics.Role r2;
        java.util.Collection $r4, $r15;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7;
        androidx.compose.ui.semantics.SemanticsConfiguration $r5, $r7, $r14, $r19;
        androidx.compose.ui.semantics.SemanticsProperties $r6, $r20;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r8, $r21;
        java.lang.Object $r9, $r13;
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2 $r11;
        kotlin.jvm.functions.Function1 $r12, $r17;
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1 $r16;
        java.lang.String $r22, r23;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: java.util.List;

        r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.semantics.Role access$getRole(androidx.compose.ui.semantics.SemanticsNode)>(r0);

        if r2 == null goto label3;

        $r14 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z2 = virtualinvoke $r14.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z2 == 0 goto label3;

        $r15 = (java.util.Collection) r1;

        $z3 = interfaceinvoke $r15.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        if $z5 == 0 goto label3;

        $r16 = new androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1;

        specialinvoke $r16.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1: void <init>(androidx.compose.ui.semantics.Role)>(r2);

        $r17 = (kotlin.jvm.functions.Function1) $r16;

        r18 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode fakeSemanticsNode-ypyhhiA(androidx.compose.ui.semantics.Role,kotlin.jvm.functions.Function1)>(r2, $r17);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r18);

     label3:
        $r19 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $r20 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r21 = virtualinvoke $r20.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $z6 = virtualinvoke $r19.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r21);

        if $z6 == 0 goto label8;

        $r4 = (java.util.Collection) r1;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $z7 = 1;

        goto label5;

     label4:
        $z7 = 0;

     label5:
        if $z7 == 0 goto label8;

        $r5 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $z1 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z1 == 0 goto label8;

        $r7 = r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration unmergedConfig>;

        $r6 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r8 = virtualinvoke $r6.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $r9 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r7, $r8);

        $r10 = (java.util.List) $r9;

        if $r10 == null goto label6;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r10);

        $r22 = (java.lang.String) $r13;

        goto label7;

     label6:
        $r22 = null;

     label7:
        r23 = $r22;

        if r23 == null goto label8;

        $r11 = new androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2;

        specialinvoke $r11.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2: void <init>(java.lang.String)>(r23);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        r3 = specialinvoke r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode fakeSemanticsNode-ypyhhiA(androidx.compose.ui.semantics.Role,kotlin.jvm.functions.Function1)>(null, $r12);

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(0, r3);

     label8:
        return;
    }

    private final androidx.compose.ui.semantics.SemanticsNode fakeSemanticsNode-ypyhhiA(androidx.compose.ui.semantics.Role, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.semantics.SemanticsNode r0, r3, $r4;
        androidx.compose.ui.semantics.Role r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1 $r5;
        androidx.compose.ui.node.LayoutNode $r6;
        androidx.compose.ui.node.SemanticsModifierNode $r7;
        int $i0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter0: androidx.compose.ui.semantics.Role;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        $r4 = new androidx.compose.ui.semantics.SemanticsNode;

        $r5 = new androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1;

        specialinvoke $r5.<androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1: void <init>(kotlin.jvm.functions.Function1)>(r2);

        $r7 = (androidx.compose.ui.node.SemanticsModifierNode) $r5;

        $r6 = new androidx.compose.ui.node.LayoutNode;

        if r1 == null goto label1;

        $i0 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: int access$roleFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)>(r0);

        goto label2;

     label1:
        $i0 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: int access$contentDescriptionFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)>(r0);

     label2:
        specialinvoke $r6.<androidx.compose.ui.node.LayoutNode: void <init>(boolean,int)>(1, $i0);

        specialinvoke $r4.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode)>($r7, 0, $r6);

        r3 = $r4;

        r3.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake> = 1;

        r3.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode fakeNodeParent> = r0;

        return r3;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.semantics.SemanticsNode: int $stable> = 8;

        return;
    }

androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1
<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1: androidx.compose.ui.semantics.Role $nodeRole>
    void <init>(androidx.compose.ui.semantics.Role)
    {
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1 r0;
        androidx.compose.ui.semantics.Role $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1;

        $r1 := @parameter0: androidx.compose.ui.semantics.Role;

        r0.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1: androidx.compose.ui.semantics.Role $nodeRole> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.semantics.SemanticsPropertyReceiver)
    {
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1 r0;
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r1;
        androidx.compose.ui.semantics.Role $r2;
        int $i0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1;

        $r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$fakeSemanticsNode");

        $r2 = r0.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1: androidx.compose.ui.semantics.Role $nodeRole>;

        $i0 = virtualinvoke $r2.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        staticinvoke <androidx.compose.ui.semantics.SemanticsPropertiesKt: void setRole-kuIjeqM(androidx.compose.ui.semantics.SemanticsPropertyReceiver,int)>($r1, $i0);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsPropertyReceiver) r1;

        virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$1: void invoke(androidx.compose.ui.semantics.SemanticsPropertyReceiver)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2
<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2: java.lang.String $contentDescription>
    void <init>(java.lang.String)
    {
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2 r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2;

        $r1 := @parameter0: java.lang.String;

        r0.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2: java.lang.String $contentDescription> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.semantics.SemanticsPropertyReceiver)
    {
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2 r0;
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2;

        $r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$fakeSemanticsNode");

        $r2 = r0.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2: java.lang.String $contentDescription>;

        staticinvoke <androidx.compose.ui.semantics.SemanticsPropertiesKt: void setContentDescription(androidx.compose.ui.semantics.SemanticsPropertyReceiver,java.lang.String)>($r1, $r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsPropertyReceiver) r1;

        virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode$emitFakeNodes$fakeNode$2: void invoke(androidx.compose.ui.semantics.SemanticsPropertyReceiver)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1
<androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1: androidx.compose.ui.semantics.SemanticsConfiguration semanticsConfiguration>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1 r0, r4;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.ui.semantics.SemanticsConfiguration r2, r3, $r5;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        specialinvoke r0.<androidx.compose.ui.Modifier$Node: void <init>()>();

        $r5 = new androidx.compose.ui.semantics.SemanticsConfiguration;

        specialinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: void <init>()>();

        r2 = $r5;

        r3 = r2;

        r4 = r0;

        virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsConfiguration: void setMergingSemanticsOfDescendants(boolean)>(0);

        virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsConfiguration: void setClearingSemantics(boolean)>(0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        r4.<androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1: androidx.compose.ui.semantics.SemanticsConfiguration semanticsConfiguration> = r2;

        return;
    }

    public androidx.compose.ui.semantics.SemanticsConfiguration getSemanticsConfiguration()
    {
        androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1 r0;
        androidx.compose.ui.semantics.SemanticsConfiguration $r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1;

        $r1 = r0.<androidx.compose.ui.semantics.SemanticsNode$fakeSemanticsNode$fakeNode$1: androidx.compose.ui.semantics.SemanticsConfiguration semanticsConfiguration>;

        return $r1;
    }

androidx.compose.ui.semantics.SemanticsNode$parent$1
<androidx.compose.ui.semantics.SemanticsNode$parent$1: androidx.compose.ui.semantics.SemanticsNode$parent$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$1 r0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$parent$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        androidx.compose.ui.node.SemanticsModifierNode r2;
        androidx.compose.ui.semantics.SemanticsConfiguration r3;
        boolean $z0, $z1;
        java.lang.Boolean $r4;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$parent$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r1);

        if r2 == null goto label2;

        r3 = staticinvoke <androidx.compose.ui.node.SemanticsModifierNodeKt: androidx.compose.ui.semantics.SemanticsConfiguration collapsedSemanticsConfiguration(androidx.compose.ui.node.SemanticsModifierNode)>(r2);

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$parent$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode$parent$1: java.lang.Boolean invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$1 $r0;

        $r0 = new androidx.compose.ui.semantics.SemanticsNode$parent$1;

        specialinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode$parent$1: void <init>()>();

        <androidx.compose.ui.semantics.SemanticsNode$parent$1: androidx.compose.ui.semantics.SemanticsNode$parent$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.semantics.SemanticsNode$parent$2
<androidx.compose.ui.semantics.SemanticsNode$parent$2: androidx.compose.ui.semantics.SemanticsNode$parent$2 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$2 r0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$parent$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$2 r0;
        androidx.compose.ui.node.LayoutNode r1;
        androidx.compose.ui.node.SemanticsModifierNode $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$parent$2;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$2 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsNode$parent$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.semantics.SemanticsNode$parent$2: java.lang.Boolean invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.semantics.SemanticsNode$parent$2 $r0;

        $r0 = new androidx.compose.ui.semantics.SemanticsNode$parent$2;

        specialinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode$parent$2: void <init>()>();

        <androidx.compose.ui.semantics.SemanticsNode$parent$2: androidx.compose.ui.semantics.SemanticsNode$parent$2 INSTANCE> = $r0;

        return;
    }

