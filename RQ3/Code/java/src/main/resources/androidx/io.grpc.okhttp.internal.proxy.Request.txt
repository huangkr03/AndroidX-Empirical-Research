io.grpc.okhttp.internal.proxy.Request
<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.Headers headers>
<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.proxy.HttpUrl url>
    private void <init>(io.grpc.okhttp.internal.proxy.Request$Builder)
    {
        io.grpc.okhttp.internal.proxy.Request $r0;
        io.grpc.okhttp.internal.proxy.Request$Builder $r1;
        io.grpc.okhttp.internal.proxy.HttpUrl $r2;
        io.grpc.okhttp.internal.Headers$Builder $r3;
        io.grpc.okhttp.internal.Headers $r4;

        $r0 := @this: io.grpc.okhttp.internal.proxy.Request;

        $r1 := @parameter0: io.grpc.okhttp.internal.proxy.Request$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <io.grpc.okhttp.internal.proxy.Request$Builder: io.grpc.okhttp.internal.proxy.HttpUrl '-$$Nest$fgeturl'(io.grpc.okhttp.internal.proxy.Request$Builder)>($r1);

        $r0.<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.proxy.HttpUrl url> = $r2;

        $r3 = staticinvoke <io.grpc.okhttp.internal.proxy.Request$Builder: io.grpc.okhttp.internal.Headers$Builder '-$$Nest$fgetheaders'(io.grpc.okhttp.internal.proxy.Request$Builder)>($r1);

        $r4 = virtualinvoke $r3.<io.grpc.okhttp.internal.Headers$Builder: io.grpc.okhttp.internal.Headers build()>();

        $r0.<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.Headers headers> = $r4;

        return;
    }

    void <init>(io.grpc.okhttp.internal.proxy.Request$Builder, io.grpc.okhttp.internal.proxy.Request-IA)
    {
        io.grpc.okhttp.internal.proxy.Request $r0;
        io.grpc.okhttp.internal.proxy.Request$Builder $r1;
        io.grpc.okhttp.internal.proxy.Request-IA $r2;

        $r0 := @this: io.grpc.okhttp.internal.proxy.Request;

        $r1 := @parameter0: io.grpc.okhttp.internal.proxy.Request$Builder;

        $r2 := @parameter1: io.grpc.okhttp.internal.proxy.Request-IA;

        specialinvoke $r0.<io.grpc.okhttp.internal.proxy.Request: void <init>(io.grpc.okhttp.internal.proxy.Request$Builder)>($r1);

        return;
    }

    public io.grpc.okhttp.internal.Headers headers()
    {
        io.grpc.okhttp.internal.proxy.Request $r0;
        io.grpc.okhttp.internal.Headers r1;

        $r0 := @this: io.grpc.okhttp.internal.proxy.Request;

        r1 = $r0.<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.Headers headers>;

        return r1;
    }

    public io.grpc.okhttp.internal.proxy.HttpUrl httpUrl()
    {
        io.grpc.okhttp.internal.proxy.Request $r0;
        io.grpc.okhttp.internal.proxy.HttpUrl r1;

        $r0 := @this: io.grpc.okhttp.internal.proxy.Request;

        r1 = $r0.<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.proxy.HttpUrl url>;

        return r1;
    }

    public java.lang.String toString()
    {
        io.grpc.okhttp.internal.proxy.Request $r0;
        io.grpc.okhttp.internal.proxy.HttpUrl $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: io.grpc.okhttp.internal.proxy.Request;

        $r1 = $r0.<io.grpc.okhttp.internal.proxy.Request: io.grpc.okhttp.internal.proxy.HttpUrl url>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request{url=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

