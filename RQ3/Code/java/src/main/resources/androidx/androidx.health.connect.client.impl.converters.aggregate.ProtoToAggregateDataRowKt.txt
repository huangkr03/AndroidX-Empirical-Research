androidx.health.connect.client.impl.converters.aggregate.ProtoToAggregateDataRowKt
    public static final androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration toAggregateDataRowGroupByDuration(androidx.health.platform.client.proto.DataProto$AggregateDataRow)
    {
        androidx.health.platform.client.proto.DataProto$AggregateDataRow $r0;
        boolean $z0, $z1;
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration $r1;
        androidx.health.connect.client.aggregate.AggregationResult $r2;
        long $l0, $l1;
        java.time.Instant $r3, $r4;
        int $i2;
        java.time.ZoneOffset $r5;
        java.lang.IllegalArgumentException $r6, $r8;
        java.lang.String $r7, $r9, $r10, $r11;

        $r0 := @parameter0: androidx.health.platform.client.proto.DataProto$AggregateDataRow;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: boolean hasStartTimeEpochMs()>();

        if $z0 != 0 goto label1;

        $r10 = "start time must be set";

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        $z1 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: boolean hasEndTimeEpochMs()>();

        if $z1 != 0 goto label2;

        $r11 = "end time must be set";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        $r1 = new androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration;

        $r2 = staticinvoke <androidx.health.connect.client.impl.converters.aggregate.ProtoToAggregateDataRowKt: androidx.health.connect.client.aggregate.AggregationResult retrieveAggregateDataRow(androidx.health.platform.client.proto.DataProto$AggregateDataRow)>($r0);

        $l0 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: long getStartTimeEpochMs()>();

        $r3 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "ofEpochMilli(startTimeEpochMs)");

        $l1 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: long getEndTimeEpochMs()>();

        $r4 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "ofEpochMilli(endTimeEpochMs)");

        $i2 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: int getZoneOffsetSeconds()>();

        $r5 = staticinvoke <java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>($i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "ofTotalSeconds(zoneOffsetSeconds)");

        specialinvoke $r1.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: void <init>(androidx.health.connect.client.aggregate.AggregationResult,java.time.Instant,java.time.Instant,java.time.ZoneOffset)>($r2, $r3, $r4, $r5);

        return $r1;
    }

    public static final androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod toAggregateDataRowGroupByPeriod(androidx.health.platform.client.proto.DataProto$AggregateDataRow)
    {
        androidx.health.platform.client.proto.DataProto$AggregateDataRow $r0;
        boolean $z0, $z1;
        androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod $r1;
        androidx.health.connect.client.aggregate.AggregationResult $r2;
        java.lang.String $r3, $r6, $r10, $r12, $r13, $r14;
        java.lang.CharSequence $r4, $r7;
        java.time.LocalDateTime $r5, $r8;
        java.lang.IllegalArgumentException $r9, $r11;

        $r0 := @parameter0: androidx.health.platform.client.proto.DataProto$AggregateDataRow;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: boolean hasStartLocalDateTime()>();

        if $z0 != 0 goto label1;

        $r13 = "start time must be set";

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label1:
        $z1 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: boolean hasEndLocalDateTime()>();

        if $z1 != 0 goto label2;

        $r14 = "end time must be set";

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        $r1 = new androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod;

        $r2 = staticinvoke <androidx.health.connect.client.impl.converters.aggregate.ProtoToAggregateDataRowKt: androidx.health.connect.client.aggregate.AggregationResult retrieveAggregateDataRow(androidx.health.platform.client.proto.DataProto$AggregateDataRow)>($r0);

        $r3 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.lang.String getStartLocalDateTime()>();

        $r4 = (java.lang.CharSequence) $r3;

        $r5 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "parse(startLocalDateTime)");

        $r6 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.lang.String getEndLocalDateTime()>();

        $r7 = (java.lang.CharSequence) $r6;

        $r8 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "parse(endLocalDateTime)");

        specialinvoke $r1.<androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod: void <init>(androidx.health.connect.client.aggregate.AggregationResult,java.time.LocalDateTime,java.time.LocalDateTime)>($r2, $r5, $r8);

        return $r1;
    }

    public static final androidx.health.connect.client.aggregate.AggregationResult retrieveAggregateDataRow(androidx.health.platform.client.proto.DataProto$AggregateDataRow)
    {
        androidx.health.platform.client.proto.DataProto$AggregateDataRow $r0;
        java.lang.Iterable $r1;
        java.util.Collection r2, r18, r19;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.health.platform.client.proto.DataProto$DataOrigin r5;
        java.util.Map r6, r7, r9, r10, $r11, $r12;
        java.util.Set r8;
        java.util.List $r13;
        java.util.HashSet $r14;
        boolean $z2;
        androidx.health.connect.client.aggregate.AggregationResult $r15;
        androidx.health.connect.client.records.metadata.DataOrigin $r16;
        java.lang.String $r17;

        $r0 := @parameter0: androidx.health.platform.client.proto.DataProto$AggregateDataRow;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r11 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.util.Map getLongValuesMap()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "longValuesMap");

        $r12 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.util.Map getDoubleValuesMap()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "doubleValuesMap");

        $r13 = virtualinvoke $r0.<androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.util.List getDataOriginsList()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "dataOriginsList");

        $r1 = (java.lang.Iterable) $r13;

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        r2 = (java.util.Collection) $r14;

        r7 = $r12;

        r6 = $r11;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.health.platform.client.proto.DataProto$DataOrigin) r4;

        r18 = r2;

        $r16 = new androidx.health.connect.client.records.metadata.DataOrigin;

        $r17 = virtualinvoke r5.<androidx.health.platform.client.proto.DataProto$DataOrigin: java.lang.String getApplicationId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "it.applicationId");

        specialinvoke $r16.<androidx.health.connect.client.records.metadata.DataOrigin: void <init>(java.lang.String)>($r17);

        interfaceinvoke r18.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label1;

     label2:
        r19 = r2;

        r8 = (java.util.Set) r19;

        r9 = r7;

        r10 = r6;

        $r15 = new androidx.health.connect.client.aggregate.AggregationResult;

        specialinvoke $r15.<androidx.health.connect.client.aggregate.AggregationResult: void <init>(java.util.Map,java.util.Map,java.util.Set)>(r10, r9, r8);

        return $r15;
    }

