androidx.constraintlayout.core.motion.utils.SplineSet
<androidx.constraintlayout.core.motion.utils.SplineSet: java.lang.String TAG>
<androidx.constraintlayout.core.motion.utils.SplineSet: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>
<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>
<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>
<androidx.constraintlayout.core.motion.utils.SplineSet: int count>
<androidx.constraintlayout.core.motion.utils.SplineSet: java.lang.String mType>
    public void <init>()
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        int[] $r1;
        float[] $r2;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[10];

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints> = $r1;

        $r2 = newarray (float)[10];

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues> = $r2;

        return;
    }

    public void setProperty(androidx.constraintlayout.core.motion.utils.TypedValues, float)
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        androidx.constraintlayout.core.motion.utils.TypedValues r1;
        float f0, $f1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        r1 := @parameter0: androidx.constraintlayout.core.motion.utils.TypedValues;

        f0 := @parameter1: float;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: java.lang.String mType>;

        $i0 = staticinvoke <androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType: int getId(java.lang.String)>($r2);

        $f1 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float get(float)>(f0);

        interfaceinvoke r1.<androidx.constraintlayout.core.motion.utils.TypedValues: boolean setValue(int,float)>($i0, $f1);

        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        java.text.DecimalFormat r1, $r2;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r11, $r12;
        int[] $r6;
        float[] $r9;
        float $f0;
        double $d0;
        java.lang.String $r10, r13;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        r13 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: java.lang.String mType>;

        $r2 = new java.text.DecimalFormat;

        specialinvoke $r2.<java.text.DecimalFormat: void <init>(java.lang.String)>("##.##");

        r1 = $r2;

        i2 = 0;

     label1:
        $i0 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        if i2 >= $i0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i1 = $r6[i2];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>;

        $f0 = $r9[i2];

        $d0 = (double) $f0;

        $r10 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        return r13;
    }

    public void setType(java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        java.lang.String r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: java.lang.String mType> = r1;

        return;
    }

    public float get(float)
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        float f0, $f1;
        double $d0, $d1;
        androidx.constraintlayout.core.motion.utils.CurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        $d0 = (double) f0;

        $d1 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.CurveFit: double getPos(double,int)>($d0, 0);

        $f1 = (float) $d1;

        return $f1;
    }

    public float getSlope(float)
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        float f0, $f1;
        double $d0, $d1;
        androidx.constraintlayout.core.motion.utils.CurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        $d0 = (double) f0;

        $d1 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.CurveFit: double getSlope(double,int)>($d0, 0);

        $f1 = (float) $d1;

        return $f1;
    }

    public androidx.constraintlayout.core.motion.utils.CurveFit getCurveFit()
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        androidx.constraintlayout.core.motion.utils.CurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        return $r1;
    }

    public void setPoint(int, float)
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0;
        int[] $r1, $r2, $r4, $r5, $r6;
        float[] $r3, $r7, $r8, $r9;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i3 = lengthof $r1;

        $i1 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        $i2 = $i1 + 1;

        if $i3 >= $i2 goto label1;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i8 = lengthof $r4;

        $i9 = $i8 * 2;

        $r6 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r5, $i9);

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints> = $r6;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>;

        $i10 = lengthof $r7;

        $i11 = $i10 * 2;

        $r9 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r8, $i11);

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues> = $r9;

     label1:
        $r2 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i4 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        $r2[$i4] = i0;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>;

        $i5 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        $r3[$i5] = f0;

        $i6 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        $i7 = $i6 + 1;

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count> = $i7;

        return;
    }

    public void setup(int)
    {
        androidx.constraintlayout.core.motion.utils.SplineSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        double[][] r1;
        float[] $r2, $r6;
        int[] $r3, $r5, $r8, $r9, $r10, $r11;
        androidx.constraintlayout.core.motion.utils.CurveFit $r4;
        double $d0, $d1, $d2;
        float $f0;
        double[] $r7, r12;

        r0 := @this: androidx.constraintlayout.core.motion.utils.SplineSet;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        if $i1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>;

        $i2 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        $i3 = $i2 - 1;

        staticinvoke <androidx.constraintlayout.core.motion.utils.SplineSet$Sort: void doubleQuickSort(int[],float[],int,int)>($r3, $r2, 0, $i3);

        i13 = 1;

        i14 = 1;

     label2:
        $i4 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        if i14 >= $i4 goto label4;

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i10 = i14 - 1;

        $i12 = $r10[$i10];

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i11 = $r11[i14];

        if $i12 == $i11 goto label3;

        i13 = i13 + 1;

     label3:
        i14 = i14 + 1;

        goto label2;

     label4:
        r12 = newarray (double)[i13];

        r1 = newmultiarray (double)[i13][1];

        i15 = 0;

        i16 = 0;

     label5:
        $i5 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int count>;

        if i16 >= $i5 goto label8;

        if i16 <= 0 goto label6;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i9 = $r8[i16];

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i7 = i16 - 1;

        $i8 = $r9[$i7];

        if $i9 != $i8 goto label6;

        goto label7;

     label6:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: int[] mTimePoints>;

        $i6 = $r5[i16];

        $d0 = (double) $i6;

        $d1 = $d0 * 0.01;

        r12[i15] = $d1;

        $r7 = r1[i15];

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.SplineSet: float[] mValues>;

        $f0 = $r6[i16];

        $d2 = (double) $f0;

        $r7[0] = $d2;

        i15 = i15 + 1;

     label7:
        i16 = i16 + 1;

        goto label5;

     label8:
        $r4 = staticinvoke <androidx.constraintlayout.core.motion.utils.CurveFit: androidx.constraintlayout.core.motion.utils.CurveFit get(int,double[],double[][])>(i0, r12, r1);

        r0.<androidx.constraintlayout.core.motion.utils.SplineSet: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit> = $r4;

        return;
    }

    public static androidx.constraintlayout.core.motion.utils.SplineSet makeCustomSpline(java.lang.String, androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray)
    {
        java.lang.String r0;
        androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray r1;
        androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray;

        $r2 = new androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet;

        specialinvoke $r2.<androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet: void <init>(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray)>(r0, r1);

        return $r2;
    }

    public static androidx.constraintlayout.core.motion.utils.SplineSet makeCustomSplineSet(java.lang.String, androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar)
    {
        java.lang.String r0;
        androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar r1;
        androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar;

        $r2 = new androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline;

        specialinvoke $r2.<androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline: void <init>(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar)>(r0, r1);

        return $r2;
    }

    public static androidx.constraintlayout.core.motion.utils.SplineSet makeSpline(java.lang.String, long)
    {
        java.lang.String r0;
        long l0;
        androidx.constraintlayout.core.motion.utils.SplineSet$CoreSpline $r1;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = new androidx.constraintlayout.core.motion.utils.SplineSet$CoreSpline;

        specialinvoke $r1.<androidx.constraintlayout.core.motion.utils.SplineSet$CoreSpline: void <init>(java.lang.String,long)>(r0, l0);

        return $r1;
    }

