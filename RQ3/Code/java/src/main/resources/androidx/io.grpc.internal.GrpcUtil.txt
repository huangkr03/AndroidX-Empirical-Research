io.grpc.internal.GrpcUtil
<io.grpc.internal.GrpcUtil: com.google.common.base.Splitter ACCEPT_ENCODING_SPLITTER>
<io.grpc.internal.GrpcUtil: io.grpc.CallOptions$Key CALL_OPTIONS_RPC_OWNED_BY_BALANCER>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_ACCEPT_ENCODING_KEY>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_ENCODING_KEY>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_LENGTH_KEY>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_TYPE_KEY>
<io.grpc.internal.GrpcUtil: long DEFAULT_KEEPALIVE_TIMEOUT_NANOS>
<io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector DEFAULT_PROXY_DETECTOR>
<io.grpc.internal.GrpcUtil: long DEFAULT_SERVER_KEEPALIVE_TIMEOUT_NANOS>
<io.grpc.internal.GrpcUtil: long DEFAULT_SERVER_KEEPALIVE_TIME_NANOS>
<io.grpc.internal.GrpcUtil: java.util.Set INAPPROPRIATE_CONTROL_PLANE_STATUS>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key MESSAGE_ACCEPT_ENCODING_KEY>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key MESSAGE_ENCODING_KEY>
<io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector NOOP_PROXY_DETECTOR>
<io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer NOOP_TRACER>
<io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource SHARED_CHANNEL_EXECUTOR>
<io.grpc.internal.GrpcUtil: com.google.common.base.Supplier STOPWATCH_SUPPLIER>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key TE_HEADER>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key TIMEOUT_KEY>
<io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource TIMER_SERVICE>
<io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key USER_AGENT_KEY>
<io.grpc.internal.GrpcUtil: java.nio.charset.Charset US_ASCII>
<io.grpc.internal.GrpcUtil: java.util.logging.Logger log>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        io.grpc.Status$Code $r3, $r5;
        io.grpc.Status$Code[] $r4;
        java.util.EnumSet $r6;
        java.util.Set $r7;
        java.nio.charset.Charset $r8;
        io.grpc.Metadata$Key $r9;
        io.grpc.Metadata$AsciiMarshaller $r10;
        com.google.common.base.Splitter $r11;
        java.util.concurrent.TimeUnit $r12;
        long $l0;
        io.grpc.CallOptions$Key $r13;
        io.grpc.internal.GrpcUtil$TimeoutMarshaller r14;
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller r15;
        io.grpc.internal.ProxyDetectorImpl r16;
        io.grpc.internal.GrpcUtil$1 r17;
        io.grpc.internal.GrpcUtil$2 r18;
        io.grpc.internal.GrpcUtil$3 r19;
        io.grpc.internal.GrpcUtil$4 r20;
        io.grpc.internal.GrpcUtil$5 r21;

        $r0 = class "Lio/grpc/internal/GrpcUtil;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.internal.GrpcUtil: java.util.logging.Logger log> = $r2;

        $r3 = <io.grpc.Status$Code: io.grpc.Status$Code OK>;

        $r4 = newarray (io.grpc.Status$Code)[7];

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code INVALID_ARGUMENT>;

        $r4[0] = $r5;

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code NOT_FOUND>;

        $r4[1] = $r5;

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code ALREADY_EXISTS>;

        $r4[2] = $r5;

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code FAILED_PRECONDITION>;

        $r4[3] = $r5;

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code ABORTED>;

        $r4[4] = $r5;

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code OUT_OF_RANGE>;

        $r4[5] = $r5;

        $r5 = <io.grpc.Status$Code: io.grpc.Status$Code DATA_LOSS>;

        $r4[6] = $r5;

        $r6 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r3, $r4);

        $r7 = (java.util.Set) $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r7);

        <io.grpc.internal.GrpcUtil: java.util.Set INAPPROPRIATE_CONTROL_PLANE_STATUS> = $r7;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <io.grpc.internal.GrpcUtil: java.nio.charset.Charset US_ASCII> = $r8;

        r14 = new io.grpc.internal.GrpcUtil$TimeoutMarshaller;

        specialinvoke r14.<io.grpc.internal.GrpcUtil$TimeoutMarshaller: void <init>()>();

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("grpc-timeout", r14);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key TIMEOUT_KEY> = $r9;

        $r10 = <io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER>;

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("grpc-encoding", $r10);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key MESSAGE_ENCODING_KEY> = $r9;

        r15 = new io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        specialinvoke r15.<io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: void <init>(io.grpc.internal.GrpcUtil$1)>(null);

        $r9 = staticinvoke <io.grpc.InternalMetadata: io.grpc.Metadata$Key keyOf(java.lang.String,io.grpc.InternalMetadata$TrustedAsciiMarshaller)>("grpc-accept-encoding", r15);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key MESSAGE_ACCEPT_ENCODING_KEY> = $r9;

        $r10 = <io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER>;

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("content-encoding", $r10);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_ENCODING_KEY> = $r9;

        r15 = new io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        specialinvoke r15.<io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: void <init>(io.grpc.internal.GrpcUtil$1)>(null);

        $r9 = staticinvoke <io.grpc.InternalMetadata: io.grpc.Metadata$Key keyOf(java.lang.String,io.grpc.InternalMetadata$TrustedAsciiMarshaller)>("accept-encoding", r15);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_ACCEPT_ENCODING_KEY> = $r9;

        $r10 = <io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER>;

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("content-length", $r10);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_LENGTH_KEY> = $r9;

        $r10 = <io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER>;

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("content-type", $r10);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_TYPE_KEY> = $r9;

        $r10 = <io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER>;

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("te", $r10);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key TE_HEADER> = $r9;

        $r10 = <io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER>;

        $r9 = staticinvoke <io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)>("user-agent", $r10);

        <io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key USER_AGENT_KEY> = $r9;

        $r11 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(44);

        $r11 = virtualinvoke $r11.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>();

        <io.grpc.internal.GrpcUtil: com.google.common.base.Splitter ACCEPT_ENCODING_SPLITTER> = $r11;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l0 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toNanos(long)>(20L);

        <io.grpc.internal.GrpcUtil: long DEFAULT_KEEPALIVE_TIMEOUT_NANOS> = $l0;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l0 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toNanos(long)>(2L);

        <io.grpc.internal.GrpcUtil: long DEFAULT_SERVER_KEEPALIVE_TIME_NANOS> = $l0;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l0 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toNanos(long)>(20L);

        <io.grpc.internal.GrpcUtil: long DEFAULT_SERVER_KEEPALIVE_TIMEOUT_NANOS> = $l0;

        r16 = new io.grpc.internal.ProxyDetectorImpl;

        specialinvoke r16.<io.grpc.internal.ProxyDetectorImpl: void <init>()>();

        <io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector DEFAULT_PROXY_DETECTOR> = r16;

        r17 = new io.grpc.internal.GrpcUtil$1;

        specialinvoke r17.<io.grpc.internal.GrpcUtil$1: void <init>()>();

        <io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector NOOP_PROXY_DETECTOR> = r17;

        $r13 = staticinvoke <io.grpc.CallOptions$Key: io.grpc.CallOptions$Key create(java.lang.String)>("io.grpc.internal.CALL_OPTIONS_RPC_OWNED_BY_BALANCER");

        <io.grpc.internal.GrpcUtil: io.grpc.CallOptions$Key CALL_OPTIONS_RPC_OWNED_BY_BALANCER> = $r13;

        r18 = new io.grpc.internal.GrpcUtil$2;

        specialinvoke r18.<io.grpc.internal.GrpcUtil$2: void <init>()>();

        <io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer NOOP_TRACER> = r18;

        r19 = new io.grpc.internal.GrpcUtil$3;

        specialinvoke r19.<io.grpc.internal.GrpcUtil$3: void <init>()>();

        <io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource SHARED_CHANNEL_EXECUTOR> = r19;

        r20 = new io.grpc.internal.GrpcUtil$4;

        specialinvoke r20.<io.grpc.internal.GrpcUtil$4: void <init>()>();

        <io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource TIMER_SERVICE> = r20;

        r21 = new io.grpc.internal.GrpcUtil$5;

        specialinvoke r21.<io.grpc.internal.GrpcUtil$5: void <init>()>();

        <io.grpc.internal.GrpcUtil: com.google.common.base.Supplier STOPWATCH_SUPPLIER> = r21;

        return;
    }

    private void <init>()
    {
        io.grpc.internal.GrpcUtil $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static io.grpc.ClientStreamTracer access$200()
    {
        io.grpc.ClientStreamTracer r0;

        r0 = <io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer NOOP_TRACER>;

        return r0;
    }

    public static java.net.URI authorityToUri(java.lang.String)
    {
        java.lang.String $r0;
        java.net.URI $r1;
        java.lang.Throwable $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "authority");

        $r1 = new java.net.URI;

     label1:
        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r0, null, null, null);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid authority: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r2);

        throw $r3;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static java.lang.String checkAuthority(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.net.URI $r1;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <io.grpc.internal.GrpcUtil: java.net.URI authorityToUri(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String getHost()>();

        $z0 = 1;

        if $r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z1, "No host in authority \'%s\'", $r0);

        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String getUserInfo()>();

        if $r2 != null goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Userinfo must not be present on authority: \'%s\'", $r0);

        return $r0;
    }

    static void closeQuietly(io.grpc.internal.StreamListener$MessageProducer)
    {
        io.grpc.internal.StreamListener$MessageProducer $r0;
        java.io.InputStream $r1;
        java.io.Closeable r2;

        $r0 := @parameter0: io.grpc.internal.StreamListener$MessageProducer;

     label1:
        $r1 = interfaceinvoke $r0.<io.grpc.internal.StreamListener$MessageProducer: java.io.InputStream next()>();

        if $r1 == null goto label2;

        r2 = (java.io.Closeable) $r1;

        staticinvoke <io.grpc.internal.GrpcUtil: void closeQuietly(java.io.Closeable)>(r2);

        goto label1;

     label2:
        return;
    }

    public static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 != null goto label1;

        return;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = <io.grpc.internal.GrpcUtil: java.util.logging.Logger log>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r1.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "io.grpc.internal.GrpcUtil", "closeQuietly", "exception caught in closeQuietly", $r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static io.grpc.ClientStreamTracer[] getClientStreamTracers(io.grpc.CallOptions, io.grpc.Metadata, int, boolean)
    {
        io.grpc.Metadata $r0;
        io.grpc.ClientStreamTracer[] $r1;
        io.grpc.CallOptions $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r3;
        io.grpc.ClientStreamTracer$StreamInfo$Builder $r4;
        io.grpc.ClientStreamTracer$StreamInfo $r5;
        java.lang.Object $r6;
        io.grpc.ClientStreamTracer$Factory $r7;
        io.grpc.ClientStreamTracer $r8;

        $r2 := @parameter0: io.grpc.CallOptions;

        $r0 := @parameter1: io.grpc.Metadata;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = virtualinvoke $r2.<io.grpc.CallOptions: java.util.List getStreamTracerFactories()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i1 + 1;

        $r1 = newarray (io.grpc.ClientStreamTracer)[$i1];

        $r4 = staticinvoke <io.grpc.ClientStreamTracer$StreamInfo: io.grpc.ClientStreamTracer$StreamInfo$Builder newBuilder()>();

        $r4 = virtualinvoke $r4.<io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setCallOptions(io.grpc.CallOptions)>($r2);

        $r4 = virtualinvoke $r4.<io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setPreviousAttempts(int)>($i0);

        $r4 = virtualinvoke $r4.<io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setIsTransparentRetry(boolean)>($z0);

        $r5 = virtualinvoke $r4.<io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo build()>();

        $i0 = 0;

     label1:
        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i2 goto label2;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = (io.grpc.ClientStreamTracer$Factory) $r6;

        $r8 = virtualinvoke $r7.<io.grpc.ClientStreamTracer$Factory: io.grpc.ClientStreamTracer newClientStreamTracer(io.grpc.ClientStreamTracer$StreamInfo,io.grpc.Metadata)>($r5, $r0);

        $r1[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = $i1 + -1;

        $r8 = <io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer NOOP_TRACER>;

        $r1[$i0] = $r8;

        return $r1;
    }

    public static java.lang.String getGrpcUserAgent(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        if $r2 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("grpc-java-");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1.50.0-SNAPSHOT");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getHost(java.net.InetSocketAddress)
    {
        java.lang.Class[] $r0;
        java.net.InetSocketAddress $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r8, $r9;

        $r1 := @parameter0: java.net.InetSocketAddress;

        $r2 = class "Ljava/net/InetSocketAddress;";

        $r0 = newarray (java.lang.Class)[0];

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getHostString", $r0);

     label2:
        $r4 = newarray (java.lang.Object)[0];

     label3:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label4:
        $r6 = (java.lang.String) $r5;

        return $r6;

     label5:
        $r7 := @caughtexception;

        goto label8;

     label6:
        $r8 := @caughtexception;

        goto label8;

     label7:
        $r9 := @caughtexception;

     label8:
        $r6 = virtualinvoke $r1.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        return $r6;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
    }

    public static java.util.concurrent.ThreadFactory getThreadFactory(java.lang.String, boolean)
    {
        com.google.common.util.concurrent.ThreadFactoryBuilder $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.concurrent.ThreadFactory $r2;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r0 = new com.google.common.util.concurrent.ThreadFactoryBuilder;

        specialinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean)>($z0);

        $r0 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>($r1);

        $r2 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>();

        return $r2;
    }

    static io.grpc.internal.ClientTransport getTransportFromPickResult(io.grpc.LoadBalancer$PickResult, boolean)
    {
        io.grpc.LoadBalancer$PickResult $r0;
        boolean $z0, $z1;
        io.grpc.LoadBalancer$Subchannel $r1;
        java.lang.Object $r2;
        io.grpc.internal.TransportProvider $r3;
        io.grpc.internal.ClientTransport $r4;
        io.grpc.ClientStreamTracer$Factory $r5;
        io.grpc.internal.GrpcUtil$6 $r6;
        io.grpc.Status $r7;
        io.grpc.internal.FailingClientTransport $r8;
        io.grpc.internal.ClientStreamListener$RpcProgress $r9;

        $r0 := @parameter0: io.grpc.LoadBalancer$PickResult;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$Subchannel getSubchannel()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<io.grpc.LoadBalancer$Subchannel: java.lang.Object getInternalSubchannel()>();

        $r3 = (io.grpc.internal.TransportProvider) $r2;

        $r4 = interfaceinvoke $r3.<io.grpc.internal.TransportProvider: io.grpc.internal.ClientTransport obtainActiveTransport()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        if $r4 == null goto label4;

        $r5 = virtualinvoke $r0.<io.grpc.LoadBalancer$PickResult: io.grpc.ClientStreamTracer$Factory getStreamTracerFactory()>();

        if $r5 != null goto label3;

        return $r4;

     label3:
        $r6 = new io.grpc.internal.GrpcUtil$6;

        specialinvoke $r6.<io.grpc.internal.GrpcUtil$6: void <init>(io.grpc.ClientStreamTracer$Factory,io.grpc.internal.ClientTransport)>($r5, $r4);

        return $r6;

     label4:
        $r7 = virtualinvoke $r0.<io.grpc.LoadBalancer$PickResult: io.grpc.Status getStatus()>();

        $z1 = virtualinvoke $r7.<io.grpc.Status: boolean isOk()>();

        if $z1 != 0 goto label6;

        $z1 = virtualinvoke $r0.<io.grpc.LoadBalancer$PickResult: boolean isDrop()>();

        if $z1 == 0 goto label5;

        $r8 = new io.grpc.internal.FailingClientTransport;

        $r7 = virtualinvoke $r0.<io.grpc.LoadBalancer$PickResult: io.grpc.Status getStatus()>();

        $r7 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.Status replaceInappropriateControlPlaneStatus(io.grpc.Status)>($r7);

        $r9 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress DROPPED>;

        specialinvoke $r8.<io.grpc.internal.FailingClientTransport: void <init>(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress)>($r7, $r9);

        return $r8;

     label5:
        if $z0 != 0 goto label6;

        $r8 = new io.grpc.internal.FailingClientTransport;

        $r7 = virtualinvoke $r0.<io.grpc.LoadBalancer$PickResult: io.grpc.Status getStatus()>();

        $r7 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.Status replaceInappropriateControlPlaneStatus(io.grpc.Status)>($r7);

        $r9 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED>;

        specialinvoke $r8.<io.grpc.internal.FailingClientTransport: void <init>(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress)>($r7, $r9);

        return $r8;

     label6:
        return null;
    }

    private static io.grpc.Status$Code httpStatusToGrpcCode(int)
    {
        int $i0;
        io.grpc.Status$Code r0;

        $i0 := @parameter0: int;

        if $i0 < 100 goto label1;

        if $i0 >= 200 goto label1;

        r0 = <io.grpc.Status$Code: io.grpc.Status$Code INTERNAL>;

        return r0;

     label1:
        lookupswitch($i0)
        {
            case 400: goto label7;
            case 401: goto label6;
            case 403: goto label5;
            case 404: goto label4;
            case 429: goto label3;
            case 431: goto label7;
            case 502: goto label3;
            case 503: goto label3;
            case 504: goto label3;
            default: goto label2;
        };

     label2:
        r0 = <io.grpc.Status$Code: io.grpc.Status$Code UNKNOWN>;

        return r0;

     label3:
        r0 = <io.grpc.Status$Code: io.grpc.Status$Code UNAVAILABLE>;

        return r0;

     label4:
        r0 = <io.grpc.Status$Code: io.grpc.Status$Code UNIMPLEMENTED>;

        return r0;

     label5:
        r0 = <io.grpc.Status$Code: io.grpc.Status$Code PERMISSION_DENIED>;

        return r0;

     label6:
        r0 = <io.grpc.Status$Code: io.grpc.Status$Code UNAUTHENTICATED>;

        return r0;

     label7:
        r0 = <io.grpc.Status$Code: io.grpc.Status$Code INTERNAL>;

        return r0;
    }

    public static io.grpc.Status httpStatusToGrpcStatus(int)
    {
        int $i0;
        io.grpc.Status$Code $r0;
        io.grpc.Status $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.Status$Code httpStatusToGrpcCode(int)>($i0);

        $r1 = virtualinvoke $r0.<io.grpc.Status$Code: io.grpc.Status toStatus()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP status code ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r3);

        return $r1;
    }

    public static boolean isGrpcContentType(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        boolean $z0;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = "application/grpc";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label2;

        return 0;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("application/grpc");

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != $i1 goto label4;

        return 1;

     label4:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 == 43 goto label5;

        if $c2 != 59 goto label6;

     label5:
        return 1;

     label6:
        return 0;
    }

    public static io.grpc.Status replaceInappropriateControlPlaneStatus(io.grpc.Status)
    {
        io.grpc.Status $r0, $r3;
        boolean $z0;
        java.util.Set $r1;
        io.grpc.Status$Code $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: io.grpc.Status;

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r1 = <io.grpc.internal.GrpcUtil: java.util.Set INAPPROPRIATE_CONTROL_PLANE_STATUS>;

        $r2 = virtualinvoke $r0.<io.grpc.Status: io.grpc.Status$Code getCode()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inappropriate status code from control plane: ");

        $r2 = virtualinvoke $r0.<io.grpc.Status: io.grpc.Status$Code getCode()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r0.<io.grpc.Status: java.lang.String getDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r5);

        $r6 = virtualinvoke $r0.<io.grpc.Status: java.lang.Throwable getCause()>();

        $r0 = virtualinvoke $r3.<io.grpc.Status: io.grpc.Status withCause(java.lang.Throwable)>($r6);

     label3:
        return $r0;
    }

    public static boolean shouldBeCountedForInUse(io.grpc.CallOptions)
    {
        java.lang.Boolean $r0;
        io.grpc.CallOptions$Key $r1;
        io.grpc.CallOptions $r2;
        java.lang.Object $r3;
        boolean $z0;

        $r2 := @parameter0: io.grpc.CallOptions;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = <io.grpc.internal.GrpcUtil: io.grpc.CallOptions$Key CALL_OPTIONS_RPC_OWNED_BY_BALANCER>;

        $r3 = virtualinvoke $r2.<io.grpc.CallOptions: java.lang.Object getOption(io.grpc.CallOptions$Key)>($r1);

        $z0 = virtualinvoke $r0.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        $z0 = $z0 ^ 1;

        return $z0;
    }

io.grpc.internal.GrpcUtil$1
    void <init>()
    {
        io.grpc.internal.GrpcUtil$1 $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public io.grpc.ProxiedSocketAddress proxyFor(java.net.SocketAddress)
    {
        io.grpc.internal.GrpcUtil$1 $r0;
        java.net.SocketAddress $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$1;

        $r1 := @parameter0: java.net.SocketAddress;

        return null;
    }

io.grpc.internal.GrpcUtil$2
    void <init>()
    {
        io.grpc.internal.GrpcUtil$2 $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$2;

        specialinvoke $r0.<io.grpc.ClientStreamTracer: void <init>()>();

        return;
    }

io.grpc.internal.GrpcUtil$3
    void <init>()
    {
        io.grpc.internal.GrpcUtil$3 $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile void close(java.lang.Object)
    {
        io.grpc.internal.GrpcUtil$3 $r0;
        java.lang.Object $r1;
        java.util.concurrent.Executor $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.concurrent.Executor) $r1;

        virtualinvoke $r0.<io.grpc.internal.GrpcUtil$3: void close(java.util.concurrent.Executor)>($r2);

        return;
    }

    public void close(java.util.concurrent.Executor)
    {
        io.grpc.internal.GrpcUtil$3 $r0;
        java.util.concurrent.Executor $r1;
        java.util.concurrent.ExecutorService $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$3;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 = (java.util.concurrent.ExecutorService) $r1;

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void shutdown()>();

        return;
    }

    public volatile java.lang.Object create()
    {
        io.grpc.internal.GrpcUtil$3 $r0;
        java.util.concurrent.Executor $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$3;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$3: java.util.concurrent.Executor create()>();

        return $r1;
    }

    public java.util.concurrent.Executor create()
    {
        io.grpc.internal.GrpcUtil$3 $r0;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ExecutorService $r2;
        java.util.concurrent.Executor r3;

        $r0 := @this: io.grpc.internal.GrpcUtil$3;

        $r1 = staticinvoke <io.grpc.internal.GrpcUtil: java.util.concurrent.ThreadFactory getThreadFactory(java.lang.String,boolean)>("grpc-default-executor-%d", 1);

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>($r1);

        r3 = (java.util.concurrent.Executor) $r2;

        return r3;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.GrpcUtil$3 $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$3;

        return "grpc-default-executor";
    }

io.grpc.internal.GrpcUtil$4
    void <init>()
    {
        io.grpc.internal.GrpcUtil$4 $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$4;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile void close(java.lang.Object)
    {
        io.grpc.internal.GrpcUtil$4 $r0;
        java.lang.Object $r1;
        java.util.concurrent.ScheduledExecutorService $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$4;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.concurrent.ScheduledExecutorService) $r1;

        virtualinvoke $r0.<io.grpc.internal.GrpcUtil$4: void close(java.util.concurrent.ScheduledExecutorService)>($r2);

        return;
    }

    public void close(java.util.concurrent.ScheduledExecutorService)
    {
        io.grpc.internal.GrpcUtil$4 $r0;
        java.util.concurrent.ScheduledExecutorService $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$4;

        $r1 := @parameter0: java.util.concurrent.ScheduledExecutorService;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>();

        return;
    }

    public volatile java.lang.Object create()
    {
        io.grpc.internal.GrpcUtil$4 $r0;
        java.util.concurrent.ScheduledExecutorService $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$4;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$4: java.util.concurrent.ScheduledExecutorService create()>();

        return $r1;
    }

    public java.util.concurrent.ScheduledExecutorService create()
    {
        io.grpc.internal.GrpcUtil$4 $r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2, $r5;
        java.util.concurrent.ThreadFactory $r3;
        java.util.concurrent.ScheduledExecutorService $r4;
        java.lang.reflect.Method $r6;
        java.lang.Object[] $r7;
        java.lang.Boolean $r8;
        java.lang.Throwable $r9, $r10, $r11;
        java.lang.RuntimeException r12;

        $r0 := @this: io.grpc.internal.GrpcUtil$4;

        $r3 = staticinvoke <io.grpc.internal.GrpcUtil: java.util.concurrent.ThreadFactory getThreadFactory(java.lang.String,boolean)>("grpc-timer-%d", 1);

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r3);

     label01:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r1 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r1[0] = $r2;

     label03:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setRemoveOnCancelPolicy", $r1);

     label04:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r7[0] = $r8;

     label05:
        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r7);

     label06:
        goto label10;

     label07:
        $r9 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        $r9 = (java.lang.Throwable) r12;

        throw $r9;

     label08:
        $r10 := @caughtexception;

        throw $r10;

     label09:
        $r11 := @caughtexception;

     label10:
        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)>($r4);

        return $r4;

        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.RuntimeException from label01 to label02 with label08;
        catch java.lang.RuntimeException from label03 to label04 with label08;
        catch java.lang.RuntimeException from label05 to label06 with label08;
        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label07;
    }

io.grpc.internal.GrpcUtil$5
    void <init>()
    {
        io.grpc.internal.GrpcUtil$5 $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$5;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.base.Stopwatch get()
    {
        io.grpc.internal.GrpcUtil$5 $r0;
        com.google.common.base.Stopwatch $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$5;

        $r1 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createUnstarted()>();

        return $r1;
    }

    public volatile java.lang.Object get()
    {
        io.grpc.internal.GrpcUtil$5 $r0;
        com.google.common.base.Stopwatch $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$5;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$5: com.google.common.base.Stopwatch get()>();

        return $r1;
    }

io.grpc.internal.GrpcUtil$6
<io.grpc.internal.GrpcUtil$6: io.grpc.ClientStreamTracer$Factory val$streamTracerFactory>
<io.grpc.internal.GrpcUtil$6: io.grpc.internal.ClientTransport val$transport>
    void <init>(io.grpc.ClientStreamTracer$Factory, io.grpc.internal.ClientTransport)
    {
        io.grpc.internal.GrpcUtil$6 $r0;
        io.grpc.ClientStreamTracer$Factory $r1;
        io.grpc.internal.ClientTransport $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$6;

        $r1 := @parameter0: io.grpc.ClientStreamTracer$Factory;

        $r2 := @parameter1: io.grpc.internal.ClientTransport;

        $r0.<io.grpc.internal.GrpcUtil$6: io.grpc.ClientStreamTracer$Factory val$streamTracerFactory> = $r1;

        $r0.<io.grpc.internal.GrpcUtil$6: io.grpc.internal.ClientTransport val$transport> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public io.grpc.InternalLogId getLogId()
    {
        io.grpc.internal.GrpcUtil$6 $r0;
        io.grpc.InternalLogId $r1;
        io.grpc.internal.ClientTransport $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$6;

        $r2 = $r0.<io.grpc.internal.GrpcUtil$6: io.grpc.internal.ClientTransport val$transport>;

        $r1 = interfaceinvoke $r2.<io.grpc.internal.ClientTransport: io.grpc.InternalLogId getLogId()>();

        return $r1;
    }

    public io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor, io.grpc.Metadata, io.grpc.CallOptions, io.grpc.ClientStreamTracer[])
    {
        io.grpc.internal.GrpcUtil$6 $r0;
        io.grpc.Metadata $r1;
        io.grpc.CallOptions $r2;
        io.grpc.ClientStreamTracer[] $r3;
        io.grpc.MethodDescriptor $r4;
        io.grpc.ClientStreamTracer$StreamInfo$Builder $r5;
        io.grpc.ClientStreamTracer$StreamInfo $r6;
        io.grpc.ClientStreamTracer$Factory $r7;
        io.grpc.ClientStreamTracer $r8, $r9, $r10;
        int $i0;
        boolean $z0;
        io.grpc.internal.ClientTransport $r11;
        io.grpc.internal.ClientStream $r12;

        $r0 := @this: io.grpc.internal.GrpcUtil$6;

        $r4 := @parameter0: io.grpc.MethodDescriptor;

        $r1 := @parameter1: io.grpc.Metadata;

        $r2 := @parameter2: io.grpc.CallOptions;

        $r3 := @parameter3: io.grpc.ClientStreamTracer[];

        $r5 = staticinvoke <io.grpc.ClientStreamTracer$StreamInfo: io.grpc.ClientStreamTracer$StreamInfo$Builder newBuilder()>();

        $r5 = virtualinvoke $r5.<io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setCallOptions(io.grpc.CallOptions)>($r2);

        $r6 = virtualinvoke $r5.<io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo build()>();

        $r7 = $r0.<io.grpc.internal.GrpcUtil$6: io.grpc.ClientStreamTracer$Factory val$streamTracerFactory>;

        $r8 = virtualinvoke $r7.<io.grpc.ClientStreamTracer$Factory: io.grpc.ClientStreamTracer newClientStreamTracer(io.grpc.ClientStreamTracer$StreamInfo,io.grpc.Metadata)>($r6, $r1);

        $i0 = lengthof $r3;

        $i0 = $i0 + -1;

        $r9 = $r3[$i0];

        $r10 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer access$200()>();

        if $r9 != $r10 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "lb tracer already assigned");

        $i0 = lengthof $r3;

        $i0 = $i0 + -1;

        $r3[$i0] = $r8;

        $r11 = $r0.<io.grpc.internal.GrpcUtil$6: io.grpc.internal.ClientTransport val$transport>;

        $r12 = interfaceinvoke $r11.<io.grpc.internal.ClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])>($r4, $r1, $r2, $r3);

        return $r12;
    }

    public void ping(io.grpc.internal.ClientTransport$PingCallback, java.util.concurrent.Executor)
    {
        io.grpc.internal.GrpcUtil$6 $r0;
        java.util.concurrent.Executor $r1;
        io.grpc.internal.ClientTransport$PingCallback $r2;
        java.lang.NullPointerException r3;

        $r0 := @this: io.grpc.internal.GrpcUtil$6;

        $r2 := @parameter0: io.grpc.internal.ClientTransport$PingCallback;

        $r1 := @parameter1: java.util.concurrent.Executor;

        r3 = new java.lang.NullPointerException;

        specialinvoke r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r3;
    }

io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller
    private void <init>()
    {
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.GrpcUtil$1)
    {
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller $r0;
        io.grpc.internal.GrpcUtil$1 $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        $r1 := @parameter0: io.grpc.internal.GrpcUtil$1;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: void <init>()>();

        return;
    }

    public volatile java.lang.Object parseAsciiString(byte[])
    {
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller $r0;
        byte[] $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        $r1 := @parameter0: byte[];

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: byte[] parseAsciiString(byte[])>($r1);

        return $r1;
    }

    public byte[] parseAsciiString(byte[])
    {
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller $r0;
        byte[] $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        $r1 := @parameter0: byte[];

        return $r1;
    }

    public volatile byte[] toAsciiString(java.lang.Object)
    {
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller $r0;
        byte[] $r1;
        java.lang.Object $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (byte[]) $r2;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: byte[] toAsciiString(byte[])>($r1);

        return $r1;
    }

    public byte[] toAsciiString(byte[])
    {
        io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller $r0;
        byte[] $r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller;

        $r1 := @parameter0: byte[];

        return $r1;
    }

io.grpc.internal.GrpcUtil$Http2Error
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] $VALUES>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CANCEL>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error COMPRESSION_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CONNECT_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error ENHANCE_YOUR_CALM>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FLOW_CONTROL_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FRAME_SIZE_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error HTTP_1_1_REQUIRED>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INADEQUATE_SECURITY>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INTERNAL_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error NO_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error PROTOCOL_ERROR>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error REFUSED_STREAM>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error SETTINGS_TIMEOUT>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error STREAM_CLOSED>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] codeMap>
<io.grpc.internal.GrpcUtil$Http2Error: int code>
<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status>
    private static io.grpc.internal.GrpcUtil$Http2Error[] $values()
    {
        io.grpc.internal.GrpcUtil$Http2Error[] $r0;
        io.grpc.internal.GrpcUtil$Http2Error $r1;

        $r0 = newarray (io.grpc.internal.GrpcUtil$Http2Error)[14];

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error NO_ERROR>;

        $r0[0] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error PROTOCOL_ERROR>;

        $r0[1] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INTERNAL_ERROR>;

        $r0[2] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FLOW_CONTROL_ERROR>;

        $r0[3] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error SETTINGS_TIMEOUT>;

        $r0[4] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error STREAM_CLOSED>;

        $r0[5] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FRAME_SIZE_ERROR>;

        $r0[6] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error REFUSED_STREAM>;

        $r0[7] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CANCEL>;

        $r0[8] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error COMPRESSION_ERROR>;

        $r0[9] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CONNECT_ERROR>;

        $r0[10] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error ENHANCE_YOUR_CALM>;

        $r0[11] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INADEQUATE_SECURITY>;

        $r0[12] = $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error HTTP_1_1_REQUIRED>;

        $r0[13] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.internal.GrpcUtil$Http2Error $r0;
        io.grpc.Status $r1;
        io.grpc.internal.GrpcUtil$Http2Error[] $r2;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("NO_ERROR", 0, 0, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error NO_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("PROTOCOL_ERROR", 1, 1, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error PROTOCOL_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("INTERNAL_ERROR", 2, 2, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INTERNAL_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("FLOW_CONTROL_ERROR", 3, 3, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FLOW_CONTROL_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("SETTINGS_TIMEOUT", 4, 4, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error SETTINGS_TIMEOUT> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("STREAM_CLOSED", 5, 5, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error STREAM_CLOSED> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("FRAME_SIZE_ERROR", 6, 6, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FRAME_SIZE_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("REFUSED_STREAM", 7, 7, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error REFUSED_STREAM> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status CANCELLED>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("CANCEL", 8, 8, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CANCEL> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("COMPRESSION_ERROR", 9, 9, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error COMPRESSION_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("CONNECT_ERROR", 10, 10, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CONNECT_ERROR> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status RESOURCE_EXHAUSTED>;

        $r1 = virtualinvoke $r1.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Bandwidth exhausted");

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("ENHANCE_YOUR_CALM", 11, 11, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error ENHANCE_YOUR_CALM> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status PERMISSION_DENIED>;

        $r1 = virtualinvoke $r1.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Permission denied as protocol is not secure enough to call");

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("INADEQUATE_SECURITY", 12, 12, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INADEQUATE_SECURITY> = $r0;

        $r0 = new io.grpc.internal.GrpcUtil$Http2Error;

        $r1 = <io.grpc.Status: io.grpc.Status UNKNOWN>;

        specialinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: void <init>(java.lang.String,int,int,io.grpc.Status)>("HTTP_1_1_REQUIRED", 13, 13, $r1);

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error HTTP_1_1_REQUIRED> = $r0;

        $r2 = staticinvoke <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] $values()>();

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] $VALUES> = $r2;

        $r2 = staticinvoke <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] buildHttp2CodeMap()>();

        <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] codeMap> = $r2;

        return;
    }

    private void <init>(java.lang.String, int, int, io.grpc.Status)
    {
        io.grpc.internal.GrpcUtil$Http2Error $r0;
        int $i0, $i1;
        io.grpc.Status $r1;
        java.lang.String $r2, $r4, $r5;
        java.lang.StringBuilder $r3;

        $r0 := @this: io.grpc.internal.GrpcUtil$Http2Error;

        $r2 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: io.grpc.Status;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r2, $i1);

        $r0.<io.grpc.internal.GrpcUtil$Http2Error: int code> = $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/2 error code: ");

        $r2 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: java.lang.String name()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r2;

        $r5 = virtualinvoke $r1.<io.grpc.Status: java.lang.String getDescription()>();

        if $r5 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r2 = virtualinvoke $r1.<io.grpc.Status: java.lang.String getDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r1 = virtualinvoke $r1.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r4);

        $r0.<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status> = $r1;

        return;
    }

    private static io.grpc.internal.GrpcUtil$Http2Error[] buildHttp2CodeMap()
    {
        io.grpc.internal.GrpcUtil$Http2Error $r0;
        int $i0, $i2, $i3;
        io.grpc.internal.GrpcUtil$Http2Error[] $r1, $r2;
        long $l1;

        $r1 = staticinvoke <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] values()>();

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $r0 = $r1[$i0];

        $l1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: long code()>();

        $i0 = (int) $l1;

        $i0 = $i0 + 1;

        $r2 = newarray (io.grpc.internal.GrpcUtil$Http2Error)[$i0];

        $i2 = lengthof $r1;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r0 = $r1[$i3];

        $l1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: long code()>();

        $i0 = (int) $l1;

        $r2[$i0] = $r0;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static io.grpc.internal.GrpcUtil$Http2Error forCode(long)
    {
        int $i0;
        io.grpc.internal.GrpcUtil$Http2Error[] $r0;
        long $l1, $l2;
        byte $b3;
        io.grpc.internal.GrpcUtil$Http2Error $r1;

        $l1 := @parameter0: long;

        $r0 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] codeMap>;

        $i0 = lengthof $r0;

        $l2 = (long) $i0;

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label2;

        $b3 = $l1 cmp 0L;

        if $b3 >= 0 goto label1;

        goto label2;

     label1:
        $i0 = (int) $l1;

        $r1 = $r0[$i0];

        return $r1;

     label2:
        return null;
    }

    public static io.grpc.Status statusForCode(long)
    {
        long $l0;
        io.grpc.internal.GrpcUtil$Http2Error $r0;
        io.grpc.Status $r1;
        io.grpc.Status$Code $r2;
        int $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error forCode(long)>($l0);

        if $r0 != null goto label1;

        $r0 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INTERNAL_ERROR>;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status()>();

        $r2 = virtualinvoke $r1.<io.grpc.Status: io.grpc.Status$Code getCode()>();

        $i1 = virtualinvoke $r2.<io.grpc.Status$Code: int value()>();

        $r1 = staticinvoke <io.grpc.Status: io.grpc.Status fromCodeValue(int)>($i1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized HTTP/2 error code: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r4);

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status()>();

        return $r1;
    }

    public static io.grpc.internal.GrpcUtil$Http2Error[] values()
    {
        java.lang.Object $r0;
        io.grpc.internal.GrpcUtil$Http2Error[] $r1;

        $r1 = <io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.internal.GrpcUtil$Http2Error[]) $r0;

        return $r1;
    }

    public long code()
    {
        io.grpc.internal.GrpcUtil$Http2Error $r0;
        int $i0;
        long $l1;

        $r0 := @this: io.grpc.internal.GrpcUtil$Http2Error;

        $i0 = $r0.<io.grpc.internal.GrpcUtil$Http2Error: int code>;

        $l1 = (long) $i0;

        return $l1;
    }

    public io.grpc.Status status()
    {
        io.grpc.internal.GrpcUtil$Http2Error $r0;
        io.grpc.Status r1;

        $r0 := @this: io.grpc.internal.GrpcUtil$Http2Error;

        r1 = $r0.<io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status>;

        return r1;
    }

io.grpc.internal.GrpcUtil$TimeoutMarshaller
    void <init>()
    {
        io.grpc.internal.GrpcUtil$TimeoutMarshaller $r0;

        $r0 := @this: io.grpc.internal.GrpcUtil$TimeoutMarshaller;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Long parseAsciiString(java.lang.String)
    {
        io.grpc.internal.GrpcUtil$TimeoutMarshaller $r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;
        long $l1;
        char $c2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.lang.Character $r5;
        java.util.concurrent.TimeUnit $r6;
        java.lang.Long $r7;

        $r0 := @this: io.grpc.internal.GrpcUtil$TimeoutMarshaller;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "empty timeout");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 > 9 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "bad timeout format");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        lookupswitch($c2)
        {
            case 72: goto label11;
            case 77: goto label10;
            case 83: goto label09;
            case 109: goto label08;
            case 110: goto label07;
            case 117: goto label06;
            default: goto label05;
        };

     label05:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4[0] = $r5;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid timeout unit: %s", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label06:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;

        $l1 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;

     label07:
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;

     label08:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l1 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;

     label09:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l1 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;

     label10:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $l1 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;

     label11:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l1 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;
    }

    public volatile java.lang.Object parseAsciiString(java.lang.String)
    {
        io.grpc.internal.GrpcUtil$TimeoutMarshaller $r0;
        java.lang.Long $r1;
        java.lang.String $r2;

        $r0 := @this: io.grpc.internal.GrpcUtil$TimeoutMarshaller;

        $r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$TimeoutMarshaller: java.lang.Long parseAsciiString(java.lang.String)>($r2);

        return $r1;
    }

    public java.lang.String toAsciiString(java.lang.Long)
    {
        io.grpc.internal.GrpcUtil$TimeoutMarshaller $r0;
        java.lang.Long $r1;
        java.util.concurrent.TimeUnit $r2;
        long $l0;
        byte $b1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        $r0 := @this: io.grpc.internal.GrpcUtil$TimeoutMarshaller;

        $r1 := @parameter0: java.lang.Long;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label6;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 100000000L;

        if $b1 >= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 100000000000L;

        if $b1 >= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMicros(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 100000000000000L;

        if $b1 >= 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 100000000000000000L;

        if $b1 >= 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label4:
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 6000000000000000000L;

        if $b1 >= 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMinutes(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("M");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toHours(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Timeout too small");

        throw $r5;
    }

    public volatile java.lang.String toAsciiString(java.lang.Object)
    {
        io.grpc.internal.GrpcUtil$TimeoutMarshaller $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.Long $r3;

        $r0 := @this: io.grpc.internal.GrpcUtil$TimeoutMarshaller;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.lang.Long) $r2;

        $r1 = virtualinvoke $r0.<io.grpc.internal.GrpcUtil$TimeoutMarshaller: java.lang.String toAsciiString(java.lang.Long)>($r3);

        return $r1;
    }

