androidx.constraintlayout.core.motion.MotionConstrainedPoint
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.lang.String TAG>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean DEBUG>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mVisibilityMode>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int visibility>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean applyElevation>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: androidx.constraintlayout.core.motion.utils.Easing mKeyFrameEasing>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mDrawPath>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float position>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float x>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float y>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float width>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float height>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mProgress>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mAnimateRelativeTo>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int PERPENDICULAR>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int CARTESIAN>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.lang.String[] names>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mMode>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: double[] mTempValue>
<androidx.constraintlayout.core.motion.MotionConstrainedPoint: double[] mTempDelta>
    public void <init>()
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        java.util.LinkedHashMap $r1;
        double[] $r2, $r3;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha> = 1.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mVisibilityMode> = 0;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean applyElevation> = 0;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX> = 1.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY> = 1.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mDrawPath> = 0;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mProgress> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mAnimateRelativeTo> = -1;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable> = $r1;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mMode> = 0;

        $r2 = newarray (double)[18];

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: double[] mTempValue> = $r2;

        $r3 = newarray (double)[18];

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: double[] mTempDelta> = $r3;

        return;
    }

    private boolean diff(float, float)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        float f0, f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z3 == 0 goto label4;

     label1:
        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 == $z2 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $f2 = f0 - f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $b0 = $f3 cmpl 1.0E-6F;

        if $b0 <= 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    void different(androidx.constraintlayout.core.motion.MotionConstrainedPoint, java.util.HashSet)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0, r1;
        java.util.HashSet r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29;
        boolean $z0, $z1, $z2, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z24, $z25, $z30, $z31, $z32;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r2 := @parameter1: java.util.HashSet;

        $f1 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha>;

        $f0 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha>;

        $z0 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f1, $f0);

        if $z0 == 0 goto label01;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("alpha");

     label01:
        $f3 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation>;

        $f2 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation>;

        $z1 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f3, $f2);

        if $z1 == 0 goto label02;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("translationZ");

     label02:
        $i1 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int visibility>;

        $i0 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int visibility>;

        if $i1 == $i0 goto label04;

        $i2 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int mVisibilityMode>;

        if $i2 != 0 goto label04;

        $i3 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int visibility>;

        if $i3 == 4 goto label03;

        $i4 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int visibility>;

        if $i4 != 4 goto label04;

     label03:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("alpha");

     label04:
        $f25 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation>;

        $f26 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation>;

        $z30 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f25, $f26);

        if $z30 == 0 goto label05;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("rotationZ");

     label05:
        $f4 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f4);

        if $z2 == 0 goto label06;

        $f24 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate>;

        $z25 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f24);

        if $z25 != 0 goto label07;

     label06:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("pathRotate");

     label07:
        $f27 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mProgress>;

        $z31 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f27);

        if $z31 == 0 goto label08;

        $f23 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mProgress>;

        $z24 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f23);

        if $z24 != 0 goto label09;

     label08:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("progress");

     label09:
        $f28 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX>;

        $f29 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX>;

        $z32 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f28, $f29);

        if $z32 == 0 goto label10;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("rotationX");

     label10:
        $f6 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY>;

        $f5 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY>;

        $z5 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f6, $f5);

        if $z5 == 0 goto label11;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("rotationY");

     label11:
        $f8 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX>;

        $f7 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX>;

        $z6 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f8, $f7);

        if $z6 == 0 goto label12;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("pivotX");

     label12:
        $f10 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY>;

        $f9 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY>;

        $z7 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f10, $f9);

        if $z7 == 0 goto label13;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("pivotY");

     label13:
        $f12 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX>;

        $f11 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX>;

        $z8 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f12, $f11);

        if $z8 == 0 goto label14;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("scaleX");

     label14:
        $f14 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY>;

        $f13 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY>;

        $z9 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f14, $f13);

        if $z9 == 0 goto label15;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("scaleY");

     label15:
        $f16 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX>;

        $f15 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX>;

        $z10 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f16, $f15);

        if $z10 == 0 goto label16;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("translationX");

     label16:
        $f18 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY>;

        $f17 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY>;

        $z11 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f18, $f17);

        if $z11 == 0 goto label17;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("translationY");

     label17:
        $f20 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ>;

        $f19 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ>;

        $z12 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f20, $f19);

        if $z12 == 0 goto label18;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("translationZ");

     label18:
        $f22 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation>;

        $f21 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation>;

        $z13 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f22, $f21);

        if $z13 == 0 goto label19;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("elevation");

     label19:
        return;
    }

    void different(androidx.constraintlayout.core.motion.MotionConstrainedPoint, boolean[], java.lang.String[])
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0, r1;
        boolean[] r2;
        java.lang.String[] r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        byte b5;
        int i6, i7, i8, i9, i10;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r2 := @parameter1: boolean[];

        r3 := @parameter2: java.lang.String[];

        b5 = 0;

        i6 = b5 + 1;

        $z0 = r2[b5];

        $f1 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float position>;

        $f0 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float position>;

        $z1 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f1, $f0);

        $z2 = $z0 | $z1;

        r2[b5] = $z2;

        i7 = i6 + 1;

        $z3 = r2[i6];

        $f3 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float x>;

        $f2 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float x>;

        $z4 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f3, $f2);

        $z5 = $z3 | $z4;

        r2[i6] = $z5;

        i8 = i7 + 1;

        $z6 = r2[i7];

        $f5 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float y>;

        $f4 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float y>;

        $z7 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f5, $f4);

        $z8 = $z6 | $z7;

        r2[i7] = $z8;

        i9 = i8 + 1;

        $z9 = r2[i8];

        $f7 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float width>;

        $f6 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float width>;

        $z10 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f7, $f6);

        $z11 = $z9 | $z10;

        r2[i8] = $z11;

        i10 = i9 + 1;

        $z12 = r2[i9];

        $f9 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float height>;

        $f8 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float height>;

        $z13 = specialinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean diff(float,float)>($f9, $f8);

        $z14 = $z12 | $z13;

        r2[i9] = $z14;

        return;
    }

    void fillStandard(double[], int[])
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        double[] r1;
        int[] r2;
        float[] r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        double $d0;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: double[];

        r2 := @parameter1: int[];

        $r4 = newarray (float)[18];

        $f0 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float position>;

        $r4[0] = $f0;

        $f1 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float x>;

        $r4[1] = $f1;

        $f2 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float y>;

        $r4[2] = $f2;

        $f3 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float width>;

        $r4[3] = $f3;

        $f4 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float height>;

        $r4[4] = $f4;

        $f5 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha>;

        $r4[5] = $f5;

        $f6 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float elevation>;

        $r4[6] = $f6;

        $f7 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation>;

        $r4[7] = $f7;

        $f8 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX>;

        $r4[8] = $f8;

        $f9 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY>;

        $r4[9] = $f9;

        $f10 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX>;

        $r4[10] = $f10;

        $f11 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY>;

        $r4[11] = $f11;

        $f12 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX>;

        $r4[12] = $f12;

        $f13 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY>;

        $r4[13] = $f13;

        $f14 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX>;

        $r4[14] = $f14;

        $f15 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY>;

        $r4[15] = $f15;

        $f16 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ>;

        $r4[16] = $f16;

        $f17 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate>;

        $r4[17] = $f17;

        r3 = $r4;

        i5 = 0;

        i6 = 0;

     label1:
        $i0 = lengthof r2;

        if i6 >= $i0 goto label3;

        $i2 = r2[i6];

        $i1 = lengthof r3;

        if $i2 >= $i1 goto label2;

        $i3 = i5;

        i5 = i5 + 1;

        $i4 = r2[i6];

        $f18 = r3[$i4];

        $d0 = (double) $f18;

        r1[$i3] = $d0;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return;
    }

    boolean hasCustomData(java.lang.String)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        java.lang.String r1;
        java.util.LinkedHashMap $r2;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>;

        $z0 = virtualinvoke $r2.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    int getCustomDataCount(java.lang.String)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        java.lang.String r1;
        java.util.LinkedHashMap $r2;
        java.lang.Object $r3;
        androidx.constraintlayout.core.motion.CustomVariable $r4;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.constraintlayout.core.motion.CustomVariable) $r3;

        $i0 = virtualinvoke $r4.<androidx.constraintlayout.core.motion.CustomVariable: int numberOfInterpolatedValues()>();

        return $i0;
    }

    int getCustomData(java.lang.String, double[], int)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        java.lang.String r1;
        double[] r2;
        androidx.constraintlayout.core.motion.CustomVariable r3;
        int i0, $i1, $i2, i3, i4;
        float[] r4;
        java.util.LinkedHashMap $r5;
        java.lang.Object $r6;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        i3 := @parameter2: int;

        $r5 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.constraintlayout.core.motion.CustomVariable) $r6;

        $i1 = virtualinvoke r3.<androidx.constraintlayout.core.motion.CustomVariable: int numberOfInterpolatedValues()>();

        if $i1 != 1 goto label1;

        $f1 = virtualinvoke r3.<androidx.constraintlayout.core.motion.CustomVariable: float getValueToInterpolate()>();

        $d1 = (double) $f1;

        r2[i3] = $d1;

        return 1;

     label1:
        i0 = virtualinvoke r3.<androidx.constraintlayout.core.motion.CustomVariable: int numberOfInterpolatedValues()>();

        r4 = newarray (float)[i0];

        virtualinvoke r3.<androidx.constraintlayout.core.motion.CustomVariable: void getValuesToInterpolate(float[])>(r4);

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $i2 = i3;

        i3 = i3 + 1;

        $f0 = r4[i4];

        $d0 = (double) $f0;

        r2[$i2] = $d0;

        i4 = i4 + 1;

        goto label2;

     label3:
        return i0;
    }

    void setBounds(float, float, float, float)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        float f0, f1, f2, f3;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float x> = f0;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float y> = f1;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float width> = f2;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float height> = f3;

        return;
    }

    public int compareTo(androidx.constraintlayout.core.motion.MotionConstrainedPoint)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0, r1;
        float $f0, $f1;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        $f1 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float position>;

        $f0 = r1.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float position>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        return $i0;
    }

    public void applyParameters(androidx.constraintlayout.core.motion.MotionWidget)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.lang.String r4;
        androidx.constraintlayout.core.motion.CustomVariable r5;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        java.lang.Object $r6;
        boolean $z0, $z1;
        java.util.LinkedHashMap $r7;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionWidget;

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: int getVisibility()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int visibility> = $i0;

        $i1 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: int getVisibility()>();

        if $i1 == 4 goto label1;

        $f10 = 0.0F;

        goto label2;

     label1:
        $f10 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getAlpha()>();

     label2:
        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha> = $f10;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: boolean applyElevation> = 0;

        $f0 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getRotationZ()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation> = $f0;

        $f1 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getRotationX()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX> = $f1;

        $f2 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getRotationY()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY> = $f2;

        $f3 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getScaleX()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX> = $f3;

        $f4 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getScaleY()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY> = $f4;

        $f5 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getPivotX()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX> = $f5;

        $f6 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getPivotY()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY> = $f6;

        $f7 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getTranslationX()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX> = $f7;

        $f8 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getTranslationY()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY> = $f8;

        $f9 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: float getTranslationZ()>();

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ> = $f9;

        r2 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: java.util.Set getCustomAttributeNames()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        r5 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: androidx.constraintlayout.core.motion.CustomVariable getCustomAttribute(java.lang.String)>(r4);

        if r5 == null goto label4;

        $z0 = virtualinvoke r5.<androidx.constraintlayout.core.motion.CustomVariable: boolean isContinuous()>();

        if $z0 == 0 goto label4;

        $r7 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>;

        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label4:
        goto label3;

     label5:
        return;
    }

    public void addValues(java.util.HashMap, int)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        java.util.HashMap r1;
        int i0, $i1;
        java.util.Iterator r2;
        java.lang.String r3, r5, r6, $r27, $r39;
        androidx.constraintlayout.core.motion.utils.SplineSet r4;
        androidx.constraintlayout.core.motion.CustomVariable r7;
        java.util.Set $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        java.lang.Object $r9, $r10, $r31;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        java.lang.StringBuilder $r24, $r25, $r26, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        java.lang.String[] $r28;
        java.util.LinkedHashMap $r29, $r30;
        androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline $r40;
        byte b15;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: java.util.HashMap;

        i0 := @parameter1: int;

        $r8 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label60;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r9;

        $r10 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (androidx.constraintlayout.core.motion.utils.SplineSet) $r10;

        r5 = r3;

        b15 = -1;

        $i1 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1249320806: goto label04;
            case -1249320805: goto label05;
            case -1249320804: goto label03;
            case -1225497657: goto label12;
            case -1225497656: goto label13;
            case -1225497655: goto label14;
            case -1001078227: goto label09;
            case -987906986: goto label06;
            case -987906985: goto label07;
            case -908189618: goto label10;
            case -908189617: goto label11;
            case 92909918: goto label02;
            case 803192288: goto label08;
            default: goto label15;
        };

     label02:
        $z18 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z18 == 0 goto label15;

        b15 = 0;

        goto label15;

     label03:
        $z27 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("rotationZ");

        if $z27 == 0 goto label15;

        b15 = 1;

        goto label15;

     label04:
        $z29 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("rotationX");

        if $z29 == 0 goto label15;

        b15 = 2;

        goto label15;

     label05:
        $z28 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("rotationY");

        if $z28 == 0 goto label15;

        b15 = 3;

        goto label15;

     label06:
        $z22 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pivotX");

        if $z22 == 0 goto label15;

        b15 = 4;

        goto label15;

     label07:
        $z21 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pivotY");

        if $z21 == 0 goto label15;

        b15 = 5;

        goto label15;

     label08:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pathRotate");

        if $z1 == 0 goto label15;

        b15 = 6;

        goto label15;

     label09:
        $z23 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("progress");

        if $z23 == 0 goto label15;

        b15 = 7;

        goto label15;

     label10:
        $z20 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("scaleX");

        if $z20 == 0 goto label15;

        b15 = 8;

        goto label15;

     label11:
        $z19 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("scaleY");

        if $z19 == 0 goto label15;

        b15 = 9;

        goto label15;

     label12:
        $z26 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("translationX");

        if $z26 == 0 goto label15;

        b15 = 10;

        goto label15;

     label13:
        $z25 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("translationY");

        if $z25 == 0 goto label15;

        b15 = 11;

        goto label15;

     label14:
        $z24 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("translationZ");

        if $z24 == 0 goto label15;

        b15 = 12;

     label15:
        tableswitch(b15)
        {
            case 0: goto label16;
            case 1: goto label19;
            case 2: goto label22;
            case 3: goto label25;
            case 4: goto label28;
            case 5: goto label31;
            case 6: goto label34;
            case 7: goto label37;
            case 8: goto label40;
            case 9: goto label43;
            case 10: goto label46;
            case 11: goto label49;
            case 12: goto label52;
            default: goto label55;
        };

     label16:
        $f12 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha>;

        $z14 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f12);

        if $z14 == 0 goto label17;

        $f14 = 1.0F;

        goto label18;

     label17:
        $f14 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float alpha>;

     label18:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f14);

        goto label59;

     label19:
        $f11 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation>;

        $z13 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f11);

        if $z13 == 0 goto label20;

        $f15 = 0.0F;

        goto label21;

     label20:
        $f15 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation>;

     label21:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f15);

        goto label59;

     label22:
        $f10 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX>;

        $z12 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f10);

        if $z12 == 0 goto label23;

        $f16 = 0.0F;

        goto label24;

     label23:
        $f16 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationX>;

     label24:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f16);

        goto label59;

     label25:
        $f9 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY>;

        $z11 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f9);

        if $z11 == 0 goto label26;

        $f17 = 0.0F;

        goto label27;

     label26:
        $f17 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotationY>;

     label27:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f17);

        goto label59;

     label28:
        $f8 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX>;

        $z10 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f8);

        if $z10 == 0 goto label29;

        $f18 = 0.0F;

        goto label30;

     label29:
        $f18 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX>;

     label30:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f18);

        goto label59;

     label31:
        $f7 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY>;

        $z9 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f7);

        if $z9 == 0 goto label32;

        $f19 = 0.0F;

        goto label33;

     label32:
        $f19 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY>;

     label33:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f19);

        goto label59;

     label34:
        $f6 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate>;

        $z8 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f6);

        if $z8 == 0 goto label35;

        $f20 = 0.0F;

        goto label36;

     label35:
        $f20 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPathRotate>;

     label36:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f20);

        goto label59;

     label37:
        $f5 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mProgress>;

        $z7 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f5);

        if $z7 == 0 goto label38;

        $f21 = 0.0F;

        goto label39;

     label38:
        $f21 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mProgress>;

     label39:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f21);

        goto label59;

     label40:
        $f4 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX>;

        $z6 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f4);

        if $z6 == 0 goto label41;

        $f22 = 1.0F;

        goto label42;

     label41:
        $f22 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleX>;

     label42:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f22);

        goto label59;

     label43:
        $f3 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY>;

        $z5 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z5 == 0 goto label44;

        $f23 = 1.0F;

        goto label45;

     label44:
        $f23 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float scaleY>;

     label45:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f23);

        goto label59;

     label46:
        $f2 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX>;

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z4 == 0 goto label47;

        $f24 = 0.0F;

        goto label48;

     label47:
        $f24 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationX>;

     label48:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f24);

        goto label59;

     label49:
        $f1 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z3 == 0 goto label50;

        $f25 = 0.0F;

        goto label51;

     label50:
        $f25 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationY>;

     label51:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f25);

        goto label59;

     label52:
        $f0 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z2 == 0 goto label53;

        $f26 = 0.0F;

        goto label54;

     label53:
        $f26 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float translationZ>;

     label54:
        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.SplineSet: void setPoint(int,float)>(i0, $f26);

        goto label59;

     label55:
        $z15 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CUSTOM");

        if $z15 == 0 goto label58;

        $r28 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r6 = $r28[1];

        $r29 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>;

        $z16 = virtualinvoke $r29.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z16 == 0 goto label57;

        $r30 = r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.util.LinkedHashMap mCustomVariable>;

        $r31 = virtualinvoke $r30.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (androidx.constraintlayout.core.motion.CustomVariable) $r31;

        $z17 = r4 instanceof androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline;

        if $z17 == 0 goto label56;

        $r40 = (androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline) r4;

        virtualinvoke $r40.<androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline: void setPoint(int,androidx.constraintlayout.core.motion.CustomVariable)>(i0, r7);

        goto label57;

     label56:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ViewSpline not a CustomSet frame = ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value");

        $f13 = virtualinvoke r7.<androidx.constraintlayout.core.motion.CustomVariable: float getValueToInterpolate()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f13);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.constraintlayout.core.motion.utils.Utils: void loge(java.lang.String,java.lang.String)>("MotionPaths", $r39);

     label57:
        goto label59;

     label58:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN spline ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.constraintlayout.core.motion.utils.Utils: void loge(java.lang.String,java.lang.String)>("MotionPaths", $r27);

     label59:
        goto label01;

     label60:
        return;
    }

    public void setState(androidx.constraintlayout.core.motion.MotionWidget)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionWidget;

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: int getX()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: int getY()>();

        $f1 = (float) $i1;

        $i2 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: int getWidth()>();

        $f2 = (float) $i2;

        $i3 = virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: int getHeight()>();

        $f3 = (float) $i3;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: void setBounds(float,float,float,float)>($f0, $f1, $f2, $f3);

        virtualinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: void applyParameters(androidx.constraintlayout.core.motion.MotionWidget)>(r1);

        return;
    }

    public void setState(androidx.constraintlayout.core.motion.utils.Rect, androidx.constraintlayout.core.motion.MotionWidget, int, float)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0;
        androidx.constraintlayout.core.motion.utils.Rect r1;
        androidx.constraintlayout.core.motion.MotionWidget r2;
        int i0, $i1, $i2, $i3, $i4;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: androidx.constraintlayout.core.motion.utils.Rect;

        r2 := @parameter1: androidx.constraintlayout.core.motion.MotionWidget;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        $i1 = r1.<androidx.constraintlayout.core.motion.utils.Rect: int left>;

        $f1 = (float) $i1;

        $i2 = r1.<androidx.constraintlayout.core.motion.utils.Rect: int top>;

        $f2 = (float) $i2;

        $i3 = virtualinvoke r1.<androidx.constraintlayout.core.motion.utils.Rect: int width()>();

        $f3 = (float) $i3;

        $i4 = virtualinvoke r1.<androidx.constraintlayout.core.motion.utils.Rect: int height()>();

        $f4 = (float) $i4;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: void setBounds(float,float,float,float)>($f1, $f2, $f3, $f4);

        virtualinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: void applyParameters(androidx.constraintlayout.core.motion.MotionWidget)>(r2);

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotX> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float mPivotY> = #NaNF;

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $f5 = f0 + 90.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation> = $f5;

        goto label3;

     label2:
        $f6 = f0 - 90.0F;

        r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: float rotation> = $f6;

     label3:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.constraintlayout.core.motion.MotionConstrainedPoint r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.MotionConstrainedPoint;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.constraintlayout.core.motion.MotionConstrainedPoint) r1;

        $i0 = virtualinvoke r0.<androidx.constraintlayout.core.motion.MotionConstrainedPoint: int compareTo(androidx.constraintlayout.core.motion.MotionConstrainedPoint)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "position";

        $r0[1] = "x";

        $r0[2] = "y";

        $r0[3] = "width";

        $r0[4] = "height";

        $r0[5] = "pathRotate";

        <androidx.constraintlayout.core.motion.MotionConstrainedPoint: java.lang.String[] names> = $r0;

        return;
    }

