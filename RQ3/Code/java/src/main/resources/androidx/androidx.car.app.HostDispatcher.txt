androidx.car.app.HostDispatcher
<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost>
<androidx.car.app.HostDispatcher: androidx.car.app.IAppHost mAppHost>
<androidx.car.app.HostDispatcher: androidx.car.app.constraints.IConstraintHost mConstraintHost>
<androidx.car.app.HostDispatcher: androidx.car.app.navigation.INavigationHost mNavigationHost>
    public void <init>()
    {
        androidx.car.app.HostDispatcher r0;

        r0 := @this: androidx.car.app.HostDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object dispatchForResult(java.lang.String, java.lang.String, androidx.car.app.HostCall) throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        java.lang.String r1, r2;
        androidx.car.app.HostCall r3;
        androidx.car.app.utils.RemoteUtils$RemoteCall $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.car.app.HostDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.car.app.HostCall;

        $r4 = dynamicinvoke "call" <androidx.car.app.utils.RemoteUtils$RemoteCall (androidx.car.app.HostDispatcher,java.lang.String,java.lang.String,androidx.car.app.HostCall)>(r0, r1, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.HostDispatcher: java.lang.Object lambda$dispatchForResult$0(java.lang.String,java.lang.String,androidx.car.app.HostCall)>, methodtype: java.lang.Object __METHODTYPE__());

        $r5 = staticinvoke <androidx.car.app.utils.RemoteUtils: java.lang.Object dispatchCallToHostForResult(java.lang.String,androidx.car.app.utils.RemoteUtils$RemoteCall)>(r2, $r4);

        return $r5;
    }

    public void dispatch(java.lang.String, java.lang.String, androidx.car.app.HostCall)
    {
        androidx.car.app.HostDispatcher r0;
        java.lang.String r1, r2;
        androidx.car.app.HostCall r3;
        androidx.car.app.utils.RemoteUtils$RemoteCall $r4;

        r0 := @this: androidx.car.app.HostDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.car.app.HostCall;

        $r4 = dynamicinvoke "call" <androidx.car.app.utils.RemoteUtils$RemoteCall (androidx.car.app.HostDispatcher,java.lang.String,java.lang.String,androidx.car.app.HostCall)>(r0, r1, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.HostDispatcher: java.lang.Object lambda$dispatch$1(java.lang.String,java.lang.String,androidx.car.app.HostCall)>, methodtype: java.lang.Object __METHODTYPE__());

        staticinvoke <androidx.car.app.utils.RemoteUtils: void dispatchCallToHost(java.lang.String,androidx.car.app.utils.RemoteUtils$RemoteCall)>(r2, $r4);

        return;
    }

    public void setCarHost(androidx.car.app.ICarHost)
    {
        androidx.car.app.HostDispatcher r0;
        androidx.car.app.ICarHost r1;

        r0 := @this: androidx.car.app.HostDispatcher;

        r1 := @parameter0: androidx.car.app.ICarHost;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        virtualinvoke r0.<androidx.car.app.HostDispatcher: void resetHosts()>();

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost> = r1;

        return;
    }

    void resetHosts()
    {
        androidx.car.app.HostDispatcher r0;

        r0 := @this: androidx.car.app.HostDispatcher;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost> = null;

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.IAppHost mAppHost> = null;

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.navigation.INavigationHost mNavigationHost> = null;

        return;
    }

    android.os.IInterface getHost(java.lang.String) throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        java.lang.String r1, r2, $r20;
        androidx.car.app.ICarHost $r3;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        androidx.car.app.navigation.INavigationHost $r4, $r7;
        androidx.car.app.utils.RemoteUtils$RemoteCall $r5, $r9, $r13;
        java.lang.Object $r6, $r10, $r14, r21;
        androidx.car.app.constraints.IConstraintHost $r8, $r11;
        androidx.car.app.IAppHost $r12, $r15;
        java.lang.StringBuilder $r18, $r19, r22;
        byte b1;
        java.security.InvalidParameterException r23;
        android.os.IInterface r24;

        r0 := @this: androidx.car.app.HostDispatcher;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost>;

        if $r3 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Dispatch", "Host is not bound when attempting to retrieve host service");

        return null;

     label01:
        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1606703562: goto label03;
            case 96801: goto label02;
            case 98260: goto label05;
            case 1862666772: goto label04;
            default: goto label06;
        };

     label02:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("app");

        if $z2 == 0 goto label06;

        b1 = 0;

        goto label06;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("constraints");

        if $z3 == 0 goto label06;

        b1 = 1;

        goto label06;

     label04:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("navigation");

        if $z0 == 0 goto label06;

        b1 = 2;

        goto label06;

     label05:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("car");

        if $z1 == 0 goto label06;

        b1 = 3;

     label06:
        tableswitch(b1)
        {
            case 0: goto label07;
            case 1: goto label09;
            case 2: goto label11;
            case 3: goto label13;
            default: goto label14;
        };

     label07:
        $r12 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.IAppHost mAppHost>;

        if $r12 != null goto label08;

        $r13 = dynamicinvoke "call" <androidx.car.app.utils.RemoteUtils$RemoteCall (androidx.car.app.HostDispatcher)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.HostDispatcher: androidx.car.app.IAppHost lambda$getHost$2()>, methodtype: androidx.car.app.IAppHost __METHODTYPE__());

        $r14 = staticinvoke <androidx.car.app.utils.RemoteUtils: java.lang.Object dispatchCallToHostForResult(java.lang.String,androidx.car.app.utils.RemoteUtils$RemoteCall)>("getHost(App)", $r13);

        $r15 = (androidx.car.app.IAppHost) $r14;

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.IAppHost mAppHost> = $r15;

     label08:
        r21 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.IAppHost mAppHost>;

        goto label15;

     label09:
        $r8 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.constraints.IConstraintHost mConstraintHost>;

        if $r8 != null goto label10;

        $r9 = dynamicinvoke "call" <androidx.car.app.utils.RemoteUtils$RemoteCall (androidx.car.app.HostDispatcher)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.HostDispatcher: androidx.car.app.constraints.IConstraintHost lambda$getHost$3()>, methodtype: androidx.car.app.constraints.IConstraintHost __METHODTYPE__());

        $r10 = staticinvoke <androidx.car.app.utils.RemoteUtils: java.lang.Object dispatchCallToHostForResult(java.lang.String,androidx.car.app.utils.RemoteUtils$RemoteCall)>("getHost(Constraints)", $r9);

        $r11 = (androidx.car.app.constraints.IConstraintHost) $r10;

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.constraints.IConstraintHost mConstraintHost> = $r11;

     label10:
        r21 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.constraints.IConstraintHost mConstraintHost>;

        goto label15;

     label11:
        $r4 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.navigation.INavigationHost mNavigationHost>;

        if $r4 != null goto label12;

        $r5 = dynamicinvoke "call" <androidx.car.app.utils.RemoteUtils$RemoteCall (androidx.car.app.HostDispatcher)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.HostDispatcher: androidx.car.app.navigation.INavigationHost lambda$getHost$4()>, methodtype: androidx.car.app.navigation.INavigationHost __METHODTYPE__());

        $r6 = staticinvoke <androidx.car.app.utils.RemoteUtils: java.lang.Object dispatchCallToHostForResult(java.lang.String,androidx.car.app.utils.RemoteUtils$RemoteCall)>("getHost(Navigation)", $r5);

        $r7 = (androidx.car.app.navigation.INavigationHost) $r6;

        r0.<androidx.car.app.HostDispatcher: androidx.car.app.navigation.INavigationHost mNavigationHost> = $r7;

     label12:
        r21 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.navigation.INavigationHost mNavigationHost>;

        goto label15;

     label13:
        r21 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost>;

        goto label15;

     label14:
        r23 = new java.security.InvalidParameterException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host type: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r20);

        throw r23;

     label15:
        r24 = (android.os.IInterface) r21;

        return r24;
    }

    private androidx.car.app.navigation.INavigationHost lambda$getHost$4() throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        androidx.car.app.ICarHost $r1, $r3;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        androidx.car.app.navigation.INavigationHost $r5;

        r0 := @this: androidx.car.app.HostDispatcher;

        $r1 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost>;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $r3 = (androidx.car.app.ICarHost) $r2;

        $r4 = interfaceinvoke $r3.<androidx.car.app.ICarHost: android.os.IBinder getHost(java.lang.String)>("navigation");

        $r5 = staticinvoke <androidx.car.app.navigation.INavigationHost$Stub: androidx.car.app.navigation.INavigationHost asInterface(android.os.IBinder)>($r4);

        return $r5;
    }

    private androidx.car.app.constraints.IConstraintHost lambda$getHost$3() throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        androidx.car.app.ICarHost $r1, $r3;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        androidx.car.app.constraints.IConstraintHost $r5;

        r0 := @this: androidx.car.app.HostDispatcher;

        $r1 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost>;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $r3 = (androidx.car.app.ICarHost) $r2;

        $r4 = interfaceinvoke $r3.<androidx.car.app.ICarHost: android.os.IBinder getHost(java.lang.String)>("constraints");

        $r5 = staticinvoke <androidx.car.app.constraints.IConstraintHost$Stub: androidx.car.app.constraints.IConstraintHost asInterface(android.os.IBinder)>($r4);

        return $r5;
    }

    private androidx.car.app.IAppHost lambda$getHost$2() throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        androidx.car.app.ICarHost $r1, $r3;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        androidx.car.app.IAppHost $r5;

        r0 := @this: androidx.car.app.HostDispatcher;

        $r1 = r0.<androidx.car.app.HostDispatcher: androidx.car.app.ICarHost mCarHost>;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $r3 = (androidx.car.app.ICarHost) $r2;

        $r4 = interfaceinvoke $r3.<androidx.car.app.ICarHost: android.os.IBinder getHost(java.lang.String)>("app");

        $r5 = staticinvoke <androidx.car.app.IAppHost$Stub: androidx.car.app.IAppHost asInterface(android.os.IBinder)>($r4);

        return $r5;
    }

    private java.lang.Object lambda$dispatch$1(java.lang.String, java.lang.String, androidx.car.app.HostCall) throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        java.lang.String r1, r2, $r9;
        androidx.car.app.HostCall r3;
        android.os.IInterface r4;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: androidx.car.app.HostDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.car.app.HostCall;

        r4 = virtualinvoke r0.<androidx.car.app.HostDispatcher: android.os.IInterface getHost(java.lang.String)>(r1);

        if r4 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve host while dispatching call ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Dispatch", $r9);

        return null;

     label1:
        interfaceinvoke r3.<androidx.car.app.HostCall: java.lang.Object dispatch(java.lang.Object)>(r4);

        return null;
    }

    private java.lang.Object lambda$dispatchForResult$0(java.lang.String, java.lang.String, androidx.car.app.HostCall) throws android.os.RemoteException
    {
        androidx.car.app.HostDispatcher r0;
        java.lang.String r1, r2, $r9;
        androidx.car.app.HostCall r3;
        android.os.IInterface r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: androidx.car.app.HostDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.car.app.HostCall;

        r4 = virtualinvoke r0.<androidx.car.app.HostDispatcher: android.os.IInterface getHost(java.lang.String)>(r1);

        if r4 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve host while dispatching call ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Dispatch", $r9);

        return null;

     label1:
        $r5 = interfaceinvoke r3.<androidx.car.app.HostCall: java.lang.Object dispatch(java.lang.Object)>(r4);

        return $r5;
    }

