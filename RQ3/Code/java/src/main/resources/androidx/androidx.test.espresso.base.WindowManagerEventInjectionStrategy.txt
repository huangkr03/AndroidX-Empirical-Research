androidx.test.espresso.base.WindowManagerEventInjectionStrategy
<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.String TAG>
<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: boolean initComplete>
<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.Object wmInstance>
<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputKeyEventMethod>
<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputMotionEventMethod>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/espresso/base/WindowManagerEventInjectionStrategy;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.String TAG> = $r1;

        return;
    }

    void <init>()
    {
        int $i0, $i1;
        androidx.test.espresso.base.WindowManagerEventInjectionStrategy r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.base.WindowManagerEventInjectionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 7 goto label2;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 > 15 goto label2;

        z0 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z0, "Unsupported API level.");

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    void initialize()
    {
        boolean $z0;
        java.lang.String $r0, r18, r24, r29, r32;
        java.lang.Object $r1, $r2, $r6, r22;
        java.lang.Class $r3, $r7, r17, r23, r28, r31;
        java.lang.reflect.Method $r4, $r5, $r8, $r9, r20, r26;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, r34, r35, r37, r39, r40, r42, r48, r49, r50, r51;
        androidx.test.espresso.base.WindowManagerEventInjectionStrategy r16;
        java.lang.Class[] r19, r25, r30, r33;
        java.lang.Object[] r21, r27;
        java.lang.RuntimeException r36, r38, r41, r43, r44, r45, r46, r47;

        r16 := @this: androidx.test.espresso.base.WindowManagerEventInjectionStrategy;

        $z0 = r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: boolean initComplete>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r0 = <androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, "Trying to create injection strategy.");

        r17 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.ServiceManager");

        r18 = "getService";

        r19 = newarray (java.lang.Class)[1];

     label02:
        r19[0] = class "Ljava/lang/String;";

        r20 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r18, r19);

        virtualinvoke r20.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        r21 = newarray (java.lang.Object)[1];

     label03:
        r21[0] = "window";

        r22 = virtualinvoke r20.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r17, r21);

        r23 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.view.IWindowManager$Stub");

        r24 = "asInterface";

        r25 = newarray (java.lang.Class)[1];

     label04:
        r25[0] = class "Landroid/os/IBinder;";

        r26 = virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r24, r25);

        virtualinvoke r26.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        r27 = newarray (java.lang.Object)[1];

        r27[0] = r22;

        $r1 = virtualinvoke r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r23, r27);

        r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.Object wmInstance> = $r1;

        $r2 = r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.Object wmInstance>;

        r28 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        r29 = "injectPointerEvent";

        r30 = newarray (java.lang.Class)[2];

     label05:
        r30[0] = class "Landroid/view/MotionEvent;";

     label06:
        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        r30[1] = $r3;

        $r4 = virtualinvoke r28.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r29, r30);

        r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputMotionEventMethod> = $r4;

        $r5 = r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputMotionEventMethod>;

        virtualinvoke $r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r6 = r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.Object wmInstance>;

        r31 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        r32 = "injectKeyEvent";

        r33 = newarray (java.lang.Class)[2];

     label07:
        r33[0] = class "Landroid/view/KeyEvent;";

     label08:
        goto label15;

     label09:
        $r12 := @caughtexception;

        r34 = $r12;

        throw r34;

     label10:
        $r11 := @caughtexception;

        r35 = $r11;

        r44 = new java.lang.RuntimeException;

        r36 = r44;

        specialinvoke r44.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r35);

        r48 = (java.lang.Throwable) r36;

        throw r48;

     label11:
        $r13 := @caughtexception;

        r37 = $r13;

        r45 = new java.lang.RuntimeException;

        r38 = r45;

        specialinvoke r45.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r37);

        r49 = (java.lang.Throwable) r38;

        throw r49;

     label12:
        $r15 := @caughtexception;

        r39 = $r15;

        throw r39;

     label13:
        $r14 := @caughtexception;

        r40 = $r14;

        r46 = new java.lang.RuntimeException;

        r41 = r46;

        specialinvoke r46.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r40);

        r50 = (java.lang.Throwable) r41;

        throw r50;

     label14:
        $r10 := @caughtexception;

        r42 = $r10;

        r47 = new java.lang.RuntimeException;

        r43 = r47;

        specialinvoke r47.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r42);

        r51 = (java.lang.Throwable) r43;

        throw r51;

     label15:
        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

        r33[1] = $r7;

        $r8 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r32, r33);

        r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputKeyEventMethod> = $r8;

        $r9 = r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputKeyEventMethod>;

        virtualinvoke $r9.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        r16.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: boolean initComplete> = 1;

        return;

     label16:
        nop;

        catch java.lang.ClassNotFoundException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label01 to label02 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label13;
        catch java.lang.NoSuchMethodException from label01 to label02 with label14;
        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.ClassNotFoundException from label02 to label03 with label10;
        catch java.lang.IllegalAccessException from label02 to label03 with label11;
        catch java.lang.IllegalArgumentException from label02 to label03 with label12;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label13;
        catch java.lang.NoSuchMethodException from label02 to label03 with label14;
        catch java.lang.SecurityException from label02 to label03 with label09;
        catch java.lang.ClassNotFoundException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label12;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label13;
        catch java.lang.NoSuchMethodException from label03 to label04 with label14;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.ClassNotFoundException from label04 to label05 with label10;
        catch java.lang.IllegalAccessException from label04 to label05 with label11;
        catch java.lang.IllegalArgumentException from label04 to label05 with label12;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label13;
        catch java.lang.NoSuchMethodException from label04 to label05 with label14;
        catch java.lang.SecurityException from label04 to label05 with label09;
        catch java.lang.ClassNotFoundException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label12;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
        catch java.lang.NoSuchMethodException from label05 to label06 with label14;
        catch java.lang.SecurityException from label05 to label06 with label09;
        catch java.lang.ClassNotFoundException from label06 to label07 with label10;
        catch java.lang.IllegalAccessException from label06 to label07 with label11;
        catch java.lang.IllegalArgumentException from label06 to label07 with label12;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label13;
        catch java.lang.NoSuchMethodException from label06 to label07 with label14;
        catch java.lang.SecurityException from label06 to label07 with label09;
        catch java.lang.ClassNotFoundException from label07 to label08 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label12;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label13;
        catch java.lang.NoSuchMethodException from label07 to label08 with label14;
        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.lang.ClassNotFoundException from label15 to label16 with label10;
        catch java.lang.IllegalAccessException from label15 to label16 with label11;
        catch java.lang.IllegalArgumentException from label15 to label16 with label12;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label13;
        catch java.lang.NoSuchMethodException from label15 to label16 with label14;
        catch java.lang.SecurityException from label15 to label16 with label09;
    }

    public boolean injectKeyEvent(android.view.KeyEvent) throws androidx.test.espresso.InjectEventSecurityException
    {
        java.lang.reflect.Method r0;
        java.lang.Object[] r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3, r11;
        java.lang.Throwable $r5, $r6, $r7, $r8, r12, r14, r17, r19, r20, r25, r26;
        boolean $z0, z1;
        androidx.test.espresso.base.WindowManagerEventInjectionStrategy r9;
        android.view.KeyEvent r10;
        java.lang.RuntimeException r13, r15, r21, r22;
        androidx.test.espresso.InjectEventSecurityException r16, r18, r23, r24;
        java.lang.reflect.InvocationTargetException r27;

        r9 := @this: androidx.test.espresso.base.WindowManagerEventInjectionStrategy;

        r10 := @parameter0: android.view.KeyEvent;

     label1:
        r0 = r9.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputKeyEventMethod>;

        r11 = r9.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.Object wmInstance>;

        r1 = newarray (java.lang.Object)[2];

        r1[0] = r10;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r1[1] = $r2;

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r11, r1);

        $r4 = (java.lang.Boolean) $r3;

        z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        return z1;

     label4:
        $r6 := @caughtexception;

        r12 = $r6;

        r21 = new java.lang.RuntimeException;

        r13 = r21;

        specialinvoke r21.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        r25 = (java.lang.Throwable) r13;

        throw r25;

     label5:
        $r8 := @caughtexception;

        r14 = $r8;

        throw r14;

     label6:
        r22 = new java.lang.RuntimeException;

        r15 = r22;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19);

        r26 = (java.lang.Throwable) r15;

        throw r26;

     label7:
        r23 = new androidx.test.espresso.InjectEventSecurityException;

        r16 = r23;

        specialinvoke r23.<androidx.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r20);

        throw r16;

     label8:
        $r7 := @caughtexception;

        r17 = $r7;

        r24 = new androidx.test.espresso.InjectEventSecurityException;

        r18 = r24;

        specialinvoke r24.<androidx.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r17);

        throw r18;

     label9:
        $r5 := @caughtexception;

        r19 = $r5;

        r27 = (java.lang.reflect.InvocationTargetException) r19;

        r20 = virtualinvoke r27.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z0 = r20 instanceof java.lang.SecurityException;

        if $z0 == 0 goto label6;

        goto label7;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label9;
        catch java.lang.SecurityException from label1 to label2 with label8;
        catch java.lang.IllegalAccessException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label9;
        catch java.lang.SecurityException from label2 to label3 with label8;
    }

    public boolean injectMotionEvent(android.view.MotionEvent, boolean) throws androidx.test.espresso.InjectEventSecurityException
    {
        boolean z0, $z1, z2;
        java.lang.reflect.Method r0;
        java.lang.Object[] r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3, r11;
        java.lang.Throwable $r5, $r6, $r7, $r8, r12, r14, r17, r19, r20, r25, r26;
        androidx.test.espresso.base.WindowManagerEventInjectionStrategy r9;
        android.view.MotionEvent r10;
        java.lang.RuntimeException r13, r15, r21, r22;
        androidx.test.espresso.InjectEventSecurityException r16, r18, r23, r24;
        java.lang.reflect.InvocationTargetException r27;

        r9 := @this: androidx.test.espresso.base.WindowManagerEventInjectionStrategy;

        r10 := @parameter0: android.view.MotionEvent;

        z0 := @parameter1: boolean;

     label1:
        r0 = r9.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.reflect.Method injectInputMotionEventMethod>;

        r11 = r9.<androidx.test.espresso.base.WindowManagerEventInjectionStrategy: java.lang.Object wmInstance>;

        r1 = newarray (java.lang.Object)[2];

        r1[0] = r10;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r1[1] = $r2;

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r11, r1);

        $r4 = (java.lang.Boolean) $r3;

        z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        return z2;

     label4:
        $r6 := @caughtexception;

        r12 = $r6;

        r21 = new java.lang.RuntimeException;

        r13 = r21;

        specialinvoke r21.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        r25 = (java.lang.Throwable) r13;

        throw r25;

     label5:
        $r7 := @caughtexception;

        r14 = $r7;

        throw r14;

     label6:
        r22 = new java.lang.RuntimeException;

        r15 = r22;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19);

        r26 = (java.lang.Throwable) r15;

        throw r26;

     label7:
        r23 = new androidx.test.espresso.InjectEventSecurityException;

        r16 = r23;

        specialinvoke r23.<androidx.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r20);

        throw r16;

     label8:
        $r8 := @caughtexception;

        r17 = $r8;

        r24 = new androidx.test.espresso.InjectEventSecurityException;

        r18 = r24;

        specialinvoke r24.<androidx.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r17);

        throw r18;

     label9:
        $r5 := @caughtexception;

        r19 = $r5;

        r27 = (java.lang.reflect.InvocationTargetException) r19;

        r20 = virtualinvoke r27.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z1 = r20 instanceof java.lang.SecurityException;

        if $z1 == 0 goto label6;

        goto label7;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label9;
        catch java.lang.SecurityException from label1 to label2 with label8;
        catch java.lang.IllegalAccessException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label9;
        catch java.lang.SecurityException from label2 to label3 with label8;
    }

