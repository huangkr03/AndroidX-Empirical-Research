androidx.slice.Slice
<androidx.slice.Slice: java.lang.String HINTS>
<androidx.slice.Slice: java.lang.String ITEMS>
<androidx.slice.Slice: java.lang.String URI>
<androidx.slice.Slice: java.lang.String SPEC_TYPE>
<androidx.slice.Slice: java.lang.String SPEC_REVISION>
<androidx.slice.Slice: androidx.slice.SliceSpec mSpec>
<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>
<androidx.slice.Slice: java.lang.String[] mHints>
<androidx.slice.Slice: java.lang.String mUri>
    void <init>(java.util.ArrayList, java.lang.String[], android.net.Uri, androidx.slice.SliceSpec)
    {
        androidx.slice.Slice r0;
        java.util.ArrayList r1;
        java.lang.String[] r2, $r6;
        android.net.Uri r3;
        androidx.slice.SliceSpec r4;
        androidx.slice.SliceItem[] $r5, $r7, $r9;
        int $i0;
        java.lang.Object[] $r8;
        java.lang.String $r10;

        r0 := @this: androidx.slice.Slice;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: androidx.slice.SliceSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = newarray (androidx.slice.SliceItem)[0];

        r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems> = $r5;

        $r6 = newarray (java.lang.String)[0];

        r0.<androidx.slice.Slice: java.lang.String[] mHints> = $r6;

        r0.<androidx.slice.Slice: java.lang.String[] mHints> = r2;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r7 = newarray (androidx.slice.SliceItem)[$i0];

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (androidx.slice.SliceItem[]) $r8;

        r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems> = $r9;

        $r10 = virtualinvoke r3.<android.net.Uri: java.lang.String toString()>();

        r0.<androidx.slice.Slice: java.lang.String mUri> = $r10;

        r0.<androidx.slice.Slice: androidx.slice.SliceSpec mSpec> = r4;

        return;
    }

    public void <init>()
    {
        androidx.slice.Slice r0;
        androidx.slice.SliceItem[] $r1;
        java.lang.String[] $r2;

        r0 := @this: androidx.slice.Slice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (androidx.slice.SliceItem)[0];

        r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems> = $r1;

        $r2 = newarray (java.lang.String)[0];

        r0.<androidx.slice.Slice: java.lang.String[] mHints> = $r2;

        return;
    }

    public void <init>(android.os.Bundle)
    {
        androidx.slice.Slice r0;
        android.os.Bundle r1, $r15;
        android.os.Parcelable[] r2;
        androidx.slice.SliceItem[] $r3, $r6, $r7, $r16;
        java.lang.String[] $r4, $r5;
        int $i0, $i1, $i2, i3;
        android.os.Parcelable $r8, $r12, $r14;
        java.lang.String $r9, $r10;
        boolean $z0, $z1;
        androidx.slice.SliceItem $r13;
        androidx.slice.SliceSpec $r17;

        r0 := @this: androidx.slice.Slice;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (androidx.slice.SliceItem)[0];

        r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems> = $r3;

        $r4 = newarray (java.lang.String)[0];

        r0.<androidx.slice.Slice: java.lang.String[] mHints> = $r4;

        $r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("hints");

        r0.<androidx.slice.Slice: java.lang.String[] mHints> = $r5;

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>("items");

        $i0 = lengthof r2;

        $r6 = newarray (androidx.slice.SliceItem)[$i0];

        r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems> = $r6;

        i3 = 0;

     label1:
        $r7 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $i1 = lengthof $r7;

        if i3 >= $i1 goto label3;

        $r12 = r2[i3];

        $z1 = $r12 instanceof android.os.Bundle;

        if $z1 == 0 goto label2;

        $r16 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $r13 = new androidx.slice.SliceItem;

        $r14 = r2[i3];

        $r15 = (android.os.Bundle) $r14;

        specialinvoke $r13.<androidx.slice.SliceItem: void <init>(android.os.Bundle)>($r15);

        $r16[i3] = $r13;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r8 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("uri");

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        r0.<androidx.slice.Slice: java.lang.String mUri> = $r9;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("type");

        if $z0 == 0 goto label4;

        $r17 = new androidx.slice.SliceSpec;

        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("type");

        $i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("revision");

        specialinvoke $r17.<androidx.slice.SliceSpec: void <init>(java.lang.String,int)>($r10, $i2);

        goto label5;

     label4:
        $r17 = null;

     label5:
        r0.<androidx.slice.Slice: androidx.slice.SliceSpec mSpec> = $r17;

        return;
    }

    public android.os.Bundle toBundle()
    {
        androidx.slice.Slice r0;
        android.os.Bundle r1, $r15, r16;
        java.lang.Object[] r2;
        java.lang.String[] $r4;
        androidx.slice.SliceItem[] $r5, $r6, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.String $r7, $r11;
        android.net.Uri $r8;
        androidx.slice.SliceSpec $r9, $r10, $r12;
        androidx.slice.SliceItem $r14;
        android.os.Parcelable[] r17;

        r0 := @this: androidx.slice.Slice;

        r16 = new android.os.Bundle;

        specialinvoke r16.<android.os.Bundle: void <init>()>();

        r1 = r16;

        $r4 = r0.<androidx.slice.Slice: java.lang.String[] mHints>;

        virtualinvoke r1.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("hints", $r4);

        $r5 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $i0 = lengthof $r5;

        r2 = newarray (android.os.Parcelable)[$i0];

        i3 = 0;

     label1:
        $r6 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $i1 = lengthof $r6;

        if i3 >= $i1 goto label2;

        $r13 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $r14 = $r13[i3];

        $r15 = virtualinvoke $r14.<androidx.slice.SliceItem: android.os.Bundle toBundle()>();

        r2[i3] = $r15;

        i3 = i3 + 1;

        goto label1;

     label2:
        r17 = (android.os.Parcelable[]) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>("items", r17);

        $r7 = r0.<androidx.slice.Slice: java.lang.String mUri>;

        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("uri", $r8);

        $r9 = r0.<androidx.slice.Slice: androidx.slice.SliceSpec mSpec>;

        if $r9 == null goto label3;

        $r10 = r0.<androidx.slice.Slice: androidx.slice.SliceSpec mSpec>;

        $r11 = virtualinvoke $r10.<androidx.slice.SliceSpec: java.lang.String getType()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("type", $r11);

        $r12 = r0.<androidx.slice.Slice: androidx.slice.SliceSpec mSpec>;

        $i2 = virtualinvoke $r12.<androidx.slice.SliceSpec: int getRevision()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("revision", $i2);

     label3:
        return r1;
    }

    public androidx.slice.SliceSpec getSpec()
    {
        androidx.slice.Slice r0;
        androidx.slice.SliceSpec $r1;

        r0 := @this: androidx.slice.Slice;

        $r1 = r0.<androidx.slice.Slice: androidx.slice.SliceSpec mSpec>;

        return $r1;
    }

    public android.net.Uri getUri()
    {
        androidx.slice.Slice r0;
        java.lang.String $r1;
        android.net.Uri $r2;

        r0 := @this: androidx.slice.Slice;

        $r1 = r0.<androidx.slice.Slice: java.lang.String mUri>;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        return $r2;
    }

    public java.util.List getItems()
    {
        androidx.slice.Slice r0;
        androidx.slice.SliceItem[] $r1;
        java.util.List $r2;

        r0 := @this: androidx.slice.Slice;

        $r1 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.util.List getHints()
    {
        androidx.slice.Slice r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        r0 := @this: androidx.slice.Slice;

        $r1 = r0.<androidx.slice.Slice: java.lang.String[] mHints>;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public boolean hasHint(java.lang.String)
    {
        androidx.slice.Slice r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: androidx.slice.Slice;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.slice.Slice: java.lang.String[] mHints>;

        $z0 = staticinvoke <androidx.slice.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r2, r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        androidx.slice.Slice r0;
        java.lang.String $r1;

        r0 := @this: androidx.slice.Slice;

        $r1 = virtualinvoke r0.<androidx.slice.Slice: java.lang.String toString(java.lang.String)>("");

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        androidx.slice.Slice r0;
        java.lang.String r1, r3, $r10, $r18, $r20;
        java.lang.StringBuilder r2, $r5, $r13, $r14, $r15;
        androidx.slice.SliceItem r4;
        java.lang.String[] $r8, $r22;
        int $i0, i1, $i2;
        androidx.slice.SliceItem[] $r19, $r24;

        r0 := @this: androidx.slice.Slice;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slice ");

        $r8 = r0.<androidx.slice.Slice: java.lang.String[] mHints>;

        $i0 = lengthof $r8;

        if $i0 <= 0 goto label1;

        $r22 = r0.<androidx.slice.Slice: java.lang.String[] mHints>;

        staticinvoke <androidx.slice.Slice: void appendHints(java.lang.StringBuilder,java.lang.String[])>(r2, $r22);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r10 = r0.<androidx.slice.Slice: java.lang.String mUri>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] {\n");

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = 0;

     label2:
        $r24 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        $i2 = lengthof $r24;

        if i1 >= $i2 goto label3;

        $r19 = r0.<androidx.slice.Slice: androidx.slice.SliceItem[] mItems>;

        r4 = $r19[i1];

        $r20 = virtualinvoke r4.<androidx.slice.SliceItem: java.lang.String toString(java.lang.String)>(r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        i1 = i1 + 1;

        goto label2;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public static void appendHints(java.lang.StringBuilder, java.lang.String[])
    {
        java.lang.StringBuilder r0;
        java.lang.String[] r1;
        int i0, $i1, $i2, i3;
        java.lang.String $r3, $r6;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String[];

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 != 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $i2 = lengthof r1;

        i0 = $i2 - 1;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r6 = r1[i3];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        i3 = i3 + 1;

        goto label3;

     label4:
        $r3 = r1[i0];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        return;
    }

    public static androidx.slice.Slice bindSlice(android.content.Context, android.net.Uri, java.util.Set)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.util.Set r2;
        int $i0;
        androidx.slice.Slice $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.util.Set;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r4 = staticinvoke <androidx.slice.Slice: androidx.slice.Slice callBindSlice(android.content.Context,android.net.Uri,java.util.Set)>(r0, r1, r2);

        return $r4;

     label1:
        $r3 = staticinvoke <androidx.slice.compat.SliceProviderCompat: androidx.slice.Slice bindSlice(android.content.Context,android.net.Uri,java.util.Set)>(r0, r1, r2);

        return $r3;
    }

    private static androidx.slice.Slice callBindSlice(android.content.Context, android.net.Uri, java.util.Set)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.util.Set r2, $r5;
        java.lang.Object $r3;
        android.app.slice.SliceManager $r4;
        android.app.slice.Slice $r6;
        androidx.slice.Slice $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.util.Set;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/slice/SliceManager;");

        $r4 = (android.app.slice.SliceManager) $r3;

        $r5 = staticinvoke <androidx.slice.SliceConvert: java.util.Set unwrap(java.util.Set)>(r2);

        $r6 = virtualinvoke $r4.<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.Set)>(r1, $r5);

        $r7 = staticinvoke <androidx.slice.SliceConvert: androidx.slice.Slice wrap(android.app.slice.Slice,android.content.Context)>($r6, r0);

        return $r7;
    }

    static boolean isValidIcon(android.support.v4.graphics.drawable.IconCompat)
    {
        android.support.v4.graphics.drawable.IconCompat r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: android.support.v4.graphics.drawable.IconCompat;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = r0.<android.support.v4.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label2;

        $i1 = virtualinvoke r0.<android.support.v4.graphics.drawable.IconCompat: int getResId()>();

        if $i1 != 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add icon, invalid resource id: ");

        $i2 = virtualinvoke r0.<android.support.v4.graphics.drawable.IconCompat: int getResId()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return 1;
    }

androidx.slice.Slice$Builder
<androidx.slice.Slice$Builder: android.net.Uri mUri>
<androidx.slice.Slice$Builder: java.util.ArrayList mItems>
<androidx.slice.Slice$Builder: java.util.ArrayList mHints>
<androidx.slice.Slice$Builder: androidx.slice.SliceSpec mSpec>
<androidx.slice.Slice$Builder: int mChildId>
    public void <init>(android.net.Uri)
    {
        androidx.slice.Slice$Builder r0;
        android.net.Uri r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.slice.Slice$Builder: java.util.ArrayList mHints> = $r3;

        r0.<androidx.slice.Slice$Builder: android.net.Uri mUri> = r1;

        return;
    }

    public void <init>(androidx.slice.Slice$Builder)
    {
        androidx.slice.Slice$Builder r0, r1;
        java.util.ArrayList $r2, $r3;
        android.net.Uri $r4;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: androidx.slice.Slice$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.slice.Slice$Builder: java.util.ArrayList mHints> = $r3;

        $r4 = specialinvoke r1.<androidx.slice.Slice$Builder: android.net.Uri getChildUri()>();

        r0.<androidx.slice.Slice$Builder: android.net.Uri mUri> = $r4;

        return;
    }

    private android.net.Uri getChildUri()
    {
        androidx.slice.Slice$Builder r0;
        android.net.Uri $r1, $r6;
        android.net.Uri$Builder $r2, $r3, $r5;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: androidx.slice.Slice$Builder;

        $r1 = r0.<androidx.slice.Slice$Builder: android.net.Uri mUri>;

        $r2 = virtualinvoke $r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("_gen");

        $i0 = r0.<androidx.slice.Slice$Builder: int mChildId>;

        $i1 = $i0 + 1;

        r0.<androidx.slice.Slice$Builder: int mChildId> = $i1;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r5 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r6;
    }

    public androidx.slice.Slice$Builder setSpec(androidx.slice.SliceSpec)
    {
        androidx.slice.Slice$Builder r0;
        androidx.slice.SliceSpec r1;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: androidx.slice.SliceSpec;

        r0.<androidx.slice.Slice$Builder: androidx.slice.SliceSpec mSpec> = r1;

        return r0;
    }

    public transient androidx.slice.Slice$Builder addHints(java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        java.lang.String[] r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mHints>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        return r0;
    }

    public androidx.slice.Slice$Builder addHints(java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r5;
        java.util.List r1;
        int $i0;
        java.lang.String[] $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        $r5 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.lang.String[])>($r4);

        return $r5;
    }

    public androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice)
    {
        androidx.slice.Slice$Builder r0, $r3;
        androidx.slice.Slice r1;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: androidx.slice.Slice;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice,java.lang.String)>(r1, null);

        return $r3;
    }

    public androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice, java.lang.String)
    {
        androidx.slice.Slice$Builder r0;
        androidx.slice.Slice r1;
        java.lang.String r2;
        androidx.slice.SliceItem $r4;
        java.util.ArrayList $r5;
        java.util.List $r6, $r7;
        int $i0;
        java.lang.String[] $r8, $r10;
        java.lang.Object[] $r9;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: androidx.slice.Slice;

        r2 := @parameter1: java.lang.String;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r4 = new androidx.slice.SliceItem;

        $r6 = virtualinvoke r1.<androidx.slice.Slice: java.util.List getHints()>();

        $r7 = virtualinvoke r1.<androidx.slice.Slice: java.util.List getHints()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = newarray (java.lang.String)[$i0];

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (java.lang.String[]) $r9;

        specialinvoke $r4.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>(r1, "slice", r2, $r10);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return r0;
    }

    public androidx.slice.Slice$Builder addAction(android.app.PendingIntent, androidx.slice.Slice, java.lang.String)
    {
        androidx.slice.Slice$Builder r0;
        android.app.PendingIntent r1;
        androidx.slice.Slice r2;
        java.lang.String r3;
        java.lang.String[] r4, $r9;
        java.util.List $r7, $r8;
        int $i0;
        java.lang.Object[] $r10;
        androidx.slice.SliceItem $r11;
        java.util.ArrayList $r12;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: androidx.slice.Slice;

        r3 := @parameter2: java.lang.String;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = virtualinvoke r2.<androidx.slice.Slice: java.util.List getHints()>();

        $r8 = virtualinvoke r2.<androidx.slice.Slice: java.util.List getHints()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = newarray (java.lang.String)[$i0];

        $r10 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        r4 = (java.lang.String[]) $r10;

        $r12 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r11 = new androidx.slice.SliceItem;

        specialinvoke $r11.<androidx.slice.SliceItem: void <init>(android.app.PendingIntent,androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, "action", r3, r4);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        return r0;
    }

    public androidx.slice.Slice$Builder addAction(androidx.slice.SliceItem$ActionHandler, androidx.slice.Slice, java.lang.String)
    {
        androidx.slice.Slice$Builder r0;
        androidx.slice.SliceItem$ActionHandler r1;
        androidx.slice.Slice r2;
        java.lang.String r3;
        java.lang.String[] r4, $r8;
        java.util.List $r6, $r7;
        int $i0;
        java.lang.Object[] $r9;
        androidx.slice.SliceItem $r10;
        java.util.ArrayList $r11;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: androidx.slice.SliceItem$ActionHandler;

        r2 := @parameter1: androidx.slice.Slice;

        r3 := @parameter2: java.lang.String;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = virtualinvoke r2.<androidx.slice.Slice: java.util.List getHints()>();

        $r7 = virtualinvoke r2.<androidx.slice.Slice: java.util.List getHints()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = newarray (java.lang.String)[$i0];

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r4 = (java.lang.String[]) $r9;

        $r11 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r10 = new androidx.slice.SliceItem;

        specialinvoke $r10.<androidx.slice.SliceItem: void <init>(androidx.slice.SliceItem$ActionHandler,androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, "action", r3, r4);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        return r0;
    }

    public transient androidx.slice.Slice$Builder addText(java.lang.CharSequence, java.lang.String, java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        java.lang.CharSequence r1;
        java.lang.String r2;
        java.lang.String[] r3;
        androidx.slice.SliceItem $r4;
        java.util.ArrayList $r5;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r4 = new androidx.slice.SliceItem;

        specialinvoke $r4.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>(r1, "text", r2, r3);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return r0;
    }

    public androidx.slice.Slice$Builder addText(java.lang.CharSequence, java.lang.String, java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r7;
        java.lang.CharSequence r1;
        java.lang.String r2;
        java.util.List r3;
        int $i0;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r7 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.lang.String[])>(r1, r2, $r6);

        return $r7;
    }

    public transient androidx.slice.Slice$Builder addIcon(android.support.v4.graphics.drawable.IconCompat, java.lang.String, java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.String r2;
        java.lang.String[] r3;
        boolean $z0;
        androidx.slice.SliceItem $r5;
        java.util.ArrayList $r6;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: android.support.v4.graphics.drawable.IconCompat;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = staticinvoke <androidx.slice.Slice: boolean isValidIcon(android.support.v4.graphics.drawable.IconCompat)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r5 = new androidx.slice.SliceItem;

        specialinvoke $r5.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>(r1, "image", r2, r3);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label1:
        return r0;
    }

    public androidx.slice.Slice$Builder addIcon(android.support.v4.graphics.drawable.IconCompat, java.lang.String, java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r8;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.String r2;
        java.util.List r3;
        boolean $z0;
        int $i0;
        java.lang.String[] $r5, $r7;
        java.lang.Object[] $r6;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: android.support.v4.graphics.drawable.IconCompat;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = staticinvoke <androidx.slice.Slice: boolean isValidIcon(android.support.v4.graphics.drawable.IconCompat)>(r1);

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        $r8 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addIcon(android.support.v4.graphics.drawable.IconCompat,java.lang.String,java.lang.String[])>(r1, r2, $r7);

        return $r8;

     label1:
        return r0;
    }

    public androidx.slice.Slice$Builder addRemoteInput(android.app.RemoteInput, java.lang.String, java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r8;
        android.app.RemoteInput r1;
        java.lang.String r2;
        java.util.List r3;
        int $i0;
        java.lang.String[] $r5, $r7;
        java.lang.Object[] $r6;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: android.app.RemoteInput;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        $r8 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addRemoteInput(android.app.RemoteInput,java.lang.String,java.lang.String[])>(r1, r2, $r7);

        return $r8;
    }

    public transient androidx.slice.Slice$Builder addRemoteInput(android.app.RemoteInput, java.lang.String, java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        android.app.RemoteInput r1;
        java.lang.String r2;
        java.lang.String[] r3;
        androidx.slice.SliceItem $r5;
        java.util.ArrayList $r6;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: android.app.RemoteInput;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r5 = new androidx.slice.SliceItem;

        specialinvoke $r5.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>(r1, "input", r2, r3);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return r0;
    }

    public transient androidx.slice.Slice$Builder addInt(int, java.lang.String, java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        int i0;
        java.lang.String r1;
        java.lang.String[] r2;
        androidx.slice.SliceItem $r3;
        java.util.ArrayList $r4;
        java.lang.Integer $r5;

        r0 := @this: androidx.slice.Slice$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r4 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r3 = new androidx.slice.SliceItem;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r3.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>($r5, "int", r1, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public androidx.slice.Slice$Builder addInt(int, java.lang.String, java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r6;
        int i0, $i1;
        java.lang.String r1;
        java.util.List r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: androidx.slice.Slice$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i1];

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $r6 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addInt(int,java.lang.String,java.lang.String[])>(i0, r1, $r5);

        return $r6;
    }

    public transient androidx.slice.Slice$Builder addLong(long, java.lang.String, java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        long l0;
        java.lang.String r1;
        java.lang.String[] r2;
        androidx.slice.SliceItem $r3;
        java.util.ArrayList $r4;
        java.lang.Long $r5;

        r0 := @this: androidx.slice.Slice$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r4 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r3 = new androidx.slice.SliceItem;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke $r3.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>($r5, "long", r1, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public androidx.slice.Slice$Builder addLong(long, java.lang.String, java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r6;
        long l0;
        java.lang.String r1;
        java.util.List r2;
        int $i1;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: androidx.slice.Slice$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i1];

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $r6 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addLong(long,java.lang.String,java.lang.String[])>(l0, r1, $r5);

        return $r6;
    }

    public transient androidx.slice.Slice$Builder addTimestamp(long, java.lang.String, java.lang.String[])
    {
        androidx.slice.Slice$Builder r0;
        long l0;
        java.lang.String r1;
        java.lang.String[] r2;
        androidx.slice.SliceItem $r3;
        java.util.ArrayList $r4;
        java.lang.Long $r5;

        r0 := @this: androidx.slice.Slice$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r4 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r3 = new androidx.slice.SliceItem;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke $r3.<androidx.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>($r5, "long", r1, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public androidx.slice.Slice$Builder addTimestamp(long, java.lang.String, java.util.List)
    {
        androidx.slice.Slice$Builder r0, $r6;
        long l0;
        java.lang.String r1;
        java.util.List r2;
        int $i1;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: androidx.slice.Slice$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i1];

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $r6 = virtualinvoke r0.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addTimestamp(long,java.lang.String,java.lang.String[])>(l0, r1, $r5);

        return $r6;
    }

    public androidx.slice.Slice$Builder addItem(androidx.slice.SliceItem)
    {
        androidx.slice.Slice$Builder r0;
        androidx.slice.SliceItem r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.slice.Slice$Builder;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.slice.Slice build()
    {
        androidx.slice.Slice$Builder r0;
        androidx.slice.Slice $r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0;
        java.lang.String[] $r5, $r9;
        java.lang.Object[] $r6;
        androidx.slice.SliceSpec $r7;
        android.net.Uri $r8;

        r0 := @this: androidx.slice.Slice$Builder;

        $r1 = new androidx.slice.Slice;

        $r3 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mItems>;

        $r4 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mHints>;

        $r2 = r0.<androidx.slice.Slice$Builder: java.util.ArrayList mHints>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r9 = (java.lang.String[]) $r6;

        $r8 = r0.<androidx.slice.Slice$Builder: android.net.Uri mUri>;

        $r7 = r0.<androidx.slice.Slice$Builder: androidx.slice.SliceSpec mSpec>;

        specialinvoke $r1.<androidx.slice.Slice: void <init>(java.util.ArrayList,java.lang.String[],android.net.Uri,androidx.slice.SliceSpec)>($r3, $r9, $r8, $r7);

        return $r1;
    }

androidx.slice.Slice$SliceHint
