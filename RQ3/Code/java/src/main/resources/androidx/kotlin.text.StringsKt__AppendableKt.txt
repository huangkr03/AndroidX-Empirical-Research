kotlin.text.StringsKt__AppendableKt
    public void <init>()
    {
        kotlin.text.StringsKt__AppendableKt $r0;

        $r0 := @this: kotlin.text.StringsKt__AppendableKt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final transient java.lang.Appendable append(java.lang.Appendable, java.lang.CharSequence[])
    {
        java.lang.Appendable $r0;
        java.lang.CharSequence[] $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Appendable;

        $r1 := @parameter1: java.lang.CharSequence[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static final void appendElement(java.lang.Appendable, java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Appendable $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        java.lang.Character $r4;
        char $c0;
        java.lang.String $r5;

        $r0 := @parameter0: java.lang.Appendable;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $r2 == null goto label1;

        $r1 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r3 = (java.lang.CharSequence) $r1;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return;

     label1:
        if $r1 != null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = $r1 instanceof java.lang.CharSequence;

     label3:
        if $z0 == 0 goto label4;

        $r3 = (java.lang.CharSequence) $r1;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return;

     label4:
        $z0 = $r1 instanceof java.lang.Character;

        if $z0 == 0 goto label5;

        $r4 = (java.lang.Character) $r1;

        $c0 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

        return;

     label5:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        return;
    }

    private static final java.lang.Appendable appendLine(java.lang.Appendable)
    {
        java.lang.Appendable $r0;

        $r0 := @parameter0: java.lang.Appendable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.Appendable appendLine(java.lang.Appendable, char)
    {
        java.lang.Appendable $r0;
        char $c0;

        $r0 := @parameter0: java.lang.Appendable;

        $c0 := @parameter1: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.Appendable appendLine(java.lang.Appendable, java.lang.CharSequence)
    {
        java.lang.Appendable $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: java.lang.Appendable;

        $r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    public static final java.lang.Appendable appendRange(java.lang.Appendable, java.lang.CharSequence, int, int)
    {
        int $i0, $i1;
        java.lang.Appendable $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: java.lang.Appendable;

        $r1 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r0, "null cannot be cast to non-null type T of kotlin.text.StringsKt__AppendableKt.appendRange");

        return $r0;
    }

