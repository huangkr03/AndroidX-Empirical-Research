androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor
<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl mBackgroundExecutor>
<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: android.os.Handler mMainThreadHandler>
<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: java.util.concurrent.Executor mMainThreadExecutor>
    public void <init>(java.util.concurrent.Executor)
    {
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor r0;
        java.util.concurrent.Executor r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1 $r4;
        androidx.work.impl.utils.SerialExecutorImpl $r5;

        r0 := @this: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: android.os.Handler mMainThreadHandler> = $r2;

        $r4 = new androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1;

        specialinvoke $r4.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: void <init>(androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor)>(r0);

        r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: java.util.concurrent.Executor mMainThreadExecutor> = $r4;

        $r5 = new androidx.work.impl.utils.SerialExecutorImpl;

        specialinvoke $r5.<androidx.work.impl.utils.SerialExecutorImpl: void <init>(java.util.concurrent.Executor)>(r1);

        r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl mBackgroundExecutor> = $r5;

        return;
    }

    public java.util.concurrent.Executor getMainThreadExecutor()
    {
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor;

        $r1 = r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: java.util.concurrent.Executor mMainThreadExecutor>;

        return $r1;
    }

    public androidx.work.impl.utils.SerialExecutorImpl getSerialTaskExecutor()
    {
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor r0;
        androidx.work.impl.utils.SerialExecutorImpl $r1;

        r0 := @this: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor;

        $r1 = r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl mBackgroundExecutor>;

        return $r1;
    }

    public volatile androidx.work.impl.utils.taskexecutor.SerialExecutor getSerialTaskExecutor()
    {
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor r0;
        androidx.work.impl.utils.SerialExecutorImpl $r1;

        r0 := @this: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor;

        $r1 = virtualinvoke r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl getSerialTaskExecutor()>();

        return $r1;
    }

androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1
<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor this$0>
    void <init>(androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor)
    {
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1 r0;
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor r1;

        r0 := @this: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1;

        r1 := @parameter0: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor;

        r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1 r0;
        java.lang.Runnable r1;
        androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor $r2;
        android.os.Handler $r3;

        r0 := @this: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor this$0>;

        $r3 = $r2.<androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: android.os.Handler mMainThreadHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return;
    }

