io.grpc.internal.ReflectionLongAdderCounter
<io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method addMethod>
<io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Constructor defaultConstructor>
<io.grpc.internal.ReflectionLongAdderCounter: java.lang.RuntimeException initializationException>
<io.grpc.internal.ReflectionLongAdderCounter: java.util.logging.Logger logger>
<io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object[] one>
<io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method sumMethod>
<io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object instance>
    static void <clinit>()
    {
        java.lang.Class $r0, $r4;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r5, $r6, $r7, $r8;
        java.lang.reflect.Constructor[] $r9;
        int $i0, $i1, $i2;
        java.lang.reflect.Constructor $r10;
        java.lang.Throwable $r11;
        java.util.logging.Level $r12;
        java.lang.RuntimeException $r13;
        java.lang.Object[] $r14;
        java.lang.Long $r15;

        $r0 = class "Lio/grpc/internal/ReflectionLongAdderCounter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.internal.ReflectionLongAdderCounter: java.util.logging.Logger logger> = $r2;

        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.util.concurrent.atomic.LongAdder");

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        $r3[0] = $r4;

     label01:
        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("add", $r3);

     label02:
        $r6 = $r5;

        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r7 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("sum", $r3);

     label04:
        $r8 = $r7;

     label05:
        $r9 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

     label06:
        $i0 = lengthof $r9;

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label11;

        $r10 = $r9[$i1];

     label08:
        $r3 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

     label09:
        $i2 = lengthof $r3;

        if $i2 != 0 goto label10;

        goto label12;

     label10:
        $i1 = $i1 + 1;

        goto label07;

     label11:
        $r10 = null;

     label12:
        $r11 = null;

        goto label17;

     label13:
        $r11 := @caughtexception;

        goto label16;

     label14:
        $r11 := @caughtexception;

        $r7 = null;

        goto label16;

     label15:
        $r11 := @caughtexception;

        $r5 = null;

        $r7 = null;

     label16:
        $r2 = <io.grpc.internal.ReflectionLongAdderCounter: java.util.logging.Logger logger>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r2.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "io.grpc.internal.ReflectionLongAdderCounter", "<clinit>", "LongAdder can not be found via reflection, this is normal for JDK7 and below", $r11);

        $r10 = null;

        $r6 = $r5;

        $r8 = $r7;

     label17:
        if $r11 != null goto label18;

        if $r10 == null goto label18;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Constructor defaultConstructor> = $r10;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method addMethod> = $r6;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method sumMethod> = $r8;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.RuntimeException initializationException> = null;

        goto label19;

     label18:
        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Constructor defaultConstructor> = null;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method addMethod> = null;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method sumMethod> = null;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.RuntimeException initializationException> = $r13;

     label19:
        $r14 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        $r14[0] = $r15;

        <io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object[] one> = $r14;

        return;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
    }

    void <init>()
    {
        io.grpc.internal.ReflectionLongAdderCounter $r0;
        java.lang.Object $r1;
        java.lang.RuntimeException $r2, r8;
        java.lang.reflect.Constructor $r3;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5, $r6, $r7;

        $r0 := @this: io.grpc.internal.ReflectionLongAdderCounter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <io.grpc.internal.ReflectionLongAdderCounter: java.lang.RuntimeException initializationException>;

        if $r2 != null goto label6;

        $r3 = <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Constructor defaultConstructor>;

        $r4 = newarray (java.lang.Object)[0];

     label1:
        $r1 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label2:
        $r0.<io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object instance> = $r1;

        return;

     label3:
        $r5 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        $r5 = (java.lang.Throwable) r8;

        throw $r5;

     label4:
        $r6 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        $r5 = (java.lang.Throwable) r8;

        throw $r5;

     label5:
        $r7 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        $r5 = (java.lang.Throwable) r8;

        throw $r5;

     label6:
        $r5 = (java.lang.Throwable) $r2;

        throw $r5;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    static boolean isAvailable()
    {
        java.lang.RuntimeException $r0;

        $r0 = <io.grpc.internal.ReflectionLongAdderCounter: java.lang.RuntimeException initializationException>;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void add(long)
    {
        io.grpc.internal.ReflectionLongAdderCounter $r0;
        java.lang.reflect.Method $r1;
        java.lang.Object $r2;
        byte $b0;
        java.lang.Long $r3;
        long $l1;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.RuntimeException r7;

        $r0 := @this: io.grpc.internal.ReflectionLongAdderCounter;

        $l1 := @parameter0: long;

        $r1 = <io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method addMethod>;

        $r2 = $r0.<io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object instance>;

        $b0 = $l1 cmp 1L;

        if $b0 != 0 goto label1;

        $r4 = <io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object[] one>;

        goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4[0] = $r3;

     label2:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r4);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r7 = new java.lang.RuntimeException;

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        $r5 = (java.lang.Throwable) r7;

        throw $r5;

     label5:
        $r6 := @caughtexception;

        r7 = new java.lang.RuntimeException;

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        $r5 = (java.lang.Throwable) r7;

        throw $r5;

        catch java.lang.IllegalAccessException from label2 to label3 with label5;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label4;
    }

