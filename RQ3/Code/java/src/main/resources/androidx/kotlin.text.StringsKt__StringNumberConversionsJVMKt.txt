kotlin.text.StringsKt__StringNumberConversionsJVMKt
    public void <init>()
    {
        kotlin.text.StringsKt__StringNumberConversionsJVMKt $r0;

        $r0 := @this: kotlin.text.StringsKt__StringNumberConversionsJVMKt;

        specialinvoke $r0.<kotlin.text.StringsKt__StringBuilderKt: void <init>()>();

        return;
    }

    private static final java.lang.Object screenFloatValue$StringsKt__StringNumberConversionsJVMKt(java.lang.String, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.String $r1;
        java.lang.Object $r2, $r4;
        kotlin.text.Regex $r3;
        boolean $z0;
        java.lang.Throwable $r5;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = null;

        $r3 = <kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value>;

     label1:
        $z0 = virtualinvoke $r3.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>($r1);

     label2:
        if $z0 == 0 goto label5;

     label3:
        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

     label4:
        $r2 = $r4;

        goto label7;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

     label7:
        return $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    private static final java.math.BigDecimal toBigDecimal(java.lang.String)
    {
        java.lang.String $r0;
        java.math.BigDecimal $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    private static final java.math.BigDecimal toBigDecimal(java.lang.String, java.math.MathContext)
    {
        java.lang.String $r0;
        java.math.MathContext $r1;
        java.math.BigDecimal $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "mathContext");

        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String,java.math.MathContext)>($r0, $r1);

        return $r2;
    }

    public static final java.math.BigDecimal toBigDecimalOrNull(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;
        kotlin.text.Regex $r1;
        java.math.BigDecimal $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value>;

     label1:
        $z0 = virtualinvoke $r1.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>($r0);

     label2:
        if $z0 == 0 goto label5;

        $r2 = new java.math.BigDecimal;

     label3:
        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>($r0);

     label4:
        return $r2;

     label5:
        return null;

     label6:
        $r3 := @caughtexception;

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    public static final java.math.BigDecimal toBigDecimalOrNull(java.lang.String, java.math.MathContext)
    {
        java.math.MathContext $r0;
        boolean $z0;
        java.lang.String $r1;
        kotlin.text.Regex $r2;
        java.math.BigDecimal $r3;
        java.lang.Throwable $r4;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "mathContext");

        $r2 = <kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value>;

     label1:
        $z0 = virtualinvoke $r2.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>($r1);

     label2:
        if $z0 == 0 goto label5;

        $r3 = new java.math.BigDecimal;

     label3:
        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String,java.math.MathContext)>($r1, $r0);

     label4:
        return $r3;

     label5:
        return null;

     label6:
        $r4 := @caughtexception;

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    private static final java.math.BigInteger toBigInteger(java.lang.String)
    {
        java.lang.String $r0;
        java.math.BigInteger $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.math.BigInteger;

        specialinvoke $r1.<java.math.BigInteger: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    private static final java.math.BigInteger toBigInteger(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.math.BigInteger $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.math.BigInteger;

        $i0 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        specialinvoke $r1.<java.math.BigInteger: void <init>(java.lang.String,int)>($r0, $i0);

        return $r1;
    }

    public static final java.math.BigInteger toBigIntegerOrNull(java.lang.String)
    {
        java.math.BigInteger $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String,int)>($r1, 10);

        return $r0;
    }

    public static final java.math.BigInteger toBigIntegerOrNull(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i4;
        char $c3;
        java.math.BigInteger $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = 0;

        lookupswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c3 != 45 goto label4;

        $i2 = 1;

        goto label4;

     label2:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i1 = staticinvoke <kotlin.text.CharsKt: int digitOf(char,int)>($c3, $i0);

        if $i1 >= 0 goto label6;

     label3:
        return null;

     label4:
        if $i2 >= $i1 goto label6;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = staticinvoke <kotlin.text.CharsKt: int digitOf(char,int)>($c3, $i0);

        if $i4 >= 0 goto label5;

        return null;

     label5:
        $i2 = $i2 + 1;

        goto label4;

     label6:
        $r1 = new java.math.BigInteger;

        $i0 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        specialinvoke $r1.<java.math.BigInteger: void <init>(java.lang.String,int)>($r0, $i0);

        return $r1;
    }

    private static final boolean toBoolean(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r0);

        return $z0;
    }

    private static final boolean toBooleanNullable(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r0);

        return $z0;
    }

    private static final byte toByte(java.lang.String)
    {
        byte $b0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b0 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>($r0);

        return $b0;
    }

    private static final byte toByte(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        byte $b1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        $b1 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String,int)>($r0, $i0);

        return $b1;
    }

    private static final double toDouble(java.lang.String)
    {
        java.lang.String $r0;
        double $d0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

        return $d0;
    }

    public static final java.lang.Double toDoubleOrNull(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Double $r1;
        kotlin.text.Regex $r2;
        boolean $z0;
        double $d0;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = null;

        $r2 = <kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value>;

     label1:
        $z0 = virtualinvoke $r2.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>($r0);

     label2:
        if $z0 == 0 goto label3;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label5;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private static final float toFloat(java.lang.String)
    {
        float $f0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r0);

        return $f0;
    }

    public static final java.lang.Float toFloatOrNull(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Float $r1;
        kotlin.text.Regex $r2;
        boolean $z0;
        float $f0;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = null;

        $r2 = <kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value>;

     label1:
        $z0 = virtualinvoke $r2.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>($r0);

     label2:
        if $z0 == 0 goto label3;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r0);

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label5;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private static final int toInt(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i0;
    }

    private static final int toInt(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, $i0);

        return $i0;
    }

    private static final long toLong(java.lang.String)
    {
        java.lang.String $r0;
        long $l0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        return $l0;
    }

    private static final long toLong(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r0, $i0);

        return $l1;
    }

    private static final short toShort(java.lang.String)
    {
        short $s0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $s0 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r0);

        return $s0;
    }

    private static final short toShort(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        short $s1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i0);

        $s1 = staticinvoke <java.lang.Short: short parseShort(java.lang.String,int)>($r0, $i0);

        return $s1;
    }

    private static final java.lang.String toString(byte, int)
    {
        byte $b0;
        int $i1;
        java.lang.String $r0;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($b0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        return $r0;
    }

    private static final java.lang.String toString(int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        return $r0;
    }

    private static final java.lang.String toString(long, int)
    {
        long $l0;
        int $i1;
        java.lang.String $r0;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        return $r0;
    }

    private static final java.lang.String toString(short, int)
    {
        short $s0;
        int $i1;
        java.lang.String $r0;

        $s0 := @parameter0: short;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($s0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        return $r0;
    }

