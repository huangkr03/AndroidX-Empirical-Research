androidx.mediarouter.app.MediaRouteDynamicControllerDialog
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.lang.String TAG>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean DEBUG>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int UPDATE_ROUTES_VIEW_DELAY_MS>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int CONNECTION_TIMEOUT_MS>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int UPDATE_VOLUME_DELAY_MS>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int MSG_UPDATE_ROUTES_VIEW>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int MSG_UPDATE_ROUTE_VOLUME_BY_USER>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int COLOR_WHITE_ON_DARK_BACKGROUND>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int MUTED_VOLUME>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int MIN_UNMUTED_VOLUME>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int BLUR_RADIUS>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback mCallback>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mUngroupableRoutes>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mCreated>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mAttachedToWindow>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: long mLastUpdateTime>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.recyclerview.widget.RecyclerView mRecyclerView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter mAdapter>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener mVolumeChangeListener>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mUnmutedVolumeMap>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsSelectingRoute>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsAnimatingVolumeSliderLayout>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateRoutesViewDeferred>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateMetadataViewsDeferred>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageButton mCloseButton>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.Button mStopCastingButton>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mMetadataBackground>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View mMetadataBlackScrim>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mArtView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mTitleView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mSubtitleView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.lang.String mTitlePlaceholder>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback mControllerCallback>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconBitmap>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.net.Uri mArtIconUri>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mArtIconIsLoaded>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int mArtIconBackgroundColor>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mEnableGroupVolumeUX>
    public void <init>(android.content.Context)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        android.content.Context r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void <init>(android.content.Context,int)>(r1, 0);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        int i0, $i1;
        android.content.Context $r1, $r8, $r9, r17, r18;
        androidx.mediarouter.media.MediaRouteSelector $r2;
        java.util.ArrayList $r3, $r4, $r5, $r6;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1 $r7;
        androidx.mediarouter.media.MediaRouter $r10, $r12, $r15;
        boolean $z0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback $r11;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r13;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback $r14;
        android.support.v4.media.session.MediaSessionCompat$Token $r16;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r17 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.content.Context createThemedDialogContext(android.content.Context,int,boolean)>(r17, i0, 0);

        r18 = $r1;

        $i1 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: int createThemedDialogStyle(android.content.Context)>(r18);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDialog: void <init>(android.content.Context,int)>($r1, $i1);

        $r2 = <androidx.mediarouter.media.MediaRouteSelector: androidx.mediarouter.media.MediaRouteSelector EMPTY>;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mUngroupableRoutes> = $r6;

        $r7 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1;

        specialinvoke $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler> = $r7;

        $r8 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context getContext()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext> = $r8;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r10 = staticinvoke <androidx.mediarouter.media.MediaRouter: androidx.mediarouter.media.MediaRouter getInstance(android.content.Context)>($r9);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter> = $r10;

        $z0 = staticinvoke <androidx.mediarouter.media.MediaRouter: boolean isGroupVolumeUxEnabled()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mEnableGroupVolumeUX> = $z0;

        $r11 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        specialinvoke $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback mCallback> = $r11;

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r13 = virtualinvoke $r12.<androidx.mediarouter.media.MediaRouter: androidx.mediarouter.media.MediaRouter$RouteInfo getSelectedRoute()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute> = $r13;

        $r14 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback;

        specialinvoke $r14.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback mControllerCallback> = $r14;

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r16 = virtualinvoke $r15.<androidx.mediarouter.media.MediaRouter: android.support.v4.media.session.MediaSessionCompat$Token getMediaSessionToken()>();

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)>($r16);

        return;
    }

    private void setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        android.support.v4.media.MediaMetadataCompat r2;
        android.support.v4.media.session.MediaControllerCompat $r3, $r4, $r7, $r8, $r11;
        boolean $z0;
        android.content.Context $r5;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback $r6, $r10;
        android.support.v4.media.MediaDescriptionCompat $r12;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        if $r3 == null goto label1;

        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback mControllerCallback>;

        virtualinvoke $r11.<android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r10);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController> = null;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        $z0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mAttachedToWindow>;

        if $z0 != 0 goto label3;

        return;

     label3:
        $r4 = new android.support.v4.media.session.MediaControllerCompat;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r5, r1);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController> = $r4;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback mControllerCallback>;

        virtualinvoke $r7.<android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r6);

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        r2 = virtualinvoke $r8.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.MediaMetadataCompat getMetadata()>();

        if r2 != null goto label4;

        $r12 = null;

        goto label5;

     label4:
        $r12 = virtualinvoke r2.<android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaDescriptionCompat getDescription()>();

     label5:
        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription> = $r12;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void reloadIconIfNeeded()>();

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateMetadataViews()>();

        return;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getMediaSession()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        android.support.v4.media.session.MediaControllerCompat $r1, $r2;
        android.support.v4.media.session.MediaSessionCompat$Token $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

     label2:
        return $r3;
    }

    public androidx.mediarouter.media.MediaRouteSelector getRouteSelector()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        androidx.mediarouter.media.MediaRouteSelector $r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        return $r1;
    }

    public void setRouteSelector(androidx.mediarouter.media.MediaRouteSelector)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        androidx.mediarouter.media.MediaRouteSelector r1, $r2;
        boolean $z0, $z1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback $r3, $r5;
        androidx.mediarouter.media.MediaRouter $r4, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteSelector;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("selector must not be null");

        throw $r7;

     label1:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        $z0 = virtualinvoke $r2.<androidx.mediarouter.media.MediaRouteSelector: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector> = r1;

        $z1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mAttachedToWindow>;

        if $z1 == 0 goto label2;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r4.<androidx.mediarouter.media.MediaRouter: void removeCallback(androidx.mediarouter.media.MediaRouter$Callback)>($r3);

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r6.<androidx.mediarouter.media.MediaRouter: void addCallback(androidx.mediarouter.media.MediaRouteSelector,androidx.mediarouter.media.MediaRouter$Callback,int)>(r1, $r5, 1);

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutes()>();

     label2:
        return;
    }

    public void onFilterRoutes(java.util.List)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        java.util.List r1;
        int $i0, i1;
        java.lang.Object $r2;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3;
        boolean $z0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r2;

        $z0 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean onFilterRoute(androidx.mediarouter.media.MediaRouter$RouteInfo)>($r3);

        if $z0 != 0 goto label2;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public boolean onFilterRoute(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, $r3;
        boolean $z0, $z1, $z2, $z3;
        androidx.mediarouter.media.MediaRouteSelector $r2;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $z0 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isDefaultOrBluetooth()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        $z2 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean matchesSelector(androidx.mediarouter.media.MediaRouteSelector)>($r2);

        if $z2 == 0 goto label1;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        if $r3 == r1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        android.os.Bundle r1;
        android.content.res.Resources r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.Context $r3, $r20, $r36;
        android.view.View $r4, $r9, $r15, $r25, $r27, $r28, $r30, $r33;
        android.widget.ImageButton $r5, $r6, $r8;
        android.widget.Button $r10, $r11, $r13;
        androidx.recyclerview.widget.RecyclerView $r16, $r18, $r21;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r17, r40;
        android.widget.ImageView $r26, $r29;
        android.widget.TextView $r31, $r32, $r34, $r35;
        java.lang.String $r37;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2 r38;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3 r39;
        androidx.recyclerview.widget.LinearLayoutManager r41;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener r42;
        java.util.HashMap r43, r44;
        android.app.Dialog r45;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)>(r1);

        $i0 = <androidx.mediarouter.R$layout: int mr_cast_dialog>;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setContentView(int)>($i0);

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r45 = (android.app.Dialog) r0;

        staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: void setDialogBackgroundColor(android.content.Context,android.app.Dialog)>($r3, r45);

        $i1 = <androidx.mediarouter.R$id: int mr_cast_close_button>;

        $r4 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i1);

        $r5 = (android.widget.ImageButton) $r4;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageButton mCloseButton> = $r5;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageButton mCloseButton>;

        virtualinvoke $r6.<android.widget.ImageButton: void setColorFilter(int)>(-1);

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageButton mCloseButton>;

        r38 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2;

        specialinvoke r38.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        virtualinvoke $r8.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r38);

        $i2 = <androidx.mediarouter.R$id: int mr_cast_stop_button>;

        $r9 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i2);

        $r10 = (android.widget.Button) $r9;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.Button mStopCastingButton> = $r10;

        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.Button mStopCastingButton>;

        virtualinvoke $r11.<android.widget.Button: void setTextColor(int)>(-1);

        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.Button mStopCastingButton>;

        r39 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3;

        specialinvoke r39.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        virtualinvoke $r13.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r39);

        r40 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        specialinvoke r40.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter mAdapter> = r40;

        $i3 = <androidx.mediarouter.R$id: int mr_cast_list>;

        $r15 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i3);

        $r16 = (androidx.recyclerview.widget.RecyclerView) $r15;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.recyclerview.widget.RecyclerView mRecyclerView> = $r16;

        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r17 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter mAdapter>;

        virtualinvoke $r18.<androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>($r17);

        $r21 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r41 = new androidx.recyclerview.widget.LinearLayoutManager;

        $r20 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        specialinvoke r41.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context)>($r20);

        virtualinvoke $r21.<androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)>(r41);

        r42 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener;

        specialinvoke r42.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener mVolumeChangeListener> = r42;

        r43 = new java.util.HashMap;

        specialinvoke r43.<java.util.HashMap: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap> = r43;

        r44 = new java.util.HashMap;

        specialinvoke r44.<java.util.HashMap: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mUnmutedVolumeMap> = r44;

        $i4 = <androidx.mediarouter.R$id: int mr_cast_meta_background>;

        $r25 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i4);

        $r26 = (android.widget.ImageView) $r25;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mMetadataBackground> = $r26;

        $i5 = <androidx.mediarouter.R$id: int mr_cast_meta_black_scrim>;

        $r27 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i5);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View mMetadataBlackScrim> = $r27;

        $i6 = <androidx.mediarouter.R$id: int mr_cast_meta_art>;

        $r28 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i6);

        $r29 = (android.widget.ImageView) $r28;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mArtView> = $r29;

        $i7 = <androidx.mediarouter.R$id: int mr_cast_meta_title>;

        $r30 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i7);

        $r31 = (android.widget.TextView) $r30;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mTitleView> = $r31;

        $r32 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mTitleView>;

        virtualinvoke $r32.<android.widget.TextView: void setTextColor(int)>(-1);

        $i8 = <androidx.mediarouter.R$id: int mr_cast_meta_subtitle>;

        $r33 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View findViewById(int)>($i8);

        $r34 = (android.widget.TextView) $r33;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mSubtitleView> = $r34;

        $r35 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mSubtitleView>;

        virtualinvoke $r35.<android.widget.TextView: void setTextColor(int)>(-1);

        $r36 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r2 = virtualinvoke $r36.<android.content.Context: android.content.res.Resources getResources()>();

        $i9 = <androidx.mediarouter.R$string: int mr_cast_dialog_title_view_placeholder>;

        $r37 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i9);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.lang.String mTitlePlaceholder> = $r37;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mCreated> = 1;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateLayout()>();

        return;
    }

    void updateLayout()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        int i0, i1;
        android.content.Context $r1, $r2;
        android.view.Window $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        i0 = staticinvoke <androidx.mediarouter.app.MediaRouteDialogHelper: int getDialogWidthForDynamicGroup(android.content.Context)>($r1);

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        i1 = staticinvoke <androidx.mediarouter.app.MediaRouteDialogHelper: int getDialogHeight(android.content.Context)>($r2);

        $r3 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setLayout(int,int)>(i0, i1);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconBitmap> = null;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.net.Uri mArtIconUri> = null;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void reloadIconIfNeeded()>();

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateMetadataViews()>();

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

        return;
    }

    public void onAttachedToWindow()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback $r1;
        androidx.mediarouter.media.MediaRouteSelector $r2;
        androidx.mediarouter.media.MediaRouter $r3, $r4;
        android.support.v4.media.session.MediaSessionCompat$Token $r5;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDialog: void onAttachedToWindow()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mAttachedToWindow> = 1;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r3.<androidx.mediarouter.media.MediaRouter: void addCallback(androidx.mediarouter.media.MediaRouteSelector,androidx.mediarouter.media.MediaRouter$Callback,int)>($r2, $r1, 1);

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutes()>();

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r5 = virtualinvoke $r4.<androidx.mediarouter.media.MediaRouter: android.support.v4.media.session.MediaSessionCompat$Token getMediaSessionToken()>();

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)>($r5);

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback $r1;
        androidx.mediarouter.media.MediaRouter $r2;
        android.os.Handler $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDialog: void onDetachedFromWindow()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mAttachedToWindow> = 0;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRouter: void removeCallback(androidx.mediarouter.media.MediaRouter$Callback)>($r1);

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)>(null);

        return;
    }

    static boolean isBitmapRecycled(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        boolean $z0, $z1;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void reloadIconIfNeeded()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        android.graphics.Bitmap r1, r3, $r19, $r21;
        android.net.Uri r2, r4, $r20, $r22;
        android.support.v4.media.MediaDescriptionCompat $r5, $r6, $r7, $r8;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r18;
        java.lang.Void[] $r15;
        boolean $z1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        if $r5 != null goto label01;

        $r19 = null;

        goto label02;

     label01:
        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        $r19 = virtualinvoke $r6.<android.support.v4.media.MediaDescriptionCompat: android.graphics.Bitmap getIconBitmap()>();

     label02:
        r1 = $r19;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        if $r7 != null goto label03;

        $r20 = null;

        goto label04;

     label03:
        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        $r20 = virtualinvoke $r8.<android.support.v4.media.MediaDescriptionCompat: android.net.Uri getIconUri()>();

     label04:
        r2 = $r20;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        if $r9 != null goto label05;

        $r21 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconBitmap>;

        goto label06;

     label05:
        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        $r21 = virtualinvoke $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap getIconBitmap()>();

     label06:
        r3 = $r21;

        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        if $r11 != null goto label07;

        $r22 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.net.Uri mArtIconUri>;

        goto label08;

     label07:
        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        $r22 = virtualinvoke $r12.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri getIconUri()>();

     label08:
        r4 = $r22;

        if r3 != r1 goto label10;

        if r3 != null goto label09;

        $z1 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>(r4, r2);

        if $z1 == 0 goto label10;

     label09:
        return;

     label10:
        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        if $r13 == null goto label11;

        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        virtualinvoke $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: boolean cancel(boolean)>(1);

     label11:
        $r14 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        specialinvoke $r14.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask> = $r14;

        $r16 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask>;

        $r15 = newarray (java.lang.Void)[0];

        virtualinvoke $r16.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.os.AsyncTask execute(java.lang.Object[])>($r15);

        return;
    }

    void clearLoadedBitmap()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mArtIconIsLoaded> = 0;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap> = null;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int mArtIconBackgroundColor> = 0;

        return;
    }

    private boolean shouldDeferUpdateViews()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser>;

        if $r1 != null goto label1;

        $z0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsSelectingRoute>;

        if $z0 != 0 goto label1;

        $z1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsAnimatingVolumeSliderLayout>;

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mCreated>;

        if $z2 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    void updateViewsIfNeeded()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        boolean $z0, $z1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $z0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateRoutesViewDeferred>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

     label1:
        $z1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateMetadataViewsDeferred>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateMetadataViews()>();

     label2:
        return;
    }

    void updateMetadataViews()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.CharSequence r1, $r37, r38, $r39;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r2, $r33;
        android.widget.ImageView $r3, $r5, $r22, $r24, $r25, $r28, $r32;
        android.view.View $r4, $r26;
        android.support.v4.media.MediaDescriptionCompat $r6, $r7, $r8, $r36;
        java.lang.String $r9, $r19;
        android.widget.TextView $r10, $r11, $r12, $r13, $r14;
        java.lang.StringBuilder $r15, $r16, $r18;
        android.graphics.Bitmap $r17, $r20, $r21, $r23, $r27, $r29, $r31, r34, $r35;
        int $i1, $i2;
        android.content.Context $r30;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $z2 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean shouldDeferUpdateViews()>();

        if $z2 == 0 goto label01;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateMetadataViewsDeferred> = 1;

        return;

     label01:
        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateMetadataViewsDeferred> = 0;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $z3 = virtualinvoke $r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isSelected()>();

        if $z3 == 0 goto label02;

        $r33 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $z7 = virtualinvoke $r33.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isDefaultOrBluetooth()>();

        if $z7 == 0 goto label03;

     label02:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void dismiss()>();

     label03:
        $z8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mArtIconIsLoaded>;

        if $z8 == 0 goto label05;

        $r20 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        $z6 = staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean isBitmapRecycled(android.graphics.Bitmap)>($r20);

        if $z6 != 0 goto label05;

        $r21 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        if $r21 == null goto label05;

        $r22 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mArtView>;

        virtualinvoke $r22.<android.widget.ImageView: void setVisibility(int)>(0);

        $r24 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mArtView>;

        $r23 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        virtualinvoke $r24.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r23);

        $r25 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mArtView>;

        $i1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int mArtIconBackgroundColor>;

        virtualinvoke $r25.<android.widget.ImageView: void setBackgroundColor(int)>($i1);

        $r26 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View mMetadataBlackScrim>;

        virtualinvoke $r26.<android.view.View: void setVisibility(int)>(0);

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 17 goto label04;

        $r31 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        $r30 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r34 = staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap blurBitmap(android.graphics.Bitmap,float,android.content.Context)>($r31, 10.0F, $r30);

        $r32 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mMetadataBackground>;

        virtualinvoke $r32.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r34);

        goto label07;

     label04:
        $r28 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mMetadataBackground>;

        $r27 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        $r29 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>($r27);

        virtualinvoke $r28.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r29);

        goto label07;

     label05:
        $r35 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        $z9 = staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean isBitmapRecycled(android.graphics.Bitmap)>($r35);

        if $z9 == 0 goto label06;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t set artwork image with recycled bitmap: ");

        $r17 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", $r19);

     label06:
        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mArtView>;

        virtualinvoke $r3.<android.widget.ImageView: void setVisibility(int)>(8);

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.view.View mMetadataBlackScrim>;

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(8);

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.ImageView mMetadataBackground>;

        virtualinvoke $r5.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(null);

     label07:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void clearLoadedBitmap()>();

        $r36 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        if $r36 != null goto label08;

        $r37 = null;

        goto label09;

     label08:
        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        $r37 = virtualinvoke $r6.<android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getTitle()>();

     label09:
        r38 = $r37;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r38);

        if $z4 != 0 goto label10;

        $z10 = 1;

        goto label11;

     label10:
        $z10 = 0;

     label11:
        z0 = $z10;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        if $r7 != null goto label12;

        $r39 = null;

        goto label13;

     label12:
        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        $r39 = virtualinvoke $r8.<android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getSubtitle()>();

     label13:
        r1 = $r39;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z5 != 0 goto label14;

        $z11 = 1;

        goto label15;

     label14:
        $z11 = 0;

     label15:
        z1 = $z11;

        if z0 == 0 goto label16;

        $r14 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mTitleView>;

        virtualinvoke $r14.<android.widget.TextView: void setText(java.lang.CharSequence)>(r38);

        goto label17;

     label16:
        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mTitleView>;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.lang.String mTitlePlaceholder>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r9);

     label17:
        if z1 == 0 goto label18;

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mSubtitleView>;

        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mSubtitleView>;

        virtualinvoke $r13.<android.widget.TextView: void setVisibility(int)>(0);

        goto label19;

     label18:
        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.widget.TextView mSubtitleView>;

        virtualinvoke $r11.<android.widget.TextView: void setVisibility(int)>(8);

     label19:
        return;
    }

    static void setLayoutHeight(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1.<android.view.ViewGroup$LayoutParams: int height> = i0;

        virtualinvoke r0.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return;
    }

    java.util.List getCurrentGroupableRoutes()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        java.util.ArrayList r1, $r5;
        java.util.Iterator r2;
        androidx.mediarouter.media.MediaRouter$RouteInfo r3, $r6, $r10;
        androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState r4;
        androidx.mediarouter.media.MediaRouter$ProviderInfo $r7;
        java.util.List $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $r7 = virtualinvoke $r6.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$ProviderInfo getProvider()>();

        $r8 = virtualinvoke $r7.<androidx.mediarouter.media.MediaRouter$ProviderInfo: java.util.List getRoutes()>();

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r9;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r4 = virtualinvoke $r10.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState getDynamicGroupState(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r3);

        if r4 == null goto label2;

        $z1 = virtualinvoke r4.<androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState: boolean isGroupable()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return r1;
    }

    void updateRoutesView()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        boolean $z0, $z2, $z3, $z4;
        long $l0, $l1, $l2, $l4, $l5, $l6;
        byte $b3;
        android.os.Handler $r1, $r2;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3, $r4;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r5;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $z0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mAttachedToWindow>;

        if $z0 == 0 goto label5;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: long mLastUpdateTime>;

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 300L;

        if $b3 < 0 goto label4;

        $z2 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean shouldDeferUpdateViews()>();

        if $z2 == 0 goto label1;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateRoutesViewDeferred> = 1;

        return;

     label1:
        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mUpdateRoutesViewDeferred> = 0;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $z3 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isSelected()>();

        if $z3 == 0 goto label2;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $z4 = virtualinvoke $r4.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isDefaultOrBluetooth()>();

        if $z4 == 0 goto label3;

     label2:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void dismiss()>();

     label3:
        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: long mLastUpdateTime> = $l6;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter mAdapter>;

        virtualinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void notifyAdapterDataSetChanged()>();

        goto label5;

     label4:
        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        $l4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: long mLastUpdateTime>;

        $l5 = $l4 + 300L;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(1, $l5);

     label5:
        return;
    }

    void updateRoutes()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r0;
        java.util.Iterator r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2, $r7, $r10, $r23;
        androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState r3;
        java.util.List $r4, $r5, $r6, $r8, $r9, $r12, $r13, $r14, $r16, $r18, $r20, $r24, $r25;
        androidx.mediarouter.media.MediaRouter$ProviderInfo $r11;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator $r15, $r17, $r19;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r21;
        java.lang.Object $r22;
        boolean $z1, $z2, $z5;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $r9 = virtualinvoke $r7.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $r11 = virtualinvoke $r10.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$ProviderInfo getProvider()>();

        $r12 = virtualinvoke $r11.<androidx.mediarouter.media.MediaRouter$ProviderInfo: java.util.List getRoutes()>();

        r1 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label5;

        $r22 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r22;

        $r23 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r3 = virtualinvoke $r23.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState getDynamicGroupState(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r2);

        if r3 != null goto label2;

        goto label1;

     label2:
        $z1 = virtualinvoke r3.<androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState: boolean isGroupable()>();

        if $z1 == 0 goto label3;

        $r25 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r2);

     label3:
        $z2 = virtualinvoke r3.<androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState: boolean isTransferable()>();

        if $z2 == 0 goto label4;

        $r24 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>;

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        goto label1;

     label5:
        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void onFilterRoutes(java.util.List)>($r13);

        $r14 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void onFilterRoutes(java.util.List)>($r14);

        $r16 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>;

        $r15 = <androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator sInstance>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r16, $r15);

        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        $r17 = <androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator sInstance>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r18, $r17);

        $r20 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>;

        $r19 = <androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator sInstance>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r20, $r19);

        $r21 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter mAdapter>;

        virtualinvoke $r21.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void updateItems()>();

        return;
    }

    private static android.graphics.Bitmap blurBitmap(android.graphics.Bitmap, float, android.content.Context)
    {
        android.graphics.Bitmap r0, r6;
        float f0;
        android.content.Context r1;
        android.renderscript.RenderScript r2;
        android.renderscript.Allocation r3, r4;
        android.renderscript.ScriptIntrinsicBlur r5;
        android.renderscript.Type $r7;
        android.renderscript.Element $r8;
        android.graphics.Bitmap$Config $r9;

        r0 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        r1 := @parameter2: android.content.Context;

        r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>(r1);

        r3 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>(r2, r0);

        $r7 = virtualinvoke r3.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        r4 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>(r2, $r7);

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>(r2);

        r5 = staticinvoke <android.renderscript.ScriptIntrinsicBlur: android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript,android.renderscript.Element)>(r2, $r8);

        virtualinvoke r5.<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>(f0);

        virtualinvoke r5.<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)>(r3);

        virtualinvoke r5.<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation)>(r4);

        $r9 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r6 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r9, 1);

        virtualinvoke r4.<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>(r6);

        virtualinvoke r3.<android.renderscript.Allocation: void destroy()>();

        virtualinvoke r4.<android.renderscript.Allocation: void destroy()>();

        virtualinvoke r5.<android.renderscript.ScriptIntrinsicBlur: void destroy()>();

        virtualinvoke r2.<android.renderscript.RenderScript: void destroy()>();

        return r6;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaRouteCtrlDialog", 3);

        <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean DEBUG> = $z0;

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1 r0;
        android.os.Message r1;
        int $i0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2, $r4, $r5, $r6;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

        goto label3;

     label2:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser>;

        if $r3 == null goto label3;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser> = null;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateViewsIfNeeded()>();

     label3:
        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2 r0;
        android.view.View r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void dismiss()>();

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3 r0;
        android.view.View r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2, $r4, $r5;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3;
        boolean $z0;
        androidx.mediarouter.media.MediaRouter $r6;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $z0 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isSelected()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        virtualinvoke $r6.<androidx.mediarouter.media.MediaRouter: void unselect(int)>(2);

     label1:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$3: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void dismiss()>();

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: int mBackgroundColor>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;
        android.support.v4.media.MediaDescriptionCompat $r2, $r3, $r4, $r5;
        boolean $z0;
        android.graphics.Bitmap $r7, r8;
        android.net.Uri $r9;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $r2 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        if $r2 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r3 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        $r7 = virtualinvoke $r3.<android.support.v4.media.MediaDescriptionCompat: android.graphics.Bitmap getIconBitmap()>();

     label2:
        r8 = $r7;

        $z0 = staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean isBitmapRecycled(android.graphics.Bitmap)>(r8);

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", "Can\'t fetch the given art bitmap because it\'s already recycled.");

        r8 = null;

     label3:
        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap> = r8;

        $r4 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        if $r4 != null goto label4;

        $r9 = null;

        goto label5;

     label4:
        $r5 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription>;

        $r9 = virtualinvoke $r5.<android.support.v4.media.MediaDescriptionCompat: android.net.Uri getIconUri()>();

     label5:
        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri> = $r9;

        return;
    }

    android.graphics.Bitmap getIconBitmap()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        android.graphics.Bitmap $r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap>;

        return $r1;
    }

    android.net.Uri getIconUri()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        android.net.Uri $r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        return $r1;
    }

    protected void onPreExecute()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void clearLoadedBitmap()>();

        return;
    }

    protected transient android.graphics.Bitmap doInBackground(java.lang.Void[])
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        java.lang.Void[] r1;
        java.lang.Throwable r2, $r27, $r28, $r29, $r30, $r31, $r32, $r38, $r46, $r47, $r48, r52;
        android.graphics.Bitmap $r3, r49;
        android.net.Uri $r4, $r16, $r24, $r35, $r39, $r43;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10;
        androidx.palette.graphics.Palette$Builder $r5, $r6;
        java.util.List $r7, $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9;
        androidx.palette.graphics.Palette$Swatch $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r22, $r23, $r25, $r33, $r34, $r36, $r41, $r42, $r44;
        java.lang.String $r15, $r26, $r37, $r45;
        java.io.InputStream $r17, $r40, r50;
        android.graphics.BitmapFactory$Options $r18, r51;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r19;
        android.content.Context $r20;
        android.content.res.Resources $r21;
        androidx.palette.graphics.Palette r53;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        r1 := @parameter0: java.lang.Void[];

        r49 = null;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap>;

        if $r3 == null goto label01;

        r49 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap>;

        goto label44;

     label01:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        if $r4 == null goto label44;

        r50 = null;

     label02:
        $r16 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $r17 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: java.io.InputStream openInputStreamByScheme(android.net.Uri)>($r16);

        r50 = $r17;

        if $r17 != null goto label08;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open: ");

        $r24 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", $r26);

     label03:
        if r50 == null goto label07;

     label04:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r27 := @caughtexception;

     label07:
        return null;

     label08:
        $r18 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r18.<android.graphics.BitmapFactory$Options: void <init>()>();

        r51 = $r18;

        r51.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r50, null, r51);

        $i2 = r51.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 == 0 goto label09;

        $i3 = r51.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 != 0 goto label14;

     label09:
        if r50 == null goto label13;

     label10:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r31 := @caughtexception;

     label13:
        return null;

     label14:
        virtualinvoke r50.<java.io.InputStream: void reset()>();

     label15:
        goto label22;

     label16:
        $r38 := @caughtexception;

        virtualinvoke r50.<java.io.InputStream: void close()>();

        $r39 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $r40 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: java.io.InputStream openInputStreamByScheme(android.net.Uri)>($r39);

        r50 = $r40;

        if $r40 != null goto label22;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open: ");

        $r43 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", $r45);

     label17:
        if r50 == null goto label21;

     label18:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r28 := @caughtexception;

     label21:
        return null;

     label22:
        r51.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r19 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r20 = $r19.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = <androidx.mediarouter.R$dimen: int mr_cast_meta_art_size>;

        i8 = virtualinvoke $r21.<android.content.res.Resources: int getDimensionPixelSize(int)>($i4);

        $i5 = r51.<android.graphics.BitmapFactory$Options: int outHeight>;

        i9 = $i5 / i8;

        $i6 = staticinvoke <java.lang.Integer: int highestOneBit(int)>(i9);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i6);

        r51.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i7;

        $z1 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: boolean isCancelled()>();

        if $z1 == 0 goto label28;

     label23:
        if r50 == null goto label27;

     label24:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r29 := @caughtexception;

     label27:
        return null;

     label28:
        r49 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r50, null, r51);

     label29:
        if r50 == null goto label44;

     label30:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label31:
        goto label44;

     label32:
        $r46 := @caughtexception;

        goto label44;

     label33:
        $r32 := @caughtexception;

        r52 = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open: ");

        $r35 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouteCtrlDialog", $r37, r52);

     label34:
        if r50 == null goto label44;

     label35:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label36:
        goto label44;

     label37:
        $r30 := @caughtexception;

        goto label44;

     label38:
        $r48 := @caughtexception;

        r2 = $r48;

     label39:
        if r50 == null goto label43;

     label40:
        virtualinvoke r50.<java.io.InputStream: void close()>();

     label41:
        goto label43;

     label42:
        $r47 := @caughtexception;

     label43:
        throw r2;

     label44:
        $z2 = staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean isBitmapRecycled(android.graphics.Bitmap)>(r49);

        if $z2 == 0 goto label45;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t use recycled bitmap: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r49);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", $r15);

        return null;

     label45:
        if r49 == null goto label48;

        $i0 = virtualinvoke r49.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke r49.<android.graphics.Bitmap: int getHeight()>();

        if $i0 >= $i1 goto label48;

        $r5 = new androidx.palette.graphics.Palette$Builder;

        specialinvoke $r5.<androidx.palette.graphics.Palette$Builder: void <init>(android.graphics.Bitmap)>(r49);

        $r6 = virtualinvoke $r5.<androidx.palette.graphics.Palette$Builder: androidx.palette.graphics.Palette$Builder maximumColorCount(int)>(1);

        r53 = virtualinvoke $r6.<androidx.palette.graphics.Palette$Builder: androidx.palette.graphics.Palette generate()>();

        $r7 = virtualinvoke r53.<androidx.palette.graphics.Palette: java.util.List getSwatches()>();

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label46;

        $i10 = 0;

        goto label47;

     label46:
        $r8 = virtualinvoke r53.<androidx.palette.graphics.Palette: java.util.List getSwatches()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (androidx.palette.graphics.Palette$Swatch) $r9;

        $i10 = virtualinvoke $r10.<androidx.palette.graphics.Palette$Swatch: int getRgb()>();

     label47:
        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: int mBackgroundColor> = $i10;

     label48:
        return r49;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label02 to label03 with label33;
        catch java.io.IOException from label08 to label09 with label33;
        catch java.io.IOException from label14 to label17 with label33;
        catch java.io.IOException from label22 to label23 with label33;
        catch java.io.IOException from label28 to label29 with label33;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label02 to label03 with label38;
        catch java.lang.Throwable from label08 to label09 with label38;
        catch java.lang.Throwable from label14 to label17 with label38;
        catch java.lang.Throwable from label22 to label23 with label38;
        catch java.lang.Throwable from label28 to label29 with label38;
        catch java.lang.Throwable from label33 to label34 with label38;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    protected void onPostExecute(android.graphics.Bitmap)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        android.graphics.Bitmap r1, $r4, $r5, $r6;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2, $r3, $r7, $r8, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1;
        android.net.Uri $r9, $r15, $r16;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask mFetchArtTask> = null;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconBitmap>;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap>;

        $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z0 == 0 goto label1;

        $r14 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r16 = $r14.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.net.Uri mArtIconUri>;

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $z1 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z1 != 0 goto label2;

     label1:
        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap mIconBitmap>;

        $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconBitmap> = $r6;

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r8.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.graphics.Bitmap mArtIconLoadedBitmap> = r1;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.net.Uri mIconUri>;

        $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.net.Uri mArtIconUri> = $r9;

        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $i0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: int mBackgroundColor>;

        $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: int mArtIconBackgroundColor> = $i0;

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r12.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mArtIconIsLoaded> = 1;

        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r13.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateMetadataViews()>();

     label2:
        return;
    }

    private java.io.InputStream openInputStreamByScheme(android.net.Uri) throws java.io.IOException
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        android.net.Uri r1;
        java.lang.String r2, $r5, $r6, $r7, $r8, $r10;
        java.net.URL r3, $r9;
        java.net.URLConnection r4;
        boolean $z0, $z1, $z2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r11;
        android.content.Context $r12;
        android.content.ContentResolver $r13;
        java.io.InputStream r14;
        java.io.BufferedInputStream $r15;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        r1 := @parameter0: android.net.Uri;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = "android.resource";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r7 = "content";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r8 = "file";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

     label1:
        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r12 = $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r14 = virtualinvoke $r13.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r1);

        goto label3;

     label2:
        $r9 = new java.net.URL;

        $r10 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>($r10);

        r3 = $r9;

        r4 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke r4.<java.net.URLConnection: void setConnectTimeout(int)>(30000);

        virtualinvoke r4.<java.net.URLConnection: void setReadTimeout(int)>(30000);

        r14 = virtualinvoke r4.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label3:
        if r14 != null goto label4;

        $r15 = null;

        goto label5;

     label4:
        $r15 = new java.io.BufferedInputStream;

        specialinvoke $r15.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r14);

     label5:
        return $r15;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        java.lang.Object r1;
        android.graphics.Bitmap $r2;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.graphics.Bitmap) r1;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: void onPostExecute(android.graphics.Bitmap)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$FetchArtTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<android.support.v4.media.session.MediaControllerCompat$Callback: void <init>()>();

        return;
    }

    public void onSessionDestroyed()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback r0, $r5;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r1, $r3, $r4, $r7;
        android.support.v4.media.session.MediaControllerCompat $r2, $r6;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r2 = $r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController>;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback mControllerCallback>;

        virtualinvoke $r6.<android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r5);

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.session.MediaControllerCompat mMediaController> = null;

     label1:
        return;
    }

    public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback r0;
        android.support.v4.media.MediaMetadataCompat r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2, $r3, $r4;
        android.support.v4.media.MediaDescriptionCompat $r5;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback;

        r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        if r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaDescriptionCompat getDescription()>();

     label2:
        $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.support.v4.media.MediaDescriptionCompat mDescription> = $r5;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void reloadIconIfNeeded()>();

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaControllerCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateMetadataViews()>();

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouter$Callback: void <init>()>();

        return;
    }

    public void onRouteAdded(androidx.mediarouter.media.MediaRouter, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.media.MediaRouter r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

        return;
    }

    public void onRouteRemoved(androidx.mediarouter.media.MediaRouter, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.media.MediaRouter r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

        return;
    }

    public void onRouteSelected(androidx.mediarouter.media.MediaRouter, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.media.MediaRouter r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3, $r4, $r5, $r6;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute> = r2;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsSelectingRoute> = 0;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateViewsIfNeeded()>();

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutes()>();

        return;
    }

    public void onRouteUnselected(androidx.mediarouter.media.MediaRouter, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.media.MediaRouter r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

        return;
    }

    public void onRouteChanged(androidx.mediarouter.media.MediaRouter, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.media.MediaRouter r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2, r4, $r7, $r16, $r19;
        java.util.Iterator r3;
        androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState r5;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r6, $r8, $r9, $r10, $r15, $r18, $r20;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r11;
        androidx.mediarouter.media.MediaRouter$ProviderInfo $r12;
        java.util.List $r13, $r17, $r21;
        java.lang.Object $r14;
        boolean $z0, $z1, $z2, z3, $z4;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        z3 = 0;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r7 = $r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        if r2 != $r7 goto label4;

        $r11 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getDynamicGroupController()>();

        if $r11 == null goto label4;

        $r12 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$ProviderInfo getProvider()>();

        $r13 = virtualinvoke $r12.<androidx.mediarouter.media.MediaRouter$ProviderInfo: java.util.List getRoutes()>();

        r3 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r14;

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r16 = $r15.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $r17 = virtualinvoke $r16.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $z0 = interfaceinvoke $r17.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r19 = $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r5 = virtualinvoke $r19.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState getDynamicGroupState(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r4);

        if r5 == null goto label3;

        $z1 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState: boolean isGroupable()>();

        if $z1 == 0 goto label3;

        $r20 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r21 = $r20.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        $z2 = interfaceinvoke $r21.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z2 != 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        goto label1;

     label4:
        if z3 == 0 goto label5;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateViewsIfNeeded()>();

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutes()>();

        goto label6;

     label5:
        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r8.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateRoutesView()>();

     label6:
        return;
    }

    public void onRouteVolumeChanged(androidx.mediarouter.media.MediaRouter, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback r0;
        androidx.mediarouter.media.MediaRouter r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2, $r5;
        int i0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r3;
        boolean $z0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4, $r6;
        java.util.Map $r7;
        java.lang.String $r8, $r13;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        i0 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: int getVolume()>();

        $z0 = <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRouteVolumeChanged(), route.getVolume:");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", $r13);

     label1:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser>;

        if $r5 == r2 goto label2;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouterCallback: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r7 = $r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>;

        $r8 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r3 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder) $r9;

        if r3 == null goto label2;

        virtualinvoke r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void updateVolume()>();

     label2:
        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1 r0;
        android.view.View r1;
        boolean z0, $z1, $z3;
        int i0, $i1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder $r2, $r5, $r6, $r9, $r10, $r11, $r13, $r15, $r18;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3, $r8, $r16, $r19;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r4, $r7, $r14;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r12;
        android.os.Handler $r17, $r20;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser>;

        if $r4 == null goto label1;

        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r19 = $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r20 = $r19.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        virtualinvoke $r20.<android.os.Handler: void removeMessages(int)>(2);

     label1:
        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r8 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r7 = $r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $r8.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser> = $r7;

        $z1 = virtualinvoke r1.<android.view.View: boolean isActivated()>();

        if $z1 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        if z0 == 0 goto label4;

        $i1 = 0;

        goto label5;

     label4:
        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $i1 = virtualinvoke $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: int getUnmutedVolume()>();

     label5:
        i0 = $i1;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        virtualinvoke $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void setMute(boolean)>(z0);

        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r12 = $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        virtualinvoke $r12.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setProgress(int)>(i0);

        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r14 = $r13.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        virtualinvoke $r14.<androidx.mediarouter.media.MediaRouter$RouteInfo: void requestSetVolume(int)>(i0);

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder this$1>;

        $r16 = $r15.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r17 = $r16.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(2, 500L);

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog, android.view.View, android.widget.ImageButton, androidx.mediarouter.app.MediaRouteVolumeSlider)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;
        android.view.View r2;
        android.widget.ImageButton r3, $r7;
        androidx.mediarouter.app.MediaRouteVolumeSlider r4, $r8;
        android.graphics.drawable.Drawable r5;
        android.content.Context $r6, $r9;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.widget.ImageButton;

        r4 := @parameter3: androidx.mediarouter.app.MediaRouteVolumeSlider;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>(r2);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton> = r3;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider> = r4;

        $r6 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r5 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getMuteButtonDrawableIcon(android.content.Context)>($r6);

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton>;

        virtualinvoke $r7.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r5);

        $r9 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: void setVolumeSliderColor(android.content.Context,androidx.mediarouter.app.MediaRouteVolumeSlider)>($r9, $r8);

        return;
    }

    void bindRouteVolumeSliderHolder(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, $r2, $r6;
        int i0, $i1;
        boolean z0, $z1;
        android.widget.ImageButton $r3, $r5;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1 $r4;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r7, $r8, $r9, $r12;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r10;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener $r11;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute> = r1;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        i0 = virtualinvoke $r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: int getVolume()>();

        if i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton>;

        virtualinvoke $r3.<android.widget.ImageButton: void setActivated(boolean)>(z0);

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton>;

        $r4 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1;

        specialinvoke $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder$1: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder)>(r0);

        virtualinvoke $r5.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r4);

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        virtualinvoke $r7.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setTag(java.lang.Object)>($r6);

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        $i1 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: int getVolumeMax()>();

        virtualinvoke $r8.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setMax(int)>($i1);

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        virtualinvoke $r9.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setProgress(int)>(i0);

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r11 = $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener mVolumeChangeListener>;

        virtualinvoke $r12.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>($r11);

        return;
    }

    void updateVolume()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r0;
        int i0;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r1;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r2;
        boolean $z0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        i0 = virtualinvoke $r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: int getVolume()>();

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void setMute(boolean)>($z0);

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        virtualinvoke $r2.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setProgress(int)>(i0);

        return;
    }

    void setMute(boolean)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r0;
        boolean z0, z1;
        android.widget.ImageButton $r1, $r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3, $r8;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r4, $r9;
        java.util.Map $r5, $r10;
        java.lang.String $r6, $r11;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r12;
        int $i0;
        java.lang.Integer $r13;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton>;

        z1 = virtualinvoke $r1.<android.widget.ImageButton: boolean isActivated()>();

        if z1 != z0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: android.widget.ImageButton mMuteButton>;

        virtualinvoke $r2.<android.widget.ImageButton: void setActivated(boolean)>(z0);

        if z0 == 0 goto label2;

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r10 = $r8.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mUnmutedVolumeMap>;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $r11 = virtualinvoke $r9.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        $i0 = virtualinvoke $r12.<androidx.mediarouter.app.MediaRouteVolumeSlider: int getProgress()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r13);

        goto label3;

     label2:
        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mUnmutedVolumeMap>;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $r6 = virtualinvoke $r4.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

     label3:
        return;
    }

    int getUnmutedVolume()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r0;
        java.lang.Integer r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3;
        java.util.Map $r4;
        java.lang.String $r5;
        java.lang.Object $r6;
        int $i0, $i1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r4 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mUnmutedVolumeMap>;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $r5 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (java.lang.Integer) $r6;

        if r1 != null goto label1;

        $i1 = 1;

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

     label2:
        return $i1;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$endValue>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$startValue>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: android.view.View val$view>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter, int, int, android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;
        int i0, i1;
        android.view.View r2;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.View;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$endValue> = i0;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$startValue> = i1;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: android.view.View val$view> = r2;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1 r0;
        float f0, $f1, $f2;
        android.view.animation.Transformation r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $i2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$endValue>;

        $i1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$startValue>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = $f1 * f0;

        i0 = (int) $f2;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: android.view.View val$view>;

        $i4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: int val$startValue>;

        $i5 = $i4 + i0;

        staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setLayoutHeight(android.view.View,int)>($r2, $i5);

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationRepeat(android.view.animation.Animation)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2 r0;
        android.view.animation.Animation r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2;

        r1 := @parameter0: android.view.animation.Animation;

        return;
    }

    public void onAnimationStart(android.view.animation.Animation)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2 r0;
        android.view.animation.Animation r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsAnimatingVolumeSliderLayout> = 1;

        return;
    }

    public void onAnimationEnd(android.view.animation.Animation)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2 r0;
        android.view.animation.Animation r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r2, $r4;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3, $r5;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mIsAnimatingVolumeSliderLayout> = 0;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        virtualinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void updateViewsIfNeeded()>();

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder this$2>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder this$2> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1 r0;
        android.view.View r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder $r2, $r5, $r8, $r10;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r6;
        androidx.mediarouter.media.MediaRouter $r7;
        android.widget.ImageView $r9;
        android.widget.ProgressBar $r11;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder this$2>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r7 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder this$2>;

        $r6 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        virtualinvoke $r7.<androidx.mediarouter.media.MediaRouter: void transferToRoute(androidx.mediarouter.media.MediaRouter$RouteInfo)>($r6);

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder this$2>;

        $r9 = $r8.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ImageView mImageView>;

        virtualinvoke $r9.<android.widget.ImageView: void setVisibility(int)>(4);

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder this$2>;

        $r11 = $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ProgressBar mProgressBar>;

        virtualinvoke $r11.<android.widget.ProgressBar: void setVisibility(int)>(0);

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.view.View mItemView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ImageView mImageView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ProgressBar mProgressBar>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.TextView mTextView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: float mDisabledAlpha>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter, android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;
        android.view.View r2, $r3, $r5, $r7;
        int $i0, $i1, $i2;
        android.widget.ImageView $r4;
        android.widget.ProgressBar $r6, $r12;
        android.widget.TextView $r8;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r9, $r11;
        android.content.Context $r10, $r13;
        float $f0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r2 := @parameter1: android.view.View;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>(r2);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.view.View mItemView> = r2;

        $i0 = <androidx.mediarouter.R$id: int mr_cast_group_icon>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r4 = (android.widget.ImageView) $r3;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ImageView mImageView> = $r4;

        $i1 = <androidx.mediarouter.R$id: int mr_cast_group_progress_bar>;

        $r5 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i1);

        $r6 = (android.widget.ProgressBar) $r5;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ProgressBar mProgressBar> = $r6;

        $i2 = <androidx.mediarouter.R$id: int mr_cast_group_name>;

        $r7 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i2);

        $r8 = (android.widget.TextView) $r7;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.TextView mTextView> = $r8;

        $r9 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r10 = $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $f0 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: float getDisabledAlpha(android.content.Context)>($r10);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: float mDisabledAlpha> = $f0;

        $r11 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r13 = $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ProgressBar mProgressBar>;

        staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: void setIndeterminateProgressBarColor(android.content.Context,android.widget.ProgressBar)>($r13, $r12);

        return;
    }

    private boolean isEnabled(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, $r5;
        java.util.List r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4;
        int $i0;
        java.lang.Object $r6;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r2 = virtualinvoke $r5.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        if $r6 != r1 goto label1;

        return 0;

     label1:
        return 1;
    }

    void bindGroupViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        boolean z0;
        java.lang.Object $r3;
        android.widget.ImageView $r4, $r10;
        android.widget.ProgressBar $r5;
        android.view.View $r6, $r8;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1 $r7;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r9;
        android.graphics.drawable.Drawable $r11;
        android.widget.TextView $r12;
        java.lang.String $r13;
        float $f0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r3 = virtualinvoke r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r2 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r3;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute> = r2;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ImageView mImageView>;

        virtualinvoke $r4.<android.widget.ImageView: void setVisibility(int)>(0);

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ProgressBar mProgressBar>;

        virtualinvoke $r5.<android.widget.ProgressBar: void setVisibility(int)>(4);

        z0 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: boolean isEnabled(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r2);

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.view.View mItemView>;

        if z0 == 0 goto label1;

        $f0 = 1.0F;

        goto label2;

     label1:
        $f0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: float mDisabledAlpha>;

     label2:
        virtualinvoke $r6.<android.view.View: void setAlpha(float)>($f0);

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.view.View mItemView>;

        $r7 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1;

        specialinvoke $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder$1: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder)>(r0);

        virtualinvoke $r8.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r7);

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.ImageView mImageView>;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r11 = virtualinvoke $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable getIconDrawable(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r2);

        virtualinvoke $r10.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r11);

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: android.widget.TextView mTextView>;

        $r13 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>($r13);

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: android.widget.TextView mTextView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: int mExpandedHeight>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter, android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;
        android.view.View r2, $r7, $r9, $r11;
        android.content.res.Resources r3;
        android.util.DisplayMetrics r4;
        android.util.TypedValue r5, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r6, $r13;
        android.widget.ImageButton $r8;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r10;
        android.widget.TextView $r12;
        android.content.Context $r14;
        float $f0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r2 := @parameter1: android.view.View;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        $r6 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $i0 = <androidx.mediarouter.R$id: int mr_cast_mute_button>;

        $r7 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r8 = (android.widget.ImageButton) $r7;

        $i1 = <androidx.mediarouter.R$id: int mr_cast_volume_slider>;

        $r9 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i1);

        $r10 = (androidx.mediarouter.app.MediaRouteVolumeSlider) $r9;

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog,android.view.View,android.widget.ImageButton,androidx.mediarouter.app.MediaRouteVolumeSlider)>($r6, r2, $r8, $r10);

        $i2 = <androidx.mediarouter.R$id: int mr_group_volume_route_name>;

        $r11 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i2);

        $r12 = (android.widget.TextView) $r11;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: android.widget.TextView mTextView> = $r12;

        $r13 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r14 = $r13.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r3 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r5 = $r15;

        $i3 = <androidx.mediarouter.R$dimen: int mr_dynamic_volume_group_list_item_height>;

        virtualinvoke r3.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i3, r5, 1);

        $f0 = virtualinvoke r5.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r4);

        $i4 = (int) $f0;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: int mExpandedHeight> = $i4;

        return;
    }

    void bindGroupVolumeViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r3;
        android.view.View $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.widget.TextView $r6;
        java.lang.String $r7;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: android.view.View itemView>;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $z0 = virtualinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: boolean isGroupVolumeNeeded()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: int mExpandedHeight>;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setLayoutHeight(android.view.View,int)>($r4, $i0);

        $r5 = virtualinvoke r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r2 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r5;

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void bindRouteVolumeSliderHolder(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r2);

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: android.widget.TextView mTextView>;

        $r7 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        return;
    }

    int getExpandedHeight()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder r0;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder;

        $i0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: int mExpandedHeight>;

        return $i0;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: android.widget.TextView mTextView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter, android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;
        android.view.View r2, $r3;
        int $i0;
        android.widget.TextView $r4;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r2 := @parameter1: android.view.View;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>(r2);

        $i0 = <androidx.mediarouter.R$id: int mr_cast_header_name>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r4 = (android.widget.TextView) $r3;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: android.widget.TextView mTextView> = $r4;

        return;
    }

    void bindHeaderViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r1;
        java.lang.String r2;
        java.lang.Object $r3;
        android.widget.TextView $r4;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r3 = virtualinvoke r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: android.widget.TextView mTextView>;

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object mData>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: int mType>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter, java.lang.Object, int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;
        java.lang.Object r2;
        int i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object mData> = r2;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: int mType> = i0;

        return;
    }

    public java.lang.Object getData()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r0;
        java.lang.Object $r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object mData>;

        return $r1;
    }

    public int getType()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r0;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $i0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: int mType>;

        return $i0;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1 r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1 r0;
        android.view.View r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7, $z8;
        java.util.List r2, $r29;
        java.util.Iterator r3;
        androidx.mediarouter.media.MediaRouter$RouteInfo r4, $r8, $r11, $r16, $r21, $r26, $r28, $r41;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r5;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r6, $r7, $r9, $r10, $r12, $r15, $r18, $r19, $r20, $r23, $r27, $r31, $r37, $r40;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r13, $r22, $r24, $r32, $r38;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r14, $r25, $r33, $r39;
        androidx.mediarouter.media.MediaRouter $r17, $r42;
        java.lang.Object $r30, $r36;
        java.util.Map $r34;
        java.lang.String $r35;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1;

        r1 := @parameter0: android.view.View;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r8 = $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $z2 = virtualinvoke $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: boolean isSelected(androidx.mediarouter.media.MediaRouter$RouteInfo)>($r8);

        if $z2 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        z0 = $z7;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r11 = $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        z1 = virtualinvoke $r11.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isGroup()>();

        if z0 == 0 goto label3;

        $r37 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r38 = $r37.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r39 = $r38.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r42 = $r39.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r40 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r41 = $r40.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        virtualinvoke $r42.<androidx.mediarouter.media.MediaRouter: void addMemberToDynamicGroup(androidx.mediarouter.media.MediaRouter$RouteInfo)>($r41);

        goto label4;

     label3:
        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r13 = $r12.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r14 = $r13.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r17 = $r14.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter mRouter>;

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r16 = $r15.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        virtualinvoke $r17.<androidx.mediarouter.media.MediaRouter: void removeMemberFromDynamicGroup(androidx.mediarouter.media.MediaRouter$RouteInfo)>($r16);

     label4:
        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        if z1 != 0 goto label5;

        $z8 = 1;

        goto label6;

     label5:
        $z8 = 0;

     label6:
        virtualinvoke $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: void showSelectingProgress(boolean,boolean)>(z0, $z8);

        if z1 == 0 goto label9;

        $r23 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r24 = $r23.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r25 = $r24.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r26 = $r25.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r2 = virtualinvoke $r26.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $r27 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r28 = $r27.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $r29 = virtualinvoke $r28.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        r3 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label9;

        $r30 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r30;

        $z4 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z4 == z0 goto label8;

        $r31 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r32 = $r31.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r33 = $r32.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r34 = $r33.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>;

        $r35 = virtualinvoke r4.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r36 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35);

        r5 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder) $r36;

        $z5 = r5 instanceof androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        if $z5 == 0 goto label8;

        r6 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder) r5;

        virtualinvoke r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: void showSelectingProgress(boolean,boolean)>(z0, 1);

     label8:
        goto label7;

     label9:
        $r19 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r22 = $r19.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r20 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder this$2>;

        $r21 = $r20.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        virtualinvoke $r22.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void mayUpdateGroupVolume(androidx.mediarouter.media.MediaRouter$RouteInfo,boolean)>($r21, z0);

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ProgressBar mProgressBar>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.TextView mTextView>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.RelativeLayout mVolumeSliderLayout>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: float mDisabledAlpha>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mExpandedLayoutHeight>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mCollapsedLayoutHeight>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View$OnClickListener mViewClickListener>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter, android.view.View)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r1;
        android.view.View r2, $r8, $r10, $r13, $r15, $r17, $r19, $r21;
        android.graphics.drawable.Drawable r3;
        android.content.res.Resources r4;
        android.util.DisplayMetrics r5;
        android.util.TypedValue r6, $r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r7, $r23, $r26, $r29, $r31;
        android.widget.ImageButton $r9;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r11;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1 $r12;
        android.widget.ImageView $r14;
        android.widget.ProgressBar $r16, $r27;
        android.widget.TextView $r18;
        android.widget.RelativeLayout $r20;
        android.widget.CheckBox $r22, $r25;
        android.content.Context $r24, $r28, $r30, $r32;
        float $f0, $f1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r2 := @parameter1: android.view.View;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1> = r1;

        $r7 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $i0 = <androidx.mediarouter.R$id: int mr_cast_mute_button>;

        $r8 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.ImageButton) $r8;

        $i1 = <androidx.mediarouter.R$id: int mr_cast_volume_slider>;

        $r10 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i1);

        $r11 = (androidx.mediarouter.app.MediaRouteVolumeSlider) $r10;

        specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog,android.view.View,android.widget.ImageButton,androidx.mediarouter.app.MediaRouteVolumeSlider)>($r7, r2, $r9, $r11);

        $r12 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1;

        specialinvoke $r12.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder$1: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder)>(r0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View$OnClickListener mViewClickListener> = $r12;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView> = r2;

        $i2 = <androidx.mediarouter.R$id: int mr_cast_route_icon>;

        $r13 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i2);

        $r14 = (android.widget.ImageView) $r13;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView> = $r14;

        $i3 = <androidx.mediarouter.R$id: int mr_cast_route_progress_bar>;

        $r15 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i3);

        $r16 = (android.widget.ProgressBar) $r15;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ProgressBar mProgressBar> = $r16;

        $i4 = <androidx.mediarouter.R$id: int mr_cast_route_name>;

        $r17 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i4);

        $r18 = (android.widget.TextView) $r17;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.TextView mTextView> = $r18;

        $i5 = <androidx.mediarouter.R$id: int mr_cast_volume_layout>;

        $r19 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i5);

        $r20 = (android.widget.RelativeLayout) $r19;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.RelativeLayout mVolumeSliderLayout> = $r20;

        $i6 = <androidx.mediarouter.R$id: int mr_cast_checkbox>;

        $r21 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i6);

        $r22 = (android.widget.CheckBox) $r21;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox> = $r22;

        $r23 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r24 = $r23.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r3 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getCheckBoxDrawableIcon(android.content.Context)>($r24);

        $r25 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        virtualinvoke $r25.<android.widget.CheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)>(r3);

        $r26 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r28 = $r26.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r27 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ProgressBar mProgressBar>;

        staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: void setIndeterminateProgressBarColor(android.content.Context,android.widget.ProgressBar)>($r28, $r27);

        $r29 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r30 = $r29.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $f0 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: float getDisabledAlpha(android.content.Context)>($r30);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: float mDisabledAlpha> = $f0;

        $r31 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r32 = $r31.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r4 = virtualinvoke $r32.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r33 = new android.util.TypedValue;

        specialinvoke $r33.<android.util.TypedValue: void <init>()>();

        r6 = $r33;

        $i7 = <androidx.mediarouter.R$dimen: int mr_dynamic_dialog_row_height>;

        virtualinvoke r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i7, r6, 1);

        $f1 = virtualinvoke r6.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r5);

        $i8 = (int) $f1;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mExpandedLayoutHeight> = $i8;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mCollapsedLayoutHeight> = 0;

        return;
    }

    boolean isSelected(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, $r5;
        androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState r2;
        boolean $z0, $z1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $z0 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isSelected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r2 = virtualinvoke $r5.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState getDynamicGroupState(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r1);

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState: int getSelectionState()>();

        if $i0 != 3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isEnabled(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, $r8, $r11;
        androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r3, $r6, $r9;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4, $r7, $r10;
        java.util.List $r5, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mUngroupableRoutes>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: boolean isSelected(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r1);

        if $z1 == 0 goto label2;

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r10 = $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r11 = $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $r12 = virtualinvoke $r11.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i0 >= 2 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: boolean isSelected(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r1);

        if $z2 == 0 goto label5;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r7 = $r6.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r8 = $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r2 = virtualinvoke $r8.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState getDynamicGroupState(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r1);

        if r2 == null goto label3;

        $z3 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo$DynamicGroupState: boolean isUnselectable()>();

        if $z3 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        return 1;
    }

    void bindRouteViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r1;
        java.lang.Object $r2, $r17;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r3, $r18, $r25;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4, $r19;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r5, $r14, r21, r23;
        android.widget.ImageButton $r6;
        androidx.mediarouter.app.MediaRouteVolumeSlider $r7;
        android.view.View$OnClickListener $r8, $r10;
        android.view.View $r9, $r12, $r33;
        android.widget.CheckBox $r11, $r13, $r29, $r30, $r34;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6;
        java.util.List $r15, $r16, $r20;
        int $i0, $i1;
        java.util.Iterator r22;
        android.widget.ImageView $r24, $r32;
        android.graphics.drawable.Drawable $r26;
        android.widget.TextView $r27;
        java.lang.String $r28;
        android.widget.ProgressBar $r31;
        android.widget.RelativeLayout $r35;
        float $f0, $f1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r2 = virtualinvoke r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r21 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r2;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        if r21 != $r5 goto label03;

        $r15 = virtualinvoke r21.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i0 <= 0 goto label03;

        $r16 = virtualinvoke r21.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        r22 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r17 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r17;

        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r19 = $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r20 = $r19.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        $z2 = interfaceinvoke $r20.<java.util.List: boolean contains(java.lang.Object)>(r23);

        if $z2 != 0 goto label02;

        r21 = r23;

        goto label03;

     label02:
        goto label01;

     label03:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: void bindRouteVolumeSliderHolder(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r21);

        $r24 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView>;

        $r25 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r26 = virtualinvoke $r25.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable getIconDrawable(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r21);

        virtualinvoke $r24.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r26);

        $r27 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.TextView mTextView>;

        $r28 = virtualinvoke r21.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        virtualinvoke $r27.<android.widget.TextView: void setText(java.lang.CharSequence)>($r28);

        $r29 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        virtualinvoke $r29.<android.widget.CheckBox: void setVisibility(int)>(0);

        z3 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: boolean isSelected(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r21);

        z4 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: boolean isEnabled(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r21);

        $r30 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        virtualinvoke $r30.<android.widget.CheckBox: void setChecked(boolean)>(z3);

        $r31 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ProgressBar mProgressBar>;

        virtualinvoke $r31.<android.widget.ProgressBar: void setVisibility(int)>(4);

        $r32 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView>;

        virtualinvoke $r32.<android.widget.ImageView: void setVisibility(int)>(0);

        $r33 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>;

        virtualinvoke $r33.<android.view.View: void setEnabled(boolean)>(z4);

        $r34 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        virtualinvoke $r34.<android.widget.CheckBox: void setEnabled(boolean)>(z4);

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageButton mMuteButton>;

        if z4 != 0 goto label04;

        if z3 == 0 goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        virtualinvoke $r6.<android.widget.ImageButton: void setEnabled(boolean)>($z5);

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteVolumeSlider mVolumeSlider>;

        if z4 != 0 goto label07;

        if z3 == 0 goto label08;

     label07:
        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        virtualinvoke $r7.<androidx.mediarouter.app.MediaRouteVolumeSlider: void setEnabled(boolean)>($z6);

        $r9 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>;

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View$OnClickListener mViewClickListener>;

        virtualinvoke $r9.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r8);

        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View$OnClickListener mViewClickListener>;

        virtualinvoke $r11.<android.widget.CheckBox: void setOnClickListener(android.view.View$OnClickListener)>($r10);

        $r35 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.RelativeLayout mVolumeSliderLayout>;

        if z3 == 0 goto label10;

        $r14 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.media.MediaRouter$RouteInfo mRoute>;

        $z0 = virtualinvoke $r14.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isGroup()>();

        if $z0 != 0 goto label10;

        $i1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mExpandedLayoutHeight>;

        goto label11;

     label10:
        $i1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mCollapsedLayoutHeight>;

     label11:
        staticinvoke <androidx.mediarouter.app.MediaRouteDynamicControllerDialog: void setLayoutHeight(android.view.View,int)>($r35, $i1);

        $r12 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>;

        if z4 != 0 goto label12;

        if z3 == 0 goto label13;

     label12:
        $f0 = 1.0F;

        goto label14;

     label13:
        $f0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: float mDisabledAlpha>;

     label14:
        virtualinvoke $r12.<android.view.View: void setAlpha(float)>($f0);

        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        if z4 != 0 goto label15;

        if z3 != 0 goto label16;

     label15:
        $f1 = 1.0F;

        goto label17;

     label16:
        $f1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: float mDisabledAlpha>;

     label17:
        virtualinvoke $r13.<android.widget.CheckBox: void setAlpha(float)>($f1);

        return;
    }

    void showSelectingProgress(boolean, boolean)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder r0;
        boolean z0, z1;
        android.widget.CheckBox $r1, $r3;
        android.view.View $r2;
        android.widget.RelativeLayout $r4;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter $r5;
        android.widget.ImageView $r6;
        android.widget.ProgressBar $r7;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        virtualinvoke $r1.<android.widget.CheckBox: void setEnabled(boolean)>(0);

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>;

        virtualinvoke $r2.<android.view.View: void setEnabled(boolean)>(0);

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.CheckBox mCheckBox>;

        virtualinvoke $r3.<android.widget.CheckBox: void setChecked(boolean)>(z0);

        if z0 == 0 goto label1;

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView>;

        virtualinvoke $r6.<android.widget.ImageView: void setVisibility(int)>(4);

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ProgressBar mProgressBar>;

        virtualinvoke $r7.<android.widget.ProgressBar: void setVisibility(int)>(0);

     label1:
        if z1 == 0 goto label4;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter this$1>;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: android.widget.RelativeLayout mVolumeSliderLayout>;

        if z0 == 0 goto label2;

        $i0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mExpandedLayoutHeight>;

        goto label3;

     label2:
        $i0 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: int mCollapsedLayoutHeight>;

     label3:
        virtualinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void animateLayoutHeight(android.view.View,int)>($r4, $i0);

     label4:
        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int ITEM_TYPE_GROUP_VOLUME>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int ITEM_TYPE_HEADER>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int ITEM_TYPE_ROUTE>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int ITEM_TYPE_GROUP>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mDefaultIcon>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mTvIcon>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerIcon>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerGroupIcon>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item mGroupVolumeItem>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int mLayoutAnimationDurationMs>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.animation.Interpolator mAccelerateDecelerateInterpolator>
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;
        android.content.res.Resources r2;
        java.util.ArrayList $r3;
        android.content.Context $r4, $r6, $r8, $r10, $r12, $r14;
        android.view.LayoutInflater $r5;
        android.graphics.drawable.Drawable $r7, $r9, $r11, $r13;
        int $i0, $i1;
        android.view.animation.AccelerateDecelerateInterpolator $r15;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems> = $r3;

        $r4 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r4);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater> = $r5;

        $r6 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r7 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getDefaultDrawableIcon(android.content.Context)>($r6);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mDefaultIcon> = $r7;

        $r8 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r9 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getTvDrawableIcon(android.content.Context)>($r8);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mTvIcon> = $r9;

        $r10 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r11 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getSpeakerDrawableIcon(android.content.Context)>($r10);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerIcon> = $r11;

        $r12 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r13 = staticinvoke <androidx.mediarouter.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getSpeakerGroupDrawableIcon(android.content.Context)>($r12);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerGroupIcon> = $r13;

        $r14 = r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        r2 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <androidx.mediarouter.R$integer: int mr_cast_volume_slider_layout_animation_duration_ms>;

        $i1 = virtualinvoke r2.<android.content.res.Resources: int getInteger(int)>($i0);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int mLayoutAnimationDurationMs> = $i1;

        $r15 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r15.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.animation.Interpolator mAccelerateDecelerateInterpolator> = $r15;

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void updateItems()>();

        return;
    }

    boolean isGroupVolumeNeeded()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r1, $r2;
        boolean $z0, $z1;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3;
        java.util.List $r4;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $z0 = $r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mEnableGroupVolumeUX>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        $r4 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void animateLayoutHeight(android.view.View, int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        android.view.View r1;
        int i0, i1, i2, $i3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1 r2, $r4;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2 $r5;
        long $l4;
        android.view.animation.Interpolator $r6;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        i1 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        i2 = i0;

        $r4 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1;

        specialinvoke $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$1: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,int,int,android.view.View)>(r0, i2, i1, r1);

        r2 = $r4;

        $r5 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2;

        specialinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$2: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter)>(r0);

        virtualinvoke r2.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r5);

        $i3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int mLayoutAnimationDurationMs>;

        $l4 = (long) $i3;

        virtualinvoke r2.<android.view.animation.Animation: void setDuration(long)>($l4);

        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.animation.Interpolator mAccelerateDecelerateInterpolator>;

        virtualinvoke r2.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r6);

        virtualinvoke r1.<android.view.View: void startAnimation(android.view.animation.Animation)>(r2);

        return;
    }

    void mayUpdateGroupVolume(androidx.mediarouter.media.MediaRouter$RouteInfo, boolean)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, $r6, r14;
        boolean z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, z8;
        java.util.List r2, $r11;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder r4;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r5, $r7, $r15;
        int $i0, $i1, $i2, i3, $i6;
        androidx.recyclerview.widget.RecyclerView $r8;
        android.view.View $r9;
        java.lang.Object $r12;
        java.util.Iterator r13;
        byte $b4, $b5;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        z0 := @parameter1: boolean;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r2 = virtualinvoke $r6.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        $z1 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isGroup()>();

        if $z1 == 0 goto label06;

        $r11 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.util.List getMemberRoutes()>();

        r13 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r12 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r12;

        $z4 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r14);

        if $z4 == z0 goto label04;

        $i2 = i3;

        if z0 == 0 goto label02;

        $b4 = 1;

        goto label03;

     label02:
        $b4 = -1;

     label03:
        i3 = $i2 + $b4;

     label04:
        goto label01;

     label05:
        goto label09;

     label06:
        $i1 = i3;

        if z0 == 0 goto label07;

        $b5 = 1;

        goto label08;

     label07:
        $b5 = -1;

     label08:
        i3 = $i1 + $b5;

     label09:
        z5 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: boolean isGroupVolumeNeeded()>();

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $z6 = $r15.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: boolean mEnableGroupVolumeUX>;

        if $z6 == 0 goto label10;

        if i3 < 2 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        z8 = $z7;

        if z5 == z8 goto label14;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r8 = $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(0);

        $z2 = r3 instanceof androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder;

        if $z2 == 0 goto label14;

        r4 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder) r3;

        $r9 = r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: android.view.View itemView>;

        if z8 == 0 goto label12;

        $i6 = virtualinvoke r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: int getExpandedHeight()>();

        goto label13;

     label12:
        $i6 = 0;

     label13:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void animateLayoutHeight(android.view.View,int)>($r9, $i6);

     label14:
        return;
    }

    void updateItems()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        java.util.ArrayList $r1, $r10, $r23, $r34, $r41, $r49, $r56;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item $r2, $r7, $r22, $r33, $r40, $r50, $r57;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r3, $r5, $r8, $r11, $r13, $r15, $r18, $r20, $r24, $r26, $r29, $r31, $r35, $r37;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r4, $r9, $r19, $r21, $r32, r43, r45, r52;
        java.util.List $r6, $r12, $r14, $r16, $r27, $r30, $r38;
        boolean $z0, $z2, $z3, $z4, $z6, $z8, $z9, $z11, $z13, z15, z16;
        java.lang.Object $r17, $r28, $r39;
        int $i0, $i1;
        android.content.Context $r25, $r36;
        java.util.Iterator r42, r44, r51;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r46, r53;
        java.lang.String $r47, r48, $r54, r55;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r4 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        specialinvoke $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, $r4, 1);

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item mGroupVolumeItem> = $r2;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label03;

        $r37 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r38 = $r37.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>;

        r42 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z13 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label02;

        $r39 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r39;

        $r41 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r40 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        specialinvoke $r40.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, r43, 3);

        virtualinvoke $r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

        goto label01;

     label02:
        goto label04;

     label03:
        $r10 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r7 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r9 = $r8.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        specialinvoke $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, $r9, 3);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label04:
        $r11 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r12 = $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        $z2 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        z15 = 0;

        $r26 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r27 = $r26.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        r44 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        $r28 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r28;

        $r29 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r30 = $r29.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mMemberRoutes>;

        $z9 = interfaceinvoke $r30.<java.util.List: boolean contains(java.lang.Object)>(r45);

        if $z9 != 0 goto label10;

        if z15 != 0 goto label09;

        $r31 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r32 = $r31.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r46 = virtualinvoke $r32.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getDynamicGroupController()>();

        if r46 == null goto label06;

        $r47 = virtualinvoke r46.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.String getGroupableSelectionTitle()>();

        goto label07;

     label06:
        $r47 = null;

     label07:
        r48 = $r47;

        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r48);

        if $z11 == 0 goto label08;

        $r35 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r36 = $r35.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $i1 = <androidx.mediarouter.R$string: int mr_dialog_groupable_header>;

        r48 = virtualinvoke $r36.<android.content.Context: java.lang.String getString(int)>($i1);

     label08:
        $r34 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r33 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        specialinvoke $r33.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, r48, 2);

        virtualinvoke $r34.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

        z15 = 1;

     label09:
        $r49 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r50 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        specialinvoke $r50.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, r45, 3);

        virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

     label10:
        goto label05;

     label11:
        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r14 = $r13.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>;

        $z3 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label18;

        z16 = 0;

        $r15 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r16 = $r15.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mTransferableRoutes>;

        r51 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r17 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>();

        r52 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r17;

        $r18 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r19 = $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        if $r19 == r52 goto label17;

        if z16 != 0 goto label16;

        z16 = 1;

        $r20 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r21 = $r20.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mSelectedRoute>;

        r53 = virtualinvoke $r21.<androidx.mediarouter.media.MediaRouter$RouteInfo: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getDynamicGroupController()>();

        if r53 == null goto label13;

        $r54 = virtualinvoke r53.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.String getTransferableSectionTitle()>();

        goto label14;

     label13:
        $r54 = null;

     label14:
        r55 = $r54;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r55);

        if $z6 == 0 goto label15;

        $r24 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r25 = $r24.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $i0 = <androidx.mediarouter.R$string: int mr_dialog_transferable_header>;

        r55 = virtualinvoke $r25.<android.content.Context: java.lang.String getString(int)>($i0);

     label15:
        $r23 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r22 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        specialinvoke $r22.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, r55, 2);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label16:
        $r56 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r57 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item;

        specialinvoke $r57.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,java.lang.Object,int)>(r0, r52, 4);

        virtualinvoke $r56.<java.util.ArrayList: boolean add(java.lang.Object)>($r57);

     label17:
        goto label12;

     label18:
        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void notifyAdapterDataSetChanged()>();

        return;
    }

    void notifyAdapterDataSetChanged()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r1, $r3, $r4, $r5;
        java.util.List $r2, $r6, $r7, $r8;
        java.util.Set $r9;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r2 = $r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mUngroupableRoutes>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mUngroupableRoutes>;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r7 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List mGroupableRoutes>;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r8 = virtualinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.List getCurrentGroupableRoutes()>();

        $r9 = staticinvoke <androidx.mediarouter.app.MediaRouteDialogHelper: java.util.Set getItemsRemoved(java.util.List,java.util.List)>($r7, $r8);

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: void notifyDataSetChanged()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        android.view.ViewGroup r1;
        int i0, $i1, $i2, $i3, $i4;
        android.view.LayoutInflater $r2, $r4, $r6, $r8;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder $r3;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder $r5;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder $r7;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder $r9;
        android.view.View r10, r11, r12, r13;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r8 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>;

        $i4 = <androidx.mediarouter.R$layout: int mr_cast_group_volume_item>;

        r10 = virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i4, r1, 0);

        $r9 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder;

        specialinvoke $r9.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,android.view.View)>(r0, r10);

        return $r9;

     label2:
        $r6 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>;

        $i3 = <androidx.mediarouter.R$layout: int mr_cast_header_item>;

        r11 = virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i3, r1, 0);

        $r7 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder;

        specialinvoke $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,android.view.View)>(r0, r11);

        return $r7;

     label3:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>;

        $i2 = <androidx.mediarouter.R$layout: int mr_cast_route_item>;

        r12 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i2, r1, 0);

        $r5 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder;

        specialinvoke $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,android.view.View)>(r0, r12);

        return $r5;

     label4:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>;

        $i1 = <androidx.mediarouter.R$layout: int mr_cast_group_item>;

        r13 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r1, 0);

        $r3 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder;

        specialinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter,android.view.View)>(r0, r13);

        return $r3;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", "Cannot create ViewHolder because of wrong view type");

        return null;
    }

    public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, i1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder $r3;
        java.lang.Object $r4, $r12;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r5, $r13;
        java.util.Map $r6, $r14;
        java.lang.String $r7, $r15;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder $r8, $r16;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder $r10;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder $r11;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder $r18;
        androidx.mediarouter.media.MediaRouter$RouteInfo r19, r20;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: int getItemViewType(int)>(i0);

        r2 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item getItem(int)>(i0);

        tableswitch(i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r12 = virtualinvoke r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r19 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r12;

        $r13 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r14 = $r13.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>;

        $r15 = virtualinvoke r19.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r16 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder) r1;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r18 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder) r1;

        virtualinvoke $r18.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupVolumeViewHolder: void bindGroupVolumeViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)>(r2);

        goto label6;

     label2:
        $r11 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder) r1;

        virtualinvoke $r11.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$HeaderViewHolder: void bindHeaderViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)>(r2);

        goto label6;

     label3:
        $r4 = virtualinvoke r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r20 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r4;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>;

        $r7 = virtualinvoke r20.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r8 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder) r1;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r10 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder) r1;

        virtualinvoke $r10.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$RouteViewHolder: void bindRouteViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)>(r2);

        goto label6;

     label4:
        $r3 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder) r1;

        virtualinvoke $r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$GroupViewHolder: void bindGroupViewHolder(androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item)>(r2);

        goto label6;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouteCtrlDialog", "Cannot bind item to ViewHolder because of wrong view type");

     label6:
        return;
    }

    public void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2;
        java.util.Map $r3;
        java.util.Collection $r4;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r4.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public int getItemCount()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        java.util.ArrayList $r1;
        int $i0, $i1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    android.graphics.drawable.Drawable getIconDrawable(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1;
        android.net.Uri r2;
        android.graphics.drawable.Drawable r3, $r14;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.lang.Throwable $r7, r13;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        java.io.InputStream r12;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        r2 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: android.net.Uri getIconUri()>();

        if r2 == null goto label5;

     label1:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = virtualinvoke $r6.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r2);

        r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>(r12, null);

        if r3 == null goto label3;

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r13 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouteCtrlDialog", $r11, r13);

     label5:
        $r14 = specialinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable getDefaultIconDrawable(androidx.mediarouter.media.MediaRouter$RouteInfo)>(r1);

        return $r14;

        catch java.io.IOException from label1 to label2 with label4;
    }

    private android.graphics.drawable.Drawable getDefaultIconDrawable(androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1;
        int $i0;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $i0 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: int getDeviceType()>();

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mTvIcon>;

        return $r3;

     label2:
        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerIcon>;

        return $r2;

     label3:
        $z0 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: boolean isGroup()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerGroupIcon>;

        return $r5;

     label4:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mDefaultIcon>;

        return $r4;
    }

    public int getItemViewType(int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        int i0, $i1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item $r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item getItem(int)>(i0);

        $i1 = virtualinvoke $r1.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item: int getType()>();

        return $i1;
    }

    public androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item getItem(int)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter r0;
        int i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item $r3, $r4;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item mGroupVolumeItem>;

        return $r4;

     label1:
        $r1 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $i1 = i0 - 1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RecyclerAdapter$Item) $r2;

        return $r3;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator sInstance>
    void <init>()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator r0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.mediarouter.media.MediaRouter$RouteInfo, androidx.mediarouter.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator r0;
        androidx.mediarouter.media.MediaRouter$RouteInfo r1, r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouter$RouteInfo;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$RouteInfo;

        $r3 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r4);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator r0;
        java.lang.Object r1, r2;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3, $r4;
        int $i0;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.mediarouter.media.MediaRouter$RouteInfo) r1;

        $r3 = (androidx.mediarouter.media.MediaRouter$RouteInfo) r2;

        $i0 = virtualinvoke r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: int compare(androidx.mediarouter.media.MediaRouter$RouteInfo,androidx.mediarouter.media.MediaRouter$RouteInfo)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator $r0;

        $r0 = new androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator;

        specialinvoke $r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: void <init>()>();

        <androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$RouteComparator sInstance> = $r0;

        return;
    }

androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener
<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>
    void <init>(androidx.mediarouter.app.MediaRouteDynamicControllerDialog)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener r0;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog r1;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener;

        r1 := @parameter0: androidx.mediarouter.app.MediaRouteDynamicControllerDialog;

        r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStartTrackingTouch(android.widget.SeekBar)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener r0;
        android.widget.SeekBar r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2, $r4, $r7;
        androidx.mediarouter.media.MediaRouter$RouteInfo $r3, $r6;
        java.lang.Object $r5;
        android.os.Handler $r8;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener;

        r1 := @parameter0: android.widget.SeekBar;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser>;

        if $r3 == null goto label1;

        $r7 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r8 = $r7.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeMessages(int)>(2);

     label1:
        $r4 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r5 = virtualinvoke r1.<android.widget.SeekBar: java.lang.Object getTag()>();

        $r6 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r5;

        $r4.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: androidx.mediarouter.media.MediaRouter$RouteInfo mRouteForVolumeUpdatingByUser> = $r6;

        return;
    }

    public void onStopTrackingTouch(android.widget.SeekBar)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener r0;
        android.widget.SeekBar r1;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r2;
        android.os.Handler $r3;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener;

        r1 := @parameter0: android.widget.SeekBar;

        $r2 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r3 = $r2.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(2, 500L);

        return;
    }

    public void onProgressChanged(android.widget.SeekBar, int, boolean)
    {
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener r0;
        android.widget.SeekBar r1;
        int i0;
        boolean z0, $z1;
        androidx.mediarouter.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder r3;
        java.lang.Object $r4, $r8;
        androidx.mediarouter.app.MediaRouteDynamicControllerDialog $r5;
        java.util.Map $r6;
        java.lang.String $r7;

        r0 := @this: androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener;

        r1 := @parameter0: android.widget.SeekBar;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label4;

        $r4 = virtualinvoke r1.<android.widget.SeekBar: java.lang.Object getTag()>();

        r2 = (androidx.mediarouter.media.MediaRouter$RouteInfo) $r4;

        $r5 = r0.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$VolumeChangeListener: androidx.mediarouter.app.MediaRouteDynamicControllerDialog this$0>;

        $r6 = $r5.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog: java.util.Map mVolumeSliderHolderMap>;

        $r7 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: java.lang.String getId()>();

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder) $r8;

        if r3 == null goto label3;

        if i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r3.<androidx.mediarouter.app.MediaRouteDynamicControllerDialog$MediaRouteVolumeSliderHolder: void setMute(boolean)>($z1);

     label3:
        virtualinvoke r2.<androidx.mediarouter.media.MediaRouter$RouteInfo: void requestSetVolume(int)>(i0);

     label4:
        return;
    }

