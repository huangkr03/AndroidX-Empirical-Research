io.grpc.CompressorRegistry
<io.grpc.CompressorRegistry: io.grpc.CompressorRegistry DEFAULT_INSTANCE>
<io.grpc.CompressorRegistry: java.util.concurrent.ConcurrentMap compressors>
    static void <clinit>()
    {
        io.grpc.CompressorRegistry $r0;
        io.grpc.Compressor[] $r1;
        io.grpc.Codec$Gzip $r2;
        io.grpc.Codec $r3;

        $r0 = new io.grpc.CompressorRegistry;

        $r1 = newarray (io.grpc.Compressor)[2];

        $r2 = new io.grpc.Codec$Gzip;

        specialinvoke $r2.<io.grpc.Codec$Gzip: void <init>()>();

        $r1[0] = $r2;

        $r3 = <io.grpc.Codec$Identity: io.grpc.Codec NONE>;

        $r1[1] = $r3;

        specialinvoke $r0.<io.grpc.CompressorRegistry: void <init>(io.grpc.Compressor[])>($r1);

        <io.grpc.CompressorRegistry: io.grpc.CompressorRegistry DEFAULT_INSTANCE> = $r0;

        return;
    }

    transient void <init>(io.grpc.Compressor[])
    {
        io.grpc.CompressorRegistry $r0;
        io.grpc.Compressor[] $r1;
        io.grpc.Compressor $r2;
        java.util.concurrent.ConcurrentMap $r3;
        java.lang.String $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        int $i0, $i1;

        $r0 := @this: io.grpc.CompressorRegistry;

        $r1 := @parameter0: io.grpc.Compressor[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<io.grpc.CompressorRegistry: java.util.concurrent.ConcurrentMap compressors> = $r5;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        $r3 = $r0.<io.grpc.CompressorRegistry: java.util.concurrent.ConcurrentMap compressors>;

        $r4 = interfaceinvoke $r2.<io.grpc.Compressor: java.lang.String getMessageEncoding()>();

        interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static io.grpc.CompressorRegistry getDefaultInstance()
    {
        io.grpc.CompressorRegistry r0;

        r0 = <io.grpc.CompressorRegistry: io.grpc.CompressorRegistry DEFAULT_INSTANCE>;

        return r0;
    }

    public io.grpc.Compressor lookupCompressor(java.lang.String)
    {
        io.grpc.CompressorRegistry $r0;
        java.util.concurrent.ConcurrentMap $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        io.grpc.Compressor $r4;

        $r0 := @this: io.grpc.CompressorRegistry;

        $r3 := @parameter0: java.lang.String;

        $r1 = $r0.<io.grpc.CompressorRegistry: java.util.concurrent.ConcurrentMap compressors>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (io.grpc.Compressor) $r2;

        return $r4;
    }

