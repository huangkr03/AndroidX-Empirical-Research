kotlin.coroutines.jvm.internal.BaseContinuationImpl
<kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion>
    public void <init>(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        kotlin.coroutines.Continuation $r1;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion> = $r1;

        return;
    }

    public kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "completion");

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("create(Any?;Continuation) has not been overridden");

        throw $r3;
    }

    public kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "completion");

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("create(Continuation) has not been overridden");

        throw $r2;
    }

    public kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        boolean $z0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r2;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 = $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion>;

        $z0 = $r1 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 == 0 goto label1;

        $r2 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r1;

        return $r2;

     label1:
        return null;
    }

    public final kotlin.coroutines.Continuation getCompletion()
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        kotlin.coroutines.Continuation r1;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        r1 = $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion>;

        return r1;
    }

    public java.lang.StackTraceElement getStackTraceElement()
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        java.lang.StackTraceElement $r1;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 = staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)>($r0);

        return $r1;
    }

<kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)>
    protected void releaseIntercepted()
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        return;
    }

    public final void resumeWith(java.lang.Object)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2, $r3;
        kotlin.Result$Companion $r4;
        java.lang.Throwable $r5;
        boolean $z0;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r0;

     label1:
        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)>($r1);

        $r0 = (kotlin.coroutines.jvm.internal.BaseContinuationImpl) $r1;

        $r1 = $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

     label2:
        $r2 = virtualinvoke $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)>($r2);

     label3:
        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r2 == $r3 goto label4;

        $r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r2 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r2);

        goto label6;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        $r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r2 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r5);

        $r2 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r2);

     label6:
        virtualinvoke $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()>();

        $z0 = $r1 instanceof kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        if $z0 == 0 goto label7;

        goto label1;

     label7:
        interfaceinvoke $r1.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r2);

        return;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public java.lang.String toString()
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        java.lang.StringBuilder $r1;
        java.lang.StackTraceElement $r2;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        $r0 := @this: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Continuation at ");

        $r2 = virtualinvoke $r0.<kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()>();

        $r3 = $r2;

        if $r2 == null goto label1;

        goto label2;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

