androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter
<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>
    public void <init>(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "impl");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl> = r1;

        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection r1, $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public int hashCode()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: java.util.Collection impl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public boolean add(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public void clear()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public boolean removeIf(java.util.function.Predicate)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.function.Predicate r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.util.function.Predicate;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public final volatile int size()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter: int getSize()>();

        return $i0;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = (java.util.Collection) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.adapters.ImmutableCollectionAdapter;

        $r1 = (java.util.Collection) r0;

        $r2 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

