androidx.camera.view.video.OutputFileOptions
<androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata EMPTY_METADATA>
    void <init>()
    {
        androidx.camera.view.video.OutputFileOptions r0;

        r0 := @this: androidx.camera.view.video.OutputFileOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.camera.view.video.OutputFileOptions$Builder builder(java.io.File)
    {
        java.io.File r0;
        androidx.camera.view.video.AutoValue_OutputFileOptions$Builder $r1;
        androidx.camera.view.video.Metadata $r2;
        androidx.camera.view.video.OutputFileOptions$Builder $r3, $r4;

        r0 := @parameter0: java.io.File;

        $r1 = new androidx.camera.view.video.AutoValue_OutputFileOptions$Builder;

        specialinvoke $r1.<androidx.camera.view.video.AutoValue_OutputFileOptions$Builder: void <init>()>();

        $r2 = <androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata EMPTY_METADATA>;

        $r3 = virtualinvoke $r1.<androidx.camera.view.video.AutoValue_OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setMetadata(androidx.camera.view.video.Metadata)>($r2);

        $r4 = virtualinvoke $r3.<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setFile(java.io.File)>(r0);

        return $r4;
    }

    public static androidx.camera.view.video.OutputFileOptions$Builder builder(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;
        int $i0;
        androidx.camera.view.video.AutoValue_OutputFileOptions$Builder $r1;
        androidx.camera.view.video.Metadata $r2;
        androidx.camera.view.video.OutputFileOptions$Builder $r3, $r4;
        boolean $z0;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Using a ParcelFileDescriptor to record a video is only supported for Android 8.0 or above.");

        $r1 = new androidx.camera.view.video.AutoValue_OutputFileOptions$Builder;

        specialinvoke $r1.<androidx.camera.view.video.AutoValue_OutputFileOptions$Builder: void <init>()>();

        $r2 = <androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata EMPTY_METADATA>;

        $r3 = virtualinvoke $r1.<androidx.camera.view.video.AutoValue_OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setMetadata(androidx.camera.view.video.Metadata)>($r2);

        $r4 = virtualinvoke $r3.<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setFileDescriptor(android.os.ParcelFileDescriptor)>(r0);

        return $r4;
    }

    public static androidx.camera.view.video.OutputFileOptions$Builder builder(android.content.ContentResolver, android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        androidx.camera.view.video.AutoValue_OutputFileOptions$Builder $r3;
        androidx.camera.view.video.Metadata $r4;
        androidx.camera.view.video.OutputFileOptions$Builder $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.content.ContentValues;

        $r3 = new androidx.camera.view.video.AutoValue_OutputFileOptions$Builder;

        specialinvoke $r3.<androidx.camera.view.video.AutoValue_OutputFileOptions$Builder: void <init>()>();

        $r4 = <androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata EMPTY_METADATA>;

        $r5 = virtualinvoke $r3.<androidx.camera.view.video.AutoValue_OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setMetadata(androidx.camera.view.video.Metadata)>($r4);

        $r6 = virtualinvoke $r5.<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setContentResolver(android.content.ContentResolver)>(r0);

        $r7 = virtualinvoke $r6.<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setSaveCollection(android.net.Uri)>(r1);

        $r8 = virtualinvoke $r7.<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setContentValues(android.content.ContentValues)>(r2);

        return $r8;
    }

<androidx.camera.view.video.OutputFileOptions: java.io.File getFile()>
<androidx.camera.view.video.OutputFileOptions: android.os.ParcelFileDescriptor getFileDescriptor()>
<androidx.camera.view.video.OutputFileOptions: android.content.ContentResolver getContentResolver()>
<androidx.camera.view.video.OutputFileOptions: android.net.Uri getSaveCollection()>
<androidx.camera.view.video.OutputFileOptions: android.content.ContentValues getContentValues()>
<androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata getMetadata()>
    private boolean isSavingToMediaStore()
    {
        androidx.camera.view.video.OutputFileOptions r0;
        android.net.Uri $r1;
        android.content.ContentResolver $r2;
        android.content.ContentValues $r3;
        boolean $z0;

        r0 := @this: androidx.camera.view.video.OutputFileOptions;

        $r1 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.net.Uri getSaveCollection()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.content.ContentValues getContentValues()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSavingToFile()
    {
        androidx.camera.view.video.OutputFileOptions r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: androidx.camera.view.video.OutputFileOptions;

        $r1 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: java.io.File getFile()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSavingToFileDescriptor()
    {
        androidx.camera.view.video.OutputFileOptions r0;
        android.os.ParcelFileDescriptor $r1;
        boolean $z0;

        r0 := @this: androidx.camera.view.video.OutputFileOptions;

        $r1 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.os.ParcelFileDescriptor getFileDescriptor()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public androidx.camera.core.VideoCapture$OutputFileOptions toVideoCaptureOutputFileOptions()
    {
        androidx.camera.view.video.OutputFileOptions r0;
        androidx.camera.core.VideoCapture$Metadata r1, $r23;
        boolean $z0, $z1, $z2;
        androidx.camera.core.VideoCapture$OutputFileOptions$Builder $r2, $r13, $r18, r22;
        android.content.ContentResolver $r3, $r5;
        java.lang.Object $r4, $r7, $r10, $r15, $r20;
        android.net.Uri $r6, $r8;
        android.content.ContentValues $r9, $r11;
        android.os.ParcelFileDescriptor $r14, $r16;
        java.io.FileDescriptor $r17;
        java.io.File $r19, $r21;
        androidx.camera.view.video.Metadata $r24;
        android.location.Location $r25;
        androidx.camera.core.VideoCapture$OutputFileOptions $r26;

        r0 := @this: androidx.camera.view.video.OutputFileOptions;

        $z0 = specialinvoke r0.<androidx.camera.view.video.OutputFileOptions: boolean isSavingToFile()>();

        if $z0 == 0 goto label1;

        $r18 = new androidx.camera.core.VideoCapture$OutputFileOptions$Builder;

        $r19 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: java.io.File getFile()>();

        $r20 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r19);

        $r21 = (java.io.File) $r20;

        specialinvoke $r18.<androidx.camera.core.VideoCapture$OutputFileOptions$Builder: void <init>(java.io.File)>($r21);

        r22 = $r18;

        goto label3;

     label1:
        $z1 = specialinvoke r0.<androidx.camera.view.video.OutputFileOptions: boolean isSavingToFileDescriptor()>();

        if $z1 == 0 goto label2;

        $r13 = new androidx.camera.core.VideoCapture$OutputFileOptions$Builder;

        $r14 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.os.ParcelFileDescriptor getFileDescriptor()>();

        $r15 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        $r16 = (android.os.ParcelFileDescriptor) $r15;

        $r17 = virtualinvoke $r16.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r13.<androidx.camera.core.VideoCapture$OutputFileOptions$Builder: void <init>(java.io.FileDescriptor)>($r17);

        r22 = $r13;

        goto label3;

     label2:
        $z2 = specialinvoke r0.<androidx.camera.view.video.OutputFileOptions: boolean isSavingToMediaStore()>();

        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z2);

        $r2 = new androidx.camera.core.VideoCapture$OutputFileOptions$Builder;

        $r3 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (android.content.ContentResolver) $r4;

        $r6 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.net.Uri getSaveCollection()>();

        $r7 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (android.net.Uri) $r7;

        $r9 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: android.content.ContentValues getContentValues()>();

        $r10 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = (android.content.ContentValues) $r10;

        specialinvoke $r2.<androidx.camera.core.VideoCapture$OutputFileOptions$Builder: void <init>(android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>($r5, $r8, $r11);

        r22 = $r2;

     label3:
        $r23 = new androidx.camera.core.VideoCapture$Metadata;

        specialinvoke $r23.<androidx.camera.core.VideoCapture$Metadata: void <init>()>();

        r1 = $r23;

        $r24 = virtualinvoke r0.<androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata getMetadata()>();

        $r25 = virtualinvoke $r24.<androidx.camera.view.video.Metadata: android.location.Location getLocation()>();

        r1.<androidx.camera.core.VideoCapture$Metadata: android.location.Location location> = $r25;

        virtualinvoke r22.<androidx.camera.core.VideoCapture$OutputFileOptions$Builder: androidx.camera.core.VideoCapture$OutputFileOptions$Builder setMetadata(androidx.camera.core.VideoCapture$Metadata)>(r1);

        $r26 = virtualinvoke r22.<androidx.camera.core.VideoCapture$OutputFileOptions$Builder: androidx.camera.core.VideoCapture$OutputFileOptions build()>();

        return $r26;
    }

    static void <clinit>()
    {
        androidx.camera.view.video.Metadata$Builder $r0;
        androidx.camera.view.video.Metadata $r1;

        $r0 = staticinvoke <androidx.camera.view.video.Metadata: androidx.camera.view.video.Metadata$Builder builder()>();

        $r1 = virtualinvoke $r0.<androidx.camera.view.video.Metadata$Builder: androidx.camera.view.video.Metadata build()>();

        <androidx.camera.view.video.OutputFileOptions: androidx.camera.view.video.Metadata EMPTY_METADATA> = $r1;

        return;
    }

androidx.camera.view.video.OutputFileOptions$Builder
    void <init>()
    {
        androidx.camera.view.video.OutputFileOptions$Builder r0;

        r0 := @this: androidx.camera.view.video.OutputFileOptions$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setFile(java.io.File)>
<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setFileDescriptor(android.os.ParcelFileDescriptor)>
<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setContentResolver(android.content.ContentResolver)>
<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setSaveCollection(android.net.Uri)>
<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setContentValues(android.content.ContentValues)>
<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions$Builder setMetadata(androidx.camera.view.video.Metadata)>
<androidx.camera.view.video.OutputFileOptions$Builder: androidx.camera.view.video.OutputFileOptions build()>
