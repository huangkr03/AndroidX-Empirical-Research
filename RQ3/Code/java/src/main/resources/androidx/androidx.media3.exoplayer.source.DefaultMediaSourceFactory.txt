androidx.media3.exoplayer.source.DefaultMediaSourceFactory
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: java.lang.String TAG>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory serverSideAdInsertionMediaSourceFactory>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.ads.AdsLoader$Provider adsLoaderProvider>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.common.AdViewProvider adViewProvider>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveTargetOffsetMs>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMinOffsetMs>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMaxOffsetMs>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMinSpeed>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMaxSpeed>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: boolean useProgressiveMediaSourceForSubtitles>
    public void <init>(android.content.Context)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        android.content.Context r1;
        androidx.media3.datasource.DefaultDataSource$Factory $r2;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: android.content.Context;

        $r2 = new androidx.media3.datasource.DefaultDataSource$Factory;

        specialinvoke $r2.<androidx.media3.datasource.DefaultDataSource$Factory: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: void <init>(androidx.media3.datasource.DataSource$Factory)>($r2);

        return;
    }

    public void <init>(android.content.Context, androidx.media3.extractor.ExtractorsFactory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        android.content.Context r1;
        androidx.media3.extractor.ExtractorsFactory r2;
        androidx.media3.datasource.DefaultDataSource$Factory $r3;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.extractor.ExtractorsFactory;

        $r3 = new androidx.media3.datasource.DefaultDataSource$Factory;

        specialinvoke $r3.<androidx.media3.datasource.DefaultDataSource$Factory: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory)>($r3, r2);

        return;
    }

    public void <init>(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.extractor.DefaultExtractorsFactory $r2;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        $r2 = new androidx.media3.extractor.DefaultExtractorsFactory;

        specialinvoke $r2.<androidx.media3.extractor.DefaultExtractorsFactory: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory)>(r1, $r2);

        return;
    }

    public void <init>(androidx.media3.datasource.DataSource$Factory, androidx.media3.extractor.ExtractorsFactory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.extractor.ExtractorsFactory r2;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r2 := @parameter1: androidx.media3.extractor.ExtractorsFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r1;

        $r3 = new androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        specialinvoke $r3.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: void <init>(androidx.media3.extractor.ExtractorsFactory)>(r2);

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader> = $r3;

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>;

        virtualinvoke $r4.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: void setDataSourceFactory(androidx.media3.datasource.DataSource$Factory)>(r1);

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveTargetOffsetMs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMinOffsetMs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMaxOffsetMs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMinSpeed> = -3.4028235E38F;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMaxSpeed> = -3.4028235E38F;

        return;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory experimentalUseProgressiveMediaSourceForSubtitles(boolean)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: boolean useProgressiveMediaSourceForSubtitles> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setAdsLoaderProvider(androidx.media3.exoplayer.source.ads.AdsLoader$Provider)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.exoplayer.source.ads.AdsLoader$Provider r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.source.ads.AdsLoader$Provider;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.ads.AdsLoader$Provider adsLoaderProvider> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setAdViewProvider(androidx.media3.common.AdViewProvider)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.common.AdViewProvider r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.common.AdViewProvider;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.common.AdViewProvider adViewProvider> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLocalAdInsertionComponents(androidx.media3.exoplayer.source.ads.AdsLoader$Provider, androidx.media3.common.AdViewProvider)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.exoplayer.source.ads.AdsLoader$Provider r1, $r4;
        androidx.media3.common.AdViewProvider r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.source.ads.AdsLoader$Provider;

        r2 := @parameter1: androidx.media3.common.AdViewProvider;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.media3.exoplayer.source.ads.AdsLoader$Provider) $r3;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.ads.AdsLoader$Provider adsLoaderProvider> = $r4;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (androidx.media3.common.AdViewProvider) $r5;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.common.AdViewProvider adViewProvider> = $r6;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory clearLocalAdInsertionComponents()
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.ads.AdsLoader$Provider adsLoaderProvider> = null;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.common.AdViewProvider adViewProvider> = null;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setDataSourceFactory(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader $r2;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r1;

        $r2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>;

        virtualinvoke $r2.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: void setDataSourceFactory(androidx.media3.datasource.DataSource$Factory)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setServerSideAdInsertionMediaSourceFactory(androidx.media3.exoplayer.source.MediaSource$Factory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.exoplayer.source.MediaSource$Factory r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$Factory;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory serverSideAdInsertionMediaSourceFactory> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLiveTargetOffsetMs(long)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveTargetOffsetMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLiveMinOffsetMs(long)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMinOffsetMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLiveMaxOffsetMs(long)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMaxOffsetMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLiveMinSpeed(float)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        float f0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        f0 := @parameter0: float;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMinSpeed> = f0;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLiveMaxSpeed(float)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        float f0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        f0 := @parameter0: float;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMaxSpeed> = f0;

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1, $r4;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setDrmSessionManagerProvider no longer handles null by instantiating a new DefaultDrmSessionManagerProvider. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r4 = (androidx.media3.exoplayer.drm.DrmSessionManagerProvider) $r3;

        virtualinvoke $r2.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: void setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>($r4);

        return r0;
    }

    public androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1, $r3;
        java.lang.Object $r2;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader $r4;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setLoadErrorHandlingPolicy no longer handles null by instantiating a new DefaultLoadErrorHandlingPolicy. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy) $r2;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = $r3;

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>;

        virtualinvoke $r4.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: void setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        return r0;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader $r1;
        int[] $r2;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        $r1 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: int[] getSupportedTypes()>();

        return $r2;
    }

    public androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        java.lang.String r1, $r15, $r21, $r47, $r51, $r61, $r65, $r73;
        int i0, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i19;
        androidx.media3.exoplayer.source.MediaSource$Factory r2, $r85, $r87;
        androidx.media3.common.MediaItem$LiveConfiguration$Builder r3;
        androidx.media3.common.MediaItem$LiveConfiguration r4, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        com.google.common.collect.ImmutableList r5;
        androidx.media3.exoplayer.source.MediaSource[] r6;
        androidx.media3.extractor.ExtractorsFactory r7;
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r8, $r67;
        androidx.media3.common.MediaItem$LocalConfiguration $r9, $r11, $r13, $r14, $r30, $r32;
        android.net.Uri $r12, $r16, $r72;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader $r17;
        java.lang.StringBuilder $r18, $r19, $r20;
        long $l1, $l5, $l7, $l16, $l17, $l18;
        byte $b2, $b3, $b4, $b6, $b8;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r31, $r39, $r45, $r49, $r53, $r56, $r59, $r63, $r70, $r86;
        androidx.media3.exoplayer.source.MediaSource $r33, $r34, $r88, r90;
        androidx.media3.exoplayer.source.MergingMediaSource $r35;
        androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory $r36, r92;
        androidx.media3.datasource.DataSource$Factory $r37, $r68;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r38, $r42, $r69, $r76;
        androidx.media3.common.MediaItem$SubtitleConfiguration $r40, $r46, $r50, $r54, $r57, $r60, $r64, $r71;
        androidx.media3.exoplayer.source.SingleSampleMediaSource $r41;
        androidx.media3.common.Format$Builder $r44, $r48, $r52, $r55, $r58, $r62, $r66;
        androidx.media3.common.MediaItem $r74, r89;
        androidx.media3.exoplayer.source.ProgressiveMediaSource $r75;
        androidx.media3.common.MediaItem$Builder $r78, $r79;
        androidx.media3.common.Format r91;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r89 := @parameter0: androidx.media3.common.MediaItem;

        $r9 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r12 = $r11.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        r1 = virtualinvoke $r12.<android.net.Uri: java.lang.String getScheme()>();

        if r1 == null goto label01;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ssai");

        if $z3 == 0 goto label01;

        $r85 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory serverSideAdInsertionMediaSourceFactory>;

        $r86 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r85);

        $r87 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r86;

        $r88 = interfaceinvoke $r87.<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)>(r89);

        return $r88;

     label01:
        $r13 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r16 = $r13.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r14 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r15 = $r14.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.String mimeType>;

        i0 = staticinvoke <androidx.media3.common.util.Util: int inferContentTypeForUriAndMimeType(android.net.Uri,java.lang.String)>($r16, $r15);

        $r17 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader>;

        r2 = virtualinvoke $r17.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(int)>(i0);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No suitable media source factory found for content type: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object,java.lang.Object)>(r2, $r21);

        $r23 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        r3 = virtualinvoke $r23.<androidx.media3.common.MediaItem$LiveConfiguration: androidx.media3.common.MediaItem$LiveConfiguration$Builder buildUpon()>();

        $r24 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l1 = $r24.<androidx.media3.common.MediaItem$LiveConfiguration: long targetOffsetMs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 != 0 goto label02;

        $l18 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveTargetOffsetMs>;

        virtualinvoke r3.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setTargetOffsetMs(long)>($l18);

     label02:
        $r25 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $f0 = $r25.<androidx.media3.common.MediaItem$LiveConfiguration: float minPlaybackSpeed>;

        $b3 = $f0 cmpl -3.4028235E38F;

        if $b3 != 0 goto label03;

        $f3 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMinSpeed>;

        virtualinvoke r3.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setMinPlaybackSpeed(float)>($f3);

     label03:
        $r26 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $f1 = $r26.<androidx.media3.common.MediaItem$LiveConfiguration: float maxPlaybackSpeed>;

        $b4 = $f1 cmpl -3.4028235E38F;

        if $b4 != 0 goto label04;

        $f2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: float liveMaxSpeed>;

        virtualinvoke r3.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setMaxPlaybackSpeed(float)>($f2);

     label04:
        $r27 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l5 = $r27.<androidx.media3.common.MediaItem$LiveConfiguration: long minOffsetMs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 != 0 goto label05;

        $l17 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMinOffsetMs>;

        virtualinvoke r3.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setMinOffsetMs(long)>($l17);

     label05:
        $r28 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l7 = $r28.<androidx.media3.common.MediaItem$LiveConfiguration: long maxOffsetMs>;

        $b8 = $l7 cmp -9223372036854775807L;

        if $b8 != 0 goto label06;

        $l16 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: long liveMaxOffsetMs>;

        virtualinvoke r3.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setMaxOffsetMs(long)>($l16);

     label06:
        r4 = virtualinvoke r3.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration build()>();

        $r29 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $z0 = virtualinvoke r4.<androidx.media3.common.MediaItem$LiveConfiguration: boolean equals(java.lang.Object)>($r29);

        if $z0 != 0 goto label07;

        $r78 = virtualinvoke r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r79 = virtualinvoke $r78.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setLiveConfiguration(androidx.media3.common.MediaItem$LiveConfiguration)>(r4);

        r89 = virtualinvoke $r79.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

     label07:
        r90 = interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)>(r89);

        $r30 = r89.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r31 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r30);

        $r32 = (androidx.media3.common.MediaItem$LocalConfiguration) $r31;

        r5 = $r32.<androidx.media3.common.MediaItem$LocalConfiguration: com.google.common.collect.ImmutableList subtitleConfigurations>;

        $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label14;

        $i9 = interfaceinvoke r5.<java.util.List: int size()>();

        $i10 = $i9 + 1;

        r6 = newarray (androidx.media3.exoplayer.source.MediaSource)[$i10];

        r6[0] = r90;

        i19 = 0;

     label08:
        $i11 = interfaceinvoke r5.<java.util.List: int size()>();

        if i19 >= $i11 goto label13;

        $z2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: boolean useProgressiveMediaSourceForSubtitles>;

        if $z2 == 0 goto label10;

        $r44 = new androidx.media3.common.Format$Builder;

        specialinvoke $r44.<androidx.media3.common.Format$Builder: void <init>()>();

        $r45 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r46 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r45;

        $r47 = $r46.<androidx.media3.common.MediaItem$SubtitleConfiguration: java.lang.String mimeType>;

        $r48 = virtualinvoke $r44.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>($r47);

        $r49 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r50 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r49;

        $r51 = $r50.<androidx.media3.common.MediaItem$SubtitleConfiguration: java.lang.String language>;

        $r52 = virtualinvoke $r48.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r51);

        $r53 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r54 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r53;

        $i13 = $r54.<androidx.media3.common.MediaItem$SubtitleConfiguration: int selectionFlags>;

        $r55 = virtualinvoke $r52.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSelectionFlags(int)>($i13);

        $r56 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r57 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r56;

        $i14 = $r57.<androidx.media3.common.MediaItem$SubtitleConfiguration: int roleFlags>;

        $r58 = virtualinvoke $r55.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>($i14);

        $r59 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r60 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r59;

        $r61 = $r60.<androidx.media3.common.MediaItem$SubtitleConfiguration: java.lang.String label>;

        $r62 = virtualinvoke $r58.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>($r61);

        $r63 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r64 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r63;

        $r65 = $r64.<androidx.media3.common.MediaItem$SubtitleConfiguration: java.lang.String id>;

        $r66 = virtualinvoke $r62.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r65);

        r91 = virtualinvoke $r66.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r7 = dynamicinvoke "createExtractors" <androidx.media3.extractor.ExtractorsFactory (androidx.media3.common.Format)>(r91) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.extractor.Extractor[] lambda$createMediaSource$0(androidx.media3.common.Format)>, methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__());

        $r67 = new androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        $r68 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        specialinvoke $r67.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory)>($r68, r7);

        r8 = $r67;

        $r69 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        if $r69 == null goto label09;

        $r76 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        virtualinvoke r8.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>($r76);

     label09:
        $i15 = i19 + 1;

        $r70 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r71 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r70;

        $r72 = $r71.<androidx.media3.common.MediaItem$SubtitleConfiguration: android.net.Uri uri>;

        $r73 = virtualinvoke $r72.<android.net.Uri: java.lang.String toString()>();

        $r74 = staticinvoke <androidx.media3.common.MediaItem: androidx.media3.common.MediaItem fromUri(java.lang.String)>($r73);

        $r75 = virtualinvoke r8.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaSource createMediaSource(androidx.media3.common.MediaItem)>($r74);

        r6[$i15] = $r75;

        goto label12;

     label10:
        $r36 = new androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory;

        $r37 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        specialinvoke $r36.<androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory)>($r37);

        r92 = $r36;

        $r38 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        if $r38 == null goto label11;

        $r42 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        virtualinvoke r92.<androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory: androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>($r42);

     label11:
        $i12 = i19 + 1;

        $r39 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r40 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r39;

        $r41 = virtualinvoke r92.<androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory: androidx.media3.exoplayer.source.SingleSampleMediaSource createMediaSource(androidx.media3.common.MediaItem$SubtitleConfiguration,long)>($r40, -9223372036854775807L);

        r6[$i12] = $r41;

     label12:
        i19 = i19 + 1;

        goto label08;

     label13:
        $r35 = new androidx.media3.exoplayer.source.MergingMediaSource;

        specialinvoke $r35.<androidx.media3.exoplayer.source.MergingMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource[])>(r6);

        r90 = $r35;

     label14:
        $r33 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource maybeClipMediaSource(androidx.media3.common.MediaItem,androidx.media3.exoplayer.source.MediaSource)>(r89, r90);

        $r34 = specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource maybeWrapWithAdsMediaSource(androidx.media3.common.MediaItem,androidx.media3.exoplayer.source.MediaSource)>(r89, $r33);

        return $r34;
    }

    private static androidx.media3.exoplayer.source.MediaSource maybeClipMediaSource(androidx.media3.common.MediaItem, androidx.media3.exoplayer.source.MediaSource)
    {
        androidx.media3.common.MediaItem r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        androidx.media3.common.MediaItem$ClippingConfiguration $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        long $l0, $l2, $l3, $l4, $l6, $l7;
        byte $b1, $b5;
        androidx.media3.exoplayer.source.ClippingMediaSource $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        $r2 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $l0 = $r2.<androidx.media3.common.MediaItem$ClippingConfiguration: long startPositionMs>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r7 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $l4 = $r7.<androidx.media3.common.MediaItem$ClippingConfiguration: long endPositionMs>;

        $b5 = $l4 cmp -9223372036854775808L;

        if $b5 != 0 goto label1;

        $r8 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $z2 = $r8.<androidx.media3.common.MediaItem$ClippingConfiguration: boolean relativeToDefaultPosition>;

        if $z2 != 0 goto label1;

        return r1;

     label1:
        $r3 = new androidx.media3.exoplayer.source.ClippingMediaSource;

        $r9 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $l6 = $r9.<androidx.media3.common.MediaItem$ClippingConfiguration: long startPositionMs>;

        $l2 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l6);

        $r10 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $l7 = $r10.<androidx.media3.common.MediaItem$ClippingConfiguration: long endPositionMs>;

        $l3 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l7);

        $r11 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $z3 = $r11.<androidx.media3.common.MediaItem$ClippingConfiguration: boolean startsAtKeyFrame>;

        if $z3 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r4 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $z1 = $r4.<androidx.media3.common.MediaItem$ClippingConfiguration: boolean relativeToLiveWindow>;

        $r5 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $z0 = $r5.<androidx.media3.common.MediaItem$ClippingConfiguration: boolean relativeToDefaultPosition>;

        specialinvoke $r3.<androidx.media3.exoplayer.source.ClippingMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource,long,long,boolean,boolean,boolean)>(r1, $l2, $l3, $z4, $z1, $z0);

        return $r3;
    }

    private androidx.media3.exoplayer.source.MediaSource maybeWrapWithAdsMediaSource(androidx.media3.common.MediaItem, androidx.media3.exoplayer.source.MediaSource)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.common.MediaItem$AdsConfiguration r3;
        androidx.media3.exoplayer.source.ads.AdsLoader$Provider r4;
        androidx.media3.common.AdViewProvider r5;
        androidx.media3.exoplayer.source.ads.AdsLoader r6;
        androidx.media3.common.MediaItem$LocalConfiguration $r7, $r9, $r14;
        androidx.media3.exoplayer.source.ads.AdsMediaSource $r10;
        androidx.media3.datasource.DataSpec $r11;
        android.net.Uri $r12, $r15, $r16;
        java.lang.Object $r13, $r19;
        java.lang.String $r17;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        $r7 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        r3 = $r9.<androidx.media3.common.MediaItem$LocalConfiguration: androidx.media3.common.MediaItem$AdsConfiguration adsConfiguration>;

        if r3 != null goto label1;

        return r2;

     label1:
        r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.ads.AdsLoader$Provider adsLoaderProvider>;

        r5 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.common.AdViewProvider adViewProvider>;

        if r4 == null goto label2;

        if r5 != null goto label3;

     label2:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DMediaSourceFactory", "Playing media without ads. Configure ad support by calling setAdsLoaderProvider and setAdViewProvider.");

        return r2;

     label3:
        r6 = interfaceinvoke r4.<androidx.media3.exoplayer.source.ads.AdsLoader$Provider: androidx.media3.exoplayer.source.ads.AdsLoader getAdsLoader(androidx.media3.common.MediaItem$AdsConfiguration)>(r3);

        if r6 != null goto label4;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DMediaSourceFactory", "Playing media without ads, as no AdsLoader was provided.");

        return r2;

     label4:
        $r10 = new androidx.media3.exoplayer.source.ads.AdsMediaSource;

        $r11 = new androidx.media3.datasource.DataSpec;

        $r12 = r3.<androidx.media3.common.MediaItem$AdsConfiguration: android.net.Uri adTagUri>;

        specialinvoke $r11.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>($r12);

        $r13 = r3.<androidx.media3.common.MediaItem$AdsConfiguration: java.lang.Object adsId>;

        if $r13 == null goto label5;

        $r19 = r3.<androidx.media3.common.MediaItem$AdsConfiguration: java.lang.Object adsId>;

        goto label6;

     label5:
        $r17 = r1.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $r14 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r16 = $r14.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r15 = r3.<androidx.media3.common.MediaItem$AdsConfiguration: android.net.Uri adTagUri>;

        $r19 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>($r17, $r16, $r15);

     label6:
        specialinvoke $r10.<androidx.media3.exoplayer.source.ads.AdsMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource,androidx.media3.datasource.DataSpec,java.lang.Object,androidx.media3.exoplayer.source.MediaSource$Factory,androidx.media3.exoplayer.source.ads.AdsLoader,androidx.media3.common.AdViewProvider)>(r2, $r11, $r19, r0, r6, r5);

        return $r10;
    }

    private static androidx.media3.exoplayer.source.MediaSource$Factory newInstance(java.lang.Class, androidx.media3.datasource.DataSource$Factory)
    {
        java.lang.Class r0;
        androidx.media3.datasource.DataSource$Factory r1;
        java.lang.Throwable r2, $r8;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        androidx.media3.exoplayer.source.MediaSource$Factory $r7;
        java.lang.IllegalStateException $r9;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: androidx.media3.datasource.DataSource$Factory;

     label1:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroidx/media3/datasource/DataSource$Factory;";

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r7 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r2);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static androidx.media3.exoplayer.source.MediaSource$Factory newInstance(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r7;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        androidx.media3.exoplayer.source.MediaSource$Factory $r6;
        java.lang.IllegalStateException $r8;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        $r6 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0, $r2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        return $r2;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory r0, $r2;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.DefaultMediaSourceFactory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        return $r2;
    }

    private static androidx.media3.extractor.Extractor[] lambda$createMediaSource$0(androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0;
        java.lang.Object[] $r1;
        androidx.media3.exoplayer.text.SubtitleDecoderFactory $r2, $r3;
        boolean $z0;
        androidx.media3.extractor.text.SubtitleDecoder $r4;
        java.lang.Object $r5;
        androidx.media3.extractor.text.SubtitleExtractor r6;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r7;
        androidx.media3.extractor.Extractor[] r8;

        r0 := @parameter0: androidx.media3.common.Format;

        $r1 = newarray (androidx.media3.extractor.Extractor)[1];

        $r2 = <androidx.media3.exoplayer.text.SubtitleDecoderFactory: androidx.media3.exoplayer.text.SubtitleDecoderFactory DEFAULT>;

        $z0 = interfaceinvoke $r2.<androidx.media3.exoplayer.text.SubtitleDecoderFactory: boolean supportsFormat(androidx.media3.common.Format)>(r0);

        if $z0 == 0 goto label1;

        r6 = new androidx.media3.extractor.text.SubtitleExtractor;

        $r5 = r6;

        $r3 = <androidx.media3.exoplayer.text.SubtitleDecoderFactory: androidx.media3.exoplayer.text.SubtitleDecoderFactory DEFAULT>;

        $r4 = interfaceinvoke $r3.<androidx.media3.exoplayer.text.SubtitleDecoderFactory: androidx.media3.extractor.text.SubtitleDecoder createDecoder(androidx.media3.common.Format)>(r0);

        specialinvoke r6.<androidx.media3.extractor.text.SubtitleExtractor: void <init>(androidx.media3.extractor.text.SubtitleDecoder,androidx.media3.common.Format)>($r4, r0);

        goto label2;

     label1:
        r7 = new androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        $r5 = r7;

        specialinvoke r7.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor: void <init>(androidx.media3.common.Format)>(r0);

     label2:
        $r1[0] = $r5;

        r8 = (androidx.media3.extractor.Extractor[]) $r1;

        return r8;
    }

    static androidx.media3.exoplayer.source.MediaSource$Factory access$000(java.lang.Class)
    {
        java.lang.Class r0;
        androidx.media3.exoplayer.source.MediaSource$Factory $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory newInstance(java.lang.Class)>(r0);

        return $r1;
    }

    static androidx.media3.exoplayer.source.MediaSource$Factory access$100(java.lang.Class, androidx.media3.datasource.DataSource$Factory)
    {
        java.lang.Class r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.MediaSource$Factory $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        $r2 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory newInstance(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r0, r1);

        return $r2;
    }

androidx.media3.exoplayer.source.DefaultMediaSourceFactory$AdsLoaderProvider
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.extractor.ExtractorsFactory extractorsFactory>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactorySuppliers>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Set supportedTypes>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.datasource.DataSource$Factory dataSourceFactory>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
    public void <init>(androidx.media3.extractor.ExtractorsFactory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        androidx.media3.extractor.ExtractorsFactory r1;
        java.util.HashMap $r2, $r4;
        java.util.HashSet $r3;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorsFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.extractor.ExtractorsFactory extractorsFactory> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactorySuppliers> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Set supportedTypes> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories> = $r4;

        return;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        java.util.Set $r1;
        int[] $r2;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: void ensureAllSuppliersAreLoaded()>();

        $r1 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Set supportedTypes>;

        $r2 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

    public androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(int)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        int i0;
        com.google.common.base.Supplier r1;
        java.util.Map $r2, $r8;
        java.lang.Integer $r3, $r9;
        java.lang.Object $r4, $r5;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider $r6, $r13;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7, $r11;
        androidx.media3.exoplayer.source.MediaSource$Factory r15, r16;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r15 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r4;

        if r15 == null goto label1;

        return r15;

     label1:
        r1 = specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: com.google.common.base.Supplier maybeLoadSupplier(int)>(i0);

        if r1 != null goto label2;

        return null;

     label2:
        $r5 = interfaceinvoke r1.<com.google.common.base.Supplier: java.lang.Object get()>();

        r16 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r5;

        $r6 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>;

        if $r6 == null goto label3;

        $r13 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>;

        interfaceinvoke r16.<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>($r13);

     label3:
        $r7 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        if $r7 == null goto label4;

        $r11 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        interfaceinvoke r16.<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>($r11);

     label4:
        $r8 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r16);

        return r16;
    }

    public void setDataSourceFactory(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        androidx.media3.datasource.DataSource$Factory r1, $r2;
        java.util.Map $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        $r2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        if r1 == $r2 goto label1;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r1;

        $r3 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactorySuppliers>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

     label1:
        return;
    }

    public void setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = r1;

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r6;

        interfaceinvoke r3.<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        goto label1;

     label2:
        return;
    }

    public void setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r1;

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactories>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r6;

        interfaceinvoke r3.<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        goto label1;

     label2:
        return;
    }

    private void ensureAllSuppliersAreLoaded()
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: com.google.common.base.Supplier maybeLoadSupplier(int)>(0);

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: com.google.common.base.Supplier maybeLoadSupplier(int)>(1);

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: com.google.common.base.Supplier maybeLoadSupplier(int)>(2);

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: com.google.common.base.Supplier maybeLoadSupplier(int)>(3);

        specialinvoke r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: com.google.common.base.Supplier maybeLoadSupplier(int)>(4);

        return;
    }

    private com.google.common.base.Supplier maybeLoadSupplier(int)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        int i0;
        androidx.media3.datasource.DataSource$Factory r1, $r4;
        java.util.Map $r2, $r6, $r15;
        java.lang.Integer $r3, $r7, $r10, $r16;
        boolean $z0;
        java.lang.Object $r5, $r17;
        java.util.Set $r9;
        java.lang.Class $r11, $r12, $r13, $r14, r21, r22, r23, r24;
        com.google.common.base.Supplier $r18, r20;
        java.lang.Throwable $r19, r25;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactorySuppliers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label01;

        $r15 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactorySuppliers>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $r18 = (com.google.common.base.Supplier) $r17;

        return $r18;

     label01:
        r20 = null;

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r1 = (androidx.media3.datasource.DataSource$Factory) $r5;

     label02:
        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            default: goto label08;
        };

     label03:
        $r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.exoplayer.dash.DashMediaSource$Factory");

        r21 = virtualinvoke $r14.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/media3/exoplayer/source/MediaSource$Factory;");

        r20 = dynamicinvoke "get" <com.google.common.base.Supplier (java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r21, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$0(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>, methodtype: androidx.media3.exoplayer.source.MediaSource$Factory __METHODTYPE__());

        goto label08;

     label04:
        $r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory");

        r22 = virtualinvoke $r13.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/media3/exoplayer/source/MediaSource$Factory;");

        r20 = dynamicinvoke "get" <com.google.common.base.Supplier (java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r22, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$1(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>, methodtype: androidx.media3.exoplayer.source.MediaSource$Factory __METHODTYPE__());

        goto label08;

     label05:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.exoplayer.hls.HlsMediaSource$Factory");

        r23 = virtualinvoke $r12.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/media3/exoplayer/source/MediaSource$Factory;");

        r20 = dynamicinvoke "get" <com.google.common.base.Supplier (java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r23, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$2(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>, methodtype: androidx.media3.exoplayer.source.MediaSource$Factory __METHODTYPE__());

        goto label08;

     label06:
        $r11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory");

        r24 = virtualinvoke $r11.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/media3/exoplayer/source/MediaSource$Factory;");

        r20 = dynamicinvoke "get" <com.google.common.base.Supplier (java.lang.Class)>(r24) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$3(java.lang.Class)>, methodtype: androidx.media3.exoplayer.source.MediaSource$Factory __METHODTYPE__());

        goto label08;

     label07:
        r20 = dynamicinvoke "get" <com.google.common.base.Supplier (androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader,androidx.media3.datasource.DataSource$Factory)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$4(androidx.media3.datasource.DataSource$Factory)>, methodtype: androidx.media3.exoplayer.source.MediaSource$Factory __METHODTYPE__());

        goto label08;

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        r25 = $r19;

     label10:
        $r6 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Map mediaSourceFactorySuppliers>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r20);

        if r20 == null goto label11;

        $r9 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: java.util.Set supportedTypes>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label11:
        return r20;

        catch java.lang.ClassNotFoundException from label02 to label08 with label09;
    }

    private androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$4(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory $r2;
        androidx.media3.extractor.ExtractorsFactory $r3;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        $r2 = new androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        $r3 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader: androidx.media3.extractor.ExtractorsFactory extractorsFactory>;

        specialinvoke $r2.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory)>(r1, $r3);

        return $r2;
    }

    private static androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$3(java.lang.Class)
    {
        java.lang.Class r0;
        androidx.media3.exoplayer.source.MediaSource$Factory $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory access$000(java.lang.Class)>(r0);

        return $r1;
    }

    private static androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$2(java.lang.Class, androidx.media3.datasource.DataSource$Factory)
    {
        java.lang.Class r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.MediaSource$Factory $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        $r2 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory access$100(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r0, r1);

        return $r2;
    }

    private static androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$1(java.lang.Class, androidx.media3.datasource.DataSource$Factory)
    {
        java.lang.Class r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.MediaSource$Factory $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        $r2 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory access$100(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r0, r1);

        return $r2;
    }

    private static androidx.media3.exoplayer.source.MediaSource$Factory lambda$maybeLoadSupplier$0(java.lang.Class, androidx.media3.datasource.DataSource$Factory)
    {
        java.lang.Class r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.MediaSource$Factory $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        $r2 = staticinvoke <androidx.media3.exoplayer.source.DefaultMediaSourceFactory: androidx.media3.exoplayer.source.MediaSource$Factory access$100(java.lang.Class,androidx.media3.datasource.DataSource$Factory)>(r0, r1);

        return $r2;
    }

androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor
<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor: androidx.media3.common.Format format>
    public void <init>(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r0;
        androidx.media3.common.Format r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        r1 := @parameter0: androidx.media3.common.Format;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor: androidx.media3.common.Format format> = r1;

        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        return 1;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.TrackOutput r2;
        androidx.media3.common.Format $r4, $r7, $r10;
        androidx.media3.common.Format$Builder $r5, $r6, $r9;
        java.lang.String $r8;
        androidx.media3.extractor.SeekMap$Unseekable r11;
        androidx.media3.extractor.SeekMap r12;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r2 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(0, 3);

        r11 = new androidx.media3.extractor.SeekMap$Unseekable;

        specialinvoke r11.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>(-9223372036854775807L);

        r12 = (androidx.media3.extractor.SeekMap) r11;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>(r12);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        $r4 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor: androidx.media3.common.Format format>;

        $r5 = virtualinvoke $r4.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $r6 = virtualinvoke $r5.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("text/x-unknown");

        $r7 = r0.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor: androidx.media3.common.Format format>;

        $r8 = $r7.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r9 = virtualinvoke $r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke r2.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r10);

        return;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        int i0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        i0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: int skip(int)>(2147483647);

        if i0 != -1 goto label1;

        return -1;

     label1:
        return 0;
    }

    public void seek(long, long)
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r0;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor r0;

        r0 := @this: androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor;

        return;
    }

