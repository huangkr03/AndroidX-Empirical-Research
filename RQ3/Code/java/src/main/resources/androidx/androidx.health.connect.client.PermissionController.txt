androidx.health.connect.client.PermissionController
<androidx.health.connect.client.PermissionController: androidx.activity.result.contract.ActivityResultContract createRequestPermissionActivityContract()>
<androidx.health.connect.client.PermissionController: java.lang.Object getGrantedPermissions(java.util.Set,kotlin.coroutines.Continuation)>
<androidx.health.connect.client.PermissionController: java.lang.Object revokeAllPermissions(kotlin.coroutines.Continuation)>
androidx.health.connect.client.PermissionController$Companion
<androidx.health.connect.client.PermissionController$Companion: androidx.health.connect.client.PermissionController$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.health.connect.client.PermissionController$Companion r0;

        r0 := @this: androidx.health.connect.client.PermissionController$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.activity.result.contract.ActivityResultContract createRequestPermissionResultContract(java.lang.String)
    {
        androidx.health.connect.client.PermissionController$Companion r0;
        java.lang.String r1;
        androidx.health.connect.client.permission.HealthDataRequestPermissionsInternal $r2;
        androidx.activity.result.contract.ActivityResultContract $r3;

        r0 := @this: androidx.health.connect.client.PermissionController$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "providerPackageName");

        $r2 = new androidx.health.connect.client.permission.HealthDataRequestPermissionsInternal;

        specialinvoke $r2.<androidx.health.connect.client.permission.HealthDataRequestPermissionsInternal: void <init>(java.lang.String)>(r1);

        $r3 = (androidx.activity.result.contract.ActivityResultContract) $r2;

        return $r3;
    }

    public static androidx.activity.result.contract.ActivityResultContract createRequestPermissionResultContract$default(androidx.health.connect.client.PermissionController$Companion, java.lang.String, int, java.lang.Object)
    {
        androidx.health.connect.client.PermissionController$Companion r0;
        int i0, $i1;
        java.lang.Object r1;
        androidx.activity.result.contract.ActivityResultContract $r2;
        java.lang.String r3;

        r0 := @parameter0: androidx.health.connect.client.PermissionController$Companion;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = "com.google.android.apps.healthdata";

     label1:
        $r2 = virtualinvoke r0.<androidx.health.connect.client.PermissionController$Companion: androidx.activity.result.contract.ActivityResultContract createRequestPermissionResultContract(java.lang.String)>(r3);

        return $r2;
    }

    public final androidx.activity.result.contract.ActivityResultContract createRequestPermissionResultContract()
    {
        androidx.health.connect.client.PermissionController$Companion r0;
        androidx.activity.result.contract.ActivityResultContract $r1;

        r0 := @this: androidx.health.connect.client.PermissionController$Companion;

        $r1 = staticinvoke <androidx.health.connect.client.PermissionController$Companion: androidx.activity.result.contract.ActivityResultContract createRequestPermissionResultContract$default(androidx.health.connect.client.PermissionController$Companion,java.lang.String,int,java.lang.Object)>(r0, null, 1, null);

        return $r1;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.PermissionController$Companion $r0;

        $r0 = new androidx.health.connect.client.PermissionController$Companion;

        specialinvoke $r0.<androidx.health.connect.client.PermissionController$Companion: void <init>()>();

        <androidx.health.connect.client.PermissionController$Companion: androidx.health.connect.client.PermissionController$Companion $$INSTANCE> = $r0;

        return;
    }

