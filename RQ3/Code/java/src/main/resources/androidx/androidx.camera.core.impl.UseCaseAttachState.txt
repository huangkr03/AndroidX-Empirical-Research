androidx.camera.core.impl.UseCaseAttachState
<androidx.camera.core.impl.UseCaseAttachState: java.lang.String TAG>
<androidx.camera.core.impl.UseCaseAttachState: java.lang.String mCameraId>
<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>
    public void <init>(java.lang.String)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap> = $r2;

        r0.<androidx.camera.core.impl.UseCaseAttachState: java.lang.String mCameraId> = r1;

        return;
    }

    public void setUseCaseActive(java.lang.String, androidx.camera.core.impl.SessionConfig, androidx.camera.core.impl.UseCaseConfig)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.SessionConfig r2;
        androidx.camera.core.impl.UseCaseConfig r3;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r4;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.core.impl.SessionConfig;

        r3 := @parameter2: androidx.camera.core.impl.UseCaseConfig;

        r4 = specialinvoke r0.<androidx.camera.core.impl.UseCaseAttachState: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo getOrCreateUseCaseAttachInfo(java.lang.String,androidx.camera.core.impl.SessionConfig,androidx.camera.core.impl.UseCaseConfig)>(r1, r2, r3);

        virtualinvoke r4.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void setActive(boolean)>(1);

        return;
    }

    public void setUseCaseInactive(java.lang.String)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r2;
        java.util.Map $r3, $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r5;

        virtualinvoke r2.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void setActive(boolean)>(0);

        $z1 = virtualinvoke r2.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        if $z1 != 0 goto label2;

        $r6 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void setUseCaseAttached(java.lang.String, androidx.camera.core.impl.SessionConfig, androidx.camera.core.impl.UseCaseConfig)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.SessionConfig r2;
        androidx.camera.core.impl.UseCaseConfig r3;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r4;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.core.impl.SessionConfig;

        r3 := @parameter2: androidx.camera.core.impl.UseCaseConfig;

        r4 = specialinvoke r0.<androidx.camera.core.impl.UseCaseAttachState: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo getOrCreateUseCaseAttachInfo(java.lang.String,androidx.camera.core.impl.SessionConfig,androidx.camera.core.impl.UseCaseConfig)>(r1, r2, r3);

        virtualinvoke r4.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void setAttached(boolean)>(1);

        return;
    }

    public void setUseCaseDetached(java.lang.String)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r2;
        java.util.Map $r3, $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r5;

        virtualinvoke r2.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void setAttached(boolean)>(0);

        $z1 = virtualinvoke r2.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getActive()>();

        if $z1 != 0 goto label2;

        $r6 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public boolean isUseCaseAttached(java.lang.String)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r2;
        java.util.Map $r3, $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r5;

        $z1 = virtualinvoke r2.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        return $z1;
    }

    public java.util.Collection getAttachedUseCaseConfigs()
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        $r1 = dynamicinvoke "filter" <androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.UseCaseAttachState: boolean lambda$getAttachedUseCaseConfigs$0(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)>, methodtype: boolean __METHODTYPE__(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo));

        $r2 = specialinvoke r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Collection getUseCaseConfigs(androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public java.util.Collection getAttachedSessionConfigs()
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        $r1 = dynamicinvoke "filter" <androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.UseCaseAttachState: boolean lambda$getAttachedSessionConfigs$1(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)>, methodtype: boolean __METHODTYPE__(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo));

        $r2 = specialinvoke r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Collection getSessionConfigs(androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public java.util.Collection getActiveAndAttachedSessionConfigs()
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        $r1 = dynamicinvoke "filter" <androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.UseCaseAttachState: boolean lambda$getActiveAndAttachedSessionConfigs$2(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)>, methodtype: boolean __METHODTYPE__(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo));

        $r2 = specialinvoke r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Collection getSessionConfigs(androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public void updateUseCase(java.lang.String, androidx.camera.core.impl.SessionConfig, androidx.camera.core.impl.UseCaseConfig)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.SessionConfig r2;
        androidx.camera.core.impl.UseCaseConfig r3;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r4, r5, $r7;
        java.util.Map $r6, $r8, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.core.impl.SessionConfig;

        r3 := @parameter2: androidx.camera.core.impl.UseCaseConfig;

        $r6 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = new androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        specialinvoke $r7.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void <init>(androidx.camera.core.impl.SessionConfig,androidx.camera.core.impl.UseCaseConfig)>(r2, r3);

        r4 = $r7;

        $r8 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r9;

        $z1 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        virtualinvoke r4.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void setAttached(boolean)>($z1);

        $z2 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getActive()>();

        virtualinvoke r4.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void setActive(boolean)>($z2);

        $r10 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        return;
    }

    public void removeUseCase(java.lang.String)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public androidx.camera.core.impl.SessionConfig$ValidatingBuilder getActiveAndAttachedBuilder()
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.SessionConfig$ValidatingBuilder r1, $r7;
        java.util.ArrayList r2, $r8;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r5;
        java.lang.String r6, $r15, $r17;
        java.util.Map $r9;
        java.util.Set $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16;
        java.lang.Object $r18, $r19, $r20;
        androidx.camera.core.impl.SessionConfig $r21;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        $r7 = new androidx.camera.core.impl.SessionConfig$ValidatingBuilder;

        specialinvoke $r7.<androidx.camera.core.impl.SessionConfig$ValidatingBuilder: void <init>()>();

        r1 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r19;

        $z1 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getActive()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        if $z2 == 0 goto label2;

        $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r20;

        $r21 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.SessionConfig getSessionConfig()>();

        virtualinvoke r1.<androidx.camera.core.impl.SessionConfig$ValidatingBuilder: void add(androidx.camera.core.impl.SessionConfig)>($r21);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active and attached use case: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for camera: ");

        $r15 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.lang.String mCameraId>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("UseCaseAttachState", $r17);

        return r1;
    }

    public androidx.camera.core.impl.SessionConfig$ValidatingBuilder getAttachedBuilder()
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.SessionConfig$ValidatingBuilder r1, $r7;
        java.util.ArrayList r2, $r8;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r5;
        java.lang.String r6, $r15, $r17;
        java.util.Map $r9;
        java.util.Set $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16;
        java.lang.Object $r18, $r19, $r21;
        androidx.camera.core.impl.SessionConfig $r20;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        $r7 = new androidx.camera.core.impl.SessionConfig$ValidatingBuilder;

        specialinvoke $r7.<androidx.camera.core.impl.SessionConfig$ValidatingBuilder: void <init>()>();

        r1 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r19;

        $z1 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        if $z1 == 0 goto label2;

        $r20 = virtualinvoke r5.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.SessionConfig getSessionConfig()>();

        virtualinvoke r1.<androidx.camera.core.impl.SessionConfig$ValidatingBuilder: void add(androidx.camera.core.impl.SessionConfig)>($r20);

        $r21 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r21;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All use case: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for camera: ");

        $r15 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.lang.String mCameraId>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("UseCaseAttachState", $r17);

        return r1;
    }

    private androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo getOrCreateUseCaseAttachInfo(java.lang.String, androidx.camera.core.impl.SessionConfig, androidx.camera.core.impl.UseCaseConfig)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        java.lang.String r1;
        androidx.camera.core.impl.SessionConfig r2;
        androidx.camera.core.impl.UseCaseConfig r3;
        java.util.Map $r4, $r7;
        java.lang.Object $r5;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo $r6, r9;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.core.impl.SessionConfig;

        r3 := @parameter2: androidx.camera.core.impl.UseCaseConfig;

        $r4 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r5;

        if r9 != null goto label1;

        $r6 = new androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        specialinvoke $r6.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: void <init>(androidx.camera.core.impl.SessionConfig,androidx.camera.core.impl.UseCaseConfig)>(r2, r3);

        r9 = $r6;

        $r7 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r9);

     label1:
        return r9;
    }

    private java.util.Collection getSessionConfigs(androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Map $r6;
        java.util.Set $r7;
        boolean $z0, $z2;
        java.lang.Object $r8, $r9, $r12;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo $r10, $r13;
        androidx.camera.core.impl.SessionConfig $r11;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        if r1 == null goto label2;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r12;

        $z2 = interfaceinvoke r1.<androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter: boolean filter(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)>($r13);

        if $z2 == 0 goto label3;

     label2:
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r9;

        $r11 = virtualinvoke $r10.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.SessionConfig getSessionConfig()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

     label3:
        goto label1;

     label4:
        return r2;
    }

    private java.util.Collection getUseCaseConfigs(androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter)
    {
        androidx.camera.core.impl.UseCaseAttachState r0;
        androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Map $r6;
        java.util.Set $r7;
        boolean $z0, $z2;
        java.lang.Object $r8, $r9, $r12;
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo $r10, $r13;
        androidx.camera.core.impl.UseCaseConfig $r11;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState;

        r1 := @parameter0: androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = r0.<androidx.camera.core.impl.UseCaseAttachState: java.util.Map mAttachedUseCasesToInfoMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        if r1 == null goto label2;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r12;

        $z2 = interfaceinvoke r1.<androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter: boolean filter(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)>($r13);

        if $z2 == 0 goto label3;

     label2:
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo) $r9;

        $r11 = virtualinvoke $r10.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.UseCaseConfig getUseCaseConfig()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

     label3:
        goto label1;

     label4:
        return r2;
    }

    private static boolean lambda$getActiveAndAttachedSessionConfigs$2(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $z0 = virtualinvoke r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getActive()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean lambda$getAttachedSessionConfigs$1(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean $z0;

        r0 := @parameter0: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $z0 = virtualinvoke r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        return $z0;
    }

    private static boolean lambda$getAttachedUseCaseConfigs$0(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean $z0;

        r0 := @parameter0: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $z0 = virtualinvoke r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean getAttached()>();

        return $z0;
    }

androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter
<androidx.camera.core.impl.UseCaseAttachState$AttachStateFilter: boolean filter(androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo)>
androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo
<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.SessionConfig mSessionConfig>
<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.UseCaseConfig mUseCaseConfig>
<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mAttached>
<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mActive>
    void <init>(androidx.camera.core.impl.SessionConfig, androidx.camera.core.impl.UseCaseConfig)
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        androidx.camera.core.impl.SessionConfig r1;
        androidx.camera.core.impl.UseCaseConfig r2;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        r1 := @parameter0: androidx.camera.core.impl.SessionConfig;

        r2 := @parameter1: androidx.camera.core.impl.UseCaseConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mAttached> = 0;

        r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mActive> = 0;

        r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.SessionConfig mSessionConfig> = r1;

        r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.UseCaseConfig mUseCaseConfig> = r2;

        return;
    }

    androidx.camera.core.impl.UseCaseConfig getUseCaseConfig()
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        androidx.camera.core.impl.UseCaseConfig $r1;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $r1 = r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.UseCaseConfig mUseCaseConfig>;

        return $r1;
    }

    androidx.camera.core.impl.SessionConfig getSessionConfig()
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        androidx.camera.core.impl.SessionConfig $r1;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $r1 = r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: androidx.camera.core.impl.SessionConfig mSessionConfig>;

        return $r1;
    }

    boolean getAttached()
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $z0 = r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mAttached>;

        return $z0;
    }

    void setAttached(boolean)
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean z0;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        z0 := @parameter0: boolean;

        r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mAttached> = z0;

        return;
    }

    boolean getActive()
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        $z0 = r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mActive>;

        return $z0;
    }

    void setActive(boolean)
    {
        androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo r0;
        boolean z0;

        r0 := @this: androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo;

        z0 := @parameter0: boolean;

        r0.<androidx.camera.core.impl.UseCaseAttachState$UseCaseAttachInfo: boolean mActive> = z0;

        return;
    }

