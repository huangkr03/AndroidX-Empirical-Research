androidx.compose.runtime.RecomposeScopeImpl
<androidx.compose.runtime.RecomposeScopeImpl: int flags>
<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition>
<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.Anchor anchor>
<androidx.compose.runtime.RecomposeScopeImpl: kotlin.jvm.functions.Function2 block>
<androidx.compose.runtime.RecomposeScopeImpl: int currentToken>
<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances>
<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies>
    public void <init>(androidx.compose.runtime.CompositionImpl)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.CompositionImpl r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: androidx.compose.runtime.CompositionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition> = r1;

        return;
    }

    public final androidx.compose.runtime.CompositionImpl getComposition()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.CompositionImpl $r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition>;

        return $r1;
    }

    public final androidx.compose.runtime.Anchor getAnchor()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.Anchor $r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.Anchor anchor>;

        return $r1;
    }

    public final void setAnchor(androidx.compose.runtime.Anchor)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.Anchor r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: androidx.compose.runtime.Anchor;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.Anchor anchor> = r1;

        return;
    }

    public final boolean getValid()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.CompositionImpl $r1;
        androidx.compose.runtime.Anchor $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition>;

        if $r1 == null goto label3;

        $r2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.Anchor anchor>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.Anchor: boolean getValid()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public final boolean getCanRecompose()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        kotlin.jvm.functions.Function2 $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = r0.<androidx.compose.runtime.RecomposeScopeImpl: kotlin.jvm.functions.Function2 block>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean getUsed()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void setUsed(boolean)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i3 = $i2 | 1;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & -2;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i1;

     label2:
        return;
    }

    public final boolean getDefaultsInScope()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void setDefaultsInScope(boolean)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i3 = $i2 | 2;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & -3;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i1;

     label2:
        return;
    }

    public final boolean getDefaultsInvalid()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void setDefaultsInvalid(boolean)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i3 = $i2 | 4;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & -5;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i1;

     label2:
        return;
    }

    public final boolean getRequiresRecompose()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void setRequiresRecompose(boolean)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i3 = $i2 | 8;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & -9;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i1;

     label2:
        return;
    }

    public final void compose(androidx.compose.runtime.Composer)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.Composer r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.String $r4, $r5;
        java.lang.Integer $r6;
        kotlin.Unit $r8;
        java.lang.IllegalStateException r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: androidx.compose.runtime.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composer");

        $r2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: kotlin.jvm.functions.Function2 block>;

        if $r2 == null goto label1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label2;

     label1:
        $r8 = null;

     label2:
        if $r8 != null goto label3;

        r9 = new java.lang.IllegalStateException;

        $r4 = "Invalid restart scope";

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label3:
        return;
    }

    public final androidx.compose.runtime.InvalidationResult invalidateForResult(java.lang.Object)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        java.lang.Object r1;
        androidx.compose.runtime.CompositionImpl $r2;
        androidx.compose.runtime.InvalidationResult $r3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.CompositionImpl: androidx.compose.runtime.InvalidationResult invalidate(androidx.compose.runtime.RecomposeScopeImpl,java.lang.Object)>(r0, r1);

        if $r3 != null goto label2;

     label1:
        $r3 = <androidx.compose.runtime.InvalidationResult: androidx.compose.runtime.InvalidationResult IGNORED>;

     label2:
        return $r3;
    }

    public final void release()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition> = null;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances> = null;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies> = null;

        return;
    }

    public final void adoptedBy(androidx.compose.runtime.CompositionImpl)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.CompositionImpl r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: androidx.compose.runtime.CompositionImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composition");

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition> = r1;

        return;
    }

    public void invalidate()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.CompositionImpl $r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.compose.runtime.CompositionImpl: androidx.compose.runtime.InvalidationResult invalidate(androidx.compose.runtime.RecomposeScopeImpl,java.lang.Object)>(r0, null);

        goto label1;

     label1:
        return;
    }

    public void updateScope(kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        kotlin.jvm.functions.Function2 r1;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r0.<androidx.compose.runtime.RecomposeScopeImpl: kotlin.jvm.functions.Function2 block> = r1;

        return;
    }

    private final boolean getRereading()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final void setRereading(boolean)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i3 = $i2 | 32;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & -33;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i1;

     label2:
        return;
    }

    public final boolean getSkipped$runtime_release()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final void setSkipped(boolean)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i3 = $i2 | 16;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags>;

        $i1 = $i0 & -17;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int flags> = $i1;

     label2:
        return;
    }

    public final void start(int)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int i0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: int currentToken> = i0;

        specialinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: void setSkipped(boolean)>(0);

        return;
    }

    public final void scopeSkipped()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        specialinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: void setSkipped(boolean)>(1);

        return;
    }

    public final void recordRead(java.lang.Object)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        java.lang.Object r1, $r5;
        androidx.compose.runtime.collection.IdentityArrayMap r2, $r6, $r10, r11;
        androidx.compose.runtime.collection.IdentityArrayIntMap r3, $r7, $r8, r9;
        boolean $z1, $z2;
        int $i0;
        androidx.compose.runtime.DerivedState $r4;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "instance");

        $z1 = specialinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: boolean getRereading()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r8 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances>;

        if $r8 != null goto label2;

        $r7 = new androidx.compose.runtime.collection.IdentityArrayIntMap;

        specialinvoke $r7.<androidx.compose.runtime.collection.IdentityArrayIntMap: void <init>()>();

        r3 = $r7;

        r9 = r3;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances> = r9;

        $r8 = r3;

     label2:
        $i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl: int currentToken>;

        virtualinvoke $r8.<androidx.compose.runtime.collection.IdentityArrayIntMap: int add(java.lang.Object,int)>(r1, $i0);

        $z2 = r1 instanceof androidx.compose.runtime.DerivedState;

        if $z2 == 0 goto label4;

        $r10 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies>;

        if $r10 != null goto label3;

        $r6 = new androidx.compose.runtime.collection.IdentityArrayMap;

        specialinvoke $r6.<androidx.compose.runtime.collection.IdentityArrayMap: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        r11 = $r6;

        r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies> = r11;

        $r10 = r11;

     label3:
        r2 = $r10;

        $r4 = (androidx.compose.runtime.DerivedState) r1;

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.DerivedState: java.lang.Object getCurrentValue()>();

        virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayMap: void set(java.lang.Object,java.lang.Object)>(r1, $r5);

     label4:
        return;
    }

    public final boolean isConditional()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.collection.IdentityArrayMap $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isInvalidFor(androidx.compose.runtime.collection.IdentityArraySet)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.collection.IdentityArraySet r1;
        androidx.compose.runtime.collection.IdentityArrayMap r2, $r9;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5, r6, $r10, $r11;
        androidx.compose.runtime.DerivedState r7;
        androidx.compose.runtime.SnapshotMutationPolicy r8, $r13;
        boolean $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Collection $r12;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter0: androidx.compose.runtime.collection.IdentityArraySet;

        if r1 != null goto label01;

        return 1;

     label01:
        $r9 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies>;

        if $r9 != null goto label02;

        return 1;

     label02:
        r2 = $r9;

        $z3 = virtualinvoke r1.<androidx.compose.runtime.collection.IdentityArraySet: boolean isNotEmpty()>();

        if $z3 == 0 goto label10;

        $r3 = (java.lang.Iterable) r1;

        $z4 = $r3 instanceof java.util.Collection;

        if $z4 == 0 goto label03;

        $r12 = (java.util.Collection) $r3;

        $z7 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z7 == 0 goto label03;

        $z8 = 1;

        goto label09;

     label03:
        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z9 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label08;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = r5;

        $z5 = r6 instanceof androidx.compose.runtime.DerivedState;

        if $z5 == 0 goto label06;

        r7 = (androidx.compose.runtime.DerivedState) r6;

        $r13 = interfaceinvoke r7.<androidx.compose.runtime.DerivedState: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        if $r13 != null goto label05;

        $r13 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

     label05:
        r8 = $r13;

        $r10 = interfaceinvoke r7.<androidx.compose.runtime.DerivedState: java.lang.Object getCurrentValue()>();

        $r11 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        $z6 = interfaceinvoke r8.<androidx.compose.runtime.SnapshotMutationPolicy: boolean equivalent(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z6 == 0 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        if $z10 != 0 goto label04;

        $z8 = 0;

        goto label09;

     label08:
        $z8 = 1;

     label09:
        if $z8 == 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public final void rereadTrackedInstances()
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        androidx.compose.runtime.CompositionImpl r1, $r4;
        androidx.compose.runtime.collection.IdentityArrayIntMap r2, $r5, r10;
        int i0, $i1, i2;
        java.lang.Object r3, $r7;
        java.lang.Object[] $r6;
        int[] $r8;
        java.lang.Throwable $r9, r11;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        $r4 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl composition>;

        if $r4 == null goto label8;

        r1 = $r4;

        $r5 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances>;

        if $r5 == null goto label7;

        r2 = $r5;

        specialinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: void setRereading(boolean)>(1);

     label1:
        r10 = r2;

        i2 = 0;

        i0 = virtualinvoke r10.<androidx.compose.runtime.collection.IdentityArrayIntMap: int getSize()>();

     label2:
        if i2 >= i0 goto label3;

        $r6 = virtualinvoke r10.<androidx.compose.runtime.collection.IdentityArrayIntMap: java.lang.Object[] getKeys()>();

        $r7 = $r6[i2];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type kotlin.Any");

        $r8 = virtualinvoke r10.<androidx.compose.runtime.collection.IdentityArrayIntMap: int[] getValues()>();

        $i1 = $r8[i2];

        r3 = $r7;

        virtualinvoke r1.<androidx.compose.runtime.CompositionImpl: void recordReadOf(java.lang.Object)>(r3);

        i2 = i2 + 1;

        goto label2;

     label3:
        specialinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: void setRereading(boolean)>(0);

        goto label6;

     label4:
        $r9 := @caughtexception;

        r11 = $r9;

     label5:
        specialinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: void setRereading(boolean)>(0);

        throw r11;

     label6:
        goto label7;

     label7:
        goto label8;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final kotlin.jvm.functions.Function1 end(int)
    {
        androidx.compose.runtime.RecomposeScopeImpl r0;
        int i0, i1, i2, i3;
        androidx.compose.runtime.collection.IdentityArrayIntMap r1, r2, $r3;
        boolean $z3, $z4, $z5;
        androidx.compose.runtime.RecomposeScopeImpl$end$1$2 $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        int[] $r7;
        kotlin.jvm.functions.Function1 $r8;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances>;

        if $r3 == null goto label09;

        r1 = $r3;

        $z3 = virtualinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl: boolean getSkipped$runtime_release()>();

        if $z3 != 0 goto label07;

        r2 = r1;

        i3 = 0;

        i1 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: int getSize()>();

     label01:
        if i3 >= i1 goto label05;

        $r5 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: java.lang.Object[] getKeys()>();

        $r6 = $r5[i3];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Any");

        $r7 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: int[] getValues()>();

        i2 = $r7[i3];

        if i2 == i0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        if $z4 == 0 goto label04;

        $z5 = 1;

        goto label06;

     label04:
        i3 = i3 + 1;

        goto label01;

     label05:
        $z5 = 0;

     label06:
        if $z5 == 0 goto label07;

        $r4 = new androidx.compose.runtime.RecomposeScopeImpl$end$1$2;

        specialinvoke $r4.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: void <init>(androidx.compose.runtime.RecomposeScopeImpl,int,androidx.compose.runtime.collection.IdentityArrayIntMap)>(r0, i0, r1);

        $r8 = (kotlin.jvm.functions.Function1) $r4;

        goto label08;

     label07:
        $r8 = null;

     label08:
        goto label10;

     label09:
        $r8 = null;

     label10:
        return $r8;
    }

    public static final int access$getCurrentToken$p(androidx.compose.runtime.RecomposeScopeImpl)
    {
        androidx.compose.runtime.RecomposeScopeImpl $r0;
        int $i0;

        $r0 := @parameter0: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 = $r0.<androidx.compose.runtime.RecomposeScopeImpl: int currentToken>;

        return $i0;
    }

    public static final androidx.compose.runtime.collection.IdentityArrayIntMap access$getTrackedInstances$p(androidx.compose.runtime.RecomposeScopeImpl)
    {
        androidx.compose.runtime.RecomposeScopeImpl $r0;
        androidx.compose.runtime.collection.IdentityArrayIntMap $r1;

        $r0 := @parameter0: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = $r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances>;

        return $r1;
    }

    public static final void access$setTrackedInstances$p(androidx.compose.runtime.RecomposeScopeImpl, androidx.compose.runtime.collection.IdentityArrayIntMap)
    {
        androidx.compose.runtime.RecomposeScopeImpl $r0;
        androidx.compose.runtime.collection.IdentityArrayIntMap r1;

        $r0 := @parameter0: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter1: androidx.compose.runtime.collection.IdentityArrayIntMap;

        $r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap trackedInstances> = r1;

        return;
    }

    public static final void access$setTrackedDependencies$p(androidx.compose.runtime.RecomposeScopeImpl, androidx.compose.runtime.collection.IdentityArrayMap)
    {
        androidx.compose.runtime.RecomposeScopeImpl $r0;
        androidx.compose.runtime.collection.IdentityArrayMap r1;

        $r0 := @parameter0: androidx.compose.runtime.RecomposeScopeImpl;

        r1 := @parameter1: androidx.compose.runtime.collection.IdentityArrayMap;

        $r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies> = r1;

        return;
    }

    public static final androidx.compose.runtime.collection.IdentityArrayMap access$getTrackedDependencies$p(androidx.compose.runtime.RecomposeScopeImpl)
    {
        androidx.compose.runtime.RecomposeScopeImpl $r0;
        androidx.compose.runtime.collection.IdentityArrayMap $r1;

        $r0 := @parameter0: androidx.compose.runtime.RecomposeScopeImpl;

        $r1 = $r0.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap trackedDependencies>;

        return $r1;
    }

androidx.compose.runtime.RecomposeScopeImpl$end$1$2
<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.RecomposeScopeImpl this$0>
<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: int $token>
<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.collection.IdentityArrayIntMap $instances>
    void <init>(androidx.compose.runtime.RecomposeScopeImpl, int, androidx.compose.runtime.collection.IdentityArrayIntMap)
    {
        androidx.compose.runtime.RecomposeScopeImpl$end$1$2 r0;
        androidx.compose.runtime.RecomposeScopeImpl $r1;
        int $i0;
        androidx.compose.runtime.collection.IdentityArrayIntMap $r2;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl$end$1$2;

        $r1 := @parameter0: androidx.compose.runtime.RecomposeScopeImpl;

        $i0 := @parameter1: int;

        $r2 := @parameter2: androidx.compose.runtime.collection.IdentityArrayIntMap;

        r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.RecomposeScopeImpl this$0> = $r1;

        r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: int $token> = $i0;

        r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.collection.IdentityArrayIntMap $instances> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composition)
    {
        androidx.compose.runtime.RecomposeScopeImpl$end$1$2 r0;
        androidx.compose.runtime.Composition r1;
        androidx.compose.runtime.collection.IdentityArrayIntMap r2, $r10, $r11, $r12;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        androidx.compose.runtime.RecomposeScopeImpl r3, $r8, $r9, $r13;
        java.lang.Object r4, r5, $r16;
        boolean z2, z3, $z7, $z8, $z9, $z11;
        androidx.compose.runtime.DerivedState r6, $r23;
        androidx.compose.runtime.collection.IdentityArrayMap r7, $r22;
        java.lang.Object[] $r14, $r15, $r18;
        int[] $r17, $r19;
        androidx.compose.runtime.CompositionImpl $r20, $r21;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl$end$1$2;

        r1 := @parameter0: androidx.compose.runtime.Composition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composition");

        $r8 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.RecomposeScopeImpl this$0>;

        $i3 = staticinvoke <androidx.compose.runtime.RecomposeScopeImpl: int access$getCurrentToken$p(androidx.compose.runtime.RecomposeScopeImpl)>($r8);

        $i4 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: int $token>;

        if $i3 != $i4 goto label14;

        $r10 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.collection.IdentityArrayIntMap $instances>;

        $r9 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.RecomposeScopeImpl this$0>;

        $r11 = staticinvoke <androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayIntMap access$getTrackedInstances$p(androidx.compose.runtime.RecomposeScopeImpl)>($r9);

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z7 == 0 goto label14;

        $z8 = r1 instanceof androidx.compose.runtime.CompositionImpl;

        if $z8 == 0 goto label14;

        r2 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.collection.IdentityArrayIntMap $instances>;

        i0 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: int $token>;

        r3 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.RecomposeScopeImpl this$0>;

        i7 = 0;

        i8 = 0;

        i9 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: int getSize()>();

     label01:
        if i8 >= i9 goto label11;

        $r15 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: java.lang.Object[] getKeys()>();

        $r16 = $r15[i8];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r16, "null cannot be cast to non-null type kotlin.Any");

        r4 = $r16;

        $r17 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: int[] getValues()>();

        i1 = $r17[i8];

        i2 = i1;

        r5 = r4;

        if i2 == i0 goto label02;

        $z11 = 1;

        goto label03;

     label02:
        $z11 = 0;

     label03:
        z2 = $z11;

        z3 = z2;

        if z3 == 0 goto label08;

        $r20 = (androidx.compose.runtime.CompositionImpl) r1;

        virtualinvoke $r20.<androidx.compose.runtime.CompositionImpl: void removeObservation$runtime_release(java.lang.Object,androidx.compose.runtime.RecomposeScopeImpl)>(r5, r3);

        $z9 = r5 instanceof androidx.compose.runtime.DerivedState;

        if $z9 == 0 goto label04;

        $r23 = (androidx.compose.runtime.DerivedState) r5;

        goto label05;

     label04:
        $r23 = null;

     label05:
        if $r23 == null goto label08;

        r6 = $r23;

        $r21 = (androidx.compose.runtime.CompositionImpl) r1;

        virtualinvoke $r21.<androidx.compose.runtime.CompositionImpl: void removeDerivedStateObservation$runtime_release(androidx.compose.runtime.DerivedState)>(r6);

        $r22 = staticinvoke <androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.collection.IdentityArrayMap access$getTrackedDependencies$p(androidx.compose.runtime.RecomposeScopeImpl)>(r3);

        if $r22 == null goto label07;

        r7 = $r22;

        virtualinvoke r7.<androidx.compose.runtime.collection.IdentityArrayMap: boolean remove(java.lang.Object)>(r6);

        $i6 = virtualinvoke r7.<androidx.compose.runtime.collection.IdentityArrayMap: int getSize$runtime_release()>();

        if $i6 != 0 goto label06;

        staticinvoke <androidx.compose.runtime.RecomposeScopeImpl: void access$setTrackedDependencies$p(androidx.compose.runtime.RecomposeScopeImpl,androidx.compose.runtime.collection.IdentityArrayMap)>(r3, null);

     label06:
        goto label07;

     label07:
        goto label08;

     label08:
        if z2 != 0 goto label10;

        if i7 == i8 goto label09;

        $r18 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: java.lang.Object[] getKeys()>();

        $r18[i7] = r4;

        $r19 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: int[] getValues()>();

        $r19[i7] = i1;

     label09:
        i7 = i7 + 1;

     label10:
        i8 = i8 + 1;

        goto label01;

     label11:
        i10 = i7;

        i11 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: int getSize()>();

     label12:
        if i10 >= i11 goto label13;

        $r14 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: java.lang.Object[] getKeys()>();

        $r14[i10] = null;

        i10 = i10 + 1;

        goto label12;

     label13:
        virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArrayIntMap: void setSize(int)>(i7);

        $r12 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.collection.IdentityArrayIntMap $instances>;

        $i5 = virtualinvoke $r12.<androidx.compose.runtime.collection.IdentityArrayIntMap: int getSize()>();

        if $i5 != 0 goto label14;

        $r13 = r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: androidx.compose.runtime.RecomposeScopeImpl this$0>;

        staticinvoke <androidx.compose.runtime.RecomposeScopeImpl: void access$setTrackedInstances$p(androidx.compose.runtime.RecomposeScopeImpl,androidx.compose.runtime.collection.IdentityArrayIntMap)>($r13, null);

     label14:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.runtime.RecomposeScopeImpl$end$1$2 r0;
        java.lang.Object r1;
        androidx.compose.runtime.Composition $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.runtime.RecomposeScopeImpl$end$1$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.runtime.Composition) r1;

        virtualinvoke r0.<androidx.compose.runtime.RecomposeScopeImpl$end$1$2: void invoke(androidx.compose.runtime.Composition)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

