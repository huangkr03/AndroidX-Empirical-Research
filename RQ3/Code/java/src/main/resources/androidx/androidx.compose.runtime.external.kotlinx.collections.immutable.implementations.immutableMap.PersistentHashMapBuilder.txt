androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int modCount>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r1, $r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r4;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "map");

        specialinvoke r0.<kotlin.collections.AbstractMutableMap: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map> = r1;

        $r2 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        specialinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership> = $r2;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map>;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = $r4;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map>;

        $i0 = virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size> = $i0;

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership>;

        return $r1;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        return $r1;
    }

    public final void setNode$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = r1;

        return;
    }

    public final java.lang.Object getOperationResult$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult>;

        return $r1;
    }

    public final void setOperationResult$runtime_release(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult> = r1;

        return;
    }

    public final int getModCount$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int modCount>;

        return $i0;
    }

    public final void setModCount$runtime_release(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int modCount> = i0;

        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size>;

        return $i0;
    }

    public void setSize(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        int i0, i1, $i2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size> = i0;

        i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int modCount>;

        $i2 = i1 + 1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int modCount> = $i2;

        return;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap build()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap $r1, $r6, $r8;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2, $r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r4;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map>;

        $r3 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()>();

        if $r2 != $r3 goto label1;

        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map>;

        goto label2;

     label1:
        $r4 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        specialinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership> = $r4;

        $r8 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size()>();

        specialinvoke $r8.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,int)>($r5, $i0);

     label2:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map> = $r8;

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap map>;

        return $r6;
    }

    public java.util.Set getEntries()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderEntries $r1;
        java.util.Set $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderEntries;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderEntries: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>(r0);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public java.util.Set getKeys()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderKeys $r1;
        java.util.Set $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderKeys;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderKeys: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>(r0);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public java.util.Collection getValues()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderValues $r1;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderValues;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderValues: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>(r0);

        $r2 = (java.util.Collection) $r1;

        return $r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $z0 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: boolean containsKey(int,java.lang.Object,int)>($i0, r1, 0);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object r1, $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r3 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object get(int,java.lang.Object,int)>($i0, r1, 0);

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object r1, r2, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r3, $r4;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult> = null;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r4 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode mutablePut(int,java.lang.Object,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>($i0, r1, r2, 0, r0);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = $r4;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult>;

        return $r5;
    }

    public void putAll(java.util.Map)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0, $r9;
        java.util.Map r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r2, $r8;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r3, $r4;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r5, $r6, $r7;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "from");

        $z0 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        if $z0 == 0 goto label1;

        $r8 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap) r1;

        goto label2;

     label1:
        $r8 = null;

     label2:
        if $r8 != null goto label6;

        $z1 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        if $z1 == 0 goto label3;

        $r9 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder) r1;

        goto label4;

     label3:
        $r9 = null;

     label4:
        if $r9 == null goto label5;

        $r8 = virtualinvoke $r9.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap build()>();

        goto label6;

     label5:
        $r8 = null;

     label6:
        r2 = $r8;

        if r2 == null goto label7;

        $r4 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        specialinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        r3 = $r4;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size()>();

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        $r6 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode<K of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder, V of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder>");

        $r7 = virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode mutablePutAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>($r6, 0, r3, r0);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = $r7;

        $i2 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size()>();

        $i3 = i0 + $i2;

        $i4 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        i1 = $i3 - $i4;

        if i0 == i1 goto label8;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: void setSize(int)>(i1);

        goto label8;

     label7:
        specialinvoke r0.<kotlin.collections.AbstractMutableMap: void putAll(java.util.Map)>(r1);

     label8:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object r1, $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2, $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion $r4;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult> = null;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r6 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode mutableRemove(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>($i0, r1, 0, r0);

        if $r6 != null goto label3;

        $r4 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion Companion>;

        $r6 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getEMPTY$runtime_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode<K of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder, V of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder>");

     label3:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = $r6;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: java.lang.Object operationResult>;

        return $r3;
    }

    public final boolean remove(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        java.lang.Object r1, r2;
        int i0, $i1, $i2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r3, $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size()>();

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $r6 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode mutableRemove(int,java.lang.Object,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder)>($i2, r1, r2, 0, r0);

        if $r6 != null goto label3;

        $r4 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion Companion>;

        $r6 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getEMPTY$runtime_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode<K of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder, V of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder>");

     label3:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = $r6;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int size()>();

        if i0 == $i1 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public void clear()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getEMPTY$runtime_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode<K of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder, V of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder>");

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = $r2;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: void setSize(int)>(0);

        return;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap build()>();

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) $r1;

        return $r2;
    }

