androidx.sqlite.db.SupportSQLiteDatabaseKt
    public static final java.lang.Object transaction(androidx.sqlite.db.SupportSQLiteDatabase, boolean, kotlin.jvm.functions.Function1)
    {
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        boolean z0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Throwable $r2, $r3, r5, r6, r7;
        java.lang.Object r4;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        if z0 == 0 goto label1;

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void beginTransaction()>();

        goto label2;

     label1:
        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void beginTransactionNonExclusive()>();

     label2:
        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

     label3:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()>();

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return r4;

     label4:
        $r3 := @caughtexception;

        r5 = $r3;

        r6 = r5;

        throw r5;

     label5:
        $r2 := @caughtexception;

        r7 = $r2;

     label6:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        if r6 != null goto label7;

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()>();

     label7:
        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static java.lang.Object transaction$default(androidx.sqlite.db.SupportSQLiteDatabase, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        kotlin.jvm.functions.Function1 r1;
        int $i0, $i1;
        java.lang.Throwable $r2, $r3, r6, r7, r8;
        boolean z0;
        java.lang.Object r4, r5;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        $i1 := @parameter3: int;

        r4 := @parameter4: java.lang.Object;

        $i0 = $i1 & 1;

        if $i0 == 0 goto label1;

        z0 = 1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        if z0 == 0 goto label2;

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void beginTransaction()>();

        goto label3;

     label2:
        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void beginTransactionNonExclusive()>();

     label3:
        r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()>();

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return r5;

     label5:
        $r2 := @caughtexception;

        r6 = $r2;

        r7 = r6;

        throw r6;

     label6:
        $r3 := @caughtexception;

        r8 = $r3;

     label7:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        if r7 != null goto label8;

        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()>();

     label8:
        interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r8;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

