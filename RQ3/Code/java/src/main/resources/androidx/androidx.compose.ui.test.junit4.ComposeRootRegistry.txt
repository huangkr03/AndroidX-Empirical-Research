androidx.compose.ui.test.junit4.ComposeRootRegistry
<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>
<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set allRoots>
<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set resumedRoots>
<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set registryListeners>
    public void <init>()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        java.lang.Object $r1;
        java.util.WeakHashMap $r2;
        java.util.Map $r3;
        java.util.Set $r4, $r6, $r8;
        java.util.LinkedHashSet $r5, $r7;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock> = $r1;

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        $r4 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r3);

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set allRoots> = $r4;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        $r6 = (java.util.Set) $r5;

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set resumedRoots> = $r6;

        $r7 = new java.util.LinkedHashSet;

        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();

        $r8 = (java.util.Set) $r7;

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set registryListeners> = $r8;

        return;
    }

    public final boolean isSetUp()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.platform.ViewRootForTest$Companion $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1 $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        $r1 = <androidx.compose.ui.platform.ViewRootForTest: androidx.compose.ui.platform.ViewRootForTest$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.platform.ViewRootForTest$Companion: kotlin.jvm.functions.Function1 getOnViewCreatedCallback()>();

        $r3 = new androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1;

        specialinvoke $r3.<androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1: void <init>(java.lang.Object)>(r0);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $z0;
    }

    private final void setupRegistry()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1 $r1;
        androidx.compose.ui.platform.ViewRootForTest$Companion $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        $r2 = <androidx.compose.ui.platform.ViewRootForTest: androidx.compose.ui.platform.ViewRootForTest$Companion Companion>;

        $r1 = new androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1;

        specialinvoke $r1.<androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1: void <init>(java.lang.Object)>(r0);

        $r3 = (kotlin.jvm.functions.Function1) $r1;

        virtualinvoke $r2.<androidx.compose.ui.platform.ViewRootForTest$Companion: void setOnViewCreatedCallback(kotlin.jvm.functions.Function1)>($r3);

        return;
    }

    public final void tearDownRegistry$ui_test_junit4_release()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        java.lang.Object r1, r4;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        androidx.compose.ui.platform.ViewRootForTest r5;
        androidx.compose.ui.platform.ViewRootForTest$Companion $r6;
        java.util.Set $r7, $r8, $r9, $r10;
        boolean $z2;
        java.lang.Throwable $r11;
        kotlin.Unit $r12;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r6 = <androidx.compose.ui.platform.ViewRootForTest: androidx.compose.ui.platform.ViewRootForTest$Companion Companion>;

        virtualinvoke $r6.<androidx.compose.ui.platform.ViewRootForTest$Companion: void setOnViewCreatedCallback(kotlin.jvm.functions.Function1)>(null);

        $r7 = virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set getCreatedComposeRoots()>();

        $r2 = (java.lang.Iterable) $r7;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.compose.ui.platform.ViewRootForTest) r4;

        virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void unregisterComposeRoot$ui_test_junit4_release(androidx.compose.ui.platform.ViewRootForTest)>(r5);

        goto label2;

     label3:
        $r8 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set allRoots>;

        interfaceinvoke $r8.<java.util.Set: void clear()>();

        $r9 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set resumedRoots>;

        interfaceinvoke $r9.<java.util.Set: void clear()>();

        $r10 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set registryListeners>;

        interfaceinvoke $r10.<java.util.Set: void clear()>();

        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r1;

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r1;

        throw $r11;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void onViewRootCreated(androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.platform.ViewRootForTest r1;
        java.lang.Object r2;
        boolean $z0;
        java.util.Set $r3;
        android.view.View $r4;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler $r5;
        android.view.View$OnAttachStateChangeListener $r6;
        java.lang.Throwable $r7;
        kotlin.Unit $r8;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $z0 = virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: boolean isSetUp()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set allRoots>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r4 = interfaceinvoke r1.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        $r5 = new androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        specialinvoke $r5.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void <init>(androidx.compose.ui.test.junit4.ComposeRootRegistry,androidx.compose.ui.platform.ViewRootForTest)>(r0, r1);

        $r6 = (android.view.View$OnAttachStateChangeListener) $r5;

        virtualinvoke $r4.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r6);

     label2:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r2;

        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final java.util.Set getCreatedComposeRoots()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        java.lang.Object r1;
        java.util.Set r2, $r6;
        java.lang.Throwable $r3, $r4, $r5, r8, r9;
        java.lang.Iterable $r7;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r6 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set allRoots>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "allRoots");

        $r7 = (java.lang.Iterable) $r6;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r7);

     label2:
        exitmonitor r1;

        return r2;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        goto label1;

     label4:
        $r3 := @caughtexception;

        r9 = $r3;

        goto label1;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

        throw $r4;

        catch java.util.ConcurrentModificationException from label1 to label2 with label3;
        catch java.util.NoSuchElementException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final java.util.Set getRegisteredComposeRoots()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        java.lang.Object r1;
        java.util.Set $r2, $r5;
        java.lang.Iterable $r3;
        java.lang.Throwable $r4;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set resumedRoots>;

        $r3 = (java.lang.Iterable) $r2;

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r3);

     label2:
        exitmonitor r1;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

        throw $r4;

     label5:
        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void registerComposeRoot$ui_test_junit4_release(androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.platform.ViewRootForTest r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.util.Set $r3;
        java.lang.Throwable $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeRoot");

        r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $z0 = virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: boolean isSetUp()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set resumedRoots>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void dispatchOnRegistrationChanged(androidx.compose.ui.platform.ViewRootForTest,boolean)>(r1, 1);

     label2:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r2;

        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void unregisterComposeRoot$ui_test_junit4_release(androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.platform.ViewRootForTest r1;
        java.lang.Object r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeRoot");

        r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set resumedRoots>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void dispatchOnRegistrationChanged(androidx.compose.ui.platform.ViewRootForTest,boolean)>(r1, 0);

     label2:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r2;

        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final java.lang.Object withRegistry(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Throwable $r2, r4;
        java.lang.Object r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

     label1:
        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void setupRegistry()>();

        r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void tearDownRegistry$ui_test_junit4_release()>();

        return r3;

     label3:
        $r2 := @caughtexception;

        r4 = $r2;

     label4:
        virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void tearDownRegistry$ui_test_junit4_release()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void addOnRegistrationChangedListener(androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener r1;
        java.lang.Object r2;
        java.util.Set $r3;
        java.lang.Throwable $r4;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set registryListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label2:
        exitmonitor r2;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void removeOnRegistrationChangedListener(androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener r1;
        java.lang.Object r2;
        java.util.Set $r3;
        java.lang.Throwable $r4;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set registryListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

     label2:
        exitmonitor r2;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final void dispatchOnRegistrationChanged(androidx.compose.ui.platform.ViewRootForTest, boolean)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry r0;
        androidx.compose.ui.platform.ViewRootForTest r1;
        boolean z0, $z2;
        java.lang.Iterable $r2, $r6;
        java.lang.Object r3, $r8;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener r4;
        java.util.Set $r5;
        java.lang.Throwable $r7;
        java.util.List $r9;
        java.util.Iterator $r11;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        z0 := @parameter1: boolean;

        $r8 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object lock>;

        entermonitor $r8;

     label1:
        $r5 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set registryListeners>;

        $r6 = (java.lang.Iterable) $r5;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r6);

     label2:
        exitmonitor $r8;

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor $r8;

        throw $r7;

     label5:
        $r2 = (java.lang.Iterable) $r9;

        $r11 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        r3 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener) r3;

        interfaceinvoke r4.<androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener: void onRegistrationChanged(androidx.compose.ui.platform.ViewRootForTest,boolean)>(r1, z0);

        goto label6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final void access$onViewRootCreated(androidx.compose.ui.test.junit4.ComposeRootRegistry, androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r0;
        androidx.compose.ui.platform.ViewRootForTest r1;

        $r0 := @parameter0: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r1 := @parameter1: androidx.compose.ui.platform.ViewRootForTest;

        specialinvoke $r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void onViewRootCreated(androidx.compose.ui.platform.ViewRootForTest)>(r1);

        return;
    }

androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1
    void <init>(java.lang.Object)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(1, r1, class "Landroidx/compose/ui/test/junit4/ComposeRootRegistry;", "onViewRootCreated", "onViewRootCreated(Landroidx/compose/ui/platform/ViewRootForTest;)V", 0);

        return;
    }

    public final void invoke(androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1 r0;
        androidx.compose.ui.platform.ViewRootForTest r1;
        java.lang.Object $r2;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        $r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1: java.lang.Object receiver>;

        $r3 = (androidx.compose.ui.test.junit4.ComposeRootRegistry) $r2;

        staticinvoke <androidx.compose.ui.test.junit4.ComposeRootRegistry: void access$onViewRootCreated(androidx.compose.ui.test.junit4.ComposeRootRegistry,androidx.compose.ui.platform.ViewRootForTest)>($r3, r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.platform.ViewRootForTest $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.platform.ViewRootForTest) r1;

        virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$isSetUp$1: void invoke(androidx.compose.ui.platform.ViewRootForTest)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener
<androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener: void onRegistrationChanged(androidx.compose.ui.platform.ViewRootForTest,boolean)>
androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1
    void <init>(java.lang.Object)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(1, r1, class "Landroidx/compose/ui/test/junit4/ComposeRootRegistry;", "onViewRootCreated", "onViewRootCreated(Landroidx/compose/ui/platform/ViewRootForTest;)V", 0);

        return;
    }

    public final void invoke(androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1 r0;
        androidx.compose.ui.platform.ViewRootForTest r1;
        java.lang.Object $r2;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        $r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1: java.lang.Object receiver>;

        $r3 = (androidx.compose.ui.test.junit4.ComposeRootRegistry) $r2;

        staticinvoke <androidx.compose.ui.test.junit4.ComposeRootRegistry: void access$onViewRootCreated(androidx.compose.ui.test.junit4.ComposeRootRegistry,androidx.compose.ui.platform.ViewRootForTest)>($r3, r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.platform.ViewRootForTest $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.platform.ViewRootForTest) r1;

        virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$setupRegistry$1: void invoke(androidx.compose.ui.platform.ViewRootForTest)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1
<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: androidx.lifecycle.Lifecycle $lifecycle>
<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler this$0>
    void <init>(androidx.lifecycle.Lifecycle, androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1 r0;
        androidx.lifecycle.Lifecycle $r1;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler $r2;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle;

        $r2 := @parameter1: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: androidx.lifecycle.Lifecycle $lifecycle> = $r1;

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1 r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler $r1;
        androidx.lifecycle.LifecycleObserver $r2;
        androidx.lifecycle.Lifecycle $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1;

        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: androidx.lifecycle.Lifecycle $lifecycle>;

        $r1 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler this$0>;

        $r2 = (androidx.lifecycle.LifecycleObserver) $r1;

        virtualinvoke $r3.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r2);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1;

        virtualinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler
<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.platform.ViewRootForTest composeRoot>
<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: kotlin.jvm.functions.Function0 removeObserver>
<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.test.junit4.ComposeRootRegistry this$0>
    public void <init>(androidx.compose.ui.test.junit4.ComposeRootRegistry, androidx.compose.ui.platform.ViewRootForTest)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry r1;
        androidx.compose.ui.platform.ViewRootForTest r2;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        r1 := @parameter0: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r2 := @parameter1: androidx.compose.ui.platform.ViewRootForTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "composeRoot");

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.test.junit4.ComposeRootRegistry this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.platform.ViewRootForTest composeRoot> = r2;

        return;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        android.view.View r1;
        androidx.lifecycle.Lifecycle r2, $r4;
        androidx.lifecycle.LifecycleOwner $r3;
        androidx.lifecycle.LifecycleObserver $r5;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1 $r6;
        kotlin.jvm.functions.Function0 $r7;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $r3 = staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: androidx.lifecycle.LifecycleOwner get(android.view.View)>(r1);

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        if $r4 != null goto label2;

     label1:
        return;

     label2:
        r2 = $r4;

        $r5 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r5);

        $r6 = new androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1;

        specialinvoke $r6.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler$onViewAttachedToWindow$1: void <init>(androidx.lifecycle.Lifecycle,androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler)>(r2, r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: kotlin.jvm.functions.Function0 removeObserver> = $r7;

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        android.view.View r1;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void removeLifecycleObserver()>();

        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void unregisterComposeRoot()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3;
        androidx.compose.ui.platform.ViewRootForTest $r4;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r5, $r7;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener $r6;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        if r2 != $r3 goto label1;

        $r5 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.test.junit4.ComposeRootRegistry this$0>;

        $r4 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.platform.ViewRootForTest composeRoot>;

        virtualinvoke $r5.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void registerComposeRoot$ui_test_junit4_release(androidx.compose.ui.platform.ViewRootForTest)>($r4);

        $r7 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.test.junit4.ComposeRootRegistry this$0>;

        $r6 = (androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener) r0;

        virtualinvoke $r7.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void addOnRegistrationChangedListener(androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener)>($r6);

        goto label2;

     label1:
        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void unregisterComposeRoot()>();

     label2:
        return;
    }

    public void onRegistrationChanged(androidx.compose.ui.platform.ViewRootForTest, boolean)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        androidx.compose.ui.platform.ViewRootForTest r1, $r2;
        boolean z0, $z1;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        r1 := @parameter0: androidx.compose.ui.platform.ViewRootForTest;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeRoot");

        $r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.platform.ViewRootForTest composeRoot>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void removeLifecycleObserver()>();

     label1:
        return;
    }

    private final void unregisterComposeRoot()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener $r1;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r2, $r4;
        androidx.compose.ui.platform.ViewRootForTest $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        $r2 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.test.junit4.ComposeRootRegistry this$0>;

        $r1 = (androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener) r0;

        virtualinvoke $r2.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void removeOnRegistrationChangedListener(androidx.compose.ui.test.junit4.ComposeRootRegistry$OnRegistrationChangedListener)>($r1);

        $r4 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.test.junit4.ComposeRootRegistry this$0>;

        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: androidx.compose.ui.platform.ViewRootForTest composeRoot>;

        virtualinvoke $r4.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void unregisterComposeRoot$ui_test_junit4_release(androidx.compose.ui.platform.ViewRootForTest)>($r3);

        return;
    }

    private final void removeLifecycleObserver()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        android.os.Looper $r1, $r2, $r4;
        boolean $z0;
        android.os.Handler $r3;
        java.lang.Runnable $r5;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void removeLifecycleObserver$lambda-0(androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r5);

        goto label2;

     label1:
        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void removeLifecycleObserverMainThread()>();

     label2:
        return;
    }

    private final void removeLifecycleObserverMainThread()
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;
        kotlin.Unit r1, r2;
        kotlin.jvm.functions.Function0 $r3;

        r0 := @this: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        $r3 = r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: kotlin.jvm.functions.Function0 removeObserver>;

        if $r3 == null goto label1;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r2 = r1;

        r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: kotlin.jvm.functions.Function0 removeObserver> = null;

        goto label1;

     label1:
        return;
    }

    private static final void removeLifecycleObserver$lambda-0(androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler)
    {
        androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler r0;

        r0 := @parameter0: androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        specialinvoke r0.<androidx.compose.ui.test.junit4.ComposeRootRegistry$StateChangeHandler: void removeLifecycleObserverMainThread()>();

        return;
    }

