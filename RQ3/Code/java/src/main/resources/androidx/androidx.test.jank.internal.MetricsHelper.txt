androidx.test.jank.internal.MetricsHelper
    void <init>()
    {
        androidx.test.jank.internal.MetricsHelper r0;

        r0 := @this: androidx.test.jank.internal.MetricsHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double computeAverageFloat(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        java.lang.Double r2;
        boolean $z0;
        int $i0;
        double $d0, $d1, $d2, d3;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.List;

        d3 = 0.0;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.Double) $r3;

        $d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        d3 = d3 + $d2;

        goto label1;

     label2:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $d0 = (double) $i0;

        $d1 = d3 / $d0;

        return $d1;
    }

    public static double computeAverageInt(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        java.lang.Integer r2;
        boolean $z0;
        int $i0, $i1;
        double $d0, $d1, $d2, d3;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.List;

        d3 = 0.0;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $d2 = (double) $i1;

        d3 = d3 + $d2;

        goto label1;

     label2:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $d0 = (double) $i0;

        $d1 = d3 / $d0;

        return $d1;
    }

