androidx.room.compiler.processing.ksp.KspAnnotationBoxKt
    private static final java.lang.Object readAs(java.lang.Object, java.lang.Class)
    {
        java.lang.Object $r0, $r4, $r6, r25, r29, r30, r31, $r32, r33, r37, $r39, $r42, $r46;
        java.lang.Class r1, $r3, $r5, $r22, $r24, $r40, r41;
        java.util.List r2, $r34;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, z26, z27, $z28, z30;
        int $i0, $i1, i2, i3, $i4, i6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11, $r12;
        java.util.Collection $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, r26, r35;
        java.util.ArrayList $r21, $r23;
        java.lang.Iterable $r27, $r44;
        java.util.Iterator r28, r45;
        java.lang.Object[] $r36, r43;

        $r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label26;

        r25 = $r0;

        $z3 = r25 instanceof java.util.List;

        if $z3 == 0 goto label06;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r26 = (java.util.Collection) $r23;

        $r27 = (java.lang.Iterable) $r0;

        r28 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z15 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label05;

        r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r30 = r29;

        r31 = r30;

        if r31 == null goto label02;

        $r24 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "returnType.componentType");

        $r32 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationBoxKt: java.lang.Object readAs(java.lang.Object,java.lang.Class)>(r31, $r24);

        goto label03;

     label02:
        $r32 = null;

     label03:
        if $r32 == null goto label04;

        r33 = $r32;

        interfaceinvoke r26.<java.util.Collection: boolean add(java.lang.Object)>(r33);

        goto label04;

     label04:
        goto label01;

     label05:
        $r34 = (java.util.List) r26;

        goto label13;

     label06:
        $z4 = r25 instanceof java.lang.Object[];

        if $z4 == 0 goto label12;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r35 = (java.util.Collection) $r21;

        $r36 = (java.lang.Object[]) $r0;

        i2 = 0;

        i3 = lengthof $r36;

     label07:
        if i2 >= i3 goto label11;

        r37 = $r36[i2];

        z26 = 0;

        z27 = 0;

        if r37 == null goto label08;

        $r22 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "returnType.componentType");

        $r39 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationBoxKt: java.lang.Object readAs(java.lang.Object,java.lang.Class)>(r37, $r22);

        goto label09;

     label08:
        $r39 = null;

     label09:
        if $r39 == null goto label10;

        interfaceinvoke r35.<java.util.Collection: boolean add(java.lang.Object)>($r39);

        goto label10;

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        $r34 = (java.util.List) r35;

        goto label13;

     label12:
        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "returnType.componentType");

        $r4 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationBoxKt: java.lang.Object readAs(java.lang.Object,java.lang.Class)>($r0, $r3);

        $r34 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r4);

     label13:
        r2 = $r34;

        $r40 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $z28 = virtualinvoke $r40.<java.lang.Class: boolean isPrimitive()>();

        if $z28 == 0 goto label22;

        r41 = r1;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[I");

        if $z6 == 0 goto label14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Int>");

        $r20 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: int[] toIntArray(java.util.Collection)>($r20);

        goto label28;

     label14:
        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[D");

        if $z7 == 0 goto label15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Double>");

        $r19 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: double[] toDoubleArray(java.util.Collection)>($r19);

        goto label28;

     label15:
        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[F");

        if $z8 == 0 goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Float>");

        $r18 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: float[] toFloatArray(java.util.Collection)>($r18);

        goto label28;

     label16:
        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[C");

        if $z9 == 0 goto label17;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Char>");

        $r17 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: char[] toCharArray(java.util.Collection)>($r17);

        goto label28;

     label17:
        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[B");

        if $z10 == 0 goto label18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Byte>");

        $r16 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: byte[] toByteArray(java.util.Collection)>($r16);

        goto label28;

     label18:
        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[S");

        if $z11 == 0 goto label19;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Short>");

        $r15 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: short[] toShortArray(java.util.Collection)>($r15);

        goto label28;

     label19:
        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[J");

        if $z12 == 0 goto label20;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Long>");

        $r14 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: long[] toLongArray(java.util.Collection)>($r14);

        goto label28;

     label20:
        $z13 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, class "[Z");

        if $z13 == 0 goto label21;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type kotlin.collections.Collection<kotlin.Boolean>");

        $r13 = (java.util.Collection) r2;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: boolean[] toBooleanArray(java.util.Collection)>($r13);

        goto label28;

     label21:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported primitive array type: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label22:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        r43 = (java.lang.Object[]) $r6;

        $r44 = (java.lang.Iterable) r2;

        $i4 = 0;

        r45 = interfaceinvoke $r44.<java.lang.Iterable: java.util.Iterator iterator()>();

     label23:
        $z5 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label25;

        $r46 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        $i1 = $i4;

        $i4 = $i4 + 1;

        if $i1 >= 0 goto label24;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label24:
        i6 = $i1;

        z30 = 0;

        r43[i6] = $r46;

        goto label23;

     label25:
        $r42 = r43;

        goto label28;

     label26:
        $z2 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z2 == 0 goto label27;

        $r42 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationBoxKt: java.lang.Object readAsEnum(java.lang.Object,java.lang.Class)>($r0, r1);

        goto label28;

     label27:
        $r42 = $r0;

     label28:
        return $r42;
    }

    private static final java.lang.Object readAsEnum(java.lang.Object, java.lang.Class)
    {
        java.lang.Object $r0, $r8, $r9;
        java.lang.Class r1, $r5;
        com.google.devtools.ksp.symbol.KSType r2, $r10;
        com.google.devtools.ksp.symbol.KSClassDeclaration r3, $r12;
        java.lang.String r4;
        boolean $z0, $z1, $z2;
        com.google.devtools.ksp.symbol.KSName $r6;
        java.lang.reflect.Method $r7;
        com.google.devtools.ksp.symbol.KSDeclaration r11;
        java.lang.Class[] r13;
        java.lang.Object[] r14;

        $r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r0);

        return $r9;

     label1:
        $z1 = $r0 instanceof com.google.devtools.ksp.symbol.KSType;

        if $z1 == 0 goto label2;

        $r10 = (com.google.devtools.ksp.symbol.KSType) $r0;

        goto label3;

     label2:
        $r10 = null;

     label3:
        if $r10 != null goto label4;

        return null;

     label4:
        r2 = $r10;

        r11 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $z2 = r11 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z2 == 0 goto label5;

        $r12 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r11;

        goto label6;

     label5:
        $r12 = null;

     label6:
        if $r12 != null goto label7;

        return null;

     label7:
        r3 = $r12;

        $r6 = interfaceinvoke r3.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSName getSimpleName()>();

        r4 = interfaceinvoke $r6.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        r13 = newarray (java.lang.Class)[1];

        r13[0] = class "Ljava/lang/String;";

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("valueOf", r13);

        r14 = newarray (java.lang.Object)[1];

        r14[0] = r4;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r14);

        return $r8;
    }

    public static final java.lang.Object access$readAs(java.lang.Object, java.lang.Class)
    {
        java.lang.Object $r0, $r2;
        java.lang.Class r1;

        $r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationBoxKt: java.lang.Object readAs(java.lang.Object,java.lang.Class)>($r0, r1);

        return $r2;
    }

