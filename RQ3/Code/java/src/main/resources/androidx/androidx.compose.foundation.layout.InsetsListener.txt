androidx.compose.foundation.layout.InsetsListener
<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>
<androidx.compose.foundation.layout.InsetsListener: boolean prepared>
<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets>
    public void <init>(androidx.compose.foundation.layout.WindowInsetsHolder)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.compose.foundation.layout.WindowInsetsHolder r1;
        boolean $z0;
        byte $b0;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: androidx.compose.foundation.layout.WindowInsetsHolder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeInsets");

        $z0 = virtualinvoke r1.<androidx.compose.foundation.layout.WindowInsetsHolder: boolean getConsumes()>();

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke r0.<androidx.core.view.WindowInsetsAnimationCompat$Callback: void <init>(int)>($b0);

        r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets> = r1;

        return;
    }

    public final androidx.compose.foundation.layout.WindowInsetsHolder getComposeInsets()
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.compose.foundation.layout.WindowInsetsHolder $r1;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        $r1 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        return $r1;
    }

    public final boolean getPrepared()
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        $z0 = r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared>;

        return $z0;
    }

    public final void setPrepared(boolean)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared> = z0;

        return;
    }

    public final androidx.core.view.WindowInsetsCompat getSavedInsets()
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsCompat $r1;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        $r1 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets>;

        return $r1;
    }

    public final void setSavedInsets(androidx.core.view.WindowInsetsCompat)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsCompat r1;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets> = r1;

        return;
    }

    public void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsAnimationCompat r1;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: androidx.core.view.WindowInsetsAnimationCompat;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared> = 1;

        specialinvoke r0.<androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)>(r1);

        return;
    }

    public androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat, androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsAnimationCompat r1;
        androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat r2, $r3;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: androidx.core.view.WindowInsetsAnimationCompat;

        r2 := @parameter1: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "bounds");

        r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared> = 0;

        $r3 = specialinvoke r0.<androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)>(r1, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "super.onStart(animation, bounds)");

        return $r3;
    }

    public androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat, java.util.List)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsCompat r1, $r5;
        java.util.List r2;
        androidx.compose.foundation.layout.WindowInsetsHolder $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "insets");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "runningAnimations");

        $r3 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder: void update$default(androidx.compose.foundation.layout.WindowInsetsHolder,androidx.core.view.WindowInsetsCompat,int,int,java.lang.Object)>($r3, r1, 0, 2, null);

        $r4 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        $z0 = virtualinvoke $r4.<androidx.compose.foundation.layout.WindowInsetsHolder: boolean getConsumes()>();

        if $z0 == 0 goto label1;

        $r5 = <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "CONSUMED");

        goto label2;

     label1:
        $r5 = r1;

     label2:
        return $r5;
    }

    public void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsAnimationCompat r1;
        androidx.core.view.WindowInsetsCompat r2;
        long $l0;
        byte $b1;
        androidx.compose.foundation.layout.WindowInsetsHolder $r3;
        int $i2;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: androidx.core.view.WindowInsetsAnimationCompat;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared> = 0;

        r2 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets>;

        $l0 = virtualinvoke r1.<androidx.core.view.WindowInsetsAnimationCompat: long getDurationMillis()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        if r2 == null goto label1;

        $r3 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        $i2 = virtualinvoke r1.<androidx.core.view.WindowInsetsAnimationCompat: int getTypeMask()>();

        virtualinvoke $r3.<androidx.compose.foundation.layout.WindowInsetsHolder: void update(androidx.core.view.WindowInsetsCompat,int)>(r2, $i2);

     label1:
        r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets> = null;

        specialinvoke r0.<androidx.core.view.WindowInsetsAnimationCompat$Callback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)>(r1);

        return;
    }

    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, androidx.core.view.WindowInsetsCompat)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        android.view.View r1;
        androidx.core.view.WindowInsetsCompat r2, $r6;
        boolean $z0, $z1;
        androidx.compose.foundation.layout.WindowInsetsHolder $r3, $r4;
        int $i0;
        java.lang.Runnable $r5;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.view.WindowInsetsCompat;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "insets");

        $z0 = r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared>;

        if $z0 == 0 goto label2;

        r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets> = r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 30 goto label1;

        $r5 = (java.lang.Runnable) r0;

        virtualinvoke r1.<android.view.View: boolean post(java.lang.Runnable)>($r5);

     label1:
        return r2;

     label2:
        $r3 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder: void update$default(androidx.compose.foundation.layout.WindowInsetsHolder,androidx.core.view.WindowInsetsCompat,int,int,java.lang.Object)>($r3, r2, 0, 2, null);

        $r4 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        $z1 = virtualinvoke $r4.<androidx.compose.foundation.layout.WindowInsetsHolder: boolean getConsumes()>();

        if $z1 == 0 goto label3;

        $r6 = <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "CONSUMED");

        goto label4;

     label3:
        $r6 = r2;

     label4:
        return $r6;
    }

    public void run()
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        androidx.core.view.WindowInsetsCompat r1, $r2;
        boolean $z1;
        androidx.compose.foundation.layout.WindowInsetsHolder $r3;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        $z1 = r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared>;

        if $z1 == 0 goto label1;

        r0.<androidx.compose.foundation.layout.InsetsListener: boolean prepared> = 0;

        $r2 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets>;

        if $r2 == null goto label1;

        r1 = $r2;

        $r3 = r0.<androidx.compose.foundation.layout.InsetsListener: androidx.compose.foundation.layout.WindowInsetsHolder composeInsets>;

        staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder: void update$default(androidx.compose.foundation.layout.WindowInsetsHolder,androidx.core.view.WindowInsetsCompat,int,int,java.lang.Object)>($r3, r1, 0, 2, null);

        r0.<androidx.compose.foundation.layout.InsetsListener: androidx.core.view.WindowInsetsCompat savedInsets> = null;

        goto label1;

     label1:
        return;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        android.view.View r1;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        virtualinvoke r1.<android.view.View: void requestApplyInsets()>();

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        androidx.compose.foundation.layout.InsetsListener r0;
        android.view.View r1;

        r0 := @this: androidx.compose.foundation.layout.InsetsListener;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "v");

        return;
    }

