com.google.common.collect.ImmutableList
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator EMPTY_ITR>
    static void <clinit>()
    {
        com.google.common.collect.ImmutableList$Itr $r0;
        com.google.common.collect.ImmutableList $r1;

        $r0 = new com.google.common.collect.ImmutableList$Itr;

        $r1 = <com.google.common.collect.RegularImmutableList: com.google.common.collect.ImmutableList EMPTY>;

        specialinvoke $r0.<com.google.common.collect.ImmutableList$Itr: void <init>(com.google.common.collect.ImmutableList,int)>($r1, 0);

        <com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator EMPTY_ITR> = $r0;

        return;
    }

    void <init>()
    {
        com.google.common.collect.ImmutableList $r0;

        $r0 := @this: com.google.common.collect.ImmutableList;

        specialinvoke $r0.<com.google.common.collect.ImmutableCollection: void <init>()>();

        return;
    }

    static com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])
    {
        int $i0;
        com.google.common.collect.ImmutableList $r0;
        java.lang.Object[] $r1;

        $r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r1;

        $r0 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)>($r1, $i0);

        return $r0;
    }

    static com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[], int)
    {
        int $i0;
        com.google.common.collect.RegularImmutableList $r0;
        com.google.common.collect.ImmutableList $r1;
        java.lang.Object[] $r2;

        $r2 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r1;

     label1:
        $r0 = new com.google.common.collect.RegularImmutableList;

        specialinvoke $r0.<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int)>($r2, $i0);

        return $r0;
    }

    private static transient com.google.common.collect.ImmutableList construct(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        com.google.common.collect.ImmutableList $r1;

        $r0 := @parameter0: java.lang.Object[];

        $r0 = staticinvoke <com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])>($r0);

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>($r0);

        return $r1;
    }

    public static com.google.common.collect.ImmutableList copyOf(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] $r0;
        com.google.common.collect.ImmutableList $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (java.lang.Object[]) $r2;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>($r0);

        return $r1;
    }

    public static com.google.common.collect.ImmutableList of()
    {
        com.google.common.collect.ImmutableList r0;

        r0 = <com.google.common.collect.RegularImmutableList: com.google.common.collect.ImmutableList EMPTY>;

        return r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        com.google.common.collect.ImmutableList $r0;
        java.io.ObjectInputStream $r1;
        java.io.InvalidObjectException $r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = new java.io.InvalidObjectException;

        specialinvoke $r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw $r2;
    }

    public final void add(int, java.lang.Object)
    {
        com.google.common.collect.ImmutableList $r0;
        java.lang.Object $r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean addAll(int, java.util.Collection)
    {
        com.google.common.collect.ImmutableList $r0;
        java.util.Collection $r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    int copyIntoArray(java.lang.Object[], int)
    {
        com.google.common.collect.ImmutableList $r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 := @parameter0: java.lang.Object[];

        $i1 := @parameter1: int;

        $i2 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: int size()>();

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $i0 = $i1 + $i3;

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i3);

        $r1[$i0] = $r2;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i1 = $i1 + $i2;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.ImmutableList $r0;
        boolean $z0;
        java.lang.Object $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.google.common.collect.Lists: boolean equalsImpl(java.util.List,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public int hashCode()
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: int size()>();

        $i1 = 1;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $i1 = $i1 * 31;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i2);

        $i3 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i1 + $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public int indexOf(java.lang.Object)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = staticinvoke <com.google.common.collect.Lists: int indexOfImpl(java.util.List,java.lang.Object)>($r0, $r1);

        return $i0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.ImmutableList $r0;
        com.google.common.collect.UnmodifiableListIterator $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>();

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.ImmutableList $r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = staticinvoke <com.google.common.collect.Lists: int lastIndexOfImpl(java.util.List,java.lang.Object)>($r0, $r1);

        return $i0;
    }

    public com.google.common.collect.UnmodifiableListIterator listIterator()
    {
        com.google.common.collect.ImmutableList $r0;
        com.google.common.collect.UnmodifiableListIterator $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>(0);

        return $r1;
    }

    public com.google.common.collect.UnmodifiableListIterator listIterator(int)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0, $i1;
        boolean $z0;
        com.google.common.collect.ImmutableList$Itr $r1;
        com.google.common.collect.UnmodifiableListIterator r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: int size()>();

        staticinvoke <com.google.common.base.Preconditions: int checkPositionIndex(int,int)>($i0, $i1);

        $z0 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r2 = <com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator EMPTY_ITR>;

        return r2;

     label1:
        $r1 = new com.google.common.collect.ImmutableList$Itr;

        specialinvoke $r1.<com.google.common.collect.ImmutableList$Itr: void <init>(com.google.common.collect.ImmutableList,int)>($r0, $i0);

        return $r1;
    }

    public volatile java.util.ListIterator listIterator()
    {
        com.google.common.collect.ImmutableList $r0;
        com.google.common.collect.UnmodifiableListIterator $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>();

        return $r1;
    }

    public volatile java.util.ListIterator listIterator(int)
    {
        com.google.common.collect.ImmutableList $r0;
        com.google.common.collect.UnmodifiableListIterator $r1;
        int $i0;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>($i0);

        return $r1;
    }

    public final java.lang.Object remove(int)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public final java.lang.Object set(int, java.lang.Object)
    {
        com.google.common.collect.ImmutableList $r0;
        java.lang.Object $r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.google.common.collect.ImmutableList subList(int, int)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: int size()>();

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i1, $i0, $i2);

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: int size()>();

        if $i2 != $i3 goto label1;

        return $r0;

     label1:
        if $i2 != 0 goto label2;

        $r0 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r0;

     label2:
        $r0 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subListUnchecked(int,int)>($i1, $i0);

        return $r0;
    }

    public volatile java.util.List subList(int, int)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0, $i1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>($i1, $i0);

        return $r0;
    }

    com.google.common.collect.ImmutableList subListUnchecked(int, int)
    {
        com.google.common.collect.ImmutableList $r0;
        int $i0, $i1;
        com.google.common.collect.ImmutableList$SubList $r1;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new com.google.common.collect.ImmutableList$SubList;

        $i1 = $i1 - $i0;

        specialinvoke $r1.<com.google.common.collect.ImmutableList$SubList: void <init>(com.google.common.collect.ImmutableList,int,int)>($r0, $i0, $i1);

        return $r1;
    }

    java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableList $r0;
        com.google.common.collect.ImmutableList$SerializedForm $r1;
        java.lang.Object[] $r2;

        $r0 := @this: com.google.common.collect.ImmutableList;

        $r1 = new com.google.common.collect.ImmutableList$SerializedForm;

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableList: java.lang.Object[] toArray()>();

        specialinvoke $r1.<com.google.common.collect.ImmutableList$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r1;
    }

