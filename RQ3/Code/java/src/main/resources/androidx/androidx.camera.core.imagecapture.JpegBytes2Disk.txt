androidx.camera.core.imagecapture.JpegBytes2Disk
<androidx.camera.core.imagecapture.JpegBytes2Disk: java.lang.String TEMP_FILE_PREFIX>
<androidx.camera.core.imagecapture.JpegBytes2Disk: java.lang.String TEMP_FILE_SUFFIX>
<androidx.camera.core.imagecapture.JpegBytes2Disk: int COPY_BUFFER_SIZE>
<androidx.camera.core.imagecapture.JpegBytes2Disk: int PENDING>
<androidx.camera.core.imagecapture.JpegBytes2Disk: int NOT_PENDING>
    void <init>()
    {
        androidx.camera.core.imagecapture.JpegBytes2Disk r0;

        r0 := @this: androidx.camera.core.imagecapture.JpegBytes2Disk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.camera.core.ImageCapture$OutputFileResults apply(androidx.camera.core.imagecapture.JpegBytes2Disk$In) throws androidx.camera.core.ImageCaptureException
    {
        androidx.camera.core.imagecapture.JpegBytes2Disk r0;
        androidx.camera.core.imagecapture.JpegBytes2Disk$In r1;
        androidx.camera.core.processing.Packet r2;
        androidx.camera.core.ImageCapture$OutputFileOptions r3;
        java.io.File r4;
        android.net.Uri r5;
        java.lang.Object $r6, $r9;
        byte[] $r7;
        androidx.camera.core.impl.utils.Exif $r8, $r10;
        int $i0;
        androidx.camera.core.ImageCapture$OutputFileResults $r11;

        r0 := @this: androidx.camera.core.imagecapture.JpegBytes2Disk;

        r1 := @parameter0: androidx.camera.core.imagecapture.JpegBytes2Disk$In;

        r2 = virtualinvoke r1.<androidx.camera.core.imagecapture.JpegBytes2Disk$In: androidx.camera.core.processing.Packet getPacket()>();

        r3 = virtualinvoke r1.<androidx.camera.core.imagecapture.JpegBytes2Disk$In: androidx.camera.core.ImageCapture$OutputFileOptions getOutputFileOptions()>();

        r4 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: java.io.File createTempFile(androidx.camera.core.ImageCapture$OutputFileOptions)>(r3);

        $r6 = virtualinvoke r2.<androidx.camera.core.processing.Packet: java.lang.Object getData()>();

        $r7 = (byte[]) $r6;

        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void writeBytesToFile(java.io.File,byte[])>(r4, $r7);

        $r8 = virtualinvoke r2.<androidx.camera.core.processing.Packet: androidx.camera.core.impl.utils.Exif getExif()>();

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r8);

        $r10 = (androidx.camera.core.impl.utils.Exif) $r9;

        $i0 = virtualinvoke r2.<androidx.camera.core.processing.Packet: int getRotationDegrees()>();

        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void updateFileExif(java.io.File,androidx.camera.core.impl.utils.Exif,androidx.camera.core.ImageCapture$OutputFileOptions,int)>(r4, $r10, r3, $i0);

        r5 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: android.net.Uri copyFileToTarget(java.io.File,androidx.camera.core.ImageCapture$OutputFileOptions)>(r4, r3);

        $r11 = new androidx.camera.core.ImageCapture$OutputFileResults;

        specialinvoke $r11.<androidx.camera.core.ImageCapture$OutputFileResults: void <init>(android.net.Uri)>(r5);

        return $r11;
    }

    private static java.io.File createTempFile(androidx.camera.core.ImageCapture$OutputFileOptions) throws androidx.camera.core.ImageCaptureException
    {
        androidx.camera.core.ImageCapture$OutputFileOptions r0;
        java.io.File $r1, r13, r16;
        java.lang.String $r3, $r7, $r10;
        java.lang.StringBuilder $r5, $r8, $r9, r15;
        java.util.UUID $r6;
        java.lang.Throwable $r11, r14, r18;
        androidx.camera.core.ImageCaptureException r17;

        r0 := @parameter0: androidx.camera.core.ImageCapture$OutputFileOptions;

     label1:
        r13 = virtualinvoke r0.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.File getFile()>();

        if r13 == null goto label3;

        r16 = new java.io.File;

        $r3 = virtualinvoke r13.<java.io.File: java.lang.String getParent()>();

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CameraX");

        $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r7 = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, $r10);

     label2:
        return r16;

     label3:
        $r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("CameraX", ".tmp");

     label4:
        return $r1;

     label5:
        $r11 := @caughtexception;

        r14 = $r11;

        r17 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r17.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, "Failed to create temp file.", r14);

        r18 = (java.lang.Throwable) r17;

        throw r18;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private static void writeBytesToFile(java.io.File, byte[]) throws androidx.camera.core.ImageCaptureException
    {
        java.io.File r0;
        byte[] r1;
        java.lang.Throwable r2, r3, $r5, $r7, $r8, r10, r13;
        java.io.FileOutputStream r9, r11;
        androidx.camera.core.ImageCaptureException r12;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: byte[];

     label01:
        r11 = new java.io.FileOutputStream;

        specialinvoke r11.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        r9 = r11;

     label02:
        virtualinvoke r9.<java.io.FileOutputStream: void write(byte[])>(r1);

     label03:
        virtualinvoke r9.<java.io.FileOutputStream: void close()>();

        goto label09;

     label04:
        $r8 := @caughtexception;

        r2 = $r8;

     label05:
        virtualinvoke r9.<java.io.FileOutputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r3);

     label08:
        throw r2;

     label09:
        goto label11;

     label10:
        $r5 := @caughtexception;

        r10 = $r5;

        r12 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r12.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, "Failed to write to temp file", r10);

        r13 = (java.lang.Throwable) r12;

        throw r13;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.IOException from label01 to label09 with label10;
    }

    private static void updateFileExif(java.io.File, androidx.camera.core.impl.utils.Exif, androidx.camera.core.ImageCapture$OutputFileOptions, int) throws androidx.camera.core.ImageCaptureException
    {
        java.io.File r0;
        androidx.camera.core.impl.utils.Exif r1, r8;
        androidx.camera.core.ImageCapture$OutputFileOptions r2;
        int i0, $i1;
        androidx.camera.core.ImageCapture$Metadata r3;
        boolean $z0, $z1;
        android.location.Location $r4, $r5;
        java.lang.Throwable $r6, r9, r11;
        androidx.camera.core.ImageCaptureException r10;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: androidx.camera.core.impl.utils.Exif;

        r2 := @parameter2: androidx.camera.core.ImageCapture$OutputFileOptions;

        i0 := @parameter3: int;

     label1:
        r8 = staticinvoke <androidx.camera.core.impl.utils.Exif: androidx.camera.core.impl.utils.Exif createFromFile(java.io.File)>(r0);

        virtualinvoke r1.<androidx.camera.core.impl.utils.Exif: void copyToCroppedImage(androidx.camera.core.impl.utils.Exif)>(r8);

        $i1 = virtualinvoke r8.<androidx.camera.core.impl.utils.Exif: int getRotation()>();

        if $i1 != 0 goto label2;

        if i0 == 0 goto label2;

        virtualinvoke r8.<androidx.camera.core.impl.utils.Exif: void rotate(int)>(i0);

     label2:
        r3 = virtualinvoke r2.<androidx.camera.core.ImageCapture$OutputFileOptions: androidx.camera.core.ImageCapture$Metadata getMetadata()>();

        $z1 = virtualinvoke r3.<androidx.camera.core.ImageCapture$Metadata: boolean isReversedHorizontal()>();

        if $z1 == 0 goto label3;

        virtualinvoke r8.<androidx.camera.core.impl.utils.Exif: void flipHorizontally()>();

     label3:
        $z0 = virtualinvoke r3.<androidx.camera.core.ImageCapture$Metadata: boolean isReversedVertical()>();

        if $z0 == 0 goto label4;

        virtualinvoke r8.<androidx.camera.core.impl.utils.Exif: void flipVertically()>();

     label4:
        $r4 = virtualinvoke r3.<androidx.camera.core.ImageCapture$Metadata: android.location.Location getLocation()>();

        if $r4 == null goto label5;

        $r5 = virtualinvoke r3.<androidx.camera.core.ImageCapture$Metadata: android.location.Location getLocation()>();

        virtualinvoke r8.<androidx.camera.core.impl.utils.Exif: void attachLocation(android.location.Location)>($r5);

     label5:
        virtualinvoke r8.<androidx.camera.core.impl.utils.Exif: void save()>();

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        r9 = $r6;

        r10 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r10.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, "Failed to update Exif data", r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label8:
        return;

        catch java.io.IOException from label1 to label6 with label7;
    }

    private static android.net.Uri copyFileToTarget(java.io.File, androidx.camera.core.ImageCapture$OutputFileOptions) throws androidx.camera.core.ImageCaptureException
    {
        java.io.File r0, $r4, $r6;
        androidx.camera.core.ImageCapture$OutputFileOptions r1;
        java.lang.Throwable r2, $r12, r16, r17;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5, $r9;
        android.net.Uri $r7, $r11;
        java.io.OutputStream $r8, $r10;
        androidx.camera.core.ImageCaptureException r14, r15;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: androidx.camera.core.ImageCapture$OutputFileOptions;

        $z0 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: boolean isSaveToMediaStore(androidx.camera.core.ImageCapture$OutputFileOptions)>(r1);

        if $z0 == 0 goto label1;

        $r11 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: android.net.Uri copyFileToMediaStore(java.io.File,androidx.camera.core.ImageCapture$OutputFileOptions)>(r0, r1);

        return $r11;

     label1:
        $z1 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: boolean isSaveToOutputStream(androidx.camera.core.ImageCapture$OutputFileOptions)>(r1);

        if $z1 == 0 goto label5;

     label2:
        $r8 = virtualinvoke r1.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.OutputStream getOutputStream()>();

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r8);

        $r10 = (java.io.OutputStream) $r9;

        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void copyFileToOutputStream(java.io.File,java.io.OutputStream)>(r0, $r10);

     label3:
        return null;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        r14 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r14.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, "Failed to write to OutputStream.", null);

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label5:
        $z2 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: boolean isSaveToFile(androidx.camera.core.ImageCapture$OutputFileOptions)>(r1);

        if $z2 == 0 goto label6;

        $r4 = virtualinvoke r1.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.File getFile()>();

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = (java.io.File) $r5;

        $r7 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: android.net.Uri copyFileToFile(java.io.File,java.io.File)>(r0, $r6);

        return $r7;

     label6:
        r15 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r15.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(0, "Invalid OutputFileOptions", null);

        r17 = (java.lang.Throwable) r15;

        throw r17;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private static android.net.Uri copyFileToMediaStore(java.io.File, androidx.camera.core.ImageCapture$OutputFileOptions) throws androidx.camera.core.ImageCaptureException
    {
        java.io.File r0;
        androidx.camera.core.ImageCapture$OutputFileOptions r1;
        android.content.ContentResolver r2, $r7;
        android.content.ContentValues r3, $r9, $r12, $r20, r21, r22;
        android.net.Uri r4, $r10;
        java.lang.Throwable r5, r6, $r13, $r19, r26, r27;
        java.lang.Object $r8;
        java.lang.StringBuilder $r16, $r17, r24;
        java.lang.String $r18;
        androidx.camera.core.ImageCaptureException r23, r25;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: androidx.camera.core.ImageCapture$OutputFileOptions;

        $r7 = virtualinvoke r1.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r7);

        r2 = (android.content.ContentResolver) $r8;

        $r9 = virtualinvoke r1.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentValues getContentValues()>();

        if $r9 == null goto label1;

        r21 = new android.content.ContentValues;

        $r20 = r21;

        $r12 = virtualinvoke r1.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentValues getContentValues()>();

        specialinvoke r21.<android.content.ContentValues: void <init>(android.content.ContentValues)>($r12);

        goto label2;

     label1:
        r22 = new android.content.ContentValues;

        $r20 = r22;

        specialinvoke r22.<android.content.ContentValues: void <init>()>();

     label2:
        r3 = $r20;

        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void setContentValuePendingFlag(android.content.ContentValues,int)>(r3, 1);

        $r10 = virtualinvoke r1.<androidx.camera.core.ImageCapture$OutputFileOptions: android.net.Uri getSaveCollection()>();

        r4 = virtualinvoke r2.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r10, r3);

        if r4 != null goto label3;

        r23 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r23.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, "Failed to insert a MediaStore URI.", null);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label3:
        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void copyTempFileToUri(java.io.File,android.net.Uri,android.content.ContentResolver)>(r0, r4, r2);

     label4:
        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void updateUriPendingStatus(android.net.Uri,android.content.ContentResolver,int)>(r4, r2, 0);

        goto label8;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

        r25 = new androidx.camera.core.ImageCaptureException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write to MediaStore URI: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, $r18, r5);

        r27 = (java.lang.Throwable) r25;

        throw r27;

     label6:
        $r19 := @caughtexception;

        r6 = $r19;

     label7:
        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void updateUriPendingStatus(android.net.Uri,android.content.ContentResolver,int)>(r4, r2, 0);

        throw r6;

     label8:
        return r4;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    private static android.net.Uri copyFileToFile(java.io.File, java.io.File) throws androidx.camera.core.ImageCaptureException
    {
        java.io.File r0, r1;
        boolean $z0, $z1;
        android.net.Uri $r2;
        java.lang.StringBuilder $r5, $r7, r9;
        java.lang.String $r6, $r8;
        androidx.camera.core.ImageCaptureException r10;
        java.lang.Throwable r11;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        $z1 = virtualinvoke r0.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z1 != 0 goto label2;

        r10 = new androidx.camera.core.ImageCaptureException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to overwrite the file: ");

        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(1, $r8, null);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label2:
        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r1);

        return $r2;
    }

    private static void copyTempFileToUri(java.io.File, android.net.Uri, android.content.ContentResolver) throws java.io.IOException
    {
        java.io.File r0;
        android.net.Uri r1;
        android.content.ContentResolver r2;
        java.io.OutputStream r3;
        java.lang.Throwable r4, r5, $r11, $r12;
        java.io.FileNotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.content.ContentResolver;

        r3 = virtualinvoke r2.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r1);

     label1:
        if r3 != null goto label2;

        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be resolved.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void copyFileToOutputStream(java.io.File,java.io.OutputStream)>(r0, r3);

     label3:
        if r3 == null goto label9;

        virtualinvoke r3.<java.io.OutputStream: void close()>();

        goto label9;

     label4:
        $r12 := @caughtexception;

        r4 = $r12;

        if r3 == null goto label8;

     label5:
        virtualinvoke r3.<java.io.OutputStream: void close()>();

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5);

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private static void copyFileToOutputStream(java.io.File, java.io.OutputStream) throws java.io.IOException
    {
        java.io.File r0;
        java.io.OutputStream r1;
        java.io.FileInputStream r2, $r3;
        int $i0, i1;
        java.lang.Throwable $r4, $r5, r7, r8;
        byte[] r6;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.OutputStream;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r2 = $r3;

     label1:
        r6 = newarray (byte)[1024];

     label2:
        $i0 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r6);

        i1 = $i0;

        if $i0 <= 0 goto label3;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r6, 0, i1);

        goto label2;

     label3:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        goto label9;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

     label5:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r8 = $r5;

        virtualinvoke r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r8);

     label8:
        throw r7;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private static void updateUriPendingStatus(android.net.Uri, android.content.ContentResolver, int)
    {
        android.net.Uri r0;
        android.content.ContentResolver r1;
        int i0, $i1;
        android.content.ContentValues r2, $r3;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.content.ContentResolver;

        i0 := @parameter2: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label1;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r2 = $r3;

        staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk: void setContentValuePendingFlag(android.content.ContentValues,int)>(r2, i0);

        virtualinvoke r1.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r0, r2, null, null);

     label1:
        return;
    }

    private static void setContentValuePendingFlag(android.content.ContentValues, int)
    {
        android.content.ContentValues r0;
        int i0, $i1;
        java.lang.Integer $r1;

        r0 := @parameter0: android.content.ContentValues;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("is_pending", $r1);

     label1:
        return;
    }

    private static boolean isSaveToMediaStore(androidx.camera.core.ImageCapture$OutputFileOptions)
    {
        androidx.camera.core.ImageCapture$OutputFileOptions r0;
        android.net.Uri $r1;
        android.content.ContentResolver $r2;
        android.content.ContentValues $r3;
        boolean $z0;

        r0 := @parameter0: androidx.camera.core.ImageCapture$OutputFileOptions;

        $r1 = virtualinvoke r0.<androidx.camera.core.ImageCapture$OutputFileOptions: android.net.Uri getSaveCollection()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentValues getContentValues()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSaveToFile(androidx.camera.core.ImageCapture$OutputFileOptions)
    {
        androidx.camera.core.ImageCapture$OutputFileOptions r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @parameter0: androidx.camera.core.ImageCapture$OutputFileOptions;

        $r1 = virtualinvoke r0.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.File getFile()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSaveToOutputStream(androidx.camera.core.ImageCapture$OutputFileOptions)
    {
        androidx.camera.core.ImageCapture$OutputFileOptions r0;
        java.io.OutputStream $r1;
        boolean $z0;

        r0 := @parameter0: androidx.camera.core.ImageCapture$OutputFileOptions;

        $r1 = virtualinvoke r0.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.OutputStream getOutputStream()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile java.lang.Object apply(java.lang.Object) throws androidx.camera.core.ImageCaptureException
    {
        androidx.camera.core.imagecapture.JpegBytes2Disk r0;
        java.lang.Object r1;
        androidx.camera.core.imagecapture.JpegBytes2Disk$In $r2;
        androidx.camera.core.ImageCapture$OutputFileResults $r3;

        r0 := @this: androidx.camera.core.imagecapture.JpegBytes2Disk;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.camera.core.imagecapture.JpegBytes2Disk$In) r1;

        $r3 = virtualinvoke r0.<androidx.camera.core.imagecapture.JpegBytes2Disk: androidx.camera.core.ImageCapture$OutputFileResults apply(androidx.camera.core.imagecapture.JpegBytes2Disk$In)>($r2);

        return $r3;
    }

androidx.camera.core.imagecapture.JpegBytes2Disk$In
    void <init>()
    {
        androidx.camera.core.imagecapture.JpegBytes2Disk$In r0;

        r0 := @this: androidx.camera.core.imagecapture.JpegBytes2Disk$In;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.camera.core.imagecapture.JpegBytes2Disk$In: androidx.camera.core.processing.Packet getPacket()>
<androidx.camera.core.imagecapture.JpegBytes2Disk$In: androidx.camera.core.ImageCapture$OutputFileOptions getOutputFileOptions()>
    static androidx.camera.core.imagecapture.JpegBytes2Disk$In of(androidx.camera.core.processing.Packet, androidx.camera.core.ImageCapture$OutputFileOptions)
    {
        androidx.camera.core.processing.Packet r0;
        androidx.camera.core.ImageCapture$OutputFileOptions r1;
        androidx.camera.core.imagecapture.AutoValue_JpegBytes2Disk_In $r2;

        r0 := @parameter0: androidx.camera.core.processing.Packet;

        r1 := @parameter1: androidx.camera.core.ImageCapture$OutputFileOptions;

        $r2 = new androidx.camera.core.imagecapture.AutoValue_JpegBytes2Disk_In;

        specialinvoke $r2.<androidx.camera.core.imagecapture.AutoValue_JpegBytes2Disk_In: void <init>(androidx.camera.core.processing.Packet,androidx.camera.core.ImageCapture$OutputFileOptions)>(r0, r1);

        return $r2;
    }

