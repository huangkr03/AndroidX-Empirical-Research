androidx.car.cluster.navigation.Lane
<androidx.car.cluster.navigation.Lane: java.util.List mDirections>
    void <init>()
    {
        androidx.car.cluster.navigation.Lane r0;

        r0 := @this: androidx.car.cluster.navigation.Lane;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(java.util.List)
    {
        androidx.car.cluster.navigation.Lane r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.car.cluster.navigation.Lane;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<androidx.car.cluster.navigation.Lane: java.util.List mDirections> = $r2;

        return;
    }

    public java.util.List getDirections()
    {
        androidx.car.cluster.navigation.Lane r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.car.cluster.navigation.Lane;

        $r1 = r0.<androidx.car.cluster.navigation.Lane: java.util.List mDirections>;

        $r2 = staticinvoke <androidx.car.cluster.navigation.Common: java.util.List immutableOrEmpty(java.util.List)>($r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.car.cluster.navigation.Lane r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.List $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.car.cluster.navigation.Lane;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.car.cluster.navigation.Lane) r1;

        $r5 = virtualinvoke r0.<androidx.car.cluster.navigation.Lane: java.util.List getDirections()>();

        $r6 = virtualinvoke r2.<androidx.car.cluster.navigation.Lane: java.util.List getDirections()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $z0;
    }

    public int hashCode()
    {
        androidx.car.cluster.navigation.Lane r0;
        java.lang.Object[] $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: androidx.car.cluster.navigation.Lane;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<androidx.car.cluster.navigation.Lane: java.util.List getDirections()>();

        $r1[0] = $r2;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.car.cluster.navigation.Lane r0;
        java.lang.Object[] $r1;
        java.util.List $r2;
        java.lang.String $r3;

        r0 := @this: androidx.car.cluster.navigation.Lane;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<androidx.car.cluster.navigation.Lane: java.util.List mDirections>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{direction: %s}", $r1);

        return $r3;
    }

androidx.car.cluster.navigation.Lane$Builder
<androidx.car.cluster.navigation.Lane$Builder: java.util.List mDirections>
    public void <init>()
    {
        androidx.car.cluster.navigation.Lane$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.car.cluster.navigation.Lane$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.car.cluster.navigation.Lane$Builder: java.util.List mDirections> = $r1;

        return;
    }

    public androidx.car.cluster.navigation.Lane$Builder addDirection(androidx.car.cluster.navigation.LaneDirection)
    {
        androidx.car.cluster.navigation.Lane$Builder r0;
        androidx.car.cluster.navigation.LaneDirection r1;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.car.cluster.navigation.Lane$Builder;

        r1 := @parameter0: androidx.car.cluster.navigation.LaneDirection;

        $r2 = r0.<androidx.car.cluster.navigation.Lane$Builder: java.util.List mDirections>;

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public androidx.car.cluster.navigation.Lane build()
    {
        androidx.car.cluster.navigation.Lane$Builder r0;
        androidx.car.cluster.navigation.Lane $r1;
        java.util.List $r2;

        r0 := @this: androidx.car.cluster.navigation.Lane$Builder;

        $r1 = new androidx.car.cluster.navigation.Lane;

        $r2 = r0.<androidx.car.cluster.navigation.Lane$Builder: java.util.List mDirections>;

        specialinvoke $r1.<androidx.car.cluster.navigation.Lane: void <init>(java.util.List)>($r2);

        return $r1;
    }

