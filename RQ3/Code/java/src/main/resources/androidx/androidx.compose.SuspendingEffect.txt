androidx.compose.SuspendingEffect
<androidx.compose.SuspendingEffect: androidx.compose.Recomposer recomposer>
<androidx.compose.SuspendingEffect: kotlin.jvm.functions.Function2 block>
<androidx.compose.SuspendingEffect: kotlinx.coroutines.Job job>
    public void <init>(androidx.compose.Recomposer, kotlin.jvm.functions.Function2)
    {
        androidx.compose.SuspendingEffect r0;
        androidx.compose.Recomposer r1;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.SuspendingEffect;

        r1 := @parameter0: androidx.compose.Recomposer;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "recomposer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.SuspendingEffect: androidx.compose.Recomposer recomposer> = r1;

        r0.<androidx.compose.SuspendingEffect: kotlin.jvm.functions.Function2 block> = r2;

        return;
    }

    public void onEnter()
    {
        androidx.compose.SuspendingEffect r0;
        kotlinx.coroutines.Job r1, $r4;
        kotlin.jvm.functions.Function2 $r2;
        androidx.compose.Recomposer $r3;

        r0 := @this: androidx.compose.SuspendingEffect;

        r1 = r0.<androidx.compose.SuspendingEffect: kotlinx.coroutines.Job job>;

        if r1 != null goto label1;

        goto label2;

     label1:
        staticinvoke <kotlinx.coroutines.JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)>(r1, "Old job was still running!", null, 2, null);

     label2:
        $r3 = r0.<androidx.compose.SuspendingEffect: androidx.compose.Recomposer recomposer>;

        $r2 = r0.<androidx.compose.SuspendingEffect: kotlin.jvm.functions.Function2 block>;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer: kotlinx.coroutines.Job launchEffect$compose_runtime_release(kotlin.jvm.functions.Function2)>($r2);

        r0.<androidx.compose.SuspendingEffect: kotlinx.coroutines.Job job> = $r4;

        return;
    }

    public void onLeave()
    {
        androidx.compose.SuspendingEffect r0;
        kotlinx.coroutines.Job r1, $r2;

        r0 := @this: androidx.compose.SuspendingEffect;

        r1 = r0.<androidx.compose.SuspendingEffect: kotlinx.coroutines.Job job>;

        if r1 != null goto label1;

        goto label2;

     label1:
        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r1, null, 1, null);

     label2:
        $r2 = (kotlinx.coroutines.Job) null;

        r0.<androidx.compose.SuspendingEffect: kotlinx.coroutines.Job job> = $r2;

        return;
    }

