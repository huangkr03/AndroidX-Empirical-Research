android.databinding.annotationprocessor.ProcessBindable
<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>
<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables>
    public void <init>()
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        java.util.HashMap $r1;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables> = $r1;

        return;
    }

    public boolean onHandleStep(javax.'annotation'.processing.RoundEnvironment, javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        javax.'annotation'.processing.RoundEnvironment r1;
        javax.'annotation'.processing.ProcessingEnvironment r2;
        android.databinding.tool.DataBindingCompilerArgs r3;
        android.databinding.tool.LibTypes r4;
        javax.lang.model.element.TypeElement r5, r10;
        javax.lang.model.util.Types r6;
        java.util.Iterator r7;
        javax.lang.model.element.Element r8, r43;
        javax.lang.model.element.ElementKind r9, $r31, $r39, $r41;
        java.lang.String r11, $r14, $r18, $r23, $r25, $r26, $r29, $r36;
        android.databinding.annotationprocessor.ProcessBindable$Intermediate $r12, $r22, $r24, $r27, $r28, $r33, $r34;
        android.databinding.annotationprocessor.ProcessBindable$IntermediateV1 $r13;
        java.util.HashMap $r15;
        android.databinding.tool.reflection.ModelAnalyzer $r16;
        javax.lang.model.util.Elements $r17;
        java.lang.Class $r19;
        java.util.List $r20;
        boolean $z0, $z1;
        android.databinding.tool.util.GenerationalClassUtil $r21;
        java.lang.Object $r30;
        java.lang.Object[] $r32, $r37, $r40;
        javax.lang.model.element.Name $r35, $r38;
        java.lang.Throwable $r42, r46;
        javax.lang.model.type.TypeMirror $r44, $r45;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: javax.'annotation'.processing.RoundEnvironment;

        r2 := @parameter1: javax.'annotation'.processing.ProcessingEnvironment;

        r3 := @parameter2: android.databinding.tool.DataBindingCompilerArgs;

        $r12 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        if $r12 != null goto label9;

        $r13 = new android.databinding.annotationprocessor.ProcessBindable$IntermediateV1;

        $r14 = virtualinvoke r3.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getModulePackage()>();

        specialinvoke $r13.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: void <init>(java.lang.String)>($r14);

        r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties> = $r13;

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessBindable: void mergeLayoutVariables()>();

        $r15 = r0.<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables>;

        virtualinvoke $r15.<java.util.HashMap: void clear()>();

        $r16 = staticinvoke <android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelAnalyzer getInstance()>();

        r4 = $r16.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.LibTypes libTypes>;

        $r17 = interfaceinvoke r2.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r18 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.String getObservable()>();

        r5 = interfaceinvoke $r17.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r18);

        r6 = interfaceinvoke r2.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        $r19 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.Class getBindableClass()>();

        $r20 = staticinvoke <android.databinding.annotationprocessor.AnnotationUtil: java.util.List getElementsAnnotatedWith(javax.'annotation'.processing.RoundEnvironment,java.lang.Class)>(r1, $r19);

        r7 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r30 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (javax.lang.model.element.Element) $r30;

     label2:
        r43 = interfaceinvoke r8.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r9 = interfaceinvoke r43.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r31 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind CLASS>;

        if r9 == $r31 goto label3;

        $r39 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind INTERFACE>;

        if r9 == $r39 goto label3;

        $r40 = newarray (java.lang.Object)[1];

        $r41 = interfaceinvoke r43.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r40[0] = $r41;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("Bindable must be on a member field or method. The enclosing type is %s", $r40);

     label3:
        r10 = (javax.lang.model.element.TypeElement) r43;

        $r44 = interfaceinvoke r10.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $r45 = interfaceinvoke r5.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $z1 = interfaceinvoke r6.<javax.lang.model.util.Types: boolean isAssignable(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r44, $r45);

        if $z1 != 0 goto label4;

        $r37 = newarray (java.lang.Object)[1];

        $r38 = interfaceinvoke r43.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r37[0] = $r38;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("Bindable must be on a member in an Observable class. %s is not Observable", $r37);

     label4:
        r11 = specialinvoke r0.<android.databinding.annotationprocessor.ProcessBindable: java.lang.String getPropertyName(javax.lang.model.element.Element)>(r8);

        if r11 == null goto label5;

        $r33 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        $r32 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r33, "Must receive app / library info before Bindable fields.", $r32);

        $r34 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        $r35 = interfaceinvoke r10.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r34.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: void addProperty(java.lang.String,java.lang.String)>($r36, r11);

     label5:
        goto label7;

     label6:
        $r42 := @caughtexception;

        r46 = $r42;

     label7:
        goto label1;

     label8:
        $r21 = staticinvoke <android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil get()>();

        $r22 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        $r23 = interfaceinvoke $r22.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: java.lang.String getPackage()>();

        $r24 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        $r25 = interfaceinvoke $r24.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: java.lang.String getPackage()>();

        $r26 = specialinvoke r0.<android.databinding.annotationprocessor.ProcessBindable: java.lang.String createIntermediateFileName(java.lang.String)>($r25);

        $r27 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        virtualinvoke $r21.<android.databinding.tool.util.GenerationalClassUtil: void writeIntermediateFile(java.lang.String,java.lang.String,java.io.Serializable)>($r23, $r26, $r27);

        $r28 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        $r29 = interfaceinvoke $r28.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: java.lang.String getPackage()>();

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessBindable: void generateBRClasses(javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs,java.lang.String)>(r2, r3, $r29);

        return 1;

     label9:
        return 0;

        catch android.databinding.tool.util.LoggedErrorException from label2 to label5 with label6;
    }

    public void addVariable(java.lang.String, java.lang.String)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        java.lang.String r1, r2;
        java.util.HashMap $r3, $r6;
        java.lang.Object $r4;
        java.util.HashSet $r5, r8;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (java.util.HashSet) $r4;

        if r8 != null goto label1;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r8 = $r5;

        $r6 = r0.<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r8);

     label1:
        virtualinvoke r8.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void onProcessingOver(javax.'annotation'.processing.RoundEnvironment, javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        javax.'annotation'.processing.RoundEnvironment r1;
        javax.'annotation'.processing.ProcessingEnvironment r2;
        android.databinding.tool.DataBindingCompilerArgs r3;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: javax.'annotation'.processing.RoundEnvironment;

        r2 := @parameter1: javax.'annotation'.processing.ProcessingEnvironment;

        r3 := @parameter2: android.databinding.tool.DataBindingCompilerArgs;

        return;
    }

    private java.lang.String createIntermediateFileName(java.lang.String)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        java.lang.String r1, $r5, $r7;
        java.lang.StringBuilder $r2, $r3, $r6;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter $r4;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter BR>;

        $r5 = virtualinvoke $r4.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: java.lang.String getExtension()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void generateBRClasses(javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs, java.lang.String)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        javax.'annotation'.processing.ProcessingEnvironment r1;
        android.databinding.tool.DataBindingCompilerArgs r2;
        java.lang.String r3, $r9;
        java.util.HashSet r4, $r10;
        android.databinding.annotationprocessor.BindableBag r5, $r12;
        android.databinding.tool.writer.JavaFileWriter r6;
        boolean z0, $z1, $z2, $z3, $z4;
        android.databinding.tool.writer.BRWriter r7, $r15;
        java.lang.Object[] $r8;
        android.databinding.annotationprocessor.ProcessBindable$Intermediate $r11, $r13;
        java.util.Set $r14;
        java.util.List $r16, $r20;
        java.util.function.Consumer $r17;
        android.databinding.annotationprocessor.ProcessDataBinding$Callback $r18;
        java.util.Map $r19;
        java.lang.Throwable $r21, r23;
        android.databinding.tool.DataBindingCompilerArgs$Type r22;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r2 := @parameter1: android.databinding.tool.DataBindingCompilerArgs;

        r3 := @parameter2: java.lang.String;

     label1:
        r22 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: android.databinding.tool.DataBindingCompilerArgs$Type artifactType()>();

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r3;

        $r9 = virtualinvoke r22.<android.databinding.tool.DataBindingCompilerArgs$Type: java.lang.String name()>();

        $r8[1] = $r9;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("************* Generating BR file %s. use final: %s", $r8);

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r4 = $r10;

        $r11 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        interfaceinvoke $r11.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: void captureProperties(java.util.Set)>(r4);

        $r12 = new android.databinding.annotationprocessor.BindableBag;

        $r13 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        $r14 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: java.util.Set getProperties(android.databinding.annotationprocessor.ProcessBindable$Intermediate)>($r13);

        specialinvoke $r12.<android.databinding.annotationprocessor.BindableBag: void <init>(android.databinding.tool.DataBindingCompilerArgs,java.util.Set,javax.'annotation'.processing.ProcessingEnvironment)>(r2, $r14, r1);

        r5 = $r12;

        r6 = virtualinvoke r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.tool.writer.JavaFileWriter getWriter()>();

        $z1 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isApp()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isFeature()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isTestVariant()>();

        if $z3 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;

        $r15 = new android.databinding.tool.writer.BRWriter;

        specialinvoke $r15.<android.databinding.tool.writer.BRWriter: void <init>(boolean)>(z0);

        r7 = $r15;

        $r16 = virtualinvoke r5.<android.databinding.annotationprocessor.BindableBag: java.util.List getToBeGenerated()>();

        $r17 = dynamicinvoke "accept" <java.util.function.Consumer (android.databinding.tool.writer.BRWriter,android.databinding.tool.writer.JavaFileWriter)>(r7, r6) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <android.databinding.annotationprocessor.ProcessBindable: void lambda$generateBRClasses$0(android.databinding.tool.writer.BRWriter,android.databinding.tool.writer.JavaFileWriter,android.databinding.annotationprocessor.BindableBag$BRWithValues)>, methodtype: void __METHODTYPE__(android.databinding.annotationprocessor.BindableBag$BRWithValues));

        interfaceinvoke $r16.<java.util.List: void forEach(java.util.function.Consumer)>($r17);

        $r18 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessDataBinding$Callback mCallback>;

        $r19 = virtualinvoke r5.<android.databinding.annotationprocessor.BindableBag: java.util.Map getVariableIdLookup()>();

        $r20 = virtualinvoke r5.<android.databinding.annotationprocessor.BindableBag: java.util.List getWrittenPackages()>();

        interfaceinvoke $r18.<android.databinding.annotationprocessor.ProcessDataBinding$Callback: void onBrWriterReady(java.util.Map,java.util.List)>($r19, $r20);

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

        r23 = $r21;

     label7:
        return;

        catch android.databinding.tool.util.LoggedErrorException from label1 to label5 with label6;
    }

    private java.lang.String getPropertyName(javax.lang.model.element.Element)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        javax.lang.model.element.Element r1;
        int[] $r2;
        javax.lang.model.element.ElementKind $r3, $r9;
        int $i0, $i1;
        javax.lang.model.element.ExecutableElement $r4;
        java.lang.String $r5, $r7;
        javax.lang.model.element.VariableElement $r6;
        java.lang.Object[] $r8;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: javax.lang.model.element.Element;

        $r2 = <android.databinding.annotationprocessor.ProcessBindable$1: int[] $SwitchMap$javax$lang$model$element$ElementKind>;

        $r3 = interfaceinvoke r1.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $i0 = virtualinvoke $r3.<javax.lang.model.element.ElementKind: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = (javax.lang.model.element.VariableElement) r1;

        $r7 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: java.lang.String stripPrefixFromField(javax.lang.model.element.VariableElement)>($r6);

        return $r7;

     label2:
        $r4 = (javax.lang.model.element.ExecutableElement) r1;

        $r5 = specialinvoke r0.<android.databinding.annotationprocessor.ProcessBindable: java.lang.String stripPrefixFromMethod(javax.lang.model.element.ExecutableElement)>($r4);

        return $r5;

     label3:
        $r8 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke r1.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r8[0] = $r9;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("@Bindable is not allowed on %s", $r8);

        return null;
    }

    private static java.lang.String stripPrefixFromField(javax.lang.model.element.VariableElement)
    {
        javax.lang.model.element.VariableElement r0;
        javax.lang.model.element.Name r1;
        char c0, c1, c2, $c5, $c7;
        int $i3, $i4, $i6, $i8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r12;
        java.lang.CharSequence $r5, $r11;
        java.lang.String $r7, $r13, $r14;

        r0 := @parameter0: javax.lang.model.element.VariableElement;

        r1 = interfaceinvoke r0.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $i3 = interfaceinvoke r1.<javax.lang.model.element.Name: int length()>();

        if $i3 < 2 goto label5;

        c0 = interfaceinvoke r1.<javax.lang.model.element.Name: char charAt(int)>(0);

        c1 = interfaceinvoke r1.<javax.lang.model.element.Name: char charAt(int)>(1);

        $i4 = interfaceinvoke r1.<javax.lang.model.element.Name: int length()>();

        if $i4 <= 2 goto label2;

        if c0 != 109 goto label2;

        if c1 != 95 goto label2;

        c2 = interfaceinvoke r1.<javax.lang.model.element.Name: char charAt(int)>(2);

        $z2 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>(c2);

        if $z2 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $i8 = interfaceinvoke r1.<javax.lang.model.element.Name: int length()>();

        $r11 = interfaceinvoke r1.<javax.lang.model.element.Name: java.lang.CharSequence subSequence(int,int)>(3, $i8);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label1:
        goto label5;

     label2:
        if c0 != 109 goto label3;

        $z1 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c1);

        if $z1 != 0 goto label4;

     label3:
        if c0 != 95 goto label5;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>(c1);

        if $z0 == 0 goto label5;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i6 = interfaceinvoke r1.<javax.lang.model.element.Name: int length()>();

        $r5 = interfaceinvoke r1.<javax.lang.model.element.Name: java.lang.CharSequence subSequence(int,int)>(2, $i6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label5:
        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        return $r14;
    }

    private java.lang.String stripPrefixFromMethod(javax.lang.model.element.ExecutableElement)
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        javax.lang.model.element.ExecutableElement r1;
        javax.lang.model.element.Name r2;
        char c0, $c2;
        boolean $z0, $z1, $z2;
        int $i1, $i3, $i4;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.CharSequence $r6, r10;
        java.lang.String $r8;
        java.lang.Object[] $r9;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        r1 := @parameter0: javax.lang.model.element.ExecutableElement;

        r2 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $z0 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: boolean isGetter(javax.lang.model.element.ExecutableElement)>(r1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: boolean isSetter(javax.lang.model.element.ExecutableElement)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $i1 = interfaceinvoke r2.<javax.lang.model.element.Name: int length()>();

        r10 = interfaceinvoke r2.<javax.lang.model.element.Name: java.lang.CharSequence subSequence(int,int)>(3, $i1);

        goto label4;

     label2:
        $z2 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: boolean isBooleanGetter(javax.lang.model.element.ExecutableElement)>(r1);

        if $z2 == 0 goto label3;

        $i4 = interfaceinvoke r2.<javax.lang.model.element.Name: int length()>();

        r10 = interfaceinvoke r2.<javax.lang.model.element.Name: java.lang.CharSequence subSequence(int,int)>(2, $i4);

        goto label4;

     label3:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("@Bindable associated with method must follow JavaBeans convention %s", $r9);

        return null;

     label4:
        c0 = interfaceinvoke r10.<java.lang.CharSequence: char charAt(int)>(0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $i3 = interfaceinvoke r10.<java.lang.CharSequence: int length()>();

        $r6 = interfaceinvoke r10.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(1, $i3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void mergeLayoutVariables()
    {
        android.databinding.annotationprocessor.ProcessBindable r0;
        java.util.Iterator r1, r3;
        java.lang.String r2, r4;
        java.util.HashMap $r5, $r8;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r9, $r11;
        java.util.HashSet $r10;
        android.databinding.annotationprocessor.ProcessBindable$Intermediate $r12;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable;

        $r5 = r0.<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r7;

        $r8 = r0.<android.databinding.annotationprocessor.ProcessBindable: java.util.HashMap mLayoutVariables>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r10 = (java.util.HashSet) $r9;

        r3 = virtualinvoke $r10.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r11;

        $r12 = r0.<android.databinding.annotationprocessor.ProcessBindable: android.databinding.annotationprocessor.ProcessBindable$Intermediate mProperties>;

        interfaceinvoke $r12.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: void addProperty(java.lang.String,java.lang.String)>(r2, r4);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    private static boolean prefixes(java.lang.CharSequence, java.lang.String)
    {
        java.lang.CharSequence r0;
        java.lang.String r1;
        int i0, $i1, $i2, i5;
        char $c3, $c4;
        boolean z0;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.String;

        z0 = 0;

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= $i2 goto label3;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = 1;

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i5);

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if $c3 == $c4 goto label2;

        z0 = 0;

        goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return z0;
    }

    private static boolean isGetter(javax.lang.model.element.ExecutableElement)
    {
        javax.lang.model.element.ExecutableElement r0;
        javax.lang.model.element.Name r1;
        boolean $z0, $z1, $z2, $z3;
        char $c0;
        java.util.List $r2;
        javax.lang.model.type.TypeMirror $r3;
        javax.lang.model.type.TypeKind $r4, $r5;

        r0 := @parameter0: javax.lang.model.element.ExecutableElement;

        r1 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $z0 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: boolean prefixes(java.lang.CharSequence,java.lang.String)>(r1, "get");

        if $z0 == 0 goto label1;

        $c0 = interfaceinvoke r1.<javax.lang.model.element.Name: char charAt(int)>(3);

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c0);

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        $z2 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $r3 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        $r4 = interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        if $r4 == $r5 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    private static boolean isSetter(javax.lang.model.element.ExecutableElement)
    {
        javax.lang.model.element.ExecutableElement r0;
        javax.lang.model.element.Name r1;
        boolean $z0, $z1, $z2;
        char $c0;
        java.util.List $r2;
        int $i1;
        javax.lang.model.type.TypeMirror $r3;
        javax.lang.model.type.TypeKind $r4, $r5;

        r0 := @parameter0: javax.lang.model.element.ExecutableElement;

        r1 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $z0 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: boolean prefixes(java.lang.CharSequence,java.lang.String)>(r1, "set");

        if $z0 == 0 goto label1;

        $c0 = interfaceinvoke r1.<javax.lang.model.element.Name: char charAt(int)>(3);

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c0);

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r3 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        $r4 = interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        if $r4 != $r5 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean isBooleanGetter(javax.lang.model.element.ExecutableElement)
    {
        javax.lang.model.element.ExecutableElement r0;
        javax.lang.model.element.Name r1;
        boolean $z0, $z1, $z2, $z3;
        char $c0;
        java.util.List $r2;
        javax.lang.model.type.TypeMirror $r3;
        javax.lang.model.type.TypeKind $r4, $r5;

        r0 := @parameter0: javax.lang.model.element.ExecutableElement;

        r1 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $z0 = staticinvoke <android.databinding.annotationprocessor.ProcessBindable: boolean prefixes(java.lang.CharSequence,java.lang.String)>(r1, "is");

        if $z0 == 0 goto label1;

        $c0 = interfaceinvoke r1.<javax.lang.model.element.Name: char charAt(int)>(2);

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c0);

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        $z2 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $r3 = interfaceinvoke r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        $r4 = interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind BOOLEAN>;

        if $r4 != $r5 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    static java.util.Set getProperties(android.databinding.annotationprocessor.ProcessBindable$Intermediate)
    {
        android.databinding.annotationprocessor.ProcessBindable$Intermediate r0;
        java.util.HashSet r1, $r2;

        r0 := @parameter0: android.databinding.annotationprocessor.ProcessBindable$Intermediate;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        interfaceinvoke r0.<android.databinding.annotationprocessor.ProcessBindable$Intermediate: void captureProperties(java.util.Set)>(r1);

        return r1;
    }

    private static void lambda$generateBRClasses$0(android.databinding.tool.writer.BRWriter, android.databinding.tool.writer.JavaFileWriter, android.databinding.annotationprocessor.BindableBag$BRWithValues)
    {
        android.databinding.tool.writer.BRWriter r0;
        android.databinding.tool.writer.JavaFileWriter r1;
        android.databinding.annotationprocessor.BindableBag$BRWithValues r2;
        java.lang.String r3, $r5, $r8;
        java.lang.StringBuilder $r4, $r6, $r7;

        r0 := @parameter0: android.databinding.tool.writer.BRWriter;

        r1 := @parameter1: android.databinding.tool.writer.JavaFileWriter;

        r2 := @parameter2: android.databinding.annotationprocessor.BindableBag$BRWithValues;

        r3 = virtualinvoke r0.<android.databinding.tool.writer.BRWriter: java.lang.String write(android.databinding.annotationprocessor.BindableBag$BRWithValues)>(r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<android.databinding.annotationprocessor.BindableBag$BRWithValues: java.lang.String getPkg()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".BR");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.databinding.tool.writer.JavaFileWriter: void writeToFile(java.lang.String,java.lang.String)>($r8, r3);

        return;
    }

android.databinding.annotationprocessor.ProcessBindable$1
<android.databinding.annotationprocessor.ProcessBindable$1: int[] $SwitchMap$javax$lang$model$element$ElementKind>
    static void <clinit>()
    {
        javax.lang.model.element.ElementKind[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        javax.lang.model.element.ElementKind $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <android.databinding.annotationprocessor.ProcessBindable$1: int[] $SwitchMap$javax$lang$model$element$ElementKind> = $r1;

     label1:
        $r3 = <android.databinding.annotationprocessor.ProcessBindable$1: int[] $SwitchMap$javax$lang$model$element$ElementKind>;

        $r2 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind FIELD>;

        $i1 = virtualinvoke $r2.<javax.lang.model.element.ElementKind: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

     label4:
        $r5 = <android.databinding.annotationprocessor.ProcessBindable$1: int[] $SwitchMap$javax$lang$model$element$ElementKind>;

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind METHOD>;

        $i2 = virtualinvoke $r4.<javax.lang.model.element.ElementKind: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r9 = $r6;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

android.databinding.annotationprocessor.ProcessBindable$Intermediate
<android.databinding.annotationprocessor.ProcessBindable$Intermediate: void captureProperties(java.util.Set)>
<android.databinding.annotationprocessor.ProcessBindable$Intermediate: void addProperty(java.lang.String,java.lang.String)>
<android.databinding.annotationprocessor.ProcessBindable$Intermediate: boolean hasValues()>
<android.databinding.annotationprocessor.ProcessBindable$Intermediate: java.lang.String getPackage()>
android.databinding.annotationprocessor.ProcessBindable$IntermediateV1
<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: long serialVersionUID>
<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.lang.String mPackage>
<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.util.HashMap mProperties>
    public void <init>(java.lang.String)
    {
        android.databinding.annotationprocessor.ProcessBindable$IntermediateV1 r0;
        java.lang.String r1;
        java.util.HashMap $r2;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable$IntermediateV1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.util.HashMap mProperties> = $r2;

        r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.lang.String mPackage> = r1;

        return;
    }

    public void captureProperties(java.util.Set)
    {
        android.databinding.annotationprocessor.ProcessBindable$IntermediateV1 r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.util.HashSet r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable$IntermediateV1;

        r1 := @parameter0: java.util.Set;

        $r4 = r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.util.HashMap mProperties>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.HashSet) $r6;

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>(r3);

        goto label1;

     label2:
        return;
    }

    public void addProperty(java.lang.String, java.lang.String)
    {
        android.databinding.annotationprocessor.ProcessBindable$IntermediateV1 r0;
        java.lang.String r1, r2;
        java.util.HashMap $r3, $r6;
        java.lang.Object $r4;
        java.util.HashSet $r5, r8;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable$IntermediateV1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.util.HashMap mProperties>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.util.HashSet) $r4;

        if r8 != null goto label1;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r8 = $r5;

        $r6 = r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.util.HashMap mProperties>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

     label1:
        virtualinvoke r8.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        return;
    }

    public boolean hasValues()
    {
        android.databinding.annotationprocessor.ProcessBindable$IntermediateV1 r0;
        java.util.HashMap $r1;
        boolean $z0, $z1;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable$IntermediateV1;

        $r1 = r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.util.HashMap mProperties>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String getPackage()
    {
        android.databinding.annotationprocessor.ProcessBindable$IntermediateV1 r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.annotationprocessor.ProcessBindable$IntermediateV1;

        $r1 = r0.<android.databinding.annotationprocessor.ProcessBindable$IntermediateV1: java.lang.String mPackage>;

        return $r1;
    }

