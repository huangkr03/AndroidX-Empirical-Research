androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk
<androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>
    public void <init>()
    {
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk r0;

        r0 := @this: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean load()
    {
        boolean $z0;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: boolean isSamsungDistortion()>();

        return $z0;
    }

    public android.util.Size getVerifiedResolution(androidx.camera.core.impl.SurfaceConfig$ConfigType)
    {
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk r0;
        androidx.camera.core.impl.SurfaceConfig$ConfigType r1;
        boolean $z0;
        int[] $r2;
        int $i0, $i1;
        android.util.Size $r3, $r4, $r5;

        r0 := @this: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk;

        r1 := @parameter0: androidx.camera.core.impl.SurfaceConfig$ConfigType;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: boolean isSamsungDistortion()>();

        if $z0 == 0 goto label5;

        $r2 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1: int[] $SwitchMap$androidx$camera$core$impl$SurfaceConfig$ConfigType>;

        $i0 = virtualinvoke r1.<androidx.camera.core.impl.SurfaceConfig$ConfigType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = new android.util.Size;

        specialinvoke $r5.<android.util.Size: void <init>(int,int)>(1920, 1080);

        return $r5;

     label2:
        $r4 = new android.util.Size;

        specialinvoke $r4.<android.util.Size: void <init>(int,int)>(1280, 720);

        return $r4;

     label3:
        $r3 = new android.util.Size;

        specialinvoke $r3.<android.util.Size: void <init>(int,int)>(3264, 1836);

        return $r3;

     label4:
        return null;

     label5:
        return null;
    }

    private static boolean isSamsungDistortion()
    {
        boolean z0, $z1, $z2, $z3, $z4;
        android.util.Range r0;
        java.lang.String $r1, $r2, $r4, $r6, $r10, $r12;
        java.util.Locale $r3, $r9;
        java.util.Map $r5, $r11;
        java.lang.Object $r7;
        int $i0;
        java.lang.Integer $r8;

        $r2 = "samsung";

        $r1 = <android.os.Build: java.lang.String BRAND>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z1 == 0 goto label1;

        $r11 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        $r10 = <android.os.Build: java.lang.String MODEL>;

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r9);

        $z2 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r12);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        if z0 != 0 goto label3;

        return 0;

     label3:
        $r5 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        $r4 = <android.os.Build: java.lang.String MODEL>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r0 = (android.util.Range) $r7;

        if r0 != null goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z4 = virtualinvoke r0.<android.util.Range: boolean contains(java.lang.Comparable)>($r8);

     label5:
        return $z4;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r4, $r8, $r10, $r12, $r15;
        android.util.Range $r3, $r14;
        java.lang.Integer $r5, $r6, $r16, $r17;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP> = $r0;

        $r1 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SM-T580", null);

        $r4 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        $r3 = new android.util.Range;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(26);

        specialinvoke $r3.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r5, $r6);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SM-J710MN", $r3);

        $r8 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SM-A320FL", null);

        $r10 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SM-G570M", null);

        $r12 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SM-G610F", null);

        $r15 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: java.util.Map SAMSUNG_DISTORTION_MODELS_TO_API_LEVEL_MAP>;

        $r14 = new android.util.Range;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(26);

        specialinvoke $r14.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r16, $r17);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SM-G610M", $r14);

        return;
    }

androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1
<androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1: int[] $SwitchMap$androidx$camera$core$impl$SurfaceConfig$ConfigType>
    static void <clinit>()
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigType[] $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r3, $r5, $r7;
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r2, $r4, $r6;
        java.lang.Throwable $r8, $r9, $r10, r11, r12, r13;

        $r0 = staticinvoke <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1: int[] $SwitchMap$androidx$camera$core$impl$SurfaceConfig$ConfigType> = $r1;

     label01:
        $r3 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1: int[] $SwitchMap$androidx$camera$core$impl$SurfaceConfig$ConfigType>;

        $r2 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV>;

        $i1 = virtualinvoke $r2.<androidx.camera.core.impl.SurfaceConfig$ConfigType: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        r11 = $r9;

     label04:
        $r5 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1: int[] $SwitchMap$androidx$camera$core$impl$SurfaceConfig$ConfigType>;

        $r4 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $i2 = virtualinvoke $r4.<androidx.camera.core.impl.SurfaceConfig$ConfigType: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

        r12 = $r10;

     label07:
        $r7 = <androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk$1: int[] $SwitchMap$androidx$camera$core$impl$SurfaceConfig$ConfigType>;

        $r6 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType JPEG>;

        $i3 = virtualinvoke $r6.<androidx.camera.core.impl.SurfaceConfig$ConfigType: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        r13 = $r8;

     label10:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

