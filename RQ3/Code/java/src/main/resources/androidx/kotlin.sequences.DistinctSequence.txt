kotlin.sequences.DistinctSequence
<kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector>
<kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source>
    public void <init>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1)
    {
        kotlin.sequences.DistinctSequence $r0;
        kotlin.sequences.Sequence $r1;
        kotlin.jvm.functions.Function1 $r2;

        $r0 := @this: kotlin.sequences.DistinctSequence;

        $r1 := @parameter0: kotlin.sequences.Sequence;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source> = $r1;

        $r0.<kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector> = $r2;

        return;
    }

    public java.util.Iterator iterator()
    {
        kotlin.sequences.DistinctSequence $r0;
        kotlin.sequences.DistinctIterator $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.util.Iterator $r3;
        kotlin.sequences.Sequence $r4;

        $r0 := @this: kotlin.sequences.DistinctSequence;

        $r1 = new kotlin.sequences.DistinctIterator;

        $r4 = $r0.<kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source>;

        $r3 = interfaceinvoke $r4.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        $r2 = $r0.<kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector>;

        specialinvoke $r1.<kotlin.sequences.DistinctIterator: void <init>(java.util.Iterator,kotlin.jvm.functions.Function1)>($r3, $r2);

        return $r1;
    }

