kotlin.coroutines.EmptyCoroutineContext
<kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>
<kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID>
    static void <clinit>()
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;

        $r0 = new kotlin.coroutines.EmptyCoroutineContext;

        specialinvoke $r0.<kotlin.coroutines.EmptyCoroutineContext: void <init>()>();

        <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final java.lang.Object readResolve()
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        $r0 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        return $r0;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function2 $r2;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "operation");

        return $r1;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;
        kotlin.coroutines.CoroutineContext$Key $r1;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "key");

        return null;
    }

    public int hashCode()
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        return 0;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;
        kotlin.coroutines.CoroutineContext$Key $r1;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "key");

        return $r0;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;
        kotlin.coroutines.CoroutineContext $r1;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        return $r1;
    }

    public java.lang.String toString()
    {
        kotlin.coroutines.EmptyCoroutineContext $r0;

        $r0 := @this: kotlin.coroutines.EmptyCoroutineContext;

        return "EmptyCoroutineContext";
    }

