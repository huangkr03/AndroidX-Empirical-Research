androidx.appsearch.localstorage.util.FutureUtil
    private void <init>()
    {
        androidx.appsearch.localstorage.util.FutureUtil r0;

        r0 := @this: androidx.appsearch.localstorage.util.FutureUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Executor, java.util.concurrent.Callable)
    {
        java.util.concurrent.Executor r0;
        java.util.concurrent.Callable r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        java.lang.Runnable $r5;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.concurrent.Callable;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.concurrent.futures.ResolvableFuture,java.util.concurrent.Callable)>(r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.localstorage.util.FutureUtil: void lambda$execute$0(androidx.concurrent.futures.ResolvableFuture,java.util.concurrent.Callable)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return r2;
    }

    private static void lambda$execute$0(androidx.concurrent.futures.ResolvableFuture, java.util.concurrent.Callable)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        java.util.concurrent.Callable r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: java.util.concurrent.Callable;

        $z0 = virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean isCancelled()>();

        if $z0 != 0 goto label4;

     label1:
        $r3 = interfaceinvoke r1.<java.util.concurrent.Callable: java.lang.Object call()>();

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>(r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

