androidx.room.compiler.processing.XAnnotated
    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName r1;
        java.lang.Iterable $r2;
        java.util.Collection r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        androidx.room.compiler.processing.XAnnotation r6;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        java.lang.String $r10, $r11;
        boolean $z3, $z5;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: java.util.List getAllAnnotations()>();

        $r2 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) $r8;

        r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.room.compiler.processing.XAnnotation) r5;

        $r10 = virtualinvoke r1.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        $r11 = interfaceinvoke r6.<androidx.room.compiler.processing.XAnnotation: java.lang.String getQualifiedName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z3 == 0 goto label1;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        $r9 = (java.util.List) r3;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>
<androidx.room.compiler.processing.XAnnotated: java.util.List getAllAnnotations()>
<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>
    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName r1;
        java.util.List $r2;
        java.util.Collection $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        $r3 = (java.util.Collection) $r2;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>
    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName[] r1;
        int i0, i1;
        com.squareup.javapoet.ClassName r3, r4;
        boolean $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        i1 = 0;

        i0 = lengthof r1;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        r4 = r3;

        $z2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r4);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.XAnnotated r0;
        kotlin.reflect.KClass[] r1;
        int i0, i1;
        kotlin.reflect.KClass r3, r4;
        boolean $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        i1 = 0;

        i0 = lengthof r1;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        r4 = r3;

        $z2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r4);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        java.util.Collection r1, $r6;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        com.squareup.javapoet.ClassName r5;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = (java.lang.Iterable) r1;

        $r6 = (java.util.Collection) $r2;

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z5 = 0;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.squareup.javapoet.ClassName) r4;

        $z4 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r5);

        if $z4 == 0 goto label2;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName[] r1;
        int i0, i1;
        com.squareup.javapoet.ClassName r3, r4;
        boolean $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        i1 = 0;

        i0 = lengthof r1;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        r4 = r3;

        $z2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r4);

        if $z2 != 0 goto label2;

        $z3 = 0;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z3 = 1;

     label4:
        return $z3;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.XAnnotated r0;
        kotlin.reflect.KClass[] r1;
        int i0, i1;
        kotlin.reflect.KClass r3, r4;
        boolean $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        i1 = 0;

        i0 = lengthof r1;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        r4 = r3;

        $z2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r4);

        if $z2 != 0 goto label2;

        $z3 = 0;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z3 = 1;

     label4:
        return $z3;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        java.util.Collection r1, $r6;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        com.squareup.javapoet.ClassName r5;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = (java.lang.Iterable) r1;

        $r6 = (java.util.Collection) $r2;

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.squareup.javapoet.ClassName) r4;

        $z4 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r5);

        if $z4 != 0 goto label2;

        $z5 = 0;

        goto label4;

     label3:
        $z5 = 1;

     label4:
        return $z5;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.XAnnotationBox $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        kotlin.reflect.KClass r1;
        java.util.List $r2;
        java.lang.Object $r3;
        androidx.room.compiler.processing.XAnnotationBox $r4;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r2);

        $r4 = (androidx.room.compiler.processing.XAnnotationBox) $r3;

        return $r4;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName r1;
        java.util.List $r2;
        java.lang.Object $r3;
        androidx.room.compiler.processing.XAnnotation $r4;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r2);

        $r4 = (androidx.room.compiler.processing.XAnnotation) $r3;

        return $r4;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName r1;
        java.lang.Iterable $r2, $r10;
        java.util.Collection r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        androidx.room.compiler.processing.XAnnotation r6;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        java.util.Set $r11;
        androidx.room.compiler.processing.XType $r12;
        androidx.room.compiler.processing.XTypeElement $r13;
        boolean $z4, $z5;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: java.util.List getAllAnnotations()>();

        $r2 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) $r8;

        r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.room.compiler.processing.XAnnotation) r5;

        $r12 = interfaceinvoke r6.<androidx.room.compiler.processing.XAnnotation: androidx.room.compiler.processing.XType getType()>();

        $r13 = interfaceinvoke $r12.<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XTypeElement getTypeElement()>();

        if $r13 == null goto label2;

        $z5 = interfaceinvoke $r13.<androidx.room.compiler.processing.XTypeElement: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label1;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label1;

     label4:
        $r9 = (java.util.List) r3;

        $r10 = (java.lang.Iterable) $r9;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r10);

        return $r11;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.XAnnotation $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.XAnnotated r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.XAnnotationBox $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7, $r8;

        r0 := @this: androidx.room.compiler.processing.XAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find required annotation ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        return $r2;
    }

