androidx.work.impl.background.systemalarm.SystemAlarmScheduler
<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: java.lang.String TAG>
<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>
    public void <init>(android.content.Context)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        android.content.Context r1, $r2;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext> = $r2;

        return;
    }

    public transient void schedule(androidx.work.impl.model.WorkSpec[])
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        androidx.work.impl.model.WorkSpec[] r1, r2;
        int i0, i1;
        androidx.work.impl.model.WorkSpec r3;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        r1 := @parameter0: androidx.work.impl.model.WorkSpec[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        specialinvoke r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: void scheduleWorkSpec(androidx.work.impl.model.WorkSpec)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void cancel(java.lang.String)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        java.lang.String r1;
        android.content.Intent r2;
        android.content.Context $r3, $r4;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        r2 = staticinvoke <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createStopWorkIntent(android.content.Context,java.lang.String)>($r3, r1);

        $r4 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r2);

        return;
    }

    public boolean hasLimitedSchedulingSlots()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        return 1;
    }

    private void scheduleWorkSpec(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        androidx.work.impl.model.WorkSpec r1;
        android.content.Intent r2;
        androidx.work.Logger $r3;
        java.lang.StringBuilder $r4, $r6, $r8;
        java.lang.String $r5, $r7, $r9;
        android.content.Context $r10, $r12;
        androidx.work.impl.model.WorkGenerationalId $r11;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        r1 := @parameter0: androidx.work.impl.model.WorkSpec;

        $r3 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r5 = <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling work with workSpecId ");

        $r7 = r1.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r5, $r9);

        $r10 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        $r11 = staticinvoke <androidx.work.impl.model.WorkSpecKt: androidx.work.impl.model.WorkGenerationalId generationalId(androidx.work.impl.model.WorkSpec)>(r1);

        r2 = staticinvoke <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createScheduleWorkIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId)>($r10, $r11);

        $r12 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        virtualinvoke $r12.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("SystemAlarmScheduler");

        <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: java.lang.String TAG> = $r0;

        return;
    }

