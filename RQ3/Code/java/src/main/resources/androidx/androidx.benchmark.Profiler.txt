androidx.benchmark.Profiler
<androidx.benchmark.Profiler: androidx.benchmark.Profiler$Companion Companion>
<androidx.benchmark.Profiler: boolean requiresSingleMeasurementIteration>
<androidx.benchmark.Profiler: boolean requiresExtraRuntime>
<androidx.benchmark.Profiler: boolean requiresDebuggable>
<androidx.benchmark.Profiler: boolean requiresLibraryOutputDir>
<androidx.benchmark.Profiler: long CONNECTED_PROFILING_SLEEP_MS>
    private void <init>()
    {
        androidx.benchmark.Profiler r0;

        r0 := @this: androidx.benchmark.Profiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.Profiler: boolean requiresLibraryOutputDir> = 1;

        return;
    }

<androidx.benchmark.Profiler: androidx.benchmark.Profiler$ResultFile start(java.lang.String)>
<androidx.benchmark.Profiler: void stop()>
    public boolean getRequiresSingleMeasurementIteration()
    {
        androidx.benchmark.Profiler r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.Profiler;

        $z0 = r0.<androidx.benchmark.Profiler: boolean requiresSingleMeasurementIteration>;

        return $z0;
    }

    public boolean getRequiresExtraRuntime()
    {
        androidx.benchmark.Profiler r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.Profiler;

        $z0 = r0.<androidx.benchmark.Profiler: boolean requiresExtraRuntime>;

        return $z0;
    }

    public boolean getRequiresDebuggable()
    {
        androidx.benchmark.Profiler r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.Profiler;

        $z0 = r0.<androidx.benchmark.Profiler: boolean requiresDebuggable>;

        return $z0;
    }

    public boolean getRequiresLibraryOutputDir()
    {
        androidx.benchmark.Profiler r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.Profiler;

        $z0 = r0.<androidx.benchmark.Profiler: boolean requiresLibraryOutputDir>;

        return $z0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.Profiler r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.Profiler;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.Profiler: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.benchmark.Profiler$Companion $r0;

        $r0 = new androidx.benchmark.Profiler$Companion;

        specialinvoke $r0.<androidx.benchmark.Profiler$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.benchmark.Profiler: androidx.benchmark.Profiler$Companion Companion> = $r0;

        return;
    }

androidx.benchmark.Profiler$Companion
    private void <init>()
    {
        androidx.benchmark.Profiler$Companion r0;

        r0 := @this: androidx.benchmark.Profiler$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.benchmark.Profiler getByName(java.lang.String)
    {
        androidx.benchmark.Profiler$Companion r0;
        java.lang.String r1, r5, r7, $r35, $r46;
        java.util.Map r2, r8, r9, $r43;
        java.util.Iterator r3;
        java.lang.Object r4, $r31, $r33, r45;
        java.util.Map$Entry r6, r44;
        androidx.benchmark.MethodTracing $r10, $r22;
        kotlin.Pair $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27;
        int $i0, $i2, $i3;
        androidx.benchmark.StackSamplingLegacy $r12, $r18, $r24;
        androidx.benchmark.ConnectedAllocation $r14;
        androidx.benchmark.ConnectedSampling $r16, $r26;
        androidx.benchmark.StackSamplingSimpleperf $r20, $r37;
        java.util.LinkedHashMap $r28;
        java.util.Set $r29;
        java.util.Locale $r30, $r34;
        androidx.benchmark.Profiler $r32, $r42;
        java.lang.Iterable $r40;
        kotlin.Pair[] $r41;
        boolean $z5;

        r0 := @this: androidx.benchmark.Profiler$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r41 = newarray (kotlin.Pair)[9];

        $r10 = <androidx.benchmark.MethodTracing: androidx.benchmark.MethodTracing INSTANCE>;

        $r11 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("MethodTracing", $r10);

        $r41[0] = $r11;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r37 = <androidx.benchmark.StackSamplingSimpleperf: androidx.benchmark.StackSamplingSimpleperf INSTANCE>;

        $r42 = (androidx.benchmark.Profiler) $r37;

        goto label2;

     label1:
        $r12 = <androidx.benchmark.StackSamplingLegacy: androidx.benchmark.StackSamplingLegacy INSTANCE>;

        $r42 = (androidx.benchmark.Profiler) $r12;

     label2:
        $r13 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("StackSampling", $r42);

        $r41[1] = $r13;

        $r14 = <androidx.benchmark.ConnectedAllocation: androidx.benchmark.ConnectedAllocation INSTANCE>;

        $r15 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("ConnectedAllocation", $r14);

        $r41[2] = $r15;

        $r16 = <androidx.benchmark.ConnectedSampling: androidx.benchmark.ConnectedSampling INSTANCE>;

        $r17 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("ConnectedSampling", $r16);

        $r41[3] = $r17;

        $r18 = <androidx.benchmark.StackSamplingLegacy: androidx.benchmark.StackSamplingLegacy INSTANCE>;

        $r19 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("MethodSampling", $r18);

        $r41[4] = $r19;

        $r20 = <androidx.benchmark.StackSamplingSimpleperf: androidx.benchmark.StackSamplingSimpleperf INSTANCE>;

        $r21 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("MethodSamplingSimpleperf", $r20);

        $r41[5] = $r21;

        $r22 = <androidx.benchmark.MethodTracing: androidx.benchmark.MethodTracing INSTANCE>;

        $r23 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("Method", $r22);

        $r41[6] = $r23;

        $r24 = <androidx.benchmark.StackSamplingLegacy: androidx.benchmark.StackSamplingLegacy INSTANCE>;

        $r25 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("Sampled", $r24);

        $r41[7] = $r25;

        $r26 = <androidx.benchmark.ConnectedSampling: androidx.benchmark.ConnectedSampling INSTANCE>;

        $r27 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("ConnectedSampled", $r26);

        $r41[8] = $r27;

        $r43 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>($r41);

        $r28 = new java.util.LinkedHashMap;

        $i2 = interfaceinvoke $r43.<java.util.Map: int size()>();

        $i3 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i2);

        specialinvoke $r28.<java.util.LinkedHashMap: void <init>(int)>($i3);

        r2 = (java.util.Map) $r28;

        $r29 = interfaceinvoke $r43.<java.util.Map: java.util.Set entrySet()>();

        $r40 = (java.lang.Iterable) $r29;

        r3 = interfaceinvoke $r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.util.Map$Entry) r4;

        r9 = r2;

        $r33 = interfaceinvoke r44.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r35 = (java.lang.String) $r33;

        $r34 = <java.util.Locale: java.util.Locale ROOT>;

        r5 = virtualinvoke $r35.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r34);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        r6 = (java.util.Map$Entry) r4;

        r7 = r5;

        r8 = r9;

        r45 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r45);

        goto label3;

     label4:
        $r30 = <java.util.Locale: java.util.Locale ROOT>;

        $r46 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r30);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r46, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        $r31 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r46);

        $r32 = (androidx.benchmark.Profiler) $r31;

        return $r32;
    }

    public final java.lang.String traceName(java.lang.String, java.lang.String)
    {
        androidx.benchmark.Profiler$Companion r0;
        java.lang.String r1, r2, $r9, $r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11;
        androidx.benchmark.Outputs $r8;

        r0 := @this: androidx.benchmark.Profiler$Companion;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "traceUniqueName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "traceTypeLabel");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r8 = <androidx.benchmark.Outputs: androidx.benchmark.Outputs INSTANCE>;

        $r9 = staticinvoke <androidx.benchmark.Outputs: java.lang.String dateToFileName$default(androidx.benchmark.Outputs,java.util.Date,int,java.lang.Object)>($r8, null, 1, null);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".trace");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.Profiler$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.Profiler$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.Profiler$Companion: void <init>()>();

        return;
    }

androidx.benchmark.Profiler$ResultFile
<androidx.benchmark.Profiler$ResultFile: java.lang.String label>
<androidx.benchmark.Profiler$ResultFile: java.lang.String outputRelativePath>
    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.benchmark.Profiler$ResultFile r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.benchmark.Profiler$ResultFile;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "label");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outputRelativePath");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.Profiler$ResultFile: java.lang.String label> = r1;

        r0.<androidx.benchmark.Profiler$ResultFile: java.lang.String outputRelativePath> = r2;

        return;
    }

    public final java.lang.String getLabel()
    {
        androidx.benchmark.Profiler$ResultFile r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.Profiler$ResultFile;

        $r1 = r0.<androidx.benchmark.Profiler$ResultFile: java.lang.String label>;

        return $r1;
    }

    public final java.lang.String getOutputRelativePath()
    {
        androidx.benchmark.Profiler$ResultFile r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.Profiler$ResultFile;

        $r1 = r0.<androidx.benchmark.Profiler$ResultFile: java.lang.String outputRelativePath>;

        return $r1;
    }

