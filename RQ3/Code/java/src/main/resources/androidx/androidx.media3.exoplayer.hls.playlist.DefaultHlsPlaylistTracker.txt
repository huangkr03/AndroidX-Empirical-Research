androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory FACTORY>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: double DEFAULT_PLAYLIST_STUCK_TARGET_DURATION_COEFFICIENT>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: double playlistStuckTargetDurationCoefficient>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler playlistRefreshHandler>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener primaryPlaylistListener>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean isLive>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: long initialStartTimeUs>
    public void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory r1;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r2;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory r3;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsDataSourceFactory;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r3 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory,double)>(r1, r2, r3, 3.5);

        return;
    }

    public void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory, double)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory r1;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r2;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory r3;
        double d0;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        java.util.HashMap $r5;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsDataSourceFactory;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r3 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory;

        d0 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory> = r1;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory> = r3;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r2;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: double playlistStuckTargetDurationCoefficient> = d0;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles> = $r5;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: long initialStartTimeUs> = -9223372036854775807L;

        return;
    }

    public void start(android.net.Uri, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher, androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r2;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener r3;
        androidx.media3.exoplayer.upstream.ParsingLoadable r4, $r6;
        long l0, $l3;
        android.os.Handler $r5;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory $r7;
        androidx.media3.datasource.DataSource $r8;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory $r9;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser $r10;
        androidx.media3.exoplayer.upstream.Loader $r11, $r12, $r14;
        int $i1, $i2, $i4;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r13;
        androidx.media3.exoplayer.source.LoadEventInfo $r15;
        androidx.media3.datasource.DataSpec $r16;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        r3 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener;

        $r5 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler playlistRefreshHandler> = $r5;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher> = r2;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener primaryPlaylistListener> = r3;

        $r6 = new androidx.media3.exoplayer.upstream.ParsingLoadable;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory>;

        $r8 = interfaceinvoke $r7.<androidx.media3.exoplayer.hls.HlsDataSourceFactory: androidx.media3.datasource.DataSource createDataSource(int)>(4);

        $r9 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory>;

        $r10 = interfaceinvoke $r9.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser()>();

        specialinvoke $r6.<androidx.media3.exoplayer.upstream.ParsingLoadable: void <init>(androidx.media3.datasource.DataSource,android.net.Uri,int,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser)>($r8, r1, 4, $r10);

        r4 = $r6;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader>;

        if $r11 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r12 = new androidx.media3.exoplayer.upstream.Loader;

        specialinvoke $r12.<androidx.media3.exoplayer.upstream.Loader: void <init>(java.lang.String)>("DefaultHlsPlaylistTracker:MultivariantPlaylist");

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader> = $r12;

        $r14 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader>;

        $r13 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $i1 = r4.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        $i2 = interfaceinvoke $r13.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)>($i1);

        l0 = virtualinvoke $r14.<androidx.media3.exoplayer.upstream.Loader: long startLoading(androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int)>(r4, r0, $i2);

        $r15 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l3 = r4.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r16 = r4.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        specialinvoke $r15.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,long)>($l3, $r16, l0);

        $i4 = r4.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke r2.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int)>($r15, $i4);

        return;
    }

    public void stop()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r2;
        androidx.media3.exoplayer.upstream.Loader $r3;
        java.util.HashMap $r4, $r7;
        java.util.Collection $r5;
        boolean $z0;
        android.os.Handler $r6;
        java.lang.Object $r8;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl> = null;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot> = null;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist> = null;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: long initialStartTimeUs> = -9223372036854775807L;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader>;

        virtualinvoke $r3.<androidx.media3.exoplayer.upstream.Loader: void release()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader> = null;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r8;

        virtualinvoke r2.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void release()>();

        goto label1;

     label2:
        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler playlistRefreshHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler playlistRefreshHandler> = null;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        return;
    }

    public void addListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r3;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener;

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist getMultivariantPlaylist()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>;

        return $r1;
    }

    public androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        boolean z0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle $r5;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r4;

        r2 = virtualinvoke $r5.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot()>();

        if r2 == null goto label1;

        if z0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void maybeSetPrimaryUrl(android.net.Uri)>(r1);

     label1:
        return r2;
    }

    public long getInitialStartTimeUs()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $l0 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: long initialStartTimeUs>;

        return $l0;
    }

    public boolean isSnapshotValid(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r3;

        $z0 = virtualinvoke $r4.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean isSnapshotValid()>();

        return $z0;
    }

    public void maybeThrowPrimaryPlaylistRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.Loader $r1, $r4;
        android.net.Uri $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader>;

        if $r1 == null goto label1;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader>;

        virtualinvoke $r4.<androidx.media3.exoplayer.upstream.Loader: void maybeThrowError()>();

     label1:
        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void maybeThrowPlaylistRefreshError(android.net.Uri)>($r3);

     label2:
        return;
    }

    public void maybeThrowPlaylistRefreshError(android.net.Uri) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle $r4;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r3;

        virtualinvoke $r4.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void maybeThrowPlaylistRefreshError()>();

        return;
    }

    public void refreshPlaylist(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle $r4;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r3;

        virtualinvoke $r4.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylist()>();

        return;
    }

    public boolean isLive()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $z0 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean isLive>;

        return $z0;
    }

    public boolean excludeMediaPlaylist(android.net.Uri, long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        long l0;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        l0 := @parameter1: long;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r4;

        if r2 == null goto label3;

        $z0 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean access$000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,long)>(r2, l0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l2, $l3, $l4;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylist r2;
        boolean z0;
        androidx.media3.exoplayer.source.LoadEventInfo r3, $r13;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r4;
        java.lang.Object $r5, $r7, $r19;
        java.util.List $r6, $r12;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant $r8;
        android.net.Uri $r9, $r15, $r17;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener $r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        androidx.media3.datasource.DataSpec $r14;
        java.util.Map $r16;
        java.util.HashMap $r18;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r20;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r21;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r22;
        java.lang.String $r23;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist r24;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.lang.Object getResult()>();

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylist) $r5;

        z0 = r2 instanceof androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        if z0 == 0 goto label1;

        $r23 = r2.<androidx.media3.exoplayer.hls.playlist.HlsPlaylist: java.lang.String baseUri>;

        r24 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist createSingleVariantMultivariantPlaylist(java.lang.String)>($r23);

        goto label2;

     label1:
        r24 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist) r2;

     label2:
        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist> = r24;

        $r6 = r24.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List variants>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r7;

        $r9 = $r8.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: android.net.Uri url>;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl> = $r9;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>;

        $r10 = new androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener;

        specialinvoke $r10.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1)>(r0, null);

        virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r10);

        $r12 = r24.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List mediaPlaylistUrls>;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void createBundles(java.util.List)>($r12);

        $r13 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r14 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r15 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r16 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r13.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r14, $r15, $r16, l0, l1, $l3);

        r3 = $r13;

        $r18 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r17 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17);

        r4 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r19;

        if z0 == 0 goto label3;

        $r22 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) r2;

        staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void access$200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.source.LoadEventInfo)>(r4, $r22, r3);

        goto label4;

     label3:
        virtualinvoke r4.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylist()>();

     label4:
        $r20 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r20.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r21 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        virtualinvoke $r21.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int)>(r3, 4);

        return;
    }

    public void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l2, $l3, $l4;
        boolean z0;
        androidx.media3.exoplayer.source.LoadEventInfo r2, $r3;
        androidx.media3.datasource.DataSpec $r4;
        android.net.Uri $r5;
        java.util.Map $r6;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r8;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r3 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r6 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r3.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r4, $r5, $r6, l0, l1, $l3);

        r2 = $r3;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        virtualinvoke $r8.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,int)>(r2, 4);

        return;
    }

    public androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, l3, $l4, $l5, $l9;
        java.io.IOException r2;
        int i2, $i6, $i8;
        androidx.media3.exoplayer.source.LoadEventInfo r3, $r5;
        androidx.media3.exoplayer.source.MediaLoadData r4, $r9;
        boolean z0, $z1;
        androidx.media3.datasource.DataSpec $r6;
        android.net.Uri $r7;
        java.util.Map $r8;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo $r10;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r11, $r13;
        byte $b7;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r12;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r14;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r5 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r6 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r7 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r8 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r5.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l4, $r6, $r7, $r8, l0, l1, $l5);

        r3 = $r5;

        $r9 = new androidx.media3.exoplayer.source.MediaLoadData;

        $i6 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        specialinvoke $r9.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int)>($i6);

        r4 = $r9;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r10 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        specialinvoke $r10.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int)>(r3, r4, r2, i2);

        l3 = interfaceinvoke $r11.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>($r10);

        $b7 = l3 cmp -9223372036854775807L;

        if $b7 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r12 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        $i8 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r12.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,java.io.IOException,boolean)>(r3, $i8, r2, z0);

        if z0 == 0 goto label3;

        $r13 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l9 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r13.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l9);

     label3:
        if z0 == 0 goto label4;

        $r14 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY_FATAL>;

        goto label5;

     label4:
        $r14 = staticinvoke <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction createRetryAction(boolean,long)>(0, l3);

     label5:
        return $r14;
    }

    private boolean maybeSelectNewPrimaryUrl()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        java.util.List r1;
        int i0, i4;
        long l1, $l2;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r2, $r9;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5, $r8, $r10;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant $r6;
        android.net.Uri $r7, $r11, $r12, $r13;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>;

        r1 = $r3.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List variants>;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        $r6 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r5;

        $r7 = $r6.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: android.net.Uri url>;

        $r8 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r8;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        r2 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r10;

        $l2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long access$300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)>(r2);

        $b3 = l1 cmp $l2;

        if $b3 <= 0 goto label2;

        $r11 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri access$400(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)>(r2);

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl> = $r11;

        $r12 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        $r13 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri getRequestUriForPrimaryChange(android.net.Uri)>($r12);

        staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void access$500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,android.net.Uri)>(r2, $r13);

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void maybeSetPrimaryUrl(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1, $r4, $r6, $r9;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r2;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r3, $r5, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener $r10;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean isVariantUrl(android.net.Uri)>(r1);

        if $z1 == 0 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        if $r5 == null goto label2;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        $z3 = $r11.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z3 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl> = r1;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r8;

        r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$600(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)>(r2);

        if r3 == null goto label3;

        $z2 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z2 == 0 goto label3;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot> = r3;

        $r10 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener primaryPlaylistListener>;

        interfaceinvoke $r10.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener: void onPrimaryPlaylistRefreshed(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r3);

        goto label4;

     label3:
        $r9 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri getRequestUriForPrimaryChange(android.net.Uri)>(r1);

        staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void access$500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,android.net.Uri)>(r2, $r9);

     label4:
        return;
    }

    private android.net.Uri getRequestUriForPrimaryChange(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1, $r12;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport r2;
        android.net.Uri$Builder r3;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r4, $r5, $r7;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl $r6;
        boolean $z0;
        java.util.Map $r8;
        java.lang.Object $r9;
        long $l0;
        java.lang.String $r10, $r13;
        int $i1, $i2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        $r6 = $r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $z0 = $r6.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: boolean canBlockReload>;

        if $z0 == 0 goto label2;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        $r8 = $r7.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.Map renditionReports>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport) $r9;

        if r2 == null goto label2;

        r3 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $l0 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: long lastMediaSequence>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("_HLS_msn", $r10);

        $i1 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: int lastPartIndex>;

        if $i1 == -1 goto label1;

        $i2 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: int lastPartIndex>;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("_HLS_part", $r13);

     label1:
        $r12 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r12;

     label2:
        return r1;
    }

    private boolean isVariantUrl(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1, $r6;
        java.util.List r2;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r3;
        int $i0, i1;
        java.lang.Object $r4;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant $r5;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>;

        r2 = $r3.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List variants>;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r4;

        $r6 = $r5.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: android.net.Uri url>;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void createBundles(java.util.List)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        java.util.List r1;
        int i0, i1;
        android.net.Uri r2;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r3, $r5;
        java.lang.Object $r4;
        java.util.HashMap $r6;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.net.Uri) $r4;

        $r5 = new androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        specialinvoke $r5.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri)>(r0, r2);

        r3 = $r5;

        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void onPlaylistUpdated(android.net.Uri, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1, $r5;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2, $r7;
        java.util.Iterator r3;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6;
        long $l0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener $r9;
        java.util.concurrent.CopyOnWriteArrayList $r10;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        if $r7 != null goto label3;

        $z1 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean isLive> = $z2;

        $l0 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: long initialStartTimeUs> = $l0;

     label3:
        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot> = r2;

        $r9 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener primaryPlaylistListener>;

        interfaceinvoke $r9.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener: void onPrimaryPlaylistRefreshed(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r2);

     label4:
        $r10 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>;

        r3 = virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener) $r6;

        interfaceinvoke r4.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener: void onPlaylistChanged()>();

        goto label5;

     label6:
        return;
    }

    private boolean notifyPlaylistError(android.net.Uri, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r2;
        boolean z0, $z1, $z2, $z3, z4, $z5;
        java.util.Iterator r3;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        z0 := @parameter2: boolean;

        z4 = 0;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>;

        r3 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener) $r6;

        $z3 = z4;

        $z2 = interfaceinvoke r4.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener: boolean onPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)>(r1, r2, z0);

        if $z2 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z4 = $z3 | $z5;

        goto label1;

     label4:
        return z4;
    }

    private androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getLatestPlaylistSnapshot(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1, r2, $r3, $r4;
        long l0;
        int i1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $z0 = virtualinvoke r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean isNewerThan(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1);

        if $z0 != 0 goto label2;

        $z1 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist copyWithEndTag()>();

        return $r4;

     label1:
        return r1;

     label2:
        l0 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: long getLoadedPlaylistStartTimeUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1, r2);

        i1 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: int getLoadedPlaylistDiscontinuitySequence(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1, r2);

        $r3 = virtualinvoke r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist copyWith(long,int)>(l0, i1);

        return $r3;
    }

    private long getLoadedPlaylistStartTimeUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1, r2, $r4, $r6;
        long l0, $l2, $l3, $l4, $l5, $l7, $l8, $l9, $l10, $l11, $l12;
        int i1;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r3;
        boolean $z0;
        java.util.List $r5;
        byte $b6;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $z0 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasProgramDateTime>;

        if $z0 == 0 goto label1;

        $l11 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        return $l11;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        if $r4 == null goto label2;

        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        $l12 = $r6.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        goto label3;

     label2:
        $l12 = 0L;

     label3:
        l0 = $l12;

        if r1 != null goto label4;

        return l0;

     label4:
        $r5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment getFirstOldOverlappingSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1, r2);

        if r3 == null goto label5;

        $l9 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $l8 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

        $l10 = $l9 + $l8;

        return $l10;

     label5:
        $l5 = (long) i1;

        $l3 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l4 = $l3 - $l2;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label6;

        $l7 = virtualinvoke r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long getEndTimeUs()>();

        return $l7;

     label6:
        return l0;
    }

    private int getLoadedPlaylistDiscontinuitySequence(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1, r2, $r4, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r3, $r7;
        boolean $z0;
        java.util.List $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $z0 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasDiscontinuitySequence>;

        if $z0 == 0 goto label1;

        $i6 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int discontinuitySequence>;

        return $i6;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        if $r4 == null goto label2;

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        $i7 = $r8.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int discontinuitySequence>;

        goto label3;

     label2:
        $i7 = 0;

     label3:
        i0 = $i7;

        if r1 != null goto label4;

        return i0;

     label4:
        r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment getFirstOldOverlappingSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1, r2);

        if r3 == null goto label5;

        $i2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int discontinuitySequence>;

        $i1 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: int relativeDiscontinuitySequence>;

        $i3 = $i2 + $i1;

        $r5 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r6;

        $i4 = $r7.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: int relativeDiscontinuitySequence>;

        $i5 = $i3 - $i4;

        return $i5;

     label5:
        return i0;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment getFirstOldOverlappingSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r0, r1;
        int i0, $i4;
        java.util.List r2;
        long $l1, $l2, $l3;
        java.lang.Object $r3;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r4;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r1 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l3 = $l2 - $l1;

        i0 = (int) $l3;

        r2 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i4 goto label1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public volatile androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        java.io.IOException r2;
        int i2;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r3;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r4;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r3 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int)>($r3, l0, l1, r2, i2);

        return $r4;
    }

    public volatile void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        boolean z0;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r2 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean)>($r2, l0, l1, z0);

        return;
    }

    public volatile void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long)>($r2, l0, l1);

        return;
    }

    static androidx.media3.exoplayer.hls.HlsDataSourceFactory access$700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory>;

        return $r1;
    }

    static androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        return $r1;
    }

    static androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        return $r1;
    }

    static boolean access$1000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker, android.net.Uri, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r2;
        boolean z0, $z1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        z0 := @parameter3: boolean;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean notifyPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)>(r1, r2, z0);

        return $z1;
    }

    static android.os.Handler access$1100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.os.Handler $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler playlistRefreshHandler>;

        return $r1;
    }

    static androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist access$1200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>;

        return $r1;
    }

    static androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory access$1300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory>;

        return $r1;
    }

    static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$1400(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1, r2, $r3;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $r3 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getLatestPlaylistSnapshot(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1, r2);

        return $r3;
    }

    static void access$1500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker, android.net.Uri, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void onPlaylistUpdated(android.net.Uri,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1, r2);

        return;
    }

    static double access$1600(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        double $d0;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $d0 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: double playlistStuckTargetDurationCoefficient>;

        return $d0;
    }

    static android.net.Uri access$1700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        android.net.Uri $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl>;

        return $r1;
    }

    static boolean access$1800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean maybeSelectNewPrimaryUrl()>();

        return $z0;
    }

    static java.util.concurrent.CopyOnWriteArrayList access$1900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList listeners>;

        return $r1;
    }

    static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$2000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot>;

        return $r1;
    }

    static java.util.HashMap access$2100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r0;
        java.util.HashMap $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory $r0;

        $r0 = dynamicinvoke "createTracker" <androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker __METHODTYPE__(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory), methodhandle: "REF_INVOKE_CONSTRUCTOR" <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory)>, methodtype: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker __METHODTYPE__(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory));

        <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory FACTORY> = $r0;

        return;
    }

androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>
    private void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener r0;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPlaylistChanged()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener r0;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.concurrent.CopyOnWriteArrayList access$1900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r1);

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public boolean onPlaylistError(android.net.Uri, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener r0;
        android.net.Uri r1, $r24;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r2;
        boolean z0;
        long l0, $l4, $l5;
        java.util.List r3, $r14;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r4, r26;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r5, $r7, $r12, $r15, $r17, $r20;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r6;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r8, $r10, $r13;
        java.lang.Object $r9, $r19, $r22, $r25;
        int $i1, $i2, $i3, i7, i8;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions $r11, r27;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r16;
        java.util.HashMap $r18, $r21;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant $r23;
        byte $b6;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection r28;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        z0 := @parameter2: boolean;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r6 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$2000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r5);

        if $r6 != null goto label4;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i7 = 0;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r8 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist access$1200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r7);

        $r9 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r8);

        $r10 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist) $r9;

        r3 = $r10.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List variants>;

        i8 = 0;

     label1:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i8 >= $i1 goto label3;

        $r20 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r21 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap access$2100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r20);

        $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i8);

        $r23 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r22;

        $r24 = $r23.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: android.net.Uri url>;

        $r25 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r24);

        r26 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r25;

        if r26 == null goto label2;

        $l5 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long access$300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)>(r26);

        $b6 = l0 cmp $l5;

        if $b6 >= 0 goto label2;

        i7 = i7 + 1;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        $r11 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions;

        $r12 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r13 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist access$1200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r12);

        $r14 = $r13.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List variants>;

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        specialinvoke $r11.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: void <init>(int,int,int,int)>(1, 0, $i2, i7);

        r27 = $r11;

        $r15 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r16 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r15);

        r28 = interfaceinvoke $r16.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>(r27, r2);

        if r28 == null goto label4;

        $i3 = r28.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: int type>;

        if $i3 != 2 goto label4;

        $r17 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r18 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap access$2100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r17);

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle) $r19;

        if r4 == null goto label4;

        $l4 = r28.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: long exclusionDurationMs>;

        staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean access$000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,long)>(r4, $l4);

     label4:
        return 0;
    }

    void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker, androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener r0;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r1;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1 r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener: void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>(r1);

        return;
    }

androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.lang.String BLOCK_MSN_PARAM>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.lang.String BLOCK_PART_PARAM>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.lang.String SKIP_PARAM>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.datasource.DataSource mediaPlaylistDataSource>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotLoadMs>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotChangeMs>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long earliestNextLoadTimeMs>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long excludeUntilMs>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean loadPending>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError>
<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>
    public void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker, android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker r1;
        android.net.Uri r2;
        androidx.media3.exoplayer.upstream.Loader $r3;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory $r4;
        androidx.media3.datasource.DataSource $r5;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker;

        r2 := @parameter1: android.net.Uri;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl> = r2;

        $r3 = new androidx.media3.exoplayer.upstream.Loader;

        specialinvoke $r3.<androidx.media3.exoplayer.upstream.Loader: void <init>(java.lang.String)>("DefaultHlsPlaylistTracker:MediaPlaylist");

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader> = $r3;

        $r4 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.HlsDataSourceFactory access$700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>(r1);

        $r5 = interfaceinvoke $r4.<androidx.media3.exoplayer.hls.HlsDataSourceFactory: androidx.media3.datasource.DataSource createDataSource(int)>(4);

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.datasource.DataSource mediaPlaylistDataSource> = $r5;

        return;
    }

    public androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        return $r1;
    }

    public boolean isSnapshotValid()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        long l0, l1, $l2, $l3, $l6, $l7;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        int $i4, $i5;
        byte $b8;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        if $r1 != null goto label1;

        return 0;

     label1:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l2 = $r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $l3 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l2);

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(30000L, $l3);

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $z0 = $r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z0 != 0 goto label2;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $i4 = $r4.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int playlistType>;

        if $i4 == 2 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $i5 = $r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int playlistType>;

        if $i5 == 1 goto label2;

        $l6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotLoadMs>;

        $l7 = $l6 + l1;

        $b8 = $l7 cmp l0;

        if $b8 <= 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public void loadPlaylist()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri $r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylistInternal(android.net.Uri)>($r1);

        return;
    }

    public void maybeThrowPlaylistRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.Loader $r1;
        java.io.IOException $r2, $r3;
        java.lang.Throwable r4;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader>;

        virtualinvoke $r1.<androidx.media3.exoplayer.upstream.Loader: void maybeThrowError()>();

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError>;

        r4 = (java.lang.Throwable) $r3;

        throw r4;

     label1:
        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.Loader $r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader>;

        virtualinvoke $r1.<androidx.media3.exoplayer.upstream.Loader: void release()>();

        return;
    }

    public void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l2, $l3, $l4;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylist r2;
        androidx.media3.exoplayer.source.LoadEventInfo r3, $r5;
        java.lang.Object $r4;
        androidx.media3.datasource.DataSpec $r6;
        android.net.Uri $r7;
        java.util.Map $r8;
        boolean $z0;
        androidx.media3.common.ParserException $r9;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r10, $r13, $r16;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r11, $r17;
        java.io.IOException $r12;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r14;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r15;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r4 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.lang.Object getResult()>();

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylist) $r4;

        $r5 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r6 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r7 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r8 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r5.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r6, $r7, $r8, l0, l1, $l3);

        r3 = $r5;

        $z0 = r2 instanceof androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        if $z0 == 0 goto label1;

        $r15 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) r2;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void processLoadedPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.source.LoadEventInfo)>($r15, r3);

        $r16 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r17 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r16);

        virtualinvoke $r17.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int)>(r3, 4);

        goto label2;

     label1:
        $r9 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("Loaded playlist has unexpected type.", null);

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError> = $r9;

        $r10 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r11 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r10);

        $r12 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError>;

        virtualinvoke $r11.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,java.io.IOException,boolean)>(r3, 4, $r12, 1);

     label2:
        $r13 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r14 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r13);

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r14.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        return;
    }

    public void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l2, $l3, $l4;
        boolean z0;
        androidx.media3.exoplayer.source.LoadEventInfo r2, $r3;
        androidx.media3.datasource.DataSpec $r4;
        android.net.Uri $r5;
        java.util.Map $r6;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r7, $r9;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r8;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r10;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r3 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r6 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r3.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r4, $r5, $r6, l0, l1, $l3);

        r2 = $r3;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r8 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r7);

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r9 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r10 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r9);

        virtualinvoke $r10.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,int)>(r2, 4);

        return;
    }

    public androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l3, $l4, $l7, $l10, l12;
        java.io.IOException r2;
        int i2, $i5, $i6, i9, $i11;
        androidx.media3.exoplayer.source.LoadEventInfo r3, $r5;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, z7;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r4, $r12;
        androidx.media3.datasource.DataSpec $r6;
        android.net.Uri $r7, $r9, $r13;
        java.util.Map $r8;
        java.lang.String $r10;
        androidx.media3.exoplayer.source.MediaLoadData $r11, r27;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r14, $r15, $r17, $r19, $r22;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r16, $r23, $r25;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r18, $r20;
        byte $b8;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException $r21;
        java.lang.Object $r24;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r26, $r28, r29;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r5 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l3 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r6 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r7 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r8 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l4 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r5.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l3, $r6, $r7, $r8, l0, l1, $l4);

        r3 = $r5;

        $r9 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r10 = virtualinvoke $r9.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("_HLS_msn");

        if $r10 == null goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        z1 = r2 instanceof androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException;

        if z0 != 0 goto label03;

        if z1 == 0 goto label06;

     label03:
        i9 = 2147483647;

        $z3 = r2 instanceof androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        if $z3 == 0 goto label04;

        $r21 = (androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException) r2;

        i9 = $r21.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

     label04:
        if z1 != 0 goto label05;

        if i9 == 400 goto label05;

        if i9 != 503 goto label06;

     label05:
        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long earliestNextLoadTimeMs> = $l10;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylist()>();

        $r22 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r23 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r22);

        $r24 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r23);

        $r25 = (androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher) $r24;

        $i11 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r25.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,java.io.IOException,boolean)>(r3, $i11, r2, 1);

        $r26 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY>;

        return $r26;

     label06:
        $r11 = new androidx.media3.exoplayer.source.MediaLoadData;

        $i5 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        specialinvoke $r11.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int)>($i5);

        r27 = $r11;

        $r12 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        specialinvoke $r12.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int)>(r3, r27, r2, i2);

        r4 = $r12;

        $r14 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r13 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        z2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean access$1000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)>($r14, $r13, r4, 0);

        if z2 == 0 goto label09;

        $r19 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r20 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r19);

        l12 = interfaceinvoke $r20.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>(r4);

        $b8 = l12 cmp -9223372036854775807L;

        if $b8 == 0 goto label07;

        $r28 = staticinvoke <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction createRetryAction(boolean,long)>(0, l12);

        goto label08;

     label07:
        $r28 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY_FATAL>;

     label08:
        r29 = $r28;

        goto label10;

     label09:
        r29 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY>;

     label10:
        $z4 = virtualinvoke r29.<androidx.media3.exoplayer.upstream.Loader$LoadErrorAction: boolean isRetry()>();

        if $z4 != 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        z7 = $z6;

        $r15 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r16 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r15);

        $i6 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r16.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,java.io.IOException,boolean)>(r3, $i6, r2, z7);

        if z7 == 0 goto label13;

        $r17 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r18 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r17);

        $l7 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r18.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l7);

     label13:
        return r29;
    }

    private void loadPlaylistInternal(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri r1;
        long l0, $l1, $l3, $l4;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.upstream.Loader $r2, $r3;
        byte $b2;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r4;
        android.os.Handler $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: android.net.Uri;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long excludeUntilMs> = 0L;

        $z0 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean loadPending>;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader>;

        $z1 = virtualinvoke $r2.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z1 != 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader>;

        $z2 = virtualinvoke $r3.<androidx.media3.exoplayer.upstream.Loader: boolean hasFatalError()>();

        if $z2 == 0 goto label2;

     label1:
        return;

     label2:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long earliestNextLoadTimeMs>;

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label3;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean loadPending> = 1;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r5 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler access$1100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r4);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,android.net.Uri)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void lambda$loadPlaylistInternal$0(android.net.Uri)>, methodtype: void __METHODTYPE__());

        $l3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long earliestNextLoadTimeMs>;

        $l4 = $l3 - l0;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l4);

        goto label4;

     label3:
        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylistImmediately(android.net.Uri)>(r1);

     label4:
        return;
    }

    private void loadPlaylistImmediately(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.exoplayer.upstream.ParsingLoadable r3, $r9;
        long l0, $l3;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r4, $r6, $r11, $r14;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory $r5;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r7;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r8;
        androidx.media3.datasource.DataSource $r10;
        androidx.media3.exoplayer.upstream.Loader $r12;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r13;
        int $i1, $i2, $i4;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r15;
        androidx.media3.exoplayer.source.LoadEventInfo $r16;
        androidx.media3.datasource.DataSpec $r17;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: android.net.Uri;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r5 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory access$1300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r4);

        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r7 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist access$1200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r6);

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        r2 = interfaceinvoke $r5.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>($r7, $r8);

        $r9 = new androidx.media3.exoplayer.upstream.ParsingLoadable;

        $r10 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.datasource.DataSource mediaPlaylistDataSource>;

        specialinvoke $r9.<androidx.media3.exoplayer.upstream.ParsingLoadable: void <init>(androidx.media3.datasource.DataSource,android.net.Uri,int,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser)>($r10, r1, 4, r2);

        r3 = $r9;

        $r12 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader>;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r13 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r11);

        $i1 = r3.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        $i2 = interfaceinvoke $r13.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)>($i1);

        l0 = virtualinvoke $r12.<androidx.media3.exoplayer.upstream.Loader: long startLoading(androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int)>(r3, r0, $i2);

        $r14 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r15 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r14);

        $r16 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l3 = r3.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r17 = r3.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        specialinvoke $r16.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,long)>($l3, $r17, l0);

        $i4 = r3.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r15.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int)>($r16, $i4);

        return;
    }

    private void processLoadedPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.source.LoadEventInfo)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1, r3, $r5, $r6, $r7, $r8, $r13, $r14, $r15, $r17, $r18, $r28, $r32, $r34;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        long l0, $l1, $l2, $l4, $l5, $l6, $l8, $l9, $l10, $l11, l13, $l14, $l15, $l16, $l17;
        boolean z0, $z1, $z2, $z3, z5, $z6, $z7;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r4, $r10, $r19, $r22, $r30;
        android.net.Uri $r9, $r11, $r12, $r23, $r25, $r27, $r29;
        java.util.List $r16;
        int $i3;
        byte $b7, $b12, $b18;
        double $d0, $d1, $d2, $d3;
        java.lang.Object r31;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl $r33;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException r35;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException r36;
        androidx.media3.exoplayer.source.MediaLoadData r37;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r38;
        java.io.IOException r39, r40;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter1: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotLoadMs> = l0;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r5 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$1400(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>($r4, r3, r1);

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot> = $r5;

        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        if $r6 == r3 goto label01;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError> = null;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotChangeMs> = l0;

        $r30 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r29 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        $r28 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: void access$1500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>($r30, $r29, $r28);

        goto label04;

     label01:
        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $z1 = $r7.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z1 != 0 goto label04;

        z5 = 0;

        r31 = null;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $r16 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i3 = interfaceinvoke $r16.<java.util.List: int size()>();

        $l4 = (long) $i3;

        $l6 = $l2 + $l4;

        $r17 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l5 = $r17.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $b7 = $l6 cmp $l5;

        if $b7 >= 0 goto label02;

        z5 = 1;

        r35 = new androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException;

        $r27 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        specialinvoke r35.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException: void <init>(android.net.Uri)>($r27);

        r31 = r35;

        goto label03;

     label02:
        $l8 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotChangeMs>;

        $l9 = l0 - $l8;

        $d0 = (double) $l9;

        $r18 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l10 = $r18.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long targetDurationUs>;

        $l11 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l10);

        $d1 = (double) $l11;

        $r19 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $d2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: double access$1600(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r19);

        $d3 = $d1 * $d2;

        $b12 = $d0 cmpl $d3;

        if $b12 <= 0 goto label03;

        r36 = new androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException;

        $r25 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        specialinvoke r36.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException: void <init>(android.net.Uri)>($r25);

        r31 = r36;

     label03:
        if r31 == null goto label04;

        r39 = (java.io.IOException) r31;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError> = r39;

        $r22 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r23 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        r38 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        r37 = new androidx.media3.exoplayer.source.MediaLoadData;

        specialinvoke r37.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int)>(4);

        r40 = (java.io.IOException) r31;

        specialinvoke r38.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int)>(r2, r37, r40, 1);

        staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean access$1000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)>($r22, $r23, r38, z5);

     label04:
        l13 = 0L;

        $r32 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r33 = $r32.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $z6 = $r33.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: boolean canBlockReload>;

        if $z6 != 0 goto label07;

        $r13 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        if $r13 == r3 goto label05;

        $r15 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l14 = $r15.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long targetDurationUs>;

        goto label06;

     label05:
        $r14 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l1 = $r14.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long targetDurationUs>;

        $l14 = $l1 / 2L;

     label06:
        l13 = $l14;

     label07:
        $l15 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l13);

        $l16 = l0 + $l15;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long earliestNextLoadTimeMs> = $l16;

        $r34 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l17 = $r34.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long partTargetDurationUs>;

        $b18 = $l17 cmp -9223372036854775807L;

        if $b18 != 0 goto label08;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        $r10 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r12 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri access$1700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r10);

        $z3 = virtualinvoke $r11.<android.net.Uri: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label09;

     label08:
        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        z0 = $z7;

        if z0 == 0 goto label11;

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $z2 = $r8.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z2 != 0 goto label11;

        $r9 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri getMediaPlaylistUriForReload()>();

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylistInternal(android.net.Uri)>($r9);

     label11:
        return;
    }

    private android.net.Uri getMediaPlaylistUriForReload()
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri$Builder r1;
        long l0, $l1, $l3, $l5, $l6, $l9;
        java.util.List r2, $r17;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r3, $r5, $r8, $r10, $r15, $r16, $r20, $r21, $r25, $r28;
        android.net.Uri $r4, $r7, $r31;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl $r6, $r9, $r11, $r26, $r29;
        byte $b2, $b7, $b10;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i4, i8;
        java.lang.String $r18, $r27, $r30;
        java.lang.Object $r23;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part $r24;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        if $r3 == null goto label1;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r6 = $r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $l1 = $r6.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long skipUntilUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 != 0 goto label2;

        $r25 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r26 = $r25.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $z4 = $r26.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: boolean canBlockReload>;

        if $z4 != 0 goto label2;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        return $r4;

     label2:
        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        r1 = virtualinvoke $r7.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r9 = $r8.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $z0 = $r9.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: boolean canBlockReload>;

        if $z0 == 0 goto label4;

        $r15 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l3 = $r15.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $r16 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r17 = $r16.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i4 = interfaceinvoke $r17.<java.util.List: int size()>();

        $l5 = (long) $i4;

        l0 = $l3 + $l5;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("_HLS_msn", $r18);

        $r20 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $l6 = $r20.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long partTargetDurationUs>;

        $b7 = $l6 cmp -9223372036854775807L;

        if $b7 == 0 goto label4;

        $r21 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        r2 = $r21.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        i8 = interfaceinvoke r2.<java.util.List: int size()>();

        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r23 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>(r2);

        $r24 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part) $r23;

        $z3 = $r24.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: boolean isPreload>;

        if $z3 == 0 goto label3;

        i8 = i8 + -1;

     label3:
        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i8);

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("_HLS_part", $r27);

     label4:
        $r28 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r29 = $r28.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $l9 = $r29.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long skipUntilUs>;

        $b10 = $l9 cmp -9223372036854775807L;

        if $b10 == 0 goto label7;

        $r10 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        $r11 = $r10.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $z1 = $r11.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: boolean canSkipDateRanges>;

        if $z1 == 0 goto label5;

        $r30 = "v2";

        goto label6;

     label5:
        $r30 = "YES";

     label6:
        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("_HLS_skip", $r30);

     label7:
        $r31 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r31;
    }

    private boolean excludePlaylist(long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker $r1, $r4;
        android.net.Uri $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        l0 := @parameter0: long;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 + l0;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long excludeUntilMs> = $l2;

        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri access$1700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r1);

        $z0 = virtualinvoke $r2.<android.net.Uri: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0>;

        $z1 = staticinvoke <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: boolean access$1800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker)>($r4);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        java.io.IOException r2;
        int i2;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r3;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r4;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r3 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int)>($r3, l0, l1, r2, i2);

        return $r4;
    }

    public volatile void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, boolean)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        boolean z0;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r2 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean)>($r2, l0, l1, z0);

        return;
    }

    public volatile void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long)>($r2, l0, l1);

        return;
    }

    private void lambda$loadPlaylistInternal$0(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter0: android.net.Uri;

        r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean loadPending> = 0;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylistImmediately(android.net.Uri)>(r1);

        return;
    }

    static boolean access$000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle, long)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        long l0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        l0 := @parameter1: long;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean excludePlaylist(long)>(l0);

        return $z0;
    }

    static void access$200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.source.LoadEventInfo)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter2: androidx.media3.exoplayer.source.LoadEventInfo;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void processLoadedPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.source.LoadEventInfo)>(r1, r2);

        return;
    }

    static long access$300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        long $l0;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $l0 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long excludeUntilMs>;

        return $l0;
    }

    static android.net.Uri access$400(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl>;

        return $r1;
    }

    static void access$500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle, android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        android.net.Uri r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylistInternal(android.net.Uri)>(r1);

        return;
    }

    static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$600(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)
    {
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r1;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot>;

        return $r1;
    }

