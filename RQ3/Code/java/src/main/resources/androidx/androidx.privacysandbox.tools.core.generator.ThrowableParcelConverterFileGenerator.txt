androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion Companion>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName throwableParcelNameSpec>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName parcelableStackFrameNameSpec>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName toThrowableParcelNameSpec>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName fromThrowableParcelNameSpec>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String converterName>
    public void <init>(java.lang.String)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator r0;
        java.lang.String r1, $r3, $r5, $r6, $r9;
        com.squareup.kotlinpoet.ClassName $r2, $r4;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion $r7, $r10;
        com.squareup.kotlinpoet.MemberName $r8, $r11;
        java.lang.String[] r12, r13;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "basePackageName");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName> = r1;

        $r2 = new com.squareup.kotlinpoet.ClassName;

        $r3 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>;

        r12 = newarray (java.lang.String)[1];

        r12[0] = "PrivacySandboxThrowableParcel";

        specialinvoke $r2.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>($r3, r12);

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName throwableParcelNameSpec> = $r2;

        $r4 = new com.squareup.kotlinpoet.ClassName;

        $r5 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>;

        r13 = newarray (java.lang.String)[1];

        r13[0] = "ParcelableStackFrame";

        specialinvoke $r4.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>($r5, r13);

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName parcelableStackFrameNameSpec> = $r4;

        $r7 = <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion Companion>;

        $r6 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>;

        $r8 = virtualinvoke $r7.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion: com.squareup.kotlinpoet.MemberName toThrowableParcelNameSpec(java.lang.String)>($r6);

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName toThrowableParcelNameSpec> = $r8;

        $r10 = <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion Companion>;

        $r9 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>;

        $r11 = virtualinvoke $r10.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion: com.squareup.kotlinpoet.MemberName fromThrowableParcelNameSpec(java.lang.String)>($r9);

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName fromThrowableParcelNameSpec> = $r11;

        return;
    }

    public final com.squareup.kotlinpoet.FileSpec generate(boolean, boolean)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator r0;
        boolean z0, z1;
        java.lang.String $r1;
        com.squareup.kotlinpoet.FileSpec$Companion $r2;
        com.squareup.kotlinpoet.FileSpec$Builder $r3;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        com.squareup.kotlinpoet.FileSpec $r6;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r2 = <com.squareup.kotlinpoet.FileSpec: com.squareup.kotlinpoet.FileSpec$Companion Companion>;

        $r1 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>;

        $r3 = virtualinvoke $r2.<com.squareup.kotlinpoet.FileSpec$Companion: com.squareup.kotlinpoet.FileSpec$Builder builder(java.lang.String,java.lang.String)>($r1, "PrivacySandboxThrowableParcelConverter");

        $r4 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1;

        specialinvoke $r4.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator,boolean,boolean)>(r0, z0, z1);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.FileSpec build(com.squareup.kotlinpoet.FileSpec$Builder,kotlin.jvm.functions.Function1)>($r3, $r5);

        return $r6;
    }

    public static com.squareup.kotlinpoet.FileSpec generate$default(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator, boolean, boolean, int, java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        com.squareup.kotlinpoet.FileSpec $r2;
        boolean z0, z1;

        r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z1 = 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.FileSpec generate(boolean,boolean)>(z0, z1);

        return $r2;
    }

    private final com.squareup.kotlinpoet.TypeSpec generateConverter(boolean, boolean)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator r0;
        boolean z0, z1;
        java.lang.String[] r1;
        com.squareup.kotlinpoet.ClassName $r2;
        java.lang.String $r3;
        com.squareup.kotlinpoet.TypeSpec$Companion $r4;
        com.squareup.kotlinpoet.TypeSpec$Builder $r5;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1 $r6;
        kotlin.jvm.functions.Function1 $r7;
        com.squareup.kotlinpoet.TypeSpec $r8;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r4 = <com.squareup.kotlinpoet.TypeSpec: com.squareup.kotlinpoet.TypeSpec$Companion Companion>;

        $r2 = new com.squareup.kotlinpoet.ClassName;

        $r3 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: java.lang.String basePackageName>;

        r1 = newarray (java.lang.String)[1];

        r1[0] = "PrivacySandboxThrowableParcelConverter";

        specialinvoke $r2.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>($r3, r1);

        $r5 = virtualinvoke $r4.<com.squareup.kotlinpoet.TypeSpec$Companion: com.squareup.kotlinpoet.TypeSpec$Builder objectBuilder(com.squareup.kotlinpoet.ClassName)>($r2);

        $r6 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1;

        specialinvoke $r6.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: void <init>(boolean,androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator,boolean)>(z0, r0, z1);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r8 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.TypeSpec build(com.squareup.kotlinpoet.TypeSpec$Builder,kotlin.jvm.functions.Function1)>($r5, $r7);

        return $r8;
    }

    private final com.squareup.kotlinpoet.FunSpec generateToThrowableParcel()
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator r0;
        com.squareup.kotlinpoet.MemberName $r1;
        com.squareup.kotlinpoet.FunSpec$Companion $r2;
        java.lang.String $r3;
        com.squareup.kotlinpoet.FunSpec$Builder $r4;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        com.squareup.kotlinpoet.FunSpec $r7;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r2 = <com.squareup.kotlinpoet.FunSpec: com.squareup.kotlinpoet.FunSpec$Companion Companion>;

        $r1 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName toThrowableParcelNameSpec>;

        $r3 = virtualinvoke $r1.<com.squareup.kotlinpoet.MemberName: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r2.<com.squareup.kotlinpoet.FunSpec$Companion: com.squareup.kotlinpoet.FunSpec$Builder builder(java.lang.String)>($r3);

        $r5 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1;

        specialinvoke $r5.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1: void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>(r0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.FunSpec build(com.squareup.kotlinpoet.FunSpec$Builder,kotlin.jvm.functions.Function1)>($r4, $r6);

        return $r7;
    }

    private final com.squareup.kotlinpoet.FunSpec generateFromThrowableParcel()
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator r0;
        com.squareup.kotlinpoet.MemberName $r1;
        com.squareup.kotlinpoet.FunSpec$Companion $r2;
        java.lang.String $r3;
        com.squareup.kotlinpoet.FunSpec$Builder $r4;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        com.squareup.kotlinpoet.FunSpec $r7;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r2 = <com.squareup.kotlinpoet.FunSpec: com.squareup.kotlinpoet.FunSpec$Companion Companion>;

        $r1 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName fromThrowableParcelNameSpec>;

        $r3 = virtualinvoke $r1.<com.squareup.kotlinpoet.MemberName: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r2.<com.squareup.kotlinpoet.FunSpec$Companion: com.squareup.kotlinpoet.FunSpec$Builder builder(java.lang.String)>($r3);

        $r5 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1;

        specialinvoke $r5.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1: void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>(r0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: com.squareup.kotlinpoet.FunSpec build(com.squareup.kotlinpoet.FunSpec$Builder,kotlin.jvm.functions.Function1)>($r4, $r6);

        return $r7;
    }

    public static final com.squareup.kotlinpoet.TypeSpec access$generateConverter(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator, boolean, boolean)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        boolean z0, z1;
        com.squareup.kotlinpoet.TypeSpec $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = specialinvoke $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.TypeSpec generateConverter(boolean,boolean)>(z0, z1);

        return $r1;
    }

    public static final com.squareup.kotlinpoet.FunSpec access$generateToThrowableParcel(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        com.squareup.kotlinpoet.FunSpec $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r1 = specialinvoke $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.FunSpec generateToThrowableParcel()>();

        return $r1;
    }

    public static final com.squareup.kotlinpoet.FunSpec access$generateFromThrowableParcel(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        com.squareup.kotlinpoet.FunSpec $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r1 = specialinvoke $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.FunSpec generateFromThrowableParcel()>();

        return $r1;
    }

    public static final com.squareup.kotlinpoet.ClassName access$getThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        com.squareup.kotlinpoet.ClassName $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r1 = $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName throwableParcelNameSpec>;

        return $r1;
    }

    public static final com.squareup.kotlinpoet.MemberName access$getToThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        com.squareup.kotlinpoet.MemberName $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r1 = $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName toThrowableParcelNameSpec>;

        return $r1;
    }

    public static final com.squareup.kotlinpoet.ClassName access$getParcelableStackFrameNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        com.squareup.kotlinpoet.ClassName $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r1 = $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName parcelableStackFrameNameSpec>;

        return $r1;
    }

    public static final com.squareup.kotlinpoet.MemberName access$getFromThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r0;
        com.squareup.kotlinpoet.MemberName $r1;

        $r0 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $r1 = $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName fromThrowableParcelNameSpec>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion $r0;

        $r0 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion;

        specialinvoke $r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion
    private void <init>()
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion r0;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final com.squareup.kotlinpoet.MemberName toThrowableParcelNameSpec(java.lang.String)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion r0;
        java.lang.String r1;
        java.lang.String[] r2;
        com.squareup.kotlinpoet.MemberName $r3;
        com.squareup.kotlinpoet.ClassName $r4;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        $r3 = new com.squareup.kotlinpoet.MemberName;

        $r4 = new com.squareup.kotlinpoet.ClassName;

        r2 = newarray (java.lang.String)[1];

        r2[0] = "PrivacySandboxThrowableParcelConverter";

        specialinvoke $r4.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>(r1, r2);

        specialinvoke $r3.<com.squareup.kotlinpoet.MemberName: void <init>(com.squareup.kotlinpoet.ClassName,java.lang.String)>($r4, "toThrowableParcel");

        return $r3;
    }

    public final com.squareup.kotlinpoet.MemberName fromThrowableParcelNameSpec(java.lang.String)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion r0;
        java.lang.String r1;
        java.lang.String[] r2;
        com.squareup.kotlinpoet.MemberName $r3;
        com.squareup.kotlinpoet.ClassName $r4;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        $r3 = new com.squareup.kotlinpoet.MemberName;

        $r4 = new com.squareup.kotlinpoet.ClassName;

        r2 = newarray (java.lang.String)[1];

        r2[0] = "PrivacySandboxThrowableParcelConverter";

        specialinvoke $r4.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>(r1, r2);

        specialinvoke $r3.<com.squareup.kotlinpoet.MemberName: void <init>(com.squareup.kotlinpoet.ClassName,java.lang.String)>($r4, "fromThrowableParcel");

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$Companion: void <init>()>();

        return;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: boolean $convertToParcel>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: boolean $convertFromParcel>
    void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator, boolean, boolean)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1 r0;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1;

        $r1 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0> = $r1;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: boolean $convertToParcel> = $z0;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: boolean $convertFromParcel> = $z1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.squareup.kotlinpoet.FileSpec$Builder)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1 r0;
        com.squareup.kotlinpoet.FileSpec$Builder $r1;
        boolean $z0, $z1;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r2;
        com.squareup.kotlinpoet.TypeSpec $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1;

        $r1 := @parameter0: com.squareup.kotlinpoet.FileSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$build");

        staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: void addCommonSettings(com.squareup.kotlinpoet.FileSpec$Builder)>($r1);

        $r2 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $z1 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: boolean $convertToParcel>;

        $z0 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: boolean $convertFromParcel>;

        $r3 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.TypeSpec access$generateConverter(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator,boolean,boolean)>($r2, $z1, $z0);

        virtualinvoke $r1.<com.squareup.kotlinpoet.FileSpec$Builder: com.squareup.kotlinpoet.FileSpec$Builder addType(com.squareup.kotlinpoet.TypeSpec)>($r3);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1 r0;
        java.lang.Object r1;
        com.squareup.kotlinpoet.FileSpec$Builder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.squareup.kotlinpoet.FileSpec$Builder) r1;

        virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generate$1: void invoke(com.squareup.kotlinpoet.FileSpec$Builder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: boolean $convertToParcel>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: boolean $convertFromParcel>
    void <init>(boolean, androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator, boolean)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1 r0;
        boolean $z0, $z1;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        $z1 := @parameter2: boolean;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: boolean $convertToParcel> = $z0;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0> = $r1;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: boolean $convertFromParcel> = $z1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.squareup.kotlinpoet.TypeSpec$Builder)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1 r0;
        com.squareup.kotlinpoet.TypeSpec$Builder $r1;
        boolean $z0, $z1;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r2, $r5;
        com.squareup.kotlinpoet.FunSpec $r3, $r6;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1;

        $r1 := @parameter0: com.squareup.kotlinpoet.TypeSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$build");

        $z0 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: boolean $convertToParcel>;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r6 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.FunSpec access$generateToThrowableParcel(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r5);

        virtualinvoke $r1.<com.squareup.kotlinpoet.TypeSpec$Builder: com.squareup.kotlinpoet.TypeSpec$Builder addFunction(com.squareup.kotlinpoet.FunSpec)>($r6);

     label1:
        $z1 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: boolean $convertFromParcel>;

        if $z1 == 0 goto label2;

        $r2 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r3 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.FunSpec access$generateFromThrowableParcel(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r2);

        virtualinvoke $r1.<com.squareup.kotlinpoet.TypeSpec$Builder: com.squareup.kotlinpoet.TypeSpec$Builder addFunction(com.squareup.kotlinpoet.FunSpec)>($r3);

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1 r0;
        java.lang.Object r1;
        com.squareup.kotlinpoet.TypeSpec$Builder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.squareup.kotlinpoet.TypeSpec$Builder) r1;

        virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateConverter$1: void invoke(com.squareup.kotlinpoet.TypeSpec$Builder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>
    void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1 r0;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1;

        $r1 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.squareup.kotlinpoet.CodeBlock$Builder)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1 r0;
        com.squareup.kotlinpoet.CodeBlock$Builder $r1;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r13, $r14;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r5, $r10;
        com.squareup.kotlinpoet.MemberName $r6, $r11;
        java.lang.String $r7, $r12, $r15, $r16;
        androidx.privacysandbox.tools.core.generator.SpecNames $r17;
        com.squareup.kotlinpoet.ClassName $r18;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1;

        $r1 := @parameter0: com.squareup.kotlinpoet.CodeBlock$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$addCode");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                    val exceptionClass = throwableParcel.exceptionClass\n                    val errorMessage = throwableParcel.errorMessage\n                    val stackTrace = throwableParcel.stackTrace\n                    val exception = PrivacySandboxException(\n                        \"[$exceptionClass] $errorMessage\",\n                        throwableParcel.cause?.firstOrNull()?.let {\n                            ");

        $r5 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r6 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName access$getFromThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r5);

        $r7 = virtualinvoke $r6.<com.squareup.kotlinpoet.MemberName: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(it)\n                        }\n                    )\n                    for (suppressed in throwableParcel.suppressedExceptions) {\n                        exception.addSuppressed(");

        $r10 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r11 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName access$getFromThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r10);

        $r12 = virtualinvoke $r11.<com.squareup.kotlinpoet.MemberName: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(suppressed))\n                    }\n                    exception.stackTrace =\n                        stackTrace.map {\n                            %T(\n                                it.declaringClass,\n                                it.methodName,\n                                it.fileName,\n                                it.lineNumber\n                            )\n                        }.toTypedArray()\n                    return exception\n                ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r15);

        r2 = newarray (java.lang.Object)[1];

        $r17 = <androidx.privacysandbox.tools.core.generator.SpecNames: androidx.privacysandbox.tools.core.generator.SpecNames INSTANCE>;

        $r18 = virtualinvoke $r17.<androidx.privacysandbox.tools.core.generator.SpecNames: com.squareup.kotlinpoet.ClassName getStackTraceElementClass()>();

        r2[0] = $r18;

        virtualinvoke $r1.<com.squareup.kotlinpoet.CodeBlock$Builder: com.squareup.kotlinpoet.CodeBlock$Builder add(java.lang.String,java.lang.Object[])>($r16, r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1 r0;
        java.lang.Object r1;
        com.squareup.kotlinpoet.CodeBlock$Builder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.squareup.kotlinpoet.CodeBlock$Builder) r1;

        virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1: void invoke(com.squareup.kotlinpoet.CodeBlock$Builder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>
    void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1 r0;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1;

        $r1 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.squareup.kotlinpoet.FunSpec$Builder)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1 r0;
        com.squareup.kotlinpoet.FunSpec$Builder $r1;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r2, $r10;
        com.squareup.kotlinpoet.ClassName $r3;
        com.squareup.kotlinpoet.KModifier[] $r4;
        com.squareup.kotlinpoet.TypeName $r5;
        kotlin.reflect.KClass $r7;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1 $r9;
        kotlin.jvm.functions.Function1 $r11;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1;

        $r1 := @parameter0: com.squareup.kotlinpoet.FunSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$build");

        $r2 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r3 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName access$getThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r2);

        $r5 = (com.squareup.kotlinpoet.TypeName) $r3;

        $r4 = newarray (com.squareup.kotlinpoet.KModifier)[0];

        virtualinvoke $r1.<com.squareup.kotlinpoet.FunSpec$Builder: com.squareup.kotlinpoet.FunSpec$Builder addParameter(java.lang.String,com.squareup.kotlinpoet.TypeName,com.squareup.kotlinpoet.KModifier[])>("throwableParcel", $r5, $r4);

        $r7 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/lang/Throwable;");

        staticinvoke <com.squareup.kotlinpoet.FunSpec$Builder: com.squareup.kotlinpoet.FunSpec$Builder returns$default(com.squareup.kotlinpoet.FunSpec$Builder,kotlin.reflect.KClass,com.squareup.kotlinpoet.CodeBlock,int,java.lang.Object)>($r1, $r7, null, 2, null);

        $r9 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1;

        $r10 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        specialinvoke $r9.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1$1: void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r10);

        $r11 = (kotlin.jvm.functions.Function1) $r9;

        staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: void addCode(com.squareup.kotlinpoet.FunSpec$Builder,kotlin.jvm.functions.Function1)>($r1, $r11);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1 r0;
        java.lang.Object r1;
        com.squareup.kotlinpoet.FunSpec$Builder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.squareup.kotlinpoet.FunSpec$Builder) r1;

        virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateFromThrowableParcel$1: void invoke(com.squareup.kotlinpoet.FunSpec$Builder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>
    void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1 r0;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1;

        $r1 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.squareup.kotlinpoet.CodeBlock$Builder)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1 r0;
        com.squareup.kotlinpoet.CodeBlock$Builder $r1;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r13, $r14;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r5, $r10, $r17, $r19;
        com.squareup.kotlinpoet.MemberName $r6, $r11;
        java.lang.String $r7, $r12, $r15, $r16;
        com.squareup.kotlinpoet.ClassName $r18, $r20;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1;

        $r1 := @parameter0: com.squareup.kotlinpoet.CodeBlock$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$addCode");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                    val parcel = %T()\n                    parcel.exceptionClass = throwable::class.qualifiedName\n                    parcel.errorMessage = throwable.message\n                    parcel.stackTrace = throwable.stackTrace.map {\n                        val stackFrame = %T()\n                        stackFrame.declaringClass = it.className\n                        stackFrame.methodName = it.methodName\n                        stackFrame.fileName = it.fileName\n                        stackFrame.lineNumber = it.lineNumber\n                        stackFrame\n                    }.toTypedArray()\n                    throwable.cause?.let {\n                        parcel.cause = arrayOf(");

        $r5 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r6 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName access$getToThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r5);

        $r7 = virtualinvoke $r6.<com.squareup.kotlinpoet.MemberName: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(it))\n                    }\n                    parcel.suppressedExceptions =\n                        throwable.suppressedExceptions.map {\n                            ");

        $r10 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r11 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.MemberName access$getToThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r10);

        $r12 = virtualinvoke $r11.<com.squareup.kotlinpoet.MemberName: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(it)\n                        }.toTypedArray()\n                    return parcel\n                ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r15);

        r2 = newarray (java.lang.Object)[2];

        $r17 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r18 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName access$getThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r17);

        r2[0] = $r18;

        $r19 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r20 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName access$getParcelableStackFrameNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r19);

        r2[1] = $r20;

        virtualinvoke $r1.<com.squareup.kotlinpoet.CodeBlock$Builder: com.squareup.kotlinpoet.CodeBlock$Builder add(java.lang.String,java.lang.Object[])>($r16, r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1 r0;
        java.lang.Object r1;
        com.squareup.kotlinpoet.CodeBlock$Builder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.squareup.kotlinpoet.CodeBlock$Builder) r1;

        virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: void invoke(com.squareup.kotlinpoet.CodeBlock$Builder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1
<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>
    void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1 r0;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r1;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1;

        $r1 := @parameter0: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator;

        r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.squareup.kotlinpoet.FunSpec$Builder)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1 r0;
        com.squareup.kotlinpoet.FunSpec$Builder $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.kotlinpoet.KModifier[] $r3;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator $r5, $r10;
        com.squareup.kotlinpoet.ClassName $r6;
        com.squareup.kotlinpoet.TypeName $r7;
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1 $r9;
        kotlin.jvm.functions.Function1 $r11;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1;

        $r1 := @parameter0: com.squareup.kotlinpoet.FunSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$build");

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/lang/Throwable;");

        $r3 = newarray (com.squareup.kotlinpoet.KModifier)[0];

        virtualinvoke $r1.<com.squareup.kotlinpoet.FunSpec$Builder: com.squareup.kotlinpoet.FunSpec$Builder addParameter(java.lang.String,kotlin.reflect.KClass,com.squareup.kotlinpoet.KModifier[])>("throwable", $r2, $r3);

        $r5 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        $r6 = staticinvoke <androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator: com.squareup.kotlinpoet.ClassName access$getThrowableParcelNameSpec$p(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r5);

        $r7 = (com.squareup.kotlinpoet.TypeName) $r6;

        staticinvoke <com.squareup.kotlinpoet.FunSpec$Builder: com.squareup.kotlinpoet.FunSpec$Builder returns$default(com.squareup.kotlinpoet.FunSpec$Builder,com.squareup.kotlinpoet.TypeName,com.squareup.kotlinpoet.CodeBlock,int,java.lang.Object)>($r1, $r7, null, 2, null);

        $r9 = new androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1;

        $r10 = r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator this$0>;

        specialinvoke $r9.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1$1: void <init>(androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator)>($r10);

        $r11 = (kotlin.jvm.functions.Function1) $r9;

        staticinvoke <androidx.privacysandbox.tools.core.generator.KotlinPoetSpecsKt: void addCode(com.squareup.kotlinpoet.FunSpec$Builder,kotlin.jvm.functions.Function1)>($r1, $r11);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1 r0;
        java.lang.Object r1;
        com.squareup.kotlinpoet.FunSpec$Builder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.squareup.kotlinpoet.FunSpec$Builder) r1;

        virtualinvoke r0.<androidx.privacysandbox.tools.core.generator.ThrowableParcelConverterFileGenerator$generateToThrowableParcel$1: void invoke(com.squareup.kotlinpoet.FunSpec$Builder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

