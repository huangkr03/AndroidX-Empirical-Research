androidx.wear.tiles.protobuf.UnsafeByteOperations
    private void <init>()
    {
        androidx.wear.tiles.protobuf.UnsafeByteOperations r0;

        r0 := @this: androidx.wear.tiles.protobuf.UnsafeByteOperations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.wear.tiles.protobuf.ByteString unsafeWrap(byte[])
    {
        byte[] r0;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString wrap(byte[])>(r0);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString unsafeWrap(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString wrap(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString unsafeWrap(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString wrap(java.nio.ByteBuffer)>(r0);

        return $r1;
    }

    public static void unsafeWriteTo(androidx.wear.tiles.protobuf.ByteString, androidx.wear.tiles.protobuf.ByteOutput) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        androidx.wear.tiles.protobuf.ByteOutput r1;

        r0 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter1: androidx.wear.tiles.protobuf.ByteOutput;

        virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: void writeTo(androidx.wear.tiles.protobuf.ByteOutput)>(r1);

        return;
    }

