androidx.fragment.app.FragmentController
<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>
    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    {
        androidx.fragment.app.FragmentHostCallback r0, $r3;
        androidx.fragment.app.FragmentController $r1;
        java.lang.Object $r2;

        r0 := @parameter0: androidx.fragment.app.FragmentHostCallback;

        $r1 = new androidx.fragment.app.FragmentController;

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "callbacks == null");

        $r3 = (androidx.fragment.app.FragmentHostCallback) $r2;

        specialinvoke $r1.<androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)>($r3);

        return $r1;
    }

    private void <init>(androidx.fragment.app.FragmentHostCallback)
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback r1;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: androidx.fragment.app.FragmentHostCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost> = r1;

        return;
    }

    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        return $r2;
    }

    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    {
        androidx.fragment.app.FragmentController r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Loaders are managed separately from FragmentController, use LoaderManager.getInstance() to obtain a LoaderManager.");

        throw $r1;
    }

    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentController r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;
        androidx.fragment.app.Fragment $r4;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>(r1);

        return $r4;
    }

    public int getActiveFragmentsCount()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $i0 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: int getActiveFragmentCount()>();

        return $i0;
    }

    public java.util.List getActiveFragments(java.util.List)
    {
        androidx.fragment.app.FragmentController r0;
        java.util.List r1, $r4;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: java.util.List getActiveFragments()>();

        return $r4;
    }

    public void attachHost(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentHostCallback $r2, $r3, $r4;
        androidx.fragment.app.FragmentManager $r5;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r5 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r4 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>($r4, $r3, r1);

        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentController r0;
        android.view.View r1, $r8;
        java.lang.String r2;
        android.content.Context r3;
        android.util.AttributeSet r4;
        androidx.fragment.app.FragmentHostCallback $r5;
        androidx.fragment.app.FragmentManager $r6;
        android.view.LayoutInflater$Factory2 $r7;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r5 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = $r5.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()>();

        $r8 = interfaceinvoke $r7.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        return $r8;
    }

    public void noteStateNotSaved()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void noteStateNotSaved()>();

        return;
    }

    public android.os.Parcelable saveAllState()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;
        android.os.Parcelable $r3;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()>();

        return $r3;
    }

    public void restoreAllState(android.os.Parcelable, java.util.List)
    {
        androidx.fragment.app.FragmentController r0;
        android.os.Parcelable r1;
        java.util.List r2;
        androidx.fragment.app.FragmentHostCallback $r3;
        androidx.fragment.app.FragmentManagerNonConfig $r4;
        androidx.fragment.app.FragmentManager $r5;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.os.Parcelable;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r5 = $r3.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r4 = new androidx.fragment.app.FragmentManagerNonConfig;

        specialinvoke $r4.<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.Collection,java.util.Map,java.util.Map)>(r2, null, null);

        virtualinvoke $r5.<androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>(r1, $r4);

        return;
    }

    public void restoreAllState(android.os.Parcelable, androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentController r0;
        android.os.Parcelable r1;
        androidx.fragment.app.FragmentManagerNonConfig r2;
        androidx.fragment.app.FragmentHostCallback $r3;
        androidx.fragment.app.FragmentManager $r4;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.os.Parcelable;

        r2 := @parameter1: androidx.fragment.app.FragmentManagerNonConfig;

        $r3 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r4 = $r3.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>(r1, r2);

        return;
    }

    public void restoreSaveState(android.os.Parcelable)
    {
        androidx.fragment.app.FragmentController r0;
        android.os.Parcelable r1;
        androidx.fragment.app.FragmentHostCallback $r2, $r3;
        boolean $z0;
        androidx.fragment.app.FragmentManager $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = $r2 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Your FragmentHostCallback must implement ViewModelStoreOwner to call restoreSaveState(). Call restoreAllState()  if you\'re still using retainNestedNonConfig().");

        throw $r5;

     label1:
        $r3 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r4 = $r3.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>(r1);

        return;
    }

    public java.util.List retainNonConfig()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentManagerNonConfig r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Collection $r4, $r6;
        java.util.ArrayList $r5, $r7;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        r1 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>();

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()>();

        if $r4 == null goto label1;

        $r5 = new java.util.ArrayList;

        $r7 = $r5;

        $r6 = virtualinvoke r1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;
        androidx.fragment.app.FragmentManagerNonConfig $r3;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>();

        return $r3;
    }

    public void dispatchCreate()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchCreate()>();

        return;
    }

    public void dispatchActivityCreated()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchActivityCreated()>();

        return;
    }

    public void dispatchStart()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchStart()>();

        return;
    }

    public void dispatchResume()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchResume()>();

        return;
    }

    public void dispatchPause()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchPause()>();

        return;
    }

    public void dispatchStop()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchStop()>();

        return;
    }

    public void dispatchReallyStop()
    {
        androidx.fragment.app.FragmentController r0;

        r0 := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void dispatchDestroyView()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchDestroyView()>();

        return;
    }

    public void dispatchDestroy()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchDestroy()>();

        return;
    }

    public void dispatchMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.FragmentController r0;
        boolean z0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean,boolean)>(z0, 1);

        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.FragmentController r0;
        boolean z0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean,boolean)>(z0, 1);

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentController r0;
        android.content.res.Configuration r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration,boolean)>(r1, 1);

        return;
    }

    public void dispatchLowMemory()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchLowMemory(boolean)>(1);

        return;
    }

    public boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentController r0;
        android.view.Menu r1;
        android.view.MenuInflater r2;
        androidx.fragment.app.FragmentHostCallback $r3;
        androidx.fragment.app.FragmentManager $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: android.view.MenuInflater;

        $r3 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r4 = $r3.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(r1, r2);

        return $z0;
    }

    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentController r0;
        android.view.Menu r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $z0 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: boolean dispatchPrepareOptionsMenu(android.view.Menu)>(r1);

        return $z0;
    }

    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentController r0;
        android.view.MenuItem r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $z0 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: boolean dispatchOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z0;
    }

    public boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentController r0;
        android.view.MenuItem r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $z0 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: boolean dispatchContextItemSelected(android.view.MenuItem)>(r1);

        return $z0;
    }

    public void dispatchOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentController r0;
        android.view.Menu r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManager $r3;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = $r2.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentManager: void dispatchOptionsMenuClosed(android.view.Menu)>(r1);

        return;
    }

    public boolean execPendingActions()
    {
        androidx.fragment.app.FragmentController r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.FragmentManager $r2;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentController;

        $r1 = r0.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost>;

        $r2 = $r1.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager>;

        $z0 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        return $z0;
    }

    public void doLoaderStart()
    {
        androidx.fragment.app.FragmentController r0;

        r0 := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void doLoaderStop(boolean)
    {
        androidx.fragment.app.FragmentController r0;
        boolean z0;

        r0 := @this: androidx.fragment.app.FragmentController;

        z0 := @parameter0: boolean;

        return;
    }

    public void doLoaderRetain()
    {
        androidx.fragment.app.FragmentController r0;

        r0 := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void doLoaderDestroy()
    {
        androidx.fragment.app.FragmentController r0;

        r0 := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public void reportLoaderStart()
    {
        androidx.fragment.app.FragmentController r0;

        r0 := @this: androidx.fragment.app.FragmentController;

        return;
    }

    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    {
        androidx.fragment.app.FragmentController r0;

        r0 := @this: androidx.fragment.app.FragmentController;

        return null;
    }

    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    {
        androidx.fragment.app.FragmentController r0;
        androidx.collection.SimpleArrayMap r1;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: androidx.collection.SimpleArrayMap;

        return;
    }

    public void dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentController r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;

        r0 := @this: androidx.fragment.app.FragmentController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        return;
    }

