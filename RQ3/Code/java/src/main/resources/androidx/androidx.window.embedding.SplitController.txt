androidx.window.embedding.SplitController
<androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion>
<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>
<androidx.window.embedding.SplitController: java.util.Set staticSplitRules>
<androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance>
<androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock>
<androidx.window.embedding.SplitController: boolean sDebug>
    private void <init>()
    {
        androidx.window.embedding.SplitController r0;
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion $r1;
        androidx.window.embedding.ExtensionEmbeddingBackend $r2;
        androidx.window.embedding.EmbeddingBackend $r3;
        java.util.Set $r4;

        r0 := @this: androidx.window.embedding.SplitController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()>();

        $r3 = (androidx.window.embedding.EmbeddingBackend) $r2;

        r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend> = $r3;

        $r4 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        r0.<androidx.window.embedding.SplitController: java.util.Set staticSplitRules> = $r4;

        return;
    }

    public final java.util.Set getSplitRules()
    {
        androidx.window.embedding.SplitController r0;
        androidx.window.embedding.EmbeddingBackend $r1;
        java.util.Set $r2, $r4;
        java.lang.Iterable $r3;

        r0 := @this: androidx.window.embedding.SplitController;

        $r1 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        $r2 = interfaceinvoke $r1.<androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r3);

        return $r4;
    }

    public final void registerRule(androidx.window.embedding.EmbeddingRule)
    {
        androidx.window.embedding.SplitController r0;
        androidx.window.embedding.EmbeddingRule r1;
        androidx.window.embedding.EmbeddingBackend $r2;

        r0 := @this: androidx.window.embedding.SplitController;

        r1 := @parameter0: androidx.window.embedding.EmbeddingRule;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rule");

        $r2 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        interfaceinvoke $r2.<androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)>(r1);

        return;
    }

    public final void unregisterRule(androidx.window.embedding.EmbeddingRule)
    {
        androidx.window.embedding.SplitController r0;
        androidx.window.embedding.EmbeddingRule r1;
        androidx.window.embedding.EmbeddingBackend $r2;

        r0 := @this: androidx.window.embedding.SplitController;

        r1 := @parameter0: androidx.window.embedding.EmbeddingRule;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rule");

        $r2 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        interfaceinvoke $r2.<androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)>(r1);

        return;
    }

    public final void clearRegisteredRules()
    {
        androidx.window.embedding.SplitController r0;
        java.util.Set $r1;
        androidx.window.embedding.EmbeddingBackend $r2;

        r0 := @this: androidx.window.embedding.SplitController;

        $r2 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        $r1 = r0.<androidx.window.embedding.SplitController: java.util.Set staticSplitRules>;

        interfaceinvoke $r2.<androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)>($r1);

        return;
    }

    public final void addSplitListener(android.app.Activity, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.window.embedding.SplitController r0;
        android.app.Activity r1;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;
        androidx.window.embedding.EmbeddingBackend $r4;

        r0 := @this: androidx.window.embedding.SplitController;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "consumer");

        $r4 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        interfaceinvoke $r4.<androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r1, r2, r3);

        return;
    }

    public final void removeSplitListener(androidx.core.util.Consumer)
    {
        androidx.window.embedding.SplitController r0;
        androidx.core.util.Consumer r1;
        androidx.window.embedding.EmbeddingBackend $r2;

        r0 := @this: androidx.window.embedding.SplitController;

        r1 := @parameter0: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "consumer");

        $r2 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        interfaceinvoke $r2.<androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)>(r1);

        return;
    }

    public final boolean isSplitSupported()
    {
        androidx.window.embedding.SplitController r0;
        androidx.window.embedding.EmbeddingBackend $r1;
        boolean $z0;

        r0 := @this: androidx.window.embedding.SplitController;

        $r1 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        $z0 = interfaceinvoke $r1.<androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()>();

        return $z0;
    }

    private final void setStaticSplitRules(java.util.Set)
    {
        androidx.window.embedding.SplitController r0;
        java.util.Set r1;
        androidx.window.embedding.EmbeddingBackend $r2;

        r0 := @this: androidx.window.embedding.SplitController;

        r1 := @parameter0: java.util.Set;

        r0.<androidx.window.embedding.SplitController: java.util.Set staticSplitRules> = r1;

        $r2 = r0.<androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend>;

        interfaceinvoke $r2.<androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)>(r1);

        return;
    }

    public static final androidx.window.embedding.SplitController getInstance()
    {
        androidx.window.embedding.SplitController$Companion $r0;
        androidx.window.embedding.SplitController $r1;

        $r0 = <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()>();

        return $r1;
    }

    public static final void initialize(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        androidx.window.embedding.SplitController$Companion $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion>;

        virtualinvoke $r1.<androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)>(r0, i0);

        return;
    }

    public static final androidx.window.embedding.SplitController access$getGlobalInstance$cp()
    {
        androidx.window.embedding.SplitController $r0;

        $r0 = <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance>;

        return $r0;
    }

    public static final java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
    {
        java.util.concurrent.locks.ReentrantLock $r0;

        $r0 = <androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock>;

        return $r0;
    }

    public static final void access$setStaticSplitRules(androidx.window.embedding.SplitController, java.util.Set)
    {
        androidx.window.embedding.SplitController $r0;
        java.util.Set r1;

        $r0 := @parameter0: androidx.window.embedding.SplitController;

        r1 := @parameter1: java.util.Set;

        specialinvoke $r0.<androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)>(r1);

        return;
    }

    public static final void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
    {
        androidx.window.embedding.SplitController r0;

        r0 := @parameter0: androidx.window.embedding.SplitController;

        <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance> = r0;

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.embedding.SplitController r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.embedding.SplitController;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.embedding.SplitController: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.window.embedding.SplitController$Companion $r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        $r0 = new androidx.window.embedding.SplitController$Companion;

        specialinvoke $r0.<androidx.window.embedding.SplitController$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion> = $r0;

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        <androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock> = $r1;

        return;
    }

androidx.window.embedding.SplitController$Companion
    private void <init>()
    {
        androidx.window.embedding.SplitController$Companion r0;

        r0 := @this: androidx.window.embedding.SplitController$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.window.embedding.SplitController getInstance()
    {
        androidx.window.embedding.SplitController$Companion r0, $r6;
        java.util.concurrent.locks.Lock r1;
        androidx.window.embedding.SplitController $r2, $r3, $r5, $r7;
        java.util.concurrent.locks.ReentrantLock $r4;
        java.lang.Throwable $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.window.embedding.SplitController$Companion;

        $r2 = staticinvoke <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()>();

        if $r2 != null goto label6;

        $r4 = staticinvoke <androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()>();

        r1 = (java.util.concurrent.locks.Lock) $r4;

        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r5 = staticinvoke <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()>();

        if $r5 != null goto label2;

        $r6 = <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion>;

        $r7 = new androidx.window.embedding.SplitController;

        specialinvoke $r7.<androidx.window.embedding.SplitController: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        staticinvoke <androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)>($r7);

     label2:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r8;

     label6:
        $r3 = staticinvoke <androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void initialize(android.content.Context, int)
    {
        androidx.window.embedding.SplitController$Companion r0;
        android.content.Context r1;
        int i0;
        androidx.window.embedding.SplitRuleParser r2, $r5;
        java.util.Set r3, $r7;
        androidx.window.embedding.SplitController r4;

        r0 := @this: androidx.window.embedding.SplitController$Companion;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r5 = new androidx.window.embedding.SplitRuleParser;

        specialinvoke $r5.<androidx.window.embedding.SplitRuleParser: void <init>()>();

        r2 = $r5;

        r3 = virtualinvoke r2.<androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)>(r1, i0);

        r4 = virtualinvoke r0.<androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()>();

        $r7 = r3;

        if r3 != null goto label1;

        $r7 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

     label1:
        staticinvoke <androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)>(r4, $r7);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.embedding.SplitController$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.embedding.SplitController$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.embedding.SplitController$Companion: void <init>()>();

        return;
    }

