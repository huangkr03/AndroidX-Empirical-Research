androidx.compose.foundation.text.selection.TextFieldSelectionManager
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar textToolbar>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.hapticfeedback.HapticFeedback hapticFeedBack>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragBeginPosition>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragTotalDistance>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue oldValue>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.gesture.LongPressDragObserver touchSelectionObserver>
    public void <init>()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.OffsetMap$Companion $r1;
        androidx.compose.ui.text.input.OffsetMap $r2;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        androidx.compose.ui.text.input.TextFieldValue $r5, $r8;
        androidx.compose.ui.geometry.Offset$Companion $r6, $r7;
        long $l0, $l1;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 $r9;
        androidx.compose.ui.gesture.LongPressDragObserver $r10;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.compose.ui.text.input.OffsetMap: androidx.compose.ui.text.input.OffsetMap$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.input.OffsetMap$Companion: androidx.compose.ui.text.input.OffsetMap getIdentityOffsetMap()>();

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap> = $r2;

        $r3 = <androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange> = $r4;

        $r5 = new androidx.compose.ui.text.input.TextFieldValue;

        specialinvoke $r5.<androidx.compose.ui.text.input.TextFieldValue: void <init>(java.lang.String,long,androidx.compose.ui.text.TextRange,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 0L, null, 7, null);

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value> = $r5;

        $r6 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l0 = virtualinvoke $r6.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragBeginPosition> = $l0;

        $r7 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l1 = virtualinvoke $r7.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragTotalDistance> = $l1;

        $r8 = new androidx.compose.ui.text.input.TextFieldValue;

        specialinvoke $r8.<androidx.compose.ui.text.input.TextFieldValue: void <init>(java.lang.String,long,androidx.compose.ui.text.TextRange,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 0L, null, 7, null);

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue oldValue> = $r8;

        $r9 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        specialinvoke $r9.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r0);

        $r10 = (androidx.compose.ui.gesture.LongPressDragObserver) $r9;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.gesture.LongPressDragObserver touchSelectionObserver> = $r10;

        return;
    }

    public final androidx.compose.ui.text.input.OffsetMap getOffsetMap$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.OffsetMap $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        return $r1;
    }

    public final void setOffsetMap$foundation_text_release(androidx.compose.ui.text.input.OffsetMap)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.OffsetMap r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.ui.text.input.OffsetMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnValueChange$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        return $r1;
    }

    public final void setOnValueChange$foundation_text_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange> = r1;

        return;
    }

    public final androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.foundation.text.TextFieldState $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        return $r1;
    }

    public final void setState$foundation_text_release(androidx.compose.foundation.text.TextFieldState)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.foundation.text.TextFieldState r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.foundation.text.TextFieldState;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state> = r1;

        return;
    }

    public final androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.TextFieldValue $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        return $r1;
    }

    public final void setValue$foundation_text_release(androidx.compose.ui.text.input.TextFieldValue)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.TextFieldValue r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value> = r1;

        return;
    }

    public final androidx.compose.ui.platform.ClipboardManager getClipboardManager$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.platform.ClipboardManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager>;

        return $r1;
    }

    public final void setClipboardManager$foundation_text_release(androidx.compose.ui.platform.ClipboardManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.platform.ClipboardManager r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.ui.platform.ClipboardManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager> = r1;

        return;
    }

    public final androidx.compose.ui.platform.TextToolbar getTextToolbar()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.platform.TextToolbar $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar textToolbar>;

        return $r1;
    }

    public final void setTextToolbar(androidx.compose.ui.platform.TextToolbar)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.platform.TextToolbar r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.ui.platform.TextToolbar;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar textToolbar> = r1;

        return;
    }

    public final androidx.compose.ui.hapticfeedback.HapticFeedback getHapticFeedBack()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.hapticfeedback.HapticFeedback $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.hapticfeedback.HapticFeedback hapticFeedBack>;

        return $r1;
    }

    public final void setHapticFeedBack(androidx.compose.ui.hapticfeedback.HapticFeedback)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.hapticfeedback.HapticFeedback r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.ui.hapticfeedback.HapticFeedback;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.hapticfeedback.HapticFeedback hapticFeedBack> = r1;

        return;
    }

    public final androidx.compose.ui.gesture.LongPressDragObserver getTouchSelectionObserver$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.gesture.LongPressDragObserver $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.gesture.LongPressDragObserver touchSelectionObserver>;

        return $r1;
    }

    public final androidx.compose.ui.gesture.DragObserver mouseSelectionObserver$foundation_text_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1 $r2;
        androidx.compose.ui.gesture.DragObserver $r3;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onStart");

        $r2 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1;

        specialinvoke $r2.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: void <init>(kotlin.jvm.functions.Function1,androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r1, r0);

        $r3 = (androidx.compose.ui.gesture.DragObserver) $r2;

        return $r3;
    }

    public final androidx.compose.ui.gesture.DragObserver handleDragObserver$foundation_text_release(boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        boolean z0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1 $r1;
        androidx.compose.ui.gesture.DragObserver $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        z0 := @parameter0: boolean;

        $r1 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1;

        specialinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager,boolean)>(r0, z0);

        $r2 = (androidx.compose.ui.gesture.DragObserver) $r1;

        return $r2;
    }

    public final void enterSelectionMode$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.foundation.text.TextFieldState r1;
        androidx.compose.ui.text.input.TextFieldValue $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue oldValue> = $r2;

        r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r1 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r1.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(1);

     label2:
        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(1);

        return;
    }

    public final void exitSelectionMode$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.foundation.text.TextFieldState r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r1 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r1.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(0);

     label2:
        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(0);

        return;
    }

    public final void deselect$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.TextFieldValue r1, $r2, $r4;
        long $l0, $l1;
        boolean $z0;
        androidx.compose.ui.text.TextRange$Companion $r3;
        kotlin.jvm.functions.Function1 $r5;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l0 = virtualinvoke $r2.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z0 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l0);

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r3 = <androidx.compose.ui.text.TextRange: androidx.compose.ui.text.TextRange$Companion Companion>;

        $l1 = virtualinvoke $r3.<androidx.compose.ui.text.TextRange$Companion: long getZero-d9O1mEE()>();

        r1 = staticinvoke <androidx.compose.ui.text.input.TextFieldValue: androidx.compose.ui.text.input.TextFieldValue copy-Dr2r1M0$default(androidx.compose.ui.text.input.TextFieldValue,java.lang.String,long,androidx.compose.ui.text.TextRange,int,java.lang.Object)>($r4, null, $l1, null, 5, null);

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label1:
        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(0);

        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void hideSelectionToolbar$foundation_text_release()>();

        return;
    }

    public final void copy$foundation_text_release(boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        boolean z0, $z1;
        androidx.compose.ui.text.input.TextFieldValue r1, $r2, $r4, $r6, $r7;
        long $l0, $l1, $l2;
        androidx.compose.ui.text.AnnotatedString $r3;
        java.lang.String $r5, $r8;
        kotlin.jvm.functions.Function1 $r9;
        androidx.compose.ui.platform.ClipboardManager r11;
        int i3;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l0 = virtualinvoke $r2.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z1 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l0);

        if $z1 == 0 goto label1;

        return;

     label1:
        r11 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager>;

        if r11 != null goto label2;

        goto label3;

     label2:
        $r3 = new androidx.compose.ui.text.AnnotatedString;

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r5 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: java.lang.String getSelectedText(androidx.compose.ui.text.input.TextFieldValue)>($r4);

        specialinvoke $r3.<androidx.compose.ui.text.AnnotatedString: void <init>(java.lang.String,java.util.List,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, null, null, 6, null);

        interfaceinvoke r11.<androidx.compose.ui.platform.ClipboardManager: void setText(androidx.compose.ui.text.AnnotatedString)>($r3);

     label3:
        if z0 != 0 goto label4;

        return;

     label4:
        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l1 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l1);

        $r7 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $l2 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>(i3, i3);

        r1 = specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String,long)>($r8, $l2);

        $r9 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(0);

        return;
    }

    public static void copy$default(androidx.compose.foundation.text.selection.TextFieldSelectionManager, boolean, int, java.lang.Object)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        int i0, $i1;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void copy$foundation_text_release(boolean)>(z0);

        return;
    }

    public final void paste$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        java.lang.String r1, $r5, $r6, $r11, $r12, $r18, r20, r21;
        java.lang.StringBuilder $r2, $r7, $r8, $r13;
        androidx.compose.ui.text.input.TextFieldValue $r3, $r4, $r9, $r10, $r14, r22;
        int $i0, $i1, $i3, $i4, i6;
        long $l2, $l5;
        kotlin.jvm.functions.Function1 $r15;
        androidx.compose.ui.platform.ClipboardManager r17;
        androidx.compose.ui.text.AnnotatedString r19;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r17 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager>;

        if r17 != null goto label1;

        $r18 = (java.lang.String) null;

        goto label3;

     label1:
        r19 = interfaceinvoke r17.<androidx.compose.ui.platform.ClipboardManager: androidx.compose.ui.text.AnnotatedString getText()>();

        if r19 != null goto label2;

        $r18 = (java.lang.String) null;

        goto label3;

     label2:
        $r18 = virtualinvoke r19.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

     label3:
        r20 = $r18;

        if r20 != null goto label4;

        return;

     label4:
        r1 = r20;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r5 = virtualinvoke $r3.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: java.lang.String getTextBeforeSelection(androidx.compose.ui.text.input.TextFieldValue,int)>($r4, $i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r9 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r11 = virtualinvoke $r9.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r12 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: java.lang.String getTextAfterSelection(androidx.compose.ui.text.input.TextFieldValue,int)>($r10, $i1);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r21 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l2 = virtualinvoke $r14.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l2);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        i6 = $i3 + $i4;

        $l5 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>(i6, i6);

        r22 = specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String,long)>(r21, $l5);

        $r15 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        interfaceinvoke $r15.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r22);

        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(0);

        return;
    }

    public final void cut$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        int i0, $i2, $i3;
        androidx.compose.ui.text.input.TextFieldValue r1, $r2, $r4, $r6, $r7, $r10, $r11, $r14;
        long $l1, $l4, $l5;
        boolean $z0;
        androidx.compose.ui.text.AnnotatedString $r3;
        java.lang.String $r5, $r8, $r9, $r12, $r13, r18;
        kotlin.jvm.functions.Function1 $r15;
        androidx.compose.ui.platform.ClipboardManager r17;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l1 = virtualinvoke $r2.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z0 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r17 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager>;

        if r17 != null goto label2;

        goto label3;

     label2:
        $r3 = new androidx.compose.ui.text.AnnotatedString;

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r5 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: java.lang.String getSelectedText(androidx.compose.ui.text.input.TextFieldValue)>($r4);

        specialinvoke $r3.<androidx.compose.ui.text.AnnotatedString: void <init>(java.lang.String,java.util.List,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, null, null, 6, null);

        interfaceinvoke r17.<androidx.compose.ui.platform.ClipboardManager: void setText(androidx.compose.ui.text.AnnotatedString)>($r3);

     label3:
        $r7 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r8 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: java.lang.String getTextBeforeSelection(androidx.compose.ui.text.input.TextFieldValue,int)>($r7, $i2);

        $r11 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r10 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r12 = virtualinvoke $r10.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i3 = virtualinvoke $r12.<java.lang.String: int length()>();

        $r13 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: java.lang.String getTextAfterSelection(androidx.compose.ui.text.input.TextFieldValue,int)>($r11, $i3);

        r18 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r9, $r13);

        $r14 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l4 = virtualinvoke $r14.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        i0 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l4);

        $l5 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>(i0, i0);

        r1 = specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String,long)>(r18, $l5);

        $r15 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        interfaceinvoke $r15.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(0);

        return;
    }

    public final void selectAll$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.TextFieldValue r1, $r2, $r4;
        java.lang.String $r3, $r5;
        int $i0;
        long $l1;
        kotlin.jvm.functions.Function1 $r6;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void setSelectionStatus(boolean)>(1);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $l1 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>(0, $i0);

        r1 = specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String,long)>($r3, $l1);

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

    public final long getHandlePosition-F1C5BW0$foundation_text_release(boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        boolean z0, $z1, $z2;
        androidx.compose.ui.text.input.TextFieldValue $r1, $r3, $r4, $r6;
        androidx.compose.ui.text.input.OffsetMap $r2, $r5;
        long $l0, $l3, $l4, $l7, $l8;
        int $i1, $i2, $i5, $i6;
        androidx.compose.foundation.text.TextFieldState r7, r10;
        androidx.compose.ui.text.TextLayoutResult $r8, r9, $r11, r12;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        r7 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r7 != null goto label1;

        $r8 = (androidx.compose.ui.text.TextLayoutResult) null;

        goto label2;

     label1:
        $r8 = virtualinvoke r7.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

     label2:
        r9 = $r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r9);

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l4 = virtualinvoke $r4.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>($l4);

        $i6 = interfaceinvoke $r5.<androidx.compose.ui.text.input.OffsetMap: int originalToTransformed(int)>($i5);

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l7 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z2 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getReversed-impl(long)>($l7);

        $l8 = staticinvoke <androidx.compose.foundation.text.selection.TextSelectionDelegateKt: long getSelectionHandleCoordinates(androidx.compose.ui.text.TextLayoutResult,int,boolean,boolean)>(r9, $i6, 1, $z2);

        goto label6;

     label3:
        r10 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r10 != null goto label4;

        $r11 = (androidx.compose.ui.text.TextLayoutResult) null;

        goto label5;

     label4:
        $r11 = virtualinvoke r10.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

     label5:
        r12 = $r11;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r12);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l0);

        $i2 = interfaceinvoke $r2.<androidx.compose.ui.text.input.OffsetMap: int originalToTransformed(int)>($i1);

        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l3 = virtualinvoke $r3.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z1 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getReversed-impl(long)>($l3);

        $l8 = staticinvoke <androidx.compose.foundation.text.selection.TextSelectionDelegateKt: long getSelectionHandleCoordinates(androidx.compose.ui.text.TextLayoutResult,int,boolean,boolean)>(r12, $i2, 0, $z1);

     label6:
        return $l8;
    }

    public final void showSelectionToolbar$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        kotlin.jvm.functions.Function0 r1, r2, r3, $r15, $r16, $r19, $r20, r21;
        androidx.compose.ui.platform.TextToolbar r4;
        androidx.compose.ui.text.input.TextFieldValue $r5, $r6, $r7, $r8;
        long $l0, $l1, $l2;
        boolean $z0, $z1;
        int $i3, $i4;
        java.lang.String $r9;
        androidx.compose.ui.geometry.Rect $r10;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1 $r11;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1 $r12;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1 $r13;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1 $r14;
        androidx.compose.ui.platform.ClipboardManager r17;
        androidx.compose.ui.text.AnnotatedString $r18;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l0 = virtualinvoke $r5.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z0 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l0);

        if $z0 != 0 goto label01;

        $r14 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1;

        specialinvoke $r14.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1: void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r0);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        goto label02;

     label01:
        $r15 = (kotlin.jvm.functions.Function0) null;

     label02:
        r1 = $r15;

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l1 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z1 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l1);

        if $z1 != 0 goto label03;

        $r13 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1;

        specialinvoke $r13.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1: void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r0);

        $r16 = (kotlin.jvm.functions.Function0) $r13;

        goto label04;

     label03:
        $r16 = (kotlin.jvm.functions.Function0) null;

     label04:
        r2 = $r16;

        r17 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.ClipboardManager clipboardManager>;

        if r17 != null goto label05;

        $r18 = (androidx.compose.ui.text.AnnotatedString) null;

        goto label06;

     label05:
        $r18 = interfaceinvoke r17.<androidx.compose.ui.platform.ClipboardManager: androidx.compose.ui.text.AnnotatedString getText()>();

     label06:
        if $r18 == null goto label07;

        $r12 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1;

        specialinvoke $r12.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1: void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r0);

        $r19 = (kotlin.jvm.functions.Function0) $r12;

        goto label08;

     label07:
        $r19 = (kotlin.jvm.functions.Function0) null;

     label08:
        r3 = $r19;

        $r7 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $l2 = virtualinvoke $r7.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getLength-impl(long)>($l2);

        $r8 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r9 = virtualinvoke $r8.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i3 == $i4 goto label09;

        $r11 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1;

        specialinvoke $r11.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1: void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r0);

        $r20 = (kotlin.jvm.functions.Function0) $r11;

        goto label10;

     label09:
        $r20 = (kotlin.jvm.functions.Function0) null;

     label10:
        r21 = $r20;

        r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar textToolbar>;

        if r4 != null goto label11;

        goto label12;

     label11:
        $r10 = specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.geometry.Rect getContentRect()>();

        interfaceinvoke r4.<androidx.compose.ui.platform.TextToolbar: void showMenu(androidx.compose.ui.geometry.Rect,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>($r10, r1, r3, r2, r21);

     label12:
        return;
    }

    public final void hideSelectionToolbar$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.platform.TextToolbarStatus $r1, $r3;
        androidx.compose.ui.platform.TextToolbar r2, r4;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar textToolbar>;

        if r2 != null goto label1;

        $r3 = (androidx.compose.ui.platform.TextToolbarStatus) null;

        goto label2;

     label1:
        $r3 = interfaceinvoke r2.<androidx.compose.ui.platform.TextToolbar: androidx.compose.ui.platform.TextToolbarStatus getStatus()>();

     label2:
        $r1 = <androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus Shown>;

        if $r3 != $r1 goto label4;

        r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar textToolbar>;

        if r4 != null goto label3;

        goto label4;

     label3:
        interfaceinvoke r4.<androidx.compose.ui.platform.TextToolbar: void hide()>();

     label4:
        return;
    }

    public final boolean isTextChanged$foundation_text_release()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.TextFieldValue $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue oldValue>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue value>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private final androidx.compose.ui.geometry.Rect getContentRect()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.foundation.text.TextFieldState r1, r2, r3, r4, r23, r27, r34;
        boolean z0, z1, z3, z4, z7, z8, z9, z12, z13, z15;
        androidx.compose.ui.geometry.Offset r5, $r21, $r24, r26, $r28, r33, $r35, r40;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l8, $l9, $l10, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, $f8, f9, $f10, f11, f12, f13, $f14, f15, f16, $f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, $f27, f28;
        androidx.compose.ui.text.input.TextFieldValue $r6, $r7, $r9, $r10;
        int $i11, $i12, $i13, $i14, $i15, $i16, $i24, $i25, $i26, $i27, $i28, $i29, $i38, i39;
        java.lang.String $r8, $r11;
        androidx.compose.ui.text.TextDelegate $r12;
        androidx.compose.ui.unit.Density $r13;
        androidx.compose.ui.geometry.Rect $r14, $r20, $r31, r32, $r38;
        androidx.compose.ui.geometry.Offset$Companion $r17, $r18;
        androidx.compose.ui.geometry.Rect$Companion $r19;
        androidx.compose.ui.layout.LayoutCoordinates r22, r25, r29, r36;
        androidx.compose.ui.text.TextLayoutResult $r30, $r37;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r1 != null goto label01;

        goto label30;

     label01:
        r2 = r1;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        r4 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r4 != null goto label02;

        $r21 = (androidx.compose.ui.geometry.Offset) null;

        goto label04;

     label02:
        r22 = virtualinvoke r4.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        if r22 != null goto label03;

        $r21 = (androidx.compose.ui.geometry.Offset) null;

        goto label04;

     label03:
        $l6 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long getHandlePosition-F1C5BW0$foundation_text_release(boolean)>(1);

        $l7 = interfaceinvoke r22.<androidx.compose.ui.layout.LayoutCoordinates: long localToRoot-k-4lQ0M(long)>($l6);

        $r21 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l7);

     label04:
        r5 = $r21;

        if r5 != null goto label05;

        $r18 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l36 = virtualinvoke $r18.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        goto label06;

     label05:
        $l36 = virtualinvoke r5.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

     label06:
        l0 = $l36;

        r23 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r23 != null goto label07;

        $r24 = (androidx.compose.ui.geometry.Offset) null;

        goto label09;

     label07:
        r25 = virtualinvoke r23.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        if r25 != null goto label08;

        $r24 = (androidx.compose.ui.geometry.Offset) null;

        goto label09;

     label08:
        $l8 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long getHandlePosition-F1C5BW0$foundation_text_release(boolean)>(0);

        $l9 = interfaceinvoke r25.<androidx.compose.ui.layout.LayoutCoordinates: long localToRoot-k-4lQ0M(long)>($l8);

        $r24 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l9);

     label09:
        r26 = $r24;

        if r26 != null goto label10;

        $r17 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l37 = virtualinvoke $r17.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        goto label11;

     label10:
        $l37 = virtualinvoke r26.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

     label11:
        l1 = $l37;

        r27 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r27 != null goto label12;

        $r28 = (androidx.compose.ui.geometry.Offset) null;

        goto label18;

     label12:
        r29 = virtualinvoke r27.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        if r29 != null goto label13;

        $r28 = (androidx.compose.ui.geometry.Offset) null;

        goto label18;

     label13:
        f7 = 0.0F;

        $r30 = virtualinvoke r3.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if $r30 != null goto label14;

        $r31 = (androidx.compose.ui.geometry.Rect) null;

        goto label15;

     label14:
        $r6 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $l10 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i11 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>($l10);

        $r7 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $r8 = virtualinvoke $r7.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i12 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i38 = $i12 - 1;

        z4 = 0;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i38);

        $i14 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i11, 0, $i13);

        $r31 = virtualinvoke $r30.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.geometry.Rect getCursorRect(int)>($i14);

     label15:
        r32 = $r31;

        if r32 != null goto label16;

        $f8 = 0.0F;

        goto label17;

     label16:
        $f8 = virtualinvoke r32.<androidx.compose.ui.geometry.Rect: float getTop()>();

     label17:
        f9 = $f8;

        z7 = 0;

        $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f7);

        l2 = (long) $i15;

        f0 = f9;

        z8 = 0;

        $i16 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l3 = (long) $i16;

        $l18 = l2 << 32;

        $l17 = l3 & 4294967295L;

        $l19 = $l18 | $l17;

        $l20 = staticinvoke <androidx.compose.ui.geometry.Offset: long constructor-impl(long)>($l19);

        $l21 = interfaceinvoke r29.<androidx.compose.ui.layout.LayoutCoordinates: long localToRoot-k-4lQ0M(long)>($l20);

        $r28 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l21);

     label18:
        r33 = $r28;

        if r33 != null goto label19;

        $f10 = 0.0F;

        goto label20;

     label19:
        $l22 = virtualinvoke r33.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l22);

        $f10 = f11;

     label20:
        f12 = $f10;

        r34 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r34 != null goto label21;

        $r35 = (androidx.compose.ui.geometry.Offset) null;

        goto label27;

     label21:
        r36 = virtualinvoke r34.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        if r36 != null goto label22;

        $r35 = (androidx.compose.ui.geometry.Offset) null;

        goto label27;

     label22:
        f13 = 0.0F;

        $r37 = virtualinvoke r3.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if $r37 != null goto label23;

        $r38 = (androidx.compose.ui.geometry.Rect) null;

        goto label24;

     label23:
        $r9 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $l23 = virtualinvoke $r9.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i24 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l23);

        $r10 = virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $r11 = virtualinvoke $r10.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i25 = virtualinvoke $r11.<java.lang.String: int length()>();

        i39 = $i25 - 1;

        z9 = 0;

        $i26 = staticinvoke <java.lang.Math: int max(int,int)>(0, i39);

        $i27 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i24, 0, $i26);

        $r38 = virtualinvoke $r37.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.geometry.Rect getCursorRect(int)>($i27);

     label24:
        if $r38 != null goto label25;

        $f14 = 0.0F;

        goto label26;

     label25:
        $f14 = virtualinvoke $r38.<androidx.compose.ui.geometry.Rect: float getTop()>();

     label26:
        f15 = f13;

        z12 = 0;

        $i28 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f15);

        l4 = (long) $i28;

        f16 = $f14;

        z3 = 0;

        $i29 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f16);

        l5 = (long) $i29;

        $l31 = l4 << 32;

        $l30 = l5 & 4294967295L;

        $l32 = $l31 | $l30;

        $l33 = staticinvoke <androidx.compose.ui.geometry.Offset: long constructor-impl(long)>($l32);

        $l34 = interfaceinvoke r36.<androidx.compose.ui.layout.LayoutCoordinates: long localToRoot-k-4lQ0M(long)>($l33);

        $r35 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l34);

     label27:
        r40 = $r35;

        if r40 != null goto label28;

        $f17 = 0.0F;

        goto label29;

     label28:
        $l35 = virtualinvoke r40.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        f18 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l35);

        $f17 = f18;

     label29:
        f19 = $f17;

        f20 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        f21 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        z13 = 0;

        f22 = staticinvoke <java.lang.Math: float min(float,float)>(f20, f21);

        f23 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        f24 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        f25 = staticinvoke <java.lang.Math: float max(float,float)>(f23, f24);

        z15 = 0;

        f26 = staticinvoke <java.lang.Math: float min(float,float)>(f12, f19);

        $f27 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>($f27, $f6);

        $f2 = (float) 25;

        $f3 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f2);

        $r12 = virtualinvoke r3.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextDelegate getTextDelegate()>();

        $r13 = virtualinvoke $r12.<androidx.compose.ui.text.TextDelegate: androidx.compose.ui.unit.Density getDensity()>();

        $f4 = interfaceinvoke $r13.<androidx.compose.ui.unit.Density: float getDensity()>();

        $f5 = $f3 * $f4;

        f28 = $f1 + $f5;

        $r14 = new androidx.compose.ui.geometry.Rect;

        specialinvoke $r14.<androidx.compose.ui.geometry.Rect: void <init>(float,float,float,float)>(f22, f26, f25, f28);

        return $r14;

     label30:
        $r19 = <androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect$Companion Companion>;

        $r20 = virtualinvoke $r19.<androidx.compose.ui.geometry.Rect$Companion: androidx.compose.ui.geometry.Rect getZero()>();

        return $r20;
    }

    private final void updateSelection(androidx.compose.ui.text.input.TextFieldValue, int, int, boolean, boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        androidx.compose.ui.text.input.TextFieldValue r1, r16;
        int i0, i1, $i5, $i6, $i8, $i9, $i12, $i13, $i14, $i15;
        boolean z0, z1, $z2, $z3, $z4;
        long l2, l3, $l4, $l7, l16, $l17;
        androidx.compose.ui.text.input.OffsetMap $r2, $r3, $r13, $r14;
        androidx.compose.ui.hapticfeedback.HapticFeedbackType $r4;
        java.lang.String $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.ui.text.TextLayoutResult $r8, $r11;
        androidx.compose.foundation.text.TextFieldState r9;
        androidx.compose.ui.text.TextRange $r12;
        androidx.compose.ui.hapticfeedback.HapticFeedback r15;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        $l4 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>($l4);

        $i6 = interfaceinvoke $r2.<androidx.compose.ui.text.input.OffsetMap: int originalToTransformed(int)>($i5);

        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        $l7 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i8 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l7);

        $i9 = interfaceinvoke $r3.<androidx.compose.ui.text.input.OffsetMap: int originalToTransformed(int)>($i8);

        l2 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>($i6, $i9);

        r9 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r9 != null goto label1;

        $r8 = (androidx.compose.ui.text.TextLayoutResult) null;

        $r11 = $r8;

        goto label2;

     label1:
        $r11 = virtualinvoke r9.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

     label2:
        $z2 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>(l2);

        if $z2 == 0 goto label3;

        $r12 = (androidx.compose.ui.text.TextRange) null;

        goto label4;

     label3:
        $r12 = staticinvoke <androidx.compose.ui.text.TextRange: androidx.compose.ui.text.TextRange box-impl(long)>(l2);

     label4:
        $z3 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getReversed-impl(long)>(l2);

        l3 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionDelegateKt: long getTextFieldSelection-sKkqLdU(androidx.compose.ui.text.TextLayoutResult,int,int,androidx.compose.ui.text.TextRange,boolean,boolean,boolean)>($r11, i0, i1, $r12, $z3, z0, z1);

        $r13 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        $i12 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l3);

        $i13 = interfaceinvoke $r13.<androidx.compose.ui.text.input.OffsetMap: int transformedToOriginal(int)>($i12);

        $r14 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap offsetMap>;

        $i14 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l3);

        $i15 = interfaceinvoke $r14.<androidx.compose.ui.text.input.OffsetMap: int transformedToOriginal(int)>($i14);

        l16 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>($i13, $i15);

        $l17 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z4 = staticinvoke <androidx.compose.ui.text.TextRange: boolean equals-impl0(long,long)>(l16, $l17);

        if $z4 == 0 goto label5;

        return;

     label5:
        r15 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.hapticfeedback.HapticFeedback hapticFeedBack>;

        if r15 != null goto label6;

        goto label7;

     label6:
        $r4 = <androidx.compose.ui.hapticfeedback.HapticFeedbackType: androidx.compose.ui.hapticfeedback.HapticFeedbackType TextHandleMove>;

        interfaceinvoke r15.<androidx.compose.ui.hapticfeedback.HapticFeedback: void performHapticFeedback(androidx.compose.ui.hapticfeedback.HapticFeedbackType)>($r4);

     label7:
        $r5 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        r16 = specialinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String,long)>($r5, l16);

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 onValueChange>;

        interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r16);

        return;
    }

    private final void setSelectionStatus(boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        boolean z0, z1, z2;
        androidx.compose.foundation.text.TextFieldState r1, r2, r3;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        z0 := @parameter0: boolean;

        r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r1 != null goto label1;

        goto label2;

     label1:
        r2 = r1;

        z1 = 0;

        z2 = 0;

        r3 = r2;

        virtualinvoke r3.<androidx.compose.foundation.text.TextFieldState: void setSelectionIsOn(boolean)>(z0);

     label2:
        return;
    }

    private final androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String, long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        java.lang.String r1;
        long l0, $l2;
        androidx.compose.ui.text.input.TextFieldValue $r2;
        int $i1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = new androidx.compose.ui.text.input.TextFieldValue;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $l2 = staticinvoke <androidx.compose.ui.text.TextRangeKt: long constrain-OjMNsf4(long,int,int)>(l0, 0, $i1);

        specialinvoke $r2.<androidx.compose.ui.text.input.TextFieldValue: void <init>(java.lang.String,long,androidx.compose.ui.text.TextRange,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, $l2, null, 4, null);

        return $r2;
    }

    private final boolean isPositionOnText-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r0;
        long l0;
        androidx.compose.foundation.text.TextFieldState r1;
        androidx.compose.ui.text.TextLayoutResult r2, r3, r4;
        boolean z0, z1;
        int i1;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b2, $b3;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        l0 := @parameter0: long;

        r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState state>;

        if r1 != null goto label1;

        goto label5;

     label1:
        r2 = virtualinvoke r1.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r2 != null goto label2;

        goto label5;

     label2:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        i1 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getLineForVerticalPosition(float)>($f0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f2 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: float getLineLeft(int)>(i1);

        $b2 = $f1 cmpg $f2;

        if $b2 < 0 goto label3;

        $f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f4 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: float getLineRight(int)>(i1);

        $b3 = $f3 cmpl $f4;

        if $b3 <= 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    public static final void access$setDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager, long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        long l0;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        l0 := @parameter1: long;

        $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragBeginPosition> = l0;

        return;
    }

    public static final void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager, long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        long l0;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        l0 := @parameter1: long;

        $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragTotalDistance> = l0;

        return;
    }

    public static final long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        long $l0;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $l0 = $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragTotalDistance>;

        return $l0;
    }

    public static final long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        long $l0;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $l0 = $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long dragBeginPosition>;

        return $l0;
    }

    public static final void access$updateSelection(androidx.compose.foundation.text.selection.TextFieldSelectionManager, androidx.compose.ui.text.input.TextFieldValue, int, int, boolean, boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        androidx.compose.ui.text.input.TextFieldValue r1;
        int i0, i1;
        boolean z0, z1;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter1: androidx.compose.ui.text.input.TextFieldValue;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        specialinvoke $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void updateSelection(androidx.compose.ui.text.input.TextFieldValue,int,int,boolean,boolean)>(r1, i0, i1, z0, z1);

        return;
    }

    public static final boolean access$isPositionOnText-k-4lQ0M(androidx.compose.foundation.text.selection.TextFieldSelectionManager, long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        long l0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        l0 := @parameter1: long;

        $z0 = specialinvoke $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: boolean isPositionOnText-k-4lQ0M(long)>(l0);

        return $z0;
    }

    public static final androidx.compose.ui.text.input.TextFieldValue access$createTextFieldValue-rJy5ZHU(androidx.compose.foundation.text.selection.TextFieldSelectionManager, java.lang.String, long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r0;
        java.lang.String r1;
        long l0;
        androidx.compose.ui.text.input.TextFieldValue $r2;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = specialinvoke $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue createTextFieldValue-rJy5ZHU(java.lang.String,long)>(r1, l0);

        return $r2;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDown-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;
        long l0, $l1, $l2;
        androidx.compose.foundation.text.Handle $r1;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r2, $r3, $r4;
        androidx.compose.ui.geometry.Offset $r5;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r1 = <androidx.compose.foundation.text.Handle: androidx.compose.foundation.text.Handle Cursor>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDraggingHandle(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.foundation.text.Handle)>($r2, $r1);

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $l1 = virtualinvoke $r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long getHandlePosition-tuRUvjQ$foundation_release(boolean)>(1);

        $l2 = staticinvoke <androidx.compose.foundation.text.selection.SelectionHandlesKt: long getAdjustedCoordinates-k-4lQ0M(long)>($l1);

        $r5 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l2);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setCurrentDragPosition-_kEHs6E(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.geometry.Offset)>($r4, $r5);

        return;
    }

    public void onUp()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDraggingHandle(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.foundation.text.Handle)>($r1, null);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setCurrentDragPosition-_kEHs6E(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.geometry.Offset)>($r2, null);

        return;
    }

    public void onStart-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;
        long l0, $l1, $l2, $l3, $l4;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2, $r3, $r4, $r7, $r9;
        androidx.compose.ui.geometry.Offset $r5;
        androidx.compose.ui.geometry.Offset$Companion $r6;
        androidx.compose.foundation.text.Handle $r8;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $l1 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long getHandlePosition-tuRUvjQ$foundation_release(boolean)>(1);

        $l2 = staticinvoke <androidx.compose.foundation.text.selection.SelectionHandlesKt: long getAdjustedCoordinates-k-4lQ0M(long)>($l1);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r2, $l2);

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $l3 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>($r3);

        $r5 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l3);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setCurrentDragPosition-_kEHs6E(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.geometry.Offset)>($r4, $r5);

        $r7 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r6 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l4 = virtualinvoke $r6.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r7, $l4);

        $r9 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r8 = <androidx.compose.foundation.text.Handle: androidx.compose.foundation.text.Handle Cursor>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDraggingHandle(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.foundation.text.Handle)>($r9, $r8);

        return;
    }

    public void onDrag-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;
        long l0, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l10;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r1, r3, $r5;
        androidx.compose.ui.text.TextLayoutResult r2, r4, $r8;
        int i1, $i9, $i11;
        androidx.compose.foundation.text.TextFieldState $r6;
        androidx.compose.foundation.text.TextLayoutResultProxy $r7;
        androidx.compose.ui.geometry.Offset $r9, $r11;
        androidx.compose.ui.text.input.OffsetMapping $r10;
        androidx.compose.ui.text.input.TextFieldValue $r12, $r15, $r17;
        boolean $z1;
        androidx.compose.ui.hapticfeedback.HapticFeedback $r13;
        kotlin.jvm.functions.Function1 $r14;
        androidx.compose.ui.text.AnnotatedString $r16;
        androidx.compose.ui.hapticfeedback.HapticFeedbackType$Companion $r19;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        l0 := @parameter0: long;

        r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $l3 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r1);

        $l4 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-MK-Hz9U(long,long)>($l3, l0);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>(r1, $l4);

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_release()>();

        if $r6 == null goto label3;

        $r7 = virtualinvoke $r6.<androidx.compose.foundation.text.TextFieldState: androidx.compose.foundation.text.TextLayoutResultProxy getLayoutResult()>();

        if $r7 == null goto label3;

        $r8 = virtualinvoke $r7.<androidx.compose.foundation.text.TextLayoutResultProxy: androidx.compose.ui.text.TextLayoutResult getValue()>();

        if $r8 == null goto label3;

        r2 = $r8;

        r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        r4 = r2;

        $l5 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l6 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l7 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-MK-Hz9U(long,long)>($l5, $l6);

        $r9 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l7);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setCurrentDragPosition-_kEHs6E(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.geometry.Offset)>(r3, $r9);

        $r10 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMapping getOffsetMapping$foundation_release()>();

        $r11 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.geometry.Offset getCurrentDragPosition-_m7T9-E()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r11);

        $l8 = virtualinvoke $r11.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $i9 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l8);

        i1 = interfaceinvoke $r10.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>($i9);

        l2 = staticinvoke <androidx.compose.ui.text.TextRangeKt: long TextRange(int,int)>(i1, i1);

        $r12 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_release()>();

        $l10 = virtualinvoke $r12.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z1 = staticinvoke <androidx.compose.ui.text.TextRange: boolean equals-impl0(long,long)>(l2, $l10);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r13 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.hapticfeedback.HapticFeedback getHapticFeedBack()>();

        if $r13 == null goto label2;

        $r19 = <androidx.compose.ui.hapticfeedback.HapticFeedbackType: androidx.compose.ui.hapticfeedback.HapticFeedbackType$Companion Companion>;

        $i11 = virtualinvoke $r19.<androidx.compose.ui.hapticfeedback.HapticFeedbackType$Companion: int getTextHandleMove-5zf0vsI()>();

        interfaceinvoke $r13.<androidx.compose.ui.hapticfeedback.HapticFeedback: void performHapticFeedback-CdsT49E(int)>($i11);

        goto label2;

     label2:
        $r14 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 getOnValueChange$foundation_release()>();

        $r15 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_release()>();

        $r16 = virtualinvoke $r15.<androidx.compose.ui.text.input.TextFieldValue: androidx.compose.ui.text.AnnotatedString getAnnotatedString()>();

        $r17 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue access$createTextFieldValue-FDrldGo(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.text.AnnotatedString,long)>(r3, $r16, l2);

        interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r17);

        goto label3;

     label3:
        return;
    }

    public void onStop()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDraggingHandle(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.foundation.text.Handle)>($r1, null);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager this$0>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setCurrentDragPosition-_kEHs6E(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.geometry.Offset)>($r2, null);

        return;
    }

    public void onCancel()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1 r0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$cursorDragObserver$1;

        return;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: boolean $isStartHandle>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager, boolean)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        $z0 := @parameter1: boolean;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r1;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: boolean $isStartHandle> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStart-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1 r0;
        long l0, $l1, $l2, $l3;
        boolean $z0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2, $r4, $r5, $r6;
        androidx.compose.ui.geometry.Offset$Companion $r3;
        androidx.compose.foundation.text.TextFieldState r7, r8;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $z0 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        $l1 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: long getHandlePosition-F1C5BW0$foundation_text_release(boolean)>($z0);

        $l2 = staticinvoke <androidx.compose.ui.selection.SelectionHandlesKt: long getAdjustedCoordinates-k-4lQ0M(long)>($l1);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r2, $l2);

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r3 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l3 = virtualinvoke $r3.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r4, $l3);

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r7 = virtualinvoke $r5.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r7 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r7.<androidx.compose.foundation.text.TextFieldState: void setDraggingHandle(boolean)>(1);

     label2:
        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r8 = virtualinvoke $r6.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r8 != null goto label3;

        goto label4;

     label3:
        virtualinvoke r8.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(0);

     label4:
        return;
    }

    public long onDrag-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1 r0;
        long l0, $l3, $l4, $l5, $l7, $l8, $l9, $l10, $l12, $l13, $l14;
        androidx.compose.ui.text.TextLayoutResult r1, r2, r4;
        boolean z0, z1, z2;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r3, $r5, r11, $r13;
        int i1, i2, $i6, $i11, $i15, $i16;
        androidx.compose.ui.text.input.OffsetMap $r6, $r9;
        androidx.compose.ui.text.input.TextFieldValue $r7, $r8, $r10;
        androidx.compose.foundation.text.TextFieldState r12, r14;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1;

        l0 := @parameter0: long;

        r11 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $l3 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r11);

        $l4 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l3, l0);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>(r11, $l4);

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r12 = virtualinvoke $r5.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r12 != null goto label1;

        goto label7;

     label1:
        r1 = virtualinvoke r12.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r1 != null goto label2;

        goto label7;

     label2:
        r2 = r1;

        z0 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        z1 = 0;

        z2 = 0;

        r4 = r2;

        if z0 == 0 goto label3;

        $l12 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l13 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l14 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l12, $l13);

        $i15 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l14);

        goto label4;

     label3:
        $r6 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap getOffsetMap$foundation_text_release()>();

        $r7 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $l5 = virtualinvoke $r7.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i6 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>($l5);

        $i15 = interfaceinvoke $r6.<androidx.compose.ui.text.input.OffsetMap: int originalToTransformed(int)>($i6);

     label4:
        i1 = $i15;

        if z0 == 0 goto label5;

        $r9 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap getOffsetMap$foundation_text_release()>();

        $r10 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $l10 = virtualinvoke $r10.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i11 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l10);

        $i16 = interfaceinvoke $r9.<androidx.compose.ui.text.input.OffsetMap: int originalToTransformed(int)>($i11);

        goto label6;

     label5:
        $l7 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l8 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l9 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l7, $l8);

        $i16 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l9);

     label6:
        i2 = $i16;

        $r8 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$updateSelection(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.text.input.TextFieldValue,int,int,boolean,boolean)>(r3, $r8, i1, i2, z0, 0);

     label7:
        $r13 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r14 = virtualinvoke $r13.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r14 != null goto label8;

        goto label9;

     label8:
        virtualinvoke r14.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(0);

     label9:
        return l0;
    }

    public void onStop-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1 r0;
        long l0;
        androidx.compose.ui.gesture.DragObserver $r1;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r2, $r3, $r4, $r6;
        androidx.compose.ui.platform.TextToolbarStatus $r5, $r10;
        androidx.compose.foundation.text.TextFieldState r7, r8;
        androidx.compose.ui.platform.TextToolbar r9;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1;

        l0 := @parameter0: long;

        $r1 = (androidx.compose.ui.gesture.DragObserver) r0;

        staticinvoke <androidx.compose.ui.gesture.DragObserver$DefaultImpls: void onStop-k-4lQ0M(androidx.compose.ui.gesture.DragObserver,long)>($r1, l0);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r7 = virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r7 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r7.<androidx.compose.foundation.text.TextFieldState: void setDraggingHandle(boolean)>(0);

     label2:
        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r8 = virtualinvoke $r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r8 != null goto label3;

        goto label4;

     label3:
        virtualinvoke r8.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(1);

     label4:
        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r9 = virtualinvoke $r4.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar getTextToolbar()>();

        if r9 != null goto label5;

        $r10 = (androidx.compose.ui.platform.TextToolbarStatus) null;

        goto label6;

     label5:
        $r10 = interfaceinvoke r9.<androidx.compose.ui.platform.TextToolbar: androidx.compose.ui.platform.TextToolbarStatus getStatus()>();

     label6:
        $r5 = <androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus Hidden>;

        if $r10 != $r5 goto label7;

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r6.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void showSelectionToolbar$foundation_text_release()>();

     label7:
        return;
    }

    public void onCancel()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1 r0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$handleDragObserver$1;

        staticinvoke <androidx.compose.ui.gesture.DragObserver$DefaultImpls: void onCancel(androidx.compose.ui.gesture.DragObserver)>(r0);

        return;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: kotlin.jvm.functions.Function1 $onStart>
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
    void <init>(kotlin.jvm.functions.Function1, androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1 r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: kotlin.jvm.functions.Function1 $onStart> = $r1;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStart-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1 r0;
        long l0, $l1;
        androidx.compose.foundation.text.TextFieldState r1, r6;
        androidx.compose.ui.text.TextLayoutResult r2, r3, r5;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r4, $r10, $r15, $r16;
        boolean z0, z1;
        kotlin.jvm.functions.Function1 $r7, $r14;
        androidx.compose.ui.geometry.Offset $r8;
        androidx.compose.foundation.text.TextFieldDelegate$Companion $r11;
        androidx.compose.ui.text.input.EditProcessor $r12;
        androidx.compose.ui.text.input.OffsetMap $r13;
        androidx.compose.ui.geometry.Offset$Companion $r17;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1;

        l0 := @parameter0: long;

        $r7 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: kotlin.jvm.functions.Function1 $onStart>;

        $r8 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>(l0);

        interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

        $r10 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r1 = virtualinvoke $r10.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r1 != null goto label1;

        goto label3;

     label1:
        r2 = virtualinvoke r1.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r2 != null goto label2;

        goto label3;

     label2:
        r3 = r2;

        r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        z0 = 0;

        z1 = 0;

        r5 = r3;

        $r11 = <androidx.compose.foundation.text.TextFieldDelegate: androidx.compose.foundation.text.TextFieldDelegate$Companion Companion>;

        r6 = virtualinvoke r4.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r6);

        $r12 = virtualinvoke r6.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.input.EditProcessor getProcessor()>();

        $r13 = virtualinvoke r4.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap getOffsetMap$foundation_text_release()>();

        $r14 = virtualinvoke r4.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 getOnValueChange$foundation_text_release()>();

        virtualinvoke $r11.<androidx.compose.foundation.text.TextFieldDelegate$Companion: void setCursorOffset-xy1OE84$foundation_text_release(long,androidx.compose.ui.text.TextLayoutResult,androidx.compose.ui.text.input.EditProcessor,androidx.compose.ui.text.input.OffsetMap,kotlin.jvm.functions.Function1)>(l0, r5, $r12, $r13, $r14);

     label3:
        $r15 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r15, l0);

        $r16 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r17 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l1 = virtualinvoke $r17.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r16, $l1);

        return;
    }

    public long onDrag-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1 r0;
        long l0, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        androidx.compose.ui.text.TextLayoutResult r1, r2, r4;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r3, $r5, $r8, r11;
        boolean z0, z1, $z3;
        int i1, i2;
        androidx.compose.ui.text.input.TextFieldValue $r6, $r9;
        java.lang.String $r7;
        androidx.compose.ui.geometry.Offset$Companion $r10;
        androidx.compose.foundation.text.TextFieldState r12;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1;

        l0 := @parameter0: long;

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $r7 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, "");

        if $z3 == 0 goto label1;

        $r10 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l9 = virtualinvoke $r10.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        return $l9;

     label1:
        r11 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $l3 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r11);

        $l4 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l3, l0);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>(r11, $l4);

        $r8 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r12 = virtualinvoke $r8.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r12 != null goto label2;

        goto label4;

     label2:
        r1 = virtualinvoke r12.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r1 != null goto label3;

        goto label4;

     label3:
        r2 = r1;

        r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        z0 = 0;

        z1 = 0;

        r4 = r2;

        $l5 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        i1 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l5);

        $l6 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l7 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l8 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l6, $l7);

        i2 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l8);

        $r9 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$updateSelection(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.text.input.TextFieldValue,int,int,boolean,boolean)>(r3, $r9, i1, i2, 1, 0);

     label4:
        return l0;
    }

    public void onCancel()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1 r0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1;

        staticinvoke <androidx.compose.ui.gesture.DragObserver$DefaultImpls: void onCancel(androidx.compose.ui.gesture.DragObserver)>(r0);

        return;
    }

    public void onStop-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1 r0;
        long l0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$mouseSelectionObserver$1;

        l0 := @parameter0: long;

        staticinvoke <androidx.compose.ui.gesture.DragObserver$DefaultImpls: void onStop-k-4lQ0M(androidx.compose.ui.gesture.DragObserver,long)>(r0, l0);

        return;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 INSTANCE>
    void <init>()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 r0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.text.input.TextFieldValue)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 r0;
        androidx.compose.ui.text.input.TextFieldValue r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.text.input.TextFieldValue $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.text.input.TextFieldValue) r1;

        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1: void invoke(androidx.compose.ui.text.input.TextFieldValue)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 $r0;

        $r0 = new androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1;

        specialinvoke $r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1: void <init>()>();

        <androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager$onValueChange$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void copy$default(androidx.compose.foundation.text.selection.TextFieldSelectionManager,boolean,int,java.lang.Object)>($r1, 0, 1, null);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void hideSelectionToolbar$foundation_text_release()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1;

        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$copy$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void cut$foundation_text_release()>();

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void hideSelectionToolbar$foundation_text_release()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1;

        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$cut$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void paste$foundation_text_release()>();

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void hideSelectionToolbar$foundation_text_release()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1;

        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$paste$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void selectAll$foundation_text_release()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1;

        virtualinvoke r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$showSelectionToolbar$selectAll$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1
<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>
    void <init>(androidx.compose.foundation.text.selection.TextFieldSelectionManager)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 r0;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        $r1 := @parameter0: androidx.compose.foundation.text.selection.TextFieldSelectionManager;

        r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onLongPress-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 r0;
        long l0, $l3, $l6;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r1, $r2, $r3, $r4, $r6, r19, $r23, r29, $r31, $r32;
        boolean $z0, $z1, z2, z3, z5, $z8, z9;
        androidx.compose.ui.text.input.TextFieldValue $r5, $r9, r22, $r24;
        androidx.compose.ui.text.input.OffsetMap $r7;
        float $f0;
        int $i1, $i2, i4, i5;
        androidx.compose.ui.hapticfeedback.HapticFeedbackType $r8;
        java.lang.String $r10, $r25;
        kotlin.jvm.functions.Function1 $r11;
        androidx.compose.foundation.text.TextFieldState r13, r14, r15, r16, r26;
        androidx.compose.ui.text.TextLayoutResult r17, r18, r20, r27, r28, r30;
        androidx.compose.ui.hapticfeedback.HapticFeedback r21;
        androidx.compose.ui.geometry.Offset$Companion $r33;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r13 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r13 != null goto label01;

        goto label02;

     label01:
        r14 = r13;

        z2 = 0;

        z3 = 0;

        r15 = r14;

        $z0 = virtualinvoke r15.<androidx.compose.foundation.text.TextFieldState: boolean getDraggingHandle()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $z1 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: boolean access$isPositionOnText-k-4lQ0M(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r2, l0);

        if $z1 != 0 goto label07;

        $r6 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r16 = virtualinvoke $r6.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r16 != null goto label03;

        goto label07;

     label03:
        r17 = virtualinvoke r16.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r17 != null goto label04;

        goto label07;

     label04:
        r18 = r17;

        r19 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        z5 = 0;

        r20 = r18;

        $r7 = virtualinvoke r19.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.OffsetMap getOffsetMap$foundation_text_release()>();

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $i1 = virtualinvoke r20.<androidx.compose.ui.text.TextLayoutResult: int getLineForVerticalPosition(float)>($f0);

        $i2 = virtualinvoke r20.<androidx.compose.ui.text.TextLayoutResult: int getLineEnd(int)>($i1);

        i4 = interfaceinvoke $r7.<androidx.compose.ui.text.input.OffsetMap: int transformedToOriginal(int)>($i2);

        r21 = virtualinvoke r19.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.hapticfeedback.HapticFeedback getHapticFeedBack()>();

        if r21 != null goto label05;

        goto label06;

     label05:
        $r8 = <androidx.compose.ui.hapticfeedback.HapticFeedbackType: androidx.compose.ui.hapticfeedback.HapticFeedbackType TextHandleMove>;

        interfaceinvoke r21.<androidx.compose.ui.hapticfeedback.HapticFeedback: void performHapticFeedback(androidx.compose.ui.hapticfeedback.HapticFeedbackType)>($r8);

     label06:
        $r9 = virtualinvoke r19.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $r10 = virtualinvoke $r9.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $l3 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>(i4, i4);

        r22 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue access$createTextFieldValue-rJy5ZHU(androidx.compose.foundation.text.selection.TextFieldSelectionManager,java.lang.String,long)>(r19, $r10, $l3);

        virtualinvoke r19.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void enterSelectionMode$foundation_text_release()>();

        $r11 = virtualinvoke r19.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: kotlin.jvm.functions.Function1 getOnValueChange$foundation_text_release()>();

        interfaceinvoke $r11.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r22);

        return;

     label07:
        $r23 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r24 = virtualinvoke $r23.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $r25 = virtualinvoke $r24.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, "");

        if $z8 == 0 goto label08;

        return;

     label08:
        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void enterSelectionMode$foundation_text_release()>();

        $r4 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r26 = virtualinvoke $r4.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r26 != null goto label09;

        goto label11;

     label09:
        r27 = virtualinvoke r26.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r27 != null goto label10;

        goto label11;

     label10:
        r28 = r27;

        r29 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        z9 = 0;

        r30 = r28;

        i5 = virtualinvoke r30.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>(l0);

        $r5 = virtualinvoke r29.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$updateSelection(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.text.input.TextFieldValue,int,int,boolean,boolean)>(r29, $r5, i5, i5, 1, 1);

     label11:
        $r31 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r31, l0);

        $r32 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r33 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l6 = virtualinvoke $r33.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>($r32, $l6);

        return;
    }

    public long onDrag-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 r0;
        long l0, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        androidx.compose.ui.text.TextLayoutResult r1, r2, r4;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager r3, $r5, $r8, r11, $r13;
        boolean z0, z1, $z3;
        int i1, i2;
        androidx.compose.ui.text.input.TextFieldValue $r6, $r9;
        java.lang.String $r7;
        androidx.compose.ui.geometry.Offset$Companion $r10;
        androidx.compose.foundation.text.TextFieldState r12, r14;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        l0 := @parameter0: long;

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        $r7 = virtualinvoke $r6.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, "");

        if $z3 == 0 goto label1;

        $r10 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l9 = virtualinvoke $r10.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        return $l9;

     label1:
        r11 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        $l3 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r11);

        $l4 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l3, l0);

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$setDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager,long)>(r11, $l4);

        $r8 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r12 = virtualinvoke $r8.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r12 != null goto label2;

        goto label4;

     label2:
        r1 = virtualinvoke r12.<androidx.compose.foundation.text.TextFieldState: androidx.compose.ui.text.TextLayoutResult getLayoutResult()>();

        if r1 != null goto label3;

        goto label4;

     label3:
        r2 = r1;

        r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        z0 = 0;

        z1 = 0;

        r4 = r2;

        $l5 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        i1 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l5);

        $l6 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragBeginPosition$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l7 = staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: long access$getDragTotalDistance$p(androidx.compose.foundation.text.selection.TextFieldSelectionManager)>(r3);

        $l8 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-k-4lQ0M(long,long)>($l6, $l7);

        i2 = virtualinvoke r4.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l8);

        $r9 = virtualinvoke r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.text.input.TextFieldValue getValue$foundation_text_release()>();

        staticinvoke <androidx.compose.foundation.text.selection.TextFieldSelectionManager: void access$updateSelection(androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.text.input.TextFieldValue,int,int,boolean,boolean)>(r3, $r9, i1, i2, 1, 1);

     label4:
        $r13 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r14 = virtualinvoke $r13.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r14 != null goto label5;

        goto label6;

     label5:
        virtualinvoke r14.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(0);

     label6:
        return l0;
    }

    public void onStop-k-4lQ0M(long)
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 r0;
        long l0;
        androidx.compose.ui.gesture.LongPressDragObserver $r1;
        androidx.compose.foundation.text.selection.TextFieldSelectionManager $r2, $r3, $r5;
        androidx.compose.ui.platform.TextToolbarStatus $r4, $r8;
        androidx.compose.foundation.text.TextFieldState r6;
        androidx.compose.ui.platform.TextToolbar r7;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        l0 := @parameter0: long;

        $r1 = (androidx.compose.ui.gesture.LongPressDragObserver) r0;

        staticinvoke <androidx.compose.ui.gesture.LongPressDragObserver$DefaultImpls: void onStop-k-4lQ0M(androidx.compose.ui.gesture.LongPressDragObserver,long)>($r1, l0);

        $r2 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r6 = virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.foundation.text.TextFieldState getState$foundation_text_release()>();

        if r6 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r6.<androidx.compose.foundation.text.TextFieldState: void setShowFloatingToolbar(boolean)>(1);

     label2:
        $r3 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        r7 = virtualinvoke $r3.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: androidx.compose.ui.platform.TextToolbar getTextToolbar()>();

        if r7 != null goto label3;

        $r8 = (androidx.compose.ui.platform.TextToolbarStatus) null;

        goto label4;

     label3:
        $r8 = interfaceinvoke r7.<androidx.compose.ui.platform.TextToolbar: androidx.compose.ui.platform.TextToolbarStatus getStatus()>();

     label4:
        $r4 = <androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus Hidden>;

        if $r8 != $r4 goto label5;

        $r5 = r0.<androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1: androidx.compose.foundation.text.selection.TextFieldSelectionManager $this>;

        virtualinvoke $r5.<androidx.compose.foundation.text.selection.TextFieldSelectionManager: void showSelectionToolbar$foundation_text_release()>();

     label5:
        return;
    }

    public void onCancel()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 r0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        staticinvoke <androidx.compose.ui.gesture.LongPressDragObserver$DefaultImpls: void onCancel(androidx.compose.ui.gesture.LongPressDragObserver)>(r0);

        return;
    }

    public void onDragStart()
    {
        androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1 r0;

        r0 := @this: androidx.compose.foundation.text.selection.TextFieldSelectionManager$touchSelectionObserver$1;

        staticinvoke <androidx.compose.ui.gesture.LongPressDragObserver$DefaultImpls: void onDragStart(androidx.compose.ui.gesture.LongPressDragObserver)>(r0);

        return;
    }

