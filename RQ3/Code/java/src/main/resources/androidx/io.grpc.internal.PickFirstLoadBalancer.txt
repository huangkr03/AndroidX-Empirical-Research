io.grpc.internal.PickFirstLoadBalancer
<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>
<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel>
    void <init>(io.grpc.LoadBalancer$Helper)
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        java.lang.Object $r1;
        io.grpc.LoadBalancer$Helper $r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer;

        $r2 := @parameter0: io.grpc.LoadBalancer$Helper;

        specialinvoke $r0.<io.grpc.LoadBalancer: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "helper");

        $r2 = (io.grpc.LoadBalancer$Helper) $r1;

        $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper> = $r2;

        return;
    }

    static void access$000(io.grpc.internal.PickFirstLoadBalancer, io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo)
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        io.grpc.LoadBalancer$Subchannel $r1;
        io.grpc.ConnectivityStateInfo $r2;

        $r0 := @parameter0: io.grpc.internal.PickFirstLoadBalancer;

        $r1 := @parameter1: io.grpc.LoadBalancer$Subchannel;

        $r2 := @parameter2: io.grpc.ConnectivityStateInfo;

        specialinvoke $r0.<io.grpc.internal.PickFirstLoadBalancer: void processSubchannelState(io.grpc.LoadBalancer$Subchannel,io.grpc.ConnectivityStateInfo)>($r1, $r2);

        return;
    }

    static io.grpc.LoadBalancer$Helper access$200(io.grpc.internal.PickFirstLoadBalancer)
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        io.grpc.LoadBalancer$Helper r1;

        $r0 := @parameter0: io.grpc.internal.PickFirstLoadBalancer;

        r1 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        return r1;
    }

    private void processSubchannelState(io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo)
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        io.grpc.LoadBalancer$Subchannel $r1;
        io.grpc.ConnectivityStateInfo $r2;
        io.grpc.ConnectivityState $r3, $r4, $r5;
        io.grpc.LoadBalancer$Helper $r6;
        int[] $r7;
        int $i0;
        java.lang.StringBuilder $r8, r14;
        java.lang.String $r9;
        io.grpc.LoadBalancer$SubchannelPicker $r10;
        io.grpc.Status $r11;
        io.grpc.LoadBalancer$PickResult $r12;
        io.grpc.internal.PickFirstLoadBalancer$Picker $r13, r16;
        java.lang.IllegalArgumentException r15;
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker r17;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer;

        $r1 := @parameter0: io.grpc.LoadBalancer$Subchannel;

        $r2 := @parameter1: io.grpc.ConnectivityStateInfo;

        $r3 = virtualinvoke $r2.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r4 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        if $r3 != $r4 goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r2.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r5 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState TRANSIENT_FAILURE>;

        if $r4 == $r5 goto label2;

        $r4 = virtualinvoke $r2.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r5 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

        if $r4 != $r5 goto label3;

     label2:
        $r6 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        virtualinvoke $r6.<io.grpc.LoadBalancer$Helper: void refreshNameResolution()>();

     label3:
        $r7 = <io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState>;

        $i0 = virtualinvoke $r3.<io.grpc.ConnectivityState: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            default: goto label4;
        };

     label4:
        r15 = new java.lang.IllegalArgumentException;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported state:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw r15;

     label5:
        $r13 = new io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r10 = $r13;

        $r11 = virtualinvoke $r2.<io.grpc.ConnectivityStateInfo: io.grpc.Status getStatus()>();

        $r12 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withError(io.grpc.Status)>($r11);

        specialinvoke $r13.<io.grpc.internal.PickFirstLoadBalancer$Picker: void <init>(io.grpc.LoadBalancer$PickResult)>($r12);

        goto label9;

     label6:
        r16 = new io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r12 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withSubchannel(io.grpc.LoadBalancer$Subchannel)>($r1);

        specialinvoke r16.<io.grpc.internal.PickFirstLoadBalancer$Picker: void <init>(io.grpc.LoadBalancer$PickResult)>($r12);

        $r10 = r16;

        goto label9;

     label7:
        $r13 = new io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r10 = $r13;

        $r12 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withNoResult()>();

        specialinvoke $r13.<io.grpc.internal.PickFirstLoadBalancer$Picker: void <init>(io.grpc.LoadBalancer$PickResult)>($r12);

        goto label9;

     label8:
        r17 = new io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker;

        specialinvoke r17.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: void <init>(io.grpc.internal.PickFirstLoadBalancer,io.grpc.LoadBalancer$Subchannel)>($r0, $r1);

        $r10 = r17;

     label9:
        $r6 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        virtualinvoke $r6.<io.grpc.LoadBalancer$Helper: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.LoadBalancer$SubchannelPicker)>($r3, $r10);

        return;
    }

    public boolean acceptResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        io.grpc.LoadBalancer$ResolvedAddresses $r1;
        java.util.List $r2;
        boolean $z0;
        io.grpc.Status $r3;
        java.lang.StringBuilder $r4;
        io.grpc.Attributes $r5;
        java.lang.String $r6;
        io.grpc.LoadBalancer$Subchannel $r7;
        io.grpc.LoadBalancer$Helper $r8;
        io.grpc.LoadBalancer$CreateSubchannelArgs$Builder $r9;
        io.grpc.LoadBalancer$CreateSubchannelArgs $r10;
        io.grpc.internal.PickFirstLoadBalancer$1 $r11;
        io.grpc.ConnectivityState $r12;
        io.grpc.internal.PickFirstLoadBalancer$Picker $r13;
        io.grpc.LoadBalancer$PickResult $r14;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer;

        $r1 := @parameter0: io.grpc.LoadBalancer$ResolvedAddresses;

        $r2 = virtualinvoke $r1.<io.grpc.LoadBalancer$ResolvedAddresses: java.util.List getAddresses()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameResolver returned no usable address. addrs=");

        $r2 = virtualinvoke $r1.<io.grpc.LoadBalancer$ResolvedAddresses: java.util.List getAddresses()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", attrs=");

        $r5 = virtualinvoke $r1.<io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.Attributes getAttributes()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r6);

        virtualinvoke $r0.<io.grpc.internal.PickFirstLoadBalancer: void handleNameResolutionError(io.grpc.Status)>($r3);

        return 0;

     label1:
        $r7 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel>;

        if $r7 != null goto label2;

        $r8 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r9 = staticinvoke <io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder newBuilder()>();

        $r9 = virtualinvoke $r9.<io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder setAddresses(java.util.List)>($r2);

        $r10 = virtualinvoke $r9.<io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs build()>();

        $r7 = virtualinvoke $r8.<io.grpc.LoadBalancer$Helper: io.grpc.LoadBalancer$Subchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)>($r10);

        $r11 = new io.grpc.internal.PickFirstLoadBalancer$1;

        specialinvoke $r11.<io.grpc.internal.PickFirstLoadBalancer$1: void <init>(io.grpc.internal.PickFirstLoadBalancer,io.grpc.LoadBalancer$Subchannel)>($r0, $r7);

        virtualinvoke $r7.<io.grpc.LoadBalancer$Subchannel: void start(io.grpc.LoadBalancer$SubchannelStateListener)>($r11);

        $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel> = $r7;

        $r8 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r12 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

        $r13 = new io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r14 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withSubchannel(io.grpc.LoadBalancer$Subchannel)>($r7);

        specialinvoke $r13.<io.grpc.internal.PickFirstLoadBalancer$Picker: void <init>(io.grpc.LoadBalancer$PickResult)>($r14);

        virtualinvoke $r8.<io.grpc.LoadBalancer$Helper: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.LoadBalancer$SubchannelPicker)>($r12, $r13);

        virtualinvoke $r7.<io.grpc.LoadBalancer$Subchannel: void requestConnection()>();

        goto label3;

     label2:
        virtualinvoke $r7.<io.grpc.LoadBalancer$Subchannel: void updateAddresses(java.util.List)>($r2);

     label3:
        return 1;
    }

    public void handleNameResolutionError(io.grpc.Status)
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        io.grpc.ConnectivityState $r1;
        io.grpc.internal.PickFirstLoadBalancer$Picker $r2;
        io.grpc.LoadBalancer$PickResult $r3;
        io.grpc.Status $r4;
        io.grpc.LoadBalancer$Subchannel $r5;
        io.grpc.LoadBalancer$Helper $r6;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer;

        $r4 := @parameter0: io.grpc.Status;

        $r5 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel>;

        if $r5 == null goto label1;

        virtualinvoke $r5.<io.grpc.LoadBalancer$Subchannel: void shutdown()>();

        $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel> = null;

     label1:
        $r6 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r1 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState TRANSIENT_FAILURE>;

        $r2 = new io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r3 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withError(io.grpc.Status)>($r4);

        specialinvoke $r2.<io.grpc.internal.PickFirstLoadBalancer$Picker: void <init>(io.grpc.LoadBalancer$PickResult)>($r3);

        virtualinvoke $r6.<io.grpc.LoadBalancer$Helper: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.LoadBalancer$SubchannelPicker)>($r1, $r2);

        return;
    }

    public void shutdown()
    {
        io.grpc.internal.PickFirstLoadBalancer $r0;
        io.grpc.LoadBalancer$Subchannel $r1;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer;

        $r1 = $r0.<io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<io.grpc.LoadBalancer$Subchannel: void shutdown()>();

     label1:
        return;
    }

io.grpc.internal.PickFirstLoadBalancer$1
<io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.internal.PickFirstLoadBalancer this$0>
<io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.LoadBalancer$Subchannel val$subchannel>
    void <init>(io.grpc.internal.PickFirstLoadBalancer, io.grpc.LoadBalancer$Subchannel)
    {
        io.grpc.internal.PickFirstLoadBalancer$1 $r0;
        io.grpc.internal.PickFirstLoadBalancer $r1;
        io.grpc.LoadBalancer$Subchannel $r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$1;

        $r1 := @parameter0: io.grpc.internal.PickFirstLoadBalancer;

        $r2 := @parameter1: io.grpc.LoadBalancer$Subchannel;

        $r0.<io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.internal.PickFirstLoadBalancer this$0> = $r1;

        $r0.<io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.LoadBalancer$Subchannel val$subchannel> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSubchannelState(io.grpc.ConnectivityStateInfo)
    {
        io.grpc.internal.PickFirstLoadBalancer$1 $r0;
        io.grpc.ConnectivityStateInfo $r1;
        io.grpc.internal.PickFirstLoadBalancer $r2;
        io.grpc.LoadBalancer$Subchannel $r3;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$1;

        $r1 := @parameter0: io.grpc.ConnectivityStateInfo;

        $r2 = $r0.<io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.internal.PickFirstLoadBalancer this$0>;

        $r3 = $r0.<io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.LoadBalancer$Subchannel val$subchannel>;

        staticinvoke <io.grpc.internal.PickFirstLoadBalancer: void access$000(io.grpc.internal.PickFirstLoadBalancer,io.grpc.LoadBalancer$Subchannel,io.grpc.ConnectivityStateInfo)>($r2, $r3, $r1);

        return;
    }

io.grpc.internal.PickFirstLoadBalancer$2
<io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState>
    static void <clinit>()
    {
        io.grpc.ConnectivityState[] $r0;
        int $i0;
        int[] $r1;
        io.grpc.ConnectivityState $r2;
        java.lang.Throwable $r3, $r4, $r5, $r6;

        $r0 = staticinvoke <io.grpc.ConnectivityState: io.grpc.ConnectivityState[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState> = $r1;

        $r2 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

     label01:
        $i0 = virtualinvoke $r2.<io.grpc.ConnectivityState: int ordinal()>();

     label02:
        $r1[$i0] = 1;

        goto label04;

     label03:
        $r3 := @caughtexception;

     label04:
        $r1 = <io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState>;

        $r2 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

     label05:
        $i0 = virtualinvoke $r2.<io.grpc.ConnectivityState: int ordinal()>();

     label06:
        $r1[$i0] = 2;

        goto label08;

     label07:
        $r4 := @caughtexception;

     label08:
        $r1 = <io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState>;

        $r2 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState READY>;

     label09:
        $i0 = virtualinvoke $r2.<io.grpc.ConnectivityState: int ordinal()>();

     label10:
        $r1[$i0] = 3;

        goto label12;

     label11:
        $r5 := @caughtexception;

     label12:
        $r1 = <io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState>;

        $r2 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState TRANSIENT_FAILURE>;

     label13:
        $i0 = virtualinvoke $r2.<io.grpc.ConnectivityState: int ordinal()>();

     label14:
        $r1[$i0] = 4;

        return;

     label15:
        $r6 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label05 to label06 with label07;
        catch java.lang.NoSuchFieldError from label09 to label10 with label11;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
    }

io.grpc.internal.PickFirstLoadBalancer$Picker
<io.grpc.internal.PickFirstLoadBalancer$Picker: io.grpc.LoadBalancer$PickResult result>
    void <init>(io.grpc.LoadBalancer$PickResult)
    {
        io.grpc.internal.PickFirstLoadBalancer$Picker $r0;
        java.lang.Object $r1;
        io.grpc.LoadBalancer$PickResult $r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r2 := @parameter0: io.grpc.LoadBalancer$PickResult;

        specialinvoke $r0.<io.grpc.LoadBalancer$SubchannelPicker: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "result");

        $r2 = (io.grpc.LoadBalancer$PickResult) $r1;

        $r0.<io.grpc.internal.PickFirstLoadBalancer$Picker: io.grpc.LoadBalancer$PickResult result> = $r2;

        return;
    }

    public io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.PickFirstLoadBalancer$Picker $r0;
        io.grpc.LoadBalancer$PickSubchannelArgs $r1;
        io.grpc.LoadBalancer$PickResult r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r1 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        r2 = $r0.<io.grpc.internal.PickFirstLoadBalancer$Picker: io.grpc.LoadBalancer$PickResult result>;

        return r2;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.PickFirstLoadBalancer$Picker $r0;
        io.grpc.LoadBalancer$PickResult $r1;
        com.google.common.base.MoreObjects$ToStringHelper $r2;
        java.lang.String $r3;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$Picker;

        $r2 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class)>(class "Lio/grpc/internal/PickFirstLoadBalancer$Picker;");

        $r1 = $r0.<io.grpc.internal.PickFirstLoadBalancer$Picker: io.grpc.LoadBalancer$PickResult result>;

        $r2 = virtualinvoke $r2.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("result", $r1);

        $r3 = virtualinvoke $r2.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r3;
    }

io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1
<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker this$1>
    void <init>(io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker)
    {
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1 $r0;
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker $r1;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1;

        $r1 := @parameter0: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker;

        $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1 $r0;
        io.grpc.LoadBalancer$Subchannel $r1;
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker $r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1;

        $r2 = $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker this$1>;

        $r1 = staticinvoke <io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$Subchannel access$100(io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker)>($r2);

        virtualinvoke $r1.<io.grpc.LoadBalancer$Subchannel: void requestConnection()>();

        return;
    }

io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker
<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: java.util.concurrent.atomic.AtomicBoolean connectionRequested>
<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$Subchannel subchannel>
<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.internal.PickFirstLoadBalancer this$0>
    void <init>(io.grpc.internal.PickFirstLoadBalancer, io.grpc.LoadBalancer$Subchannel)
    {
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker $r0;
        io.grpc.LoadBalancer$Subchannel $r1;
        java.lang.Object $r2;
        io.grpc.internal.PickFirstLoadBalancer $r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker;

        $r3 := @parameter0: io.grpc.internal.PickFirstLoadBalancer;

        $r1 := @parameter1: io.grpc.LoadBalancer$Subchannel;

        $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.internal.PickFirstLoadBalancer this$0> = $r3;

        specialinvoke $r0.<io.grpc.LoadBalancer$SubchannelPicker: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: java.util.concurrent.atomic.AtomicBoolean connectionRequested> = $r4;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "subchannel");

        $r1 = (io.grpc.LoadBalancer$Subchannel) $r2;

        $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$Subchannel subchannel> = $r1;

        return;
    }

    static io.grpc.LoadBalancer$Subchannel access$100(io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker)
    {
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker $r0;
        io.grpc.LoadBalancer$Subchannel r1;

        $r0 := @parameter0: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker;

        r1 = $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$Subchannel subchannel>;

        return r1;
    }

    public io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker $r0;
        io.grpc.LoadBalancer$PickSubchannelArgs $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        io.grpc.internal.PickFirstLoadBalancer $r3;
        io.grpc.LoadBalancer$Helper $r4;
        io.grpc.SynchronizationContext $r5;
        io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1 $r6;
        io.grpc.LoadBalancer$PickResult $r7;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker;

        $r1 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r2 = $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: java.util.concurrent.atomic.AtomicBoolean connectionRequested>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r3 = $r0.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.internal.PickFirstLoadBalancer this$0>;

        $r4 = staticinvoke <io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper access$200(io.grpc.internal.PickFirstLoadBalancer)>($r3);

        $r5 = virtualinvoke $r4.<io.grpc.LoadBalancer$Helper: io.grpc.SynchronizationContext getSynchronizationContext()>();

        $r6 = new io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1;

        specialinvoke $r6.<io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: void <init>(io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker)>($r0);

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r6);

     label1:
        $r7 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withNoResult()>();

        return $r7;
    }

