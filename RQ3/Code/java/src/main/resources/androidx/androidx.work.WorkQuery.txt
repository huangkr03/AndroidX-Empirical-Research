androidx.work.WorkQuery
<androidx.work.WorkQuery: java.util.List mIds>
<androidx.work.WorkQuery: java.util.List mUniqueWorkNames>
<androidx.work.WorkQuery: java.util.List mTags>
<androidx.work.WorkQuery: java.util.List mStates>
    void <init>(androidx.work.WorkQuery$Builder)
    {
        androidx.work.WorkQuery r0;
        androidx.work.WorkQuery$Builder r1;
        java.util.List $r2, $r3, $r4, $r5;

        r0 := @this: androidx.work.WorkQuery;

        r1 := @parameter0: androidx.work.WorkQuery$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<androidx.work.WorkQuery$Builder: java.util.List mIds>;

        r0.<androidx.work.WorkQuery: java.util.List mIds> = $r2;

        $r3 = r1.<androidx.work.WorkQuery$Builder: java.util.List mUniqueWorkNames>;

        r0.<androidx.work.WorkQuery: java.util.List mUniqueWorkNames> = $r3;

        $r4 = r1.<androidx.work.WorkQuery$Builder: java.util.List mTags>;

        r0.<androidx.work.WorkQuery: java.util.List mTags> = $r4;

        $r5 = r1.<androidx.work.WorkQuery$Builder: java.util.List mStates>;

        r0.<androidx.work.WorkQuery: java.util.List mStates> = $r5;

        return;
    }

    public java.util.List getIds()
    {
        androidx.work.WorkQuery r0;
        java.util.List $r1;

        r0 := @this: androidx.work.WorkQuery;

        $r1 = r0.<androidx.work.WorkQuery: java.util.List mIds>;

        return $r1;
    }

    public java.util.List getUniqueWorkNames()
    {
        androidx.work.WorkQuery r0;
        java.util.List $r1;

        r0 := @this: androidx.work.WorkQuery;

        $r1 = r0.<androidx.work.WorkQuery: java.util.List mUniqueWorkNames>;

        return $r1;
    }

    public java.util.List getTags()
    {
        androidx.work.WorkQuery r0;
        java.util.List $r1;

        r0 := @this: androidx.work.WorkQuery;

        $r1 = r0.<androidx.work.WorkQuery: java.util.List mTags>;

        return $r1;
    }

    public java.util.List getStates()
    {
        androidx.work.WorkQuery r0;
        java.util.List $r1;

        r0 := @this: androidx.work.WorkQuery;

        $r1 = r0.<androidx.work.WorkQuery: java.util.List mStates>;

        return $r1;
    }

    public static androidx.work.WorkQuery fromIds(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder $r1;
        androidx.work.WorkQuery $r2;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromIds(java.util.List)>(r0);

        $r2 = virtualinvoke $r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery build()>();

        return $r2;
    }

    public static transient androidx.work.WorkQuery fromIds(java.util.UUID[])
    {
        java.util.UUID[] r0;
        java.util.List $r1;
        androidx.work.WorkQuery $r2;

        r0 := @parameter0: java.util.UUID[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <androidx.work.WorkQuery: androidx.work.WorkQuery fromIds(java.util.List)>($r1);

        return $r2;
    }

    public static androidx.work.WorkQuery fromTags(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder $r1;
        androidx.work.WorkQuery $r2;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromTags(java.util.List)>(r0);

        $r2 = virtualinvoke $r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery build()>();

        return $r2;
    }

    public static transient androidx.work.WorkQuery fromTags(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.List $r1;
        androidx.work.WorkQuery $r2;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <androidx.work.WorkQuery: androidx.work.WorkQuery fromTags(java.util.List)>($r1);

        return $r2;
    }

    public static transient androidx.work.WorkQuery fromUniqueWorkNames(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.List $r1;
        androidx.work.WorkQuery$Builder $r2;
        androidx.work.WorkQuery $r3;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromUniqueWorkNames(java.util.List)>($r1);

        $r3 = virtualinvoke $r2.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery build()>();

        return $r3;
    }

    public static androidx.work.WorkQuery fromUniqueWorkNames(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder $r1;
        androidx.work.WorkQuery $r2;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromUniqueWorkNames(java.util.List)>(r0);

        $r2 = virtualinvoke $r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery build()>();

        return $r2;
    }

    public static androidx.work.WorkQuery fromStates(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder $r1;
        androidx.work.WorkQuery $r2;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromStates(java.util.List)>(r0);

        $r2 = virtualinvoke $r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery build()>();

        return $r2;
    }

    public static transient androidx.work.WorkQuery fromStates(androidx.work.WorkInfo$State[])
    {
        androidx.work.WorkInfo$State[] r0;
        java.util.List $r1;
        androidx.work.WorkQuery$Builder $r2;
        androidx.work.WorkQuery $r3;

        r0 := @parameter0: androidx.work.WorkInfo$State[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromStates(java.util.List)>($r1);

        $r3 = virtualinvoke $r2.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery build()>();

        return $r3;
    }

androidx.work.WorkQuery$Builder
<androidx.work.WorkQuery$Builder: java.util.List mIds>
<androidx.work.WorkQuery$Builder: java.util.List mUniqueWorkNames>
<androidx.work.WorkQuery$Builder: java.util.List mTags>
<androidx.work.WorkQuery$Builder: java.util.List mStates>
    private void <init>()
    {
        androidx.work.WorkQuery$Builder r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;

        r0 := @this: androidx.work.WorkQuery$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.work.WorkQuery$Builder: java.util.List mIds> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.work.WorkQuery$Builder: java.util.List mUniqueWorkNames> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.work.WorkQuery$Builder: java.util.List mTags> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.work.WorkQuery$Builder: java.util.List mStates> = $r4;

        return;
    }

    public static androidx.work.WorkQuery$Builder fromIds(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1, $r2;

        r0 := @parameter0: java.util.List;

        $r2 = new androidx.work.WorkQuery$Builder;

        specialinvoke $r2.<androidx.work.WorkQuery$Builder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addIds(java.util.List)>(r0);

        return r1;
    }

    public static androidx.work.WorkQuery$Builder fromUniqueWorkNames(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1, $r2;

        r0 := @parameter0: java.util.List;

        $r2 = new androidx.work.WorkQuery$Builder;

        specialinvoke $r2.<androidx.work.WorkQuery$Builder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addUniqueWorkNames(java.util.List)>(r0);

        return r1;
    }

    public static androidx.work.WorkQuery$Builder fromTags(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1, $r2;

        r0 := @parameter0: java.util.List;

        $r2 = new androidx.work.WorkQuery$Builder;

        specialinvoke $r2.<androidx.work.WorkQuery$Builder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addTags(java.util.List)>(r0);

        return r1;
    }

    public static androidx.work.WorkQuery$Builder fromStates(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1, $r2;

        r0 := @parameter0: java.util.List;

        $r2 = new androidx.work.WorkQuery$Builder;

        specialinvoke $r2.<androidx.work.WorkQuery$Builder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addStates(java.util.List)>(r0);

        return r1;
    }

    public androidx.work.WorkQuery$Builder addIds(java.util.List)
    {
        androidx.work.WorkQuery$Builder r0;
        java.util.List r1, $r2;

        r0 := @this: androidx.work.WorkQuery$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.work.WorkQuery$Builder: java.util.List mIds>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public androidx.work.WorkQuery$Builder addUniqueWorkNames(java.util.List)
    {
        androidx.work.WorkQuery$Builder r0;
        java.util.List r1, $r2;

        r0 := @this: androidx.work.WorkQuery$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.work.WorkQuery$Builder: java.util.List mUniqueWorkNames>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public androidx.work.WorkQuery$Builder addTags(java.util.List)
    {
        androidx.work.WorkQuery$Builder r0;
        java.util.List r1, $r2;

        r0 := @this: androidx.work.WorkQuery$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.work.WorkQuery$Builder: java.util.List mTags>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public androidx.work.WorkQuery$Builder addStates(java.util.List)
    {
        androidx.work.WorkQuery$Builder r0;
        java.util.List r1, $r2;

        r0 := @this: androidx.work.WorkQuery$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.work.WorkQuery$Builder: java.util.List mStates>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public androidx.work.WorkQuery build()
    {
        androidx.work.WorkQuery$Builder r0;
        java.lang.String r1;
        java.util.List $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r6;
        androidx.work.WorkQuery $r7;

        r0 := @this: androidx.work.WorkQuery$Builder;

        $r2 = r0.<androidx.work.WorkQuery$Builder: java.util.List mIds>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.work.WorkQuery$Builder: java.util.List mUniqueWorkNames>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.work.WorkQuery$Builder: java.util.List mTags>;

        $z2 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $r5 = r0.<androidx.work.WorkQuery$Builder: java.util.List mStates>;

        $z3 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        r1 = "Must specify ids, uniqueNames, tags or states when building a WorkQuery";

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label1:
        $r7 = new androidx.work.WorkQuery;

        specialinvoke $r7.<androidx.work.WorkQuery: void <init>(androidx.work.WorkQuery$Builder)>(r0);

        return $r7;
    }

