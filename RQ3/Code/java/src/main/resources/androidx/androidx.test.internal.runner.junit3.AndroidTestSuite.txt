androidx.test.internal.runner.junit3.AndroidTestSuite
<androidx.test.internal.runner.junit3.AndroidTestSuite: java.lang.String TAG>
<androidx.test.internal.runner.junit3.AndroidTestSuite: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>
    private java.lang.String getStackTraces()
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        java.lang.StringBuilder r1, $r2, $r4, $r9, $r13, $r15, $r17, $r19;
        java.lang.String $r3, $r8, $r12, $r14, $r18;
        android.os.Looper $r7;
        java.lang.Thread r21, r24;
        java.lang.StackTraceElement[] r22, r25;
        int i0, i1, i2, i3;
        java.lang.StackTraceElement r23, r26;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke r21.<java.lang.Thread: java.lang.String toString()>();

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r22 = virtualinvoke r21.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = lengthof r22;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r23 = r22[i1];

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tat ");

        $r18 = virtualinvoke r23.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r24 = virtualinvoke $r7.<android.os.Looper: java.lang.Thread getThread()>();

        $r8 = virtualinvoke r24.<java.lang.Thread: java.lang.String toString()>();

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r25 = virtualinvoke r24.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        i2 = lengthof r25;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        r26 = r25[i3];

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tat ");

        $r14 = virtualinvoke r26.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i3 = i3 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void <init>(java.lang.Class, androidx.test.internal.util.AndroidRunnerParams)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        java.lang.Class r1;
        androidx.test.internal.util.AndroidRunnerParams r2;
        androidx.test.internal.runner.junit3.NonLeakyTestSuite $r3;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: androidx.test.internal.util.AndroidRunnerParams;

        $r3 = new androidx.test.internal.runner.junit3.NonLeakyTestSuite;

        specialinvoke $r3.<androidx.test.internal.runner.junit3.NonLeakyTestSuite: void <init>(java.lang.Class)>(r1);

        specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: void <init>(junit.framework.TestSuite,androidx.test.internal.util.AndroidRunnerParams)>($r3, r2);

        return;
    }

    public void <init>(junit.framework.TestSuite, androidx.test.internal.util.AndroidRunnerParams)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        junit.framework.TestSuite r1;
        androidx.test.internal.util.AndroidRunnerParams r2;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r1 := @parameter0: junit.framework.TestSuite;

        r2 := @parameter1: androidx.test.internal.util.AndroidRunnerParams;

        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite: void <init>(junit.framework.TestSuite)>(r1);

        r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams> = r2;

        return;
    }

    public void run(junit.framework.TestResult)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        junit.framework.TestResult r1;
        androidx.test.internal.runner.junit3.AndroidTestResult r2, $r3;
        long l0;
        androidx.test.internal.util.AndroidRunnerParams $r4, $r6, $r8;
        android.os.Bundle $r5;
        android.app.Instrumentation $r7;
        byte $b1;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r1 := @parameter0: junit.framework.TestResult;

        $r3 = new androidx.test.internal.runner.junit3.AndroidTestResult;

        $r4 = r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>;

        $r5 = virtualinvoke $r4.<androidx.test.internal.util.AndroidRunnerParams: android.os.Bundle getBundle()>();

        $r6 = r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>;

        $r7 = virtualinvoke $r6.<androidx.test.internal.util.AndroidRunnerParams: android.app.Instrumentation getInstrumentation()>();

        specialinvoke $r3.<androidx.test.internal.runner.junit3.AndroidTestResult: void <init>(android.os.Bundle,android.app.Instrumentation,junit.framework.TestResult)>($r5, $r7, r1);

        r2 = $r3;

        $r8 = r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>;

        l0 = virtualinvoke $r8.<androidx.test.internal.util.AndroidRunnerParams: long getPerTestTimeout()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: void runTestsWithTimeout(long,androidx.test.internal.runner.junit3.AndroidTestResult)>(l0, r2);

        goto label2;

     label1:
        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite: void run(junit.framework.TestResult)>(r2);

     label2:
        return;
    }

    private void runTestWithTimeout(junit.framework.Test, androidx.test.internal.runner.junit3.AndroidTestResult, long)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        junit.framework.Test r1;
        androidx.test.internal.runner.junit3.AndroidTestResult r2;
        long l0;
        java.util.concurrent.ExecutorService r3;
        androidx.test.internal.runner.junit3.AndroidTestSuite$2 r4, $r7;
        java.util.concurrent.Future r5;
        androidx.test.internal.runner.junit3.AndroidTestSuite$1 $r6;
        java.util.concurrent.TimeUnit $r8, $r10, $r11;
        java.lang.Throwable $r13, $r14, $r15, $r16, r21, r22, r28;
        java.lang.IllegalStateException $r17, $r23;
        java.lang.Object[] $r18, $r24;
        java.lang.String $r19, $r20, $r26, $r27;
        boolean z0, z1;
        java.lang.Long $r25;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: androidx.test.internal.runner.junit3.AndroidTestResult;

        l0 := @parameter2: long;

        $r6 = new androidx.test.internal.runner.junit3.AndroidTestSuite$1;

        specialinvoke $r6.<androidx.test.internal.runner.junit3.AndroidTestSuite$1: void <init>(androidx.test.internal.runner.junit3.AndroidTestSuite)>(r0);

        r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r6);

        $r7 = new androidx.test.internal.runner.junit3.AndroidTestSuite$2;

        specialinvoke $r7.<androidx.test.internal.runner.junit3.AndroidTestSuite$2: void <init>(androidx.test.internal.runner.junit3.AndroidTestSuite,junit.framework.Test,androidx.test.internal.runner.junit3.AndroidTestResult)>(r0, r1, r2);

        r4 = $r7;

        virtualinvoke r2.<androidx.test.internal.runner.junit3.AndroidTestResult: void setCurrentTimeout(long)>(l0);

        r5 = interfaceinvoke r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r4);

        interfaceinvoke r3.<java.util.concurrent.ExecutorService: void shutdown()>();

     label1:
        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = interfaceinvoke r3.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(l0, $r8);

        if z0 != 0 goto label7;

        interfaceinvoke r3.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        z1 = interfaceinvoke r3.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(1L, $r10);

        if z1 != 0 goto label7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AndroidTestSuite", "Failed to to stop test execution thread, the correctness of the test runner is at risk. Abort all execution!");

     label2:
        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        interfaceinvoke r5.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(0L, $r11);

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r21 = $r14;

        $r15 = virtualinvoke r21.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidTestSuite", "Exception from the execution thread", $r15);

        goto label6;

     label5:
        $r13 := @caughtexception;

        r22 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidTestSuite", "Exception from the execution thread", r22);

     label6:
        $r23 = new java.lang.IllegalStateException;

        $r24 = newarray (java.lang.Object)[2];

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r24[0] = $r25;

        $r26 = specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: java.lang.String getStackTraces()>();

        $r24[1] = $r26;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Test timed out after %d milliseconds but execution thread failed to terminate\nDumping instr and main threads:\n%s", $r24);

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: void terminateAllRunnerExecution(java.lang.RuntimeException)>($r23);

     label7:
        goto label9;

     label8:
        $r16 := @caughtexception;

        r28 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AndroidTestSuite", "The correctness of the test runner is at risk. Abort all execution!");

        $r17 = new java.lang.IllegalStateException;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r28;

        $r19 = specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: java.lang.String getStackTraces()>();

        $r18[1] = $r19;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Test execution thread got interrupted:\n%s\nDumping instr and main threads:\n%s", $r18);

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: void terminateAllRunnerExecution(java.lang.RuntimeException)>($r17);

     label9:
        return;

        catch java.util.concurrent.ExecutionException from label2 to label3 with label4;
        catch java.util.concurrent.TimeoutException from label2 to label3 with label5;
        catch java.lang.InterruptedException from label1 to label7 with label8;
    }

    private void runTestsWithTimeout(long, androidx.test.internal.runner.junit3.AndroidTestResult)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        long l0;
        androidx.test.internal.runner.junit3.AndroidTestResult r1;
        int i1, i2;
        junit.framework.Test r2;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.test.internal.runner.junit3.AndroidTestResult;

        i1 = virtualinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: int testCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r2 = virtualinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: junit.framework.Test testAt(int)>(i2);

        specialinvoke r0.<androidx.test.internal.runner.junit3.AndroidTestSuite: void runTestWithTimeout(junit.framework.Test,androidx.test.internal.runner.junit3.AndroidTestResult,long)>(r2, r1, l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void terminateAllRunnerExecution(java.lang.RuntimeException)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite r0;
        java.lang.RuntimeException r1;
        androidx.test.internal.runner.junit3.AndroidTestSuite$3 r2, $r5;
        java.lang.Thread r3, $r6;
        java.lang.Throwable r4, $r7;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r1 := @parameter0: java.lang.RuntimeException;

        $r5 = new androidx.test.internal.runner.junit3.AndroidTestSuite$3;

        specialinvoke $r5.<androidx.test.internal.runner.junit3.AndroidTestSuite$3: void <init>(androidx.test.internal.runner.junit3.AndroidTestSuite,java.lang.RuntimeException)>(r0, r1);

        r2 = $r5;

        $r6 = new java.lang.Thread;

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r2, "Terminator");

        r3 = $r6;

        virtualinvoke r3.<java.lang.Thread: void start()>();

     label1:
        virtualinvoke r3.<java.lang.Thread: void join()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

androidx.test.internal.runner.junit3.AndroidTestSuite$1
    public java.lang.Thread newThread(java.lang.Runnable)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite$1 r0;
        java.lang.Runnable r1;
        java.lang.Thread r2;
        java.util.concurrent.ThreadFactory $r3;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite$1;

        r1 := @parameter0: java.lang.Runnable;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        r2 = interfaceinvoke $r3.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>(r1);

        virtualinvoke r2.<java.lang.Thread: void setName(java.lang.String)>("AndroidTestSuite");

        return r2;
    }

    void <init>(androidx.test.internal.runner.junit3.AndroidTestSuite)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite$1 r0;
        androidx.test.internal.runner.junit3.AndroidTestSuite r1;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite$1;

        r1 := @parameter0: androidx.test.internal.runner.junit3.AndroidTestSuite;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.internal.runner.junit3.AndroidTestSuite$2
<androidx.test.internal.runner.junit3.AndroidTestSuite$2: junit.framework.Test val$test>
<androidx.test.internal.runner.junit3.AndroidTestSuite$2: androidx.test.internal.runner.junit3.AndroidTestResult val$androidTestResult>
    void <init>(androidx.test.internal.runner.junit3.AndroidTestSuite, junit.framework.Test, androidx.test.internal.runner.junit3.AndroidTestResult)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite$2 r0;
        androidx.test.internal.runner.junit3.AndroidTestSuite r1;
        junit.framework.Test r2;
        androidx.test.internal.runner.junit3.AndroidTestResult r3;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite$2;

        r1 := @parameter0: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r2 := @parameter1: junit.framework.Test;

        r3 := @parameter2: androidx.test.internal.runner.junit3.AndroidTestResult;

        r0.<androidx.test.internal.runner.junit3.AndroidTestSuite$2: junit.framework.Test val$test> = r2;

        r0.<androidx.test.internal.runner.junit3.AndroidTestSuite$2: androidx.test.internal.runner.junit3.AndroidTestResult val$androidTestResult> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite$2 r0;
        androidx.test.internal.runner.junit3.AndroidTestResult $r1;
        junit.framework.Test $r2;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite$2;

        $r2 = r0.<androidx.test.internal.runner.junit3.AndroidTestSuite$2: junit.framework.Test val$test>;

        $r1 = r0.<androidx.test.internal.runner.junit3.AndroidTestSuite$2: androidx.test.internal.runner.junit3.AndroidTestResult val$androidTestResult>;

        interfaceinvoke $r2.<junit.framework.Test: void run(junit.framework.TestResult)>($r1);

        return;
    }

androidx.test.internal.runner.junit3.AndroidTestSuite$3
<androidx.test.internal.runner.junit3.AndroidTestSuite$3: java.lang.RuntimeException val$exception>
    void <init>(androidx.test.internal.runner.junit3.AndroidTestSuite, java.lang.RuntimeException)
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite$3 r0;
        androidx.test.internal.runner.junit3.AndroidTestSuite r1;
        java.lang.RuntimeException r2;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite$3;

        r1 := @parameter0: androidx.test.internal.runner.junit3.AndroidTestSuite;

        r2 := @parameter1: java.lang.RuntimeException;

        r0.<androidx.test.internal.runner.junit3.AndroidTestSuite$3: java.lang.RuntimeException val$exception> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.test.internal.runner.junit3.AndroidTestSuite$3 r0;
        java.lang.RuntimeException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestSuite$3;

        $r1 = r0.<androidx.test.internal.runner.junit3.AndroidTestSuite$3: java.lang.RuntimeException val$exception>;

        r2 = (java.lang.Throwable) $r1;

        throw r2;
    }

