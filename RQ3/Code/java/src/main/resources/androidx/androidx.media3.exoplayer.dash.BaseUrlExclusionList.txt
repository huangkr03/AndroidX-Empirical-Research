androidx.media3.exoplayer.dash.BaseUrlExclusionList
<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedServiceLocations>
<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedPriorities>
<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map selectionsTaken>
<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Random random>
    public void <init>()
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.Random $r1;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: void <init>(java.util.Random)>($r1);

        return;
    }

    void <init>(java.util.Random)
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.Random r1;
        java.util.HashMap $r2, $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        r1 := @parameter0: java.util.Random;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map selectionsTaken> = $r2;

        r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Random random> = r1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedServiceLocations> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedPriorities> = $r4;

        return;
    }

    public void exclude(androidx.media3.exoplayer.dash.manifest.BaseUrl, long)
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        androidx.media3.exoplayer.dash.manifest.BaseUrl r1;
        long l0, l1, $l2;
        java.util.Map $r2, $r5;
        java.lang.String $r3;
        int $i3, $i4;
        java.lang.Integer $r4;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        r1 := @parameter0: androidx.media3.exoplayer.dash.manifest.BaseUrl;

        l0 := @parameter1: long;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = $l2 + l0;

        $r3 = r1.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String serviceLocation>;

        $r2 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedServiceLocations>;

        staticinvoke <androidx.media3.exoplayer.dash.BaseUrlExclusionList: void addExclusion(java.lang.Object,long,java.util.Map)>($r3, l1, $r2);

        $i3 = r1.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        if $i3 == -2147483648 goto label1;

        $i4 = r1.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedPriorities>;

        staticinvoke <androidx.media3.exoplayer.dash.BaseUrlExclusionList: void addExclusion(java.lang.Object,long,java.util.Map)>($r4, l1, $r5);

     label1:
        return;
    }

    public androidx.media3.exoplayer.dash.manifest.BaseUrl selectBaseUrl(java.util.List)
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.List r1, r2, $r11;
        java.util.ArrayList r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        androidx.media3.exoplayer.dash.manifest.BaseUrl r4, $r8, $r19, $r21, r22;
        java.util.Comparator $r5;
        java.lang.Object $r7, $r10, $r14, $r18, $r20;
        java.util.Map $r9, $r12;
        android.util.Pair $r15;
        java.lang.String $r16;
        java.lang.Integer $r17;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        r1 := @parameter0: java.util.List;

        r2 = specialinvoke r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.List applyExclusions(java.util.List)>(r1);

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 >= 2 goto label1;

        $r20 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)>(r2, null);

        $r21 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r20;

        return $r21;

     label1:
        $r5 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.dash.BaseUrlExclusionList: int compareBaseUrl(androidx.media3.exoplayer.dash.manifest.BaseUrl,androidx.media3.exoplayer.dash.manifest.BaseUrl)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.dash.manifest.BaseUrl,androidx.media3.exoplayer.dash.manifest.BaseUrl));

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r7;

        i0 = $r8.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        i7 = 0;

     label2:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if i7 >= $i2 goto label4;

        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i7);

        r4 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r14;

        $i4 = r4.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        if i0 == $i4 goto label3;

        $i6 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i6 != 1 goto label4;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r18;

        return $r19;

     label3:
        $r15 = new android.util.Pair;

        $r16 = r4.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String serviceLocation>;

        $i5 = r4.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int weight>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        specialinvoke $r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r16, $r17);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r15);

        i7 = i7 + 1;

        goto label2;

     label4:
        $r9 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map selectionsTaken>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r22 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r10;

        if r22 != null goto label5;

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        $r11 = interfaceinvoke r2.<java.util.List: java.util.List subList(int,int)>(0, $i3);

        r22 = specialinvoke r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: androidx.media3.exoplayer.dash.manifest.BaseUrl selectWeighted(java.util.List)>($r11);

        $r12 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map selectionsTaken>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r22);

     label5:
        return r22;
    }

    public int getPriorityCountAfterExclusion(java.util.List)
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.List r1, r3;
        java.util.HashSet r2, $r4;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5;
        androidx.media3.exoplayer.dash.manifest.BaseUrl $r6;
        java.lang.Integer $r7;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        r1 := @parameter0: java.util.List;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        r3 = specialinvoke r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.List applyExclusions(java.util.List)>(r1);

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i3 >= $i0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r5;

        $i2 = $r6.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        return $i1;
    }

    public static int getPriorityCount(java.util.List)
    {
        java.util.List r0;
        java.util.HashSet r1, $r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        androidx.media3.exoplayer.dash.manifest.BaseUrl $r4;
        java.lang.Integer $r5;

        r0 := @parameter0: java.util.List;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r3;

        $i2 = $r4.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke r1.<java.util.Set: int size()>();

        return $i1;
    }

    public void reset()
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.Map $r1, $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        $r1 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedServiceLocations>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedPriorities>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map selectionsTaken>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        return;
    }

    private java.util.List applyExclusions(java.util.List)
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.List r1;
        long l0;
        java.util.ArrayList r2, $r6;
        androidx.media3.exoplayer.dash.manifest.BaseUrl r3;
        java.util.Map $r4, $r5, $r9, $r10;
        int $i1, $i2, i3;
        java.lang.Object $r7;
        java.lang.String $r8;
        boolean $z0, $z1;
        java.lang.Integer $r11;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        r1 := @parameter0: java.util.List;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r4 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedServiceLocations>;

        staticinvoke <androidx.media3.exoplayer.dash.BaseUrlExclusionList: void removeExpiredExclusions(long,java.util.Map)>(l0, $r4);

        $r5 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedPriorities>;

        staticinvoke <androidx.media3.exoplayer.dash.BaseUrlExclusionList: void removeExpiredExclusions(long,java.util.Map)>(l0, $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        i3 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i1 goto label3;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r7;

        $r9 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedServiceLocations>;

        $r8 = r3.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String serviceLocation>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r10 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Map excludedPriorities>;

        $i2 = r3.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $z1 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z1 != 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return r2;
    }

    private androidx.media3.exoplayer.dash.manifest.BaseUrl selectWeighted(java.util.List)
    {
        androidx.media3.exoplayer.dash.BaseUrlExclusionList r0;
        java.util.List r1;
        androidx.media3.exoplayer.dash.manifest.BaseUrl r2, $r5, $r8;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        java.util.Random $r3;
        java.lang.Object $r4, $r6, $r7;

        r0 := @this: androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        r1 := @parameter0: java.util.List;

        i4 = 0;

        i5 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i5 >= $i0 goto label2;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r8 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r7;

        $i3 = $r8.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int weight>;

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r3 = r0.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: java.util.Random random>;

        i6 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(i4);

        i7 = 0;

        i8 = 0;

     label3:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i8 >= $i1 goto label5;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r2 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r6;

        $i2 = r2.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int weight>;

        i7 = i7 + $i2;

        if i6 >= i7 goto label4;

        return r2;

     label4:
        i8 = i8 + 1;

        goto label3;

     label5:
        $r4 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>(r1);

        $r5 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r4;

        return $r5;
    }

    private static void addExclusion(java.lang.Object, long, java.util.Map)
    {
        java.lang.Object r0, $r4, $r6;
        java.util.Map r1;
        boolean $z0;
        java.lang.Long $r2, $r5, $r7;
        long $l0, l1;

        r0 := @parameter0: java.lang.Object;

        l1 := @parameter1: long;

        r1 := @parameter2: java.util.Map;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (java.lang.Long) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r5);

        $r7 = (java.lang.Long) $r6;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(l1, $l0);

     label1:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);

        return;
    }

    private static void removeExpiredExclusions(long, java.util.Map)
    {
        long l0, $l2;
        java.util.Map r0;
        java.util.ArrayList r1, $r3;
        java.util.Map$Entry r2;
        java.util.Set $r4;
        boolean $z0;
        int $i1, i4;
        java.lang.Object $r5, $r7, $r8, $r10;
        java.lang.Long $r9;
        byte $b3;
        java.util.Iterator r11;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.Map;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r11 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Long) $r8;

        $l2 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $b3 = $l2 cmp l0;

        if $b3 > 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        goto label1;

     label3:
        i4 = 0;

     label4:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i4 >= $i1 goto label5;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        i4 = i4 + 1;

        goto label4;

     label5:
        return;
    }

    private static int compareBaseUrl(androidx.media3.exoplayer.dash.manifest.BaseUrl, androidx.media3.exoplayer.dash.manifest.BaseUrl)
    {
        androidx.media3.exoplayer.dash.manifest.BaseUrl r0, r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;

        r0 := @parameter0: androidx.media3.exoplayer.dash.manifest.BaseUrl;

        r1 := @parameter1: androidx.media3.exoplayer.dash.manifest.BaseUrl;

        $i2 = r0.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        $i1 = r1.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        i0 = staticinvoke <java.lang.Integer: int compare(int,int)>($i2, $i1);

        if i0 == 0 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String serviceLocation>;

        $r2 = r1.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String serviceLocation>;

        $i3 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

     label2:
        return $i3;
    }

