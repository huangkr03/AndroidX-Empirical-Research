io.grpc.okhttp.internal.TlsVersion
<io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] $VALUES>
<io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion SSL_3_0>
<io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_0>
<io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_1>
<io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_2>
<io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_3>
<io.grpc.okhttp.internal.TlsVersion: java.lang.String javaName>
    private static io.grpc.okhttp.internal.TlsVersion[] $values()
    {
        io.grpc.okhttp.internal.TlsVersion[] $r0;
        io.grpc.okhttp.internal.TlsVersion $r1;

        $r0 = newarray (io.grpc.okhttp.internal.TlsVersion)[5];

        $r1 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_3>;

        $r0[0] = $r1;

        $r1 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_2>;

        $r0[1] = $r1;

        $r1 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_1>;

        $r0[2] = $r1;

        $r1 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_0>;

        $r0[3] = $r1;

        $r1 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion SSL_3_0>;

        $r0[4] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.okhttp.internal.TlsVersion[] $r0;
        io.grpc.okhttp.internal.TlsVersion $r1;

        $r1 = new io.grpc.okhttp.internal.TlsVersion;

        specialinvoke $r1.<io.grpc.okhttp.internal.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_3", 0, "TLSv1.3");

        <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_3> = $r1;

        $r1 = new io.grpc.okhttp.internal.TlsVersion;

        specialinvoke $r1.<io.grpc.okhttp.internal.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 1, "TLSv1.2");

        <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_2> = $r1;

        $r1 = new io.grpc.okhttp.internal.TlsVersion;

        specialinvoke $r1.<io.grpc.okhttp.internal.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 2, "TLSv1.1");

        <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_1> = $r1;

        $r1 = new io.grpc.okhttp.internal.TlsVersion;

        specialinvoke $r1.<io.grpc.okhttp.internal.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 3, "TLSv1");

        <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_0> = $r1;

        $r1 = new io.grpc.okhttp.internal.TlsVersion;

        specialinvoke $r1.<io.grpc.okhttp.internal.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 4, "SSLv3");

        <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion SSL_3_0> = $r1;

        $r0 = staticinvoke <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] $values()>();

        <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        io.grpc.okhttp.internal.TlsVersion $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r0 := @this: io.grpc.okhttp.internal.TlsVersion;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<io.grpc.okhttp.internal.TlsVersion: java.lang.String javaName> = $r2;

        return;
    }

    public static io.grpc.okhttp.internal.TlsVersion forJavaName(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        io.grpc.okhttp.internal.TlsVersion r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "TLSv1.3";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_3>;

        return r4;

     label1:
        $r1 = "TLSv1.2";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_2>;

        return r4;

     label2:
        $r1 = "TLSv1.1";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r4 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_1>;

        return r4;

     label3:
        $r1 = "TLSv1";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        r4 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_0>;

        return r4;

     label4:
        $r1 = "SSLv3";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        r4 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion SSL_3_0>;

        return r4;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected TLS version: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static io.grpc.okhttp.internal.TlsVersion[] values()
    {
        java.lang.Object $r0;
        io.grpc.okhttp.internal.TlsVersion[] $r1;

        $r1 = <io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.okhttp.internal.TlsVersion[]) $r0;

        return $r1;
    }

