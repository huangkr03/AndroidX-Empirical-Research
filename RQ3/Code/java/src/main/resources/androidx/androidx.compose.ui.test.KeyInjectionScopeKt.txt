androidx.compose.ui.test.KeyInjectionScopeKt
<androidx.compose.ui.test.KeyInjectionScopeKt: long DefaultKeyPressDurationMillis>
<androidx.compose.ui.test.KeyInjectionScopeKt: long DefaultPauseDurationBetweenKeyPressesMillis>
    public static final void pressKey-KChvXf4(androidx.compose.ui.test.KeyInjectionScope, long, long)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        long l0, l1;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$pressKey");

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void keyDown-YVgTNJs(long)>(l0);

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void advanceEventTime(long)>(l1);

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void keyUp-YVgTNJs(long)>(l0);

        return;
    }

    public static void pressKey-KChvXf4$default(androidx.compose.ui.test.KeyInjectionScope, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.KeyInjectionScope r0;
        long l0, l3;
        int i1, $i2;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        l0 := @parameter1: long;

        l3 := @parameter2: long;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        l3 = 50L;

     label1:
        staticinvoke <androidx.compose.ui.test.KeyInjectionScopeKt: void pressKey-KChvXf4(androidx.compose.ui.test.KeyInjectionScope,long,long)>(r0, l0, l3);

        return;
    }

    public static final void withKeyDown-KChvXf4(androidx.compose.ui.test.KeyInjectionScope, long, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        long l0;
        kotlin.jvm.functions.Function1 r1;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        l0 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$withKeyDown");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void keyDown-YVgTNJs(long)>(l0);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void keyUp-YVgTNJs(long)>(l0);

        return;
    }

    public static final void withKeysDown(androidx.compose.ui.test.KeyInjectionScope, java.util.List, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        java.util.List r1;
        kotlin.jvm.functions.Function1 r2;
        boolean $z0, $z1;
        androidx.compose.ui.input.key.Key $r4, $r5;
        java.lang.Iterable $r6, $r9;
        java.util.Iterator r7, r10;
        java.lang.Object r8, r11;
        long l0, l1;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "keys");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        $r6 = (java.lang.Iterable) r1;

        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (androidx.compose.ui.input.key.Key) r8;

        l0 = virtualinvoke $r5.<androidx.compose.ui.input.key.Key: long unbox-impl()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void keyDown-YVgTNJs(long)>(l0);

        goto label1;

     label2:
        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r9 = (java.lang.Iterable) r1;

        r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (androidx.compose.ui.input.key.Key) r11;

        l1 = virtualinvoke $r4.<androidx.compose.ui.input.key.Key: long unbox-impl()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void keyUp-YVgTNJs(long)>(l1);

        goto label3;

     label4:
        return;
    }

    public static final void withKeyToggled-KChvXf4(androidx.compose.ui.test.KeyInjectionScope, long, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        long l0;
        kotlin.jvm.functions.Function1 r1;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        l0 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$withKeyToggled");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        staticinvoke <androidx.compose.ui.test.KeyInjectionScopeKt: void pressKey-KChvXf4$default(androidx.compose.ui.test.KeyInjectionScope,long,long,int,java.lang.Object)>($r0, l0, 0L, 2, null);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        staticinvoke <androidx.compose.ui.test.KeyInjectionScopeKt: void pressKey-KChvXf4$default(androidx.compose.ui.test.KeyInjectionScope,long,long,int,java.lang.Object)>($r0, l0, 0L, 2, null);

        return;
    }

    public static final void withKeysToggled(androidx.compose.ui.test.KeyInjectionScope, java.util.List, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        java.util.List r1;
        kotlin.jvm.functions.Function1 r2;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "keys");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        staticinvoke <androidx.compose.ui.test.KeyInjectionScopeKt: void pressKeys(androidx.compose.ui.test.KeyInjectionScope,java.util.List)>($r0, r1);

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        staticinvoke <androidx.compose.ui.test.KeyInjectionScopeKt: void pressKeys(androidx.compose.ui.test.KeyInjectionScope,java.util.List)>($r0, r1);

        return;
    }

    public static final boolean isFnDown(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        androidx.compose.ui.input.key.Key$Companion $r1;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.input.key.Key$Companion: long getFunction-EK5gGoQ()>();

        $z0 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l0);

        return $z0;
    }

    public static void isFnDown$annotations(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope r0;

        r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        return;
    }

    public static final boolean isCtrlDown(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        androidx.compose.ui.input.key.Key$Companion $r1, $r2;
        long $l0, $l1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.input.key.Key$Companion: long getCtrlLeft-EK5gGoQ()>();

        $z0 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l0);

        if $z0 != 0 goto label1;

        $r2 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l1 = virtualinvoke $r2.<androidx.compose.ui.input.key.Key$Companion: long getCtrlRight-EK5gGoQ()>();

        $z1 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static void isCtrlDown$annotations(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope r0;

        r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        return;
    }

    public static final boolean isAltDown(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        androidx.compose.ui.input.key.Key$Companion $r1, $r2;
        long $l0, $l1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.input.key.Key$Companion: long getAltLeft-EK5gGoQ()>();

        $z0 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l0);

        if $z0 != 0 goto label1;

        $r2 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l1 = virtualinvoke $r2.<androidx.compose.ui.input.key.Key$Companion: long getAltRight-EK5gGoQ()>();

        $z1 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static void isAltDown$annotations(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope r0;

        r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        return;
    }

    public static final boolean isMetaDown(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        androidx.compose.ui.input.key.Key$Companion $r1, $r2;
        long $l0, $l1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.input.key.Key$Companion: long getMetaLeft-EK5gGoQ()>();

        $z0 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l0);

        if $z0 != 0 goto label1;

        $r2 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l1 = virtualinvoke $r2.<androidx.compose.ui.input.key.Key$Companion: long getMetaRight-EK5gGoQ()>();

        $z1 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static void isMetaDown$annotations(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope r0;

        r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        return;
    }

    public static final boolean isShiftDown(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        androidx.compose.ui.input.key.Key$Companion $r1, $r2;
        long $l0, $l1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.input.key.Key$Companion: long getShiftLeft-EK5gGoQ()>();

        $z0 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l0);

        if $z0 != 0 goto label1;

        $r2 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l1 = virtualinvoke $r2.<androidx.compose.ui.input.key.Key$Companion: long getShiftRight-EK5gGoQ()>();

        $z1 = interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: boolean isKeyDown-YVgTNJs(long)>($l1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static void isShiftDown$annotations(androidx.compose.ui.test.KeyInjectionScope)
    {
        androidx.compose.ui.test.KeyInjectionScope r0;

        r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        return;
    }

    private static final void pressKeys(androidx.compose.ui.test.KeyInjectionScope, java.util.List)
    {
        androidx.compose.ui.test.KeyInjectionScope $r0;
        java.util.List r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        int i0, i2, $i3, i4;
        long l1;
        boolean $z2;
        androidx.compose.ui.input.key.Key $r5;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInjectionScope;

        r1 := @parameter1: java.util.List;

        $r2 = (java.lang.Iterable) r1;

        i4 = 0;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i3 = i4;

        i4 = i4 + 1;

        i0 = $i3;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = (androidx.compose.ui.input.key.Key) r4;

        l1 = virtualinvoke $r5.<androidx.compose.ui.input.key.Key: long unbox-impl()>();

        i2 = i0;

        if i2 == 0 goto label3;

        interfaceinvoke $r0.<androidx.compose.ui.test.KeyInjectionScope: void advanceEventTime(long)>(50L);

     label3:
        staticinvoke <androidx.compose.ui.test.KeyInjectionScopeKt: void pressKey-KChvXf4(androidx.compose.ui.test.KeyInjectionScope,long,long)>($r0, l1, 50L);

        goto label1;

     label4:
        return;
    }

