androidx.benchmark.macro.JankCollectionHelper
<androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>
<androidx.benchmark.macro.JankCollectionHelper: java.lang.String GFXINFO_METRICS_PREFIX>
<androidx.benchmark.macro.JankCollectionHelper: java.lang.String GFXINFO_COMMAND_GET>
<androidx.benchmark.macro.JankCollectionHelper: java.lang.String GFXINFO_COMMAND_RESET>
<androidx.benchmark.macro.JankCollectionHelper: java.lang.String GFXINFO_OUTPUT_HEADER>
<androidx.benchmark.macro.JankCollectionHelper: java.lang.String MULTILINE_MATCHER>
<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages>
<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice mDevice>
    void <init>()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.util.HashSet $r1;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages> = $r1;

        return;
    }

    public boolean startCollecting()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.util.Iterator r1;
        java.lang.String r2, $r10;
        java.lang.Throwable r3, $r9, r11;
        java.util.Set $r4, $r5;
        boolean $z0, $z1;
        java.lang.RuntimeException $r6, $r7;
        java.lang.Object $r8;
        int i1;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        $r4 = r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: void clearGfxInfo()>();

        goto label9;

     label1:
        i1 = 0;

        r11 = null;

        $r5 = r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages>;

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r8;

     label3:
        virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: void clearGfxInfo(java.lang.String)>(r2);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Encountered exception resetting gfxinfo.", r3);

        r11 = r3;

        i1 = i1 + 1;

     label6:
        goto label2;

     label7:
        if i1 <= 1 goto label8;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Multiple exceptions were encountered resetting gfxinfo. Reporting the last one only; others are visible in logs.", r11);

        throw $r7;

     label8:
        if i1 != 1 goto label9;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Encountered exception resetting gfxinfo.", r11);

        throw $r6;

     label9:
        return 1;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.util.Map getMetrics()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.util.HashMap r1, $r5;
        java.util.Iterator r2;
        java.lang.String r3, $r14;
        java.lang.Throwable r4, $r13, r15;
        java.util.Set $r6, $r7;
        boolean $z0, $z1;
        java.lang.RuntimeException $r8, $r9;
        java.lang.Object $r10;
        java.util.Map $r11, $r12;
        int i1;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r1 = $r5;

        $r6 = r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Map getGfxInfoMetrics()>();

        interfaceinvoke r1.<java.util.Map: void putAll(java.util.Map)>($r12);

        goto label9;

     label1:
        i1 = 0;

        r15 = null;

        $r7 = r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages>;

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r10;

     label3:
        $r11 = virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Map getGfxInfoMetrics(java.lang.String)>(r3);

        interfaceinvoke r1.<java.util.Map: void putAll(java.util.Map)>($r11);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r4 = $r13;

        $r14 = <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Encountered exception getting gfxinfo.", r4);

        r15 = r4;

        i1 = i1 + 1;

     label6:
        goto label2;

     label7:
        if i1 <= 1 goto label8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Multiple exceptions were encountered getting gfxinfo. Reporting the last one only; others are visible in logs.", r15);

        throw $r9;

     label8:
        if i1 != 1 goto label9;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Encountered exception getting gfxinfo.", r15);

        throw $r8;

     label9:
        return r1;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public boolean stopCollecting()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        return 1;
    }

    public transient void addTrackedPackages(java.lang.String[])
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String[] r1;
        java.util.Set $r2;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Set mTrackedPackages>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r2, r1);

        return;
    }

    void clearGfxInfo()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: void clearGfxInfo(java.lang.String)>("");

        return;
    }

    void clearGfxInfo(java.lang.String)
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String r1, $r4, $r7, $r8, $r11, $r13, r16, r17, r18, r19;
        boolean $z0;
        java.lang.Object[] $r2, $r5, $r6, $r9, $r12;
        androidx.test.uiautomator.UiDevice $r3, $r10;
        java.lang.Throwable $r14, r20;
        java.lang.RuntimeException $r15;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = "--";

        r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("dumpsys gfxinfo %s reset", $r9);

        $r10 = virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice getDevice()>();

        r17 = virtualinvoke $r10.<androidx.test.uiautomator.UiDevice: java.lang.String executeShellCommand(java.lang.String)>(r16);

        $r11 = specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.lang.String getHeaderMatcher(java.lang.String)>("");

        $r12 = newarray (java.lang.Object)[0];

        specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: void verifyMatches(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>(r17, $r11, "No package headers in output.", $r12);

        $r13 = <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r13, "Cleared all gfxinfo.");

        goto label3;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("dumpsys gfxinfo %s reset", $r2);

        $r3 = virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice getDevice()>();

        r19 = virtualinvoke $r3.<androidx.test.uiautomator.UiDevice: java.lang.String executeShellCommand(java.lang.String)>(r18);

        $r4 = specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.lang.String getHeaderMatcher(java.lang.String)>(r1);

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: void verifyMatches(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>(r19, $r4, "No package header in output.", $r5);

        $r7 = <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r1;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cleared %s gfxinfo.", $r6);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r7, $r8);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        r20 = $r14;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to clear gfxinfo.", r20);

        throw $r15;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    java.util.Map getGfxInfoMetrics()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.util.Map $r1;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        $r1 = virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Map getGfxInfoMetrics(java.lang.String)>("");

        return $r1;
    }

    java.util.Map getGfxInfoMetrics(java.lang.String)
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String r1, r2, $r7, $r10, r14;
        java.lang.String[] r3;
        java.util.HashMap r4, $r9;
        java.lang.Object[] $r5, $r8;
        androidx.test.uiautomator.UiDevice $r6;
        int $i0, i1;
        java.util.Map $r11;
        java.lang.Throwable $r12, r15;
        java.lang.RuntimeException $r13;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("dumpsys gfxinfo %s", $r5);

        $r6 = virtualinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice getDevice()>();

        r2 = virtualinvoke $r6.<androidx.test.uiautomator.UiDevice: java.lang.String executeShellCommand(java.lang.String)>(r14);

        $r7 = specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.lang.String getHeaderMatcher(java.lang.String)>(r1);

        $r8 = newarray (java.lang.Object)[0];

        specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: void verifyMatches(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>(r2, $r7, "Missing package header.", $r8);

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n\\*\\*");

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r4 = $r9;

        i1 = 1;

     label2:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label3;

        $r10 = r3[i1];

        $r11 = specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.util.Map parseGfxInfoMetrics(java.lang.String)>($r10);

        interfaceinvoke r4.<java.util.Map: void putAll(java.util.Map)>($r11);

        i1 = i1 + 1;

        goto label2;

     label3:
        return r4;

     label4:
        $r12 := @caughtexception;

        r15 = $r12;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to get gfxinfo.", r15);

        throw $r13;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private java.util.Map parseGfxInfoMetrics(java.lang.String)
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String r1, r3, r7, $r9, $r12, $r13, $r16, $r19, $r20;
        java.util.regex.Matcher r2;
        java.util.HashMap r4, $r14;
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] r5;
        int i0, i3;
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric r6;
        java.lang.Double r8;
        java.util.regex.Pattern $r10;
        boolean $z0;
        java.lang.Object[] $r11, $r18;
        java.lang.String[] $r15;
        java.lang.RuntimeException $r21;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String;

        $r9 = specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.lang.String getHeaderMatcher(java.lang.String)>("");

        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r9);

        r2 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to parse package from gfxinfo output.");

        throw $r21;

     label1:
        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r12 = <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r3;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Collecting metrics for: %s", $r11);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r12, $r13);

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r4 = $r14;

        r5 = staticinvoke <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] values()>();

        i0 = lengthof r5;

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        r6 = r5[i3];

        $r15 = newarray (java.lang.String)[3];

        $r15[0] = "gfxinfo";

        $r15[1] = r3;

        $r16 = virtualinvoke r6.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.lang.String getMetricId()>();

        $r15[2] = $r16;

        r7 = specialinvoke r0.<androidx.benchmark.macro.JankCollectionHelper: java.lang.String constructKey(java.lang.String[])>($r15);

        r8 = virtualinvoke r6.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.lang.Double parse(java.lang.String)>(r1);

        if r8 != null goto label3;

        $r19 = <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG>;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r7;

        $r18[1] = r3;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Did not find %s from %s", $r18);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r19, $r20);

        goto label4;

     label3:
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return r4;
    }

    private transient java.lang.String constructKey(java.lang.String[])
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>("_", r1);

        return $r2;
    }

    private java.lang.String getHeaderMatcher(java.lang.String)
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String r1, $r6, $r7, $r8;
        java.lang.Object[] $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = newarray (java.lang.Object)[1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = ".*";

        goto label2;

     label1:
        $r8 = r1;

     label2:
        $r3[0] = $r8;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Graphics info for pid (\\d+) \\[(%s)\\]", $r3);

        $r2[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[\\s\\S]*%s[\\s\\S]*", $r2);

        return $r7;
    }

    private transient void verifyMatches(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        java.lang.String r1, r2, r3, $r6;
        java.lang.Object[] r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(r2);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r3, r4);

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        return;
    }

    protected androidx.test.uiautomator.UiDevice getDevice()
    {
        androidx.benchmark.macro.JankCollectionHelper r0;
        androidx.test.uiautomator.UiDevice $r1, $r2, $r4;
        android.app.Instrumentation $r3;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper;

        $r1 = r0.<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice mDevice>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r4 = staticinvoke <androidx.test.uiautomator.UiDevice: androidx.test.uiautomator.UiDevice getInstance(android.app.Instrumentation)>($r3);

        r0.<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice mDevice> = $r4;

     label1:
        $r2 = r0.<androidx.benchmark.macro.JankCollectionHelper: androidx.test.uiautomator.UiDevice mDevice>;

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/benchmark/macro/JankCollectionHelper;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.benchmark.macro.JankCollectionHelper: java.lang.String LOG_TAG> = $r1;

        return;
    }

androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric TOTAL_FRAMES>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_COUNT>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_PRCNT>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_LEGACY_COUNT>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_LEGACY_PRCNT>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_50TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_90TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_95TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_99TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_MISSED_VSYNC>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_HIGH_INPUT_LATENCY>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_UI_THREAD>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_BITMAP_UPLOADS>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_DRAW>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_FRAME_DEADLINE_MISSED>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_FRAME_DEADLINE_MISSED_LEGACY>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_50TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_90TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_95TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_99TH>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.util.regex.Pattern mPattern>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: int mGroupIndex>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.lang.String mMetricId>
<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] $VALUES>
    public static androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] values()
    {
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[]) $r1;

        return $r2;
    }

    public static androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/benchmark/macro/JankCollectionHelper$GfxInfoMetric;", r0);

        $r2 = (androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.util.regex.Pattern, int, java.lang.String)
    {
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric r0;
        java.lang.String r1, r3;
        int i0, i1;
        java.util.regex.Pattern r2;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.regex.Pattern;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.util.regex.Pattern mPattern> = r2;

        r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: int mGroupIndex> = i1;

        r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.lang.String mMetricId> = r3;

        return;
    }

    public java.lang.Double parse(java.lang.String)
    {
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric r0;
        java.lang.String r1, $r4;
        java.util.regex.Matcher r2;
        java.util.regex.Pattern $r3;
        boolean $z0;
        int $i0;
        java.lang.Double $r5;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.util.regex.Pattern mPattern>;

        r2 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: int mGroupIndex>;

        $r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>($i0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r4);

        return $r5;

     label1:
        return null;
    }

    public java.lang.String getMetricId()
    {
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r1 = r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: java.lang.String mMetricId>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60;
        java.util.regex.Pattern $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39;
        androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] $r40;

        $r0 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Total frames rendered: (\\d+).*", 32);

        specialinvoke $r0.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("TOTAL_FRAMES", 0, $r1, 1, "total_frames");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric TOTAL_FRAMES> = $r0;

        $r2 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Janky frames: (\\d+) \\(([0-9]+[\\.]?[0-9]+)\\%\\).*", 32);

        specialinvoke $r2.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("JANKY_FRAMES_COUNT", 1, $r3, 1, "janky_frames_count");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_COUNT> = $r2;

        $r4 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Janky frames: (\\d+) \\(([0-9]+[\\.]?[0-9]+)\\%\\).*", 32);

        specialinvoke $r4.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("JANKY_FRAMES_PRCNT", 2, $r5, 2, "janky_frames_percent");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_PRCNT> = $r4;

        $r6 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Janky frames \\(legacy\\): (\\d+) \\(([0-9]+[\\.]?[0-9]+)\\%\\).*", 32);

        specialinvoke $r6.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("JANKY_FRAMES_LEGACY_COUNT", 3, $r7, 1, "janky_frames_legacy_count");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_LEGACY_COUNT> = $r6;

        $r8 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Janky frames \\(legacy\\): (\\d+) \\(([0-9]+[\\.]?[0-9]+)\\%\\).*", 32);

        specialinvoke $r8.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("JANKY_FRAMES_LEGACY_PRCNT", 4, $r9, 2, "janky_frames_legacy_percent");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_LEGACY_PRCNT> = $r8;

        $r10 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*50th percentile: (\\d+)ms.*", 32);

        specialinvoke $r10.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("FRAME_TIME_50TH", 5, $r11, 1, "frame_render_time_percentile_50");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_50TH> = $r10;

        $r12 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r13 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*90th percentile: (\\d+)ms.*", 32);

        specialinvoke $r12.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("FRAME_TIME_90TH", 6, $r13, 1, "frame_render_time_percentile_90");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_90TH> = $r12;

        $r14 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*95th percentile: (\\d+)ms.*", 32);

        specialinvoke $r14.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("FRAME_TIME_95TH", 7, $r15, 1, "frame_render_time_percentile_95");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_95TH> = $r14;

        $r16 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*99th percentile: (\\d+)ms.*", 32);

        specialinvoke $r16.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("FRAME_TIME_99TH", 8, $r17, 1, "frame_render_time_percentile_99");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_99TH> = $r16;

        $r18 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number Missed Vsync: (\\d+).*", 32);

        specialinvoke $r18.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_MISSED_VSYNC", 9, $r19, 1, "missed_vsync");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_MISSED_VSYNC> = $r18;

        $r20 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r21 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number High input latency: (\\d+).*", 32);

        specialinvoke $r20.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_HIGH_INPUT_LATENCY", 10, $r21, 1, "high_input_latency");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_HIGH_INPUT_LATENCY> = $r20;

        $r22 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r23 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number Slow UI thread: (\\d+).*", 32);

        specialinvoke $r22.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_SLOW_UI_THREAD", 11, $r23, 1, "slow_ui_thread");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_UI_THREAD> = $r22;

        $r24 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r25 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number Slow bitmap uploads: (\\d+).*", 32);

        specialinvoke $r24.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_SLOW_BITMAP_UPLOADS", 12, $r25, 1, "slow_bmp_upload");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_BITMAP_UPLOADS> = $r24;

        $r26 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r27 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number Slow issue draw commands: (\\d+).*", 32);

        specialinvoke $r26.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_SLOW_DRAW", 13, $r27, 1, "slow_issue_draw_cmds");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_DRAW> = $r26;

        $r28 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r29 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number Frame deadline missed: (\\d+).*", 32);

        specialinvoke $r28.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_FRAME_DEADLINE_MISSED", 14, $r29, 1, "deadline_missed");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_FRAME_DEADLINE_MISSED> = $r28;

        $r30 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r31 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*Number Frame deadline missed \\(legacy\\): (\\d+).*", 32);

        specialinvoke $r30.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("NUM_FRAME_DEADLINE_MISSED_LEGACY", 15, $r31, 1, "deadline_missed_legacy");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_FRAME_DEADLINE_MISSED_LEGACY> = $r30;

        $r32 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*50th gpu percentile: (\\d+)ms.*", 32);

        specialinvoke $r32.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("GPU_FRAME_TIME_50TH", 16, $r33, 1, "gpu_frame_render_time_percentile_50");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_50TH> = $r32;

        $r34 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r35 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*90th gpu percentile: (\\d+)ms.*", 32);

        specialinvoke $r34.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("GPU_FRAME_TIME_90TH", 17, $r35, 1, "gpu_frame_render_time_percentile_90");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_90TH> = $r34;

        $r36 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r37 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*95th gpu percentile: (\\d+)ms.*", 32);

        specialinvoke $r36.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("GPU_FRAME_TIME_95TH", 18, $r37, 1, "gpu_frame_render_time_percentile_95");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_95TH> = $r36;

        $r38 = new androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric;

        $r39 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*99th gpu percentile: (\\d+)ms.*", 32);

        specialinvoke $r38.<androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: void <init>(java.lang.String,int,java.util.regex.Pattern,int,java.lang.String)>("GPU_FRAME_TIME_99TH", 19, $r39, 1, "gpu_frame_render_time_percentile_99");

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_99TH> = $r38;

        $r40 = newarray (androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric)[20];

        $r41 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric TOTAL_FRAMES>;

        $r40[0] = $r41;

        $r42 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_COUNT>;

        $r40[1] = $r42;

        $r43 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_PRCNT>;

        $r40[2] = $r43;

        $r44 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_LEGACY_COUNT>;

        $r40[3] = $r44;

        $r45 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric JANKY_FRAMES_LEGACY_PRCNT>;

        $r40[4] = $r45;

        $r46 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_50TH>;

        $r40[5] = $r46;

        $r47 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_90TH>;

        $r40[6] = $r47;

        $r48 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_95TH>;

        $r40[7] = $r48;

        $r49 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric FRAME_TIME_99TH>;

        $r40[8] = $r49;

        $r50 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_MISSED_VSYNC>;

        $r40[9] = $r50;

        $r51 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_HIGH_INPUT_LATENCY>;

        $r40[10] = $r51;

        $r52 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_UI_THREAD>;

        $r40[11] = $r52;

        $r53 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_BITMAP_UPLOADS>;

        $r40[12] = $r53;

        $r54 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_SLOW_DRAW>;

        $r40[13] = $r54;

        $r55 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_FRAME_DEADLINE_MISSED>;

        $r40[14] = $r55;

        $r56 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric NUM_FRAME_DEADLINE_MISSED_LEGACY>;

        $r40[15] = $r56;

        $r57 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_50TH>;

        $r40[16] = $r57;

        $r58 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_90TH>;

        $r40[17] = $r58;

        $r59 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_95TH>;

        $r40[18] = $r59;

        $r60 = <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric GPU_FRAME_TIME_99TH>;

        $r40[19] = $r60;

        <androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric: androidx.benchmark.macro.JankCollectionHelper$GfxInfoMetric[] $VALUES> = $r40;

        return;
    }

