androidx.compose.runtime.collection.MutableVectorKt
    private static final void checkIndex(java.util.List, int)
    {
        java.util.List $r0;
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds. The list has ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label2:
        return;
    }

    private static final void checkSubIndex(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1, i2;
        java.lang.IndexOutOfBoundsException $r1, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r8, $r14, $r22;
        java.lang.IllegalArgumentException $r15;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i0 <= i1 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Indices are out of order. fromIndex (");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is greater than toIndex (");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label1:
        if i0 >= 0 goto label2;

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex (");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is less than 0.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        if i1 <= i2 goto label3;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toIndex (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is more than than the list size (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label3:
        return;
    }

    public static final androidx.compose.runtime.collection.MutableVector MutableVector(int)
    {
        int i0;
        androidx.compose.runtime.collection.MutableVector $r0;
        java.lang.Object[] $r1;

        i0 := @parameter0: int;

        $r0 = new androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T?");

        $r1 = newarray (java.lang.Object)[i0];

        specialinvoke $r0.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r1, 0);

        return $r0;
    }

    public static androidx.compose.runtime.collection.MutableVector MutableVector$default(int, int, java.lang.Object)
    {
        java.lang.Object r0;
        int $i0, i1, $i2;
        androidx.compose.runtime.collection.MutableVector $r1;
        java.lang.Object[] $r2;

        i1 := @parameter0: int;

        $i2 := @parameter1: int;

        r0 := @parameter2: java.lang.Object;

        $i0 = $i2 & 1;

        if $i0 == 0 goto label1;

        i1 = 16;

     label1:
        $r1 = new androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T?");

        $r2 = newarray (java.lang.Object)[i1];

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r2, 0);

        return $r1;
    }

    public static final androidx.compose.runtime.collection.MutableVector MutableVector(int, kotlin.jvm.functions.Function1)
    {
        int i0, i1, i2;
        kotlin.jvm.functions.Function1 r0;
        java.lang.Object[] r1, r2, $r4;
        androidx.compose.runtime.collection.MutableVector $r3;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "init");

        i2 = 0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T");

        r2 = newarray (java.lang.Object)[i0];

     label1:
        if i2 >= i0 goto label2;

        i1 = i2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6 = interfaceinvoke r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r2[i1] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        r1 = r2;

        $r3 = new androidx.compose.runtime.collection.MutableVector;

        $r4 = (java.lang.Object[]) r1;

        specialinvoke $r3.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r4, i0);

        return $r3;
    }

    public static final androidx.compose.runtime.collection.MutableVector mutableVectorOf()
    {
        byte b0;
        androidx.compose.runtime.collection.MutableVector $r0;
        java.lang.Object[] $r1;

        b0 = 16;

        $r0 = new androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T?");

        $r1 = newarray (java.lang.Object)[b0];

        specialinvoke $r0.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r1, 0);

        return $r0;
    }

    public static final transient androidx.compose.runtime.collection.MutableVector mutableVectorOf(java.lang.Object[])
    {
        java.lang.Object[] r0;
        androidx.compose.runtime.collection.MutableVector $r1;
        int $i0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "elements");

        $r1 = new androidx.compose.runtime.collection.MutableVector;

        $i0 = lengthof r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>(r0, $i0);

        return $r1;
    }

    public static final void access$checkIndex(java.util.List, int)
    {
        java.util.List $r0;
        int i0;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void checkIndex(java.util.List,int)>($r0, i0);

        return;
    }

    public static final void access$checkSubIndex(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void checkSubIndex(java.util.List,int,int)>($r0, i0, i1);

        return;
    }

