androidx.webkit.internal.WebViewGlueCommunicator
<androidx.webkit.internal.WebViewGlueCommunicator: java.lang.String GLUE_FACTORY_PROVIDER_FETCHER_CLASS>
<androidx.webkit.internal.WebViewGlueCommunicator: java.lang.String GLUE_FACTORY_PROVIDER_FETCHER_METHOD>
    public static androidx.webkit.internal.WebViewProviderFactory getFactory()
    {
        androidx.webkit.internal.WebViewProviderFactory $r0;

        $r0 = <androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER: androidx.webkit.internal.WebViewProviderFactory INSTANCE>;

        return $r0;
    }

    public static androidx.webkit.internal.WebkitToCompatConverter getCompatConverter()
    {
        androidx.webkit.internal.WebkitToCompatConverter $r0;

        $r0 = <androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER: androidx.webkit.internal.WebkitToCompatConverter INSTANCE>;

        return $r0;
    }

    private static java.lang.reflect.InvocationHandler fetchGlueProviderFactoryImpl() throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.ClassNotFoundException, java.lang.NoSuchMethodException
    {
        java.lang.Class r0;
        java.lang.reflect.Method r1;
        java.lang.ClassLoader $r2;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.reflect.InvocationHandler $r6;

        $r2 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: java.lang.ClassLoader getWebViewClassLoader()>();

        r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.chromium.support_lib_glue.SupportLibReflectionUtil", 0, $r2);

        $r3 = newarray (java.lang.Class)[0];

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createWebViewProviderFactory", $r3);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

        $r6 = (java.lang.reflect.InvocationHandler) $r5;

        return $r6;
    }

    static androidx.webkit.internal.WebViewProviderFactory createGlueProviderFactory()
    {
        java.lang.reflect.InvocationHandler r0;
        int $i0;
        androidx.webkit.internal.WebViewProviderFactoryAdapter $r1;
        java.lang.Object $r2;
        org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface $r3;
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory $r4, $r6;
        java.lang.Throwable $r5, $r7, $r9, $r11, r13, r14, r15, r16;
        java.lang.RuntimeException $r8, $r10, $r12;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $r4 = new androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        specialinvoke $r4.<androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: void <init>()>();

        return $r4;

     label1:
        r0 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: java.lang.reflect.InvocationHandler fetchGlueProviderFactoryImpl()>();

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        r13 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r8;

     label4:
        $r9 := @caughtexception;

        r14 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r14);

        throw $r10;

     label5:
        $r5 := @caughtexception;

        r15 = $r5;

        $r6 = new androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        specialinvoke $r6.<androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: void <init>()>();

        return $r6;

     label6:
        $r11 := @caughtexception;

        r16 = $r11;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r16);

        throw $r12;

     label7:
        $r1 = new androidx.webkit.internal.WebViewProviderFactoryAdapter;

        $r2 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/WebViewProviderFactoryBoundaryInterface;", r0);

        $r3 = (org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface) $r2;

        specialinvoke $r1.<androidx.webkit.internal.WebViewProviderFactoryAdapter: void <init>(org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface)>($r3);

        return $r1;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.ClassNotFoundException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label1 to label2 with label6;
    }

    public static java.lang.ClassLoader getWebViewClassLoader()
    {
        int $i0;
        java.lang.Object $r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2, $r3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r3 = staticinvoke <android.webkit.WebView: java.lang.ClassLoader getWebViewClassLoader()>();

        return $r3;

     label1:
        $r0 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: java.lang.Object getWebViewProviderFactory()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    private static java.lang.Object getWebViewProviderFactory()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4, $r6, $r8, r11, r12, r13;
        java.lang.RuntimeException $r5, $r7, $r9;
        java.lang.reflect.Method r10;

     label1:
        $r1 = class "Landroid/webkit/WebView;";

        $r0 = newarray (java.lang.Class)[0];

        r10 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getFactory", $r0);

        virtualinvoke r10.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

     label2:
        return $r3;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);

        throw $r9;

     label4:
        $r4 := @caughtexception;

        r12 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        throw $r5;

     label5:
        $r6 := @caughtexception;

        r13 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r7;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    private void <init>()
    {
        androidx.webkit.internal.WebViewGlueCommunicator r0;

        r0 := @this: androidx.webkit.internal.WebViewGlueCommunicator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER
<androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER: androidx.webkit.internal.WebkitToCompatConverter INSTANCE>
    private void <init>()
    {
        androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER r0;

        r0 := @this: androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.webkit.internal.WebkitToCompatConverter $r0;
        androidx.webkit.internal.WebViewProviderFactory $r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;

        $r0 = new androidx.webkit.internal.WebkitToCompatConverter;

        $r1 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebViewProviderFactory getFactory()>();

        $r2 = interfaceinvoke $r1.<androidx.webkit.internal.WebViewProviderFactory: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter()>();

        specialinvoke $r0.<androidx.webkit.internal.WebkitToCompatConverter: void <init>(org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface)>($r2);

        <androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER: androidx.webkit.internal.WebkitToCompatConverter INSTANCE> = $r0;

        return;
    }

androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER
<androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER: androidx.webkit.internal.WebViewProviderFactory INSTANCE>
    private void <init>()
    {
        androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER r0;

        r0 := @this: androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.webkit.internal.WebViewProviderFactory $r0;

        $r0 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebViewProviderFactory createGlueProviderFactory()>();

        <androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER: androidx.webkit.internal.WebViewProviderFactory INSTANCE> = $r0;

        return;
    }

