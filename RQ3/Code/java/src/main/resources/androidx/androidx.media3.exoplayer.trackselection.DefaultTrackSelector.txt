androidx.media3.exoplayer.trackselection.DefaultTrackSelector
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.String TAG>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.String AUDIO_CHANNEL_COUNT_CONSTRAINTS_WARN_MESSAGE>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int SELECTION_ELIGIBILITY_NO>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int SELECTION_ELIGIBILITY_FIXED>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int SELECTION_ELIGIBILITY_ADAPTIVE>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: float FRACTION_TO_CONSIDER_FULLSCREEN>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering FORMAT_VALUE_ORDERING>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering NO_ORDER>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.content.Context context>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory trackSelectionFactory>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean deviceIsTV>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.common.AudioAttributes audioAttributes>
    public void <init>()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory $r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r2 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT>;

        $r1 = new androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory;

        specialinvoke $r1.<androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)>($r2, $r1);

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        android.content.Context r1;
        androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: android.content.Context;

        $r2 = new androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory;

        specialinvoke $r2.<androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(android.content.Context,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)>(r1, $r2);

        return;
    }

    public void <init>(android.content.Context, androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        android.content.Context r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory;

        $r3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getDefaults(android.content.Context)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(android.content.Context,androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)>(r1, $r3, r2);

        return;
    }

    public void <init>(android.content.Context, androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        android.content.Context r1;
        androidx.media3.common.TrackSelectionParameters r2;
        androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.common.TrackSelectionParameters;

        $r3 = new androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory;

        specialinvoke $r3.<androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(android.content.Context,androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)>(r1, r2, $r3);

        return;
    }

    public void <init>(androidx.media3.common.TrackSelectionParameters, androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory,android.content.Context)>(r1, r2, null);

        return;
    }

    public void <init>(android.content.Context, androidx.media3.common.TrackSelectionParameters, androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        android.content.Context r1;
        androidx.media3.common.TrackSelectionParameters r2;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.common.TrackSelectionParameters;

        r3 := @parameter2: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory,android.content.Context)>(r2, r3, r1);

        return;
    }

    private void <init>(androidx.media3.common.TrackSelectionParameters, androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory, android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory r2;
        android.content.Context r3, $r12;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r4, $r8, $r10, $r13, $r16;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r6, $r7;
        int $i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 $r9;
        androidx.media3.common.AudioAttributes $r14;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory;

        r3 := @parameter2: android.content.Context;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock> = $r5;

        if r3 == null goto label01;

        $r12 = virtualinvoke r3.<android.content.Context: android.content.Context getApplicationContext()>();

        goto label02;

     label01:
        $r12 = null;

     label02:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.content.Context context> = $r12;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory trackSelectionFactory> = r2;

        $z0 = r1 instanceof androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        if $z0 == 0 goto label03;

        $r10 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) r1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters> = $r10;

        goto label06;

     label03:
        if r3 != null goto label04;

        $r13 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT>;

        goto label05;

     label04:
        $r13 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getDefaults(android.content.Context)>(r3);

     label05:
        r4 = $r13;

        $r6 = virtualinvoke r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder buildUpon()>();

        $r7 = virtualinvoke $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder set(androidx.media3.common.TrackSelectionParameters)>(r1);

        $r8 = virtualinvoke $r7.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters> = $r8;

     label06:
        $r14 = <androidx.media3.common.AudioAttributes: androidx.media3.common.AudioAttributes DEFAULT>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.common.AudioAttributes audioAttributes> = $r14;

        if r3 == null goto label07;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean isTv(android.content.Context)>(r3);

        if $z1 == 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean deviceIsTV> = $z2;

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean deviceIsTV>;

        if $z3 != 0 goto label09;

        if r3 == null goto label09;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 32 goto label09;

        $r9 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 tryCreateInstance(android.content.Context)>(r3);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer> = $r9;

     label09:
        $r16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z4 = $r16.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z4 == 0 goto label10;

        if r3 != null goto label10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DefaultTrackSelector", "Audio channel count constraints cannot be applied without reference to Context. Build the track selector instance with one of the non-deprecated constructors that take a Context argument.");

     label10:
        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        int $i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 32 goto label2;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        virtualinvoke $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: void release()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        specialinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector: void release()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getParameters()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        java.lang.Object r1, $r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        exitmonitor r1;

        return $r3;
    }

    public boolean isSetParametersSupported()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        return 1;
    }

    public void setParameters(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r2, $r4, $r6;
        boolean $z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r3, $r5;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        $z0 = r1 instanceof androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        if $z0 == 0 goto label1;

        $r6 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) r1;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void setParametersInternal(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>($r6);

     label1:
        $r3 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getParameters()>();

        specialinvoke $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)>($r4, null);

        $r5 = virtualinvoke $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder set(androidx.media3.common.TrackSelectionParameters)>(r1);

        r2 = virtualinvoke $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void setParametersInternal(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r2);

        return;
    }

    public void setAudioAttributes(androidx.media3.common.AudioAttributes)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.common.AudioAttributes r1, $r5;
        boolean z0, $z1, $z2;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.common.AudioAttributes;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.common.AudioAttributes audioAttributes>;

        $z1 = virtualinvoke $r5.<androidx.media3.common.AudioAttributes: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.common.AudioAttributes audioAttributes> = r1;

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        if z0 == 0 goto label8;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void maybeInvalidateForAudioChannelCountConstraints()>();

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setParameters(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r2 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void setParametersInternal(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>($r2);

        return;
    }

    public void setParameters(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r2 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void setParametersInternal(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>($r2);

        return;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder buildUponParameters()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getParameters()>();

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder buildUpon()>();

        return $r2;
    }

    private void setParametersInternal(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1, $r6;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        android.content.Context $r7;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z1 = virtualinvoke $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters> = r1;

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        if z0 == 0 goto label9;

        $z2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z2 == 0 goto label8;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.content.Context context>;

        if $r7 != null goto label8;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DefaultTrackSelector", "Audio channel count constraints cannot be applied without reference to Context. Build the track selector instance with one of the non-deprecated constructors that take a Context argument.");

     label8:
        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void invalidate()>();

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected final android.util.Pair selectTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], int[], androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.common.Timeline) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        int[] r3;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r4;
        androidx.media3.common.Timeline r5;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r6;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object $r7, $r20, r23;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory $r8;
        androidx.media3.exoplayer.upstream.BandwidthMeter $r9;
        android.util.Pair $r10;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r12;
        com.google.common.collect.ImmutableSet $r13, $r15;
        java.lang.Integer $r14, $r16;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 $r17, $r18;
        android.os.Looper $r19, $r21;
        java.lang.Throwable $r22, r24;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] r25;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r26;
        androidx.media3.exoplayer.RendererConfiguration[] r27;
        androidx.media3.exoplayer.RendererConfiguration $r28;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter1: int[][][];

        r3 := @parameter2: int[];

        r4 := @parameter3: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r5 := @parameter4: androidx.media3.common.Timeline;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r23 = $r7;

        entermonitor $r7;

     label01:
        r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z2 = r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z2 == 0 goto label02;

        $i3 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i3 < 32 goto label02;

        $r17 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        if $r17 == null goto label02;

        $r18 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $r19 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r20 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r19);

        $r21 = (android.os.Looper) $r20;

        virtualinvoke $r18.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: void ensureInitialized(androidx.media3.exoplayer.trackselection.DefaultTrackSelector,android.os.Looper)>(r0, $r21);

     label02:
        exitmonitor r23;

     label03:
        goto label06;

     label04:
        $r22 := @caughtexception;

        r24 = $r22;

        exitmonitor r23;

     label05:
        throw r24;

     label06:
        i4 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        r25 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] selectAllTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r1, r2, r3, r6);

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void applyTrackSelectionOverrides(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[])>(r1, r6, r25);

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void applyLegacyRendererOverrides(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[])>(r1, r6, r25);

        i5 = 0;

     label07:
        if i5 >= i4 goto label10;

        i6 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i5);

        $z6 = virtualinvoke r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean getRendererDisabled(int)>(i5);

        if $z6 != 0 goto label08;

        $r15 = r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableSet disabledTrackTypes>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $z7 = virtualinvoke $r15.<com.google.common.collect.ImmutableSet: boolean contains(java.lang.Object)>($r16);

        if $z7 == 0 goto label09;

     label08:
        r25[i5] = null;

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory trackSelectionFactory>;

        $r9 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.upstream.BandwidthMeter getBandwidthMeter()>();

        r26 = interfaceinvoke $r8.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory: androidx.media3.exoplayer.trackselection.ExoTrackSelection[] createTrackSelections(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[],androidx.media3.exoplayer.upstream.BandwidthMeter,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline)>(r25, $r9, r4, r5);

        r27 = newarray (androidx.media3.exoplayer.RendererConfiguration)[i4];

        i7 = 0;

     label11:
        if i7 >= i4 goto label20;

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i7);

        $z4 = virtualinvoke r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean getRendererDisabled(int)>(i7);

        if $z4 != 0 goto label12;

        $r13 = r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableSet disabledTrackTypes>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z5 = virtualinvoke $r13.<com.google.common.collect.ImmutableSet: boolean contains(java.lang.Object)>($r14);

        if $z5 == 0 goto label13;

     label12:
        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        z0 = $z8;

        if z0 != 0 goto label16;

        $i2 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i7);

        if $i2 == -2 goto label15;

        $r12 = r26[i7];

        if $r12 == null goto label16;

     label15:
        $z9 = 1;

        goto label17;

     label16:
        $z9 = 0;

     label17:
        z1 = $z9;

        $i1 = i7;

        if z1 == 0 goto label18;

        $r28 = <androidx.media3.exoplayer.RendererConfiguration: androidx.media3.exoplayer.RendererConfiguration DEFAULT>;

        goto label19;

     label18:
        $r28 = null;

     label19:
        r27[$i1] = $r28;

        i7 = i7 + 1;

        goto label11;

     label20:
        $z3 = r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        if $z3 == 0 goto label21;

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void maybeConfigureRenderersForTunneling(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.RendererConfiguration[],androidx.media3.exoplayer.trackselection.ExoTrackSelection[])>(r1, r2, r27, r26);

     label21:
        $r10 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r27, r26);

        return $r10;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    protected androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] selectAllTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], int[], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        int[] r3, $r14;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r4;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] r5;
        android.util.Pair r6, r7, r9;
        java.lang.String r8, $r32;
        java.lang.Object $r10, $r12, $r20, $r22, $r24, $r26, $r28, $r30;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition $r11, $r13, $r19, $r23, $r27, $r31;
        androidx.media3.common.TrackGroup $r15;
        androidx.media3.common.Format $r16;
        androidx.media3.exoplayer.source.TrackGroupArray $r17;
        int[][] $r18;
        java.lang.Integer $r21, $r25, $r29;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter1: int[][][];

        r3 := @parameter2: int[];

        r4 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        r5 = newarray (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition)[i0];

        r6 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.util.Pair selectVideoTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r1, r2, r3, r4);

        if r6 == null goto label1;

        $r28 = r6.<android.util.Pair: java.lang.Object second>;

        $r29 = (java.lang.Integer) $r28;

        $i5 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        $r30 = r6.<android.util.Pair: java.lang.Object first>;

        $r31 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition) $r30;

        r5[$i5] = $r31;

     label1:
        r7 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.util.Pair selectAudioTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r1, r2, r3, r4);

        if r7 == null goto label2;

        $r24 = r7.<android.util.Pair: java.lang.Object second>;

        $r25 = (java.lang.Integer) $r24;

        $i4 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        $r26 = r7.<android.util.Pair: java.lang.Object first>;

        $r27 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition) $r26;

        r5[$i4] = $r27;

     label2:
        if r7 != null goto label3;

        $r32 = null;

        goto label4;

     label3:
        $r10 = r7.<android.util.Pair: java.lang.Object first>;

        $r11 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition) $r10;

        $r15 = $r11.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: androidx.media3.common.TrackGroup group>;

        $r12 = r7.<android.util.Pair: java.lang.Object first>;

        $r13 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition) $r12;

        $r14 = $r13.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: int[] tracks>;

        $i2 = $r14[0];

        $r16 = virtualinvoke $r15.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>($i2);

        $r32 = $r16.<androidx.media3.common.Format: java.lang.String language>;

     label4:
        r8 = $r32;

        r9 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.util.Pair selectTextTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String)>(r1, r2, r4, r8);

        if r9 == null goto label5;

        $r20 = r9.<android.util.Pair: java.lang.Object second>;

        $r21 = (java.lang.Integer) $r20;

        $i3 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r22 = r9.<android.util.Pair: java.lang.Object first>;

        $r23 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition) $r22;

        r5[$i3] = $r23;

     label5:
        i6 = 0;

     label6:
        if i6 >= i0 goto label8;

        i1 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i6);

        if i1 == 2 goto label7;

        if i1 == 1 goto label7;

        if i1 == 3 goto label7;

        $r17 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i6);

        $r18 = r2[i6];

        $r19 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition selectOtherTrack(int,androidx.media3.exoplayer.source.TrackGroupArray,int[][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(i1, $r17, $r18, r4);

        r5[i6] = $r19;

     label7:
        i6 = i6 + 1;

        goto label6;

     label8:
        return r5;
    }

    protected android.util.Pair selectVideoTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], int[], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        int[] r3;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r4;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory $r5;
        java.util.Comparator $r6;
        android.util.Pair $r7;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter1: int[][][];

        r3 := @parameter2: int[];

        r4 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        $r5 = dynamicinvoke "create" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[])>(r4, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.util.List __METHODTYPE__(int,androidx.media3.common.TrackGroup,int[]), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.util.List lambda$selectVideoTrack$2(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],int,androidx.media3.common.TrackGroup,int[])>, methodtype: java.util.List __METHODTYPE__(int,androidx.media3.common.TrackGroup,int[]));

        $r6 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareSelections(java.util.List,java.util.List)>, methodtype: int __METHODTYPE__(java.util.List,java.util.List));

        $r7 = specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.util.Pair selectTracksForType(int,androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory,java.util.Comparator)>(2, r1, r2, $r5, $r6);

        return $r7;
    }

    protected android.util.Pair selectAudioTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], int[], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        int[] r3;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r4;
        int $i0, $i1, $i2, i3;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory $r5;
        java.util.Comparator $r6;
        android.util.Pair $r7;
        androidx.media3.exoplayer.source.TrackGroupArray $r8;
        boolean z0, z1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter1: int[][][];

        r3 := @parameter2: int[];

        r4 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        z0 = 0;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        if i3 >= $i0 goto label3;

        $i1 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i3);

        if 2 != $i1 goto label2;

        $r8 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i3);

        $i2 = $r8.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if $i2 <= 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        z1 = z0;

        $r5 = dynamicinvoke "create" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory (androidx.media3.exoplayer.trackselection.DefaultTrackSelector,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,boolean)>(r0, r4, z1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.util.List __METHODTYPE__(int,androidx.media3.common.TrackGroup,int[]), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.util.List lambda$selectAudioTrack$3(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,boolean,int,androidx.media3.common.TrackGroup,int[])>, methodtype: java.util.List __METHODTYPE__(int,androidx.media3.common.TrackGroup,int[]));

        $r6 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int compareSelections(java.util.List,java.util.List)>, methodtype: int __METHODTYPE__(java.util.List,java.util.List));

        $r7 = specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.util.Pair selectTracksForType(int,androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory,java.util.Comparator)>(1, r1, r2, $r5, $r6);

        return $r7;
    }

    private boolean isAudioFormatWithinAudioChannelCountConstraints(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.common.Format r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r14;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1, $i2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        androidx.media3.common.AudioAttributes $r10;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.common.Format;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z0 = $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z0 == 0 goto label3;

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean deviceIsTV>;

        if $z1 != 0 goto label3;

        $i0 = r1.<androidx.media3.common.Format: int channelCount>;

        if $i0 <= 2 goto label3;

        $z2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isDolbyAudio(androidx.media3.common.Format)>(r1);

        if $z2 == 0 goto label2;

        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 < 32 goto label3;

        $r12 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        if $r12 == null goto label3;

        $r13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $z7 = virtualinvoke $r13.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean isSpatializationSupported()>();

        if $z7 == 0 goto label3;

     label2:
        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 32 goto label4;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        if $r6 == null goto label4;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $z3 = virtualinvoke $r7.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean isSpatializationSupported()>();

        if $z3 == 0 goto label4;

        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $z4 = virtualinvoke $r8.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean isAvailable()>();

        if $z4 == 0 goto label4;

        $r9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $z5 = virtualinvoke $r9.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean isEnabled()>();

        if $z5 == 0 goto label4;

        $r11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $r10 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.common.AudioAttributes audioAttributes>;

        $z6 = virtualinvoke $r11.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean canBeSpatialized(androidx.media3.common.AudioAttributes,androidx.media3.common.Format)>($r10, r1);

        if $z6 == 0 goto label4;

     label3:
        $z8 = 1;

        goto label5;

     label4:
        $z8 = 0;

     label5:
        exitmonitor r2;

     label6:
        return $z8;

     label7:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected android.util.Pair selectTextTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, java.lang.String) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r3;
        java.lang.String r4;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory $r5;
        java.util.Comparator $r6;
        android.util.Pair $r7;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter1: int[][][];

        r3 := @parameter2: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r4 := @parameter3: java.lang.String;

        $r5 = dynamicinvoke "create" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String)>(r3, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.util.List __METHODTYPE__(int,androidx.media3.common.TrackGroup,int[]), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.util.List lambda$selectTextTrack$4(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String,int,androidx.media3.common.TrackGroup,int[])>, methodtype: java.util.List __METHODTYPE__(int,androidx.media3.common.TrackGroup,int[]));

        $r6 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int compareSelections(java.util.List,java.util.List)>, methodtype: int __METHODTYPE__(java.util.List,java.util.List));

        $r7 = specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.util.Pair selectTracksForType(int,androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory,java.util.Comparator)>(3, r1, r2, $r5, $r6);

        return $r7;
    }

    protected androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition selectOtherTrack(int, androidx.media3.exoplayer.source.TrackGroupArray, int[][], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        int[][] r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r3;
        androidx.media3.common.TrackGroup r4, r10;
        int[] r5, $r8;
        androidx.media3.common.Format r6;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore r7, $r9, r11;
        boolean $z0, $z1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition $r12;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter2: int[][];

        r3 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r10 = null;

        i6 = 0;

        r11 = null;

        i7 = 0;

     label1:
        $i1 = r1.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i7 >= $i1 goto label6;

        r4 = virtualinvoke r1.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i7);

        r5 = r2[i7];

        i8 = 0;

     label2:
        $i2 = r4.<androidx.media3.common.TrackGroup: int length>;

        if i8 >= $i2 goto label5;

        $i3 = r5[i8];

        $z0 = r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        $z1 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>($i3, $z0);

        if $z1 == 0 goto label4;

        r6 = virtualinvoke r4.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i8);

        $r9 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore;

        $i4 = r5[i8];

        specialinvoke $r9.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: void <init>(androidx.media3.common.Format,int)>(r6, $i4);

        r7 = $r9;

        if r11 == null goto label3;

        $i5 = virtualinvoke r7.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore)>(r11);

        if $i5 <= 0 goto label4;

     label3:
        r10 = r4;

        i6 = i8;

        r11 = r7;

     label4:
        i8 = i8 + 1;

        goto label2;

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        if r10 != null goto label7;

        $r12 = null;

        goto label8;

     label7:
        $r12 = new androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition;

        $r8 = newarray (int)[1];

        $r8[0] = i6;

        specialinvoke $r12.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: void <init>(androidx.media3.common.TrackGroup,int[])>(r10, $r8);

     label8:
        return $r12;
    }

    private android.util.Pair selectTracksForType(int, androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory, java.util.Comparator)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory r3;
        java.util.Comparator r4;
        java.util.ArrayList r5, r30, r31;
        androidx.media3.common.TrackGroup r6, $r16;
        int[] r7, r28;
        java.util.List r8, r27, r33, r34;
        boolean[] r9;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo r10, r11, $r20, r29;
        boolean $z0, $z1, $z4;
        java.lang.Object $r13, $r14, $r19, $r22, $r24, r26;
        java.lang.Integer $r17;
        android.util.Pair $r18;
        int[][] $r21;
        androidx.media3.exoplayer.source.TrackGroupArray r25;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition r32;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter2: int[][][];

        r3 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory;

        r4 := @parameter4: java.util.Comparator;

        r30 = new java.util.ArrayList;

        specialinvoke r30.<java.util.ArrayList: void <init>()>();

        r5 = r30;

        i1 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        i13 = 0;

     label01:
        if i13 >= i1 goto label12;

        $i7 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i13);

        if i0 != $i7 goto label11;

        r25 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i13);

        i14 = 0;

     label02:
        $i8 = r25.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i14 >= $i8 goto label11;

        r6 = virtualinvoke r25.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i14);

        $r21 = r2[i13];

        r7 = $r21[i14];

        r8 = interfaceinvoke r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory: java.util.List create(int,androidx.media3.common.TrackGroup,int[])>(i13, r6, r7);

        $i9 = r6.<androidx.media3.common.TrackGroup: int length>;

        r9 = newarray (boolean)[$i9];

        i15 = 0;

     label03:
        $i10 = r6.<androidx.media3.common.TrackGroup: int length>;

        if i15 >= $i10 goto label10;

        $r22 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i15);

        r10 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo) $r22;

        i2 = virtualinvoke r10.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int getSelectionEligibility()>();

        $z1 = r9[i15];

        if $z1 != 0 goto label09;

        if i2 != 0 goto label04;

        goto label09;

     label04:
        if i2 != 1 goto label05;

        r26 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r10);

        goto label08;

     label05:
        r31 = new java.util.ArrayList;

        specialinvoke r31.<java.util.ArrayList: void <init>()>();

        r26 = r31;

        r33 = (java.util.List) r26;

        interfaceinvoke r33.<java.util.List: boolean add(java.lang.Object)>(r10);

        i16 = i15 + 1;

     label06:
        $i11 = r6.<androidx.media3.common.TrackGroup: int length>;

        if i16 >= $i11 goto label08;

        $r24 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i16);

        r11 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo) $r24;

        $i12 = virtualinvoke r11.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int getSelectionEligibility()>();

        if $i12 != 2 goto label07;

        $z4 = virtualinvoke r10.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo)>(r11);

        if $z4 == 0 goto label07;

        r34 = (java.util.List) r26;

        interfaceinvoke r34.<java.util.List: boolean add(java.lang.Object)>(r11);

        r9[i16] = 1;

     label07:
        i16 = i16 + 1;

        goto label06;

     label08:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r26);

     label09:
        i15 = i15 + 1;

        goto label03;

     label10:
        i14 = i14 + 1;

        goto label02;

     label11:
        i13 = i13 + 1;

        goto label01;

     label12:
        $z0 = virtualinvoke r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label13;

        return null;

     label13:
        $r13 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>(r5, r4);

        r27 = (java.util.List) $r13;

        $i3 = interfaceinvoke r27.<java.util.List: int size()>();

        r28 = newarray (int)[$i3];

        i17 = 0;

     label14:
        $i4 = interfaceinvoke r27.<java.util.List: int size()>();

        if i17 >= $i4 goto label15;

        $r19 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(i17);

        $r20 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo) $r19;

        $i6 = $r20.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int trackIndex>;

        r28[i17] = $i6;

        i17 = i17 + 1;

        goto label14;

     label15:
        $r14 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(0);

        r29 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo) $r14;

        r32 = new androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition;

        $r16 = r29.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: androidx.media3.common.TrackGroup trackGroup>;

        specialinvoke r32.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: void <init>(androidx.media3.common.TrackGroup,int[])>($r16, r28);

        $i5 = r29.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int rendererIndex>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r18 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r32, $r17);

        return $r18;
    }

    private void maybeInvalidateForAudioChannelCountConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r4;
        int $i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 $r5, $r6;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z1 = $r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z1 == 0 goto label2;

        $z2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean deviceIsTV>;

        if $z2 != 0 goto label2;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 32 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer>;

        $z3 = virtualinvoke $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean isSpatializationSupported()>();

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        if z0 == 0 goto label8;

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void invalidate()>();

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void applyTrackSelectionOverrides(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, androidx.media3.common.TrackSelectionParameters, androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[])
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] r2;
        int i0, i1, $i2, i3, i4;
        java.util.HashMap r3, $r5;
        androidx.media3.common.TrackSelectionOverride r4;
        androidx.media3.exoplayer.source.TrackGroupArray $r6, $r10, $r16;
        java.lang.Integer $r7;
        java.lang.Object $r8;
        com.google.common.collect.ImmutableList $r9, $r13;
        boolean $z0;
        androidx.media3.common.TrackGroup $r11, $r14;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition $r12, r17;
        int[] $r15;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r1 := @parameter1: androidx.media3.common.TrackSelectionParameters;

        r2 := @parameter2: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[];

        i0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r3 = $r5;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r16 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i3);

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void collectTrackSelectionOverrides(androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.common.TrackSelectionParameters,java.util.Map)>($r16, r1, r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getUnmappedTrackGroups()>();

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void collectTrackSelectionOverrides(androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.common.TrackSelectionParameters,java.util.Map)>($r6, r1, r3);

        i4 = 0;

     label3:
        if i4 >= i0 goto label8;

        i1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r4 = (androidx.media3.common.TrackSelectionOverride) $r8;

        if r4 != null goto label4;

        goto label7;

     label4:
        $r9 = r4.<androidx.media3.common.TrackSelectionOverride: com.google.common.collect.ImmutableList trackIndices>;

        $z0 = virtualinvoke $r9.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r10 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i4);

        $r11 = r4.<androidx.media3.common.TrackSelectionOverride: androidx.media3.common.TrackGroup mediaTrackGroup>;

        $i2 = virtualinvoke $r10.<androidx.media3.exoplayer.source.TrackGroupArray: int indexOf(androidx.media3.common.TrackGroup)>($r11);

        if $i2 == -1 goto label5;

        $r12 = new androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition;

        $r14 = r4.<androidx.media3.common.TrackSelectionOverride: androidx.media3.common.TrackGroup mediaTrackGroup>;

        $r13 = r4.<androidx.media3.common.TrackSelectionOverride: com.google.common.collect.ImmutableList trackIndices>;

        $r15 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>($r13);

        specialinvoke $r12.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: void <init>(androidx.media3.common.TrackGroup,int[])>($r14, $r15);

        r17 = $r12;

        goto label6;

     label5:
        r17 = null;

     label6:
        r2[i4] = r17;

     label7:
        i4 = i4 + 1;

        goto label3;

     label8:
        return;
    }

    private static void collectTrackSelectionOverrides(androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.common.TrackSelectionParameters, java.util.Map)
    {
        androidx.media3.exoplayer.source.TrackGroupArray r0;
        androidx.media3.common.TrackSelectionParameters r1;
        java.util.Map r2;
        androidx.media3.common.TrackGroup r3;
        androidx.media3.common.TrackSelectionOverride r4, r5;
        int $i0, $i1, $i2, i3;
        com.google.common.collect.ImmutableMap $r6;
        java.lang.Object $r7, $r9;
        java.lang.Integer $r8, $r10;
        com.google.common.collect.ImmutableList $r12, $r13;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.media3.exoplayer.source.TrackGroupArray;

        r1 := @parameter1: androidx.media3.common.TrackSelectionParameters;

        r2 := @parameter2: java.util.Map;

        i3 = 0;

     label1:
        $i0 = r0.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i3 >= $i0 goto label5;

        r3 = virtualinvoke r0.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i3);

        $r6 = r1.<androidx.media3.common.TrackSelectionParameters: com.google.common.collect.ImmutableMap overrides>;

        $r7 = virtualinvoke $r6.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (androidx.media3.common.TrackSelectionOverride) $r7;

        if r4 != null goto label2;

        goto label4;

     label2:
        $i1 = virtualinvoke r4.<androidx.media3.common.TrackSelectionOverride: int getType()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r5 = (androidx.media3.common.TrackSelectionOverride) $r9;

        if r5 == null goto label3;

        $r12 = r5.<androidx.media3.common.TrackSelectionOverride: com.google.common.collect.ImmutableList trackIndices>;

        $z0 = virtualinvoke $r12.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r13 = r4.<androidx.media3.common.TrackSelectionOverride: com.google.common.collect.ImmutableList trackIndices>;

        $z1 = virtualinvoke $r13.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z1 != 0 goto label4;

     label3:
        $i2 = virtualinvoke r4.<androidx.media3.common.TrackSelectionOverride: int getType()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    private static void applyLegacyRendererOverrides(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[])
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] r2;
        int i0, $i1, $i2, $i3, i4;
        androidx.media3.exoplayer.source.TrackGroupArray r3;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r4;
        boolean $z0;
        int[] $r5, $r8;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition $r6, r9;
        androidx.media3.common.TrackGroup $r7;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r1 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r2 := @parameter2: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[];

        i0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        r3 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i4);

        $z0 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean hasSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray)>(i4, r3);

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r4 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride getSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray)>(i4, r3);

        if r4 == null goto label3;

        $r5 = r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        $i1 = lengthof $r5;

        if $i1 == 0 goto label3;

        $r6 = new androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition;

        $i2 = r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex>;

        $r7 = virtualinvoke r3.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>($i2);

        $r8 = r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        $i3 = r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type>;

        specialinvoke $r6.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: void <init>(androidx.media3.common.TrackGroup,int[],int)>($r7, $r8, $i3);

        r9 = $r6;

        goto label4;

     label3:
        r9 = null;

     label4:
        r2[i4] = r9;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        return;
    }

    private static void maybeConfigureRenderersForTunneling(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], androidx.media3.exoplayer.RendererConfiguration[], androidx.media3.exoplayer.trackselection.ExoTrackSelection[])
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int[][][] r1;
        androidx.media3.exoplayer.RendererConfiguration[] r2;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r3;
        int i0, $i1, i2, i3, i4;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r4;
        androidx.media3.exoplayer.RendererConfiguration $r5, r8;
        int[][] $r6;
        androidx.media3.exoplayer.source.TrackGroupArray $r7;
        boolean $z0, z1, $z2, $z3, z4;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r1 := @parameter1: int[][][];

        r2 := @parameter2: androidx.media3.exoplayer.RendererConfiguration[];

        r3 := @parameter3: androidx.media3.exoplayer.trackselection.ExoTrackSelection[];

        i2 = -1;

        i3 = -1;

        z1 = 1;

        i4 = 0;

     label01:
        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        if i4 >= $i1 goto label07;

        i0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)>(i4);

        r4 = r3[i4];

        if i0 == 1 goto label02;

        if i0 != 2 goto label06;

     label02:
        if r4 == null goto label06;

        $r6 = r1[i4];

        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i4);

        $z0 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean rendererSupportsTunneling(int[][],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.ExoTrackSelection)>($r6, $r7, r4);

        if $z0 == 0 goto label06;

        if i0 != 1 goto label04;

        if i2 == -1 goto label03;

        z1 = 0;

        goto label07;

     label03:
        i2 = i4;

        goto label06;

     label04:
        if i3 == -1 goto label05;

        z1 = 0;

        goto label07;

     label05:
        i3 = i4;

     label06:
        i4 = i4 + 1;

        goto label01;

     label07:
        $z2 = z1;

        if i2 == -1 goto label08;

        if i3 == -1 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z4 = $z2 & $z3;

        if z4 == 0 goto label10;

        $r5 = new androidx.media3.exoplayer.RendererConfiguration;

        specialinvoke $r5.<androidx.media3.exoplayer.RendererConfiguration: void <init>(boolean)>(1);

        r8 = $r5;

        r2[i2] = r8;

        r2[i3] = r8;

     label10:
        return;
    }

    private static boolean rendererSupportsTunneling(int[][], androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.trackselection.ExoTrackSelection)
    {
        int[][] r0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r2;
        int i0, i1, $i2, $i3, $i4, i5;
        androidx.media3.common.TrackGroup $r3;
        int[] $r4;

        r0 := @parameter0: int[][];

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter2: androidx.media3.exoplayer.trackselection.ExoTrackSelection;

        if r2 != null goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke r2.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.TrackGroup getTrackGroup()>();

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.source.TrackGroupArray: int indexOf(androidx.media3.common.TrackGroup)>($r3);

        i5 = 0;

     label2:
        $i2 = interfaceinvoke r2.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        if i5 >= $i2 goto label4;

        $r4 = r0[i0];

        $i3 = interfaceinvoke r2.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>(i5);

        i1 = $r4[$i3];

        $i4 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getTunnelingSupport(int)>(i1);

        if $i4 == 32 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    protected static boolean isSupported(int, boolean)
    {
        int i0, i1;
        boolean z0, $z1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getFormatSupport(int)>(i0);

        if i1 == 4 goto label1;

        if z0 == 0 goto label2;

        if i1 != 3 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected static java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r0, "und");

        if $z1 == 0 goto label2;

     label1:
        $r1 = null;

        goto label3;

     label2:
        $r1 = r0;

     label3:
        return $r1;
    }

    protected static int getFormatLanguageScore(androidx.media3.common.Format, java.lang.String, boolean)
    {
        androidx.media3.common.Format r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String r1, r2, r3, $r4, $r7, r8, r9;
        java.lang.String[] $r5, $r6;
        byte $b0;

        r0 := @parameter0: androidx.media3.common.Format;

        r8 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z1 != 0 goto label1;

        $r7 = r0.<androidx.media3.common.Format: java.lang.String language>;

        $z5 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z5 == 0 goto label1;

        return 4;

     label1:
        r9 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String)>(r8);

        $r4 = r0.<androidx.media3.common.Format: java.lang.String language>;

        r1 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String)>($r4);

        if r1 == null goto label2;

        if r9 != null goto label5;

     label2:
        if z0 == 0 goto label3;

        if r1 != null goto label3;

        $b0 = 1;

        goto label4;

     label3:
        $b0 = 0;

     label4:
        return $b0;

     label5:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r9);

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z3 == 0 goto label7;

     label6:
        return 3;

     label7:
        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitAtFirst(java.lang.String,java.lang.String)>(r1, "-");

        r2 = $r5[0];

        $r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitAtFirst(java.lang.String,java.lang.String)>(r9, "-");

        r3 = $r6[0];

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 == 0 goto label8;

        return 2;

     label8:
        return 0;
    }

    private static int getMaxVideoPixelsToRetainForViewport(androidx.media3.common.TrackGroup, int, int, boolean)
    {
        androidx.media3.common.TrackGroup r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        boolean z0;
        androidx.media3.common.Format r1;
        android.graphics.Point r2;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: androidx.media3.common.TrackGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if i0 == 2147483647 goto label1;

        if i1 != 2147483647 goto label2;

     label1:
        return 2147483647;

     label2:
        i16 = 2147483647;

        i17 = 0;

     label3:
        $i3 = r0.<androidx.media3.common.TrackGroup: int length>;

        if i17 >= $i3 goto label5;

        r1 = virtualinvoke r0.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i17);

        $i4 = r1.<androidx.media3.common.Format: int width>;

        if $i4 <= 0 goto label4;

        $i5 = r1.<androidx.media3.common.Format: int height>;

        if $i5 <= 0 goto label4;

        $i7 = r1.<androidx.media3.common.Format: int width>;

        $i6 = r1.<androidx.media3.common.Format: int height>;

        r2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: android.graphics.Point getMaxVideoSizeInViewport(boolean,int,int,int,int)>(z0, i0, i1, $i7, $i6);

        $i9 = r1.<androidx.media3.common.Format: int width>;

        $i8 = r1.<androidx.media3.common.Format: int height>;

        i2 = $i9 * $i8;

        $i12 = r1.<androidx.media3.common.Format: int width>;

        $i10 = r2.<android.graphics.Point: int x>;

        $f0 = (float) $i10;

        $f1 = $f0 * 0.98F;

        $i11 = (int) $f1;

        if $i12 < $i11 goto label4;

        $i15 = r1.<androidx.media3.common.Format: int height>;

        $i13 = r2.<android.graphics.Point: int y>;

        $f2 = (float) $i13;

        $f3 = $f2 * 0.98F;

        $i14 = (int) $f3;

        if $i15 < $i14 goto label4;

        if i2 >= i16 goto label4;

        i16 = i2;

     label4:
        i17 = i17 + 1;

        goto label3;

     label5:
        return i16;
    }

    private static android.graphics.Point getMaxVideoSizeInViewport(boolean, int, int, int, int)
    {
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10;
        android.graphics.Point $r0, $r1;

        z0 := @parameter0: boolean;

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if z0 == 0 goto label5;

        if i0 <= i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if i7 <= i8 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z1 == $z2 goto label5;

        i2 = i7;

        i7 = i8;

        i8 = i2;

     label5:
        $i9 = i0 * i8;

        $i10 = i1 * i7;

        if $i9 < $i10 goto label6;

        $r1 = new android.graphics.Point;

        $i5 = i7 * i1;

        $i6 = staticinvoke <androidx.media3.common.util.Util: int ceilDivide(int,int)>($i5, i0);

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>(i7, $i6);

        return $r1;

     label6:
        $r0 = new android.graphics.Point;

        $i3 = i8 * i0;

        $i4 = staticinvoke <androidx.media3.common.util.Util: int ceilDivide(int,int)>($i3, i1);

        specialinvoke $r0.<android.graphics.Point: void <init>(int,int)>($i4, i8);

        return $r0;
    }

    private static int getRoleFlagMatchScore(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label1;

        if i0 != i1 goto label1;

        return 2147483647;

     label1:
        $i2 = i0 & i1;

        $i3 = staticinvoke <java.lang.Integer: int bitCount(int)>($i2);

        return $i3;
    }

    private static int getVideoCodecPreferenceScore(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return 0;

     label01:
        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1851077871: goto label02;
            case -1662735862: goto label03;
            case -1662541442: goto label04;
            case 1331836730: goto label06;
            case 1599127257: goto label05;
            default: goto label07;
        };

     label02:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video/dolby-vision");

        if $z4 == 0 goto label07;

        b1 = 0;

        goto label07;

     label03:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video/av01");

        if $z3 == 0 goto label07;

        b1 = 1;

        goto label07;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video/hevc");

        if $z2 == 0 goto label07;

        b1 = 2;

        goto label07;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video/x-vnd.on2.vp9");

        if $z0 == 0 goto label07;

        b1 = 3;

        goto label07;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video/avc");

        if $z1 == 0 goto label07;

        b1 = 4;

     label07:
        tableswitch(b1)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            default: goto label13;
        };

     label08:
        return 5;

     label09:
        return 4;

     label10:
        return 3;

     label11:
        return 2;

     label12:
        return 1;

     label13:
        return 0;
    }

    private static boolean isDolbyAudio(androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        byte b1;

        r0 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        if $r2 != null goto label1;

        return 0;

     label1:
        r1 = r0.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2123537834: goto label4;
            case 187078296: goto label2;
            case 187078297: goto label5;
            case 1504578661: goto label3;
            default: goto label6;
        };

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("audio/ac3");

        if $z2 == 0 goto label6;

        b1 = 0;

        goto label6;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("audio/eac3");

        if $z0 == 0 goto label6;

        b1 = 1;

        goto label6;

     label4:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("audio/eac3-joc");

        if $z3 == 0 goto label6;

        b1 = 2;

        goto label6;

     label5:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("audio/ac4");

        if $z1 == 0 goto label6;

        b1 = 3;

     label6:
        tableswitch(b1)
        {
            case 0: goto label7;
            case 1: goto label7;
            case 2: goto label7;
            case 3: goto label7;
            default: goto label8;
        };

     label7:
        return 1;

     label8:
        return 0;
    }

    public volatile androidx.media3.common.TrackSelectionParameters getParameters()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getParameters()>();

        return $r1;
    }

    private static java.util.List lambda$selectTextTrack$4(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, java.lang.String, int, androidx.media3.common.TrackGroup, int[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        java.lang.String r1;
        int i0;
        androidx.media3.common.TrackGroup r2;
        int[] r3;
        com.google.common.collect.ImmutableList $r4;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.media3.common.TrackGroup;

        r3 := @parameter4: int[];

        $r4 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],java.lang.String)>(i0, r2, r0, r3, r1);

        return $r4;
    }

    private java.util.List lambda$selectAudioTrack$3(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, boolean, int, androidx.media3.common.TrackGroup, int[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        boolean z0;
        int i0;
        androidx.media3.common.TrackGroup r2;
        int[] r3;
        com.google.common.base.Predicate $r4;
        com.google.common.collect.ImmutableList $r5;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.media3.common.TrackGroup;

        r3 := @parameter4: int[];

        $r4 = dynamicinvoke "apply" <com.google.common.base.Predicate (androidx.media3.exoplayer.trackselection.DefaultTrackSelector)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isAudioFormatWithinAudioChannelCountConstraints(androidx.media3.common.Format)>, methodtype: boolean __METHODTYPE__(androidx.media3.common.Format));

        $r5 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],boolean,com.google.common.base.Predicate)>(i0, r2, r1, r3, z0, $r4);

        return $r5;
    }

    private static java.util.List lambda$selectVideoTrack$2(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int[], int, androidx.media3.common.TrackGroup, int[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        int[] r1, r3;
        int i0, $i1;
        androidx.media3.common.TrackGroup r2;
        com.google.common.collect.ImmutableList $r4;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.media3.common.TrackGroup;

        r3 := @parameter4: int[];

        $i1 = r1[i0];

        $r4 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],int)>(i0, r2, r0, r3, $i1);

        return $r4;
    }

    private static int lambda$static$1(java.lang.Integer, java.lang.Integer)
    {
        java.lang.Integer r0, r1;

        r0 := @parameter0: java.lang.Integer;

        r1 := @parameter1: java.lang.Integer;

        return 0;
    }

    private static int lambda$static$0(java.lang.Integer, java.lang.Integer)
    {
        java.lang.Integer r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.lang.Integer;

        r1 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        if $i0 != -1 goto label2;

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i4 != -1 goto label1;

        $i5 = 0;

        goto label4;

     label1:
        $i5 = -1;

        goto label4;

     label2:
        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i1 != -1 goto label3;

        $i5 = 1;

        goto label4;

     label3:
        $i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i5 = $i2 - $i3;

     label4:
        return $i5;
    }

    static int access$3700(androidx.media3.common.TrackGroup, int, int, boolean)
    {
        androidx.media3.common.TrackGroup r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @parameter0: androidx.media3.common.TrackGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getMaxVideoPixelsToRetainForViewport(androidx.media3.common.TrackGroup,int,int,boolean)>(r0, i0, i1, z0);

        return $i2;
    }

    static int access$3800(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getRoleFlagMatchScore(int,int)>(i0, i1);

        return $i2;
    }

    static int access$3900(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getVideoCodecPreferenceScore(java.lang.String)>(r0);

        return $i0;
    }

    static com.google.common.collect.Ordering access$4000()
    {
        com.google.common.collect.Ordering $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering FORMAT_VALUE_ORDERING>;

        return $r0;
    }

    static com.google.common.collect.Ordering access$4100()
    {
        com.google.common.collect.Ordering $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering NO_ORDER>;

        return $r0;
    }

    static void access$4200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void maybeInvalidateForAudioChannelCountConstraints()>();

        return;
    }

    static void <clinit>()
    {
        java.util.Comparator $r0, $r2;
        com.google.common.collect.Ordering $r1, $r3;

        $r0 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int lambda$static$0(java.lang.Integer,java.lang.Integer)>, methodtype: int __METHODTYPE__(java.lang.Integer,java.lang.Integer));

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r0);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering FORMAT_VALUE_ORDERING> = $r1;

        $r2 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int lambda$static$1(java.lang.Integer,java.lang.Integer)>, methodtype: int __METHODTYPE__(java.lang.Integer,java.lang.Integer));

        $r3 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r2);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering NO_ORDER> = $r3;

        return;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int selectionEligibility>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: java.lang.String language>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinRendererCapabilities>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredRoleFlagsScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean hasMainOrNoRoleFlag>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageMatchIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isDefaultSelectionFlag>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int channelCount>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int sampleRate>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int bitrate>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredMimeTypeMatchIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesPrimaryDecoder>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesHardwareAcceleration>
    public static com.google.common.collect.ImmutableList createForTrackGroup(int, androidx.media3.common.TrackGroup, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int[], boolean, com.google.common.base.Predicate)
    {
        int i0, $i1, $i2, i3;
        androidx.media3.common.TrackGroup r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        int[] r2;
        boolean z0;
        com.google.common.base.Predicate r3;
        com.google.common.collect.ImmutableList$Builder r4;
        com.google.common.collect.ImmutableList $r5;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.common.TrackGroup;

        r1 := @parameter2: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r2 := @parameter3: int[];

        z0 := @parameter4: boolean;

        r3 := @parameter5: com.google.common.base.Predicate;

        r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        i3 = 0;

     label1:
        $i1 = r0.<androidx.media3.common.TrackGroup: int length>;

        if i3 >= $i1 goto label2;

        $r6 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        $i2 = r2[i3];

        specialinvoke $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,boolean,com.google.common.base.Predicate)>(i0, r0, i3, r1, $i2, z0, r3);

        virtualinvoke r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r5;
    }

    public void <init>(int, androidx.media3.common.TrackGroup, int, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int, boolean, com.google.common.base.Predicate)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, $i31, i32, i33, i34, $i35;
        androidx.media3.common.TrackGroup r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.google.common.base.Predicate r3;
        androidx.media3.common.Format $r4, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r21, $r26, $r27, $r28, $r30, $r33;
        java.lang.String $r5, $r6, $r20, $r23, $r25, $r35;
        com.google.common.collect.ImmutableList $r7, $r22, $r32, $r38;
        java.lang.Object $r24, $r34;
        java.lang.String[] r37;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.TrackGroup;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        r3 := @parameter6: com.google.common.base.Predicate;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: void <init>(int,androidx.media3.common.TrackGroup,int)>(i0, r1, i1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters> = r2;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r5 = $r4.<androidx.media3.common.Format: java.lang.String language>;

        $r6 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String)>($r5);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: java.lang.String language> = $r6;

        $z1 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i2, 0);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinRendererCapabilities> = $z1;

        i24 = 0;

        i25 = 2147483647;

        i26 = 0;

     label01:
        $r7 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredAudioLanguages>;

        $i3 = virtualinvoke $r7.<com.google.common.collect.ImmutableList: int size()>();

        if i26 >= $i3 goto label03;

        $r33 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r32 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredAudioLanguages>;

        $r34 = virtualinvoke $r32.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i26);

        $r35 = (java.lang.String) $r34;

        i27 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getFormatLanguageScore(androidx.media3.common.Format,java.lang.String,boolean)>($r33, $r35, 0);

        if i27 <= 0 goto label02;

        i25 = i26;

        i24 = i27;

        goto label03;

     label02:
        i26 = i26 + 1;

        goto label01;

     label03:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageIndex> = i25;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageScore> = i24;

        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i5 = $r8.<androidx.media3.common.Format: int roleFlags>;

        $i4 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int preferredAudioRoleFlags>;

        $i6 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int access$3800(int,int)>($i5, $i4);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredRoleFlagsScore> = $i6;

        $r9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i7 = $r9.<androidx.media3.common.Format: int roleFlags>;

        if $i7 == 0 goto label04;

        $r30 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i22 = $r30.<androidx.media3.common.Format: int roleFlags>;

        $i23 = $i22 & 1;

        if $i23 == 0 goto label05;

     label04:
        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean hasMainOrNoRoleFlag> = $z4;

        $r10 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i8 = $r10.<androidx.media3.common.Format: int selectionFlags>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isDefaultSelectionFlag> = $z5;

        $r11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i10 = $r11.<androidx.media3.common.Format: int channelCount>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int channelCount> = $i10;

        $r12 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i11 = $r12.<androidx.media3.common.Format: int sampleRate>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int sampleRate> = $i11;

        $r13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i12 = $r13.<androidx.media3.common.Format: int bitrate>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int bitrate> = $i12;

        $r14 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i13 = $r14.<androidx.media3.common.Format: int bitrate>;

        if $i13 == -1 goto label09;

        $r28 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i21 = $r28.<androidx.media3.common.Format: int bitrate>;

        $i20 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int maxAudioBitrate>;

        if $i21 > $i20 goto label11;

     label09:
        $r15 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i14 = $r15.<androidx.media3.common.Format: int channelCount>;

        if $i14 == -1 goto label10;

        $r27 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i19 = $r27.<androidx.media3.common.Format: int channelCount>;

        $i18 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int maxAudioChannelCount>;

        if $i19 > $i18 goto label11;

     label10:
        $r16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $z2 = interfaceinvoke r3.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r16);

        if $z2 == 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints> = $z6;

        r37 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] getSystemLanguageCodes()>();

        i28 = 2147483647;

        i29 = 0;

        i30 = 0;

     label13:
        $i31 = lengthof r37;

        if i30 >= $i31 goto label15;

        $r26 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r25 = r37[i30];

        i32 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getFormatLanguageScore(androidx.media3.common.Format,java.lang.String,boolean)>($r26, $r25, 0);

        if i32 <= 0 goto label14;

        i28 = i30;

        i29 = i32;

        goto label15;

     label14:
        i30 = i30 + 1;

        goto label13;

     label15:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageMatchIndex> = i28;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageScore> = i29;

        i33 = 2147483647;

        i34 = 0;

     label16:
        $r38 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredAudioMimeTypes>;

        $i35 = virtualinvoke $r38.<com.google.common.collect.ImmutableList: int size()>();

        if i34 >= $i35 goto label18;

        $r19 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r20 = $r19.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        if $r20 == null goto label17;

        $r21 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r23 = $r21.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r22 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredAudioMimeTypes>;

        $r24 = virtualinvoke $r22.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i34);

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z3 == 0 goto label17;

        i33 = i34;

        goto label18;

     label17:
        i34 = i34 + 1;

        goto label16;

     label18:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredMimeTypeMatchIndex> = i33;

        $i15 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getDecoderSupport(int)>(i2);

        if $i15 != 128 goto label19;

        $z7 = 1;

        goto label20;

     label19:
        $z7 = 0;

     label20:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesPrimaryDecoder> = $z7;

        $i16 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getHardwareAccelerationSupport(int)>(i2);

        if $i16 != 64 goto label21;

        $z8 = 1;

        goto label22;

     label21:
        $z8 = 0;

     label22:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesHardwareAcceleration> = $z8;

        $i17 = specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int evaluateSelectionEligibility(int,boolean)>(i2, z0);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int selectionEligibility> = $i17;

        return;
    }

    public int getSelectionEligibility()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int selectionEligibility>;

        return $i0;
    }

    public boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0, r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        androidx.media3.common.Format $r6, $r7, $r8, $r9, $r11, $r12, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10, $r13, $r14;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z0 = $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        if $z0 != 0 goto label1;

        $r15 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i3 = $r15.<androidx.media3.common.Format: int channelCount>;

        if $i3 == -1 goto label5;

        $r16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i5 = $r16.<androidx.media3.common.Format: int channelCount>;

        $r17 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i4 = $r17.<androidx.media3.common.Format: int channelCount>;

        if $i5 != $i4 goto label5;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z1 = $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        if $z1 != 0 goto label2;

        $r9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r10 = $r9.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        if $r10 == null goto label5;

        $r11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r14 = $r11.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r12 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $r13 = $r12.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z8 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r14, $r13);

        if $z8 == 0 goto label5;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z2 = $r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        if $z2 != 0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i0 = $r6.<androidx.media3.common.Format: int sampleRate>;

        if $i0 == -1 goto label5;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i2 = $r7.<androidx.media3.common.Format: int sampleRate>;

        $r8 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i1 = $r8.<androidx.media3.common.Format: int sampleRate>;

        if $i2 != $i1 goto label5;

     label3:
        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z3 = $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        if $z3 != 0 goto label4;

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesPrimaryDecoder>;

        $z4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesPrimaryDecoder>;

        if $z5 != $z4 goto label5;

        $z7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesHardwareAcceleration>;

        $z6 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesHardwareAcceleration>;

        if $z7 != $z6 goto label5;

     label4:
        $z9 = 1;

        goto label6;

     label5:
        $z9 = 0;

     label6:
        return $z9;
    }

    public int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0, r1;
        com.google.common.collect.Ordering r2, $r3, $r21, $r22, $r27, $r28, $r36, $r37, $r43, $r44, $r46, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        com.google.common.collect.ComparisonChain $r4, $r7, $r8, $r9, $r12, $r15, $r20, $r23, $r24, $r29, $r30, $r31, $r32, $r33, $r38, $r39, $r40;
        java.lang.Integer $r5, $r6, $r10, $r11, $r13, $r14, $r16, $r17, $r25, $r26, $r34, $r35, $r41, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String $r18, $r19;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r45;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints>;

        if $z0 == 0 goto label1;

        $z6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinRendererCapabilities>;

        if $z6 == 0 goto label1;

        $r22 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4000()>();

        goto label2;

     label1:
        $r3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4000()>();

        $r22 = virtualinvoke $r3.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

     label2:
        r2 = $r22;

        $r23 = staticinvoke <com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain start()>();

        $z7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinRendererCapabilities>;

        $z8 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinRendererCapabilities>;

        $r24 = virtualinvoke $r23.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z7, $z8);

        $i7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageIndex>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $i8 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageIndex>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r27 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r28 = virtualinvoke $r27.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r29 = virtualinvoke $r24.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r25, $r26, $r28);

        $i9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageScore>;

        $i10 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredLanguageScore>;

        $r30 = virtualinvoke $r29.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i9, $i10);

        $i11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredRoleFlagsScore>;

        $i12 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredRoleFlagsScore>;

        $r31 = virtualinvoke $r30.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i11, $i12);

        $z9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isDefaultSelectionFlag>;

        $z10 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isDefaultSelectionFlag>;

        $r32 = virtualinvoke $r31.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z9, $z10);

        $z11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean hasMainOrNoRoleFlag>;

        $z12 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean hasMainOrNoRoleFlag>;

        $r33 = virtualinvoke $r32.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z11, $z12);

        $i13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageMatchIndex>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $i14 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageMatchIndex>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r36 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r37 = virtualinvoke $r36.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r38 = virtualinvoke $r33.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r34, $r35, $r37);

        $i15 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageScore>;

        $i16 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int localeLanguageScore>;

        $r39 = virtualinvoke $r38.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i15, $i16);

        $z13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints>;

        $z14 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints>;

        $r40 = virtualinvoke $r39.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z13, $z14);

        $i17 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredMimeTypeMatchIndex>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $i18 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int preferredMimeTypeMatchIndex>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r43 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r44 = virtualinvoke $r43.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r4 = virtualinvoke $r40.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r41, $r42, $r44);

        $i19 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int bitrate>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $i20 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int bitrate>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r45 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z15 = $r45.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean forceLowestBitrate>;

        if $z15 == 0 goto label3;

        $r21 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4000()>();

        $r46 = virtualinvoke $r21.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        goto label4;

     label3:
        $r46 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4100()>();

     label4:
        $r7 = virtualinvoke $r4.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r5, $r6, $r46);

        $z2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesPrimaryDecoder>;

        $z1 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesPrimaryDecoder>;

        $r8 = virtualinvoke $r7.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z2, $z1);

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesHardwareAcceleration>;

        $z3 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean usesHardwareAcceleration>;

        $r9 = virtualinvoke $r8.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z4, $z3);

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int channelCount>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int channelCount>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r12 = virtualinvoke $r9.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r10, $r11, r2);

        $i2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int sampleRate>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int sampleRate>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r15 = virtualinvoke $r12.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r13, $r14, r2);

        $i4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int bitrate>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $i5 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int bitrate>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r19 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: java.lang.String language>;

        $r18 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: java.lang.String language>;

        $z5 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z5 == 0 goto label5;

        $r47 = r2;

        goto label6;

     label5:
        $r47 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4100()>();

     label6:
        $r20 = virtualinvoke $r15.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r16, $r17, $r47);

        $i6 = virtualinvoke $r20.<com.google.common.collect.ComparisonChain: int result()>();

        return $i6;
    }

    private int evaluateSelectionEligibility(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0;
        int i0, $i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1, $r3, $r4, $r5, $r6;
        androidx.media3.common.Format $r2;
        byte $b2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z1 = $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        $z2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i0, $z1);

        if $z2 != 0 goto label1;

        return 0;

     label1:
        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints>;

        if $z3 != 0 goto label2;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z9 = $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        if $z9 != 0 goto label2;

        return 0;

     label2:
        $z4 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i0, 0);

        if $z4 == 0 goto label4;

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isWithinConstraints>;

        if $z5 == 0 goto label4;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.common.Format format>;

        $i1 = $r2.<androidx.media3.common.Format: int bitrate>;

        if $i1 == -1 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z6 = $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean forceHighestSupportedBitrate>;

        if $z6 != 0 goto label4;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z7 = $r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean forceLowestBitrate>;

        if $z7 != 0 goto label4;

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z8 = $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        if $z8 != 0 goto label3;

        if z0 != 0 goto label4;

     label3:
        $b2 = 2;

        goto label5;

     label4:
        $b2 = 1;

     label5:
        return $b2;
    }

    public static int compareSelections(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        java.lang.Object $r2, $r4;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo $r3, $r5;
        int $i0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r0);

        $r3 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo) $r2;

        $r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r1);

        $r5 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo) $r4;

        $i0 = virtualinvoke $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo)>($r5);

        return $i0;
    }

    public volatile boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0, $r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo;

        $r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo) r1;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo)>($r2);

        return $z0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo) r1;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo: int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo)>($r2);

        return $i0;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isDefault>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isWithinRendererCapabilities>
    public void <init>(androidx.media3.common.Format, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore r0;
        androidx.media3.common.Format r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore;

        r1 := @parameter0: androidx.media3.common.Format;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = r1.<androidx.media3.common.Format: int selectionFlags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isDefault> = $z1;

        $z0 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i0, 0);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isWithinRendererCapabilities> = $z0;

        return;
    }

    public int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore r0, r1;
        com.google.common.collect.ComparisonChain $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore;

        $r2 = staticinvoke <com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain start()>();

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isWithinRendererCapabilities>;

        $z0 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isWithinRendererCapabilities>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z1, $z0);

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isDefault>;

        $z2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: boolean isDefault>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z3, $z2);

        $i0 = virtualinvoke $r4.<com.google.common.collect.ComparisonChain: int result()>();

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore) r1;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore: int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore)>($r2);

        return $i0;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedVideoConstraintsIfNecessary>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedMimeTypeAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoNonSeamlessAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedDecoderSupportAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedAudioConstraintsIfNecessary>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedMimeTypeAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedSampleRateAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedChannelCountAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedDecoderSupportAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean constrainAudioChannelCountToDeviceCapabilities>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedRendererCapabilitiesIfNecessary>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean tunnelingEnabled>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowMultipleAdaptiveSelections>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags>
    public void <init>()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.util.SparseArray $r1;
        android.util.SparseBooleanArray $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides> = $r1;

        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags> = $r2;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void init()>();

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.content.Context r1;
        android.util.SparseArray $r2;
        android.util.SparseBooleanArray $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: void <init>(android.content.Context)>(r1);

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides> = $r2;

        $r3 = new android.util.SparseBooleanArray;

        specialinvoke $r3.<android.util.SparseBooleanArray: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags> = $r3;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void init()>();

        return;
    }

    private void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.util.SparseArray $r2, $r3;
        android.util.SparseBooleanArray $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: void <init>(androidx.media3.common.TrackSelectionParameters)>(r1);

        $z0 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedVideoConstraintsIfNecessary> = $z0;

        $z1 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedMimeTypeAdaptiveness> = $z1;

        $z2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoNonSeamlessAdaptiveness> = $z2;

        $z3 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedDecoderSupportAdaptiveness> = $z3;

        $z4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedAudioConstraintsIfNecessary> = $z4;

        $z5 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedMimeTypeAdaptiveness> = $z5;

        $z6 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedSampleRateAdaptiveness> = $z6;

        $z7 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedChannelCountAdaptiveness> = $z7;

        $z8 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedDecoderSupportAdaptiveness> = $z8;

        $z9 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean constrainAudioChannelCountToDeviceCapabilities> = $z9;

        $z10 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedRendererCapabilitiesIfNecessary> = $z10;

        $z11 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean tunnelingEnabled> = $z11;

        $z12 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowMultipleAdaptiveSelections> = $z12;

        $r2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray access$000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r1);

        $r3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray cloneSelectionOverrides(android.util.SparseArray)>($r2);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides> = $r3;

        $r4 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray access$100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r1);

        $r5 = virtualinvoke $r4.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags> = $r5;

        return;
    }

    private void <init>(android.os.Bundle)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.os.Bundle r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r2;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        android.util.SparseArray $r29;
        int[] $r31;
        android.util.SparseBooleanArray $r32;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: void <init>(android.os.Bundle)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void init()>();

        r2 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT>;

        $r3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$200()>();

        $z0 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r3, $z0);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedVideoConstraintsIfNecessary(boolean)>($z1);

        $r5 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$300()>();

        $z2 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r5, $z2);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoMixedMimeTypeAdaptiveness(boolean)>($z3);

        $r7 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$400()>();

        $z4 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r7, $z4);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoNonSeamlessAdaptiveness(boolean)>($z5);

        $r9 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$500()>();

        $z6 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        $z7 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r9, $z6);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoMixedDecoderSupportAdaptiveness(boolean)>($z7);

        $r11 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$600()>();

        $z8 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        $z9 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r11, $z8);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedAudioConstraintsIfNecessary(boolean)>($z9);

        $r13 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$700()>();

        $z10 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        $z11 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r13, $z10);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedMimeTypeAdaptiveness(boolean)>($z11);

        $r15 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$800()>();

        $z12 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        $z13 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r15, $z12);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedSampleRateAdaptiveness(boolean)>($z13);

        $r17 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$900()>();

        $z14 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        $z15 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r17, $z14);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedChannelCountAdaptiveness(boolean)>($z15);

        $r19 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1000()>();

        $z16 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        $z17 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r19, $z16);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedDecoderSupportAdaptiveness(boolean)>($z17);

        $r21 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1100()>();

        $z18 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        $z19 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r21, $z18);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setConstrainAudioChannelCountToDeviceCapabilities(boolean)>($z19);

        $r23 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1200()>();

        $z20 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        $z21 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r23, $z20);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedRendererCapabilitiesIfNecessary(boolean)>($z21);

        $r25 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1300()>();

        $z22 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        $z23 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r25, $z22);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setTunnelingEnabled(boolean)>($z23);

        $r27 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1400()>();

        $z24 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        $z25 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r27, $z24);

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowMultipleAdaptiveSelections(boolean)>($z25);

        $r29 = new android.util.SparseArray;

        specialinvoke $r29.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides> = $r29;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void setSelectionOverridesFromBundle(android.os.Bundle)>(r1);

        $r30 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1500()>();

        $r31 = virtualinvoke r1.<android.os.Bundle: int[] getIntArray(java.lang.String)>($r30);

        $r32 = specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray makeSparseBooleanArrayFromTrueKeys(int[])>($r31);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags> = $r32;

        return;
    }

    protected androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder set(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder set(androidx.media3.common.TrackSelectionParameters)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoSizeSd()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoSizeSd()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearVideoSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder clearVideoSizeConstraints()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoSize(int,int)>(i0, i1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoFrameRate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoBitrate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMinVideoSize(int,int)>(i0, i1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMinVideoFrameRate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMinVideoBitrate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedVideoConstraintsIfNecessary(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedVideoConstraintsIfNecessary> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoMixedMimeTypeAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedMimeTypeAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoNonSeamlessAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoNonSeamlessAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoMixedDecoderSupportAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedDecoderSupportAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.content.Context r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean)>(r1, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearViewportSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder clearViewportSizeConstraints()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSize(int, int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setViewportSize(int,int,boolean)>(i0, i1, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoMimeType(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoMimeTypes(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoRoleFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioLanguage(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioLanguages(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioRoleFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxAudioChannelCount(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMaxAudioChannelCount(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxAudioBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setMaxAudioBitrate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedAudioConstraintsIfNecessary(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedAudioConstraintsIfNecessary> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedMimeTypeAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedMimeTypeAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedSampleRateAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedSampleRateAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedChannelCountAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedChannelCountAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedDecoderSupportAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedDecoderSupportAdaptiveness> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioMimeType(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioMimeTypes(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setConstrainAudioChannelCountToDeviceCapabilities(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean constrainAudioChannelCountToDeviceCapabilities> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.content.Context r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguage(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguages(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextRoleFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setIgnoredTextSelectionFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setIgnoredTextSelectionFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setSelectUndeterminedTextLanguage(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setSelectUndeterminedTextLanguage(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setDisabledTextTrackSelectionFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setIgnoredTextSelectionFlags(int)>(i0);

        return $r1;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceLowestBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setForceLowestBitrate(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceHighestSupportedBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setForceHighestSupportedBitrate(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder addOverride(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.common.TrackSelectionOverride r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder addOverride(androidx.media3.common.TrackSelectionOverride)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverride(androidx.media3.common.TrackGroup)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.common.TrackGroup r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder clearOverride(androidx.media3.common.TrackGroup)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setOverrideForType(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.common.TrackSelectionOverride r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setOverrideForType(androidx.media3.common.TrackSelectionOverride)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverridesOfType(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder clearOverridesOfType(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverrides()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder clearOverrides()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setDisabledTrackTypes(java.util.Set)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        java.util.Set r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setDisabledTrackTypes(java.util.Set)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setTrackTypeDisabled(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: androidx.media3.common.TrackSelectionParameters$Builder setTrackTypeDisabled(int,boolean)>(i0, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedRendererCapabilitiesIfNecessary(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedRendererCapabilitiesIfNecessary> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setTunnelingEnabled(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean tunnelingEnabled> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowMultipleAdaptiveSelections(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowMultipleAdaptiveSelections> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setRendererDisabled(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;
        boolean z0, $z1;
        android.util.SparseBooleanArray $r1, $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 != z0 goto label1;

        return r0;

     label1:
        if z0 == 0 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        goto label3;

     label2:
        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void delete(int)>(i0);

     label3:
        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setSelectionOverride(int, androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r2;
        android.util.SparseArray $r3, $r8;
        java.lang.Object $r4, $r6, r9;
        boolean $z0, $z1;
        java.util.HashMap r10;
        java.util.Map r11, r12, r13;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter2: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r9 = (java.util.Map) $r4;

        if r9 != null goto label1;

        r10 = new java.util.HashMap;

        specialinvoke r10.<java.util.HashMap: void <init>()>();

        r9 = r10;

        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r9);

     label1:
        r11 = (java.util.Map) r9;

        $z0 = interfaceinvoke r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        r12 = (java.util.Map) r9;

        $r6 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r2);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        r13 = (java.util.Map) r9;

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearSelectionOverride(int, androidx.media3.exoplayer.source.TrackGroupArray)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        java.util.Map r2;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.Map) $r4;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return r0;

     label2:
        interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $z1 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

     label3:
        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearSelectionOverrides(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int i0;
        java.util.Map r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.Map) $r3;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearSelectionOverrides()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.util.SparseArray $r1, $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        specialinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)>(r0, null);

        return $r1;
    }

    private void init()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedVideoConstraintsIfNecessary> = 1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedMimeTypeAdaptiveness> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoNonSeamlessAdaptiveness> = 1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedDecoderSupportAdaptiveness> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedAudioConstraintsIfNecessary> = 1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedMimeTypeAdaptiveness> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedSampleRateAdaptiveness> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedChannelCountAdaptiveness> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedDecoderSupportAdaptiveness> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean constrainAudioChannelCountToDeviceCapabilities> = 1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedRendererCapabilitiesIfNecessary> = 1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean tunnelingEnabled> = 0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowMultipleAdaptiveSelections> = 1;

        return;
    }

    private static android.util.SparseArray cloneSelectionOverrides(android.util.SparseArray)
    {
        android.util.SparseArray r0, r1, $r2;
        int $i0, $i1, i2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.util.Map $r5;

        r0 := @parameter0: android.util.SparseArray;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r1 = $r2;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label2;

        $i1 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i2);

        $r3 = new java.util.HashMap;

        $r4 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (java.util.Map) $r4;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>($r5);

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    private void setSelectionOverridesFromBundle(android.os.Bundle)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.os.Bundle r1;
        int[] r2;
        java.util.ArrayList r3;
        com.google.common.collect.ImmutableList r4, $r17;
        android.util.SparseArray r5, r6, $r18;
        int i0, $i1, $i2, $i3, i4;
        androidx.media3.exoplayer.source.TrackGroupArray r7;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r8;
        java.lang.String $r9, $r10, $r12;
        androidx.media3.common.Bundleable$Creator $r11, $r13;
        java.lang.Object $r14, $r15;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r9 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1700()>();

        r2 = virtualinvoke r1.<android.os.Bundle: int[] getIntArray(java.lang.String)>($r9);

        $r10 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1800()>();

        r3 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>($r10);

        if r3 != null goto label1;

        $r17 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        goto label2;

     label1:
        $r11 = <androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r17 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList fromBundleList(androidx.media3.common.Bundleable$Creator,java.util.List)>($r11, r3);

     label2:
        r4 = $r17;

        $r12 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String access$1900()>();

        r5 = virtualinvoke r1.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>($r12);

        if r5 != null goto label3;

        $r18 = new android.util.SparseArray;

        specialinvoke $r18.<android.util.SparseArray: void <init>()>();

        goto label4;

     label3:
        $r13 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r18 = staticinvoke <androidx.media3.common.util.BundleableUtil: android.util.SparseArray fromBundleSparseArray(androidx.media3.common.Bundleable$Creator,android.util.SparseArray)>($r13, r5);

     label4:
        r6 = $r18;

        if r2 == null goto label5;

        $i1 = lengthof r2;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i1 == $i2 goto label6;

     label5:
        return;

     label6:
        i4 = 0;

     label7:
        $i3 = lengthof r2;

        if i4 >= $i3 goto label8;

        i0 = r2[i4];

        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        r7 = (androidx.media3.exoplayer.source.TrackGroupArray) $r14;

        $r15 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r8 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride) $r15;

        virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride)>(i0, r7, r8);

        i4 = i4 + 1;

        goto label7;

     label8:
        return;
    }

    private android.util.SparseBooleanArray makeSparseBooleanArrayFromTrueKeys(int[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        int[] r1, r3;
        android.util.SparseBooleanArray r2, $r4, $r5;
        int i0, i1, $i2, i3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: int[];

        if r1 != null goto label1;

        $r5 = new android.util.SparseBooleanArray;

        specialinvoke $r5.<android.util.SparseBooleanArray: void <init>()>();

        return $r5;

     label1:
        $r4 = new android.util.SparseBooleanArray;

        $i2 = lengthof r1;

        specialinvoke $r4.<android.util.SparseBooleanArray: void <init>(int)>($i2);

        r2 = $r4;

        r3 = r1;

        i0 = lengthof r3;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        i1 = r3[i3];

        virtualinvoke r2.<android.util.SparseBooleanArray: void append(int,boolean)>(i1, 1);

        i3 = i3 + 1;

        goto label2;

     label3:
        return r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters build()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setTrackTypeDisabled(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setTrackTypeDisabled(int,boolean)>(i0, z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setDisabledTrackTypes(java.util.Set)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.util.Set r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.util.Set;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setDisabledTrackTypes(java.util.Set)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearOverrides()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverrides()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearOverridesOfType(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverridesOfType(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearOverride(androidx.media3.common.TrackGroup)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        androidx.media3.common.TrackGroup r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverride(androidx.media3.common.TrackGroup)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setOverrideForType(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        androidx.media3.common.TrackSelectionOverride r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setOverrideForType(androidx.media3.common.TrackSelectionOverride)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder addOverride(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        androidx.media3.common.TrackSelectionOverride r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder addOverride(androidx.media3.common.TrackSelectionOverride)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setForceHighestSupportedBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceHighestSupportedBitrate(boolean)>(z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setForceLowestBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceLowestBitrate(boolean)>(z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setSelectUndeterminedTextLanguage(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setSelectUndeterminedTextLanguage(boolean)>(z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setIgnoredTextSelectionFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setIgnoredTextSelectionFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextRoleFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguages(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguage(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        android.content.Context r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioMimeTypes(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioMimeType(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxAudioBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxAudioBitrate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxAudioChannelCount(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxAudioChannelCount(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioRoleFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioLanguages(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioLanguage(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoRoleFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoMimeTypes(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoMimeType(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setViewportSize(int, int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSize(int,int,boolean)>(i0, i1, z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearViewportSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearViewportSizeConstraints()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        android.content.Context r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean)>(r1, z0);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMinVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoBitrate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMinVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoFrameRate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMinVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoSize(int,int)>(i0, i1);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoBitrate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoFrameRate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoSize(int,int)>(i0, i1);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearVideoSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearVideoSizeConstraints()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoSizeSd()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoSizeSd()>();

        return $r1;
    }

    protected volatile androidx.media3.common.TrackSelectionParameters$Builder set(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0, $r2;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder set(androidx.media3.common.TrackSelectionParameters)>(r1);

        return $r2;
    }

    static boolean access$2000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedVideoConstraintsIfNecessary>;

        return $z0;
    }

    static boolean access$2100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedMimeTypeAdaptiveness>;

        return $z0;
    }

    static boolean access$2200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoNonSeamlessAdaptiveness>;

        return $z0;
    }

    static boolean access$2300(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        return $z0;
    }

    static boolean access$2400(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedAudioConstraintsIfNecessary>;

        return $z0;
    }

    static boolean access$2500(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedMimeTypeAdaptiveness>;

        return $z0;
    }

    static boolean access$2600(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedSampleRateAdaptiveness>;

        return $z0;
    }

    static boolean access$2700(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedChannelCountAdaptiveness>;

        return $z0;
    }

    static boolean access$2800(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        return $z0;
    }

    static boolean access$2900(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean constrainAudioChannelCountToDeviceCapabilities>;

        return $z0;
    }

    static boolean access$3000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean exceedRendererCapabilitiesIfNecessary>;

        return $z0;
    }

    static boolean access$3100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean tunnelingEnabled>;

        return $z0;
    }

    static boolean access$3200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean allowMultipleAdaptiveSelections>;

        return $z0;
    }

    static android.util.SparseArray access$3300(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray selectionOverrides>;

        return $r1;
    }

    static android.util.SparseBooleanArray access$3400(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray rendererDisabledFlags>;

        return $r1;
    }

    void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1 r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)>(r1);

        return;
    }

    void <init>(android.os.Bundle, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r0;
        android.os.Bundle r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1 r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(android.os.Bundle)>(r1);

        return;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_VIDEO_CONSTRAINTS_IF_NECESSARY>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_MIME_TYPE_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_NON_SEAMLESS_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_AUDIO_CONSTRAINTS_IF_NECESSARY>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_MIME_TYPE_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_SAMPLE_RATE_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_CHANNEL_COUNT_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_RENDERER_CAPABILITIES_IF_NECESSARY>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_TUNNELING_ENABLED>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_MULTIPLE_ADAPTIVE_SELECTIONS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_RENDERER_INDICES>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_TRACK_GROUP_ARRAYS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_RENDERER_DISABLED_INDICES>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_DECODER_SUPPORT_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_DECODER_SUPPORT_ADAPTIVENESS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_CONSTRAIN_AUDIO_CHANNEL_COUNT_TO_DEVICE_CAPABILITIES>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.common.Bundleable$Creator CREATOR>
    public static androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getDefaults(android.content.Context)
    {
        android.content.Context r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(android.content.Context)>(r0);

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        return $r2;
    }

    private void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.util.SparseArray $r2;
        android.util.SparseBooleanArray $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters: void <init>(androidx.media3.common.TrackSelectionParameters$Builder)>(r1);

        $z0 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary> = $z0;

        $z1 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness> = $z1;

        $z2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness> = $z2;

        $z3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2300(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness> = $z3;

        $z4 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2400(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary> = $z4;

        $z5 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2500(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness> = $z5;

        $z6 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2600(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness> = $z6;

        $z7 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2700(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness> = $z7;

        $z8 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2800(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness> = $z8;

        $z9 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$2900(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities> = $z9;

        $z10 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$3000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary> = $z10;

        $z11 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$3100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled> = $z11;

        $z12 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: boolean access$3200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections> = $z12;

        $r2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseArray access$3300(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides> = $r2;

        $r3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: android.util.SparseBooleanArray access$3400(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags> = $r3;

        return;
    }

    public boolean getRendererDisabled(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        int i0;
        android.util.SparseBooleanArray $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags>;

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        return $z0;
    }

    public boolean hasSelectionOverride(int, androidx.media3.exoplayer.source.TrackGroupArray)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        java.util.Map r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.Map) $r4;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride getSelectionOverride(int, androidx.media3.exoplayer.source.TrackGroupArray)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        java.util.Map r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride $r6;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.Map) $r4;

        if r2 == null goto label1;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder buildUpon()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        $r1 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)>(r0, null);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        android.util.SparseBooleanArray $r5, $r6;
        android.util.SparseArray $r7, $r8;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters) r1;

        $z0 = specialinvoke r0.<androidx.media3.common.TrackSelectionParameters: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        $z2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        $z1 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        if $z2 != $z1 goto label4;

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        $z3 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        if $z4 != $z3 goto label4;

        $z6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        $z5 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        if $z6 != $z5 goto label4;

        $z8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        $z7 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        if $z8 != $z7 goto label4;

        $z10 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        $z9 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        if $z10 != $z9 goto label4;

        $z12 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        $z11 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        if $z12 != $z11 goto label4;

        $z14 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        $z13 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        if $z14 != $z13 goto label4;

        $z16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        $z15 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        if $z16 != $z15 goto label4;

        $z18 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        $z17 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        if $z18 != $z17 goto label4;

        $z20 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        $z19 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z20 != $z19 goto label4;

        $z22 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        $z21 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        if $z22 != $z21 goto label4;

        $z24 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        $z23 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        if $z24 != $z23 goto label4;

        $z26 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        $z25 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        if $z26 != $z25 goto label4;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags>;

        $r5 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags>;

        $z27 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean areRendererDisabledFlagsEqual(android.util.SparseBooleanArray,android.util.SparseBooleanArray)>($r6, $r5);

        if $z27 == 0 goto label4;

        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>;

        $r7 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>;

        $z28 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean areSelectionOverridesEqual(android.util.SparseArray,android.util.SparseArray)>($r8, $r7);

        if $z28 == 0 goto label4;

        $z29 = 1;

        goto label5;

     label4:
        $z29 = 0;

     label5:
        return $z29;
    }

    public int hashCode()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, i18, i20, i22, i24, i26, i28, i30, i32, i34, i36, i38, i40, i42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        byte b15, $b17, $b19, $b21, $b23, $b25, $b27, $b29, $b31, $b33, $b35, $b37, $b39, $b41;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        b15 = 1;

        $i0 = 31 * b15;

        $i1 = specialinvoke r0.<androidx.media3.common.TrackSelectionParameters: int hashCode()>();

        i16 = $i0 + $i1;

        $i2 = 31 * i16;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        if $z0 == 0 goto label01;

        $b17 = 1;

        goto label02;

     label01:
        $b17 = 0;

     label02:
        i18 = $i2 + $b17;

        $i3 = 31 * i18;

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        if $z1 == 0 goto label03;

        $b19 = 1;

        goto label04;

     label03:
        $b19 = 0;

     label04:
        i20 = $i3 + $b19;

        $i4 = 31 * i20;

        $z2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        if $z2 == 0 goto label05;

        $b21 = 1;

        goto label06;

     label05:
        $b21 = 0;

     label06:
        i22 = $i4 + $b21;

        $i5 = 31 * i22;

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        if $z3 == 0 goto label07;

        $b23 = 1;

        goto label08;

     label07:
        $b23 = 0;

     label08:
        i24 = $i5 + $b23;

        $i6 = 31 * i24;

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        if $z4 == 0 goto label09;

        $b25 = 1;

        goto label10;

     label09:
        $b25 = 0;

     label10:
        i26 = $i6 + $b25;

        $i7 = 31 * i26;

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        if $z5 == 0 goto label11;

        $b27 = 1;

        goto label12;

     label11:
        $b27 = 0;

     label12:
        i28 = $i7 + $b27;

        $i8 = 31 * i28;

        $z6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        if $z6 == 0 goto label13;

        $b29 = 1;

        goto label14;

     label13:
        $b29 = 0;

     label14:
        i30 = $i8 + $b29;

        $i9 = 31 * i30;

        $z7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        if $z7 == 0 goto label15;

        $b31 = 1;

        goto label16;

     label15:
        $b31 = 0;

     label16:
        i32 = $i9 + $b31;

        $i10 = 31 * i32;

        $z8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        if $z8 == 0 goto label17;

        $b33 = 1;

        goto label18;

     label17:
        $b33 = 0;

     label18:
        i34 = $i10 + $b33;

        $i11 = 31 * i34;

        $z9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        if $z9 == 0 goto label19;

        $b35 = 1;

        goto label20;

     label19:
        $b35 = 0;

     label20:
        i36 = $i11 + $b35;

        $i12 = 31 * i36;

        $z10 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        if $z10 == 0 goto label21;

        $b37 = 1;

        goto label22;

     label21:
        $b37 = 0;

     label22:
        i38 = $i12 + $b37;

        $i13 = 31 * i38;

        $z11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        if $z11 == 0 goto label23;

        $b39 = 1;

        goto label24;

     label23:
        $b39 = 0;

     label24:
        i40 = $i13 + $b39;

        $i14 = 31 * i40;

        $z12 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        if $z12 == 0 goto label25;

        $b41 = 1;

        goto label26;

     label25:
        $b41 = 0;

     label26:
        i42 = $i14 + $b41;

        return i42;
    }

    public android.os.Bundle toBundle()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17;
        android.util.SparseArray $r15;
        android.util.SparseBooleanArray $r16;
        int[] $r18;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r1 = specialinvoke r0.<androidx.media3.common.TrackSelectionParameters: android.os.Bundle toBundle()>();

        $r2 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_VIDEO_CONSTRAINTS_IF_NECESSARY>;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r2, $z0);

        $r3 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_MIME_TYPE_ADAPTIVENESS>;

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r3, $z1);

        $r4 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_NON_SEAMLESS_ADAPTIVENESS>;

        $z2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r4, $z2);

        $r5 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_DECODER_SUPPORT_ADAPTIVENESS>;

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r5, $z3);

        $r6 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_AUDIO_CONSTRAINTS_IF_NECESSARY>;

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r6, $z4);

        $r7 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_MIME_TYPE_ADAPTIVENESS>;

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r7, $z5);

        $r8 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_SAMPLE_RATE_ADAPTIVENESS>;

        $z6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r8, $z6);

        $r9 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_CHANNEL_COUNT_ADAPTIVENESS>;

        $z7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r9, $z7);

        $r10 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_DECODER_SUPPORT_ADAPTIVENESS>;

        $z8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedDecoderSupportAdaptiveness>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r10, $z8);

        $r11 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_CONSTRAIN_AUDIO_CHANNEL_COUNT_TO_DEVICE_CAPABILITIES>;

        $z9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean constrainAudioChannelCountToDeviceCapabilities>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r11, $z9);

        $r12 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_RENDERER_CAPABILITIES_IF_NECESSARY>;

        $z10 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r12, $z10);

        $r13 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_TUNNELING_ENABLED>;

        $z11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean tunnelingEnabled>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r13, $z11);

        $r14 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_MULTIPLE_ADAPTIVE_SELECTIONS>;

        $z12 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowMultipleAdaptiveSelections>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r14, $z12);

        $r15 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>;

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: void putSelectionOverridesToBundle(android.os.Bundle,android.util.SparseArray)>(r1, $r15);

        $r17 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_RENDERER_DISABLED_INDICES>;

        $r16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags>;

        $r18 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int[] getKeysFromSparseBooleanArray(android.util.SparseBooleanArray)>($r16);

        virtualinvoke r1.<android.os.Bundle: void putIntArray(java.lang.String,int[])>($r17, $r18);

        return r1;
    }

    private static void putSelectionOverridesToBundle(android.os.Bundle, android.util.SparseArray)
    {
        android.os.Bundle r0;
        android.util.SparseArray r1, r4, $r10, $r19;
        java.util.ArrayList r2, r3, $r8, $r9, $r17;
        int i0, $i1, $i2, i3;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r7;
        java.lang.Object $r11, $r20, $r21, $r22;
        java.util.Map $r12;
        java.util.Set $r13;
        boolean $z0;
        java.lang.String $r14, $r16, $r18;
        int[] $r15;
        androidx.media3.exoplayer.source.TrackGroupArray $r23;
        java.lang.Integer $r24;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.util.SparseArray;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r4 = $r10;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i3 >= $i1 goto label5;

        i0 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i3);

        $r11 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r12 = (java.util.Map) $r11;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r20;

        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride) $r21;

        if r7 == null goto label3;

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        virtualinvoke r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r7);

     label3:
        $r22 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (androidx.media3.exoplayer.source.TrackGroupArray) $r22;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label2;

     label4:
        $r14 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_RENDERER_INDICES>;

        $r15 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>(r2);

        virtualinvoke r0.<android.os.Bundle: void putIntArray(java.lang.String,int[])>($r14, $r15);

        $r16 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_TRACK_GROUP_ARRAYS>;

        $r17 = staticinvoke <androidx.media3.common.util.BundleableUtil: java.util.ArrayList toBundleArrayList(java.util.Collection)>(r3);

        virtualinvoke r0.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>($r16, $r17);

        $r18 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES>;

        $r19 = staticinvoke <androidx.media3.common.util.BundleableUtil: android.util.SparseArray toBundleSparseArray(android.util.SparseArray)>(r4);

        virtualinvoke r0.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>($r18, $r19);

        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    private static int[] getKeysFromSparseBooleanArray(android.util.SparseBooleanArray)
    {
        android.util.SparseBooleanArray r0;
        int[] r1;
        int $i0, $i1, $i2, i3;

        r0 := @parameter0: android.util.SparseBooleanArray;

        $i0 = virtualinvoke r0.<android.util.SparseBooleanArray: int size()>();

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.util.SparseBooleanArray: int size()>();

        if i3 >= $i1 goto label2;

        $i2 = virtualinvoke r0.<android.util.SparseBooleanArray: int keyAt(int)>(i3);

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static boolean areRendererDisabledFlagsEqual(android.util.SparseBooleanArray, android.util.SparseBooleanArray)
    {
        android.util.SparseBooleanArray r0, r1;
        int i0, $i1, $i2, $i3, i4;

        r0 := @parameter0: android.util.SparseBooleanArray;

        r1 := @parameter1: android.util.SparseBooleanArray;

        i0 = virtualinvoke r0.<android.util.SparseBooleanArray: int size()>();

        $i1 = virtualinvoke r1.<android.util.SparseBooleanArray: int size()>();

        if $i1 == i0 goto label1;

        return 0;

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        $i2 = virtualinvoke r0.<android.util.SparseBooleanArray: int keyAt(int)>(i4);

        $i3 = virtualinvoke r1.<android.util.SparseBooleanArray: int indexOfKey(int)>($i2);

        if $i3 >= 0 goto label3;

        return 0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static boolean areSelectionOverridesEqual(android.util.SparseArray, android.util.SparseArray)
    {
        android.util.SparseArray r0, r1;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object $r2, $r4;
        java.util.Map $r3, $r5;
        boolean $z0;

        r0 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: android.util.SparseArray;

        i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        $i2 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if $i2 == i0 goto label1;

        return 0;

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label5;

        $i3 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i4);

        i1 = virtualinvoke r1.<android.util.SparseArray: int indexOfKey(int)>($i3);

        if i1 < 0 goto label3;

        $r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r3 = (java.util.Map) $r2;

        $r4 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (java.util.Map) $r4;

        $z0 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean areSelectionOverridesEqual(java.util.Map,java.util.Map)>($r3, $r5);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        return 1;
    }

    private static boolean areSelectionOverridesEqual(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r1;
        int i0, $i1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        androidx.media3.exoplayer.source.TrackGroupArray r4;
        java.util.Set $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i1 == i0 goto label1;

        return 0;

     label1:
        $r5 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (androidx.media3.exoplayer.source.TrackGroupArray) $r7;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z2 != 0 goto label4;

     label3:
        return 0;

     label4:
        goto label2;

     label5:
        return 1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder buildUpon()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder buildUpon()>();

        return $r1;
    }

    private static androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters lambda$static$0(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;

        r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(android.os.Bundle,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)>(r0, null);

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        return $r2;
    }

    static android.util.SparseArray access$000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides>;

        return $r1;
    }

    static android.util.SparseBooleanArray access$100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags>;

        return $r1;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_VIDEO_CONSTRAINTS_IF_NECESSARY>;

        return $r0;
    }

    static java.lang.String access$300()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_MIME_TYPE_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_NON_SEAMLESS_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$500()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_DECODER_SUPPORT_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$600()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_AUDIO_CONSTRAINTS_IF_NECESSARY>;

        return $r0;
    }

    static java.lang.String access$700()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_MIME_TYPE_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$800()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_SAMPLE_RATE_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$900()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_CHANNEL_COUNT_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$1000()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_DECODER_SUPPORT_ADAPTIVENESS>;

        return $r0;
    }

    static java.lang.String access$1100()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_CONSTRAIN_AUDIO_CHANNEL_COUNT_TO_DEVICE_CAPABILITIES>;

        return $r0;
    }

    static java.lang.String access$1200()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_RENDERER_CAPABILITIES_IF_NECESSARY>;

        return $r0;
    }

    static java.lang.String access$1300()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_TUNNELING_ENABLED>;

        return $r0;
    }

    static java.lang.String access$1400()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_MULTIPLE_ADAPTIVE_SELECTIONS>;

        return $r0;
    }

    static java.lang.String access$1500()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_RENDERER_DISABLED_INDICES>;

        return $r0;
    }

    void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1 r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder)>(r1);

        return;
    }

    static java.lang.String access$1700()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_RENDERER_INDICES>;

        return $r0;
    }

    static java.lang.String access$1800()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_TRACK_GROUP_ARRAYS>;

        return $r0;
    }

    static java.lang.String access$1900()
    {
        java.lang.String $r0;

        $r0 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1, $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        androidx.media3.common.Bundleable$Creator $r20;

        $r0 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke $r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT> = $r1;

        $r2 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT>;

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT> = $r2;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1000);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_VIDEO_CONSTRAINTS_IF_NECESSARY> = $r3;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1001);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_MIME_TYPE_ADAPTIVENESS> = $r4;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1002);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_NON_SEAMLESS_ADAPTIVENESS> = $r5;

        $r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1003);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_AUDIO_CONSTRAINTS_IF_NECESSARY> = $r6;

        $r7 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1004);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_MIME_TYPE_ADAPTIVENESS> = $r7;

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1005);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_SAMPLE_RATE_ADAPTIVENESS> = $r8;

        $r9 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1006);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_CHANNEL_COUNT_ADAPTIVENESS> = $r9;

        $r10 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1007);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_EXCEED_RENDERER_CAPABILITIES_IF_NECESSARY> = $r10;

        $r11 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1008);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_TUNNELING_ENABLED> = $r11;

        $r12 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1009);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_MULTIPLE_ADAPTIVE_SELECTIONS> = $r12;

        $r13 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1010);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_RENDERER_INDICES> = $r13;

        $r14 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1011);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES_TRACK_GROUP_ARRAYS> = $r14;

        $r15 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1012);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_SELECTION_OVERRIDES> = $r15;

        $r16 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1013);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_RENDERER_DISABLED_INDICES> = $r16;

        $r17 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1014);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_VIDEO_MIXED_DECODER_SUPPORT_ADAPTIVENESS> = $r17;

        $r18 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1015);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_ALLOW_AUDIO_MIXED_DECODER_SUPPORT_ADAPTIVENESS> = $r18;

        $r19 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1016);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: java.lang.String FIELD_CONSTRAIN_AUDIO_CHANNEL_COUNT_TO_DEVICE_CAPABILITIES> = $r19;

        $r20 = dynamicinvoke "fromBundle" <androidx.media3.common.Bundleable$Creator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.common.Bundleable __METHODTYPE__(android.os.Bundle), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters lambda$static$0(android.os.Bundle)>, methodtype: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters __METHODTYPE__(android.os.Bundle));

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: androidx.media3.common.Bundleable$Creator CREATOR> = $r20;

        return;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>
    public void <init>()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: void <init>()>();

        $r1 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        android.content.Context r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.media3.common.TrackSelectionParameters$Builder: void <init>()>();

        $r2 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        specialinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(android.content.Context)>(r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate> = $r2;

        return;
    }

    protected androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder set(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder set(androidx.media3.common.TrackSelectionParameters)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoSizeSd()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoSizeSd()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearVideoSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearVideoSizeConstraints()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0, i1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoSize(int,int)>(i0, i1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoFrameRate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxVideoBitrate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMinVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0, i1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoSize(int,int)>(i0, i1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMinVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoFrameRate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMinVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMinVideoBitrate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setExceedVideoConstraintsIfNecessary(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedVideoConstraintsIfNecessary(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowVideoMixedMimeTypeAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoMixedMimeTypeAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowVideoNonSeamlessAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoNonSeamlessAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowVideoMixedDecoderSupportAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowVideoMixedDecoderSupportAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setViewportSizeToPhysicalDisplaySize(android.content.Context, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        android.content.Context r1;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean)>(r1, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearViewportSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearViewportSizeConstraints()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setViewportSize(int, int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0, i1;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSize(int,int,boolean)>(i0, i1, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredVideoMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoMimeType(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredVideoMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String[] r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoMimeTypes(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredVideoRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredVideoRoleFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioLanguage(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String[] r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioLanguages(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioRoleFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxAudioChannelCount(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxAudioChannelCount(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxAudioBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setMaxAudioBitrate(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setExceedAudioConstraintsIfNecessary(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedAudioConstraintsIfNecessary(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowAudioMixedMimeTypeAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedMimeTypeAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowAudioMixedSampleRateAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedSampleRateAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowAudioMixedChannelCountAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedChannelCountAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowAudioMixedDecoderSupportAdaptiveness(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowAudioMixedDecoderSupportAdaptiveness(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioMimeType(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String[] r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredAudioMimeTypes(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        android.content.Context r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguage(java.lang.String)>(r1);

        return r0;
    }

    public transient androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.lang.String[] r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguages(java.lang.String[])>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextRoleFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setIgnoredTextSelectionFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setIgnoredTextSelectionFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setSelectUndeterminedTextLanguage(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setSelectUndeterminedTextLanguage(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setDisabledTextTrackSelectionFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setDisabledTextTrackSelectionFlags(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setForceLowestBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceLowestBitrate(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setForceHighestSupportedBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceHighestSupportedBitrate(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder addOverride(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.common.TrackSelectionOverride r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder addOverride(androidx.media3.common.TrackSelectionOverride)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearOverride(androidx.media3.common.TrackGroup)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.common.TrackGroup r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverride(androidx.media3.common.TrackGroup)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setOverrideForType(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.common.TrackSelectionOverride r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setOverrideForType(androidx.media3.common.TrackSelectionOverride)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearOverridesOfType(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverridesOfType(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearOverrides()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearOverrides()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setDisabledTrackTypes(java.util.Set)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        java.util.Set r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setDisabledTrackTypes(java.util.Set)>(r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setTrackTypeDisabled(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setTrackTypeDisabled(int,boolean)>(i0, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setExceedRendererCapabilitiesIfNecessary(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setExceedRendererCapabilitiesIfNecessary(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setTunnelingEnabled(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setTunnelingEnabled(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setAllowMultipleAdaptiveSelections(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setAllowMultipleAdaptiveSelections(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setRendererDisabled(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setRendererDisabled(int,boolean)>(i0, z0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setSelectionOverride(int, androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter2: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride)>(i0, r1, r2);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearSelectionOverride(int, androidx.media3.exoplayer.source.TrackGroupArray)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray)>(i0, r1);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearSelectionOverrides(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        int i0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearSelectionOverrides(int)>(i0);

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearSelectionOverrides()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder clearSelectionOverrides()>();

        return r0;
    }

    public androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder delegate>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters build()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setTrackTypeDisabled(int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setTrackTypeDisabled(int,boolean)>(i0, z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setDisabledTrackTypes(java.util.Set)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.util.Set r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.util.Set;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setDisabledTrackTypes(java.util.Set)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearOverrides()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearOverrides()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearOverridesOfType(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearOverridesOfType(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearOverride(androidx.media3.common.TrackGroup)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        androidx.media3.common.TrackGroup r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearOverride(androidx.media3.common.TrackGroup)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setOverrideForType(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        androidx.media3.common.TrackSelectionOverride r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setOverrideForType(androidx.media3.common.TrackSelectionOverride)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder addOverride(androidx.media3.common.TrackSelectionOverride)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        androidx.media3.common.TrackSelectionOverride r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionOverride;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder addOverride(androidx.media3.common.TrackSelectionOverride)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setForceHighestSupportedBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setForceHighestSupportedBitrate(boolean)>(z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setForceLowestBitrate(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setForceLowestBitrate(boolean)>(z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setSelectUndeterminedTextLanguage(boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setSelectUndeterminedTextLanguage(boolean)>(z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setIgnoredTextSelectionFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setIgnoredTextSelectionFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextRoleFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextLanguages(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextLanguage(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        android.content.Context r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioMimeTypes(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioMimeType(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxAudioBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxAudioBitrate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxAudioChannelCount(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxAudioChannelCount(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioRoleFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioLanguages(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioLanguages(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredAudioLanguage(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredAudioLanguage(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoRoleFlags(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredVideoRoleFlags(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoMimeTypes(java.lang.String[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredVideoMimeTypes(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setPreferredVideoMimeType(java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setPreferredVideoMimeType(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setViewportSize(int, int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setViewportSize(int,int,boolean)>(i0, i1, z0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearViewportSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearViewportSizeConstraints()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        android.content.Context r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean)>(r1, z0);

        return $r2;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMinVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMinVideoBitrate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMinVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMinVideoFrameRate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMinVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMinVideoSize(int,int)>(i0, i1);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoBitrate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoBitrate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoFrameRate(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoFrameRate(int)>(i0);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoSize(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoSize(int,int)>(i0, i1);

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder clearVideoSizeConstraints()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder clearVideoSizeConstraints()>();

        return $r1;
    }

    public volatile androidx.media3.common.TrackSelectionParameters$Builder setMaxVideoSizeSd()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder setMaxVideoSizeSd()>();

        return $r1;
    }

    protected volatile androidx.media3.common.TrackSelectionParameters$Builder set(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder r0, $r2;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ParametersBuilder set(androidx.media3.common.TrackSelectionParameters)>(r1);

        return $r2;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int length>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_GROUP_INDEX>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACKS>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACK_TYPE>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: androidx.media3.common.Bundleable$Creator CREATOR>
    public transient void <init>(int, int[])
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r0;
        int i0;
        int[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: void <init>(int,int[],int)>(i0, r1, 0);

        return;
    }

    public void <init>(int, int[], int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r0;
        int i0, i1, $i2, $i3;
        int[] r1, $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex> = i0;

        $i2 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i2);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks> = $r2;

        $i3 = lengthof r1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int length> = $i3;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type> = i1;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        staticinvoke <java.util.Arrays: void sort(int[])>($r3);

        return;
    }

    public boolean containsTrack(int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r0;
        int i0, i1, i2, i3;
        int[] r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        i0 := @parameter0: int;

        r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        i2 = r1[i3];

        if i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        $i1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex>;

        $i2 = 31 * $i1;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        $i3 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r1);

        i0 = $i2 + $i3;

        $i5 = 31 * i0;

        $i4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type>;

        $i6 = $i5 + $i4;

        return $i6;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3;
        int[] $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride) r1;

        $i1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex>;

        $i0 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex>;

        if $i1 != $i0 goto label4;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        $r5 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r6, $r5);

        if $z0 == 0 goto label4;

        $i3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type>;

        $i2 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type>;

        if $i3 != $i2 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public android.os.Bundle toBundle()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride r0;
        android.os.Bundle r1, $r2;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6;
        int[] $r4;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_GROUP_INDEX>;

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>($r3, $i0);

        $r5 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACKS>;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks>;

        virtualinvoke r1.<android.os.Bundle: void putIntArray(java.lang.String,int[])>($r5, $r4);

        $r6 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACK_TYPE>;

        $i1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: int type>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>($r6, $i1);

        return r1;
    }

    private static androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride lambda$static$0(android.os.Bundle)
    {
        android.os.Bundle r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride $r6;

        r0 := @parameter0: android.os.Bundle;

        $r2 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_GROUP_INDEX>;

        i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String,int)>($r2, -1);

        $r3 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACKS>;

        r1 = virtualinvoke r0.<android.os.Bundle: int[] getIntArray(java.lang.String)>($r3);

        $r4 = <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACK_TYPE>;

        i1 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String,int)>($r4, -1);

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride;

        specialinvoke $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: void <init>(int,int[],int)>(i0, r1, i1);

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2;
        androidx.media3.common.Bundleable$Creator $r3;

        $r0 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(0);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_GROUP_INDEX> = $r0;

        $r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACKS> = $r1;

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(2);

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: java.lang.String FIELD_TRACK_TYPE> = $r2;

        $r3 = dynamicinvoke "fromBundle" <androidx.media3.common.Bundleable$Creator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.common.Bundleable __METHODTYPE__(android.os.Bundle), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride lambda$static$0(android.os.Bundle)>, methodtype: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride __METHODTYPE__(android.os.Bundle));

        <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride: androidx.media3.common.Bundleable$Creator CREATOR> = $r3;

        return;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector val$defaultTrackSelector>
    void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32, androidx.media3.exoplayer.trackselection.DefaultTrackSelector)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1 r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        r2 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector val$defaultTrackSelector> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSpatializerEnabledChanged(android.media.Spatializer, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1 r0;
        android.media.Spatializer r1;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1;

        r1 := @parameter0: android.media.Spatializer;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector val$defaultTrackSelector>;

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void access$4200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector)>($r2);

        return;
    }

    public void onSpatializerAvailableChanged(android.media.Spatializer, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1 r0;
        android.media.Spatializer r1;
        boolean z0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1;

        r1 := @parameter0: android.media.Spatializer;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector val$defaultTrackSelector>;

        staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void access$4200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector)>($r2);

        return;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean spatializationSupported>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener>
    public static androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 tryCreateInstance(android.content.Context)
    {
        android.content.Context r0;
        android.media.AudioManager r1;
        java.lang.Object $r2;
        android.media.Spatializer $r3;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 $r4;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r1 = (android.media.AudioManager) $r2;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        $r3 = virtualinvoke r1.<android.media.AudioManager: android.media.Spatializer getSpatializer()>();

        specialinvoke $r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: void <init>(android.media.Spatializer)>($r3);

     label2:
        return $r4;
    }

    private void <init>(android.media.Spatializer)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        android.media.Spatializer r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        r1 := @parameter0: android.media.Spatializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer> = r1;

        $i0 = virtualinvoke r1.<android.media.Spatializer: int getImmersiveAudioLevel()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean spatializationSupported> = $z0;

        return;
    }

    public void ensureInitialized(androidx.media3.exoplayer.trackselection.DefaultTrackSelector, android.os.Looper)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r1;
        android.os.Looper r2;
        android.media.Spatializer$OnSpatializerStateChangedListener $r3, $r11;
        android.os.Handler $r4, $r6, $r7;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1 $r5;
        android.media.Spatializer $r8;
        java.util.concurrent.Executor $r10;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        r2 := @parameter1: android.os.Looper;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener>;

        if $r3 != null goto label1;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler>;

        if $r4 == null goto label2;

     label1:
        return;

     label2:
        $r5 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1;

        specialinvoke $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1: void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32,androidx.media3.exoplayer.trackselection.DefaultTrackSelector)>(r0, r1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener> = $r5;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler> = $r6;

        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer>;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r7);

        $r10 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r7) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener>;

        virtualinvoke $r8.<android.media.Spatializer: void addOnSpatializerStateChangedListener(java.util.concurrent.Executor,android.media.Spatializer$OnSpatializerStateChangedListener)>($r10, $r11);

        return;
    }

    public boolean isSpatializationSupported()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: boolean spatializationSupported>;

        return $z0;
    }

    public boolean isAvailable()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        android.media.Spatializer $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer>;

        $z0 = virtualinvoke $r1.<android.media.Spatializer: boolean isAvailable()>();

        return $z0;
    }

    public boolean isEnabled()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        android.media.Spatializer $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer>;

        $z0 = virtualinvoke $r1.<android.media.Spatializer: boolean isEnabled()>();

        return $z0;
    }

    public boolean canBeSpatialized(androidx.media3.common.AudioAttributes, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        androidx.media3.common.AudioAttributes r1;
        androidx.media3.common.Format r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.media.AudioFormat$Builder r3, $r11, $r12;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;
        android.media.Spatializer $r6;
        androidx.media3.common.AudioAttributes$AudioAttributesV21 $r7;
        android.media.AudioAttributes $r8;
        android.media.AudioFormat $r9;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        r1 := @parameter0: androidx.media3.common.AudioAttributes;

        r2 := @parameter1: androidx.media3.common.Format;

        $r5 = "audio/eac3-joc";

        $r4 = r2.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $i2 = r2.<androidx.media3.common.Format: int channelCount>;

        if $i2 != 16 goto label1;

        $i3 = 12;

        goto label2;

     label1:
        $i3 = r2.<androidx.media3.common.Format: int channelCount>;

     label2:
        i0 = $i3;

        $r11 = new android.media.AudioFormat$Builder;

        specialinvoke $r11.<android.media.AudioFormat$Builder: void <init>()>();

        $r12 = virtualinvoke $r11.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setEncoding(int)>(2);

        $i4 = staticinvoke <androidx.media3.common.util.Util: int getAudioTrackChannelConfig(int)>(i0);

        r3 = virtualinvoke $r12.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setChannelMask(int)>($i4);

        $i5 = r2.<androidx.media3.common.Format: int sampleRate>;

        if $i5 == -1 goto label3;

        $i1 = r2.<androidx.media3.common.Format: int sampleRate>;

        virtualinvoke r3.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setSampleRate(int)>($i1);

     label3:
        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer>;

        $r7 = virtualinvoke r1.<androidx.media3.common.AudioAttributes: androidx.media3.common.AudioAttributes$AudioAttributesV21 getAudioAttributesV21()>();

        $r8 = $r7.<androidx.media3.common.AudioAttributes$AudioAttributesV21: android.media.AudioAttributes audioAttributes>;

        $r9 = virtualinvoke r3.<android.media.AudioFormat$Builder: android.media.AudioFormat build()>();

        $z1 = virtualinvoke $r6.<android.media.Spatializer: boolean canBeSpatialized(android.media.AudioAttributes,android.media.AudioFormat)>($r8, $r9);

        return $z1;
    }

    public void release()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 r0;
        android.media.Spatializer$OnSpatializerStateChangedListener $r1, $r3;
        android.os.Handler $r2, $r5, $r7;
        android.media.Spatializer $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer spatializer>;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener>;

        virtualinvoke $r4.<android.media.Spatializer: void removeOnSpatializerStateChangedListener(android.media.Spatializer$OnSpatializerStateChangedListener)>($r3);

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler>;

        $r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r5);

        $r7 = (android.os.Handler) $r6;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.os.Handler handler> = null;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32: android.media.Spatializer$OnSpatializerStateChangedListener listener> = null;

        return;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectionEligibility>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isWithinRendererCapabilities>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isDefault>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isForced>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredRoleFlagsScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectedAudioLanguageScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean hasCaptionRoleFlags>
    public static com.google.common.collect.ImmutableList createForTrackGroup(int, androidx.media3.common.TrackGroup, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int[], java.lang.String)
    {
        int i0, $i1, $i2, i3;
        androidx.media3.common.TrackGroup r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        int[] r2;
        java.lang.String r3;
        com.google.common.collect.ImmutableList$Builder r4;
        com.google.common.collect.ImmutableList $r5;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.common.TrackGroup;

        r1 := @parameter2: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r2 := @parameter3: int[];

        r3 := @parameter4: java.lang.String;

        r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        i3 = 0;

     label1:
        $i1 = r0.<androidx.media3.common.TrackGroup: int length>;

        if i3 >= $i1 goto label2;

        $r6 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        $i2 = r2[i3];

        specialinvoke $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,java.lang.String)>(i0, r0, i3, r1, $i2, r3);

        virtualinvoke r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r5;
    }

    public void <init>(int, androidx.media3.common.TrackGroup, int, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int, java.lang.String)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, $i21, i22;
        androidx.media3.common.TrackGroup r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r2;
        java.lang.String r3, $r9, $r15;
        com.google.common.collect.ImmutableList r4, $r6, $r11, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, z12, $z13, $z14;
        androidx.media3.common.Format $r5, $r7, $r8, $r10, $r13;
        java.lang.Object $r14;
        byte $b23;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.TrackGroup;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i2 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: void <init>(int,androidx.media3.common.TrackGroup,int)>(i0, r1, i1);

        $z0 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i2, 0);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isWithinRendererCapabilities> = $z0;

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: androidx.media3.common.Format format>;

        $i6 = $r5.<androidx.media3.common.Format: int selectionFlags>;

        $i4 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int ignoredTextSelectionFlags>;

        $i5 = $i4 ^ -1;

        i3 = $i6 & $i5;

        $i7 = i3 & 1;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isDefault> = $z6;

        $i8 = i3 & 2;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isForced> = $z7;

        i18 = 2147483647;

        i19 = 0;

        $r6 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredTextLanguages>;

        $z1 = virtualinvoke $r6.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        $r18 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>("");

        goto label06;

     label05:
        $r18 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredTextLanguages>;

     label06:
        r4 = $r18;

        i20 = 0;

     label07:
        $i21 = virtualinvoke r4.<com.google.common.collect.ImmutableList: int size()>();

        if i20 >= $i21 goto label09;

        $r13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: androidx.media3.common.Format format>;

        $r14 = virtualinvoke r4.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i20);

        $r15 = (java.lang.String) $r14;

        $z5 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean selectUndeterminedTextLanguage>;

        i22 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getFormatLanguageScore(androidx.media3.common.Format,java.lang.String,boolean)>($r13, $r15, $z5);

        if i22 <= 0 goto label08;

        i18 = i20;

        i19 = i22;

        goto label09;

     label08:
        i20 = i20 + 1;

        goto label07;

     label09:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageIndex> = i18;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageScore> = i19;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: androidx.media3.common.Format format>;

        $i10 = $r7.<androidx.media3.common.Format: int roleFlags>;

        $i9 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int preferredTextRoleFlags>;

        $i11 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int access$3800(int,int)>($i10, $i9);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredRoleFlagsScore> = $i11;

        $r8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: androidx.media3.common.Format format>;

        $i12 = $r8.<androidx.media3.common.Format: int roleFlags>;

        $i13 = $i12 & 1088;

        if $i13 == 0 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean hasCaptionRoleFlags> = $z8;

        $r9 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String)>(r3);

        if $r9 != null goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        z10 = $z9;

        $r10 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: androidx.media3.common.Format format>;

        $i14 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int getFormatLanguageScore(androidx.media3.common.Format,java.lang.String,boolean)>($r10, r3, z10);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectedAudioLanguageScore> = $i14;

        $i15 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageScore>;

        if $i15 > 0 goto label15;

        $r11 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredTextLanguages>;

        $z2 = virtualinvoke $r11.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z2 == 0 goto label14;

        $i17 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredRoleFlagsScore>;

        if $i17 > 0 goto label15;

     label14:
        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isDefault>;

        if $z3 != 0 goto label15;

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isForced>;

        if $z4 == 0 goto label16;

        $i16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectedAudioLanguageScore>;

        if $i16 <= 0 goto label16;

     label15:
        $z11 = 1;

        goto label17;

     label16:
        $z11 = 0;

     label17:
        z12 = $z11;

        $z13 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        $z14 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i2, $z13);

        if $z14 == 0 goto label18;

        if z12 == 0 goto label18;

        $b23 = 1;

        goto label19;

     label18:
        $b23 = 0;

     label19:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectionEligibility> = $b23;

        return;
    }

    public int getSelectionEligibility()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectionEligibility>;

        return $i0;
    }

    public boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo r0, r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        return 0;
    }

    public int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo r0, r1;
        com.google.common.collect.ComparisonChain $r2, $r3, $r8, $r9, $r10, $r11, $r15, r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Integer $r4, $r5;
        com.google.common.collect.Ordering $r6, $r7, $r14, $r16;
        java.lang.Boolean $r12, $r13;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        $r2 = staticinvoke <com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain start()>();

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isWithinRendererCapabilities>;

        $z0 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isWithinRendererCapabilities>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z1, $z0);

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageIndex>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageIndex>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r7 = virtualinvoke $r6.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r8 = virtualinvoke $r3.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r4, $r5, $r7);

        $i3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageScore>;

        $i2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageScore>;

        $r9 = virtualinvoke $r8.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i3, $i2);

        $i5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredRoleFlagsScore>;

        $i4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredRoleFlagsScore>;

        $r10 = virtualinvoke $r9.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i5, $i4);

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isDefault>;

        $z2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isDefault>;

        $r11 = virtualinvoke $r10.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z3, $z2);

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isForced>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $z5 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isForced>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $i6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredLanguageScore>;

        if $i6 != 0 goto label1;

        $r16 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        goto label2;

     label1:
        $r14 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r16 = virtualinvoke $r14.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

     label2:
        $r15 = virtualinvoke $r11.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r12, $r13, $r16);

        $i8 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectedAudioLanguageScore>;

        $i7 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int selectedAudioLanguageScore>;

        r17 = virtualinvoke $r15.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i8, $i7);

        $i9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int preferredRoleFlagsScore>;

        if $i9 != 0 goto label3;

        $z7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean hasCaptionRoleFlags>;

        $z6 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean hasCaptionRoleFlags>;

        r17 = virtualinvoke r17.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean)>($z7, $z6);

     label3:
        $i10 = virtualinvoke r17.<com.google.common.collect.ComparisonChain: int result()>();

        return $i10;
    }

    public static int compareSelections(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        java.lang.Object $r2, $r4;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo $r3, $r5;
        int $i0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo) $r2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo) $r4;

        $i0 = virtualinvoke $r3.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo)>($r5);

        return $i0;
    }

    public volatile boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo r0, $r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo;

        $r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo) r1;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo)>($r2);

        return $z0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo) r1;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo: int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo)>($r2);

        return $i0;
    }

androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory: java.util.List create(int,androidx.media3.common.TrackGroup,int[])>
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int rendererIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: androidx.media3.common.TrackGroup trackGroup>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int trackIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: androidx.media3.common.Format format>
    public void <init>(int, androidx.media3.common.TrackGroup, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo r0;
        int i0, i1;
        androidx.media3.common.TrackGroup r1;
        androidx.media3.common.Format $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.TrackGroup;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int rendererIndex> = i0;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: androidx.media3.common.TrackGroup trackGroup> = r1;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int trackIndex> = i1;

        $r2 = virtualinvoke r1.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: androidx.media3.common.Format format> = $r2;

        return;
    }

<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: int getSelectionEligibility()>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo)>
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMinConstraints>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinRendererCapabilities>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int bitrate>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int pixelCount>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredMimeTypeMatchIndex>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredRoleFlagsScore>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean hasMainOrNoRoleFlag>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean allowMixedMimeTypes>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int selectionEligibility>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration>
<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int codecPreferenceScore>
    public static com.google.common.collect.ImmutableList createForTrackGroup(int, androidx.media3.common.TrackGroup, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int[], int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, $i8;
        androidx.media3.common.TrackGroup r0;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r1;
        int[] r2;
        com.google.common.collect.ImmutableList$Builder r3;
        boolean z0, $z1, $z2;
        com.google.common.collect.ImmutableList $r4;
        androidx.media3.common.Format $r5;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.common.TrackGroup;

        r1 := @parameter2: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        r2 := @parameter3: int[];

        i1 := @parameter4: int;

        $i5 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int viewportWidth>;

        $i4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int viewportHeight>;

        $z1 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean viewportOrientationMayChange>;

        i2 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int access$3700(androidx.media3.common.TrackGroup,int,int,boolean)>(r0, $i5, $i4, $z1);

        r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        i7 = 0;

     label1:
        $i6 = r0.<androidx.media3.common.TrackGroup: int length>;

        if i7 >= $i6 goto label5;

        $r5 = virtualinvoke r0.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i7);

        i3 = virtualinvoke $r5.<androidx.media3.common.Format: int getPixelCount()>();

        if i2 == 2147483647 goto label2;

        if i3 == -1 goto label3;

        if i3 > i2 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $r7 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        $i8 = r2[i7];

        specialinvoke $r7.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,int,boolean)>(i0, r0, i7, r1, $i8, i1, z0);

        virtualinvoke r3.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r7);

        i7 = i7 + 1;

        goto label1;

     label5:
        $r4 = virtualinvoke r3.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r4;
    }

    public void <init>(int, androidx.media3.common.TrackGroup, int, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters, int, int, boolean)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, $i45;
        androidx.media3.common.TrackGroup r1;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        byte b4, $b13, $b18, $b25, $b30, $b36;
        androidx.media3.common.Format $r3, $r7, $r9, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r34, $r35, $r36, $r37;
        java.lang.String $r4, $r8, $r11;
        com.google.common.collect.ImmutableList $r10, $r38;
        java.lang.Object $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.TrackGroup;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo: void <init>(int,androidx.media3.common.TrackGroup,int)>(i0, r1, i1);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters> = r2;

        $z1 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness>;

        if $z1 == 0 goto label01;

        $b36 = 24;

        goto label02;

     label01:
        $b36 = 16;

     label02:
        b4 = $b36;

        $z2 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness>;

        if $z2 == 0 goto label03;

        $i35 = i3 & b4;

        if $i35 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean allowMixedMimeTypes> = $z4;

        if z0 == 0 goto label09;

        $r23 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i23 = $r23.<androidx.media3.common.Format: int width>;

        if $i23 == -1 goto label05;

        $r30 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i34 = $r30.<androidx.media3.common.Format: int width>;

        $i33 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int maxVideoWidth>;

        if $i34 > $i33 goto label09;

     label05:
        $r24 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i24 = $r24.<androidx.media3.common.Format: int height>;

        if $i24 == -1 goto label06;

        $r29 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i32 = $r29.<androidx.media3.common.Format: int height>;

        $i31 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int maxVideoHeight>;

        if $i32 > $i31 goto label09;

     label06:
        $r25 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $f3 = $r25.<androidx.media3.common.Format: float frameRate>;

        $b25 = $f3 cmpl -1.0F;

        if $b25 == 0 goto label07;

        $r28 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $f5 = $r28.<androidx.media3.common.Format: float frameRate>;

        $i29 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int maxVideoFrameRate>;

        $f4 = (float) $i29;

        $b30 = $f5 cmpg $f4;

        if $b30 > 0 goto label09;

     label07:
        $r26 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i26 = $r26.<androidx.media3.common.Format: int bitrate>;

        if $i26 == -1 goto label08;

        $r27 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i28 = $r27.<androidx.media3.common.Format: int bitrate>;

        $i27 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int maxVideoBitrate>;

        if $i28 > $i27 goto label09;

     label08:
        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints> = $z5;

        if z0 == 0 goto label15;

        $r15 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i11 = $r15.<androidx.media3.common.Format: int width>;

        if $i11 == -1 goto label11;

        $r22 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i22 = $r22.<androidx.media3.common.Format: int width>;

        $i21 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int minVideoWidth>;

        if $i22 < $i21 goto label15;

     label11:
        $r16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i12 = $r16.<androidx.media3.common.Format: int height>;

        if $i12 == -1 goto label12;

        $r21 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i20 = $r21.<androidx.media3.common.Format: int height>;

        $i19 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int minVideoHeight>;

        if $i20 < $i19 goto label15;

     label12:
        $r17 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $f0 = $r17.<androidx.media3.common.Format: float frameRate>;

        $b13 = $f0 cmpl -1.0F;

        if $b13 == 0 goto label13;

        $r20 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $f2 = $r20.<androidx.media3.common.Format: float frameRate>;

        $i17 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int minVideoFrameRate>;

        $f1 = (float) $i17;

        $b18 = $f2 cmpl $f1;

        if $b18 < 0 goto label15;

     label13:
        $r18 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i14 = $r18.<androidx.media3.common.Format: int bitrate>;

        if $i14 == -1 goto label14;

        $r19 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i16 = $r19.<androidx.media3.common.Format: int bitrate>;

        $i15 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int minVideoBitrate>;

        if $i16 < $i15 goto label15;

     label14:
        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMinConstraints> = $z6;

        $z7 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i2, 0);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinRendererCapabilities> = $z7;

        $r34 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i37 = $r34.<androidx.media3.common.Format: int bitrate>;

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int bitrate> = $i37;

        $r35 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i38 = virtualinvoke $r35.<androidx.media3.common.Format: int getPixelCount()>();

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int pixelCount> = $i38;

        $r36 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i39 = $r36.<androidx.media3.common.Format: int roleFlags>;

        $i40 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: int preferredVideoRoleFlags>;

        $i41 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int access$3800(int,int)>($i39, $i40);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredRoleFlagsScore> = $i41;

        $r37 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i42 = $r37.<androidx.media3.common.Format: int roleFlags>;

        if $i42 == 0 goto label17;

        $r13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i9 = $r13.<androidx.media3.common.Format: int roleFlags>;

        $i10 = $i9 & 1;

        if $i10 == 0 goto label18;

     label17:
        $z8 = 1;

        goto label19;

     label18:
        $z8 = 0;

     label19:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean hasMainOrNoRoleFlag> = $z8;

        i43 = 2147483647;

        i44 = 0;

     label20:
        $r38 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredVideoMimeTypes>;

        $i45 = virtualinvoke $r38.<com.google.common.collect.ImmutableList: int size()>();

        if i44 >= $i45 goto label22;

        $r7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $r8 = $r7.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        if $r8 == null goto label21;

        $r9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $r11 = $r9.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r10 = r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: com.google.common.collect.ImmutableList preferredVideoMimeTypes>;

        $r12 = virtualinvoke $r10.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i44);

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label21;

        i43 = i44;

        goto label22;

     label21:
        i44 = i44 + 1;

        goto label20;

     label22:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredMimeTypeMatchIndex> = i43;

        $i5 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getDecoderSupport(int)>(i2);

        if $i5 != 128 goto label23;

        $z9 = 1;

        goto label24;

     label23:
        $z9 = 0;

     label24:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder> = $z9;

        $i6 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getHardwareAccelerationSupport(int)>(i2);

        if $i6 != 64 goto label25;

        $z10 = 1;

        goto label26;

     label25:
        $z10 = 0;

     label26:
        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration> = $z10;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $r4 = $r3.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $i7 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: int access$3900(java.lang.String)>($r4);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int codecPreferenceScore> = $i7;

        $i8 = specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int evaluateSelectionEligibility(int,int)>(i2, b4);

        r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int selectionEligibility> = $i8;

        return;
    }

    public int getSelectionEligibility()
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int selectionEligibility>;

        return $i0;
    }

    public boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2;
        androidx.media3.common.Format $r3, $r4;
        java.lang.String $r5, $r6;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean allowMixedMimeTypes>;

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $r6 = $r3.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $r5 = $r4.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z6 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z6 == 0 goto label3;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z1 = $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedDecoderSupportAdaptiveness>;

        if $z1 != 0 goto label2;

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder>;

        $z2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder>;

        if $z3 != $z2 goto label3;

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration>;

        $z4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration>;

        if $z5 != $z4 goto label3;

     label2:
        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        return $z7;
    }

    private int evaluateSelectionEligibility(int, int)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.media3.common.Format $r1, $r3;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r2, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte $b6;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i2 = $r1.<androidx.media3.common.Format: int roleFlags>;

        $i3 = $i2 & 16384;

        if $i3 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z0 = $r2.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary>;

        $z1 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i0, $z0);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints>;

        if $z2 != 0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z8 = $r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary>;

        if $z8 != 0 goto label3;

        return 0;

     label3:
        $z3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)>(i0, 0);

        if $z3 == 0 goto label4;

        $z4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMinConstraints>;

        if $z4 == 0 goto label4;

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints>;

        if $z5 == 0 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.common.Format format>;

        $i4 = $r3.<androidx.media3.common.Format: int bitrate>;

        if $i4 == -1 goto label4;

        $r4 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z6 = $r4.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean forceHighestSupportedBitrate>;

        if $z6 != 0 goto label4;

        $r5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z7 = $r5.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean forceLowestBitrate>;

        if $z7 != 0 goto label4;

        $i5 = i0 & i1;

        if $i5 == 0 goto label4;

        $b6 = 2;

        goto label5;

     label4:
        $b6 = 1;

     label5:
        return $b6;
    }

    private static int compareNonQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0, r1;
        com.google.common.collect.ComparisonChain $r2, $r3, $r4, $r5, $r6, $r7, $r12, $r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Integer $r8, $r9;
        com.google.common.collect.Ordering $r10, $r11;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        r1 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        $r2 = staticinvoke <com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain start()>();

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinRendererCapabilities>;

        $z0 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinRendererCapabilities>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z1, $z0);

        $i1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredRoleFlagsScore>;

        $i0 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredRoleFlagsScore>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i1, $i0);

        $z3 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean hasMainOrNoRoleFlag>;

        $z2 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean hasMainOrNoRoleFlag>;

        $r5 = virtualinvoke $r4.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z3, $z2);

        $z5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints>;

        $z4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints>;

        $r6 = virtualinvoke $r5.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z5, $z4);

        $z7 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMinConstraints>;

        $z6 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMinConstraints>;

        $r7 = virtualinvoke $r6.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z7, $z6);

        $i2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredMimeTypeMatchIndex>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int preferredMimeTypeMatchIndex>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r10 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r11 = virtualinvoke $r10.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r12 = virtualinvoke $r7.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r8, $r9, $r11);

        $z9 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder>;

        $z8 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder>;

        $r13 = virtualinvoke $r12.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z9, $z8);

        $z11 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration>;

        $z10 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration>;

        r14 = virtualinvoke $r13.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean)>($z11, $z10);

        $z12 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesPrimaryDecoder>;

        if $z12 == 0 goto label1;

        $z13 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean usesHardwareAcceleration>;

        if $z13 == 0 goto label1;

        $i5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int codecPreferenceScore>;

        $i4 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int codecPreferenceScore>;

        r14 = virtualinvoke r14.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i5, $i4);

     label1:
        $i6 = virtualinvoke r14.<com.google.common.collect.ComparisonChain: int result()>();

        return $i6;
    }

    private static int compareQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo, androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0, r1;
        com.google.common.collect.Ordering r2, $r3, $r14, $r15, $r17;
        boolean $z0, $z1, $z2;
        com.google.common.collect.ComparisonChain $r4, $r7, $r10, $r13;
        java.lang.Integer $r5, $r6, $r8, $r9, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r16;

        r0 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        r1 := @parameter1: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        $z0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinMaxConstraints>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isWithinRendererCapabilities>;

        if $z1 == 0 goto label1;

        $r15 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4000()>();

        goto label2;

     label1:
        $r3 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4000()>();

        $r15 = virtualinvoke $r3.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

     label2:
        r2 = $r15;

        $r4 = staticinvoke <com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain start()>();

        $i5 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int bitrate>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $i6 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int bitrate>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r16 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters>;

        $z2 = $r16.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters: boolean forceLowestBitrate>;

        if $z2 == 0 goto label3;

        $r14 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4000()>();

        $r17 = virtualinvoke $r14.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        goto label4;

     label3:
        $r17 = staticinvoke <androidx.media3.exoplayer.trackselection.DefaultTrackSelector: com.google.common.collect.Ordering access$4100()>();

     label4:
        $r7 = virtualinvoke $r4.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r5, $r6, $r17);

        $i0 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int pixelCount>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int pixelCount>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r10 = virtualinvoke $r7.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r8, $r9, r2);

        $i2 = r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int bitrate>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = r1.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int bitrate>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r13 = virtualinvoke $r10.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r11, $r12, r2);

        $i4 = virtualinvoke $r13.<com.google.common.collect.ComparisonChain: int result()>();

        return $i4;
    }

    public static int compareSelections(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        com.google.common.collect.ComparisonChain $r2, $r10, $r11, $r19;
        java.util.Comparator $r3, $r6, $r9, $r12, $r15, $r18;
        java.lang.Object $r4, $r7, $r13, $r16;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo $r5, $r8, $r14, $r17;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain start()>();

        $r3 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareNonQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo));

        $r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>(r0, $r3);

        $r5 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo) $r4;

        $r6 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareNonQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo));

        $r7 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>(r1, $r6);

        $r8 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo) $r7;

        $r9 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareNonQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo));

        $r10 = virtualinvoke $r2.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r5, $r8, $r9);

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r11 = virtualinvoke $r10.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(int,int)>($i0, $i1);

        $r12 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo));

        $r13 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>(r0, $r12);

        $r14 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo) $r13;

        $r15 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo));

        $r16 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>(r1, $r15);

        $r17 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo) $r16;

        $r18 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: int compareQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo));

        $r19 = virtualinvoke $r11.<com.google.common.collect.ComparisonChain: com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator)>($r14, $r17, $r18);

        $i2 = virtualinvoke $r19.<com.google.common.collect.ComparisonChain: int result()>();

        return $i2;
    }

    public volatile boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo)
    {
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo r0, $r2;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo;

        $r2 = (androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo) r1;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo: boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo)>($r2);

        return $z0;
    }

