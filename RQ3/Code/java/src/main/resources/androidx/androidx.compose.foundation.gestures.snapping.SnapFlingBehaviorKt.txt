androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt
<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float MinFlingVelocityDp>
<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float NoDistance>
<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float NoVelocity>
    public static final androidx.compose.foundation.gestures.snapping.SnapFlingBehavior rememberSnapFlingBehavior(androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider r0;
        androidx.compose.runtime.Composer $r1;
        int $i0;
        androidx.compose.ui.unit.Density r2;
        boolean z0, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object r4, r6, $r15, $r17, $r19;
        androidx.compose.foundation.gestures.snapping.SnapFlingBehavior r5, $r8, $r20;
        androidx.compose.runtime.ProvidableCompositionLocal $r7;
        androidx.compose.animation.core.Easing $r9;
        androidx.compose.animation.core.TweenSpec $r10;
        androidx.compose.animation.core.AnimationSpec $r11, $r13;
        androidx.compose.animation.core.SpringSpec $r12;
        androidx.compose.runtime.Composer$Companion $r14;
        androidx.compose.runtime.CompositionLocal r16;
        androidx.compose.animation.core.DecayAnimationSpec r18;

        r0 := @parameter0: androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider;

        $r1 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "snapLayoutInfoProvider");

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-473984552);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(rememberSnapFlingBehavior)185@7875L7,186@7945L26,187@7983L447:SnapFlingBehavior.kt#ppz6w6");

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-473984552, $i0, -1, "androidx.compose.foundation.gestures.snapping.rememberSnapFlingBehavior (SnapFlingBehavior.kt:182)");

     label1:
        $r7 = staticinvoke <androidx.compose.ui.platform.CompositionLocalsKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalDensity()>();

        r16 = (androidx.compose.runtime.CompositionLocal) $r7;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r1, 2023513938, "C:CompositionLocal.kt#9igjgp");

        $r17 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r16);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r1);

        r2 = (androidx.compose.ui.unit.Density) $r17;

        r18 = staticinvoke <androidx.compose.animation.SplineBasedFloatDecayAnimationSpec_androidKt: androidx.compose.animation.core.DecayAnimationSpec rememberSplineBasedDecay(androidx.compose.runtime.Composer,int)>($r1, 0);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1618982084);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember)P(1,2,3):Composables.kt#9igjgp");

        $z5 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        $z6 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r18);

        $z7 = $z5 | $z6;

        $z8 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r2);

        z0 = $z7 | $z8;

        r4 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z0 != 0 goto label2;

        $r14 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r15 = virtualinvoke $r14.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r4 != $r15 goto label3;

     label2:
        $r8 = new androidx.compose.foundation.gestures.snapping.SnapFlingBehavior;

        $r9 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getLinearEasing()>();

        $r10 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(0, 0, $r9, 3, null);

        $r11 = (androidx.compose.animation.core.AnimationSpec) $r10;

        $r12 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 400.0F, null, 5, null);

        $r13 = (androidx.compose.animation.core.AnimationSpec) $r12;

        specialinvoke $r8.<androidx.compose.foundation.gestures.snapping.SnapFlingBehavior: void <init>(androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider,androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.DecayAnimationSpec,androidx.compose.animation.core.AnimationSpec,androidx.compose.ui.unit.Density,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r0, $r11, r18, $r13, r2, 0.0F, 32, null);

        r5 = $r8;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r5);

        $r19 = r5;

        goto label4;

     label3:
        $r19 = r4;

     label4:
        r6 = $r19;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r20 = (androidx.compose.foundation.gestures.snapping.SnapFlingBehavior) r6;

        $z9 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z9 == 0 goto label5;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label5:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r20;
    }

    private static final java.lang.Object approach(androidx.compose.foundation.gestures.ScrollScope, float, float, androidx.compose.foundation.gestures.snapping.ApproachAnimation, androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider, androidx.compose.ui.unit.Density, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.ScrollScope $r0;
        float f0, f1, f2, $f3;
        androidx.compose.foundation.gestures.snapping.ApproachAnimation r1;
        kotlin.coroutines.Continuation r2, r22;
        androidx.compose.animation.core.AnimationState r3;
        java.lang.Object $r4, r5, $r7, $r8, $r9, $r18;
        boolean $z0;
        java.lang.Number $r10;
        java.lang.Float $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider r15;
        androidx.compose.ui.unit.Density r16;
        androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1 $r17, r19;
        androidx.compose.foundation.gestures.snapping.ApproachStepResult r20;
        java.lang.IllegalStateException r21;

        $r0 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: androidx.compose.foundation.gestures.snapping.ApproachAnimation;

        r15 := @parameter4: androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider;

        r16 := @parameter5: androidx.compose.ui.unit.Density;

        r2 := @parameter6: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1;

        if $z0 == 0 goto label1;

        $r17 = (androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1) r2;

        $i0 = $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: int label>;

        $i3 = $i2 - -2147483648;

        $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: int label> = $i3;

        goto label2;

     label1:
        r19 = new androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1;

        specialinvoke r19.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: void <init>(kotlin.coroutines.Continuation)>(r2);

        $r17 = r19;

     label2:
        $r4 = $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r12 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f0);

        $r13 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f1);

        $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: java.lang.Object L$0> = r15;

        $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: java.lang.Object L$1> = r16;

        $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: int label> = 1;

        r22 = (kotlin.coroutines.Continuation) $r17;

        $r18 = interfaceinvoke r1.<androidx.compose.foundation.gestures.snapping.ApproachAnimation: java.lang.Object approachAnimation(androidx.compose.foundation.gestures.ScrollScope,java.lang.Object,java.lang.Object,kotlin.coroutines.Continuation)>($r0, $r12, $r13, r22);

        if $r18 != r5 goto label5;

        return r5;

     label4:
        $r7 = $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: java.lang.Object L$1>;

        r16 = (androidx.compose.ui.unit.Density) $r7;

        $r8 = $r17.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$approach$1: java.lang.Object L$0>;

        r15 = (androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider) $r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r18 = $r4;

     label5:
        r3 = (androidx.compose.animation.core.AnimationState) $r18;

        $r9 = virtualinvoke r3.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r10 = (java.lang.Number) $r9;

        $f3 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        f2 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float findClosestOffset(float,androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider,androidx.compose.ui.unit.Density)>($f3, r15, r16);

        r20 = new androidx.compose.foundation.gestures.snapping.ApproachStepResult;

        specialinvoke r20.<androidx.compose.foundation.gestures.snapping.ApproachStepResult: void <init>(float,androidx.compose.animation.core.AnimationState)>(f2, r3);

        return r20;

     label6:
        r21 = new java.lang.IllegalStateException;

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r21;
    }

    public static final float findClosestOffset(float, androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider, androidx.compose.ui.unit.Density)
    {
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8;
        androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider r0;
        androidx.compose.ui.unit.Density r1;
        kotlin.ranges.ClosedFloatingPointRange r2;
        java.lang.Comparable $r3, $r5;
        java.lang.Number $r4, $r6;
        byte $b0, $b1, $b2, $b3;
        boolean $z1, $z2, $z3, $z4;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider;

        r1 := @parameter2: androidx.compose.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "snapLayoutInfoProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "density");

        r2 = interfaceinvoke r0.<androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider: kotlin.ranges.ClosedFloatingPointRange calculateSnappingOffsetBounds(androidx.compose.ui.unit.Density)>(r1);

        $r3 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: java.lang.Comparable component1(kotlin.ranges.ClosedFloatingPointRange)>(r2);

        $r4 = (java.lang.Number) $r3;

        $f5 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: java.lang.Comparable component2(kotlin.ranges.ClosedFloatingPointRange)>(r2);

        $r6 = (java.lang.Number) $r5;

        $f6 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        f2 = staticinvoke <java.lang.Math: float signum(float)>(f0);

        $b0 = f2 cmpg 0.0F;

        if $b0 != 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        if $z1 == 0 goto label04;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $b3 = $f3 cmpg $f4;

        if $b3 > 0 goto label03;

        $f7 = $f6;

        goto label11;

     label03:
        $f7 = $f5;

        goto label11;

     label04:
        $b1 = f2 cmpg 1.0F;

        if $b1 != 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        if $z2 == 0 goto label07;

        $f7 = $f6;

        goto label11;

     label07:
        $b2 = f2 cmpg -1.0F;

        if $b2 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        if $z3 == 0 goto label10;

        $f7 = $f5;

        goto label11;

     label10:
        $f7 = 0.0F;

     label11:
        f1 = $f7;

        $z4 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: boolean findClosestOffset$isValidDistance(float)>(f1);

        if $z4 == 0 goto label12;

        $f8 = f1;

        goto label13;

     label12:
        $f8 = 0.0F;

     label13:
        return $f8;
    }

    private static final java.lang.Comparable component1(kotlin.ranges.ClosedFloatingPointRange)
    {
        kotlin.ranges.ClosedFloatingPointRange $r0;
        java.lang.Comparable $r1;

        $r0 := @parameter0: kotlin.ranges.ClosedFloatingPointRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        return $r1;
    }

    private static final java.lang.Comparable component2(kotlin.ranges.ClosedFloatingPointRange)
    {
        kotlin.ranges.ClosedFloatingPointRange $r0;
        java.lang.Comparable $r1;

        $r0 := @parameter0: kotlin.ranges.ClosedFloatingPointRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        return $r1;
    }

    private static final java.lang.Object animateDecay(androidx.compose.foundation.gestures.ScrollScope, float, androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.DecayAnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.ScrollScope $r0;
        float f0, $f1;
        androidx.compose.animation.core.DecayAnimationSpec r1;
        kotlin.coroutines.Continuation r2, r23;
        kotlin.jvm.internal.Ref$FloatRef r3, r20;
        java.lang.Object $r4, r5, $r7, $r9, $r13;
        boolean $z0, $z1, $z2;
        java.lang.Number $r10;
        byte $b0;
        kotlin.jvm.functions.Function1 $r12;
        androidx.compose.animation.core.AnimationState $r14, r17;
        int $i1, $i2, $i3, $i4, $i5;
        androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1 $r18, r19;
        androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$2 r21;
        java.lang.IllegalStateException r22;

        $r0 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        r17 := @parameter2: androidx.compose.animation.core.AnimationState;

        r1 := @parameter3: androidx.compose.animation.core.DecayAnimationSpec;

        r2 := @parameter4: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1;

        if $z0 == 0 goto label01;

        $r18 = (androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1) r2;

        $i1 = $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label01;

        $i3 = $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: int label>;

        $i4 = $i3 - -2147483648;

        $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: int label> = $i4;

        goto label02;

     label01:
        r19 = new androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1;

        specialinvoke r19.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: void <init>(kotlin.coroutines.Continuation)>(r2);

        $r18 = r19;

     label02:
        $r4 = $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label08;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r20 = new kotlin.jvm.internal.Ref$FloatRef;

        specialinvoke r20.<kotlin.jvm.internal.Ref$FloatRef: void <init>()>();

        r3 = r20;

        $r14 = r17;

        $r9 = virtualinvoke r17.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r10 = (java.lang.Number) $r9;

        $f1 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        $b0 = $f1 cmpg 0.0F;

        if $b0 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        r21 = new androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$2;

        specialinvoke r21.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$2: void <init>(float,kotlin.jvm.internal.Ref$FloatRef,androidx.compose.foundation.gestures.ScrollScope)>(f0, r3, $r0);

        $r12 = (kotlin.jvm.functions.Function1) r21;

        $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: java.lang.Object L$0> = r17;

        $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: int label> = 1;

        r23 = (kotlin.coroutines.Continuation) $r18;

        $r13 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animateDecay(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.DecayAnimationSpec,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r14, r1, $z2, $r12, r23);

        if $r13 != r5 goto label09;

        return r5;

     label08:
        $r7 = $r18.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateDecay$1: java.lang.Object L$0>;

        r17 = (androidx.compose.animation.core.AnimationState) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label09:
        return r17;

     label10:
        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r22;
    }

    private static final java.lang.Object animateSnap(androidx.compose.foundation.gestures.ScrollScope, float, float, androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.ScrollScope $r0;
        float f0, f1, f2, $f3, $f4, f5;
        androidx.compose.animation.core.AnimationSpec r1;
        kotlin.coroutines.Continuation r2, r29;
        kotlin.jvm.internal.Ref$FloatRef r3, r26;
        java.lang.Object $r4, r5, $r7, $r8, $r12, $r15, $r19;
        boolean $z0, $z1, $z2;
        java.lang.Number $r9, $r13, $r16;
        androidx.compose.animation.core.AnimationState $r10, $r20, r23;
        java.lang.Float $r14;
        byte $b0;
        kotlin.jvm.functions.Function1 $r18;
        int $i1, $i2, $i3, $i4, $i5;
        androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1 $r24, r25;
        androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$2 r27;
        java.lang.IllegalStateException r28;

        $r0 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r23 := @parameter3: androidx.compose.animation.core.AnimationState;

        r1 := @parameter4: androidx.compose.animation.core.AnimationSpec;

        r2 := @parameter5: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1;

        if $z0 == 0 goto label01;

        $r24 = (androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1) r2;

        $i1 = $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label01;

        $i3 = $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: int label>;

        $i4 = $i3 - -2147483648;

        $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: int label> = $i4;

        goto label02;

     label01:
        r25 = new androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1;

        specialinvoke r25.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: void <init>(kotlin.coroutines.Continuation)>(r2);

        $r24 = r25;

     label02:
        $r4 = $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label08;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r26 = new kotlin.jvm.internal.Ref$FloatRef;

        specialinvoke r26.<kotlin.jvm.internal.Ref$FloatRef: void <init>()>();

        r3 = r26;

        $r12 = virtualinvoke r23.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r13 = (java.lang.Number) $r12;

        f5 = virtualinvoke $r13.<java.lang.Number: float floatValue()>();

        $r20 = r23;

        $r14 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f0);

        $r15 = virtualinvoke r23.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r16 = (java.lang.Number) $r15;

        $f4 = virtualinvoke $r16.<java.lang.Number: float floatValue()>();

        $b0 = $f4 cmpg 0.0F;

        if $b0 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        r27 = new androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$2;

        specialinvoke r27.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$2: void <init>(float,kotlin.jvm.internal.Ref$FloatRef,androidx.compose.foundation.gestures.ScrollScope)>(f1, r3, $r0);

        $r18 = (kotlin.jvm.functions.Function1) r27;

        $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: java.lang.Object L$0> = r23;

        $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: float F$0> = f5;

        $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: int label> = 1;

        r29 = (kotlin.coroutines.Continuation) $r24;

        $r19 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animateTo(androidx.compose.animation.core.AnimationState,java.lang.Object,androidx.compose.animation.core.AnimationSpec,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r20, $r14, r1, $z2, $r18, r29);

        if $r19 != r5 goto label09;

        return r5;

     label08:
        f5 = $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: float F$0>;

        $r7 = $r24.<androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt$animateSnap$1: java.lang.Object L$0>;

        r23 = (androidx.compose.animation.core.AnimationState) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label09:
        $r8 = virtualinvoke r23.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r9 = (java.lang.Number) $r8;

        $f3 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        f2 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float coerceToTarget(float,float)>($f3, f5);

        $r10 = staticinvoke <androidx.compose.animation.core.AnimationStateKt: androidx.compose.animation.core.AnimationState copy$default(androidx.compose.animation.core.AnimationState,float,float,long,long,boolean,int,java.lang.Object)>(r23, 0.0F, f2, 0L, 0L, 0, 29, null);

        return $r10;

     label10:
        r28 = new java.lang.IllegalStateException;

        specialinvoke r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r28;
    }

    private static final float coerceToTarget(float, float)
    {
        float $f0, f1, $f2;
        byte $b0, $b1;
        boolean $z0;

        $f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f1 cmpg 0.0F;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return 0.0F;

     label3:
        $b1 = f1 cmpl 0.0F;

        if $b1 <= 0 goto label4;

        $f2 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtMost(float,float)>($f0, f1);

        goto label5;

     label4:
        $f2 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtLeast(float,float)>($f0, f1);

     label5:
        return $f2;
    }

    public static final float getMinFlingVelocityDp()
    {
        float $f0;

        $f0 = <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float MinFlingVelocityDp>;

        return $f0;
    }

    private static final boolean findClosestOffset$isValidDistance(float)
    {
        float $f0;
        byte $b0, $b1;
        boolean $z0, $z1, $z2;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg #InfinityF;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $f0 cmpg #-InfinityF;

        if $b1 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z1 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    private static final void animateDecay$consumeDelta(androidx.compose.animation.core.AnimationScope, androidx.compose.foundation.gestures.ScrollScope, float)
    {
        androidx.compose.animation.core.AnimationScope $r0;
        androidx.compose.foundation.gestures.ScrollScope $r1;
        float f0, f1, $f2, $f3;
        byte $b0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationScope;

        $r1 := @parameter1: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter2: float;

        f1 = interfaceinvoke $r1.<androidx.compose.foundation.gestures.ScrollScope: float scrollBy(float)>(f0);

        $f2 = f0 - f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $b0 = $f3 cmpl 0.5F;

        if $b0 <= 0 goto label1;

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: void cancelAnimation()>();

     label1:
        return;
    }

    public static final java.lang.Object access$animateSnap(androidx.compose.foundation.gestures.ScrollScope, float, float, androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.ScrollScope $r0;
        float f0, f1;
        androidx.compose.animation.core.AnimationState r1;
        androidx.compose.animation.core.AnimationSpec r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: androidx.compose.animation.core.AnimationState;

        r2 := @parameter4: androidx.compose.animation.core.AnimationSpec;

        $r3 := @parameter5: kotlin.coroutines.Continuation;

        $r4 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: java.lang.Object animateSnap(androidx.compose.foundation.gestures.ScrollScope,float,float,androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>($r0, f0, f1, r1, r2, $r3);

        return $r4;
    }

    public static final java.lang.Object access$approach(androidx.compose.foundation.gestures.ScrollScope, float, float, androidx.compose.foundation.gestures.snapping.ApproachAnimation, androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider, androidx.compose.ui.unit.Density, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.ScrollScope $r0;
        float f0, f1;
        androidx.compose.foundation.gestures.snapping.ApproachAnimation r1;
        androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider r2;
        androidx.compose.ui.unit.Density r3;
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: androidx.compose.foundation.gestures.snapping.ApproachAnimation;

        r2 := @parameter4: androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider;

        r3 := @parameter5: androidx.compose.ui.unit.Density;

        $r4 := @parameter6: kotlin.coroutines.Continuation;

        $r5 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: java.lang.Object approach(androidx.compose.foundation.gestures.ScrollScope,float,float,androidx.compose.foundation.gestures.snapping.ApproachAnimation,androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider,androidx.compose.ui.unit.Density,kotlin.coroutines.Continuation)>($r0, f0, f1, r1, r2, r3, $r4);

        return $r5;
    }

    public static final java.lang.Object access$animateDecay(androidx.compose.foundation.gestures.ScrollScope, float, androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.DecayAnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.ScrollScope $r0;
        float f0;
        androidx.compose.animation.core.AnimationState r1;
        androidx.compose.animation.core.DecayAnimationSpec r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.compose.animation.core.AnimationState;

        r2 := @parameter3: androidx.compose.animation.core.DecayAnimationSpec;

        $r3 := @parameter4: kotlin.coroutines.Continuation;

        $r4 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: java.lang.Object animateDecay(androidx.compose.foundation.gestures.ScrollScope,float,androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.DecayAnimationSpec,kotlin.coroutines.Continuation)>($r0, f0, r1, r2, $r3);

        return $r4;
    }

    public static final float access$coerceToTarget(float, float)
    {
        float $f0, f1, $f2;

        $f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float coerceToTarget(float,float)>($f0, f1);

        return $f2;
    }

    public static final void access$animateDecay$consumeDelta(androidx.compose.animation.core.AnimationScope, androidx.compose.foundation.gestures.ScrollScope, float)
    {
        androidx.compose.animation.core.AnimationScope $r0;
        androidx.compose.foundation.gestures.ScrollScope $r1;
        float f0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationScope;

        $r1 := @parameter1: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter2: float;

        staticinvoke <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: void animateDecay$consumeDelta(androidx.compose.animation.core.AnimationScope,androidx.compose.foundation.gestures.ScrollScope,float)>($r0, $r1, f0);

        return;
    }

    static void <clinit>()
    {
        float $f0, $f1;

        $f0 = (float) 400;

        $f1 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f0);

        <androidx.compose.foundation.gestures.snapping.SnapFlingBehaviorKt: float MinFlingVelocityDp> = $f1;

        return;
    }

