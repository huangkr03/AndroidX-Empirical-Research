io.grpc.okhttp.internal.framed.Header
<io.grpc.okhttp.internal.framed.Header: okio.ByteString RESPONSE_STATUS>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_AUTHORITY>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_HOST>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_METHOD>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_PATH>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_SCHEME>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString VERSION>
<io.grpc.okhttp.internal.framed.Header: int hpackSize>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString name>
<io.grpc.okhttp.internal.framed.Header: okio.ByteString value>
    static void <clinit>()
    {
        okio.ByteString $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":status");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString RESPONSE_STATUS> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":method");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_METHOD> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":path");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_PATH> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":scheme");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_SCHEME> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":authority");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_AUTHORITY> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":host");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_HOST> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":version");

        <io.grpc.okhttp.internal.framed.Header: okio.ByteString VERSION> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        io.grpc.okhttp.internal.framed.Header $r0;
        java.lang.String $r1, $r2;
        okio.ByteString $r3, $r4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Header;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r1);

        $r4 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r2);

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Header: void <init>(okio.ByteString,okio.ByteString)>($r3, $r4);

        return;
    }

    public void <init>(okio.ByteString, java.lang.String)
    {
        io.grpc.okhttp.internal.framed.Header $r0;
        okio.ByteString $r1, $r2;
        java.lang.String $r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Header;

        $r1 := @parameter0: okio.ByteString;

        $r3 := @parameter1: java.lang.String;

        $r2 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r3);

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Header: void <init>(okio.ByteString,okio.ByteString)>($r1, $r2);

        return;
    }

    public void <init>(okio.ByteString, okio.ByteString)
    {
        io.grpc.okhttp.internal.framed.Header $r0;
        okio.ByteString $r1, $r2;
        int $i0, $i1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Header;

        $r1 := @parameter0: okio.ByteString;

        $r2 := @parameter1: okio.ByteString;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString name> = $r1;

        $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString value> = $r2;

        $i0 = virtualinvoke $r1.<okio.ByteString: int size()>();

        $i0 = $i0 + 32;

        $i1 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $i0 = $i0 + $i1;

        $r0.<io.grpc.okhttp.internal.framed.Header: int hpackSize> = $i0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        io.grpc.okhttp.internal.framed.Header $r0, $r3;
        okio.ByteString $r1, $r4;
        java.lang.Object $r2;
        boolean $z0, $z1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Header;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof io.grpc.okhttp.internal.framed.Header;

        $z1 = 0;

        if $z0 == 0 goto label2;

        $r3 = (io.grpc.okhttp.internal.framed.Header) $r2;

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString name>;

        $r1 = $r3.<io.grpc.okhttp.internal.framed.Header: okio.ByteString name>;

        $z0 = virtualinvoke $r4.<okio.ByteString: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString value>;

        $r4 = $r3.<io.grpc.okhttp.internal.framed.Header: okio.ByteString value>;

        $z0 = virtualinvoke $r1.<okio.ByteString: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label1;

     label1:
        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        io.grpc.okhttp.internal.framed.Header $r0;
        okio.ByteString $r1;
        int $i0, $i1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Header;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString name>;

        $i0 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = $i0 + 527;

        $i0 = $i0 * 31;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString value>;

        $i1 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        io.grpc.okhttp.internal.framed.Header $r0;
        java.lang.Object[] $r1;
        okio.ByteString $r2;
        java.lang.String $r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Header;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString name>;

        $r3 = virtualinvoke $r2.<okio.ByteString: java.lang.String utf8()>();

        $r1[0] = $r3;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Header: okio.ByteString value>;

        $r3 = virtualinvoke $r2.<okio.ByteString: java.lang.String utf8()>();

        $r1[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %s", $r1);

        return $r3;
    }

