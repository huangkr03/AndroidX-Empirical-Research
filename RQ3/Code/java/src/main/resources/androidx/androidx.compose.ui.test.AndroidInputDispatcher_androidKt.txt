androidx.compose.ui.test.AndroidInputDispatcher_androidKt
<androidx.compose.ui.test.AndroidInputDispatcher_androidKt: java.util.List MouseAsTouchEvents>
    public static final androidx.compose.ui.test.InputDispatcher createInputDispatcher(androidx.compose.ui.test.TestContext, androidx.compose.ui.node.RootForTest)
    {
        androidx.compose.ui.test.TestContext r0;
        androidx.compose.ui.node.RootForTest r1;
        android.view.View r2;
        boolean $z0;
        androidx.compose.ui.platform.ViewRootForTest $r3, $r6;
        androidx.compose.ui.test.AndroidInputDispatcher $r4;
        androidx.compose.ui.test.AndroidInputDispatcher_androidKt$createInputDispatcher$2 $r5;
        kotlin.jvm.functions.Function1 $r7;
        androidx.compose.ui.test.InputDispatcher $r8;
        java.lang.StringBuilder $r9, $r10, $r13;
        java.lang.Class $r11;
        java.lang.String $r12, $r15, $r16;
        java.lang.IllegalArgumentException $r14;

        r0 := @parameter0: androidx.compose.ui.test.TestContext;

        r1 := @parameter1: androidx.compose.ui.node.RootForTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "testContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "root");

        $z0 = r1 instanceof androidx.compose.ui.platform.ViewRootForTest;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputDispatcher only supports dispatching to ViewRootForTest, not to ");

        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label1:
        $r3 = (androidx.compose.ui.platform.ViewRootForTest) r1;

        r2 = interfaceinvoke $r3.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        $r4 = new androidx.compose.ui.test.AndroidInputDispatcher;

        $r6 = (androidx.compose.ui.platform.ViewRootForTest) r1;

        $r5 = new androidx.compose.ui.test.AndroidInputDispatcher_androidKt$createInputDispatcher$2;

        specialinvoke $r5.<androidx.compose.ui.test.AndroidInputDispatcher_androidKt$createInputDispatcher$2: void <init>(android.view.View)>(r2);

        $r7 = (kotlin.jvm.functions.Function1) $r5;

        specialinvoke $r4.<androidx.compose.ui.test.AndroidInputDispatcher: void <init>(androidx.compose.ui.test.TestContext,androidx.compose.ui.platform.ViewRootForTest,kotlin.jvm.functions.Function1)>(r0, $r6, $r7);

        $r8 = (androidx.compose.ui.test.InputDispatcher) $r4;

        return $r8;
    }

    public static final java.util.List access$getMouseAsTouchEvents$p()
    {
        java.util.List $r0;

        $r0 = <androidx.compose.ui.test.AndroidInputDispatcher_androidKt: java.util.List MouseAsTouchEvents>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Integer[] r0;
        java.lang.Integer $r1, $r2, $r3;
        java.util.List $r4;

        r0 = newarray (java.lang.Integer)[3];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0[0] = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r0[1] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r0[2] = $r3;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r0);

        <androidx.compose.ui.test.AndroidInputDispatcher_androidKt: java.util.List MouseAsTouchEvents> = $r4;

        return;
    }

