androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int snapOffset>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.compose.animation.core.DecayAnimationSpec decay>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int SNAP_SPEED_THRESHOLD>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: float FINAL_SNAP_DURATION_MIN>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: float FINAL_SNAP_DURATION_MAX>
    public void <init>(androidx.wear.compose.material.ScalingLazyListState, int, androidx.compose.animation.core.DecayAnimationSpec)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r0;
        androidx.wear.compose.material.ScalingLazyListState r1;
        int i0;
        androidx.compose.animation.core.DecayAnimationSpec r2;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        r1 := @parameter0: androidx.wear.compose.material.ScalingLazyListState;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.compose.animation.core.DecayAnimationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "decay");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state> = r1;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int snapOffset> = i0;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.compose.animation.core.DecayAnimationSpec decay> = r2;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int SNAP_SPEED_THRESHOLD> = 1200;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: float FINAL_SNAP_DURATION_MIN> = 0.1F;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: float FINAL_SNAP_DURATION_MAX> = 0.35F;

        return;
    }

    public void <init>(androidx.wear.compose.material.ScalingLazyListState, int, androidx.compose.animation.core.DecayAnimationSpec, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r0;
        androidx.wear.compose.material.ScalingLazyListState r1;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.compose.animation.core.DecayAnimationSpec r3;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        r1 := @parameter0: androidx.wear.compose.material.ScalingLazyListState;

        i3 := @parameter1: int;

        r3 := @parameter2: androidx.compose.animation.core.DecayAnimationSpec;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i3 = 0;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r3 = staticinvoke <androidx.compose.animation.core.DecayAnimationSpecKt: androidx.compose.animation.core.DecayAnimationSpec exponentialDecay$default(float,float,int,java.lang.Object)>(0.0F, 0.0F, 3, null);

     label2:
        specialinvoke r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: void <init>(androidx.wear.compose.material.ScalingLazyListState,int,androidx.compose.animation.core.DecayAnimationSpec)>(r1, i3, r3);

        return;
    }

    public final androidx.wear.compose.material.ScalingLazyListState getState()
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r0;
        androidx.wear.compose.material.ScalingLazyListState $r1;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $r1 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state>;

        return $r1;
    }

    public final int getSnapOffset()
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r0;
        int $i0;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $i0 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int snapOffset>;

        return $i0;
    }

    public final androidx.compose.animation.core.DecayAnimationSpec getDecay()
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r0;
        androidx.compose.animation.core.DecayAnimationSpec $r1;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $r1 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.compose.animation.core.DecayAnimationSpec decay>;

        return $r1;
    }

    public java.lang.Object performFling(androidx.compose.foundation.gestures.ScrollScope, float, kotlin.coroutines.Continuation)
    {
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f23, f24, f25, f26, f27, f28, $f29, $f30, f31, f32, $f33, f34, $f35, f36, f37, $f38, f39;
        kotlin.coroutines.Continuation r0, r73, r74;
        java.util.List r1, $r14, $r16;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z9, z10, z11, z12, z13, z14, $z15;
        java.util.Collection r2, r52;
        java.lang.Object $r3, r4, $r6, $r7, $r8, $r9, $r10, $r11, $r19, $r28, $r29, $r33, $r43, r54, $r58, r59, r60, $r62, $r64;
        androidx.wear.compose.material.ScalingLazyListState $r12, $r32, $r35, $r37;
        androidx.wear.compose.material.ScalingLazyListLayoutInfo $r13, $r36;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Number $r17, $r18, $r20, $r30, $r63;
        double $d0, $d1;
        byte $b3, $b10, $b20;
        java.lang.Float $r21, $r31, $r61;
        androidx.compose.animation.core.Easing $r23;
        androidx.compose.animation.core.TweenSpec $r24;
        androidx.compose.animation.core.AnimationSpec $r26;
        kotlin.jvm.functions.Function1 $r27, $r42;
        androidx.compose.animation.core.DecayAnimationSpec $r38, $r41;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r45;
        androidx.compose.foundation.gestures.ScrollScope $r46;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1 $r47, r65;
        androidx.compose.animation.core.AnimationState r48;
        kotlin.jvm.internal.Ref$FloatRef r49, r66;
        kotlin.jvm.internal.Ref$BooleanRef r50, r67;
        java.lang.Iterable $r51, $r56;
        java.util.Iterator r53, $r57;
        androidx.wear.compose.material.ScalingLazyListItemInfo r55;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1 r68;
        java.util.ArrayList r69;
        androidx.compose.animation.core.CubicBezierEasing r70;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2 r71;
        java.lang.IllegalStateException r72;

        r45 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $r46 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        f0 := @parameter1: float;

        r0 := @parameter2: kotlin.coroutines.Continuation;

        $z2 = r0 instanceof androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1;

        if $z2 == 0 goto label01;

        $r47 = (androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1) r0;

        $i15 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label>;

        $i16 = $i15 & -2147483648;

        if $i16 == 0 goto label01;

        $i17 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label>;

        $i18 = $i17 - -2147483648;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label> = $i18;

        goto label02;

     label01:
        r65 = new androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1;

        specialinvoke r65.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: void <init>(androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior,kotlin.coroutines.Continuation)>(r45, r0);

        $r47 = r65;

     label02:
        $r3 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i19 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label>;

        tableswitch($i19)
        {
            case 0: goto label03;
            case 1: goto label06;
            case 2: goto label23;
            default: goto label25;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r48 = staticinvoke <androidx.compose.animation.core.AnimationStateKt: androidx.compose.animation.core.AnimationState AnimationState$default(float,float,long,long,boolean,int,java.lang.Object)>(0.0F, f0, 0L, 0L, 0, 28, null);

        r66 = new kotlin.jvm.internal.Ref$FloatRef;

        specialinvoke r66.<kotlin.jvm.internal.Ref$FloatRef: void <init>()>();

        r49 = r66;

        $r35 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state>;

        $r36 = virtualinvoke $r35.<androidx.wear.compose.material.ScalingLazyListState: androidx.wear.compose.material.ScalingLazyListLayoutInfo getLayoutInfo()>();

        r1 = interfaceinvoke $r36.<androidx.wear.compose.material.ScalingLazyListLayoutInfo: java.util.List getVisibleItemsInfo()>();

        $f23 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b10 = $f23 cmpl 1.0F;

        if $b10 <= 0 goto label04;

        $i14 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i14 <= 1 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        z0 = $z9;

        if z0 == 0 goto label17;

        $r38 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.compose.animation.core.DecayAnimationSpec decay>;

        f24 = staticinvoke <androidx.compose.animation.core.DecayAnimationSpecKt: float calculateTargetValue(androidx.compose.animation.core.DecayAnimationSpec,float,float)>($r38, 0.0F, f0);

        r67 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke r67.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r50 = r67;

        $r41 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.compose.animation.core.DecayAnimationSpec decay>;

        r68 = new androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1;

        specialinvoke r68.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: void <init>(kotlin.jvm.internal.Ref$FloatRef,androidx.compose.foundation.gestures.ScrollScope,androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior,kotlin.jvm.internal.Ref$BooleanRef)>(r49, $r46, r45, r50);

        $r42 = (kotlin.jvm.functions.Function1) r68;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$0> = r45;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$1> = $r46;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$2> = r48;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$3> = r49;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$4> = r50;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: float F$0> = f24;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label> = 1;

        r73 = (kotlin.coroutines.Continuation) $r47;

        $r43 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animateDecay$default(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.DecayAnimationSpec,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>(r48, $r41, 0, $r42, r73, 2, null);

        if $r43 != r4 goto label07;

        return r4;

     label06:
        f24 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: float F$0>;

        $r7 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$4>;

        r50 = (kotlin.jvm.internal.Ref$BooleanRef) $r7;

        $r8 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$3>;

        r49 = (kotlin.jvm.internal.Ref$FloatRef) $r8;

        $r9 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$2>;

        r48 = (androidx.compose.animation.core.AnimationState) $r9;

        $r10 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$1>;

        $r46 = (androidx.compose.foundation.gestures.ScrollScope) $r10;

        $r11 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$0>;

        r45 = (androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior) $r11;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label07:
        $z3 = r50.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z3 == 0 goto label08;

        $i7 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int snapOffset>;

        $r32 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state>;

        $i8 = virtualinvoke $r32.<androidx.wear.compose.material.ScalingLazyListState: int getCenterItemScrollOffset()>();

        $i9 = $i7 - $i8;

        $f21 = (float) $i9;

        interfaceinvoke $r46.<androidx.compose.foundation.gestures.ScrollScope: float scrollBy(float)>($f21);

        $r33 = virtualinvoke r48.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        return $r33;

     label08:
        $r12 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state>;

        $r13 = virtualinvoke $r12.<androidx.wear.compose.material.ScalingLazyListState: androidx.wear.compose.material.ScalingLazyListLayoutInfo getLayoutInfo()>();

        $r14 = interfaceinvoke $r13.<androidx.wear.compose.material.ScalingLazyListLayoutInfo: java.util.List getVisibleItemsInfo()>();

        $r51 = (java.lang.Iterable) $r14;

        z10 = 0;

        r69 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r51, 10);

        specialinvoke r69.<java.util.ArrayList: void <init>(int)>($i0);

        r52 = (java.util.Collection) r69;

        z11 = 0;

        r53 = interfaceinvoke $r51.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        r54 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r55 = (androidx.wear.compose.material.ScalingLazyListItemInfo) r54;

        r2 = r52;

        $r29 = virtualinvoke r48.<androidx.compose.animation.core.AnimationState: java.lang.Object getValue()>();

        $r30 = (java.lang.Number) $r29;

        $f16 = virtualinvoke $r30.<java.lang.Number: float floatValue()>();

        $i5 = interfaceinvoke r55.<androidx.wear.compose.material.ScalingLazyListItemInfo: int getUnadjustedOffset()>();

        $f17 = (float) $i5;

        $f19 = $f16 + $f17;

        $i6 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int snapOffset>;

        $f18 = (float) $i6;

        $f20 = $f19 + $f18;

        $r31 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>($f20);

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r31);

        goto label09;

     label10:
        $r16 = (java.util.List) r52;

        $r56 = (java.lang.Iterable) $r16;

        z12 = 0;

        $r57 = interfaceinvoke $r56.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z5 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label11;

        $r58 = null;

        goto label15;

     label11:
        r59 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        $z6 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label12;

        $r58 = r59;

        goto label15;

     label12:
        $r17 = (java.lang.Number) r59;

        f25 = virtualinvoke $r17.<java.lang.Number: float floatValue()>();

        z13 = 0;

        $f3 = f25 - f24;

        f26 = staticinvoke <java.lang.Math: float abs(float)>($f3);

     label13:
        r60 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.lang.Number) r60;

        f27 = virtualinvoke $r18.<java.lang.Number: float floatValue()>();

        z14 = 0;

        $f4 = f27 - f24;

        f28 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>(f26, f28);

        if $i1 <= 0 goto label14;

        r59 = r60;

        f26 = f28;

     label14:
        $z7 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z7 != 0 goto label13;

        $r58 = r59;

     label15:
        $r61 = (java.lang.Float) $r58;

        if $r61 == null goto label16;

        $f29 = virtualinvoke $r61.<java.lang.Float: float floatValue()>();

        goto label18;

     label16:
        $f29 = f24;

        goto label18;

     label17:
        $i11 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int snapOffset>;

        $r37 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: androidx.wear.compose.material.ScalingLazyListState state>;

        $i12 = virtualinvoke $r37.<androidx.wear.compose.material.ScalingLazyListState: int getCenterItemScrollOffset()>();

        $i13 = $i11 - $i12;

        $f29 = (float) $i13;

     label18:
        f1 = $f29;

        $r62 = virtualinvoke r48.<androidx.compose.animation.core.AnimationState: java.lang.Object getValue()>();

        $r63 = (java.lang.Number) $r62;

        $f30 = virtualinvoke $r63.<java.lang.Number: float floatValue()>();

        f31 = f1 - $f30;

        $b20 = f31 cmpg 0.0F;

        if $b20 != 0 goto label19;

        $z15 = 1;

        goto label20;

     label19:
        $z15 = 0;

     label20:
        if $z15 != 0 goto label24;

        $r19 = virtualinvoke r48.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r20 = (java.lang.Number) $r19;

        f32 = virtualinvoke $r20.<java.lang.Number: float floatValue()>();

        f2 = 0.5F;

        $f5 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: float FINAL_SNAP_DURATION_MIN>;

        $f6 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: float FINAL_SNAP_DURATION_MAX>;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>(f32);

        $i2 = r45.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int SNAP_SPEED_THRESHOLD>;

        $f8 = (float) $i2;

        $f9 = $f7 / $f8;

        $f33 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: float lerp(float,float,float)>($f5, $f6, $f9);

        $f10 = f32 * $f33;

        f34 = $f10 / f31;

        $f11 = f34 * f34;

        $f12 = 1.0F + $f11;

        $d0 = (double) $f12;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f13 = (float) $d1;

        $f35 = f2 / $f13;

        f36 = $f35 * f34;

        f37 = 0.8F;

        $b3 = $f35 cmpl f36;

        if $b3 <= 0 goto label21;

        $f38 = 0.8F;

        goto label22;

     label21:
        $f38 = 1.0F;

     label22:
        f39 = $f38;

        $r21 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f1);

        $f14 = (float) 1000;

        $f15 = $f33 * $f14;

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f15);

        r70 = new androidx.compose.animation.core.CubicBezierEasing;

        specialinvoke r70.<androidx.compose.animation.core.CubicBezierEasing: void <init>(float,float,float,float)>($f35, f36, f37, f39);

        $r23 = (androidx.compose.animation.core.Easing) r70;

        $r24 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>($i4, 0, $r23, 2, null);

        $r26 = (androidx.compose.animation.core.AnimationSpec) $r24;

        r71 = new androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2;

        specialinvoke r71.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: void <init>(androidx.compose.foundation.gestures.ScrollScope,kotlin.jvm.internal.Ref$FloatRef)>($r46, r49);

        $r27 = (kotlin.jvm.functions.Function1) r71;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$0> = r48;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$1> = null;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$2> = null;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$3> = null;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$4> = null;

        $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label> = 2;

        r74 = (kotlin.coroutines.Continuation) $r47;

        $r28 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animateTo$default(androidx.compose.animation.core.AnimationState,java.lang.Object,androidx.compose.animation.core.AnimationSpec,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>(r48, $r21, $r26, 0, $r27, r74, 4, null);

        if $r28 != r4 goto label24;

        return r4;

     label23:
        $r6 = $r47.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$0>;

        r48 = (androidx.compose.animation.core.AnimationState) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label24:
        $r64 = virtualinvoke r48.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        return $r64;

     label25:
        r72 = new java.lang.IllegalStateException;

        specialinvoke r72.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r72;
    }

    public static final int access$getSNAP_SPEED_THRESHOLD$p(androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior $r0;
        int $i0;

        $r0 := @parameter0: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $i0 = $r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int SNAP_SPEED_THRESHOLD>;

        return $i0;
    }

androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$0>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$1>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$2>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$3>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object L$4>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: float F$0>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object result>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior this$0>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label>
    void <init>(androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1 r0;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1;

        r1 := @parameter0: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior $r3;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: int label> = $i1;

        $r3 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$1: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: java.lang.Object performFling(androidx.compose.foundation.gestures.ScrollScope,float,kotlin.coroutines.Continuation)>(null, 0.0F, $r2);

        return $r4;
    }

androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: androidx.compose.foundation.gestures.ScrollScope $this_performFling>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: kotlin.jvm.internal.Ref$FloatRef $lastValue>
    void <init>(androidx.compose.foundation.gestures.ScrollScope, kotlin.jvm.internal.Ref$FloatRef)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2 r0;
        androidx.compose.foundation.gestures.ScrollScope $r1;
        kotlin.jvm.internal.Ref$FloatRef $r2;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2;

        $r1 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$FloatRef;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: androidx.compose.foundation.gestures.ScrollScope $this_performFling> = $r1;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: kotlin.jvm.internal.Ref$FloatRef $lastValue> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.animation.core.AnimationScope)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2 r0;
        androidx.compose.animation.core.AnimationScope $r1;
        androidx.compose.foundation.gestures.ScrollScope $r2;
        java.lang.Object $r3, $r7;
        java.lang.Number $r4, $r8;
        float $f0, $f1, $f2, $f4;
        kotlin.jvm.internal.Ref$FloatRef $r5, $r6;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2;

        $r1 := @parameter0: androidx.compose.animation.core.AnimationScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$animateTo");

        $r2 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: androidx.compose.foundation.gestures.ScrollScope $this_performFling>;

        $r3 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: kotlin.jvm.internal.Ref$FloatRef $lastValue>;

        $f1 = $r5.<kotlin.jvm.internal.Ref$FloatRef: float element>;

        $f2 = $f0 - $f1;

        interfaceinvoke $r2.<androidx.compose.foundation.gestures.ScrollScope: float scrollBy(float)>($f2);

        $r6 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: kotlin.jvm.internal.Ref$FloatRef $lastValue>;

        $r7 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        $r8 = (java.lang.Number) $r7;

        $f4 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $r6.<kotlin.jvm.internal.Ref$FloatRef: float element> = $f4;

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.AnimationScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.AnimationScope) r1;

        virtualinvoke r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$2: void invoke(androidx.compose.animation.core.AnimationScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$FloatRef $lastValue>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: androidx.compose.foundation.gestures.ScrollScope $this_performFling>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior this$0>
<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$BooleanRef $endOfListReached>
    void <init>(kotlin.jvm.internal.Ref$FloatRef, androidx.compose.foundation.gestures.ScrollScope, androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior, kotlin.jvm.internal.Ref$BooleanRef)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1 r0;
        kotlin.jvm.internal.Ref$FloatRef $r1;
        androidx.compose.foundation.gestures.ScrollScope $r2;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior $r3;
        kotlin.jvm.internal.Ref$BooleanRef $r4;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$FloatRef;

        $r2 := @parameter1: androidx.compose.foundation.gestures.ScrollScope;

        $r3 := @parameter2: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior;

        $r4 := @parameter3: kotlin.jvm.internal.Ref$BooleanRef;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$FloatRef $lastValue> = $r1;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: androidx.compose.foundation.gestures.ScrollScope $this_performFling> = $r2;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior this$0> = $r3;

        r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$BooleanRef $endOfListReached> = $r4;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.animation.core.AnimationScope)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1 r0;
        androidx.compose.animation.core.AnimationScope $r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Object $r2, $r7, $r9;
        java.lang.Number $r3, $r8, $r10;
        kotlin.jvm.internal.Ref$FloatRef $r4, $r6;
        androidx.compose.foundation.gestures.ScrollScope $r5;
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior $r11;
        int $i0;
        byte $b1, $b2;
        kotlin.jvm.internal.Ref$BooleanRef $r12;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1;

        $r1 := @parameter0: androidx.compose.animation.core.AnimationScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$animateDecay");

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        $r3 = (java.lang.Number) $r2;

        $f2 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$FloatRef $lastValue>;

        $f3 = $r4.<kotlin.jvm.internal.Ref$FloatRef: float element>;

        f0 = $f2 - $f3;

        $r5 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: androidx.compose.foundation.gestures.ScrollScope $this_performFling>;

        f1 = interfaceinvoke $r5.<androidx.compose.foundation.gestures.ScrollScope: float scrollBy(float)>(f0);

        $r6 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$FloatRef $lastValue>;

        $r7 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        $r8 = (java.lang.Number) $r7;

        $f4 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $r6.<kotlin.jvm.internal.Ref$FloatRef: float element> = $f4;

        $r9 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getVelocity()>();

        $r10 = (java.lang.Number) $r9;

        $f5 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $r11 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior this$0>;

        $i0 = staticinvoke <androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior: int access$getSNAP_SPEED_THRESHOLD$p(androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior)>($r11);

        $f7 = (float) $i0;

        $b1 = $f6 cmpg $f7;

        if $b1 >= 0 goto label1;

        virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: void cancelAnimation()>();

     label1:
        $f8 = f0 - f1;

        $f9 = staticinvoke <java.lang.Math: float abs(float)>($f8);

        $b2 = $f9 cmpl 0.1F;

        if $b2 <= 0 goto label2;

        $r12 = r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: kotlin.jvm.internal.Ref$BooleanRef $endOfListReached>;

        $r12.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: void cancelAnimation()>();

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.AnimationScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.AnimationScope) r1;

        virtualinvoke r0.<androidx.wear.compose.material.ScalingLazyColumnSnapFlingBehavior$performFling$finalTarget$1: void invoke(androidx.compose.animation.core.AnimationScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

