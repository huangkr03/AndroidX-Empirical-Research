androidx.health.services.client.data.Availability
<androidx.health.services.client.data.Availability: androidx.health.services.client.data.Availability$Companion Companion>
<androidx.health.services.client.data.Availability: int getId()>
    public androidx.health.services.client.proto.DataProto$Availability toProto()
    {
        androidx.health.services.client.data.Availability r0;
        androidx.health.services.client.proto.DataProto$Availability$Builder $r1, $r3;
        androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability $r2;
        com.google.protobuf.GeneratedMessageLite $r4;
        androidx.health.services.client.proto.DataProto$Availability $r5;

        r0 := @this: androidx.health.services.client.data.Availability;

        $r1 = staticinvoke <androidx.health.services.client.proto.DataProto$Availability: androidx.health.services.client.proto.DataProto$Availability$Builder newBuilder()>();

        $r2 = <androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability: androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability DATA_TYPE_AVAILABILITY_UNKNOWN>;

        $r3 = virtualinvoke $r1.<androidx.health.services.client.proto.DataProto$Availability$Builder: androidx.health.services.client.proto.DataProto$Availability$Builder setDataTypeAvailability(androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability)>($r2);

        $r4 = virtualinvoke $r3.<androidx.health.services.client.proto.DataProto$Availability$Builder: com.google.protobuf.GeneratedMessageLite build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "newBuilder()\n           \u2026OWN)\n            .build()");

        $r5 = (androidx.health.services.client.proto.DataProto$Availability) $r4;

        return $r5;
    }

    public static androidx.health.services.client.data.Availability fromProto(androidx.health.services.client.proto.DataProto$Availability)
    {
        androidx.health.services.client.proto.DataProto$Availability r0;
        androidx.health.services.client.data.Availability$Companion $r1;
        androidx.health.services.client.data.Availability $r2;

        r0 := @parameter0: androidx.health.services.client.proto.DataProto$Availability;

        $r1 = <androidx.health.services.client.data.Availability: androidx.health.services.client.data.Availability$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.health.services.client.data.Availability$Companion: androidx.health.services.client.data.Availability fromProto(androidx.health.services.client.proto.DataProto$Availability)>(r0);

        return $r2;
    }

    public static androidx.health.services.client.proto.DataProto$Availability access$toProto$jd(androidx.health.services.client.data.Availability)
    {
        androidx.health.services.client.data.Availability $r0;
        androidx.health.services.client.proto.DataProto$Availability $r1;

        $r0 := @parameter0: androidx.health.services.client.data.Availability;

        $r1 = specialinvoke $r0.<androidx.health.services.client.data.Availability: androidx.health.services.client.proto.DataProto$Availability toProto()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.health.services.client.data.Availability$Companion $r0;

        $r0 = <androidx.health.services.client.data.Availability$Companion: androidx.health.services.client.data.Availability$Companion $$INSTANCE>;

        <androidx.health.services.client.data.Availability: androidx.health.services.client.data.Availability$Companion Companion> = $r0;

        return;
    }

androidx.health.services.client.data.Availability$Companion$WhenMappings
<androidx.health.services.client.data.Availability$Companion$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, r8, r9, r10;

        $r1 = staticinvoke <androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase DATA_TYPE_AVAILABILITY>;

        $i1 = virtualinvoke $r2.<androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        r8 = $r7;

     label04:
        $r3 = <androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase LOCATION_AVAILABILITY>;

        $i2 = virtualinvoke $r3.<androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r6 := @caughtexception;

        r9 = $r6;

     label07:
        $r4 = <androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase AVAILABILITY_NOT_SET>;

        $i3 = virtualinvoke $r4.<androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r5 := @caughtexception;

        r10 = $r5;

     label10:
        <androidx.health.services.client.data.Availability$Companion$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

androidx.health.services.client.data.Availability$Companion
<androidx.health.services.client.data.Availability$Companion: androidx.health.services.client.data.Availability$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.health.services.client.data.Availability$Companion r0;

        r0 := @this: androidx.health.services.client.data.Availability$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.health.services.client.data.Availability fromProto(androidx.health.services.client.proto.DataProto$Availability)
    {
        androidx.health.services.client.data.Availability$Companion r0;
        androidx.health.services.client.proto.DataProto$Availability r1;
        androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase $r2;
        int[] $r3;
        int $i0, $i1;
        androidx.health.services.client.data.LocationAvailability$Companion $r4;
        androidx.health.services.client.proto.DataProto$Availability$LocationAvailability $r5;
        androidx.health.services.client.data.LocationAvailability $r6;
        androidx.health.services.client.data.DataTypeAvailability$Companion $r7;
        androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability $r8;
        androidx.health.services.client.data.DataTypeAvailability $r9, $r10;
        kotlin.NoWhenBranchMatchedException $r11;
        androidx.health.services.client.data.Availability $r12;

        r0 := @this: androidx.health.services.client.data.Availability$Companion;

        r1 := @parameter0: androidx.health.services.client.proto.DataProto$Availability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "proto");

        $r2 = virtualinvoke r1.<androidx.health.services.client.proto.DataProto$Availability: androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase getAvailabilityCase()>();

        if $r2 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $r3 = <androidx.health.services.client.data.Availability$Companion$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<androidx.health.services.client.proto.DataProto$Availability$AvailabilityCase: int ordinal()>();

        $i1 = $r3[$i0];

     label2:
        tableswitch($i1)
        {
            case -1: goto label5;
            case 0: goto label6;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r7 = <androidx.health.services.client.data.DataTypeAvailability: androidx.health.services.client.data.DataTypeAvailability$Companion Companion>;

        $r8 = virtualinvoke r1.<androidx.health.services.client.proto.DataProto$Availability: androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability getDataTypeAvailability()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "proto.dataTypeAvailability");

        $r9 = virtualinvoke $r7.<androidx.health.services.client.data.DataTypeAvailability$Companion: androidx.health.services.client.data.DataTypeAvailability fromProto$health_services_client_release(androidx.health.services.client.proto.DataProto$Availability$DataTypeAvailability)>($r8);

        $r12 = (androidx.health.services.client.data.Availability) $r9;

        goto label7;

     label4:
        $r4 = <androidx.health.services.client.data.LocationAvailability: androidx.health.services.client.data.LocationAvailability$Companion Companion>;

        $r5 = virtualinvoke r1.<androidx.health.services.client.proto.DataProto$Availability: androidx.health.services.client.proto.DataProto$Availability$LocationAvailability getLocationAvailability()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "proto.locationAvailability");

        $r6 = virtualinvoke $r4.<androidx.health.services.client.data.LocationAvailability$Companion: androidx.health.services.client.data.LocationAvailability fromProto$health_services_client_release(androidx.health.services.client.proto.DataProto$Availability$LocationAvailability)>($r5);

        $r12 = (androidx.health.services.client.data.Availability) $r6;

        goto label7;

     label5:
        $r10 = <androidx.health.services.client.data.DataTypeAvailability: androidx.health.services.client.data.DataTypeAvailability UNKNOWN>;

        $r12 = (androidx.health.services.client.data.Availability) $r10;

        goto label7;

     label6:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label7:
        return $r12;
    }

    static void <clinit>()
    {
        androidx.health.services.client.data.Availability$Companion $r0;

        $r0 = new androidx.health.services.client.data.Availability$Companion;

        specialinvoke $r0.<androidx.health.services.client.data.Availability$Companion: void <init>()>();

        <androidx.health.services.client.data.Availability$Companion: androidx.health.services.client.data.Availability$Companion $$INSTANCE> = $r0;

        return;
    }

androidx.health.services.client.data.Availability$DefaultImpls
    public static androidx.health.services.client.proto.DataProto$Availability toProto(androidx.health.services.client.data.Availability)
    {
        androidx.health.services.client.data.Availability $r0;
        androidx.health.services.client.proto.DataProto$Availability $r1;

        $r0 := @parameter0: androidx.health.services.client.data.Availability;

        $r1 = staticinvoke <androidx.health.services.client.data.Availability: androidx.health.services.client.proto.DataProto$Availability access$toProto$jd(androidx.health.services.client.data.Availability)>($r0);

        return $r1;
    }

