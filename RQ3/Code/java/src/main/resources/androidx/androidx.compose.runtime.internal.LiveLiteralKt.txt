androidx.compose.runtime.internal.LiveLiteralKt
<androidx.compose.runtime.internal.LiveLiteralKt: java.util.HashMap liveLiteralCache>
<androidx.compose.runtime.internal.LiveLiteralKt: boolean isLiveLiteralsEnabled>
    public static final boolean isLiveLiteralsEnabled()
    {
        boolean $z0;

        $z0 = <androidx.compose.runtime.internal.LiveLiteralKt: boolean isLiveLiteralsEnabled>;

        return $z0;
    }

    public static void isLiveLiteralsEnabled$annotations()
    {
        return;
    }

    public static final void enableLiveLiterals()
    {
        <androidx.compose.runtime.internal.LiveLiteralKt: boolean isLiveLiteralsEnabled> = 1;

        return;
    }

    public static final androidx.compose.runtime.State liveLiteral(java.lang.String, java.lang.Object)
    {
        java.lang.String r0;
        java.lang.Object r1, r3, $r8;
        java.util.Map $r2;
        java.util.HashMap $r4;
        androidx.compose.runtime.State $r5;
        androidx.compose.runtime.MutableState $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "key");

        $r4 = <androidx.compose.runtime.internal.LiveLiteralKt: java.util.HashMap liveLiteralCache>;

        $r2 = (java.util.Map) $r4;

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if r3 != null goto label1;

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r1, null, 2, null);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7);

        $r8 = $r7;

        goto label2;

     label1:
        $r8 = r3;

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.compose.runtime.State<T of androidx.compose.runtime.internal.LiveLiteralKt.liveLiteral>");

        $r5 = (androidx.compose.runtime.State) $r8;

        return $r5;
    }

    public static final void updateLiveLiteralValue(java.lang.String, java.lang.Object)
    {
        java.lang.String r0;
        java.lang.Object r1, r4, $r8;
        androidx.compose.runtime.MutableState r2, r5;
        java.util.Map $r3;
        java.util.HashMap $r6;
        boolean z2, z3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "key");

        z2 = 0;

        z3 = 1;

        $r6 = <androidx.compose.runtime.internal.LiveLiteralKt: java.util.HashMap liveLiteralCache>;

        $r3 = (java.util.Map) $r6;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if r4 != null goto label1;

        z3 = 0;

        r5 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r1, null, 2, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r5);

        $r8 = r5;

        goto label2;

     label1:
        $r8 = r4;

     label2:
        r2 = (androidx.compose.runtime.MutableState) $r8;

        if z3 == 0 goto label3;

        interfaceinvoke r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <androidx.compose.runtime.internal.LiveLiteralKt: java.util.HashMap liveLiteralCache> = $r0;

        return;
    }

