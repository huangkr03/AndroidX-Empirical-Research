androidx.constraintlayout.core.widgets.VirtualLayout
<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingTop>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingBottom>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingLeft>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingRight>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight>
<androidx.constraintlayout.core.widgets.VirtualLayout: boolean mNeedsCallFromSolver>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredWidth>
<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredHeight>
<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>
<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer>
    public void <init>()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.HelperWidget: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingTop> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingBottom> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingLeft> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingRight> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: boolean mNeedsCallFromSolver> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredWidth> = 0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredHeight> = 0;

        $r1 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        specialinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure> = $r1;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        return;
    }

    public void setPadding(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingLeft> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingTop> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingRight> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingBottom> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd> = i0;

        return;
    }

    public void setPaddingStart(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight> = i0;

        return;
    }

    public void setPaddingEnd(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd> = i0;

        return;
    }

    public void setPaddingLeft(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingLeft> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft> = i0;

        return;
    }

    public void applyRtl(boolean)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart>;

        if $i0 > 0 goto label1;

        $i5 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd>;

        if $i5 <= 0 goto label3;

     label1:
        if z0 == 0 goto label2;

        $i3 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd>;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft> = $i3;

        $i4 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart>;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight> = $i4;

        goto label3;

     label2:
        $i1 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingStart>;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft> = $i1;

        $i2 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingEnd>;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight> = $i2;

     label3:
        return;
    }

    public void setPaddingTop(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingTop> = i0;

        return;
    }

    public void setPaddingRight(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingRight> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight> = i0;

        return;
    }

    public void setPaddingBottom(int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingBottom> = i0;

        return;
    }

    public int getPaddingTop()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingTop>;

        return $i0;
    }

    public int getPaddingBottom()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mPaddingBottom>;

        return $i0;
    }

    public int getPaddingLeft()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingLeft>;

        return $i0;
    }

    public int getPaddingRight()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mResolvedPaddingRight>;

        return $i0;
    }

    protected void needsCallbackFromSolver(boolean)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        boolean z0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        z0 := @parameter0: boolean;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: boolean mNeedsCallFromSolver> = z0;

        return;
    }

    public boolean needSolverPass()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $z0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: boolean mNeedsCallFromSolver>;

        return $z0;
    }

    public void measure(int, int, int, int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        return;
    }

    public void updateConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r1;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.VirtualLayout: void captureWidgets()>();

        return;
    }

    public void captureWidgets()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1;
        int $i0, i1;
        androidx.constraintlayout.core.widgets.ConstraintWidget[] $r2;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i1 = 0;

     label1:
        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mWidgetsCount>;

        if i1 >= $i0 goto label3;

        $r2 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget[] mWidgets>;

        r1 = $r2[i1];

        if r1 == null goto label2;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setInVirtualLayout(boolean)>(1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public int getMeasuredWidth()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredWidth>;

        return $i0;
    }

    public int getMeasuredHeight()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredHeight>;

        return $i0;
    }

    public void setMeasure(int, int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        int i0, i1;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredWidth> = i0;

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mMeasuredHeight> = i1;

        return;
    }

    protected boolean measureChildren()
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1, $r2, $r16;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        androidx.constraintlayout.core.widgets.ConstraintWidget[] $r3;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour $r4, $r5, $r6, $r15, r19, r20;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer $r17;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer r18;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        r18 = null;

        $r2 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget mParent>;

        if $r2 == null goto label01;

        $r16 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget mParent>;

        $r17 = (androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) $r16;

        r18 = virtualinvoke $r17.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer()>();

     label01:
        if r18 != null goto label02;

        return 0;

     label02:
        i8 = 0;

     label03:
        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mWidgetsCount>;

        if i8 >= $i0 goto label12;

        $r3 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget[] mWidgets>;

        r1 = $r3[i8];

        if r1 != null goto label04;

        goto label11;

     label04:
        $z1 = r1 instanceof androidx.constraintlayout.core.widgets.Guideline;

        if $z1 == 0 goto label05;

        goto label11;

     label05:
        r19 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int)>(0);

        r20 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int)>(1);

        $r4 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if r19 != $r4 goto label06;

        $i6 = r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        if $i6 == 1 goto label06;

        $r15 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if r20 != $r15 goto label06;

        $i7 = r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        if $i7 == 1 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z0 = $z2;

        if z0 == 0 goto label08;

        goto label11;

     label08:
        $r5 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if r19 != $r5 goto label09;

        r19 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

     label09:
        $r6 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if r20 != $r6 goto label10;

        r20 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

     label10:
        $r7 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $r7.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = r19;

        $r8 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $r8.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = r20;

        $r9 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i1 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        $r9.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int horizontalDimension> = $i1;

        $r10 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i2 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        $r10.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int verticalDimension> = $i2;

        $r11 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        interfaceinvoke r18.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer: void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r1, $r11);

        $r12 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i3 = $r12.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setWidth(int)>($i3);

        $r13 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i4 = $r13.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHeight(int)>($i4);

        $r14 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i5 = $r14.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredBaseline>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setBaselineDistance(int)>($i5);

     label11:
        i8 = i8 + 1;

        goto label03;

     label12:
        return 1;
    }

    protected void measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1, $r16, $r17;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour r2, r3;
        int i0, i1, $i2, $i3, $i4;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r4;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer $r5, $r11, $r18;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        r2 := @parameter1: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour;

        i1 := @parameter4: int;

     label1:
        $r5 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer>;

        if $r5 != null goto label2;

        $r16 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget getParent()>();

        if $r16 == null goto label2;

        $r17 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget getParent()>();

        r4 = (androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) $r17;

        $r18 = virtualinvoke r4.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer()>();

        r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = $r18;

        goto label1;

     label2:
        $r6 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $r6.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = r2;

        $r7 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $r7.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = r3;

        $r8 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $r8.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int horizontalDimension> = i0;

        $r9 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $r9.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int verticalDimension> = i1;

        $r11 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer>;

        $r10 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        interfaceinvoke $r11.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer: void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r1, $r10);

        $r12 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i2 = $r12.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setWidth(int)>($i2);

        $r13 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i3 = $r13.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHeight(int)>($i3);

        $r14 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $z0 = $r14.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean measuredHasBaseline>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHasBaseline(boolean)>($z0);

        $r15 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>;

        $i4 = $r15.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredBaseline>;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setBaselineDistance(int)>($i4);

        return;
    }

    public boolean contains(java.util.HashSet)
    {
        androidx.constraintlayout.core.widgets.VirtualLayout r0;
        java.util.HashSet r1;
        androidx.constraintlayout.core.widgets.ConstraintWidget r2;
        int $i0, i1;
        androidx.constraintlayout.core.widgets.ConstraintWidget[] $r3;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.VirtualLayout;

        r1 := @parameter0: java.util.HashSet;

        i1 = 0;

     label1:
        $i0 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: int mWidgetsCount>;

        if i1 >= $i0 goto label3;

        $r3 = r0.<androidx.constraintlayout.core.widgets.VirtualLayout: androidx.constraintlayout.core.widgets.ConstraintWidget[] mWidgets>;

        r2 = $r3[i1];

        $z0 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

