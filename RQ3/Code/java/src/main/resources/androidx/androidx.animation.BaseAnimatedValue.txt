androidx.animation.BaseAnimatedValue
<androidx.animation.BaseAnimatedValue: boolean isRunning>
<androidx.animation.BaseAnimatedValue: java.lang.Object _targetBackingField>
<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector _velocityBackField>
<androidx.animation.BaseAnimatedValue: kotlin.jvm.functions.Function2 onEnd>
<androidx.animation.BaseAnimatedValue: androidx.animation.Animation anim>
<androidx.animation.BaseAnimatedValue: long startTime>
<androidx.animation.BaseAnimatedValue: long lastFrameTime>
<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObserver animationClockObserver>
<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter>
<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObservable clock>
<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector visibilityThreshold>
<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>
<androidx.animation.BaseAnimatedValue: void setValue(java.lang.Object)>
    public final boolean isRunning()
    {
        androidx.animation.BaseAnimatedValue r0;
        boolean $z0;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $z0 = r0.<androidx.animation.BaseAnimatedValue: boolean isRunning>;

        return $z0;
    }

    public final void setRunning$ui_animation_core_release(boolean)
    {
        androidx.animation.BaseAnimatedValue r0;
        boolean z0;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        z0 := @parameter0: boolean;

        r0.<androidx.animation.BaseAnimatedValue: boolean isRunning> = z0;

        return;
    }

    public final java.lang.Object getTargetValue()
    {
        androidx.animation.BaseAnimatedValue r0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = specialinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object get_targetBackingField()>();

        if $r1 == null goto label1;

        $r3 = specialinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object get_targetBackingField()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>();

        return $r2;
    }

    public final void setTargetValue$ui_animation_core_release(java.lang.Object)
    {
        androidx.animation.BaseAnimatedValue r0;
        java.lang.Object r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.animation.BaseAnimatedValue: java.lang.Object _targetBackingField> = r1;

        return;
    }

    private final java.lang.Object get_targetBackingField()
    {
        androidx.animation.BaseAnimatedValue r0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: java.lang.Object _targetBackingField>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>();

        r0.<androidx.animation.BaseAnimatedValue: java.lang.Object _targetBackingField> = $r3;

     label1:
        $r2 = r0.<androidx.animation.BaseAnimatedValue: java.lang.Object _targetBackingField>;

        return $r2;
    }

    public final androidx.animation.AnimationVector getVelocityVector$ui_animation_core_release()
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationVector $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = specialinvoke r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector get_velocityBackField()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public final void setVelocityVector$ui_animation_core_release(androidx.animation.AnimationVector)
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationVector r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector _velocityBackField> = r1;

        return;
    }

    private final androidx.animation.AnimationVector get_velocityBackField()
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationVector $r1, $r2, $r7, $r8;
        androidx.animation.TwoWayConverter $r3;
        kotlin.jvm.functions.Function1 $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector _velocityBackField>;

        if $r1 != null goto label1;

        $r3 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter>;

        $r4 = interfaceinvoke $r3.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r5 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>();

        $r6 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (androidx.animation.AnimationVector) $r6;

        $r8 = staticinvoke <androidx.animation.AnimationVectorsKt: androidx.animation.AnimationVector newInstance(androidx.animation.AnimationVector)>($r7);

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector _velocityBackField> = $r8;

     label1:
        $r2 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector _velocityBackField>;

        return $r2;
    }

    public final kotlin.jvm.functions.Function2 getOnEnd$ui_animation_core_release()
    {
        androidx.animation.BaseAnimatedValue r0;
        kotlin.jvm.functions.Function2 $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: kotlin.jvm.functions.Function2 onEnd>;

        return $r1;
    }

    public final void setOnEnd$ui_animation_core_release(kotlin.jvm.functions.Function2)
    {
        androidx.animation.BaseAnimatedValue r0;
        kotlin.jvm.functions.Function2 r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        r0.<androidx.animation.BaseAnimatedValue: kotlin.jvm.functions.Function2 onEnd> = r1;

        return;
    }

    private final androidx.animation.PhysicsBuilder defaultPhysicsBuilder()
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationVector r1, r2, $r3;
        boolean z0, z1;
        androidx.animation.TwoWayConverter $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Object $r6;
        androidx.animation.PhysicsBuilder $r7;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r3 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector visibilityThreshold>;

        if $r3 == null goto label1;

        r1 = $r3;

        z0 = 0;

        z1 = 0;

        r2 = r1;

        $r7 = new androidx.animation.PhysicsBuilder;

        $r4 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter>;

        $r5 = interfaceinvoke $r4.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r6 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        specialinvoke $r7.<androidx.animation.PhysicsBuilder: void <init>(float,float,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, $r6, 3, null);

        goto label2;

     label1:
        $r7 = new androidx.animation.PhysicsBuilder;

        specialinvoke $r7.<androidx.animation.PhysicsBuilder: void <init>(float,float,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, null, 7, null);

     label2:
        return $r7;
    }

    public final void animateTo(java.lang.Object, androidx.animation.AnimationBuilder, kotlin.jvm.functions.Function2)
    {
        androidx.animation.BaseAnimatedValue r0;
        java.lang.Object r1, $r8, $r13;
        androidx.animation.AnimationBuilder r2;
        kotlin.jvm.functions.Function2 r3;
        androidx.animation.TargetBasedAnimation r4, $r5;
        boolean $z0;
        androidx.animation.TwoWayConverter $r6, $r10;
        androidx.animation.AnimationSpec $r7;
        androidx.animation.AnimationVector $r9;
        androidx.animation.Animation $r11;
        androidx.animation.AnimationEndReason $r12;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.animation.AnimationBuilder;

        r3 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "anim");

        $z0 = r0.<androidx.animation.BaseAnimatedValue: boolean isRunning>;

        if $z0 == 0 goto label1;

        $r12 = <androidx.animation.AnimationEndReason: androidx.animation.AnimationEndReason Interrupted>;

        $r13 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>();

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void notifyEnded$ui_animation_core_release(androidx.animation.AnimationEndReason,java.lang.Object)>($r12, $r13);

     label1:
        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void setTargetValue$ui_animation_core_release(java.lang.Object)>(r1);

        $r5 = new androidx.animation.TargetBasedAnimation;

        $r6 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter>;

        $r7 = virtualinvoke r2.<androidx.animation.AnimationBuilder: androidx.animation.AnimationSpec build(androidx.animation.TwoWayConverter)>($r6);

        $r8 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>();

        $r9 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector getVelocityVector$ui_animation_core_release()>();

        $r10 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter>;

        specialinvoke $r5.<androidx.animation.TargetBasedAnimation: void <init>(androidx.animation.AnimationSpec,java.lang.Object,java.lang.Object,androidx.animation.AnimationVector,androidx.animation.TwoWayConverter)>($r7, $r8, r1, $r9, $r10);

        r4 = $r5;

        r0.<androidx.animation.BaseAnimatedValue: kotlin.jvm.functions.Function2 onEnd> = r3;

        $r11 = (androidx.animation.Animation) r4;

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void startAnimation$ui_animation_core_release(androidx.animation.Animation)>($r11);

        return;
    }

    public static void animateTo$default(androidx.animation.BaseAnimatedValue, java.lang.Object, androidx.animation.AnimationBuilder, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        androidx.animation.BaseAnimatedValue r0;
        java.lang.Object r1, r2;
        int i0, $i1, $i2;
        androidx.animation.PhysicsBuilder $r3;
        java.lang.UnsupportedOperationException $r4;
        androidx.animation.AnimationBuilder r5;
        kotlin.jvm.functions.Function2 r6;

        r0 := @parameter0: androidx.animation.BaseAnimatedValue;

        r1 := @parameter1: java.lang.Object;

        r5 := @parameter2: androidx.animation.AnimationBuilder;

        r6 := @parameter3: kotlin.jvm.functions.Function2;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        if r2 == null goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: animateTo");

        throw $r4;

     label1:
        $i1 = i0 & 2;

        if $i1 == 0 goto label2;

        $r3 = specialinvoke r0.<androidx.animation.BaseAnimatedValue: androidx.animation.PhysicsBuilder defaultPhysicsBuilder()>();

        r5 = (androidx.animation.AnimationBuilder) $r3;

     label2:
        $i2 = i0 & 4;

        if $i2 == 0 goto label3;

        r6 = (kotlin.jvm.functions.Function2) null;

     label3:
        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void animateTo(java.lang.Object,androidx.animation.AnimationBuilder,kotlin.jvm.functions.Function2)>(r1, r5, r6);

        return;
    }

    public void snapTo(java.lang.Object)
    {
        androidx.animation.BaseAnimatedValue r0;
        java.lang.Object r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void stop()>();

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void setValue(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void setTargetValue$ui_animation_core_release(java.lang.Object)>(r1);

        return;
    }

    public final void stop()
    {
        androidx.animation.BaseAnimatedValue r0;
        boolean $z0;
        androidx.animation.AnimationEndReason $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $z0 = r0.<androidx.animation.BaseAnimatedValue: boolean isRunning>;

        if $z0 == 0 goto label1;

        $r1 = <androidx.animation.AnimationEndReason: androidx.animation.AnimationEndReason Interrupted>;

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void endAnimation$ui_animation_core_release(androidx.animation.AnimationEndReason)>($r1);

     label1:
        return;
    }

    public final void notifyEnded$ui_animation_core_release(androidx.animation.AnimationEndReason, java.lang.Object)
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationEndReason r1;
        java.lang.Object r2, $r5;
        kotlin.jvm.functions.Function2 r3, $r4;
        kotlin.Unit $r6;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: androidx.animation.AnimationEndReason;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "endReason");

        r3 = r0.<androidx.animation.BaseAnimatedValue: kotlin.jvm.functions.Function2 onEnd>;

        $r4 = (kotlin.jvm.functions.Function2) null;

        r0.<androidx.animation.BaseAnimatedValue: kotlin.jvm.functions.Function2 onEnd> = $r4;

        if r3 == null goto label1;

        $r5 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = (kotlin.Unit) $r5;

        goto label1;

     label1:
        return;
    }

    private final void doAnimationFrame(long)
    {
        androidx.animation.BaseAnimatedValue r0;
        long l0, $l1, $l3, l4, l5;
        byte $b2;
        androidx.animation.Animation $r1, $r3;
        java.lang.Object $r2;
        androidx.animation.AnimationVector $r4;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        l0 := @parameter0: long;

        l4 = 0L;

        $l1 = r0.<androidx.animation.BaseAnimatedValue: long startTime>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        r0.<androidx.animation.BaseAnimatedValue: long startTime> = l0;

        l5 = 0L;

        goto label2;

     label1:
        $l3 = r0.<androidx.animation.BaseAnimatedValue: long startTime>;

        l5 = l0 - $l3;

     label2:
        r0.<androidx.animation.BaseAnimatedValue: long lastFrameTime> = l0;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.Animation anim>;

        if $r1 != null goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("anim");

     label3:
        $r2 = interfaceinvoke $r1.<androidx.animation.Animation: java.lang.Object getValue(long)>(l5);

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void setValue(java.lang.Object)>($r2);

        $r3 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.Animation anim>;

        if $r3 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("anim");

     label4:
        $r4 = interfaceinvoke $r3.<androidx.animation.Animation: androidx.animation.AnimationVector getVelocityVector(long)>(l5);

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void setVelocityVector$ui_animation_core_release(androidx.animation.AnimationVector)>($r4);

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void checkFinished(long)>(l5);

        return;
    }

    protected void checkFinished(long)
    {
        androidx.animation.BaseAnimatedValue r0;
        long l0;
        boolean z0;
        androidx.animation.Animation $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.Animation anim>;

        if $r1 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("anim");

     label1:
        z0 = interfaceinvoke $r1.<androidx.animation.Animation: boolean isFinished(long)>(l0);

        if z0 == 0 goto label2;

        staticinvoke <androidx.animation.BaseAnimatedValue: void endAnimation$ui_animation_core_release$default(androidx.animation.BaseAnimatedValue,androidx.animation.AnimationEndReason,int,java.lang.Object)>(r0, null, 1, null);

     label2:
        return;
    }

    public final void startAnimation$ui_animation_core_release(androidx.animation.Animation)
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.Animation r1;
        boolean $z0, $z1;
        androidx.animation.AnimationClockObserver $r2;
        androidx.animation.AnimationClockObservable $r3;
        long $l0;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: androidx.animation.Animation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anim");

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.Animation anim> = r1;

        $z0 = interfaceinvoke r1.<androidx.animation.Animation: boolean isFinished(long)>(0L);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.animation.BaseAnimatedValue: void endAnimation$ui_animation_core_release$default(androidx.animation.BaseAnimatedValue,androidx.animation.AnimationEndReason,int,java.lang.Object)>(r0, null, 1, null);

        return;

     label1:
        $z1 = r0.<androidx.animation.BaseAnimatedValue: boolean isRunning>;

        if $z1 == 0 goto label2;

        $l0 = r0.<androidx.animation.BaseAnimatedValue: long lastFrameTime>;

        r0.<androidx.animation.BaseAnimatedValue: long startTime> = $l0;

        goto label3;

     label2:
        r0.<androidx.animation.BaseAnimatedValue: long startTime> = -1L;

        r0.<androidx.animation.BaseAnimatedValue: boolean isRunning> = 1;

        $r3 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObservable clock>;

        $r2 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObserver animationClockObserver>;

        interfaceinvoke $r3.<androidx.animation.AnimationClockObservable: void subscribe(androidx.animation.AnimationClockObserver)>($r2);

     label3:
        return;
    }

    public final void endAnimation$ui_animation_core_release(androidx.animation.AnimationEndReason)
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationEndReason r1;
        androidx.animation.AnimationClockObserver $r2;
        androidx.animation.AnimationClockObservable $r3;
        java.lang.Object $r4;
        androidx.animation.AnimationVector $r5;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: androidx.animation.AnimationEndReason;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "endReason");

        $r3 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObservable clock>;

        $r2 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObserver animationClockObserver>;

        interfaceinvoke $r3.<androidx.animation.AnimationClockObservable: void unsubscribe(androidx.animation.AnimationClockObserver)>($r2);

        r0.<androidx.animation.BaseAnimatedValue: boolean isRunning> = 0;

        r0.<androidx.animation.BaseAnimatedValue: long startTime> = -1L;

        r0.<androidx.animation.BaseAnimatedValue: long lastFrameTime> = -1L;

        $r4 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: java.lang.Object getValue()>();

        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void notifyEnded$ui_animation_core_release(androidx.animation.AnimationEndReason,java.lang.Object)>(r1, $r4);

        $r5 = virtualinvoke r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector getVelocityVector$ui_animation_core_release()>();

        virtualinvoke $r5.<androidx.animation.AnimationVector: void reset$ui_animation_core_release()>();

        return;
    }

    public static void endAnimation$ui_animation_core_release$default(androidx.animation.BaseAnimatedValue, androidx.animation.AnimationEndReason, int, java.lang.Object)
    {
        androidx.animation.BaseAnimatedValue r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;
        androidx.animation.AnimationEndReason r3;

        r0 := @parameter0: androidx.animation.BaseAnimatedValue;

        r3 := @parameter1: androidx.animation.AnimationEndReason;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        if r1 == null goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: endAnimation");

        throw $r2;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        r3 = <androidx.animation.AnimationEndReason: androidx.animation.AnimationEndReason TargetReached>;

     label2:
        virtualinvoke r0.<androidx.animation.BaseAnimatedValue: void endAnimation$ui_animation_core_release(androidx.animation.AnimationEndReason)>(r3);

        return;
    }

    public final androidx.animation.TwoWayConverter getTypeConverter$ui_animation_core_release()
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.TwoWayConverter $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter>;

        return $r1;
    }

    public final androidx.animation.AnimationVector getVisibilityThreshold$ui_animation_core_release()
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.AnimationVector $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        $r1 = r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector visibilityThreshold>;

        return $r1;
    }

    private void <init>(androidx.animation.TwoWayConverter, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector)
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.TwoWayConverter r1;
        androidx.animation.AnimationClockObservable r2;
        androidx.animation.AnimationVector r3;
        androidx.animation.BaseAnimatedValue$animationClockObserver$1 $r4;
        androidx.animation.AnimationClockObserver $r5;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: androidx.animation.TwoWayConverter;

        r2 := @parameter1: androidx.animation.AnimationClockObservable;

        r3 := @parameter2: androidx.animation.AnimationVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.TwoWayConverter typeConverter> = r1;

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObservable clock> = r2;

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationVector visibilityThreshold> = r3;

        r0.<androidx.animation.BaseAnimatedValue: long startTime> = -1L;

        r0.<androidx.animation.BaseAnimatedValue: long lastFrameTime> = -1L;

        $r4 = new androidx.animation.BaseAnimatedValue$animationClockObserver$1;

        specialinvoke $r4.<androidx.animation.BaseAnimatedValue$animationClockObserver$1: void <init>(androidx.animation.BaseAnimatedValue)>(r0);

        $r5 = (androidx.animation.AnimationClockObserver) $r4;

        r0.<androidx.animation.BaseAnimatedValue: androidx.animation.AnimationClockObserver animationClockObserver> = $r5;

        return;
    }

    public void <init>(androidx.animation.TwoWayConverter, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.BaseAnimatedValue r0;
        androidx.animation.TwoWayConverter r1;
        androidx.animation.AnimationClockObservable r2;
        androidx.animation.AnimationVector r3;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        r0 := @this: androidx.animation.BaseAnimatedValue;

        r1 := @parameter0: androidx.animation.TwoWayConverter;

        r2 := @parameter1: androidx.animation.AnimationClockObservable;

        r3 := @parameter2: androidx.animation.AnimationVector;

        $r4 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.animation.BaseAnimatedValue: void <init>(androidx.animation.TwoWayConverter,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r1, r2, r3);

        return;
    }

    public static final void access$doAnimationFrame(androidx.animation.BaseAnimatedValue, long)
    {
        androidx.animation.BaseAnimatedValue $r0;
        long l0;

        $r0 := @parameter0: androidx.animation.BaseAnimatedValue;

        l0 := @parameter1: long;

        specialinvoke $r0.<androidx.animation.BaseAnimatedValue: void doAnimationFrame(long)>(l0);

        return;
    }

androidx.animation.BaseAnimatedValue$animationClockObserver$1
<androidx.animation.BaseAnimatedValue$animationClockObserver$1: androidx.animation.BaseAnimatedValue this$0>
    public void onAnimationFrame(long)
    {
        androidx.animation.BaseAnimatedValue$animationClockObserver$1 r0;
        long l0;
        androidx.animation.BaseAnimatedValue $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue$animationClockObserver$1;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.animation.BaseAnimatedValue$animationClockObserver$1: androidx.animation.BaseAnimatedValue this$0>;

        staticinvoke <androidx.animation.BaseAnimatedValue: void access$doAnimationFrame(androidx.animation.BaseAnimatedValue,long)>($r1, l0);

        return;
    }

    void <init>(androidx.animation.BaseAnimatedValue)
    {
        androidx.animation.BaseAnimatedValue$animationClockObserver$1 r0;
        androidx.animation.BaseAnimatedValue $r1;

        r0 := @this: androidx.animation.BaseAnimatedValue$animationClockObserver$1;

        $r1 := @parameter0: androidx.animation.BaseAnimatedValue;

        r0.<androidx.animation.BaseAnimatedValue$animationClockObserver$1: androidx.animation.BaseAnimatedValue this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

