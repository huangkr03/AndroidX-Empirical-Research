androidx.media3.exoplayer.rtsp.RtpDataLoadable
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: int trackId>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtspMediaTrack rtspMediaTrack>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener eventListener>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.extractor.ExtractorOutput output>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: android.os.Handler playbackThreadHandler>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: boolean loadCancelled>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long pendingSeekPositionUs>
<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long nextRtpTimestamp>
    public void <init>(int, androidx.media3.exoplayer.rtsp.RtspMediaTrack, androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener, androidx.media3.extractor.ExtractorOutput, androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory)
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        int i0;
        androidx.media3.exoplayer.rtsp.RtspMediaTrack r1;
        androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener r2;
        androidx.media3.extractor.ExtractorOutput r3;
        androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory r4;
        android.os.Handler $r5;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.rtsp.RtspMediaTrack;

        r2 := @parameter2: androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener;

        r3 := @parameter3: androidx.media3.extractor.ExtractorOutput;

        r4 := @parameter4: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: int trackId> = i0;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtspMediaTrack rtspMediaTrack> = r1;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener eventListener> = r2;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.extractor.ExtractorOutput output> = r3;

        $r5 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: android.os.Handler playbackThreadHandler> = $r5;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory> = r4;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long pendingSeekPositionUs> = -9223372036854775807L;

        return;
    }

    public void setTimestamp(long)
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        long l0;
        byte $b1;
        androidx.media3.exoplayer.rtsp.RtpExtractor $r1, $r3, $r4;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        l0 := @parameter0: long;

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 == 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.rtsp.RtpExtractor) $r2;

        $z0 = virtualinvoke $r3.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean hasReadFirstRtpPacket()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        virtualinvoke $r4.<androidx.media3.exoplayer.rtsp.RtpExtractor: void setFirstTimestamp(long)>(l0);

     label1:
        return;
    }

    public void setSequenceNumber(int)
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        int i0;
        androidx.media3.exoplayer.rtsp.RtpExtractor $r1, $r3, $r4;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.rtsp.RtpExtractor) $r2;

        $z0 = virtualinvoke $r3.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean hasReadFirstRtpPacket()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        virtualinvoke $r4.<androidx.media3.exoplayer.rtsp.RtpExtractor: void setFirstSequenceNumber(int)>(i0);

     label1:
        return;
    }

    public void cancelLoad()
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: boolean loadCancelled> = 1;

        return;
    }

    public void load() throws java.io.IOException
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        java.lang.String r1;
        androidx.media3.exoplayer.rtsp.RtpDataChannel r2, r20;
        androidx.media3.extractor.DefaultExtractorInput r3, $r8;
        int i0, $i1, $i2;
        java.lang.Throwable r4, $r19;
        androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory $r5;
        android.os.Handler $r6;
        java.lang.Runnable $r7;
        java.lang.Object $r9;
        androidx.media3.common.DataReader $r10;
        androidx.media3.exoplayer.rtsp.RtpExtractor $r11, $r15, $r17, $r18;
        androidx.media3.exoplayer.rtsp.RtspMediaTrack $r12;
        androidx.media3.exoplayer.rtsp.RtpPayloadFormat $r13;
        androidx.media3.extractor.ExtractorOutput $r14;
        boolean $z1;
        long $l3, $l5, $l6;
        byte $b4;
        androidx.media3.extractor.PositionHolder $r16;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        r20 = null;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory>;

        $i1 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: int trackId>;

        r20 = interfaceinvoke $r5.<androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory: androidx.media3.exoplayer.rtsp.RtpDataChannel createAndOpenDataChannel(int)>($i1);

        r1 = interfaceinvoke r20.<androidx.media3.exoplayer.rtsp.RtpDataChannel: java.lang.String getTransport()>();

        r2 = r20;

        $r6 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: android.os.Handler playbackThreadHandler>;

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.rtsp.RtpDataLoadable,java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.rtsp.RtpDataLoadable: void lambda$load$0(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        $r8 = new androidx.media3.extractor.DefaultExtractorInput;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r20);

        $r10 = (androidx.media3.common.DataReader) $r9;

        specialinvoke $r8.<androidx.media3.extractor.DefaultExtractorInput: void <init>(androidx.media3.common.DataReader,long,long)>($r10, 0L, -1L);

        r3 = $r8;

        $r11 = new androidx.media3.exoplayer.rtsp.RtpExtractor;

        $r12 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtspMediaTrack rtspMediaTrack>;

        $r13 = $r12.<androidx.media3.exoplayer.rtsp.RtspMediaTrack: androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat>;

        $i2 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: int trackId>;

        specialinvoke $r11.<androidx.media3.exoplayer.rtsp.RtpExtractor: void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat,int)>($r13, $i2);

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor> = $r11;

        $r15 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        $r14 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.extractor.ExtractorOutput output>;

        virtualinvoke $r15.<androidx.media3.exoplayer.rtsp.RtpExtractor: void init(androidx.media3.extractor.ExtractorOutput)>($r14);

     label2:
        $z1 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: boolean loadCancelled>;

        if $z1 != 0 goto label5;

        $l3 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long pendingSeekPositionUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 == 0 goto label3;

        $r18 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        $l6 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long nextRtpTimestamp>;

        $l5 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long pendingSeekPositionUs>;

        virtualinvoke $r18.<androidx.media3.exoplayer.rtsp.RtpExtractor: void seek(long,long)>($l6, $l5);

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long pendingSeekPositionUs> = -9223372036854775807L;

     label3:
        $r17 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        $r16 = new androidx.media3.extractor.PositionHolder;

        specialinvoke $r16.<androidx.media3.extractor.PositionHolder: void <init>()>();

        i0 = virtualinvoke $r17.<androidx.media3.exoplayer.rtsp.RtpExtractor: int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder)>(r3, $r16);

        if i0 != -1 goto label4;

        goto label5;

     label4:
        goto label2;

     label5:
        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r20);

        goto label8;

     label6:
        $r19 := @caughtexception;

        r4 = $r19;

     label7:
        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r20);

        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void resetForSeek()
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        androidx.media3.exoplayer.rtsp.RtpExtractor $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpExtractor extractor>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.rtsp.RtpExtractor) $r2;

        virtualinvoke $r3.<androidx.media3.exoplayer.rtsp.RtpExtractor: void preSeek()>();

        return;
    }

    public void seekToUs(long, long)
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long pendingSeekPositionUs> = l0;

        r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: long nextRtpTimestamp> = l1;

        return;
    }

    private void lambda$load$0(java.lang.String, androidx.media3.exoplayer.rtsp.RtpDataChannel)
    {
        androidx.media3.exoplayer.rtsp.RtpDataLoadable r0;
        java.lang.String r1;
        androidx.media3.exoplayer.rtsp.RtpDataChannel r2;
        androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener $r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpDataLoadable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.exoplayer.rtsp.RtpDataChannel;

        $r3 = r0.<androidx.media3.exoplayer.rtsp.RtpDataLoadable: androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener eventListener>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener: void onTransportReady(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel)>(r1, r2);

        return;
    }

androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener
<androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener: void onTransportReady(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel)>
