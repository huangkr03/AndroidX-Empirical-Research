androidx.ui.graphics.vector.DrawCache
<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset cachedImage>
<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.Canvas cachedCanvas>
<androidx.ui.graphics.vector.DrawCache: androidx.ui.unit.Density scopeDensity>
<androidx.ui.graphics.vector.DrawCache: androidx.ui.core.LayoutDirection layoutDirection>
<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.vector.DrawCache$CacheDrawScope cacheScope>
    public void <init>()
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope $r1;

        r0 := @this: androidx.ui.graphics.vector.DrawCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        specialinvoke $r1.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: void <init>(androidx.ui.graphics.vector.DrawCache)>(r0);

        r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.vector.DrawCache$CacheDrawScope cacheScope> = $r1;

        return;
    }

    public final androidx.ui.graphics.ImageAsset getCachedImage()
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.graphics.ImageAsset r1;

        r0 := @this: androidx.ui.graphics.vector.DrawCache;

        r1 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset cachedImage>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("cachedImage");

        throw null;
    }

    public final void setCachedImage(androidx.ui.graphics.ImageAsset)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.graphics.ImageAsset r1;

        r0 := @this: androidx.ui.graphics.vector.DrawCache;

        r1 := @parameter0: androidx.ui.graphics.ImageAsset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset cachedImage> = r1;

        return;
    }

    public static void getCachedImage$annotations()
    {
        return;
    }

    public final void drawCachedImage(androidx.ui.unit.IntSize, androidx.ui.unit.Density, androidx.ui.core.LayoutDirection, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.unit.IntSize r1;
        androidx.ui.unit.Density r2;
        androidx.ui.core.LayoutDirection r3;
        kotlin.jvm.functions.Function1 r4, $r12;
        boolean z0, $z1;
        kotlin.jvm.internal.Ref$ObjectRef r5, $r19;
        androidx.ui.graphics.ImageAsset $r6, $r13, $r14, $r15, $r16, $r17;
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope $r7;
        java.lang.Object $r8, $r21;
        androidx.ui.graphics.Canvas $r9, $r18, $r20, $r22;
        androidx.ui.geometry.Size $r10;
        androidx.ui.graphics.vector.DrawCache$drawCachedImage$1 $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.ui.graphics.vector.DrawCache;

        r1 := @parameter0: androidx.ui.unit.IntSize;

        r2 := @parameter1: androidx.ui.unit.Density;

        r3 := @parameter2: androidx.ui.core.LayoutDirection;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "density");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "block");

        r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.unit.Density scopeDensity> = r2;

        r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.core.LayoutDirection layoutDirection> = r3;

        $r6 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset cachedImage>;

        if $r6 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $i0 = virtualinvoke r1.<androidx.ui.unit.IntSize: int getWidth()>();

        $r14 = virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset getCachedImage()>();

        $i1 = interfaceinvoke $r14.<androidx.ui.graphics.ImageAsset: int getWidth()>();

        if $i0 > $i1 goto label3;

        $i2 = virtualinvoke r1.<androidx.ui.unit.IntSize: int getHeight()>();

        $r15 = virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset getCachedImage()>();

        $i3 = interfaceinvoke $r15.<androidx.ui.graphics.ImageAsset: int getHeight()>();

        if $i2 <= $i3 goto label4;

     label3:
        $i4 = virtualinvoke r1.<androidx.ui.unit.IntSize: int getWidth()>();

        $i5 = virtualinvoke r1.<androidx.ui.unit.IntSize: int getHeight()>();

        $r16 = staticinvoke <androidx.ui.graphics.ImageAssetKt: androidx.ui.graphics.ImageAsset ImageAsset$default(int,int,androidx.ui.graphics.ImageAssetConfig,boolean,androidx.ui.graphics.colorspace.ColorSpace,int,java.lang.Object)>($i4, $i5, null, 0, null, 28, null);

        virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: void setCachedImage(androidx.ui.graphics.ImageAsset)>($r16);

        $r17 = virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset getCachedImage()>();

        $r18 = staticinvoke <androidx.ui.graphics.CanvasKt: androidx.ui.graphics.Canvas Canvas(androidx.ui.graphics.ImageAsset)>($r17);

        r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.Canvas cachedCanvas> = $r18;

     label4:
        $r7 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.vector.DrawCache$CacheDrawScope cacheScope>;

        $r19 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r19.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r5 = $r19;

        $r20 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.Canvas cachedCanvas>;

        r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r20;

        $r21 = r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r22 = (androidx.ui.graphics.Canvas) $r21;

        if $r22 != null goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("cachedCanvas");

        throw null;

     label5:
        $r8 = r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r9 = (androidx.ui.graphics.Canvas) $r8;

        $r10 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.geometry.Size toSize(androidx.ui.unit.IntSize)>(r1);

        $r11 = new androidx.ui.graphics.vector.DrawCache$drawCachedImage$1;

        specialinvoke $r11.<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: void <init>(androidx.ui.graphics.vector.DrawCache,kotlin.jvm.functions.Function1)>(r0, r4);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        virtualinvoke $r7.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: void drawInto(androidx.ui.graphics.Canvas,androidx.ui.geometry.Size,kotlin.jvm.functions.Function1)>($r9, $r10, $r12);

        $r13 = virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset getCachedImage()>();

        interfaceinvoke $r13.<androidx.ui.graphics.ImageAsset: void prepareToDraw()>();

        return;
    }

    public final void drawInto(androidx.ui.graphics.drawscope.DrawScope, float, androidx.ui.graphics.ColorFilter)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.graphics.drawscope.DrawScope r1;
        float f0;
        androidx.ui.graphics.ColorFilter r2;
        boolean z0, z1, $z3, z4;
        androidx.ui.graphics.ImageAsset $r3, $r4;
        androidx.ui.geometry.Offset$Companion $r5;
        androidx.ui.geometry.Offset $r6;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;

        r0 := @this: androidx.ui.graphics.vector.DrawCache;

        r1 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        r2 := @parameter2: androidx.ui.graphics.ColorFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        $r3 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset cachedImage>;

        if $r3 == null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label3;

        r10 = "drawCachedImage must be invoked first before attempting to draw the result into another destination";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label3:
        $r4 = virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.ImageAsset getCachedImage()>();

        $r5 = <androidx.ui.geometry.Offset: androidx.ui.geometry.Offset$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.ui.geometry.Offset$Companion: androidx.ui.geometry.Offset getZero()>();

        staticinvoke <androidx.ui.graphics.drawscope.DrawScope: void drawImage$default(androidx.ui.graphics.drawscope.DrawScope,androidx.ui.graphics.ImageAsset,androidx.ui.geometry.Offset,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode,int,java.lang.Object)>(r1, $r4, $r6, f0, null, r2, null, 40, null);

        return;
    }

    public static void drawInto$default(androidx.ui.graphics.vector.DrawCache, androidx.ui.graphics.drawscope.DrawScope, float, androidx.ui.graphics.ColorFilter, int, java.lang.Object)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.graphics.drawscope.DrawScope r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        float f0;
        androidx.ui.graphics.ColorFilter r3;

        r0 := @parameter0: androidx.ui.graphics.vector.DrawCache;

        r1 := @parameter1: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter2: float;

        r3 := @parameter3: androidx.ui.graphics.ColorFilter;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        f0 = 1.0F;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r3 = (androidx.ui.graphics.ColorFilter) null;

     label2:
        virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache: void drawInto(androidx.ui.graphics.drawscope.DrawScope,float,androidx.ui.graphics.ColorFilter)>(r1, f0, r3);

        return;
    }

    public static final androidx.ui.graphics.vector.DrawCache$CacheDrawScope access$getCacheScope$p(androidx.ui.graphics.vector.DrawCache)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope $r1;

        r0 := @parameter0: androidx.ui.graphics.vector.DrawCache;

        $r1 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.vector.DrawCache$CacheDrawScope cacheScope>;

        return $r1;
    }

    public static final androidx.ui.core.LayoutDirection access$getLayoutDirection$p(androidx.ui.graphics.vector.DrawCache)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.core.LayoutDirection $r1;

        r0 := @parameter0: androidx.ui.graphics.vector.DrawCache;

        $r1 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.core.LayoutDirection layoutDirection>;

        return $r1;
    }

    public static final androidx.ui.unit.Density access$getScopeDensity$p(androidx.ui.graphics.vector.DrawCache)
    {
        androidx.ui.graphics.vector.DrawCache r0;
        androidx.ui.unit.Density $r1;

        r0 := @parameter0: androidx.ui.graphics.vector.DrawCache;

        $r1 = r0.<androidx.ui.graphics.vector.DrawCache: androidx.ui.unit.Density scopeDensity>;

        return $r1;
    }

androidx.ui.graphics.vector.DrawCache$CacheDrawScope
<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: androidx.ui.graphics.vector.DrawCache this$0>
    public void <init>(androidx.ui.graphics.vector.DrawCache)
    {
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope r0;
        androidx.ui.graphics.vector.DrawCache r1;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        r1 := @parameter0: androidx.ui.graphics.vector.DrawCache;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        r0.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: androidx.ui.graphics.vector.DrawCache this$0> = r1;

        specialinvoke r0.<androidx.ui.graphics.drawscope.DrawScope: void <init>()>();

        return;
    }

    public final void drawInto(androidx.ui.graphics.Canvas, androidx.ui.geometry.Size, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.geometry.Size r2;
        kotlin.jvm.functions.Function1 r3;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        r2 := @parameter1: androidx.ui.geometry.Size;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "block");

        virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: void draw(androidx.ui.graphics.Canvas,androidx.ui.geometry.Size,kotlin.jvm.functions.Function1)>(r1, r2, r3);

        return;
    }

    public androidx.ui.core.LayoutDirection getLayoutDirection()
    {
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r2;
        androidx.ui.graphics.vector.DrawCache $r3;
        androidx.ui.core.LayoutDirection $r4, $r6, $r8;
        java.lang.Object $r5, $r7;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: androidx.ui.graphics.vector.DrawCache this$0>;

        $r4 = staticinvoke <androidx.ui.graphics.vector.DrawCache: androidx.ui.core.LayoutDirection access$getLayoutDirection$p(androidx.ui.graphics.vector.DrawCache)>($r3);

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r4;

        $r5 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r6 = (androidx.ui.core.LayoutDirection) $r5;

        if $r6 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("layoutDirection");

        throw null;

     label1:
        $r7 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = (androidx.ui.core.LayoutDirection) $r7;

        return $r8;
    }

    public float getDensity()
    {
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r2;
        androidx.ui.graphics.vector.DrawCache $r3;
        androidx.ui.unit.Density $r4, $r6, $r8;
        java.lang.Object $r5, $r7;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: androidx.ui.graphics.vector.DrawCache this$0>;

        $r4 = staticinvoke <androidx.ui.graphics.vector.DrawCache: androidx.ui.unit.Density access$getScopeDensity$p(androidx.ui.graphics.vector.DrawCache)>($r3);

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r4;

        $r5 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r6 = (androidx.ui.unit.Density) $r5;

        if $r6 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("scopeDensity");

        throw null;

     label1:
        $r7 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = (androidx.ui.unit.Density) $r7;

        $f0 = interfaceinvoke $r8.<androidx.ui.unit.Density: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r2;
        androidx.ui.graphics.vector.DrawCache $r3;
        androidx.ui.unit.Density $r4, $r6, $r8;
        java.lang.Object $r5, $r7;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: androidx.ui.graphics.vector.DrawCache this$0>;

        $r4 = staticinvoke <androidx.ui.graphics.vector.DrawCache: androidx.ui.unit.Density access$getScopeDensity$p(androidx.ui.graphics.vector.DrawCache)>($r3);

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r4;

        $r5 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r6 = (androidx.ui.unit.Density) $r5;

        if $r6 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("scopeDensity");

        throw null;

     label1:
        $r7 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = (androidx.ui.unit.Density) $r7;

        $f0 = interfaceinvoke $r8.<androidx.ui.unit.Density: float getFontScale()>();

        return $f0;
    }

    public final void clear()
    {
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope r0;
        androidx.ui.graphics.Color$Companion $r1;
        androidx.ui.graphics.drawscope.DrawScope $r2;
        long $l0;
        androidx.ui.graphics.BlendMode $r3;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$CacheDrawScope;

        $r2 = (androidx.ui.graphics.drawscope.DrawScope) r0;

        $r1 = <androidx.ui.graphics.Color: androidx.ui.graphics.Color$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.ui.graphics.Color$Companion: long getBlack()>();

        $r3 = <androidx.ui.graphics.BlendMode: androidx.ui.graphics.BlendMode clear>;

        staticinvoke <androidx.ui.graphics.drawscope.DrawScope: void drawRect-5gW23P0$default(androidx.ui.graphics.drawscope.DrawScope,long,androidx.ui.geometry.Offset,androidx.ui.geometry.Size,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode,int,java.lang.Object)>($r2, $l0, null, null, 0.0F, null, null, $r3, 62, null);

        return;
    }

androidx.ui.graphics.vector.DrawCache$drawCachedImage$1
<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: androidx.ui.graphics.vector.DrawCache $this>
<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: kotlin.jvm.functions.Function1 $block>
    void <init>(androidx.ui.graphics.vector.DrawCache, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.vector.DrawCache$drawCachedImage$1 r0;
        androidx.ui.graphics.vector.DrawCache $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$drawCachedImage$1;

        $r1 := @parameter0: androidx.ui.graphics.vector.DrawCache;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: androidx.ui.graphics.vector.DrawCache $this> = $r1;

        r0.<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: kotlin.jvm.functions.Function1 $block> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.graphics.drawscope.DrawScope)
    {
        androidx.ui.graphics.vector.DrawCache$drawCachedImage$1 r0;
        androidx.ui.graphics.drawscope.DrawScope r1;
        androidx.ui.graphics.vector.DrawCache $r2;
        androidx.ui.graphics.vector.DrawCache$CacheDrawScope $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$drawCachedImage$1;

        r1 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        $r2 = r0.<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: androidx.ui.graphics.vector.DrawCache $this>;

        $r3 = staticinvoke <androidx.ui.graphics.vector.DrawCache: androidx.ui.graphics.vector.DrawCache$CacheDrawScope access$getCacheScope$p(androidx.ui.graphics.vector.DrawCache)>($r2);

        virtualinvoke $r3.<androidx.ui.graphics.vector.DrawCache$CacheDrawScope: void clear()>();

        $r4 = r0.<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: kotlin.jvm.functions.Function1 $block>;

        interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.graphics.vector.DrawCache$drawCachedImage$1 r0;
        java.lang.Object r1;
        androidx.ui.graphics.drawscope.DrawScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.graphics.vector.DrawCache$drawCachedImage$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.graphics.drawscope.DrawScope) r1;

        virtualinvoke r0.<androidx.ui.graphics.vector.DrawCache$drawCachedImage$1: void invoke(androidx.ui.graphics.drawscope.DrawScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

