androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory
<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion Companion>
<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage localSdkStorage>
<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory fallback>
<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: java.lang.String LOG_TAG>
    public void <init>(androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage, androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory)
    {
        androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory r0;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage r1;
        androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory r2;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory;

        r1 := @parameter0: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage;

        r2 := @parameter1: androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "localSdkStorage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "fallback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage localSdkStorage> = r1;

        r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory fallback> = r2;

        return;
    }

    public java.lang.ClassLoader createClassLoaderFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig, java.lang.ClassLoader)
    {
        androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory r0;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig r1;
        java.lang.ClassLoader r2, $r4;
        androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory $r3;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory;

        r1 := @parameter0: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig;

        r2 := @parameter1: java.lang.ClassLoader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sdkConfig");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "parent");

        $r4 = specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: java.lang.ClassLoader tryCreateBaseDexClassLoaderFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig,java.lang.ClassLoader)>(r1, r2);

        if $r4 != null goto label1;

        $r3 = r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory fallback>;

        $r4 = interfaceinvoke $r3.<androidx.privacysandbox.sdkruntime.client.loader.SdkLoader$ClassLoaderFactory: java.lang.ClassLoader createClassLoaderFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig,java.lang.ClassLoader)>(r1, r2);

     label1:
        return $r4;
    }

    private final java.lang.ClassLoader tryCreateBaseDexClassLoaderFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig, java.lang.ClassLoader)
    {
        androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory r0;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig r1;
        java.lang.ClassLoader r2, $r12;
        java.io.File r3, $r5, $r8, $r9;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage $r4;
        java.util.List $r6;
        java.lang.Object $r7;
        boolean $z0;
        dalvik.system.BaseDexClassLoader $r10;
        java.lang.String $r11, $r15, $r18, $r22, $r25;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24;
        java.lang.Throwable $r19, $r26, r28;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles r27;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory;

        r1 := @parameter0: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig;

        r2 := @parameter1: java.lang.ClassLoader;

     label1:
        $r4 = r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage localSdkStorage>;

        r27 = interfaceinvoke $r4.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkStorage: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles dexFilesFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig)>(r1);

        if r27 != null goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t use BaseDexClassLoader for ");

        $r15 = virtualinvoke r1.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig: java.lang.String getPackageName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - no dexFiles");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FileClassLoaderFactory", $r18);

        return null;

     label2:
        $r5 = new java.io.File;

        $r6 = virtualinvoke r27.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles: java.util.List getFiles()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (java.io.File) $r7;

        $r9 = virtualinvoke $r8.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "DexOpt");

        r3 = $r5;

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

     label3:
        $r10 = new dalvik.system.BaseDexClassLoader;

        $r11 = staticinvoke <androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFilesKt: java.lang.String toClassPathString(androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles)>(r27);

        specialinvoke $r10.<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>($r11, r3, null, r2);

        $r12 = (java.lang.ClassLoader) $r10;

        return $r12;

     label4:
        $r19 := @caughtexception;

        r28 = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to use BaseDexClassLoader for ");

        $r22 = virtualinvoke r1.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig: java.lang.String getPackageName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - exception");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = (java.lang.Throwable) r28;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileClassLoaderFactory", $r25, $r26);

        return null;

        catch java.lang.Exception from label1 to label4 with label4;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion $r0;

        $r0 = new androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion;

        specialinvoke $r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion
    private void <init>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion r0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.FileClassLoaderFactory$Companion: void <init>()>();

        return;
    }

