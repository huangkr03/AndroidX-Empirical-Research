androidx.lifecycle.MethodCallsLogger
<androidx.lifecycle.MethodCallsLogger: java.util.Map calledMethods>
    public void <init>()
    {
        androidx.lifecycle.MethodCallsLogger r0;
        java.util.HashMap $r1;
        java.util.Map $r2;

        r0 := @this: androidx.lifecycle.MethodCallsLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<androidx.lifecycle.MethodCallsLogger: java.util.Map calledMethods> = $r2;

        return;
    }

    public boolean approveCall(java.lang.String, int)
    {
        androidx.lifecycle.MethodCallsLogger r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Integer r2, $r6;
        boolean z0, $z1, $z2;
        java.util.Map $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.lifecycle.MethodCallsLogger;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r3 = r0.<androidx.lifecycle.MethodCallsLogger: java.util.Map calledMethods>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i4 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        i1 = $i4;

        $i2 = i1 & i0;

        if $i2 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

        $r5 = r0.<androidx.lifecycle.MethodCallsLogger: java.util.Map calledMethods>;

        $i3 = i1 | i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        if z0 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

