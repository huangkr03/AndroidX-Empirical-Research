androidx.media3.session.ConnectedControllersManager
<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>
<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerInfoMap>
<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>
<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl>
    public void <init>(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.collection.ArrayMap $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerInfoMap> = $r2;

        $r3 = new androidx.collection.ArrayMap;

        specialinvoke $r3.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock> = $r4;

        r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl> = r1;

        return;
    }

    public void addController(java.lang.Object, androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        java.lang.Object r1, r5, $r9, $r11, $r13;
        androidx.media3.session.MediaSession$ControllerInfo r2, r6;
        androidx.media3.session.SessionCommands r3;
        androidx.media3.common.Player$Commands r4;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r7, $r12, $r16;
        java.lang.Throwable r8, $r20;
        androidx.collection.ArrayMap $r10, $r14, $r18;
        androidx.media3.session.SequencedFutureManager $r17;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter2: androidx.media3.session.SessionCommands;

        r4 := @parameter3: androidx.media3.common.Player$Commands;

        $r9 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r5 = $r9;

        entermonitor $r9;

     label1:
        r6 = virtualinvoke r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>(r1);

        if r6 != null goto label2;

        $r14 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerInfoMap>;

        virtualinvoke $r14.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r18 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r16 = new androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord;

        $r17 = new androidx.media3.session.SequencedFutureManager;

        specialinvoke $r17.<androidx.media3.session.SequencedFutureManager: void <init>()>();

        specialinvoke $r16.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: void <init>(java.lang.Object,androidx.media3.session.SequencedFutureManager,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r1, $r17, r3, r4);

        virtualinvoke $r18.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r16);

        goto label3;

     label2:
        $r10 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r11 = virtualinvoke $r10.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        $r12 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r11;

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r12);

        r7 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r13;

        r7.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SessionCommands sessionCommands> = r3;

        r7.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.common.Player$Commands playerCommands> = r4;

     label3:
        exitmonitor r5;

     label4:
        goto label7;

     label5:
        $r20 := @caughtexception;

        r8 = $r20;

        exitmonitor r5;

     label6:
        throw r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void updateCommandsFromSession(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommands r2;
        androidx.media3.common.Player$Commands r3;
        java.lang.Object r4, $r7, $r9;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r5;
        java.lang.Throwable r6, $r10;
        androidx.collection.ArrayMap $r8;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommands;

        r3 := @parameter2: androidx.media3.common.Player$Commands;

        $r7 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r9 = virtualinvoke $r8.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r9;

        if r5 == null goto label2;

        r5.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SessionCommands sessionCommands> = r2;

        r5.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.common.Player$Commands playerCommands> = r3;

     label2:
        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r6 = $r10;

        exitmonitor r4;

     label5:
        throw r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public androidx.media3.common.Player$Commands getAvailablePlayerCommands(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.Object r2, $r5, $r7;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r3;
        java.lang.Throwable r4, $r9;
        androidx.collection.ArrayMap $r6;
        androidx.media3.common.Player$Commands $r8;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r7 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r7;

        if r3 == null goto label3;

        $r8 = r3.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.common.Player$Commands playerCommands>;

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void removeController(java.lang.Object)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        java.lang.Object r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>(r1);

        if r2 == null goto label1;

        virtualinvoke r0.<androidx.media3.session.ConnectedControllersManager: void removeController(androidx.media3.session.MediaSession$ControllerInfo)>(r2);

     label1:
        return;
    }

    public void removeController(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r2;
        java.lang.Object r3, $r5, $r7, $r8;
        java.lang.Throwable r4, $r15;
        androidx.collection.ArrayMap $r6, $r9;
        androidx.media3.session.SequencedFutureManager $r11;
        androidx.media3.session.MediaSessionImpl $r12;
        android.os.Handler $r13;
        java.lang.Runnable $r14;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r7 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r7;

        if r2 != null goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        $r9 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerInfoMap>;

        $r8 = r2.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.lang.Object controllerKey>;

        virtualinvoke $r9.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>($r8);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        $r11 = r2.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        virtualinvoke $r11.<androidx.media3.session.SequencedFutureManager: void release()>();

        $r12 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r13 = virtualinvoke $r12.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r14 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.ConnectedControllersManager,androidx.media3.session.MediaSession$ControllerInfo)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.ConnectedControllersManager: void lambda$removeController$0(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r13, $r14);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public com.google.common.collect.ImmutableList getConnectedControllers()
    {
        androidx.media3.session.ConnectedControllersManager r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.collection.ArrayMap $r4;
        java.util.Collection $r5;
        com.google.common.collect.ImmutableList $r6;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        $r3 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerInfoMap>;

        $r5 = virtualinvoke $r4.<androidx.collection.ArrayMap: java.util.Collection values()>();

        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r5);

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.Object r2, $r4, $r6;
        java.lang.Throwable r3, $r7;
        androidx.collection.ArrayMap $r5;
        boolean $z0;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r4 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r6 = virtualinvoke $r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r6 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r2;

     label4:
        return $z0;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.media3.session.SequencedFutureManager getSequencedFutureManager(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r2;
        java.lang.Object r3, $r5, $r7;
        java.lang.Throwable r4, $r8;
        androidx.collection.ArrayMap $r6;
        androidx.media3.session.SequencedFutureManager $r9;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r7 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r7;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        $r9 = r2.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        goto label7;

     label6:
        $r9 = null;

     label7:
        return $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.media3.session.SequencedFutureManager getSequencedFutureManager(java.lang.Object)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        java.lang.Object r1, r3, $r6, $r8;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r2, $r10;
        androidx.media3.session.MediaSession$ControllerInfo r4;
        java.lang.Throwable r5, $r9;
        androidx.collection.ArrayMap $r7;
        androidx.media3.session.SequencedFutureManager $r11;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        r4 = virtualinvoke r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>(r1);

        if r4 == null goto label2;

        $r7 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r8 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        $r10 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r8;

        goto label3;

     label2:
        $r10 = null;

     label3:
        r2 = $r10;

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r3;

     label6:
        throw r5;

     label7:
        if r2 == null goto label8;

        $r11 = r2.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        goto label9;

     label8:
        $r11 = null;

     label9:
        return $r11;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSessionCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommand)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommand r2;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r3;
        java.lang.Object r4, $r6, $r8;
        java.lang.Throwable r5, $r10;
        androidx.collection.ArrayMap $r7;
        androidx.media3.session.SessionCommands $r9;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommand;

        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r8 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r8;

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        if r3 == null goto label6;

        $r9 = r3.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SessionCommands sessionCommands>;

        $z0 = virtualinvoke $r9.<androidx.media3.session.SessionCommands: boolean contains(androidx.media3.session.SessionCommand)>(r2);

        if $z0 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSessionCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        int i0;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r2;
        java.lang.Object r3, $r5, $r7;
        java.lang.Throwable r4, $r9;
        androidx.collection.ArrayMap $r6;
        androidx.media3.session.SessionCommands $r8;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r7 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r7;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        $r8 = r2.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SessionCommands sessionCommands>;

        $z0 = virtualinvoke $r8.<androidx.media3.session.SessionCommands: boolean contains(int)>(i0);

        if $z0 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        int i0;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r2;
        java.lang.Object r3, $r5, $r7;
        java.lang.Throwable r4, $r12;
        androidx.collection.ArrayMap $r6;
        androidx.media3.common.Player$Commands $r8, $r11;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaSessionImpl $r9;
        androidx.media3.session.PlayerWrapper $r10;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r7 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r7;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        $r8 = r2.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.common.Player$Commands playerCommands>;

        $z0 = virtualinvoke $r8.<androidx.media3.common.Player$Commands: boolean contains(int)>(i0);

        if $z0 == 0 goto label6;

        $r9 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r10 = virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r11 = virtualinvoke $r10.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$Commands getAvailableCommands()>();

        $z1 = virtualinvoke $r11.<androidx.media3.common.Player$Commands: boolean contains(int)>(i0);

        if $z1 == 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        java.lang.Object r1, r2, $r4, $r6;
        java.lang.Throwable r3, $r8;
        androidx.collection.ArrayMap $r5;
        androidx.media3.session.MediaSession$ControllerInfo $r7;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerInfoMap>;

        $r6 = virtualinvoke $r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (androidx.media3.session.MediaSession$ControllerInfo) $r6;

        exitmonitor r2;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addToCommandQueue(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.ConnectedControllersManager$AsyncCommand)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.ConnectedControllersManager$AsyncCommand r2;
        java.lang.Object r3, $r6, $r8;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r4;
        java.lang.Throwable r5, $r10;
        androidx.collection.ArrayMap $r7;
        java.util.Deque $r9;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.ConnectedControllersManager$AsyncCommand;

        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r8 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r8;

        if r4 == null goto label2;

        $r9 = r4.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.util.Deque commandQueue>;

        interfaceinvoke $r9.<java.util.Deque: boolean add(java.lang.Object)>(r2);

     label2:
        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void flushCommandQueue(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.Object r2, $r5, $r7;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r3;
        java.lang.Throwable r4, $r9;
        androidx.collection.ArrayMap $r6;
        boolean $z0, $z1;
        java.util.Deque $r8;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r5 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.collection.ArrayMap controllerRecords>;

        $r7 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord) $r7;

        if r3 == null goto label2;

        $z0 = r3.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: boolean commandQueueIsFlushing>;

        if $z0 != 0 goto label2;

        $r8 = r3.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.util.Deque commandQueue>;

        $z1 = interfaceinvoke $r8.<java.util.Deque: boolean isEmpty()>();

        if $z1 == 0 goto label4;

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        r3.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: boolean commandQueueIsFlushing> = 1;

        specialinvoke r0.<androidx.media3.session.ConnectedControllersManager: void flushCommandQueue(androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord)>(r3);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void flushCommandQueue(androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r1;
        java.util.concurrent.atomic.AtomicBoolean r2, r4, $r5, $r8;
        androidx.media3.session.ConnectedControllersManager$AsyncCommand r3;
        boolean $z0;
        java.util.Deque $r6;
        java.lang.Object $r7;
        androidx.media3.session.MediaSessionImpl $r9;
        android.os.Handler $r10;
        java.lang.Runnable $r11;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r2 = $r5;

     label1:
        $z0 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label3;

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r6 = r1.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.util.Deque commandQueue>;

        $r7 = interfaceinvoke $r6.<java.util.Deque: java.lang.Object poll()>();

        r3 = (androidx.media3.session.ConnectedControllersManager$AsyncCommand) $r7;

        if r3 != null goto label2;

        r1.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: boolean commandQueueIsFlushing> = 0;

        return;

     label2:
        $r8 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r4 = $r8;

        $r9 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r10 = virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r11 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.ConnectedControllersManager,androidx.media3.session.ConnectedControllersManager$AsyncCommand,java.util.concurrent.atomic.AtomicBoolean,androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord,java.util.concurrent.atomic.AtomicBoolean)>(r0, r3, r4, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.ConnectedControllersManager: void lambda$flushCommandQueue$2(androidx.media3.session.ConnectedControllersManager$AsyncCommand,java.util.concurrent.atomic.AtomicBoolean,androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord,java.util.concurrent.atomic.AtomicBoolean)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r10, $r11);

        virtualinvoke r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        goto label1;

     label3:
        return;
    }

    private void lambda$flushCommandQueue$2(androidx.media3.session.ConnectedControllersManager$AsyncCommand, java.util.concurrent.atomic.AtomicBoolean, androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord, java.util.concurrent.atomic.AtomicBoolean)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.ConnectedControllersManager$AsyncCommand r1;
        java.util.concurrent.atomic.AtomicBoolean r2, r4;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r3;
        com.google.common.util.concurrent.ListenableFuture $r5;
        java.lang.Runnable $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.ConnectedControllersManager$AsyncCommand;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;

        r3 := @parameter2: androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicBoolean;

        $r5 = interfaceinvoke r1.<androidx.media3.session.ConnectedControllersManager$AsyncCommand: com.google.common.util.concurrent.ListenableFuture run()>();

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.ConnectedControllersManager,java.util.concurrent.atomic.AtomicBoolean,androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord,java.util.concurrent.atomic.AtomicBoolean)>(r0, r2, r3, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.ConnectedControllersManager: void lambda$flushCommandQueue$1(java.util.concurrent.atomic.AtomicBoolean,androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord,java.util.concurrent.atomic.AtomicBoolean)>, methodtype: void __METHODTYPE__());

        $r7 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke $r5.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r6, $r7);

        return;
    }

    private void lambda$flushCommandQueue$1(java.util.concurrent.atomic.AtomicBoolean, androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord, java.util.concurrent.atomic.AtomicBoolean)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        java.util.concurrent.atomic.AtomicBoolean r1, r3;
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r2;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r7;
        boolean $z0;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicBoolean;

        r2 := @parameter1: androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicBoolean;

        $r6 = r0.<androidx.media3.session.ConnectedControllersManager: java.lang.Object lock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<androidx.media3.session.ConnectedControllersManager: void flushCommandQueue(androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord)>(r2);

        goto label3;

     label2:
        virtualinvoke r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r5 = $r7;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void lambda$removeController$0(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.ConnectedControllersManager r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.ConnectedControllersManager;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $z0 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSessionImpl sessionImpl>;

        virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: void onDisconnectedOnHandler(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        return;
    }

androidx.media3.session.ConnectedControllersManager$AsyncCommand
<androidx.media3.session.ConnectedControllersManager$AsyncCommand: com.google.common.util.concurrent.ListenableFuture run()>
androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord
<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.lang.Object controllerKey>
<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SequencedFutureManager sequencedFutureManager>
<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.util.Deque commandQueue>
<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SessionCommands sessionCommands>
<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.common.Player$Commands playerCommands>
<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: boolean commandQueueIsFlushing>
    public void <init>(java.lang.Object, androidx.media3.session.SequencedFutureManager, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord r0;
        java.lang.Object r1;
        androidx.media3.session.SequencedFutureManager r2;
        androidx.media3.session.SessionCommands r3;
        androidx.media3.common.Player$Commands r4;
        java.util.ArrayDeque $r5;

        r0 := @this: androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.session.SequencedFutureManager;

        r3 := @parameter2: androidx.media3.session.SessionCommands;

        r4 := @parameter3: androidx.media3.common.Player$Commands;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.lang.Object controllerKey> = r1;

        r0.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SequencedFutureManager sequencedFutureManager> = r2;

        r0.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.session.SessionCommands sessionCommands> = r3;

        r0.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: androidx.media3.common.Player$Commands playerCommands> = r4;

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.media3.session.ConnectedControllersManager$ConnectedControllerRecord: java.util.Deque commandQueue> = $r5;

        return;
    }

