androidx.mediarouter.media.MediaSessionStatus
<androidx.mediarouter.media.MediaSessionStatus: java.lang.String KEY_TIMESTAMP>
<androidx.mediarouter.media.MediaSessionStatus: java.lang.String KEY_SESSION_STATE>
<androidx.mediarouter.media.MediaSessionStatus: java.lang.String KEY_QUEUE_PAUSED>
<androidx.mediarouter.media.MediaSessionStatus: java.lang.String KEY_EXTRAS>
<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>
<androidx.mediarouter.media.MediaSessionStatus: int SESSION_STATE_ACTIVE>
<androidx.mediarouter.media.MediaSessionStatus: int SESSION_STATE_ENDED>
<androidx.mediarouter.media.MediaSessionStatus: int SESSION_STATE_INVALIDATED>
    void <init>(android.os.Bundle)
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        android.os.Bundle r1;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle> = r1;

        return;
    }

    public long getTimestamp()
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        android.os.Bundle $r1;
        long $l0;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("timestamp");

        return $l0;
    }

    public int getSessionState()
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("sessionState", 2);

        return $i0;
    }

    public boolean isQueuePaused()
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("queuePaused");

        return $z0;
    }

    public android.os.Bundle getExtras()
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        java.lang.StringBuilder r1, $r2, $r6, $r9, $r11;
        long $l0, $l1, $l2;
        int $i3;
        java.lang.String $r7, $r15;
        boolean $z0;
        android.os.Bundle $r12;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaSessionStatus{ ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timestamp=");

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = virtualinvoke r0.<androidx.mediarouter.media.MediaSessionStatus: long getTimestamp()>();

        $l2 = $l0 - $l1;

        staticinvoke <androidx.core.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l2, r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms ago");

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sessionState=");

        $i3 = virtualinvoke r0.<androidx.mediarouter.media.MediaSessionStatus: int getSessionState()>();

        $r7 = staticinvoke <androidx.mediarouter.media.MediaSessionStatus: java.lang.String sessionStateToString(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", queuePaused=");

        $z0 = virtualinvoke r0.<androidx.mediarouter.media.MediaSessionStatus: boolean isQueuePaused()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", extras=");

        $r12 = virtualinvoke r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle getExtras()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private static java.lang.String sessionStateToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "active";

     label2:
        return "ended";

     label3:
        return "invalidated";

     label4:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public android.os.Bundle asBundle()
    {
        androidx.mediarouter.media.MediaSessionStatus r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>;

        return $r1;
    }

    public static androidx.mediarouter.media.MediaSessionStatus fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.mediarouter.media.MediaSessionStatus $r1;

        r0 := @parameter0: android.os.Bundle;

        if r0 == null goto label1;

        $r1 = new androidx.mediarouter.media.MediaSessionStatus;

        specialinvoke $r1.<androidx.mediarouter.media.MediaSessionStatus: void <init>(android.os.Bundle)>(r0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

androidx.mediarouter.media.MediaSessionStatus$Builder
<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>
    public void <init>(int)
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        int i0;
        android.os.Bundle $r1;
        long $l1;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle> = $r1;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: androidx.mediarouter.media.MediaSessionStatus$Builder setTimestamp(long)>($l1);

        virtualinvoke r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: androidx.mediarouter.media.MediaSessionStatus$Builder setSessionState(int)>(i0);

        return;
    }

    public void <init>(androidx.mediarouter.media.MediaSessionStatus)
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        androidx.mediarouter.media.MediaSessionStatus r1;
        android.os.Bundle $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        r1 := @parameter0: androidx.mediarouter.media.MediaSessionStatus;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("status must not be null");

        throw $r4;

     label1:
        $r2 = new android.os.Bundle;

        $r3 = r1.<androidx.mediarouter.media.MediaSessionStatus: android.os.Bundle mBundle>;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>($r3);

        r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle> = $r2;

        return;
    }

    public androidx.mediarouter.media.MediaSessionStatus$Builder setTimestamp(long)
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        long l0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("timestamp", l0);

        return r0;
    }

    public androidx.mediarouter.media.MediaSessionStatus$Builder setSessionState(int)
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("sessionState", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaSessionStatus$Builder setQueuePaused(boolean)
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        boolean z0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("queuePaused", z0);

        return r0;
    }

    public androidx.mediarouter.media.MediaSessionStatus$Builder setExtras(android.os.Bundle)
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        android.os.Bundle r1, $r2, $r3, $r4;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r4.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", null);

        goto label2;

     label1:
        $r3 = r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        virtualinvoke $r3.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r2);

     label2:
        return r0;
    }

    public androidx.mediarouter.media.MediaSessionStatus build()
    {
        androidx.mediarouter.media.MediaSessionStatus$Builder r0;
        androidx.mediarouter.media.MediaSessionStatus $r1;
        android.os.Bundle $r2;

        r0 := @this: androidx.mediarouter.media.MediaSessionStatus$Builder;

        $r1 = new androidx.mediarouter.media.MediaSessionStatus;

        $r2 = r0.<androidx.mediarouter.media.MediaSessionStatus$Builder: android.os.Bundle mBundle>;

        specialinvoke $r1.<androidx.mediarouter.media.MediaSessionStatus: void <init>(android.os.Bundle)>($r2);

        return $r1;
    }

