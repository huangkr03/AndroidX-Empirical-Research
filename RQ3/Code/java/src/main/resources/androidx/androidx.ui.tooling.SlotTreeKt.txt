androidx.ui.tooling.SlotTreeKt
<androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds emptyBox>
<androidx.ui.tooling.SlotTreeKt: kotlin.text.Regex tokenizer>
<androidx.ui.tooling.SlotTreeKt: kotlin.text.Regex parametersInformationTokenizer>
<androidx.ui.tooling.SlotTreeKt: java.lang.String parameterPrefix>
<androidx.ui.tooling.SlotTreeKt: java.lang.String internalFieldPrefix>
<androidx.ui.tooling.SlotTreeKt: java.lang.String defaultFieldName>
<androidx.ui.tooling.SlotTreeKt: java.lang.String changedFieldName>
<androidx.ui.tooling.SlotTreeKt: java.lang.String jacocoDataField>
<androidx.ui.tooling.SlotTreeKt: java.lang.String recomposeScopeNameSuffix>
<androidx.ui.tooling.SlotTreeKt: int BITS_PER_SLOT>
<androidx.ui.tooling.SlotTreeKt: int SLOT_MASK>
<androidx.ui.tooling.SlotTreeKt: int STATIC_BITS>
<androidx.ui.tooling.SlotTreeKt: int STABLE_BITS>
    private static final java.lang.Object convertKey(int)
    {
        int i0;
        java.lang.Integer $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1 = staticinvoke <androidx.compose.runtime.KeySourceInfoKt: java.lang.String keySourceInfoOf(java.lang.Object)>($r0);

        return $r1;
    }

    public static final androidx.compose.ui.unit.IntBounds getEmptyBox()
    {
        androidx.compose.ui.unit.IntBounds $r0;

        $r0 = <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds emptyBox>;

        return $r0;
    }

    private static final boolean isNumber(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final int number(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        java.lang.String r1;
        boolean z0;
        java.util.List $r2;
        java.lang.Object $r3;
        int $i0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r2 = interfaceinvoke $r0.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(1);

        r1 = (java.lang.String) $r3;

        z0 = 0;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i0;
    }

    private static final java.lang.String getText(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private static final boolean isChar(kotlin.text.MatchResult, java.lang.String)
    {
        kotlin.text.MatchResult $r0;
        java.lang.String r1, $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>($r0);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        return $z0;
    }

    private static final boolean isFileName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(4);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final boolean isParameterInformation(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(5);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final boolean isCallWithName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(6);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final java.lang.String callName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(8);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private static final boolean isANumber(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final boolean isClassName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(2);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final java.util.List parseParameters(java.lang.String)
    {
        java.lang.String r0, $r30, r31;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r4;
        java.util.List r2, r3, $r27;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.lang.CharSequence $r5;
        kotlin.text.Regex $r6;
        kotlin.text.MatchResult $r7;
        java.lang.Integer $r8, $r9, $r10, $r11, $r19;
        kotlin.jvm.internal.Ref$IntRef $r12, r29;
        java.util.ArrayList $r13;
        boolean $z1, $z3, $z4, $z5, z9, z10, z11;
        androidx.ui.tooling.Parameter $r14, $r18, $r22;
        java.lang.Object $r15, $r23;
        java.lang.Number $r16, $r24;
        java.lang.Throwable $r26, r32;
        java.lang.Integer[] r28;

        r0 := @parameter0: java.lang.String;

        $r4 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r4.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r4;

        $r6 = <androidx.ui.tooling.SlotTreeKt: kotlin.text.Regex parametersInformationTokenizer>;

        $r5 = (java.lang.CharSequence) r0;

        $r7 = staticinvoke <kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)>($r6, $r5, 0, 2, null);

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        r28 = newarray (java.lang.Integer)[4];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r28[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r28[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r28[2] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r28[3] = $r11;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>(r28);

        $r12 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r12.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r29 = $r12;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        r29.<kotlin.jvm.internal.Ref$IntRef: int element> = $i3;

        z9 = 0;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r13;

     label01:
        staticinvoke <androidx.ui.tooling.SlotTreeKt: void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, "P");

        staticinvoke <androidx.ui.tooling.SlotTreeKt: void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, "(");

     label02:
        $z1 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, ")");

        if $z1 != 0 goto label09;

        $z3 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, "!");

        if $z3 == 0 goto label04;

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        i9 = staticinvoke <androidx.ui.tooling.SlotTreeKt: int parseParameters$expectNumber(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        $i6 = interfaceinvoke r3.<java.util.List: int size()>();

        $i7 = $i6 + i9;

        staticinvoke <androidx.ui.tooling.SlotTreeKt: void parseParameters$ensureIndexes(kotlin.jvm.internal.Ref$IntRef,java.util.List,int)>(r29, r2, $i7);

        z10 = 0;

        z11 = 0;

        i10 = 0;

        i0 = i9;

     label03:
        if i10 >= i0 goto label08;

        i1 = i10;

        $r22 = new androidx.ui.tooling.Parameter;

        $r23 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $r24 = (java.lang.Number) $r23;

        $i8 = virtualinvoke $r24.<java.lang.Number: int intValue()>();

        specialinvoke $r22.<androidx.ui.tooling.Parameter: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i8, null, 2, null);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r22);

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        i10 = i10 + 1;

        goto label03;

     label04:
        $z4 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, ",");

        if $z4 == 0 goto label05;

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        goto label08;

     label05:
        i11 = staticinvoke <androidx.ui.tooling.SlotTreeKt: int parseParameters$expectNumber(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        $z5 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean parseParameters$isClassName(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        if $z5 == 0 goto label06;

        $r30 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String parseParameters$expectClassName(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        goto label07;

     label06:
        $r30 = (java.lang.String) null;

     label07:
        r31 = $r30;

        $r18 = new androidx.ui.tooling.Parameter;

        specialinvoke $r18.<androidx.ui.tooling.Parameter: void <init>(int,java.lang.String)>(i11, r31);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18);

        staticinvoke <androidx.ui.tooling.SlotTreeKt: void parseParameters$ensureIndexes(kotlin.jvm.internal.Ref$IntRef,java.util.List,int)>(r29, r2, i11);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>($r19);

     label08:
        goto label02;

     label09:
        staticinvoke <androidx.ui.tooling.SlotTreeKt: void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, ")");

     label10:
        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i4 <= 0 goto label11;

        $r14 = new androidx.ui.tooling.Parameter;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $r16 = (java.lang.Number) $r15;

        $i5 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        specialinvoke $r14.<androidx.ui.tooling.Parameter: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i5, null, 2, null);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14);

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        goto label10;

     label11:
        return r3;

     label12:
        $r26 := @caughtexception;

        r32 = $r26;

        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r27;

        catch java.lang.NumberFormatException from label01 to label12 with label12;
    }

    private static final androidx.ui.tooling.SourceInformationContext sourceInformationContextOf(java.lang.String, androidx.ui.tooling.SourceInformationContext)
    {
        java.lang.String r0, $r14, $r18, $r23, r28, r30, r34, r35, r37, r40, $r42, r43, $r45;
        androidx.ui.tooling.SourceInformationContext r1, $r41, r44;
        kotlin.jvm.internal.Ref$ObjectRef r2, $r5;
        java.util.List r3, r29;
        androidx.ui.tooling.SourceLocationInfo r4, r32, r33;
        java.lang.CharSequence $r6, r36;
        kotlin.text.Regex $r7;
        kotlin.text.MatchResult $r8, r31;
        java.util.ArrayList $r9;
        java.lang.Object $r10, $r11, $r12, $r39;
        boolean $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z14, z15, $z16, $z18, $z19, z20, z21, z22;
        java.lang.IllegalArgumentException $r13;
        java.lang.Throwable $r15, $r27, r38;
        kotlin.ranges.IntRange $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i11;
        java.lang.NullPointerException $r20;
        byte b10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.ui.tooling.SourceInformationContext;

        $r5 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r5.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r2 = $r5;

        $r7 = <androidx.ui.tooling.SlotTreeKt: kotlin.text.Regex tokenizer>;

        $r6 = (java.lang.CharSequence) r0;

        $r8 = staticinvoke <kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)>($r7, $r6, 0, 2, null);

        r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r8;

        z10 = 0;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        i7 = -1;

        z11 = 0;

        r28 = (java.lang.String) null;

        r29 = (java.util.List) null;

        r30 = (java.lang.String) null;

        i8 = -1;

     label01:
        $r10 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r10 == null goto label23;

        $r11 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r11);

        $r12 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r31 = (kotlin.text.MatchResult) $r12;

        $z1 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r31);

        if $z1 != 0 goto label02;

        $z3 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r31, "@");

        if $z3 == 0 goto label05;

     label02:
        r32 = staticinvoke <androidx.ui.tooling.SlotTreeKt: androidx.ui.tooling.SourceLocationInfo sourceInformationContextOf$parseLocation(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        if r32 != null goto label03;

        goto label04;

     label03:
        r33 = r32;

        z12 = 0;

        r4 = r33;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

     label04:
        goto label20;

     label05:
        $z4 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r31, "C");

        if $z4 == 0 goto label06;

        z11 = 1;

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label20;

     label06:
        $z5 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isCallWithName(kotlin.text.MatchResult)>(r31);

        if $z5 == 0 goto label07;

        z11 = 1;

        r28 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String callName(kotlin.text.MatchResult)>(r31);

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label20;

     label07:
        $z6 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isParameterInformation(kotlin.text.MatchResult)>(r31);

        if $z6 == 0 goto label08;

        $r23 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r31);

        r29 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.util.List parseParameters(java.lang.String)>($r23);

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label20;

     label08:
        $z7 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r31, "*");

        if $z7 == 0 goto label09;

        i7 = interfaceinvoke r3.<java.util.List: int size()>();

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label20;

     label09:
        $z8 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r31, ",");

        if $z8 == 0 goto label10;

        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label20;

     label10:
        $z9 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isFileName(kotlin.text.MatchResult)>(r31);

        if $z9 == 0 goto label19;

        r34 = r0;

        $r17 = interfaceinvoke r31.<kotlin.text.MatchResult: kotlin.ranges.IntRange getRange()>();

        $i0 = virtualinvoke $r17.<kotlin.ranges.IntRange: int getLast()>();

        i9 = $i0 + 1;

        z14 = 0;

        if r34 != null goto label11;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r20;

     label11:
        $r18 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(i9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "(this as java.lang.String).substring(startIndex)");

        r30 = $r18;

        r35 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String)>(r30, "#", "");

        r36 = (java.lang.CharSequence) r35;

        z15 = 0;

        $i1 = interfaceinvoke r36.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label12;

        $z16 = 1;

        goto label13;

     label12:
        $z16 = 0;

     label13:
        if $z16 == 0 goto label18;

        $i2 = virtualinvoke r30.<java.lang.String: int length()>();

        $i3 = virtualinvoke r35.<java.lang.String: int length()>();

        $i4 = $i2 - $i3;

        $i5 = $i4 - 1;

        $r19 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i5);

        r30 = staticinvoke <kotlin.text.StringsKt: java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)>(r30, $r19);

     label14:
        r37 = r35;

        b10 = 36;

        $i6 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>(b10);

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r37, $i6);

     label15:
        goto label17;

     label16:
        $r27 := @caughtexception;

        r38 = $r27;

        i11 = -1;

     label17:
        i8 = i11;

     label18:
        goto label23;

     label19:
        goto label23;

     label20:
        $r39 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $z18 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r31, $r39);

        if $z18 != 0 goto label21;

        $z19 = 1;

        goto label22;

     label21:
        $z19 = 0;

     label22:
        z20 = $z19;

        z21 = 0;

        z22 = 0;

        if z20 != 0 goto label01;

        r40 = "regex didn\'t advance";

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label23:
        $r41 = new androidx.ui.tooling.SourceInformationContext;

        $r42 = r28;

        r43 = r30;

        if r43 != null goto label25;

        r44 = r1;

        if r44 != null goto label24;

        $r45 = (java.lang.String) null;

        goto label26;

     label24:
        $r45 = virtualinvoke r44.<androidx.ui.tooling.SourceInformationContext: java.lang.String getSourceFile()>();

        goto label26;

     label25:
        $r45 = r43;

     label26:
        specialinvoke $r41.<androidx.ui.tooling.SourceInformationContext: void <init>(java.lang.String,java.lang.String,int,java.util.List,int,java.util.List,boolean)>($r42, $r45, i8, r3, i7, r29, z11);

        return $r41;

        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }

    private static final androidx.ui.tooling.Group getGroup(androidx.compose.runtime.SlotReader, androidx.ui.tooling.SourceInformationContext)
    {
        androidx.compose.runtime.SlotReader $r0;
        androidx.ui.tooling.SourceInformationContext r1, r4, $r29, r50, r56;
        java.lang.Object r2, r3, r5, $r21, $r27, $r30, r34, r39, r42, r46;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z12, z13, z14, z18;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i9, $i10, $i11;
        java.util.List r6, $r13, r31, $r32, r33, $r60;
        androidx.ui.tooling.Group r7, $r26, $r47;
        java.util.Collection r8, $r18, $r19, r37, $r61, $r62;
        androidx.compose.ui.unit.IntBounds r9, $r35, $r43, r44, r45;
        java.util.ArrayList $r10, $r11, $r12;
        androidx.ui.tooling.SourceLocation $r14, $r15, $r58;
        java.lang.String $r16, $r28, $r54;
        androidx.ui.tooling.NodeGroup $r17;
        java.lang.NullPointerException $r20;
        java.lang.UnsupportedOperationException $r22;
        java.lang.Throwable $r23;
        androidx.compose.ui.node.LayoutNode $r24, $r25;
        java.lang.Iterable r36, r40;
        java.util.Iterator r38, $r41;
        androidx.ui.tooling.CallGroup $r48;

        $r0 := @parameter0: androidx.compose.runtime.SlotReader;

        r1 := @parameter1: androidx.ui.tooling.SourceInformationContext;

        $i1 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int getGroupKey()>();

        r2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.Object convertKey(int)>($i1);

        r3 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: java.lang.Object getGroupAux()>();

        if r3 == null goto label01;

        $z12 = r3 instanceof java.lang.String;

        if $z12 == 0 goto label01;

        $r28 = (java.lang.String) r3;

        $r29 = staticinvoke <androidx.ui.tooling.SlotTreeKt: androidx.ui.tooling.SourceInformationContext sourceInformationContextOf(java.lang.String,androidx.ui.tooling.SourceInformationContext)>($r28, r1);

        goto label02;

     label01:
        $r29 = (androidx.ui.tooling.SourceInformationContext) null;

     label02:
        r4 = $r29;

        z0 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: boolean isNode()>();

        $i3 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int getCurrentGroup()>();

        $i4 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int getGroupSize()>();

        i0 = $i3 + $i4;

        if z0 == 0 goto label03;

        $r30 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: java.lang.Object getGroupNode()>();

        goto label04;

     label03:
        $r30 = null;

     label04:
        r5 = $r30;

        z13 = 0;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.List) $r10;

        z14 = 0;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r31 = (java.util.List) $r11;

        i5 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int getGroupSlotCount()>();

        i6 = 0;

        i7 = i5 + -1;

        if i5 == -2147483648 goto label06;

        if i6 > i7 goto label06;

     label05:
        i8 = i6;

        i6 = i6 + 1;

        $r27 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: java.lang.Object groupGet(int)>(i8);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r27);

        if i6 <= i7 goto label05;

     label06:
        $i9 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int getCurrentGroup()>();

        $i10 = $i9 + 1;

        virtualinvoke $r0.<androidx.compose.runtime.SlotReader: void reposition(int)>($i10);

     label07:
        $i11 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int getCurrentGroup()>();

        if $i11 >= i0 goto label08;

        $r26 = staticinvoke <androidx.ui.tooling.SlotTreeKt: androidx.ui.tooling.Group getGroup(androidx.compose.runtime.SlotReader,androidx.ui.tooling.SourceInformationContext)>($r0, r4);

        interfaceinvoke r31.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label07;

     label08:
        $z2 = r5 instanceof androidx.compose.ui.node.LayoutNode;

        if $z2 == 0 goto label09;

        $r25 = (androidx.compose.ui.node.LayoutNode) r5;

        $r32 = virtualinvoke $r25.<androidx.compose.ui.node.LayoutNode: java.util.List getModifierInfo()>();

        goto label10;

     label09:
        $r32 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label10:
        r33 = $r32;

        r34 = r5;

        $z3 = r34 instanceof androidx.compose.ui.node.LayoutNode;

        if $z3 == 0 goto label11;

        $r24 = (androidx.compose.ui.node.LayoutNode) r5;

        $r35 = staticinvoke <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds boundsOfLayoutNode(androidx.compose.ui.node.LayoutNode)>($r24);

        goto label18;

     label11:
        $z4 = interfaceinvoke r31.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label12;

        $r35 = <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds emptyBox>;

        goto label18;

     label12:
        r36 = (java.lang.Iterable) r31;

        $r12 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r36, 10);

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i2);

        r37 = (java.util.Collection) $r12;

        r38 = interfaceinvoke r36.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label14;

        r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.ui.tooling.Group) r39;

        r8 = r37;

        r9 = virtualinvoke r7.<androidx.ui.tooling.Group: androidx.compose.ui.unit.IntBounds getBox()>();

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label13;

     label14:
        $r13 = (java.util.List) r37;

        r40 = (java.lang.Iterable) $r13;

        $r41 = interfaceinvoke r40.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z6 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label15;

        $r22 = new java.lang.UnsupportedOperationException;

        specialinvoke $r22.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty collection can\'t be reduced.");

        $r23 = (java.lang.Throwable) $r22;

        throw $r23;

     label15:
        r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

     label16:
        $z7 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label17;

        $r21 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (androidx.compose.ui.unit.IntBounds) $r21;

        r44 = (androidx.compose.ui.unit.IntBounds) r42;

        z18 = 0;

        r42 = staticinvoke <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds union(androidx.compose.ui.unit.IntBounds,androidx.compose.ui.unit.IntBounds)>($r43, r44);

        goto label16;

     label17:
        $r35 = (androidx.compose.ui.unit.IntBounds) r42;

     label18:
        r45 = $r35;

        if z0 == 0 goto label20;

        $r17 = new androidx.ui.tooling.NodeGroup;

        r46 = r5;

        if r46 != null goto label19;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Any");

        throw $r20;

     label19:
        $r19 = (java.util.Collection) r6;

        $r18 = (java.util.Collection) r31;

        specialinvoke $r17.<androidx.ui.tooling.NodeGroup: void <init>(java.lang.Object,java.lang.Object,androidx.compose.ui.unit.IntBounds,java.util.Collection,java.util.List,java.util.Collection)>(r2, r46, r45, $r19, r33, $r18);

        $r47 = (androidx.ui.tooling.Group) $r17;

        goto label26;

     label20:
        $r48 = new androidx.ui.tooling.CallGroup;

        r50 = r4;

        if r50 != null goto label21;

        $r16 = (java.lang.String) null;

        $r54 = $r16;

        goto label22;

     label21:
        $r54 = virtualinvoke r50.<androidx.ui.tooling.SourceInformationContext: java.lang.String getName()>();

     label22:
        if r4 == null goto label24;

        $z8 = virtualinvoke r4.<androidx.ui.tooling.SourceInformationContext: boolean isCall()>();

        if $z8 == 0 goto label24;

        r56 = r1;

        if r56 != null goto label23;

        $r15 = (androidx.ui.tooling.SourceLocation) null;

        $r58 = $r15;

        goto label25;

     label23:
        $r14 = virtualinvoke r56.<androidx.ui.tooling.SourceInformationContext: androidx.ui.tooling.SourceLocation nextSourceLocation()>();

        $r58 = $r14;

        goto label25;

     label24:
        $r58 = (androidx.ui.tooling.SourceLocation) null;

     label25:
        $r60 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.util.List extractParameterInfo(java.util.List,androidx.ui.tooling.SourceInformationContext)>(r6, r4);

        $r61 = (java.util.Collection) r6;

        $r62 = (java.util.Collection) r31;

        specialinvoke $r48.<androidx.ui.tooling.CallGroup: void <init>(java.lang.Object,java.lang.String,androidx.compose.ui.unit.IntBounds,androidx.ui.tooling.SourceLocation,java.util.List,java.util.Collection,java.util.Collection)>(r2, $r54, r45, $r58, $r60, $r61, $r62);

        $r47 = (androidx.ui.tooling.Group) $r48;

     label26:
        return $r47;
    }

    private static final androidx.compose.ui.unit.IntBounds boundsOfLayoutNode(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode r0;
        long l0, $l5, $l10;
        int i1, i2, i3, i4, $i6, $i7, $i8, $i9;
        androidx.compose.ui.node.Owner $r1;
        androidx.compose.ui.geometry.Offset$Companion $r2;
        androidx.compose.ui.layout.LayoutCoordinates $r3, $r6;
        float $f0, $f1;
        androidx.compose.ui.unit.IntBounds $r4, $r5;

        r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        $r1 = virtualinvoke r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner()>();

        if $r1 != null goto label1;

        $r5 = new androidx.compose.ui.unit.IntBounds;

        $i8 = virtualinvoke r0.<androidx.compose.ui.node.LayoutNode: int getWidth()>();

        $i9 = virtualinvoke r0.<androidx.compose.ui.node.LayoutNode: int getHeight()>();

        specialinvoke $r5.<androidx.compose.ui.unit.IntBounds: void <init>(int,int,int,int)>(0, 0, $i8, $i9);

        return $r5;

     label1:
        $r6 = virtualinvoke r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        $r2 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l5 = virtualinvoke $r2.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        l0 = interfaceinvoke $r6.<androidx.compose.ui.layout.LayoutCoordinates: long localToGlobal-k-4lQ0M(long)>($l5);

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        $l10 = interfaceinvoke $r3.<androidx.compose.ui.layout.LayoutCoordinates: long getSize-YbymL2g()>();

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>($l10);

        i3 = i1 + $i6;

        $i7 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>($l10);

        i4 = i2 + $i7;

        $r4 = new androidx.compose.ui.unit.IntBounds;

        specialinvoke $r4.<androidx.compose.ui.unit.IntBounds: void <init>(int,int,int,int)>(i1, i2, i3, i4);

        return $r4;
    }

    public static final androidx.ui.tooling.Group asTree(androidx.compose.runtime.SlotTable)
    {
        androidx.compose.runtime.SlotTable $r0, r1;
        androidx.compose.runtime.SlotReader r2, r3, r6;
        boolean z1, z2;
        androidx.ui.tooling.SourceInformationContext $r4;
        java.lang.Throwable $r5;
        androidx.ui.tooling.Group r7;

        $r0 := @parameter0: androidx.compose.runtime.SlotTable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        r2 = virtualinvoke r1.<androidx.compose.runtime.SlotTable: androidx.compose.runtime.SlotReader openReader()>();

        z1 = 0;

        z2 = 0;

        r3 = r2;

     label1:
        r6 = r3;

        $r4 = (androidx.ui.tooling.SourceInformationContext) null;

        r7 = staticinvoke <androidx.ui.tooling.SlotTreeKt: androidx.ui.tooling.Group getGroup(androidx.compose.runtime.SlotReader,androidx.ui.tooling.SourceInformationContext)>(r6, $r4);

     label2:
        virtualinvoke r3.<androidx.compose.runtime.SlotReader: void close()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke r3.<androidx.compose.runtime.SlotReader: void close()>();

        throw $r5;

     label5:
        return r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final androidx.compose.ui.unit.IntBounds union(androidx.compose.ui.unit.IntBounds, androidx.compose.ui.unit.IntBounds)
    {
        androidx.compose.ui.unit.IntBounds $r0, r1, $r2, $r3, $r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        boolean z0, $z1, $z2, z3, z4, z5;

        $r0 := @parameter0: androidx.compose.ui.unit.IntBounds;

        r1 := @parameter1: androidx.compose.ui.unit.IntBounds;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds emptyBox>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r2);

        if $z1 == 0 goto label1;

        return r1;

     label1:
        $r3 = <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds emptyBox>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z2 == 0 goto label2;

        return $r0;

     label2:
        i1 = virtualinvoke $r0.<androidx.compose.ui.unit.IntBounds: int getLeft()>();

        i2 = virtualinvoke r1.<androidx.compose.ui.unit.IntBounds: int getLeft()>();

        z3 = 0;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        i3 = virtualinvoke $r0.<androidx.compose.ui.unit.IntBounds: int getTop()>();

        i4 = virtualinvoke r1.<androidx.compose.ui.unit.IntBounds: int getTop()>();

        z4 = 0;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4);

        i6 = virtualinvoke $r0.<androidx.compose.ui.unit.IntBounds: int getBottom()>();

        i7 = virtualinvoke r1.<androidx.compose.ui.unit.IntBounds: int getBottom()>();

        z5 = 0;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i7);

        i9 = virtualinvoke $r0.<androidx.compose.ui.unit.IntBounds: int getRight()>();

        i10 = virtualinvoke r1.<androidx.compose.ui.unit.IntBounds: int getRight()>();

        z0 = 0;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i9, i10);

        $r4 = new androidx.compose.ui.unit.IntBounds;

        specialinvoke $r4.<androidx.compose.ui.unit.IntBounds: void <init>(int,int,int,int)>(i0, i5, i11, i8);

        return $r4;
    }

    private static final java.lang.String keyPosition(java.lang.Object)
    {
        java.lang.Object r0, r1, $r4, $r6;
        java.lang.String r2, $r7;
        boolean $z0, $z1;
        androidx.ui.tooling.JoinedKey $r3, $r5;

        r0 := @parameter0: java.lang.Object;

        r1 = r0;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.String) r0;

        goto label4;

     label1:
        $z1 = r1 instanceof androidx.ui.tooling.JoinedKey;

        if $z1 == 0 goto label3;

        $r3 = (androidx.ui.tooling.JoinedKey) r0;

        $r4 = virtualinvoke $r3.<androidx.ui.tooling.JoinedKey: java.lang.Object getLeft()>();

        r2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String keyPosition(java.lang.Object)>($r4);

        if r2 != null goto label2;

        $r5 = (androidx.ui.tooling.JoinedKey) r0;

        $r6 = virtualinvoke $r5.<androidx.ui.tooling.JoinedKey: java.lang.Object getRight()>();

        $r7 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String keyPosition(java.lang.Object)>($r6);

        goto label4;

     label2:
        $r7 = r2;

        goto label4;

     label3:
        $r7 = (java.lang.String) null;

     label4:
        return $r7;
    }

    private static final java.util.List extractParameterInfo(java.util.List, androidx.ui.tooling.SourceInformationContext)
    {
        java.util.List r0, $r7, r34, $r35, $r37, $r39, $r40, $r53;
        androidx.ui.tooling.SourceInformationContext r1, r36;
        java.lang.Object r2, $r11, $r12, r19, r23, r24, $r44;
        java.lang.Class r3, r20;
        java.lang.reflect.Field r4, r5, r22, r28, r29, r43;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, $i20, $i21, i22, i23;
        boolean z0, z1, z2, z3, $z4, $z5, $z7, $z9, $z10, z11, $z12, $z16, z20, $z23, z24, $z25, $z26, $z27, $z30;
        byte b3;
        java.util.ArrayList $r6, $r10;
        androidx.ui.tooling.SlotTreeKt$extractParameterInfo$$inlined$sortedBy$1 $r8;
        java.util.Comparator $r9;
        java.lang.Integer $r13, $r15;
        java.lang.NullPointerException $r14, $r16;
        java.lang.Throwable $r17, r52;
        java.util.Collection r18, r26;
        java.lang.String r21, r30, r31, r32, r47, r48, $r49, $r51;
        java.lang.reflect.Field[] $r25, r27;
        java.lang.Iterable $r33;
        androidx.ui.tooling.Parameter $r41, r42;
        androidx.ui.tooling.ParameterInformation $r46;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.ui.tooling.SourceInformationContext;

        r18 = (java.util.Collection) r0;

        z11 = 0;

        $z4 = interfaceinvoke r18.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        if $z12 == 0 goto label36;

        r19 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        if r19 == null goto label36;

        r20 = virtualinvoke r19.<java.lang.Object: java.lang.Class getClass()>();

        r21 = virtualinvoke r20.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r21, "scopeClass.name");

        $z5 = staticinvoke <kotlin.text.StringsKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r21, ".RecomposeScope", 0, 2, null);

        if $z5 == 0 goto label36;

     label03:
        r22 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.reflect.Field accessibleField(java.lang.Class,java.lang.String)>(r20, "block");

        if r22 == null goto label36;

        r2 = virtualinvoke r22.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r19);

        if r2 == null goto label36;

        r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        r4 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.reflect.Field accessibleField(java.lang.Class,java.lang.String)>(r3, "$$default");

        r5 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.reflect.Field accessibleField(java.lang.Class,java.lang.String)>(r3, "$$changed");

        if r4 == null goto label05;

        r23 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if r23 != null goto label04;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Int");

        throw $r16;

     label04:
        $r15 = (java.lang.Integer) r23;

        $i16 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        goto label06;

     label05:
        $i16 = 0;

     label06:
        i0 = $i16;

        if r5 == null goto label08;

        r24 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if r24 != null goto label07;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Int");

        throw $r14;

     label07:
        $r13 = (java.lang.Integer) r24;

        $i17 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        goto label09;

     label08:
        $i17 = 0;

     label09:
        i18 = $i17;

        $r25 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "blockClass.declaredFields");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r26 = (java.util.Collection) $r6;

        r27 = $r25;

        i19 = lengthof r27;

        $i20 = 0;

     label10:
        if $i20 >= i19 goto label14;

        r28 = r27[$i20];

        r29 = r28;

        r30 = virtualinvoke r29.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r30, "it.name");

        $z7 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r30, "$", 0, 2, null);

        if $z7 == 0 goto label11;

        r31 = virtualinvoke r29.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r31, "it.name");

        $z9 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r31, "$$", 0, 2, null);

        if $z9 != 0 goto label11;

        r32 = virtualinvoke r29.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r32, "it.name");

        $z10 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r32, "$jacoco", 0, 2, null);

        if $z10 != 0 goto label11;

        $z16 = 1;

        goto label12;

     label11:
        $z16 = 0;

     label12:
        if $z16 == 0 goto label13;

        interfaceinvoke r26.<java.util.Collection: boolean add(java.lang.Object)>(r28);

     label13:
        $i20 = $i20 + 1;

        goto label10;

     label14:
        $r7 = (java.util.List) r26;

        $r33 = (java.lang.Iterable) $r7;

        $r8 = new androidx.ui.tooling.SlotTreeKt$extractParameterInfo$$inlined$sortedBy$1;

        specialinvoke $r8.<androidx.ui.tooling.SlotTreeKt$extractParameterInfo$$inlined$sortedBy$1: void <init>()>();

        $r9 = (java.util.Comparator) $r8;

        r34 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r33, $r9);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r35 = (java.util.List) $r10;

        r36 = r1;

        if r36 != null goto label15;

        $r37 = (java.util.List) null;

        goto label16;

     label15:
        $r37 = virtualinvoke r36.<androidx.ui.tooling.SourceInformationContext: java.util.List getParameters()>();

     label16:
        if $r37 != null goto label17;

        $r39 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label18;

     label17:
        $r39 = $r37;

     label18:
        $r40 = $r39;

        z20 = 0;

        $i21 = 0;

        i22 = interfaceinvoke r34.<java.util.List: int size()>();

     label19:
        if $i21 >= i22 goto label34;

        i23 = $i21;

        $i4 = interfaceinvoke $r40.<java.util.List: int size()>();

        if i23 >= $i4 goto label20;

        $r12 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>(i23);

        $r41 = (androidx.ui.tooling.Parameter) $r12;

        goto label21;

     label20:
        $r41 = new androidx.ui.tooling.Parameter;

        specialinvoke $r41.<androidx.ui.tooling.Parameter: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i23, null, 2, null);

     label21:
        r42 = $r41;

        $i5 = virtualinvoke r42.<androidx.ui.tooling.Parameter: int getSortedIndex()>();

        $i6 = interfaceinvoke r34.<java.util.List: int size()>();

        if $i5 < $i6 goto label22;

        goto label33;

     label22:
        $i7 = virtualinvoke r42.<androidx.ui.tooling.Parameter: int getSortedIndex()>();

        $r11 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>($i7);

        r43 = (java.lang.reflect.Field) $r11;

        virtualinvoke r43.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r44 = virtualinvoke r43.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        $i8 = 1 << i23;

        $i9 = $i8 & i0;

        if $i9 == 0 goto label23;

        $z23 = 1;

        goto label24;

     label23:
        $z23 = 0;

     label24:
        z24 = $z23;

        $i10 = i23 * 3;

        i1 = $i10 + 1;

        $i11 = 7 << i1;

        $i12 = $i11 & i18;

        i2 = $i12 >> i1;

        $i13 = i2 & 3;

        if $i13 != 3 goto label25;

        $z25 = 1;

        goto label26;

     label25:
        $z25 = 0;

     label26:
        z0 = $z25;

        $i14 = i2 & 3;

        if $i14 != 0 goto label27;

        $z26 = 1;

        goto label28;

     label27:
        $z26 = 0;

     label28:
        z1 = $z26;

        $i15 = i2 & 4;

        if $i15 != 0 goto label29;

        $z27 = 1;

        goto label30;

     label29:
        $z27 = 0;

     label30:
        z2 = $z27;

        $r46 = new androidx.ui.tooling.ParameterInformation;

        r47 = virtualinvoke r43.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r47, "field.name");

        r48 = r47;

        b3 = 1;

        z3 = 0;

        $r49 = virtualinvoke r48.<java.lang.String: java.lang.String substring(int)>(b3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r49, "(this as java.lang.String).substring(startIndex)");

        if z1 == 0 goto label31;

        if z24 != 0 goto label31;

        $z30 = 1;

        goto label32;

     label31:
        $z30 = 0;

     label32:
        $r51 = virtualinvoke r42.<androidx.ui.tooling.Parameter: java.lang.String getInlineClass()>();

        specialinvoke $r46.<androidx.ui.tooling.ParameterInformation: void <init>(java.lang.String,java.lang.Object,boolean,boolean,boolean,java.lang.String,boolean)>($r49, $r44, z24, z0, $z30, $r51, z2);

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r46);

     label33:
        $i21 = $i21 + 1;

        goto label19;

     label34:
        return $r35;

     label35:
        $r17 := @caughtexception;

        r52 = $r17;

     label36:
        $r53 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r53;

        catch java.lang.Throwable from label03 to label35 with label35;
    }

    public static final java.lang.String getPosition(androidx.ui.tooling.Group)
    {
        androidx.ui.tooling.Group $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.ui.tooling.Group;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.ui.tooling.Group: java.lang.Object getKey()>();

        $r2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String keyPosition(java.lang.Object)>($r1);

        return $r2;
    }

    private static final java.lang.reflect.Field accessibleField(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.String r1, $r5;
        java.lang.reflect.Field r2, r3, r4, $r8, $r9;
        boolean $z1, z4;
        java.lang.reflect.Field[] $r6, r7;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $r6 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "declaredFields");

        r7 = $r6;

        $i0 = lengthof r7;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r3 = r7[$i1];

        r4 = r3;

        $r5 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z1 == 0 goto label2;

        $r8 = r3;

        goto label4;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r8 = null;

     label4:
        r2 = $r8;

        if r2 != null goto label5;

        $r9 = (java.lang.reflect.Field) null;

        goto label6;

     label5:
        z4 = 0;

        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r9 = r2;

     label6:
        return $r9;
    }

    private static final java.lang.String replacePrefix(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, r1, r2, r3, $r4, $r6;
        int i0;
        boolean z0, $z1;
        java.lang.NullPointerException $r5;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z1 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r0, r1, 0, 2, null);

        if $z1 == 0 goto label2;

        r3 = $r0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = 0;

        if r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r5;

     label1:
        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "(this as java.lang.String).substring(startIndex)");

        $r6 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r2, $r4);

        goto label3;

     label2:
        $r6 = $r0;

     label3:
        return $r6;
    }

    private static final kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        kotlin.text.MatchResult r1, r2, r3, $r5, $r7;
        boolean z0, z1;
        java.lang.Object $r4, $r6;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r4 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r4;

        if r1 != null goto label1;

        goto label2;

     label1:
        r2 = r1;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        $r5 = interfaceinvoke r3.<kotlin.text.MatchResult: kotlin.text.MatchResult next()>();

        $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r5;

     label2:
        $r6 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = (kotlin.text.MatchResult) $r6;

        return $r7;
    }

    private static final int parseParameters$expectNumber(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        kotlin.text.MatchResult r1;
        java.lang.String r2;
        boolean z0, $z1;
        java.lang.Object $r3;
        int $i0;
        androidx.ui.tooling.ParseError r6;
        java.lang.Throwable r7;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r3 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r3;

        if r1 == null goto label1;

        $z1 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isANumber(kotlin.text.MatchResult)>(r1);

        if $z1 != 0 goto label2;

     label1:
        r6 = new androidx.ui.tooling.ParseError;

        specialinvoke r6.<androidx.ui.tooling.ParseError: void <init>()>();

        r7 = (java.lang.Throwable) r6;

        throw r7;

     label2:
        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

        r2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r1);

        z0 = 0;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        return $i0;
    }

    private static final java.lang.String parseParameters$expectClassName(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        kotlin.text.MatchResult r1;
        java.lang.String r2, $r6, $r7, $r8;
        byte b0;
        boolean z0, $z1;
        java.lang.Object $r3;
        androidx.ui.tooling.ParseError r10;
        java.lang.NullPointerException r11;
        java.lang.Throwable r12;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r3 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r3;

        if r1 == null goto label1;

        $z1 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isClassName(kotlin.text.MatchResult)>(r1);

        if $z1 != 0 goto label2;

     label1:
        r10 = new androidx.ui.tooling.ParseError;

        specialinvoke r10.<androidx.ui.tooling.ParseError: void <init>()>();

        r12 = (java.lang.Throwable) r10;

        throw r12;

     label2:
        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

        r2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r1);

        b0 = 1;

        z0 = 0;

        if r2 != null goto label3;

        r11 = new java.lang.NullPointerException;

        specialinvoke r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw r11;

     label3:
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(b0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "(this as java.lang.String).substring(startIndex)");

        $r7 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String replacePrefix(java.lang.String,java.lang.String,java.lang.String)>($r6, "c#", "androidx.compose.");

        $r8 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String replacePrefix(java.lang.String,java.lang.String,java.lang.String)>($r7, "u#", "androidx.ui.");

        return $r8;
    }

    private static final void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef, java.lang.String)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        java.lang.String r1, $r5;
        kotlin.text.MatchResult r2;
        java.lang.Object $r3;
        boolean $z0;
        androidx.ui.tooling.ParseError r7;
        java.lang.Throwable r8;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r1 := @parameter1: java.lang.String;

        $r3 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r2 = (kotlin.text.MatchResult) $r3;

        if r2 == null goto label1;

        $r5 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r2);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z0 != 0 goto label2;

     label1:
        r7 = new androidx.ui.tooling.ParseError;

        specialinvoke r7.<androidx.ui.tooling.ParseError: void <init>()>();

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label2:
        staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

        return;
    }

    private static final boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef, java.lang.String)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        java.lang.String r1, $r4;
        kotlin.text.MatchResult r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r1 := @parameter1: java.lang.String;

        $r3 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r2 = (kotlin.text.MatchResult) $r3;

        if r2 == null goto label1;

        $r4 = staticinvoke <androidx.ui.tooling.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r2);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static final boolean parseParameters$isClassName(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        kotlin.text.MatchResult r1;
        java.lang.Object $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r2;

        if r1 == null goto label1;

        $z0 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isClassName(kotlin.text.MatchResult)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static final void parseParameters$ensureIndexes(kotlin.jvm.internal.Ref$IntRef, java.util.List, int)
    {
        kotlin.jvm.internal.Ref$IntRef $r0;
        java.util.List $r1;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        byte b2;
        boolean z0, z3;
        java.lang.Integer $r2;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$IntRef;

        $r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $i6 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        i1 = i0 - $i6;

        if i1 <= 0 goto label5;

        b2 = 4;

        if i1 >= b2 goto label1;

        $i12 = b2;

        goto label2;

     label1:
        $i12 = i1;

     label2:
        i3 = $i12;

        z0 = 0;

        z3 = 0;

        i13 = 0;

        i4 = i3;

     label3:
        if i13 >= i4 goto label4;

        i5 = i13;

        $i9 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i10 = i5 + $i9;

        $i11 = $i10 + 1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i13 = i13 + 1;

        goto label3;

     label4:
        $i7 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i8 = $i7 + i3;

        $r0.<kotlin.jvm.internal.Ref$IntRef: int element> = $i8;

     label5:
        return;
    }

    private static final kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        kotlin.text.MatchResult r1, r2, r3, $r5, $r7;
        boolean z0, z1;
        java.lang.Object $r4, $r6;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r4 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r4;

        if r1 != null goto label1;

        goto label2;

     label1:
        r2 = r1;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        $r5 = interfaceinvoke r3.<kotlin.text.MatchResult: kotlin.text.MatchResult next()>();

        $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r5;

     label2:
        $r6 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = (kotlin.text.MatchResult) $r6;

        return $r7;
    }

    private static final androidx.ui.tooling.SourceLocationInfo sourceInformationContextOf$parseLocation(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        java.lang.Object $r1;
        androidx.ui.tooling.SourceLocationInfo $r2, $r3, $r4, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer r5, r6, r7;
        kotlin.text.MatchResult r8, r9, r10, r11;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r5 = (java.lang.Integer) null;

        r6 = (java.lang.Integer) null;

        r7 = (java.lang.Integer) null;

        $r1 = $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r8 = (kotlin.text.MatchResult) $r1;

        if r8 == null goto label1;

        $z4 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r8);

        if $z4 == 0 goto label1;

        $i2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: int number(kotlin.text.MatchResult)>(r8);

        $i3 = $i2 + 1;

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r8 = staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

     label1:
        if r8 == null goto label6;

        $z0 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r8, "@");

        if $z0 == 0 goto label6;

        r9 = staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

        if r9 == null goto label2;

        $z1 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r9);

        if $z1 != 0 goto label3;

     label2:
        $r3 = (androidx.ui.tooling.SourceLocationInfo) null;

        return $r3;

     label3:
        $i0 = staticinvoke <androidx.ui.tooling.SlotTreeKt: int number(kotlin.text.MatchResult)>(r9);

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r10 = staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

        if r10 == null goto label6;

        $z2 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r10, "L");

        if $z2 == 0 goto label6;

        r11 = staticinvoke <androidx.ui.tooling.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>($r0);

        if r11 == null goto label4;

        $z3 = staticinvoke <androidx.ui.tooling.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r11);

        if $z3 != 0 goto label5;

     label4:
        $r4 = (androidx.ui.tooling.SourceLocationInfo) null;

        return $r4;

     label5:
        $i1 = staticinvoke <androidx.ui.tooling.SlotTreeKt: int number(kotlin.text.MatchResult)>(r11);

        r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label6:
        if r5 == null goto label7;

        if r6 == null goto label7;

        if r7 == null goto label7;

        $r2 = new androidx.ui.tooling.SourceLocationInfo;

        specialinvoke $r2.<androidx.ui.tooling.SourceLocationInfo: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer)>(r5, r6, r7);

        return $r2;

     label7:
        $r12 = (androidx.ui.tooling.SourceLocationInfo) null;

        return $r12;
    }

    static void <clinit>()
    {
        androidx.compose.ui.unit.IntBounds $r0;
        kotlin.text.Regex $r1, $r2;

        $r0 = new androidx.compose.ui.unit.IntBounds;

        specialinvoke $r0.<androidx.compose.ui.unit.IntBounds: void <init>(int,int,int,int)>(0, 0, 0, 0);

        <androidx.ui.tooling.SlotTreeKt: androidx.compose.ui.unit.IntBounds emptyBox> = $r0;

        $r1 = new kotlin.text.Regex;

        specialinvoke $r1.<kotlin.text.Regex: void <init>(java.lang.String)>("(\\d+)|([,])|([*])|([:])|L|(P\\([^)]*\\))|(C(\\(([^)]*)\\))?)|@");

        <androidx.ui.tooling.SlotTreeKt: kotlin.text.Regex tokenizer> = $r1;

        $r2 = new kotlin.text.Regex;

        specialinvoke $r2.<kotlin.text.Regex: void <init>(java.lang.String)>("(\\d+)|,|[!P()]|:([^,!)]+)");

        <androidx.ui.tooling.SlotTreeKt: kotlin.text.Regex parametersInformationTokenizer> = $r2;

        return;
    }

