androidx.media3.test.utils.FakeSampleStream
<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>
<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>
<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>
<androidx.media3.test.utils.FakeSampleStream: int sampleStreamItemsWritePosition>
<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished>
<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat>
<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format notifiedDownstreamFormat>
    public void <init>(androidx.media3.exoplayer.upstream.Allocator, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, androidx.media3.common.Format, java.util.List)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        androidx.media3.exoplayer.upstream.Allocator r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r2;
        androidx.media3.exoplayer.drm.DrmSessionManager r3;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r4;
        androidx.media3.common.Format r5;
        java.util.List r6, $r9, $r11;
        androidx.media3.exoplayer.source.SampleQueue $r7;
        java.util.ArrayList $r8;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r10;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Allocator;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        r3 := @parameter2: androidx.media3.exoplayer.drm.DrmSessionManager;

        r4 := @parameter3: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r5 := @parameter4: androidx.media3.common.Format;

        r6 := @parameter5: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = staticinvoke <androidx.media3.exoplayer.source.SampleQueue: androidx.media3.exoplayer.source.SampleQueue createWithDrm(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)>(r1, r3, r4);

        r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue> = $r7;

        r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher> = r2;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems> = $r8;

        $r9 = r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>;

        $r10 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem format(androidx.media3.common.Format)>(r5);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>;

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>(r6);

        return;
    }

    public void append(java.util.List)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        java.util.List r1, $r2;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void writeData(long)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        long l0, $l5, $l11;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem r1;
        androidx.media3.test.utils.FakeSampleStream$SampleInfo r2;
        int $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, i12, $i13;
        java.util.List $r3, $r4, $r23;
        java.lang.Object $r5, $r13, $r16, $r19;
        byte $b6;
        androidx.media3.common.util.ParsableByteArray $r6;
        byte[] $r7, $r9, $r10;
        androidx.media3.exoplayer.source.SampleQueue $r8, $r11, $r12, $r17, $r21;
        androidx.media3.common.Format $r14, $r15, $r18, $r20, r22;
        boolean z0;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        l0 := @parameter0: long;

        $i1 = r0.<androidx.media3.test.utils.FakeSampleStream: int sampleStreamItemsWritePosition>;

        if $i1 != 0 goto label1;

        $r21 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        virtualinvoke $r21.<androidx.media3.exoplayer.source.SampleQueue: void setStartTimeUs(long)>(l0);

     label1:
        z0 = 0;

        r22 = null;

        i12 = 0;

     label2:
        $r23 = r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>;

        $i13 = interfaceinvoke $r23.<java.util.List: int size()>();

        if i12 >= $i13 goto label8;

        $r4 = r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i12);

        r1 = (androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem) $r5;

        r2 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$SampleInfo access$000(androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem)>(r1);

        if r2 != null goto label4;

        if z0 == 0 goto label3;

        $r17 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $r18 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.common.Format access$100(androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem)>(r1);

        $r19 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r18);

        $r20 = (androidx.media3.common.Format) $r19;

        virtualinvoke $r17.<androidx.media3.exoplayer.source.SampleQueue: void format(androidx.media3.common.Format)>($r20);

        goto label7;

     label3:
        $r15 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.common.Format access$100(androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem)>(r1);

        $r16 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r15);

        r22 = (androidx.media3.common.Format) $r16;

        goto label7;

     label4:
        $i3 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: int flags>;

        $i4 = $i3 & 4;

        if $i4 == 0 goto label5;

        r0.<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished> = 1;

        goto label8;

     label5:
        $l5 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: long timeUs>;

        $b6 = $l5 cmp l0;

        if $b6 < 0 goto label7;

        $i7 = r0.<androidx.media3.test.utils.FakeSampleStream: int sampleStreamItemsWritePosition>;

        if i12 < $i7 goto label7;

        if z0 != 0 goto label6;

        $r12 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r22);

        $r14 = (androidx.media3.common.Format) $r13;

        virtualinvoke $r12.<androidx.media3.exoplayer.source.SampleQueue: void format(androidx.media3.common.Format)>($r14);

        z0 = 1;

     label6:
        $r8 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $r6 = new androidx.media3.common.util.ParsableByteArray;

        $r7 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: byte[] data>;

        specialinvoke $r6.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[])>($r7);

        $r9 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: byte[] data>;

        $i8 = lengthof $r9;

        virtualinvoke $r8.<androidx.media3.exoplayer.source.SampleQueue: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>($r6, $i8);

        $r11 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $l11 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: long timeUs>;

        $i10 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: int flags>;

        $r10 = r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: byte[] data>;

        $i9 = lengthof $r10;

        virtualinvoke $r11.<androidx.media3.exoplayer.source.SampleQueue: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l11, $i10, $i9, 0, null);

     label7:
        i12 = i12 + 1;

        goto label2;

     label8:
        $r3 = r0.<androidx.media3.test.utils.FakeSampleStream: java.util.List sampleStreamItems>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        r0.<androidx.media3.test.utils.FakeSampleStream: int sampleStreamItemsWritePosition> = $i2;

        return;
    }

    public boolean seekToUs(long)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        long l0;
        androidx.media3.exoplayer.source.SampleQueue $r1;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $z0 = virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: boolean seekTo(long,boolean)>(l0, 0);

        return $z0;
    }

    public void reset()
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        androidx.media3.exoplayer.source.SampleQueue $r1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: void reset()>();

        r0.<androidx.media3.test.utils.FakeSampleStream: int sampleStreamItemsWritePosition> = 0;

        r0.<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished> = 0;

        return;
    }

    public boolean isLoadingFinished()
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        $z0 = r0.<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished>;

        return $z0;
    }

    public long getLargestQueuedTimestampUs()
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        androidx.media3.exoplayer.source.SampleQueue $r1;
        long $l0;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $l0 = virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: long getLargestQueuedTimestampUs()>();

        return $l0;
    }

    public void discardTo(long, boolean)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        long l0;
        boolean z0;
        androidx.media3.exoplayer.source.SampleQueue $r1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: void discardTo(long,boolean,boolean)>(l0, z0, 1);

        return;
    }

    public void release()
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        androidx.media3.exoplayer.source.SampleQueue $r1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: void release()>();

        return;
    }

    public boolean isReady()
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        boolean $z0, $z1;
        androidx.media3.exoplayer.source.SampleQueue $r1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $z0 = r0.<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished>;

        $z1 = virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: boolean isReady(boolean)>($z0);

        return $z1;
    }

    public void maybeThrowError() throws java.io.IOException
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        androidx.media3.exoplayer.source.SampleQueue $r1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: void maybeThrowError()>();

        return;
    }

    public int readData(androidx.media3.exoplayer.FormatHolder, androidx.media3.decoder.DecoderInputBuffer, int)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.decoder.DecoderInputBuffer r2;
        int i0, i1, $i2;
        boolean $z0;
        androidx.media3.exoplayer.source.SampleQueue $r3;
        long $l3;
        androidx.media3.common.Format $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        r1 := @parameter0: androidx.media3.exoplayer.FormatHolder;

        r2 := @parameter1: androidx.media3.decoder.DecoderInputBuffer;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $z0 = r0.<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished>;

        i1 = virtualinvoke $r3.<androidx.media3.exoplayer.source.SampleQueue: int read(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int,boolean)>(r1, r2, i0, $z0);

        if i1 != -5 goto label1;

        $r4 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.common.Format) $r5;

        r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat> = $r6;

     label1:
        if i1 != -4 goto label2;

        $i2 = i0 & 4;

        if $i2 != 0 goto label2;

        $l3 = r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        specialinvoke r0.<androidx.media3.test.utils.FakeSampleStream: void maybeNotifyDownstreamFormat(long)>($l3);

     label2:
        return i1;
    }

    public int skipData(long)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        long l0;
        int i1;
        boolean $z0;
        androidx.media3.exoplayer.source.SampleQueue $r1, $r2;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        $z0 = r0.<androidx.media3.test.utils.FakeSampleStream: boolean loadingFinished>;

        i1 = virtualinvoke $r1.<androidx.media3.exoplayer.source.SampleQueue: int getSkipCount(long,boolean)>(l0, $z0);

        $r2 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.SampleQueue sampleQueue>;

        virtualinvoke $r2.<androidx.media3.exoplayer.source.SampleQueue: void skip(int)>(i1);

        return i1;
    }

    private void maybeNotifyDownstreamFormat(long)
    {
        androidx.media3.test.utils.FakeSampleStream r0;
        long l0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r1, $r7;
        androidx.media3.common.Format $r2, $r3, $r4, $r5, $r8, $r9;
        boolean $z0;
        java.lang.String $r6;
        int $i1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat>;

        $r3 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format notifiedDownstreamFormat>;

        $z0 = virtualinvoke $r4.<androidx.media3.common.Format: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r5 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat>;

        $r6 = $r5.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $i1 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r6);

        $r8 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat>;

        virtualinvoke $r7.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void downstreamFormatChanged(int,androidx.media3.common.Format,int,java.lang.Object,long)>($i1, $r8, 0, null, l0);

        $r9 = r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format downstreamFormat>;

        r0.<androidx.media3.test.utils.FakeSampleStream: androidx.media3.common.Format notifiedDownstreamFormat> = $r9;

     label1:
        return;
    }

androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem
<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem END_OF_STREAM_ITEM>
<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.common.Format format>
<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$SampleInfo sampleInfo>
    public static androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem format(androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r1;

        r0 := @parameter0: androidx.media3.common.Format;

        $r1 = new androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem;

        specialinvoke $r1.<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: void <init>(androidx.media3.common.Format,androidx.media3.test.utils.FakeSampleStream$SampleInfo)>(r0, null);

        return $r1;
    }

    public static androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem oneByteSample(long)
    {
        long l0;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem oneByteSample(long,int)>(l0, 0);

        return $r0;
    }

    public static androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem oneByteSample(long, int)
    {
        long l0;
        int i1;
        byte[] $r0;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r0 = newarray (byte)[1];

        $r0[0] = 0;

        $r1 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem sample(long,int,byte[])>(l0, i1, $r0);

        return $r1;
    }

    public static androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem sample(long, int, byte[])
    {
        long l0;
        int i1;
        byte[] r0, $r4;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r1;
        androidx.media3.test.utils.FakeSampleStream$SampleInfo $r2;
        java.lang.Object $r3;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = new androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem;

        $r2 = new androidx.media3.test.utils.FakeSampleStream$SampleInfo;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        specialinvoke $r2.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: void <init>(byte[],int,long)>($r4, i1, l0);

        specialinvoke $r1.<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: void <init>(androidx.media3.common.Format,androidx.media3.test.utils.FakeSampleStream$SampleInfo)>(null, $r2);

        return $r1;
    }

    private void <init>(androidx.media3.common.Format, androidx.media3.test.utils.FakeSampleStream$SampleInfo)
    {
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem r0;
        androidx.media3.common.Format r1;
        androidx.media3.test.utils.FakeSampleStream$SampleInfo r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem;

        r1 := @parameter0: androidx.media3.common.Format;

        r2 := @parameter1: androidx.media3.test.utils.FakeSampleStream$SampleInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if r2 != null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z0 == $z1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        r0.<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.common.Format format> = r1;

        r0.<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$SampleInfo sampleInfo> = r2;

        return;
    }

    static androidx.media3.test.utils.FakeSampleStream$SampleInfo access$000(androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem)
    {
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem r0;
        androidx.media3.test.utils.FakeSampleStream$SampleInfo $r1;

        r0 := @parameter0: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$SampleInfo sampleInfo>;

        return $r1;
    }

    static androidx.media3.common.Format access$100(androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem)
    {
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem r0;
        androidx.media3.common.Format $r1;

        r0 := @parameter0: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem;

        $r1 = r0.<androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.common.Format format>;

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r0;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r1;

        $r0 = newarray (byte)[0];

        $r1 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem sample(long,int,byte[])>(9223372036854775807L, 4, $r0);

        <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem END_OF_STREAM_ITEM> = $r1;

        return;
    }

androidx.media3.test.utils.FakeSampleStream$SampleInfo
<androidx.media3.test.utils.FakeSampleStream$SampleInfo: byte[] data>
<androidx.media3.test.utils.FakeSampleStream$SampleInfo: int flags>
<androidx.media3.test.utils.FakeSampleStream$SampleInfo: long timeUs>
    public void <init>(byte[], int, long)
    {
        androidx.media3.test.utils.FakeSampleStream$SampleInfo r0;
        byte[] r1, $r2;
        int i0, $i2;
        long l1;

        r0 := @this: androidx.media3.test.utils.FakeSampleStream$SampleInfo;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, $i2);

        r0.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: byte[] data> = $r2;

        r0.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: int flags> = i0;

        r0.<androidx.media3.test.utils.FakeSampleStream$SampleInfo: long timeUs> = l1;

        return;
    }

