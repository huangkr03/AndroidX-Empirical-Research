kotlinx.coroutines.DispatchedTask
<kotlinx.coroutines.DispatchedTask: int resumeMode>
    public void <init>(int)
    {
        kotlinx.coroutines.DispatchedTask $r0;
        int $i0;

        $r0 := @this: kotlinx.coroutines.DispatchedTask;

        $i0 := @parameter0: int;

        specialinvoke $r0.<kotlinx.coroutines.scheduling.Task: void <init>()>();

        $r0.<kotlinx.coroutines.DispatchedTask: int resumeMode> = $i0;

        return;
    }

    public void cancelCompletedResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object, java.lang.Throwable)
    {
        kotlinx.coroutines.DispatchedTask $r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;
        java.lang.NullPointerException r3;

        $r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Throwable;

        r3 = new java.lang.NullPointerException;

        specialinvoke r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r3;
    }

<kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>
    public java.lang.Throwable getExceptionalResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object)
    {
        kotlinx.coroutines.DispatchedTask $r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.CompletedExceptionally $r2;
        java.lang.Throwable r3;

        $r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        r3 = $r2.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        return r3;

     label3:
        return null;
    }

    public java.lang.Object getSuccessfulResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object)
    {
        kotlinx.coroutines.DispatchedTask $r0;
        java.lang.Object $r1;

        $r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Object;

        return $r1;
    }

    public final void handleFatalException(java.lang.Throwable, java.lang.Throwable)
    {
        kotlinx.coroutines.DispatchedTask $r0;
        java.lang.Throwable $r1, $r2;
        java.lang.StringBuilder $r3, r7;
        java.lang.String $r4;
        kotlin.coroutines.Continuation $r5;
        kotlin.coroutines.CoroutineContext $r6;
        kotlinx.coroutines.CoroutinesInternalError r8;

        $r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.Throwable;

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        return;

     label1:
        if $r1 == null goto label2;

        if $r2 == null goto label2;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r1, $r2);

     label2:
        if $r1 != null goto label3;

        $r1 = $r2;

     label3:
        r8 = new kotlinx.coroutines.CoroutinesInternalError;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fatal exception in coroutines machinery for ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please read KDoc to \'handleFatalException\' method and report this incident to maintainers");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        specialinvoke r8.<kotlinx.coroutines.CoroutinesInternalError: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r1);

        $r5 = virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

        $r6 = interfaceinvoke $r5.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r1 = (java.lang.Throwable) r8;

        staticinvoke <kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>($r6, $r1);

        return;
    }

    public final void run()
    {
        kotlinx.coroutines.DispatchedTask $r0;
        boolean $z0;
        int $i0;
        kotlinx.coroutines.scheduling.TaskContext $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.internal.DispatchedContinuation $r3;
        java.lang.Object $r4, $r9, $r15;
        kotlin.coroutines.CoroutineContext $r5, $r8;
        kotlinx.coroutines.internal.Symbol $r6;
        kotlinx.coroutines.UndispatchedCoroutine $r7;
        java.lang.Throwable $r10, $r19, $r20, $r21;
        kotlinx.coroutines.Job$Key $r11;
        kotlin.coroutines.CoroutineContext$Element $r12;
        kotlinx.coroutines.Job $r13;
        java.util.concurrent.CancellationException $r14;
        kotlin.Result$Companion $r16;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r17;
        kotlin.Unit $r18;
        java.lang.AssertionError r22;

        $r0 := @this: kotlinx.coroutines.DispatchedTask;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label04;

        $i0 = $r0.<kotlinx.coroutines.DispatchedTask: int resumeMode>;

        if $i0 == -1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        goto label04;

     label03:
        r22 = new java.lang.AssertionError;

        specialinvoke r22.<java.lang.AssertionError: void <init>()>();

        throw r22;

     label04:
        $r1 = $r0.<kotlinx.coroutines.DispatchedTask: kotlinx.coroutines.scheduling.TaskContext taskContext>;

     label05:
        $r2 = virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlinx.coroutines.internal.DispatchedContinuation<T of kotlinx.coroutines.DispatchedTask>");

        $r3 = (kotlinx.coroutines.internal.DispatchedContinuation) $r2;

        $r2 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation>;

        $r4 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement>;

     label07:
        $r5 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

     label08:
        $r4 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r5, $r4);

        $r6 = <kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS>;

        if $r4 == $r6 goto label09;

        $r7 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)>($r2, $r5, $r4);

        goto label10;

     label09:
        $r7 = null;

     label10:
        $r8 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r9 = virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: java.lang.Object takeState$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

        $r10 = virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object)>($r9);

     label11:
        if $r10 != null goto label14;

        $i0 = $r0.<kotlinx.coroutines.DispatchedTask: int resumeMode>;

        $z0 = staticinvoke <kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)>($i0);

        if $z0 == 0 goto label14;

        $r11 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

     label12:
        $r12 = interfaceinvoke $r8.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r11);

     label13:
        $r13 = (kotlinx.coroutines.Job) $r12;

        goto label15;

     label14:
        $r13 = null;

     label15:
        if $r13 == null goto label25;

     label16:
        $z0 = interfaceinvoke $r13.<kotlinx.coroutines.Job: boolean isActive()>();

     label17:
        if $z0 != 0 goto label25;

     label18:
        $r14 = interfaceinvoke $r13.<kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()>();

     label19:
        $r15 = $r14;

     label20:
        virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object,java.lang.Throwable)>($r9, $r14);

     label21:
        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 == 0 goto label22;

        $z0 = $r2 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 == 0 goto label22;

        $r17 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r2;

        $r15 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r14, $r17);

     label22:
        $r10 = (java.lang.Throwable) $r15;

        $r9 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r10);

        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r9);

     label23:
        interfaceinvoke $r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

     label24:
        goto label32;

     label25:
        if $r10 == null goto label28;

        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r9 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r10);

        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r9);

     label26:
        interfaceinvoke $r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

     label27:
        goto label32;

     label28:
        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

     label29:
        $r9 = virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object)>($r9);

     label30:
        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r9);

     label31:
        interfaceinvoke $r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

     label32:
        $r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        if $r7 == null goto label35;

     label33:
        $z0 = virtualinvoke $r7.<kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()>();

     label34:
        if $z0 == 0 goto label36;

     label35:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r5, $r4);

     label36:
        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

     label37:
        interfaceinvoke $r1.<kotlinx.coroutines.scheduling.TaskContext: void afterTask()>();

     label38:
        $r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r18);

        goto label40;

     label39:
        $r10 := @caughtexception;

        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r10);

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

     label40:
        $r10 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r4);

        virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)>(null, $r10);

        return;

     label41:
        $r19 := @caughtexception;

        if $r7 == null goto label44;

     label42:
        $z0 = virtualinvoke $r7.<kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()>();

     label43:
        if $z0 == 0 goto label45;

     label44:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r5, $r4);

     label45:
        throw $r19;

     label46:
        $r20 := @caughtexception;

        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

     label47:
        interfaceinvoke $r1.<kotlinx.coroutines.scheduling.TaskContext: void afterTask()>();

     label48:
        $r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r18);

        goto label50;

     label49:
        $r21 := @caughtexception;

        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r21);

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

     label50:
        $r10 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r4);

        virtualinvoke $r0.<kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)>($r20, $r10);

        return;

        catch java.lang.Throwable from label05 to label06 with label46;
        catch java.lang.Throwable from label07 to label08 with label46;
        catch java.lang.Throwable from label10 to label11 with label41;
        catch java.lang.Throwable from label12 to label13 with label41;
        catch java.lang.Throwable from label16 to label17 with label41;
        catch java.lang.Throwable from label18 to label19 with label41;
        catch java.lang.Throwable from label20 to label21 with label41;
        catch java.lang.Throwable from label23 to label24 with label41;
        catch java.lang.Throwable from label26 to label27 with label41;
        catch java.lang.Throwable from label29 to label30 with label41;
        catch java.lang.Throwable from label31 to label32 with label41;
        catch java.lang.Throwable from label33 to label34 with label46;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label42 to label43 with label46;
        catch java.lang.Throwable from label45 to label46 with label46;
        catch java.lang.Throwable from label47 to label48 with label49;
    }

<kotlinx.coroutines.DispatchedTask: java.lang.Object takeState$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>
