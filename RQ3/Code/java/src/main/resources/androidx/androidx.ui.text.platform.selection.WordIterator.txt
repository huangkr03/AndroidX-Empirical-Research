androidx.ui.text.platform.selection.WordIterator
<androidx.ui.text.platform.selection.WordIterator: int start>
<androidx.ui.text.platform.selection.WordIterator: int end>
<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>
<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>
<androidx.ui.text.platform.selection.WordIterator: int WINDOW_WIDTH>
<androidx.ui.text.platform.selection.WordIterator: androidx.ui.text.platform.selection.WordIterator$Companion Companion>
    public final int nextBoundary(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1;
        java.text.BreakIterator $r1;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: void checkOffsetIsValid(int)>(i0);

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $i1 = virtualinvoke $r1.<java.text.BreakIterator: int following(int)>(i0);

        return $i1;
    }

    public final int prevBoundary(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1;
        java.text.BreakIterator $r1;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: void checkOffsetIsValid(int)>(i0);

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $i1 = virtualinvoke $r1.<java.text.BreakIterator: int preceding(int)>(i0);

        return $i1;
    }

    public final int getPrevWordBeginningOnTwoWordsBoundary(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: int getBeginning(int,boolean)>(i0, 1);

        return $i1;
    }

    public final int getNextWordEndOnTwoWordBoundary(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: int getEnd(int,boolean)>(i0, 1);

        return $i1;
    }

    public final int getPunctuationBeginning(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: void checkOffsetIsValid(int)>(i0);

        i1 = i0;

     label1:
        if i1 == -1 goto label2;

        $z0 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isPunctuationStartBoundary(int)>(i1);

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r0.<androidx.ui.text.platform.selection.WordIterator: int prevBoundary(int)>(i1);

        goto label1;

     label2:
        return i1;
    }

    public final int getPunctuationEnd(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: void checkOffsetIsValid(int)>(i0);

        i1 = i0;

     label1:
        if i1 == -1 goto label2;

        $z0 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isPunctuationEndBoundary(int)>(i1);

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r0.<androidx.ui.text.platform.selection.WordIterator: int nextBoundary(int)>(i1);

        goto label1;

     label2:
        return i1;
    }

    public final boolean isAfterPunctuation(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.CharSequence $r1;
        androidx.ui.text.platform.selection.WordIterator$Companion $r2;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.ui.text.platform.selection.WordIterator: int start>;

        $i3 = $i1 + 1;

        $i2 = r0.<androidx.ui.text.platform.selection.WordIterator: int end>;

        i4 = i0;

        if $i3 <= i4 goto label1;

        goto label2;

     label1:
        if $i2 < i4 goto label2;

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        i5 = staticinvoke <java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>($r1, i0);

        $r2 = <androidx.ui.text.platform.selection.WordIterator: androidx.ui.text.platform.selection.WordIterator$Companion Companion>;

        $z0 = virtualinvoke $r2.<androidx.ui.text.platform.selection.WordIterator$Companion: boolean isPunctuation$ui_text_android_release(int)>(i5);

        return $z0;

     label2:
        return 0;
    }

    public final boolean isOnPunctuation(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2, i3, i4;
        java.lang.CharSequence $r1;
        androidx.ui.text.platform.selection.WordIterator$Companion $r2;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.ui.text.platform.selection.WordIterator: int start>;

        $i1 = r0.<androidx.ui.text.platform.selection.WordIterator: int end>;

        i3 = i0;

        if $i2 <= i3 goto label1;

        goto label2;

     label1:
        if $i1 <= i3 goto label2;

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        i4 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r1, i0);

        $r2 = <androidx.ui.text.platform.selection.WordIterator: androidx.ui.text.platform.selection.WordIterator$Companion Companion>;

        $z0 = virtualinvoke $r2.<androidx.ui.text.platform.selection.WordIterator$Companion: boolean isPunctuation$ui_text_android_release(int)>(i4);

        return $z0;

     label2:
        return 0;
    }

    private final int getBeginning(int, boolean)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.text.BreakIterator $r1, $r2, $r3;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: void checkOffsetIsValid(int)>(i0);

        $z1 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isOnLetterOrDigit(int)>(i0);

        if $z1 == 0 goto label4;

        $r2 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $z3 = virtualinvoke $r2.<java.text.BreakIterator: boolean isBoundary(int)>(i0);

        if $z3 == 0 goto label2;

        $z4 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isAfterLetterOrDigit(int)>(i0);

        if $z4 == 0 goto label1;

        if z0 != 0 goto label2;

     label1:
        $i2 = i0;

        goto label3;

     label2:
        $r3 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $i2 = virtualinvoke $r3.<java.text.BreakIterator: int preceding(int)>(i0);

     label3:
        return $i2;

     label4:
        $z2 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isAfterLetterOrDigit(int)>(i0);

        if $z2 == 0 goto label5;

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $i1 = virtualinvoke $r1.<java.text.BreakIterator: int preceding(int)>(i0);

        return $i1;

     label5:
        return -1;
    }

    private final int getEnd(int, boolean)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.text.BreakIterator $r1, $r2, $r3;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: void checkOffsetIsValid(int)>(i0);

        $z1 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isAfterLetterOrDigit(int)>(i0);

        if $z1 == 0 goto label4;

        $r2 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $z3 = virtualinvoke $r2.<java.text.BreakIterator: boolean isBoundary(int)>(i0);

        if $z3 == 0 goto label2;

        $z4 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isOnLetterOrDigit(int)>(i0);

        if $z4 == 0 goto label1;

        if z0 != 0 goto label2;

     label1:
        $i2 = i0;

        goto label3;

     label2:
        $r3 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $i2 = virtualinvoke $r3.<java.text.BreakIterator: int following(int)>(i0);

     label3:
        return $i2;

     label4:
        $z2 = specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isOnLetterOrDigit(int)>(i0);

        if $z2 == 0 goto label5;

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $i1 = virtualinvoke $r1.<java.text.BreakIterator: int following(int)>(i0);

        return $i1;

     label5:
        return -1;
    }

    private final boolean isPunctuationStartBoundary(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isOnPunctuation(int)>(i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isAfterPunctuation(int)>(i0);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private final boolean isPunctuationEndBoundary(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isOnPunctuation(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.ui.text.platform.selection.WordIterator: boolean isAfterPunctuation(int)>(i0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private final boolean isAfterLetterOrDigit(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.CharSequence $r1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.ui.text.platform.selection.WordIterator: int start>;

        $i3 = $i1 + 1;

        $i2 = r0.<androidx.ui.text.platform.selection.WordIterator: int end>;

        i4 = i0;

        if $i3 <= i4 goto label1;

        goto label2;

     label1:
        if $i2 < i4 goto label2;

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        i5 = staticinvoke <java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>($r1, i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(int)>(i5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean isOnLetterOrDigit(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2, i3, i4;
        java.lang.CharSequence $r1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.ui.text.platform.selection.WordIterator: int start>;

        $i1 = r0.<androidx.ui.text.platform.selection.WordIterator: int end>;

        i3 = i0;

        if $i2 <= i3 goto label1;

        goto label2;

     label1:
        if $i1 <= i3 goto label2;

        $r1 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        i4 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r1, i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(int)>(i4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final void checkOffsetIsValid(int)
    {
        androidx.ui.text.platform.selection.WordIterator r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean z0, $z2, z3, z4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10, r12;
        java.lang.Throwable $r11;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.ui.text.platform.selection.WordIterator: int start>;

        $i1 = r0.<androidx.ui.text.platform.selection.WordIterator: int end>;

        i5 = i0;

        if $i2 <= i5 goto label1;

        goto label2;

     label1:
        if $i1 < i5 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z3 = $z2;

        z0 = 0;

        z4 = 0;

        if z3 != 0 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid offset: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Valid range is [");

        $i3 = r0.<androidx.ui.text.platform.selection.WordIterator: int start>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $i4 = r0.<androidx.ui.text.platform.selection.WordIterator: int end>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label4:
        return;
    }

    public void <init>(java.lang.CharSequence, int, int, java.util.Locale)
    {
        androidx.ui.text.platform.selection.WordIterator r0, r19, r20;
        java.lang.CharSequence r1, $r3, $r4, $r6, $r8;
        int i0, i1, $i2, $i3, i4, i5, i7, i8, i9, i10, i11;
        java.util.Locale r2;
        java.text.BreakIterator $r5, $r9;
        androidx.ui.text.platform.CharSequenceCharacterIterator $r7;
        java.text.CharacterIterator $r10;
        java.lang.IllegalArgumentException $r11, $r14;
        java.lang.String $r12, $r15, r17, r18;
        java.lang.Throwable $r13, $r16;
        boolean $z0, z1, z2, z3, $z5, z6, z7, z8, z10, z11;
        byte b6;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "charSequence");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence> = r1;

        $r3 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        $i2 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        i4 = i0;

        if 0 <= i4 goto label1;

        goto label2;

     label1:
        if $i2 < i4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        z1 = $z0;

        z2 = 0;

        z3 = 0;

        if z1 != 0 goto label4;

        r17 = "input start index is outside the CharSequence";

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label4:
        $r4 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        $i3 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        i5 = i1;

        if 0 <= i5 goto label5;

        goto label6;

     label5:
        if $i3 < i5 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        z6 = $z5;

        z7 = 0;

        z8 = 0;

        if z6 != 0 goto label8;

        r18 = "input end index is outside the CharSequence";

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label8:
        $r5 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "BreakIterator.getWordInstance(locale)");

        r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator> = $r5;

        b6 = 0;

        i7 = i0 - 50;

        r19 = r0;

        z10 = 0;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(b6, i7);

        r19.<androidx.ui.text.platform.selection.WordIterator: int start> = i8;

        $r6 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        i9 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        i10 = i1 + 50;

        r20 = r0;

        z11 = 0;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i9, i10);

        r20.<androidx.ui.text.platform.selection.WordIterator: int end> = i11;

        $r9 = r0.<androidx.ui.text.platform.selection.WordIterator: java.text.BreakIterator iterator>;

        $r7 = new androidx.ui.text.platform.CharSequenceCharacterIterator;

        $r8 = r0.<androidx.ui.text.platform.selection.WordIterator: java.lang.CharSequence charSequence>;

        specialinvoke $r7.<androidx.ui.text.platform.CharSequenceCharacterIterator: void <init>(java.lang.CharSequence,int,int)>($r8, i0, i1);

        $r10 = (java.text.CharacterIterator) $r7;

        virtualinvoke $r9.<java.text.BreakIterator: void setText(java.text.CharacterIterator)>($r10);

        return;
    }

    static void <clinit>()
    {
        androidx.ui.text.platform.selection.WordIterator$Companion $r0;

        $r0 = new androidx.ui.text.platform.selection.WordIterator$Companion;

        specialinvoke $r0.<androidx.ui.text.platform.selection.WordIterator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.text.platform.selection.WordIterator: androidx.ui.text.platform.selection.WordIterator$Companion Companion> = $r0;

        return;
    }

androidx.ui.text.platform.selection.WordIterator$Companion
    public final boolean isPunctuation$ui_text_android_release(int)
    {
        androidx.ui.text.platform.selection.WordIterator$Companion r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator$Companion;

        i0 := @parameter0: int;

        i1 = staticinvoke <java.lang.Character: int getType(int)>(i0);

        if i1 == 23 goto label1;

        if i1 == 20 goto label1;

        if i1 == 22 goto label1;

        if i1 == 30 goto label1;

        if i1 == 29 goto label1;

        if i1 == 24 goto label1;

        if i1 != 21 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void <init>()
    {
        androidx.ui.text.platform.selection.WordIterator$Companion r0;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.platform.selection.WordIterator$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.ui.text.platform.selection.WordIterator$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.text.platform.selection.WordIterator$Companion: void <init>()>();

        return;
    }

