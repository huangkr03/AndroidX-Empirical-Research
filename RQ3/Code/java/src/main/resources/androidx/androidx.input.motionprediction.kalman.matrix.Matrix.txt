androidx.input.motionprediction.kalman.matrix.Matrix
<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>
<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>
<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>
    public void <init>(int, int)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int i0, i1, $i2;
        double[] $r1;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows> = i0;

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols> = i1;

        $i2 = i0 * i1;

        $r1 = newarray (double)[$i2];

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem> = $r1;

        return;
    }

    public void <init>(int, double[])
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        double[] r1, $r2, $r5;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.util.Locale $r6;
        java.lang.Integer $r7, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        i0 := @parameter0: int;

        r1 := @parameter1: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        $i2 = $i1 + i0;

        $i3 = $i2 - 1;

        $i4 = $i3 / i0;

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows> = $i4;

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols> = i0;

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem> = r1;

        $r2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i8 = lengthof $r2;

        $i6 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i5 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i7 = $i6 * $i5;

        if $i8 == $i7 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i9 = lengthof $r5;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r4[0] = $r7;

        $i11 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i10 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i12 = $i11 & $i10;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r4[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "Invalid number of elements in \'values\' Expected:%d Actual:%d", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        return;
    }

    public void <init>(androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double[] $r2, $r3, $r4, $r5;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows> = $i0;

        $i1 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols> = $i1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i4 = $i3 * $i2;

        $r2 = newarray (double)[$i4];

        r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem> = $r2;

        $r5 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $r4 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $r3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i5 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i5);

        return;
    }

    public int getNumRows()
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int $i0;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i0 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        return $i0;
    }

    public int getNumCols()
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int $i0;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i0 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        return $i0;
    }

    public static androidx.input.motionprediction.kalman.matrix.Matrix identity(int)
    {
        int i0;
        androidx.input.motionprediction.kalman.matrix.Matrix r0, $r1;

        i0 := @parameter0: int;

        $r1 = new androidx.input.motionprediction.kalman.matrix.Matrix;

        specialinvoke $r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void <init>(int,int)>(i0, i0);

        r0 = $r1;

        staticinvoke <androidx.input.motionprediction.kalman.matrix.Matrix: void setIdentity(androidx.input.motionprediction.kalman.matrix.Matrix)>(r0);

        return r0;
    }

    public static void setIdentity(androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int i0, $i1, $i2, $i3, i4;
        double[] $r1;

        r0 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

        $r1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r1, 0.0);

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i2 >= $i1 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        goto label2;

     label1:
        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

     label2:
        i0 = $i3;

        i4 = 0;

     label3:
        if i4 >= i0 goto label4;

        virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i4, i4, 1.0);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public double get(int, int)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        double[] $r1;
        double $d0;
        java.lang.IndexOutOfBoundsException $r2;
        java.util.Locale $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        java.lang.String $r7, $r8;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if 0 > i0 goto label1;

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i0 >= $i2 goto label1;

        if 0 > i1 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i1 < $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r6;

        $r7 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r4[2] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "Invalid matrix index value. i:%d j:%d not available in %s", $r4);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        $r1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i4 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i5 = i0 * $i4;

        $i6 = $i5 + i1;

        $d0 = $r1[$i6];

        return $d0;
    }

    public void put(int, int, double)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        double d0;
        double[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.util.Locale $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        java.lang.String $r7, $r8;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        if 0 > i0 goto label1;

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i0 >= $i2 goto label1;

        if 0 > i1 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i1 < $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r6;

        $r7 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r4[2] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "Invalid matrix index value. i:%d j:%d not available in %s", $r4);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        $r1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i4 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i5 = i0 * $i4;

        $i6 = $i5 + i1;

        $r1[$i6] = d0;

        return;
    }

    public void fill(double)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        double d0;
        double[] $r1;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        d0 := @parameter0: double;

        $r1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r1, d0);

        return;
    }

    public void scale(double)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        double d0, $d1, $d2;
        int i0, $i1, $i2, i3;
        double[] $r1;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        d0 := @parameter0: double;

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        i0 = $i2 * $i1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d1 = $r1[i3];

        $d2 = $d1 * d0;

        $r1[i3] = $d2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix plus(androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.util.Locale $r4;
        java.lang.String $r5, $r6, $r7;
        double[] $r8, $r9, $r10, $r11;
        double $d0, $d1, $d2;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i2 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i3 == $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = newarray (java.lang.Object)[2];

        $r5 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r3[0] = $r5;

        $r6 = specialinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r3[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "The matrix dimensions are not the same. this:%s that:%s", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        i5 = 0;

     label3:
        $r8 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i4 = lengthof $r8;

        if i5 >= $i4 goto label4;

        $r11 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $r9 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d1 = $r9[i5];

        $r10 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d0 = $r10[i5];

        $d2 = $d1 + $d0;

        $r11[i5] = $d2;

        i5 = i5 + 1;

        goto label3;

     label4:
        return r0;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix minus(androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.util.Locale $r4;
        java.lang.String $r5, $r6, $r7;
        double[] $r8, $r9, $r10, $r11;
        double $d0, $d1, $d2;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i2 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i3 == $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = newarray (java.lang.Object)[2];

        $r5 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r3[0] = $r5;

        $r6 = specialinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r3[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "The matrix dimensions are not the same. this:%s that:%s", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        i5 = 0;

     label3:
        $r8 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i4 = lengthof $r8;

        if i5 >= $i4 goto label4;

        $r11 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $r9 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d1 = $r9[i5];

        $r10 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d0 = $r10[i5];

        $d2 = $d1 - $d0;

        $r11[i5] = $d2;

        i5 = i5 + 1;

        goto label3;

     label4:
        return r0;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix dot(androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.util.Locale $r8;
        java.lang.String $r9, $r10, $r11;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

     label1:
        $r3 = new androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        specialinvoke $r3.<androidx.input.motionprediction.kalman.matrix.Matrix: void <init>(int,int)>($i1, $i0);

        $r4 = virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: androidx.input.motionprediction.kalman.matrix.Matrix dot(androidx.input.motionprediction.kalman.matrix.Matrix,androidx.input.motionprediction.kalman.matrix.Matrix)>(r1, $r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.IllegalArgumentException;

        $r8 = <java.util.Locale: java.util.Locale ROOT>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r7[0] = $r9;

        $r10 = specialinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r7[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "The matrices dimensions are not conformant for a dot matrix operation. this:%s that:%s", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix dot(androidx.input.motionprediction.kalman.matrix.Matrix, androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        double $d0, $d1, $d2, d3;
        java.lang.IllegalArgumentException $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r7, $r8, $r9;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

        r2 := @parameter1: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i2 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if $i3 != $i2 goto label1;

        $i5 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i4 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i5 == $i4 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = newarray (java.lang.Object)[3];

        $r6 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r5[0] = $r6;

        $r7 = specialinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r5[1] = $r7;

        $r8 = specialinvoke r2.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r5[2] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "The matrices dimensions are not conformant for a dot matrix operation. this:%s that:%s result:%s", $r5);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        i9 = 0;

     label3:
        $i6 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i9 >= $i6 goto label8;

        i10 = 0;

     label4:
        $i7 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i10 >= $i7 goto label7;

        d3 = 0.0;

        i11 = 0;

     label5:
        $i8 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i11 >= $i8 goto label6;

        $d0 = virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i9, i11);

        $d1 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i11, i10);

        $d2 = $d0 * $d1;

        d3 = d3 + $d2;

        i11 = i11 + 1;

        goto label5;

     label6:
        virtualinvoke r2.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i9, i10, d3);

        i10 = i10 + 1;

        goto label4;

     label7:
        i9 = i9 + 1;

        goto label3;

     label8:
        return r2;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix inverse()
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19, d20, d21;
        byte $b14, $b19;
        java.lang.ArithmeticException $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.Object[] $r6;
        java.util.Locale $r7;
        java.lang.String $r8, $r9;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i1 == $i0 goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = <java.util.Locale: java.util.Locale ROOT>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "The matrix is not square. this:%s", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label01:
        $r2 = new androidx.input.motionprediction.kalman.matrix.Matrix;

        $i4 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i3 = 2 * $i2;

        specialinvoke $r2.<androidx.input.motionprediction.kalman.matrix.Matrix: void <init>(int,int)>($i4, $i3);

        r1 = $r2;

        i24 = 0;

     label02:
        $i5 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i24 >= $i5 goto label07;

        i25 = 0;

     label03:
        $i20 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i25 >= $i20 goto label06;

        $d14 = virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i24, i25);

        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i24, i25, $d14);

        $i23 = i24;

        $i21 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i22 = $i21 + i25;

        if i24 != i25 goto label04;

        $d15 = 1.0;

        goto label05;

     label04:
        $d15 = 0.0;

     label05:
        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>($i23, $i22, $d15);

        i25 = i25 + 1;

        goto label03;

     label06:
        i24 = i24 + 1;

        goto label02;

     label07:
        i26 = 0;

     label08:
        $i6 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i26 >= $i6 goto label21;

        i27 = i26;

        $d5 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i27, i27);

        d16 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        i28 = i26 + 1;

     label09:
        $i13 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i28 >= $i13 goto label11;

        $d13 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i28, i26);

        d17 = staticinvoke <java.lang.Math: double abs(double)>($d13);

        $b19 = d17 cmpl d16;

        if $b19 <= 0 goto label10;

        i27 = i28;

        d16 = d17;

     label10:
        i28 = i28 + 1;

        goto label09;

     label11:
        if i27 == i26 goto label13;

        i29 = 0;

     label12:
        $i18 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i29 >= $i18 goto label13;

        d18 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i26, i29);

        $d12 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i27, i29);

        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i26, i29, $d12);

        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i27, i29, d18);

        i29 = i29 + 1;

        goto label12;

     label13:
        d19 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i26, i26);

        $b14 = d19 cmpl 0.0;

        if $b14 != 0 goto label14;

        $r3 = new java.lang.ArithmeticException;

        specialinvoke $r3.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Singular matrix");

        throw $r3;

     label14:
        i30 = 0;

     label15:
        $i15 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i30 >= $i15 goto label16;

        $d10 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i26, i30);

        $d11 = $d10 / d19;

        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i26, i30, $d11);

        i30 = i30 + 1;

        goto label15;

     label16:
        i31 = i26 + 1;

     label17:
        $i16 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i31 >= $i16 goto label20;

        d20 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i31, i26);

        i32 = 0;

     label18:
        $i17 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i32 >= $i17 goto label19;

        $d6 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i31, i32);

        $d7 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i26, i32);

        $d8 = d20 * $d7;

        $d9 = $d6 - $d8;

        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i31, i32, $d9);

        i32 = i32 + 1;

        goto label18;

     label19:
        i31 = i31 + 1;

        goto label17;

     label20:
        i26 = i26 + 1;

        goto label08;

     label21:
        $i7 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        i33 = $i7 - 1;

     label22:
        if i33 < 0 goto label27;

        i34 = 0;

     label23:
        if i34 >= i33 goto label26;

        d21 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i34, i33);

        i35 = 0;

     label24:
        $i12 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i35 >= $i12 goto label25;

        $d1 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i34, i35);

        $d2 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i33, i35);

        $d3 = d21 * $d2;

        $d4 = $d1 - $d3;

        virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i34, i35, $d4);

        i35 = i35 + 1;

        goto label24;

     label25:
        i34 = i34 + 1;

        goto label23;

     label26:
        i33 = i33 + -1;

        goto label22;

     label27:
        i36 = 0;

     label28:
        $i8 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i36 >= $i8 goto label31;

        i37 = 0;

     label29:
        $i9 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i37 >= $i9 goto label30;

        $i10 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i11 = $i10 + i37;

        $d0 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i36, $i11);

        virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i36, i37, $d0);

        i37 = i37 + 1;

        goto label29;

     label30:
        i36 = i36 + 1;

        goto label28;

     label31:
        return r0;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix dotTranspose(androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.util.Locale $r8;
        java.lang.String $r9, $r10, $r11;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

     label1:
        $r3 = new androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        specialinvoke $r3.<androidx.input.motionprediction.kalman.matrix.Matrix: void <init>(int,int)>($i1, $i0);

        $r4 = virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: androidx.input.motionprediction.kalman.matrix.Matrix dotTranspose(androidx.input.motionprediction.kalman.matrix.Matrix,androidx.input.motionprediction.kalman.matrix.Matrix)>(r1, $r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.IllegalArgumentException;

        $r8 = <java.util.Locale: java.util.Locale ROOT>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r7[0] = $r9;

        $r10 = specialinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r7[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "The matrices dimensions are not conformant for a transpose operation. this:%s that:%s", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public androidx.input.motionprediction.kalman.matrix.Matrix dotTranspose(androidx.input.motionprediction.kalman.matrix.Matrix, androidx.input.motionprediction.kalman.matrix.Matrix)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        double $d0, $d1, $d2, d3;
        java.lang.IllegalArgumentException $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r7, $r8, $r9;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: androidx.input.motionprediction.kalman.matrix.Matrix;

        r2 := @parameter1: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i2 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i3 != $i2 goto label1;

        $i5 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i4 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i5 == $i4 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = newarray (java.lang.Object)[3];

        $r6 = specialinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r5[0] = $r6;

        $r7 = specialinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r5[1] = $r7;

        $r8 = specialinvoke r2.<androidx.input.motionprediction.kalman.matrix.Matrix: java.lang.String shortString()>();

        $r5[2] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "The matrices dimensions are not conformant for a transpose operation. this:%s that:%s result:%s", $r5);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        i9 = 0;

     label3:
        $i6 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i9 >= $i6 goto label8;

        i10 = 0;

     label4:
        $i7 = r1.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if i10 >= $i7 goto label7;

        d3 = 0.0;

        i11 = 0;

     label5:
        $i8 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if i11 >= $i8 goto label6;

        $d0 = virtualinvoke r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i9, i11);

        $d1 = virtualinvoke r1.<androidx.input.motionprediction.kalman.matrix.Matrix: double get(int,int)>(i10, i11);

        $d2 = $d0 * $d1;

        d3 = d3 + $d2;

        i11 = i11 + 1;

        goto label5;

     label6:
        virtualinvoke r2.<androidx.input.motionprediction.kalman.matrix.Matrix: void put(int,int,double)>(i9, i10, d3);

        i10 = i10 + 1;

        goto label4;

     label7:
        i9 = i9 + 1;

        goto label3;

     label8:
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0, r2;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, i6;
        double[] $r3, $r4, $r5;
        double $d0, $d1;
        byte $b5;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.input.motionprediction.kalman.matrix.Matrix;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.input.motionprediction.kalman.matrix.Matrix) r1;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $i3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i2 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        i6 = 0;

     label5:
        $r3 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i4 = lengthof $r3;

        if i6 >= $i4 goto label7;

        $r4 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d1 = $r4[i6];

        $r5 = r2.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d0 = $r5[i6];

        $b5 = $d1 cmpl $d0;

        if $b5 == 0 goto label6;

        return 0;

     label6:
        i6 = i6 + 1;

        goto label5;

     label7:
        return 1;
    }

    public int hashCode()
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        double[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        double d0;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i3 = $i1 * 101;

        $i2 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        i6 = $i3 + $i2;

        r1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        i0 = lengthof r1;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        d0 = r1[i7];

        $i4 = i6 * 37;

        $i5 = staticinvoke <java.lang.Double: int hashCode(double)>(d0);

        i6 = $i4 + $i5;

        i7 = i7 + 1;

        goto label1;

     label2:
        return i6;
    }

    public java.lang.String toString()
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        double[] $r7, $r14;
        java.lang.String $r9, $r13;
        double $d0;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        $r2 = new java.lang.StringBuilder;

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $i0 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i2 = $i1 * $i0;

        $i3 = $i2 * 8;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        r1 = $r2;

        $i4 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i5 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        i9 = 0;

     label1:
        $r7 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $i6 = lengthof $r7;

        if i9 >= $i6 goto label5;

        if i9 <= 0 goto label4;

        $i7 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $i8 = i9 % $i7;

        if $i8 != 0 goto label2;

        $r13 = "; ";

        goto label3;

     label2:
        $r13 = ", ";

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label4:
        $r14 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: double[] mMem>;

        $d0 = $r14[i9];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        i9 = i9 + 1;

        goto label1;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private java.lang.String shortString()
    {
        androidx.input.motionprediction.kalman.matrix.Matrix r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: androidx.input.motionprediction.kalman.matrix.Matrix;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mRows>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i1 = r0.<androidx.input.motionprediction.kalman.matrix.Matrix: int mCols>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

