androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String nameFormat>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Boolean daemon>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Integer priority>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory backingThreadFactory>
    public androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder;

        r1 := @parameter0: java.lang.String;

        r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r2[0] = $r3;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String nameFormat> = r1;

        return r0;
    }

    static java.lang.String access$000(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r2;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

        return $r2;
    }

    private static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.util.Locale $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, r0, r1);

        return $r3;
    }

    public java.util.concurrent.ThreadFactory build()
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder r0;
        java.util.concurrent.ThreadFactory $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory doBuild(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder)>(r0);

        return $r1;
    }

    private static java.util.concurrent.ThreadFactory doBuild(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder)
    {
        java.lang.String r0;
        java.lang.Boolean r1;
        java.lang.Integer r2;
        java.lang.Thread$UncaughtExceptionHandler r3;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1 r4;
        java.util.concurrent.ThreadFactory $r5, r7;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder r6;
        java.util.concurrent.atomic.AtomicLong r8;

        r6 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder;

        r0 = r6.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String nameFormat>;

        r1 = r6.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Boolean daemon>;

        r2 = r6.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Integer priority>;

        r3 = r6.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler>;

        $r5 = r6.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory backingThreadFactory>;

        if $r5 == null goto label4;

        r7 = r6.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory backingThreadFactory>;

     label1:
        if r0 == null goto label3;

        r8 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke r8.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

     label2:
        r4 = new androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1;

        specialinvoke r4.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: void <init>(java.util.concurrent.ThreadFactory,java.lang.String,java.util.concurrent.atomic.AtomicLong,java.lang.Boolean,java.lang.Integer,java.lang.Thread$UncaughtExceptionHandler)>(r7, r0, r8, r1, r2, r3);

        return r4;

     label3:
        r8 = null;

        goto label2;

     label4:
        r7 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        goto label1;
    }

    public void <init>()
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String nameFormat> = null;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Boolean daemon> = null;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Integer priority> = null;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler> = null;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory backingThreadFactory> = null;

        return;
    }

androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.ThreadFactory val$backingThreadFactory>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.String val$nameFormat>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.atomic.AtomicLong val$count>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Boolean val$daemon>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Integer val$priority>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler>
    public java.lang.Thread newThread(java.lang.Runnable)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1 r0;
        java.lang.String r1, $r5, $r14;
        java.lang.Object[] r2;
        java.util.concurrent.atomic.AtomicLong r3;
        java.util.concurrent.ThreadFactory $r4;
        java.lang.Boolean $r6, $r11;
        java.lang.Integer $r7, $r10;
        java.lang.Thread$UncaughtExceptionHandler $r8, $r9;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r13;
        java.lang.Runnable r15;
        java.lang.Thread r16;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1;

        r15 := @parameter0: java.lang.Runnable;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.ThreadFactory val$backingThreadFactory>;

        r16 = interfaceinvoke $r4.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>(r15);

        $r5 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.String val$nameFormat>;

        if $r5 == null goto label1;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.String val$nameFormat>;

        r2 = newarray (java.lang.Object)[1];

        r3 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.atomic.AtomicLong val$count>;

        virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $l1 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r2[0] = $r13;

        $r14 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.lang.String access$000(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke r16.<java.lang.Thread: void setName(java.lang.String)>($r14);

     label1:
        $r6 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Boolean val$daemon>;

        if $r6 == null goto label2;

        $r11 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Boolean val$daemon>;

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r16.<java.lang.Thread: void setDaemon(boolean)>($z0);

     label2:
        $r7 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Integer val$priority>;

        if $r7 == null goto label3;

        $r10 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Integer val$priority>;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        virtualinvoke r16.<java.lang.Thread: void setPriority(int)>($i0);

     label3:
        $r8 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler>;

        if $r8 == null goto label4;

        $r9 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler>;

        virtualinvoke r16.<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r9);

     label4:
        return r16;
    }

    void <init>(java.util.concurrent.ThreadFactory, java.lang.String, java.util.concurrent.atomic.AtomicLong, java.lang.Boolean, java.lang.Integer, java.lang.Thread$UncaughtExceptionHandler)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1 r0;
        java.util.concurrent.ThreadFactory r1;
        java.lang.String r2;
        java.util.concurrent.atomic.AtomicLong r3;
        java.lang.Boolean r4;
        java.lang.Integer r5;
        java.lang.Thread$UncaughtExceptionHandler r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1;

        r1 := @parameter0: java.util.concurrent.ThreadFactory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicLong;

        r4 := @parameter3: java.lang.Boolean;

        r5 := @parameter4: java.lang.Integer;

        r6 := @parameter5: java.lang.Thread$UncaughtExceptionHandler;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.ThreadFactory val$backingThreadFactory> = r1;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.String val$nameFormat> = r2;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.atomic.AtomicLong val$count> = r3;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Boolean val$daemon> = r4;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Integer val$priority> = r5;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler> = r6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

