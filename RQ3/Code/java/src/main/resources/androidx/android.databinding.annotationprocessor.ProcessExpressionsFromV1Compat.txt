android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat
<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: javax.'annotation'.processing.ProcessingEnvironment processingEnvironment>
<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.DataBindingCompilerArgs args>
<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: java.util.List intermediates>
<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.writer.JavaFileWriter writer>
<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: java.lang.String COMPAT_PACKAGE>
<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$Companion Companion>
    public final android.databinding.tool.CompilerChef generate()
    {
        android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat r0;
        java.util.HashMap r1, $r6;
        android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$generate$1 r2, $r7;
        java.util.Map r3, r39;
        android.databinding.tool.store.ResourceBundle r4, $r9;
        java.lang.Iterable r5, $r25, $r30, $r35;
        java.util.LinkedHashMap $r8;
        android.databinding.tool.DataBindingCompilerArgs $r10, $r17, $r18;
        java.lang.String $r11, $r20, $r21, $r23, r40;
        java.util.List $r12, $r14, $r16, $r24;
        java.util.ArrayList $r13, $r15;
        boolean $z0, $z1, $z2, $z3;
        android.databinding.tool.CompilerChef $r19;
        java.util.Collection r26, r31;
        java.util.Iterator r27, r32, $r36;
        java.lang.Object r28, r33, r37;
        android.databinding.annotationprocessor.ProcessExpressions$IntermediateV2 r29;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r34, r38;

        r0 := @this: android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r1 = $r6;

        $r7 = new android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$generate$1;

        specialinvoke $r7.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$generate$1: void <init>(android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat,java.util.HashMap)>(r0, r1);

        r2 = $r7;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        r3 = (java.util.Map) $r8;

        $r9 = new android.databinding.tool.store.ResourceBundle;

        $r10 = r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.DataBindingCompilerArgs args>;

        $r11 = virtualinvoke $r10.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getModulePackage()>();

        specialinvoke $r9.<android.databinding.tool.store.ResourceBundle: void <init>(java.lang.String)>($r11);

        r4 = $r9;

        $r12 = r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: java.util.List intermediates>;

        $r25 = (java.lang.Iterable) $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r26 = (java.util.Collection) $r13;

        r27 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r28 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r29 = (android.databinding.annotationprocessor.ProcessExpressions$IntermediateV2) r28;

        $r24 = virtualinvoke r29.<android.databinding.annotationprocessor.ProcessExpressions$IntermediateV2: java.util.List extractBundles()>();

        r5 = (java.lang.Iterable) $r24;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r26, r5);

        goto label1;

     label2:
        $r14 = (java.util.List) r26;

        $r30 = (java.lang.Iterable) $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r31 = (java.util.Collection) $r15;

        r32 = interfaceinvoke $r30.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r34 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r33;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r34, "layoutFileBundle");

        $r23 = virtualinvoke r34.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r23, "layoutFileBundle.modulePackage");

        $z3 = virtualinvoke r2.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$generate$1: boolean invoke(java.lang.String)>($r23);

        if $z3 != 0 goto label4;

        interfaceinvoke r31.<java.util.Collection: boolean add(java.lang.Object)>(r33);

     label4:
        goto label3;

     label5:
        $r16 = (java.util.List) r31;

        $r35 = (java.lang.Iterable) $r16;

        $r36 = interfaceinvoke $r35.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        r37 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        r38 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r37;

        r39 = r3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r38, "it");

        $r20 = virtualinvoke r38.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r20, "it.fileName");

        r40 = $r20;

        $r21 = virtualinvoke r38.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r21, "it.fullBindingClass");

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, $r21);

        virtualinvoke r4.<android.databinding.tool.store.ResourceBundle: void addLayoutBundle(android.databinding.tool.store.ResourceBundle$LayoutFileBundle,boolean)>(r38, 0);

        goto label6;

     label7:
        $r17 = r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.DataBindingCompilerArgs args>;

        $r18 = virtualinvoke $r17.<android.databinding.tool.DataBindingCompilerArgs: android.databinding.tool.DataBindingCompilerArgs copyAsV1(java.lang.String)>("android.databinding.v1Compat");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r18, "args.copyAsV1(COMPAT_PACKAGE)");

        $r19 = specialinvoke r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.CompilerChef writeResourceBundle(android.databinding.tool.store.ResourceBundle,android.databinding.tool.DataBindingCompilerArgs)>(r4, $r18);

        return $r19;
    }

    private final android.databinding.tool.CompilerChef writeResourceBundle(android.databinding.tool.store.ResourceBundle, android.databinding.tool.DataBindingCompilerArgs)
    {
        android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat r0;
        android.databinding.tool.store.ResourceBundle r1;
        android.databinding.tool.DataBindingCompilerArgs r2;
        android.databinding.tool.CompilerChef r3;
        android.databinding.tool.writer.JavaFileWriter $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i0;

        r0 := @this: android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle;

        r2 := @parameter1: android.databinding.tool.DataBindingCompilerArgs;

        $r4 = r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.writer.JavaFileWriter writer>;

        r3 = staticinvoke <android.databinding.tool.CompilerChef: android.databinding.tool.CompilerChef createChef(android.databinding.tool.store.ResourceBundle,android.databinding.tool.writer.JavaFileWriter,android.databinding.tool.DataBindingCompilerArgs)>(r1, $r4, r2);

        virtualinvoke r3.<android.databinding.tool.CompilerChef: void sealModels()>();

        $z0 = virtualinvoke r3.<android.databinding.tool.CompilerChef: boolean hasAnythingToGenerate()>();

        if $z0 == 0 goto label7;

        $z1 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isEnableV2()>();

        if $z1 != 0 goto label3;

        $z5 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isLibrary()>();

        if $z5 == 0 goto label1;

        $z6 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isTestVariant()>();

        if $z6 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        virtualinvoke r3.<android.databinding.tool.CompilerChef: void writeViewBinderInterfaces(boolean)>($z7);

     label3:
        $z8 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isApp()>();

        $z9 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isTestVariant()>();

        if $z8 != $z9 goto label5;

        $z2 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isEnabledForTests()>();

        if $z2 == 0 goto label4;

        $z4 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isLibrary()>();

        if $z4 == 0 goto label5;

     label4:
        $z3 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isEnableV2()>();

        if $z3 == 0 goto label6;

     label5:
        $i0 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: int getMinApi()>();

        virtualinvoke r3.<android.databinding.tool.CompilerChef: void writeViewBinders(int)>($i0);

     label6:
        goto label8;

     label7:
        return null;

     label8:
        return r3;
    }

    public void <init>(javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs, java.util.List, android.databinding.tool.writer.JavaFileWriter)
    {
        android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat r0;
        javax.'annotation'.processing.ProcessingEnvironment r1;
        android.databinding.tool.DataBindingCompilerArgs r2;
        java.util.List r3;
        android.databinding.tool.writer.JavaFileWriter r4;

        r0 := @this: android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r2 := @parameter1: android.databinding.tool.DataBindingCompilerArgs;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.databinding.tool.writer.JavaFileWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "processingEnvironment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "args");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r3, "intermediates");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r4, "writer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: javax.'annotation'.processing.ProcessingEnvironment processingEnvironment> = r1;

        r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.DataBindingCompilerArgs args> = r2;

        r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: java.util.List intermediates> = r3;

        r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.tool.writer.JavaFileWriter writer> = r4;

        return;
    }

    static void <clinit>()
    {
        android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$Companion $r0;

        $r0 = new android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$Companion;

        specialinvoke $r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat$Companion Companion> = $r0;

        return;
    }

    public static final javax.'annotation'.processing.ProcessingEnvironment access$getProcessingEnvironment$p(android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat)
    {
        android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat $r0;
        javax.'annotation'.processing.ProcessingEnvironment $r1;

        $r0 := @parameter0: android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat;

        $r1 = $r0.<android.databinding.annotationprocessor.ProcessExpressionsFromV1Compat: javax.'annotation'.processing.ProcessingEnvironment processingEnvironment>;

        return $r1;
    }

