androidx.compose.compiler.plugins.kotlin.WeakBindingTrace
<androidx.compose.compiler.plugins.kotlin.WeakBindingTrace: java.util.WeakHashMap map>
    public final void record(org.jetbrains.kotlin.util.slicedMap.WritableSlice, org.jetbrains.kotlin.ir.declarations.IrAttributeContainer, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.WeakBindingTrace r0;
        org.jetbrains.kotlin.util.slicedMap.WritableSlice r1;
        org.jetbrains.kotlin.ir.declarations.IrAttributeContainer r2, $r6, $r14;
        java.lang.Object r3, r4, $r7;
        java.util.WeakHashMap $r5, $r12;
        org.jetbrains.kotlin.util.slicedMap.KeyWithSlice $r8, $r10, $r16;
        org.jetbrains.kotlin.com.intellij.openapi.util.Key $r9, $r11, $r17;
        java.util.Map $r13;
        org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap $r18, r19, r20;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.WeakBindingTrace;

        r1 := @parameter0: org.jetbrains.kotlin.util.slicedMap.WritableSlice;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrAttributeContainer;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slice");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.WeakBindingTrace: java.util.WeakHashMap map>;

        $r6 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrAttributeContainer: org.jetbrains.kotlin.ir.declarations.IrAttributeContainer getAttributeOwnerId()>();

        $r7 = virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r18 = (org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap) $r7;

        if $r18 == null goto label1;

        goto label2;

     label1:
        $r18 = <org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap: org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap EMPTY_MAP>;

     label2:
        r19 = $r18;

        $r8 = interfaceinvoke r1.<org.jetbrains.kotlin.util.slicedMap.WritableSlice: org.jetbrains.kotlin.util.slicedMap.KeyWithSlice getKey()>();

        $r9 = (org.jetbrains.kotlin.com.intellij.openapi.util.Key) $r8;

        r4 = interfaceinvoke r19.<org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap: java.lang.Object get(org.jetbrains.kotlin.com.intellij.openapi.util.Key)>($r9);

        if r4 == null goto label3;

        $r16 = interfaceinvoke r1.<org.jetbrains.kotlin.util.slicedMap.WritableSlice: org.jetbrains.kotlin.util.slicedMap.KeyWithSlice getKey()>();

        $r17 = (org.jetbrains.kotlin.com.intellij.openapi.util.Key) $r16;

        r19 = interfaceinvoke r19.<org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap: org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap minus(org.jetbrains.kotlin.com.intellij.openapi.util.Key)>($r17);

     label3:
        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.util.slicedMap.WritableSlice: org.jetbrains.kotlin.util.slicedMap.KeyWithSlice getKey()>();

        $r11 = (org.jetbrains.kotlin.com.intellij.openapi.util.Key) $r10;

        r20 = interfaceinvoke r19.<org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap: org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap plus(org.jetbrains.kotlin.com.intellij.openapi.util.Key,java.lang.Object)>($r11, r3);

        $r12 = r0.<androidx.compose.compiler.plugins.kotlin.WeakBindingTrace: java.util.WeakHashMap map>;

        $r13 = (java.util.Map) $r12;

        $r14 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrAttributeContainer: org.jetbrains.kotlin.ir.declarations.IrAttributeContainer getAttributeOwnerId()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r20);

        return;
    }

    public final java.lang.Object get(org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice, org.jetbrains.kotlin.ir.declarations.IrAttributeContainer)
    {
        androidx.compose.compiler.plugins.kotlin.WeakBindingTrace r0;
        org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice r1;
        org.jetbrains.kotlin.ir.declarations.IrAttributeContainer r2, $r4;
        java.util.WeakHashMap $r3;
        java.lang.Object $r5, $r9;
        org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap $r6;
        org.jetbrains.kotlin.util.slicedMap.KeyWithSlice $r7;
        org.jetbrains.kotlin.com.intellij.openapi.util.Key $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.WeakBindingTrace;

        r1 := @parameter0: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrAttributeContainer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slice");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.WeakBindingTrace: java.util.WeakHashMap map>;

        $r4 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrAttributeContainer: org.jetbrains.kotlin.ir.declarations.IrAttributeContainer getAttributeOwnerId()>();

        $r5 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap) $r5;

        if $r6 == null goto label1;

        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice: org.jetbrains.kotlin.util.slicedMap.KeyWithSlice getKey()>();

        $r8 = (org.jetbrains.kotlin.com.intellij.openapi.util.Key) $r7;

        $r9 = interfaceinvoke $r6.<org.jetbrains.kotlin.com.intellij.util.keyFMap.KeyFMap: java.lang.Object get(org.jetbrains.kotlin.com.intellij.openapi.util.Key)>($r8);

        goto label2;

     label1:
        $r9 = null;

     label2:
        return $r9;
    }

    public void <init>()
    {
        androidx.compose.compiler.plugins.kotlin.WeakBindingTrace r0;
        java.util.WeakHashMap $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.WeakBindingTrace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<androidx.compose.compiler.plugins.kotlin.WeakBindingTrace: java.util.WeakHashMap map> = $r1;

        return;
    }

