androidx.datastore.rxjava3.RxDataStoreDelegateKt
    public static final kotlin.properties.ReadOnlyProperty rxDataStore(java.lang.String, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, io.reactivex.rxjava3.core.Scheduler)
    {
        java.lang.String r0;
        androidx.datastore.core.Serializer r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        kotlin.jvm.functions.Function1 r3;
        io.reactivex.rxjava3.core.Scheduler r4;
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate $r5;
        kotlin.properties.ReadOnlyProperty $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.datastore.core.Serializer;

        r2 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "fileName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "produceMigrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "scheduler");

        $r5 = new androidx.datastore.rxjava3.RxDataStoreSingletonDelegate;

        specialinvoke $r5.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: void <init>(java.lang.String,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,io.reactivex.rxjava3.core.Scheduler)>(r0, r1, r2, r3, r4);

        $r6 = (kotlin.properties.ReadOnlyProperty) $r5;

        return $r6;
    }

    public static kotlin.properties.ReadOnlyProperty rxDataStore$default(java.lang.String, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, io.reactivex.rxjava3.core.Scheduler, int, java.lang.Object)
    {
        java.lang.String r0;
        androidx.datastore.core.Serializer r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        io.reactivex.rxjava3.core.Scheduler r3, r8;
        kotlin.properties.ReadOnlyProperty $r4;
        androidx.datastore.rxjava3.RxDataStoreDelegateKt$rxDataStore$1 $r5;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r6;
        kotlin.jvm.functions.Function1 r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.datastore.core.Serializer;

        r6 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r7 := @parameter3: kotlin.jvm.functions.Function1;

        r8 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r5 = <androidx.datastore.rxjava3.RxDataStoreDelegateKt$rxDataStore$1: androidx.datastore.rxjava3.RxDataStoreDelegateKt$rxDataStore$1 INSTANCE>;

        r7 = (kotlin.jvm.functions.Function1) $r5;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        r3 = staticinvoke <io.reactivex.rxjava3.schedulers.Schedulers: io.reactivex.rxjava3.core.Scheduler io()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "io()");

        r8 = r3;

     label3:
        $r4 = staticinvoke <androidx.datastore.rxjava3.RxDataStoreDelegateKt: kotlin.properties.ReadOnlyProperty rxDataStore(java.lang.String,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,io.reactivex.rxjava3.core.Scheduler)>(r0, r1, r6, r7, r8);

        return $r4;
    }

