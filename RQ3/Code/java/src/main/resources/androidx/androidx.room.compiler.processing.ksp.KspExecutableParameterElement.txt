androidx.room.compiler.processing.ksp.KspExecutableParameterElement
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion Companion>
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement enclosingElement>
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: int parameterIndex>
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: kotlin.Lazy type$delegate>
<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: kotlin.Lazy closestMemberContainer$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, androidx.room.compiler.processing.ksp.KspExecutableElement, com.google.devtools.ksp.symbol.KSValueParameter, int)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspExecutableElement r2;
        com.google.devtools.ksp.symbol.KSValueParameter r3;
        int i0;
        com.google.devtools.ksp.symbol.KSAnnotated $r4, $r7;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r8;
        androidx.room.compiler.processing.ksp.KspAnnotated $r9;
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement$type$2 $r10;
        kotlin.jvm.functions.Function0 $r11, $r14;
        kotlin.Lazy $r12, $r15;
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement$closestMemberContainer$2 $r13;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r3 := @parameter2: com.google.devtools.ksp.symbol.KSValueParameter;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "enclosingElement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "parameter");

        $r4 = (com.google.devtools.ksp.symbol.KSAnnotated) r3;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated)>(r1, $r4);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement enclosingElement> = r2;

        r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter> = r3;

        r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: int parameterIndex> = i0;

        $r6 = <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>;

        $r7 = (com.google.devtools.ksp.symbol.KSAnnotated) r3;

        $r5 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>;

        $r8 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_METHOD_PARAMETER()>();

        $r9 = virtualinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, $r7, $r8);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0> = $r9;

        $r10 = new androidx.room.compiler.processing.ksp.KspExecutableParameterElement$type$2;

        specialinvoke $r10.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement$type$2: void <init>(androidx.room.compiler.processing.ksp.KspExecutableParameterElement)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        $r12 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r11);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: kotlin.Lazy type$delegate> = $r12;

        $r13 = new androidx.room.compiler.processing.ksp.KspExecutableParameterElement$closestMemberContainer$2;

        specialinvoke $r13.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement$closestMemberContainer$2: void <init>(androidx.room.compiler.processing.ksp.KspExecutableParameterElement)>(r0);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r14);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: kotlin.Lazy closestMemberContainer$delegate> = $r15;

        return;
    }

    public androidx.room.compiler.processing.ksp.KspExecutableElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement enclosingElement>;

        return $r1;
    }

    public final com.google.devtools.ksp.symbol.KSValueParameter getParameter()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.google.devtools.ksp.symbol.KSValueParameter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>;

        return $r1;
    }

    public final int getParameterIndex()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $i0 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: int parameterIndex>;

        return $i0;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAllAnnotations()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.Set $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r1);

        return $z0;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(java.util.Collection)>(r1);

        return $z0;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.google.devtools.ksp.symbol.KSValueParameter $r1;
        com.google.devtools.ksp.symbol.KSName $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSValueParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        if $r3 != null goto label2;

     label1:
        $r3 = "_no_param_name";

     label2:
        return $r3;
    }

    public boolean getHasDefaultValue()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.google.devtools.ksp.symbol.KSValueParameter $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>;

        $z0 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSValueParameter: boolean getHasDefault()>();

        return $z0;
    }

    private final androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope jvmTypeResolver(com.google.devtools.ksp.symbol.KSDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter $r2;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r3;
        com.google.devtools.ksp.symbol.KSValueParameter $r4;
        int $i0;
        com.google.devtools.ksp.symbol.KSTypeReference $r5;
        com.google.devtools.ksp.symbol.KSAnnotated $r6;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        $r2 = new androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement getEnclosingElement()>();

        $i0 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: int parameterIndex>;

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>;

        $r5 = interfaceinvoke $r4.<com.google.devtools.ksp.symbol.KSValueParameter: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        $r6 = (com.google.devtools.ksp.symbol.KSAnnotated) $r5;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: void <init>(androidx.room.compiler.processing.ksp.KspExecutableElement,int,com.google.devtools.ksp.symbol.KSAnnotated,com.google.devtools.ksp.symbol.KSDeclaration)>($r3, $i0, $r6, r1);

        $r7 = (androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope) $r2;

        return $r7;
    }

    public androidx.room.compiler.processing.ksp.KspType getType()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: kotlin.Lazy type$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XMemberContainer $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: kotlin.Lazy closestMemberContainer$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XMemberContainer) $r2;

        return $r3;
    }

    public java.lang.String getFallbackLocationText()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String $r2, $r6, $r8;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement getEnclosingElement()>();

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspExecutableElement: java.lang.String getFallbackLocationText()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public androidx.room.compiler.processing.ksp.KspType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.XType r1, $r4;
        java.lang.String r2, $r9;
        androidx.room.compiler.processing.XMemberContainer $r3;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.ksp.KspType $r5, $r7, $r10;
        com.google.devtools.ksp.symbol.KSType $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()>();

        $r4 = interfaceinvoke $r3.<androidx.room.compiler.processing.XMemberContainer: androidx.room.compiler.processing.XType getType()>();

        if $r4 == null goto label2;

        $z1 = interfaceinvoke $r4.<androidx.room.compiler.processing.XType: boolean isSameType(androidx.room.compiler.processing.XType)>(r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 != 0 goto label4;

        $r10 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspType getType()>();

        return $r10;

     label4:
        $z0 = r1 instanceof androidx.room.compiler.processing.ksp.KspType;

        if $z0 != 0 goto label5;

        r2 = "Check failed.";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label5:
        $r5 = (androidx.room.compiler.processing.ksp.KspType) r1;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r7 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspType asMemberOf(com.google.devtools.ksp.symbol.KSType)>($r6);

        return $r7;
    }

    private final androidx.room.compiler.processing.ksp.KspType asMemberOf(com.google.devtools.ksp.symbol.KSType)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        com.google.devtools.ksp.symbol.KSType r1, $r8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        com.google.devtools.ksp.symbol.KSValueParameter $r3, $r5;
        com.google.devtools.ksp.symbol.KSTypeReference $r4;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r6;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r7;
        androidx.room.compiler.processing.ksp.KspType $r9, $r11;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r10;
        com.google.devtools.ksp.symbol.KSDeclaration $r13;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>;

        $r4 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSValueParameter: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        $r5 = r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSValueParameter parameter>;

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement getEnclosingElement()>();

        $r7 = virtualinvoke $r6.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()>();

        $r8 = staticinvoke <androidx.room.compiler.processing.ksp.KSAsMemberOfKt: com.google.devtools.ksp.symbol.KSType typeAsMemberOf(com.google.devtools.ksp.symbol.KSValueParameter,com.google.devtools.ksp.symbol.KSFunctionDeclaration,com.google.devtools.ksp.symbol.KSType)>($r5, $r7, r1);

        $r9 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.KSType)>($r4, $r8);

        if r1 == null goto label1;

        $r13 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        goto label2;

     label1:
        $r13 = null;

     label2:
        $r10 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope jvmTypeResolver(com.google.devtools.ksp.symbol.KSDeclaration)>($r13);

        $r11 = virtualinvoke $r9.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.processing.ksp.KspType withJvmTypeResolver(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)>($r10);

        return $r11;
    }

    public java.lang.String kindName()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        return "function parameter";
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XExecutableElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r1;
        androidx.room.compiler.processing.XExecutableElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XExecutableElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getType()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspType getType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement r0;
        androidx.room.compiler.processing.XType r1, $r3;
        androidx.room.compiler.processing.ksp.KspType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r3 = (androidx.room.compiler.processing.XType) $r2;

        return $r3;
    }

    public static final androidx.room.compiler.processing.ksp.KspType access$asMemberOf(androidx.room.compiler.processing.ksp.KspExecutableParameterElement, com.google.devtools.ksp.symbol.KSType)
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement $r0;
        com.google.devtools.ksp.symbol.KSType r1;
        androidx.room.compiler.processing.ksp.KspType $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspExecutableParameterElement;

        r1 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        $r2 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspType asMemberOf(com.google.devtools.ksp.symbol.KSType)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion Companion> = $r0;

        return;
    }

