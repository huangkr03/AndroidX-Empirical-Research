com.google.common.collect.ImmutableCollection
<com.google.common.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY>
    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <com.google.common.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY> = $r0;

        return;
    }

    void <init>()
    {
        com.google.common.collect.ImmutableCollection $r0;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        specialinvoke $r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.io.ObjectInputStream $r1;
        java.io.InvalidObjectException $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = new java.io.InvalidObjectException;

        specialinvoke $r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw $r2;
    }

    public final boolean add(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.Object $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean addAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.util.Collection $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final void clear()
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

<com.google.common.collect.ImmutableCollection: boolean contains(java.lang.Object)>
    int copyIntoArray(java.lang.Object[], int)
    {
        com.google.common.collect.ImmutableCollection $r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.NullPointerException r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r2;
    }

    java.lang.Object[] internalArray()
    {
        com.google.common.collect.ImmutableCollection $r0;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        return null;
    }

    int internalArrayEnd()
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    int internalArrayStart()
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

<com.google.common.collect.ImmutableCollection: boolean isPartialView()>
<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>
    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.ImmutableCollection $r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public final boolean remove(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.Object $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.util.Collection $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.util.Collection $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final java.lang.Object[] toArray()
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.Object[] $r1;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = <com.google.common.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY>;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;
    }

    public final java.lang.Object[] toArray(java.lang.Object[])
    {
        com.google.common.collect.ImmutableCollection $r0;
        java.lang.Object[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: int size()>();

        $i1 = lengthof $r1;

        if $i1 >= $i0 goto label2;

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: java.lang.Object[] internalArray()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: int internalArrayStart()>();

        $i1 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: int internalArrayEnd()>();

        $r1 = staticinvoke <com.google.common.collect.Platform: java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[])>($r2, $i0, $i1, $r1);

        return $r1;

     label1:
        $r1 = staticinvoke <com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>($r1, $i0);

        goto label3;

     label2:
        $i1 = lengthof $r1;

        if $i1 <= $i0 goto label3;

        $r1[$i0] = null;

     label3:
        virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: int copyIntoArray(java.lang.Object[],int)>($r1, 0);

        return $r1;
    }

    java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableCollection $r0;
        com.google.common.collect.ImmutableList$SerializedForm $r1;
        java.lang.Object[] $r2;

        $r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = new com.google.common.collect.ImmutableList$SerializedForm;

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>();

        specialinvoke $r1.<com.google.common.collect.ImmutableList$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r1;
    }

com.google.common.collect.ImmutableCollection$Builder
    static int expandedCapacity(int, int)
    {
        int $i0, $i1, $i2;
        java.lang.AssertionError $r0;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        if $i2 < 0 goto label2;

        $i0 = $i1 >> 1;

        $i1 = $i1 + $i0;

        $i1 = $i1 + 1;

        if $i1 >= $i2 goto label1;

        $i1 = $i2 + -1;

        $i1 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i1);

        $i1 = $i1 + $i1;

     label1:
        if $i1 >= 0 goto label3;

        return 2147483647;

     label2:
        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>("cannot store more than MAX_VALUE elements");

        throw $r0;

     label3:
        return $i1;
    }

