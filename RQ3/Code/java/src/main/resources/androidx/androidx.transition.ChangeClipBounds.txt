androidx.transition.ChangeClipBounds
<androidx.transition.ChangeClipBounds: java.lang.String PROPNAME_CLIP>
<androidx.transition.ChangeClipBounds: java.lang.String PROPNAME_BOUNDS>
<androidx.transition.ChangeClipBounds: java.lang.String[] sTransitionProperties>
    public java.lang.String[] getTransitionProperties()
    {
        androidx.transition.ChangeClipBounds r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.transition.ChangeClipBounds;

        $r1 = <androidx.transition.ChangeClipBounds: java.lang.String[] sTransitionProperties>;

        return $r1;
    }

    public void <init>()
    {
        androidx.transition.ChangeClipBounds r0;

        r0 := @this: androidx.transition.ChangeClipBounds;

        specialinvoke r0.<androidx.transition.Transition: void <init>()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.transition.ChangeClipBounds r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.transition.ChangeClipBounds;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void captureValues(androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeClipBounds r0;
        androidx.transition.TransitionValues r1;
        android.view.View r2;
        android.graphics.Rect r3, r4, $r7;
        int $i0, $i1, $i2;
        java.util.Map $r5, $r8;

        r0 := @this: androidx.transition.ChangeClipBounds;

        r1 := @parameter0: androidx.transition.TransitionValues;

        r2 = r1.<androidx.transition.TransitionValues: android.view.View view>;

        $i0 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        return;

     label1:
        r3 = staticinvoke <androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)>(r2);

        $r5 = r1.<androidx.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:clipBounds:clip", r3);

        if r3 != null goto label2;

        $r7 = new android.graphics.Rect;

        $i1 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke r2.<android.view.View: int getHeight()>();

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i2);

        r4 = $r7;

        $r8 = r1.<androidx.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:clipBounds:bounds", r4);

     label2:
        return;
    }

    public void captureStartValues(androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeClipBounds r0;
        androidx.transition.TransitionValues r1;

        r0 := @this: androidx.transition.ChangeClipBounds;

        r1 := @parameter0: androidx.transition.TransitionValues;

        specialinvoke r0.<androidx.transition.ChangeClipBounds: void captureValues(androidx.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeClipBounds r0;
        androidx.transition.TransitionValues r1;

        r0 := @this: androidx.transition.ChangeClipBounds;

        r1 := @parameter0: androidx.transition.TransitionValues;

        specialinvoke r0.<androidx.transition.ChangeClipBounds: void captureValues(androidx.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, androidx.transition.TransitionValues, androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeClipBounds r0;
        android.view.ViewGroup r1;
        androidx.transition.TransitionValues r2, r3;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.transition.RectEvaluator r4, r27;
        android.animation.ObjectAnimator r5;
        android.view.View r6, $r13, $r18;
        java.util.Map $r7, $r8, $r9, $r11, $r20, $r22;
        java.lang.Object $r10, $r12, $r21, $r23;
        android.graphics.Rect[] $r16;
        android.util.Property $r17;
        android.graphics.Rect r24, r25, r26;
        androidx.transition.ChangeClipBounds$1 r28;
        android.animation.Animator$AnimatorListener r29;

        r0 := @this: androidx.transition.ChangeClipBounds;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: androidx.transition.TransitionValues;

        r3 := @parameter2: androidx.transition.TransitionValues;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r7 = r2.<androidx.transition.TransitionValues: java.util.Map values>;

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>("android:clipBounds:clip");

        if $z1 == 0 goto label1;

        $r8 = r3.<androidx.transition.TransitionValues: java.util.Map values>;

        $z2 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>("android:clipBounds:clip");

        if $z2 != 0 goto label2;

     label1:
        return null;

     label2:
        $r9 = r2.<androidx.transition.TransitionValues: java.util.Map values>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:clipBounds:clip");

        r24 = (android.graphics.Rect) $r10;

        $r11 = r3.<androidx.transition.TransitionValues: java.util.Map values>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:clipBounds:clip");

        r25 = (android.graphics.Rect) $r12;

        if r25 != null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z0 = $z3;

        if r24 != null goto label5;

        if r25 != null goto label5;

        return null;

     label5:
        if r24 != null goto label6;

        $r22 = r2.<androidx.transition.TransitionValues: java.util.Map values>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:clipBounds:bounds");

        r24 = (android.graphics.Rect) $r23;

        goto label7;

     label6:
        if r25 != null goto label7;

        $r20 = r3.<androidx.transition.TransitionValues: java.util.Map values>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:clipBounds:bounds");

        r25 = (android.graphics.Rect) $r21;

     label7:
        $z4 = virtualinvoke r24.<android.graphics.Rect: boolean equals(java.lang.Object)>(r25);

        if $z4 == 0 goto label8;

        return null;

     label8:
        $r13 = r3.<androidx.transition.TransitionValues: android.view.View view>;

        staticinvoke <androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)>($r13, r24);

        r27 = new androidx.transition.RectEvaluator;

        r26 = new android.graphics.Rect;

        specialinvoke r26.<android.graphics.Rect: void <init>()>();

        specialinvoke r27.<androidx.transition.RectEvaluator: void <init>(android.graphics.Rect)>(r26);

        r4 = r27;

        $r18 = r3.<androidx.transition.TransitionValues: android.view.View view>;

        $r17 = <androidx.transition.ViewUtils: android.util.Property CLIP_BOUNDS>;

        $r16 = newarray (android.graphics.Rect)[2];

        $r16[0] = r24;

        $r16[1] = r25;

        r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r18, $r17, r4, $r16);

        if z0 == 0 goto label9;

        r6 = r3.<androidx.transition.TransitionValues: android.view.View view>;

        r28 = new androidx.transition.ChangeClipBounds$1;

        specialinvoke r28.<androidx.transition.ChangeClipBounds$1: void <init>(androidx.transition.ChangeClipBounds,android.view.View)>(r0, r6);

        r29 = (android.animation.Animator$AnimatorListener) r28;

        virtualinvoke r5.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r29);

     label9:
        return r5;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "android:clipBounds:clip";

        <androidx.transition.ChangeClipBounds: java.lang.String[] sTransitionProperties> = $r0;

        return;
    }

androidx.transition.ChangeClipBounds$1
<androidx.transition.ChangeClipBounds$1: android.view.View val$endView>
<androidx.transition.ChangeClipBounds$1: androidx.transition.ChangeClipBounds this$0>
    void <init>(androidx.transition.ChangeClipBounds, android.view.View)
    {
        androidx.transition.ChangeClipBounds$1 r0;
        androidx.transition.ChangeClipBounds r1;
        android.view.View r2;

        r0 := @this: androidx.transition.ChangeClipBounds$1;

        r1 := @parameter0: androidx.transition.ChangeClipBounds;

        r2 := @parameter1: android.view.View;

        r0.<androidx.transition.ChangeClipBounds$1: androidx.transition.ChangeClipBounds this$0> = r1;

        r0.<androidx.transition.ChangeClipBounds$1: android.view.View val$endView> = r2;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        androidx.transition.ChangeClipBounds$1 r0;
        android.animation.Animator r1;
        android.view.View $r2;

        r0 := @this: androidx.transition.ChangeClipBounds$1;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<androidx.transition.ChangeClipBounds$1: android.view.View val$endView>;

        staticinvoke <androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)>($r2, null);

        return;
    }

