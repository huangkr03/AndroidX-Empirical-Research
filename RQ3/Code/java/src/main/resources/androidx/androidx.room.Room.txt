androidx.room.Room
<androidx.room.Room: androidx.room.Room INSTANCE>
<androidx.room.Room: java.lang.String LOG_TAG>
<androidx.room.Room: java.lang.String MASTER_TABLE_NAME>
<androidx.room.Room: java.lang.String CURSOR_CONV_SUFFIX>
    private void <init>()
    {
        androidx.room.Room r0;

        r0 := @this: androidx.room.Room;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.Object getGeneratedImplementation(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0, $r19, r47;
        java.lang.String r1, r2, r3, r4, r5, $r7, $r10, $r26, $r33, $r38, $r43, $r44, $r45, r46;
        java.lang.Package $r6;
        java.lang.CharSequence $r8, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r22, $r23, $r24, $r25, $r29, $r30, $r31, $r32, $r36, $r37, $r39, $r40, $r41, $r42;
        java.lang.ClassLoader $r18;
        java.lang.Throwable $r20, $r27, $r34, r49, r50, r51;
        java.lang.RuntimeException $r21, $r28, $r35;
        boolean $z0, $z1;
        java.lang.Object r48;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "klass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "suffix");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        r2 = virtualinvoke $r6.<java.lang.Package: java.lang.String getName()>();

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        r3 = $r7;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "fullPackage");

        $r8 = (java.lang.CharSequence) r2;

        $i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        $r44 = r3;

        goto label04;

     label03:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        $r44 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r44, "this as java.lang.String).substring(startIndex)");

     label04:
        r4 = $r44;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>(r4, 46, 95, 0, 4, null);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r13 = (java.lang.CharSequence) r2;

        $i3 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        if $i3 != 0 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        if $z1 == 0 goto label08;

        $r45 = r5;

        goto label09;

     label08:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r45 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        r46 = $r45;

        $r18 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r46, 1, $r18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r19, "null cannot be cast to non-null type java.lang.Class<T of androidx.room.Room.getGeneratedImplementation>");

        r47 = $r19;

        r48 = virtualinvoke r47.<java.lang.Class: java.lang.Object newInstance()>();

     label10:
        goto label14;

     label11:
        $r34 := @caughtexception;

        r49 = $r34;

        $r35 = new java.lang.RuntimeException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find implementation for ");

        $r38 = virtualinvoke r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>($r43);

        throw $r35;

     label12:
        $r20 := @caughtexception;

        r50 = $r20;

        $r21 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access the constructor ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".canonicalName");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26);

        throw $r21;

     label13:
        $r27 := @caughtexception;

        r51 = $r27;

        $r28 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create an instance of ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".canonicalName");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33);

        throw $r28;

     label14:
        return r48;

        catch java.lang.ClassNotFoundException from label05 to label10 with label11;
        catch java.lang.IllegalAccessException from label05 to label10 with label12;
        catch java.lang.InstantiationException from label05 to label10 with label13;
    }

    public static final androidx.room.RoomDatabase$Builder inMemoryDatabaseBuilder(android.content.Context, java.lang.Class)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.room.RoomDatabase$Builder $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "klass");

        $r2 = new androidx.room.RoomDatabase$Builder;

        specialinvoke $r2.<androidx.room.RoomDatabase$Builder: void <init>(android.content.Context,java.lang.Class,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    public static final androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context, java.lang.Class, java.lang.String)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2, $r6, $r7;
        java.lang.CharSequence r3;
        androidx.room.RoomDatabase$Builder $r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "klass");

        r3 = (java.lang.CharSequence) r2;

        if r3 == null goto label1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        $r7 = "Cannot build a database with null or empty name. If you are trying to create an in memory database, use Room.inMemoryDatabaseBuilder";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r4 = new androidx.room.RoomDatabase$Builder;

        specialinvoke $r4.<androidx.room.RoomDatabase$Builder: void <init>(android.content.Context,java.lang.Class,java.lang.String)>(r0, r1, r2);

        return $r4;
    }

    static void <clinit>()
    {
        androidx.room.Room $r0;

        $r0 = new androidx.room.Room;

        specialinvoke $r0.<androidx.room.Room: void <init>()>();

        <androidx.room.Room: androidx.room.Room INSTANCE> = $r0;

        return;
    }

