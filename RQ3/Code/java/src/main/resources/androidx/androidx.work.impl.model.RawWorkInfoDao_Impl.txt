androidx.work.impl.model.RawWorkInfoDao_Impl
<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>
    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.room.RoomDatabase r1;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter0: androidx.room.RoomDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db> = r1;

        return;
    }

    public java.util.List getWorkInfoPojos(androidx.sqlite.db.SupportSQLiteQuery)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteQuery r1, r2;
        android.database.Cursor r3;
        int i0, i1, i2, i3, i4, $i5, i6, i7, i8;
        androidx.collection.ArrayMap r4, r5, $r11, $r12;
        java.lang.String r6, r7, r25, r28, r32;
        java.lang.Throwable r8, $r24;
        androidx.room.RoomDatabase $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r13, $r18, $r19, $r22, $r23, r26, r27, r29, r30, r31, r36, r37, r39;
        androidx.work.impl.model.WorkTypeConverters $r14;
        java.lang.Object $r15, $r16, $r20, $r21;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r17, r38;
        androidx.work.WorkInfo$State r33;
        androidx.work.Data r34;
        byte[] r35;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteQuery;

        r2 = r1;

        $r9 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r9.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r10 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r10, r2, 1, null);

     label01:
        i0 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r3, "id");

        i1 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r3, "state");

        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r3, "output");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r3, "run_attempt_count");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r3, "generation");

        $r11 = new androidx.collection.ArrayMap;

        specialinvoke $r11.<androidx.collection.ArrayMap: void <init>()>();

        r4 = $r11;

        $r12 = new androidx.collection.ArrayMap;

        specialinvoke $r12.<androidx.collection.ArrayMap: void <init>()>();

        r5 = $r12;

     label02:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label05;

        r25 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r20 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (java.util.ArrayList) $r20;

        if r26 != null goto label03;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r27 = $r23;

        virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r25, r27);

     label03:
        r28 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r21 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r28);

        r29 = (java.util.ArrayList) $r21;

        if r29 != null goto label04;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r30 = $r22;

        virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r28, r30);

     label04:
        goto label02;

     label05:
        interfaceinvoke r3.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r4);

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r5);

        $r13 = new java.util.ArrayList;

        $i5 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i5);

        r31 = $r13;

     label06:
        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label22;

        if i0 != -1 goto label07;

        r32 = null;

        goto label09;

     label07:
        $z2 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z2 == 0 goto label08;

        r32 = null;

        goto label09;

     label08:
        r32 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

     label09:
        if i1 != -1 goto label10;

        r33 = null;

        goto label11;

     label10:
        i6 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i1);

        $r14 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r33 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i6);

     label11:
        if i2 != -1 goto label12;

        r34 = null;

        goto label15;

     label12:
        $z3 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z3 == 0 goto label13;

        r35 = null;

        goto label14;

     label13:
        r35 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i2);

     label14:
        r34 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r35);

     label15:
        if i3 != -1 goto label16;

        i7 = 0;

        goto label17;

     label16:
        i7 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i3);

     label17:
        if i4 != -1 goto label18;

        i8 = 0;

        goto label19;

     label18:
        i8 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i4);

     label19:
        r6 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r15 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r36 = (java.util.ArrayList) $r15;

        if r36 != null goto label20;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r36 = $r19;

     label20:
        r7 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r16 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r37 = (java.util.ArrayList) $r16;

        if r37 != null goto label21;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r37 = $r18;

     label21:
        $r17 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r17.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r32, r33, r34, i7, i8, r36, r37);

        r38 = $r17;

        interfaceinvoke r31.<java.util.List: boolean add(java.lang.Object)>(r38);

        goto label06;

     label22:
        r39 = r31;

     label23:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return r39;

     label24:
        $r24 := @caughtexception;

        r8 = $r24;

     label25:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r8;

        catch java.lang.Throwable from label01 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public androidx.lifecycle.LiveData getWorkInfoPojosLiveData(androidx.sqlite.db.SupportSQLiteQuery)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteQuery r1, r2;
        androidx.room.RoomDatabase $r3;
        androidx.room.InvalidationTracker $r4;
        java.lang.String[] $r5;
        androidx.work.impl.model.RawWorkInfoDao_Impl$1 $r6;
        androidx.lifecycle.LiveData $r7;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteQuery;

        r2 = r1;

        $r3 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>;

        $r4 = virtualinvoke $r3.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "WorkTag";

        $r5[1] = "WorkProgress";

        $r5[2] = "WorkSpec";

        $r6 = new androidx.work.impl.model.RawWorkInfoDao_Impl$1;

        specialinvoke $r6.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: void <init>(androidx.work.impl.model.RawWorkInfoDao_Impl,androidx.sqlite.db.SupportSQLiteQuery)>(r0, r2);

        $r7 = virtualinvoke $r4.<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>($r5, 0, $r6);

        return $r7;
    }

    public static java.util.List getRequiredConverters()
    {
        java.util.List $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    private void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.collection.ArrayMap r1, $r12, $r18, r20;
        java.util.Set r2;
        androidx.room.RoomSQLiteQuery r3;
        java.lang.String r4, $r14, r22, r24, r26;
        java.util.ArrayList r5, $r16;
        java.lang.Throwable r6, $r19;
        boolean $z0, $z1, $z2, $z3;
        int $i0, i1, i2, i3, i4, i5, i6, i7;
        androidx.room.RoomDatabase $r9;
        java.lang.Object $r10, $r11, $r13, $r15;
        java.lang.StringBuilder r21;
        java.util.Iterator r23;
        android.database.Cursor r25;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter0: androidx.collection.ArrayMap;

        r2 = virtualinvoke r1.<androidx.collection.ArrayMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

        if $i0 <= 999 goto label05;

        $r12 = new androidx.collection.ArrayMap;

        specialinvoke $r12.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r20 = $r12;

        i1 = 0;

        i2 = 0;

        i3 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

     label02:
        if i2 >= i3 goto label03;

        $r13 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r14 = (java.lang.String) $r13;

        $r15 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r16 = (java.util.ArrayList) $r15;

        virtualinvoke r20.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16);

        i2 = i2 + 1;

        i1 = i1 + 1;

        if i1 != 999 goto label02;

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r20);

        $r18 = new androidx.collection.ArrayMap;

        specialinvoke $r18.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r20 = $r18;

        i1 = 0;

        goto label02;

     label03:
        if i1 <= 0 goto label04;

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r20);

     label04:
        return;

     label05:
        r21 = staticinvoke <androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT `tag`,`work_spec_id` FROM `WorkTag` WHERE `work_spec_id` IN (");

        i4 = interfaceinvoke r2.<java.util.Set: int size()>();

        staticinvoke <androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)>(r21, i4);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r22 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = 0 + i4;

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>(r22, i5);

        i6 = 1;

        r23 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r11 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r11;

        if r24 != null goto label07;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(i6);

        goto label08;

     label07:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(i6, r24);

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        $r9 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>;

        r25 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r9, r3, 0, null);

     label10:
        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r25, "work_spec_id");

        if i7 != -1 goto label12;

     label11:
        interfaceinvoke r25.<android.database.Cursor: void close()>();

        return;

     label12:
        $z2 = interfaceinvoke r25.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label16;

        r4 = interfaceinvoke r25.<android.database.Cursor: java.lang.String getString(int)>(i7);

        $r10 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.util.ArrayList) $r10;

        if r5 == null goto label15;

        $z3 = interfaceinvoke r25.<android.database.Cursor: boolean isNull(int)>(0);

        if $z3 == 0 goto label13;

        r26 = null;

        goto label14;

     label13:
        r26 = interfaceinvoke r25.<android.database.Cursor: java.lang.String getString(int)>(0);

     label14:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r26);

     label15:
        goto label12;

     label16:
        interfaceinvoke r25.<android.database.Cursor: void close()>();

        goto label19;

     label17:
        $r19 := @caughtexception;

        r6 = $r19;

     label18:
        interfaceinvoke r25.<android.database.Cursor: void close()>();

        throw r6;

     label19:
        return;

        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.collection.ArrayMap r1, $r13, $r19, r21;
        java.util.Set r2;
        androidx.room.RoomSQLiteQuery r3;
        java.lang.String r4, $r15, r23, r25;
        java.util.ArrayList r5, $r17;
        androidx.work.Data r6;
        java.lang.Throwable r7, $r20;
        boolean $z0, $z1, $z2, $z3;
        int $i0, i1, i2, i3, i4, i5, i6, i7;
        androidx.room.RoomDatabase $r10;
        java.lang.Object $r11, $r12, $r14, $r16;
        java.lang.StringBuilder r22;
        java.util.Iterator r24;
        android.database.Cursor r26;
        byte[] r27;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter0: androidx.collection.ArrayMap;

        r2 = virtualinvoke r1.<androidx.collection.ArrayMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

        if $i0 <= 999 goto label05;

        $r13 = new androidx.collection.ArrayMap;

        specialinvoke $r13.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r21 = $r13;

        i1 = 0;

        i2 = 0;

        i3 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

     label02:
        if i2 >= i3 goto label03;

        $r14 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r17 = (java.util.ArrayList) $r16;

        virtualinvoke r21.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        i2 = i2 + 1;

        i1 = i1 + 1;

        if i1 != 999 goto label02;

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r21);

        $r19 = new androidx.collection.ArrayMap;

        specialinvoke $r19.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r21 = $r19;

        i1 = 0;

        goto label02;

     label03:
        if i1 <= 0 goto label04;

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r21);

     label04:
        return;

     label05:
        r22 = staticinvoke <androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT `progress`,`work_spec_id` FROM `WorkProgress` WHERE `work_spec_id` IN (");

        i4 = interfaceinvoke r2.<java.util.Set: int size()>();

        staticinvoke <androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)>(r22, i4);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r23 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = 0 + i4;

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>(r23, i5);

        i6 = 1;

        r24 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r12 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r12;

        if r25 != null goto label07;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(i6);

        goto label08;

     label07:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(i6, r25);

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        $r10 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>;

        r26 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r10, r3, 0, null);

     label10:
        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r26, "work_spec_id");

        if i7 != -1 goto label12;

     label11:
        interfaceinvoke r26.<android.database.Cursor: void close()>();

        return;

     label12:
        $z2 = interfaceinvoke r26.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label16;

        r4 = interfaceinvoke r26.<android.database.Cursor: java.lang.String getString(int)>(i7);

        $r11 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.util.ArrayList) $r11;

        if r5 == null goto label15;

        $z3 = interfaceinvoke r26.<android.database.Cursor: boolean isNull(int)>(0);

        if $z3 == 0 goto label13;

        r27 = null;

        goto label14;

     label13:
        r27 = interfaceinvoke r26.<android.database.Cursor: byte[] getBlob(int)>(0);

     label14:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r27);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label15:
        goto label12;

     label16:
        interfaceinvoke r26.<android.database.Cursor: void close()>();

        goto label19;

     label17:
        $r20 := @caughtexception;

        r7 = $r20;

     label18:
        interfaceinvoke r26.<android.database.Cursor: void close()>();

        throw r7;

     label19:
        return;

        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    static androidx.room.RoomDatabase access$000(androidx.work.impl.model.RawWorkInfoDao_Impl)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.room.RoomDatabase $r1;

        r0 := @parameter0: androidx.work.impl.model.RawWorkInfoDao_Impl;

        $r1 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase __db>;

        return $r1;
    }

    static void access$100(androidx.work.impl.model.RawWorkInfoDao_Impl, androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.collection.ArrayMap r1;

        r0 := @parameter0: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter1: androidx.collection.ArrayMap;

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r1);

        return;
    }

    static void access$200(androidx.work.impl.model.RawWorkInfoDao_Impl, androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl r0;
        androidx.collection.ArrayMap r1;

        r0 := @parameter0: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r1 := @parameter1: androidx.collection.ArrayMap;

        specialinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r1);

        return;
    }

androidx.work.impl.model.RawWorkInfoDao_Impl$1
<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.sqlite.db.SupportSQLiteQuery val$_internalQuery>
<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.work.impl.model.RawWorkInfoDao_Impl this$0>
    void <init>(androidx.work.impl.model.RawWorkInfoDao_Impl, androidx.sqlite.db.SupportSQLiteQuery)
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl$1 r0;
        androidx.work.impl.model.RawWorkInfoDao_Impl r1;
        androidx.sqlite.db.SupportSQLiteQuery r2;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl$1;

        r1 := @parameter0: androidx.work.impl.model.RawWorkInfoDao_Impl;

        r2 := @parameter1: androidx.sqlite.db.SupportSQLiteQuery;

        r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.work.impl.model.RawWorkInfoDao_Impl this$0> = r1;

        r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.sqlite.db.SupportSQLiteQuery val$_internalQuery> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call() throws java.lang.Exception
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl$1 r0;
        android.database.Cursor r1;
        int i0, i1, i2, i3, i4, $i5, i6, i7, i8;
        androidx.collection.ArrayMap r2, r3, $r10, $r11;
        java.lang.String r4, r5, r26, r29, r33;
        java.lang.Throwable r6, $r25;
        androidx.work.impl.model.RawWorkInfoDao_Impl $r7, $r12, $r13;
        androidx.room.RoomDatabase $r8;
        androidx.sqlite.db.SupportSQLiteQuery $r9;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r14, $r19, $r20, $r23, $r24, r27, r28, r30, r31, r32, r37, r38, r40;
        androidx.work.impl.model.WorkTypeConverters $r15;
        java.lang.Object $r16, $r17, $r21, $r22;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r18, r39;
        androidx.work.WorkInfo$State r34;
        androidx.work.Data r35;
        byte[] r36;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl$1;

        $r7 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.work.impl.model.RawWorkInfoDao_Impl this$0>;

        $r8 = staticinvoke <androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.RawWorkInfoDao_Impl)>($r7);

        $r9 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.sqlite.db.SupportSQLiteQuery val$_internalQuery>;

        r1 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, $r9, 1, null);

     label01:
        i0 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r1, "id");

        i1 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r1, "state");

        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r1, "output");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r1, "run_attempt_count");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r1, "generation");

        $r10 = new androidx.collection.ArrayMap;

        specialinvoke $r10.<androidx.collection.ArrayMap: void <init>()>();

        r2 = $r10;

        $r11 = new androidx.collection.ArrayMap;

        specialinvoke $r11.<androidx.collection.ArrayMap: void <init>()>();

        r3 = $r11;

     label02:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label05;

        r26 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r21 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r26);

        r27 = (java.util.ArrayList) $r21;

        if r27 != null goto label03;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r28 = $r24;

        virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r26, r28);

     label03:
        r29 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r22 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r29);

        r30 = (java.util.ArrayList) $r22;

        if r30 != null goto label04;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r31 = $r23;

        virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r29, r31);

     label04:
        goto label02;

     label05:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        $r12 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.work.impl.model.RawWorkInfoDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.RawWorkInfoDao_Impl: void access$100(androidx.work.impl.model.RawWorkInfoDao_Impl,androidx.collection.ArrayMap)>($r12, r2);

        $r13 = r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: androidx.work.impl.model.RawWorkInfoDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.RawWorkInfoDao_Impl: void access$200(androidx.work.impl.model.RawWorkInfoDao_Impl,androidx.collection.ArrayMap)>($r13, r3);

        $r14 = new java.util.ArrayList;

        $i5 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i5);

        r32 = $r14;

     label06:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label22;

        if i0 != -1 goto label07;

        r33 = null;

        goto label09;

     label07:
        $z2 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z2 == 0 goto label08;

        r33 = null;

        goto label09;

     label08:
        r33 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

     label09:
        if i1 != -1 goto label10;

        r34 = null;

        goto label11;

     label10:
        i6 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i1);

        $r15 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r34 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i6);

     label11:
        if i2 != -1 goto label12;

        r35 = null;

        goto label15;

     label12:
        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z3 == 0 goto label13;

        r36 = null;

        goto label14;

     label13:
        r36 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(i2);

     label14:
        r35 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r36);

     label15:
        if i3 != -1 goto label16;

        i7 = 0;

        goto label17;

     label16:
        i7 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i3);

     label17:
        if i4 != -1 goto label18;

        i8 = 0;

        goto label19;

     label18:
        i8 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i4);

     label19:
        r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r16 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r37 = (java.util.ArrayList) $r16;

        if r37 != null goto label20;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r37 = $r20;

     label20:
        r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r17 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r38 = (java.util.ArrayList) $r17;

        if r38 != null goto label21;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r38 = $r19;

     label21:
        $r18 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r18.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r33, r34, r35, i7, i8, r37, r38);

        r39 = $r18;

        interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>(r39);

        goto label06;

     label22:
        r40 = r32;

     label23:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r40;

     label24:
        $r25 := @caughtexception;

        r6 = $r25;

     label25:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r6;

        catch java.lang.Throwable from label01 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.work.impl.model.RawWorkInfoDao_Impl$1 r0;
        java.util.List $r1;

        r0 := @this: androidx.work.impl.model.RawWorkInfoDao_Impl$1;

        $r1 = virtualinvoke r0.<androidx.work.impl.model.RawWorkInfoDao_Impl$1: java.util.List call()>();

        return $r1;
    }

