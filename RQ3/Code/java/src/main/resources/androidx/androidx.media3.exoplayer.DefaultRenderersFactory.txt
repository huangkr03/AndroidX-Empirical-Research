androidx.media3.exoplayer.DefaultRenderersFactory
<androidx.media3.exoplayer.DefaultRenderersFactory: long DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS>
<androidx.media3.exoplayer.DefaultRenderersFactory: int EXTENSION_RENDERER_MODE_OFF>
<androidx.media3.exoplayer.DefaultRenderersFactory: int EXTENSION_RENDERER_MODE_ON>
<androidx.media3.exoplayer.DefaultRenderersFactory: int EXTENSION_RENDERER_MODE_PREFER>
<androidx.media3.exoplayer.DefaultRenderersFactory: int MAX_DROPPED_VIDEO_FRAME_COUNT_TO_NOTIFY>
<androidx.media3.exoplayer.DefaultRenderersFactory: java.lang.String TAG>
<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>
<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory>
<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>
<androidx.media3.exoplayer.DefaultRenderersFactory: long allowedVideoJoiningTimeMs>
<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableDecoderFallback>
<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector>
<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableFloatOutput>
<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableAudioTrackPlaybackParams>
<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableOffload>
    public void <init>(android.content.Context)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory $r2;
        androidx.media3.exoplayer.mediacodec.MediaCodecSelector $r3;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context> = r1;

        $r2 = new androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory;

        specialinvoke $r2.<androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory: void <init>()>();

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory> = $r2;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode> = 0;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: long allowedVideoJoiningTimeMs> = 5000L;

        $r3 = <androidx.media3.exoplayer.mediacodec.MediaCodecSelector: androidx.media3.exoplayer.mediacodec.MediaCodecSelector DEFAULT>;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector> = $r3;

        return;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setExtensionRendererMode(int)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode> = i0;

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory forceEnableMediaCodecAsynchronousQueueing()
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory $r1;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        $r1 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory>;

        virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory forceEnableAsynchronous()>();

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory forceDisableMediaCodecAsynchronousQueueing()
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory $r1;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        $r1 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory>;

        virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory forceDisableAsynchronous()>();

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory experimentalSetSynchronizeCodecInteractionsWithQueueingEnabled(boolean)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        boolean z0;
        androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory $r1;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory>;

        virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory: void experimentalSetSynchronizeCodecInteractionsWithQueueingEnabled(boolean)>(z0);

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setEnableDecoderFallback(boolean)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableDecoderFallback> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setMediaCodecSelector(androidx.media3.exoplayer.mediacodec.MediaCodecSelector)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecSelector r1;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecSelector;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setEnableAudioFloatOutput(boolean)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableFloatOutput> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setEnableAudioOffload(boolean)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableOffload> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setEnableAudioTrackPlaybackParams(boolean)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableAudioTrackPlaybackParams> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.DefaultRenderersFactory setAllowedVideoJoiningTimeMs(long)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.DefaultRenderersFactory: long allowedVideoJoiningTimeMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.Renderer[] createRenderers(android.os.Handler, androidx.media3.exoplayer.video.VideoRendererEventListener, androidx.media3.exoplayer.audio.AudioRendererEventListener, androidx.media3.exoplayer.text.TextOutput, androidx.media3.exoplayer.metadata.MetadataOutput)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.video.VideoRendererEventListener r2;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r3;
        androidx.media3.exoplayer.text.TextOutput r4;
        androidx.media3.exoplayer.metadata.MetadataOutput r5;
        java.util.ArrayList r6, $r8;
        androidx.media3.exoplayer.audio.AudioSink r7;
        long $l0;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.media3.exoplayer.mediacodec.MediaCodecSelector $r9, $r21;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.Context $r10, $r11, $r12, $r14, $r16, $r17, $r22;
        android.os.Looper $r13, $r15;
        androidx.media3.exoplayer.Renderer[] $r18, $r20;
        java.lang.Object[] $r19;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.video.VideoRendererEventListener;

        r3 := @parameter2: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        r4 := @parameter3: androidx.media3.exoplayer.text.TextOutput;

        r5 := @parameter4: androidx.media3.exoplayer.metadata.MetadataOutput;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r6 = $r8;

        $r10 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $i1 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>;

        $r9 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector>;

        $z0 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableDecoderFallback>;

        $l0 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: long allowedVideoJoiningTimeMs>;

        virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: void buildVideoRenderers(android.content.Context,int,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,long,java.util.ArrayList)>($r10, $i1, $r9, $z0, r1, r2, $l0, r6);

        $r11 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $z3 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableFloatOutput>;

        $z2 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableAudioTrackPlaybackParams>;

        $z1 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableOffload>;

        r7 = virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.audio.AudioSink buildAudioSink(android.content.Context,boolean,boolean,boolean)>($r11, $z3, $z2, $z1);

        if r7 == null goto label1;

        $r22 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $i6 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>;

        $r21 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector>;

        $z4 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: boolean enableDecoderFallback>;

        virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: void buildAudioRenderers(android.content.Context,int,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,androidx.media3.exoplayer.audio.AudioSink,android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,java.util.ArrayList)>($r22, $i6, $r21, $z4, r7, r1, r3, r6);

     label1:
        $r12 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $r13 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        $i2 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>;

        virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: void buildTextRenderers(android.content.Context,androidx.media3.exoplayer.text.TextOutput,android.os.Looper,int,java.util.ArrayList)>($r12, r4, $r13, $i2, r6);

        $r14 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $r15 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        $i3 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>;

        virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: void buildMetadataRenderers(android.content.Context,androidx.media3.exoplayer.metadata.MetadataOutput,android.os.Looper,int,java.util.ArrayList)>($r14, r5, $r15, $i3, r6);

        $r16 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $i4 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>;

        virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: void buildCameraMotionRenderers(android.content.Context,int,java.util.ArrayList)>($r16, $i4, r6);

        $r17 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: android.content.Context context>;

        $i5 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: int extensionRendererMode>;

        virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: void buildMiscellaneousRenderers(android.content.Context,android.os.Handler,int,java.util.ArrayList)>($r17, r1, $i5, r6);

        $r18 = newarray (androidx.media3.exoplayer.Renderer)[0];

        $r19 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        $r20 = (androidx.media3.exoplayer.Renderer[]) $r19;

        return $r20;
    }

    protected void buildVideoRenderers(android.content.Context, int, androidx.media3.exoplayer.mediacodec.MediaCodecSelector, boolean, android.os.Handler, androidx.media3.exoplayer.video.VideoRendererEventListener, long, java.util.ArrayList)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        int i0, $i2, i3, i4;
        androidx.media3.exoplayer.mediacodec.MediaCodecSelector r2;
        boolean z0;
        android.os.Handler r3;
        androidx.media3.exoplayer.video.VideoRendererEventListener r4;
        long l1;
        java.util.ArrayList r5;
        androidx.media3.exoplayer.video.MediaCodecVideoRenderer r6, r39;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory $r8;
        java.lang.Class[] $r9, $r16;
        java.lang.Class $r10, $r11, $r17, $r18, r29, r34;
        java.lang.Object[] $r12, $r19;
        java.lang.Long $r13, $r20;
        java.lang.Integer $r14, $r21;
        java.lang.Object $r15, $r22;
        java.lang.Throwable $r23, $r24, $r26, $r28, r32, r33, r37, r38, r42, r43;
        java.lang.reflect.Constructor r30, r35;
        androidx.media3.exoplayer.Renderer r31, r36;
        java.lang.RuntimeException r40, r41;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.exoplayer.mediacodec.MediaCodecSelector;

        z0 := @parameter3: boolean;

        r3 := @parameter4: android.os.Handler;

        r4 := @parameter5: androidx.media3.exoplayer.video.VideoRendererEventListener;

        l1 := @parameter6: long;

        r5 := @parameter7: java.util.ArrayList;

        r39 = new androidx.media3.exoplayer.video.MediaCodecVideoRenderer;

        $r8 = virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory getCodecAdapterFactory()>();

        specialinvoke r39.<androidx.media3.exoplayer.video.MediaCodecVideoRenderer: void <init>(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,long,boolean,android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,int)>(r1, $r8, r2, l1, z0, r3, r4, 50);

        r6 = r39;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        if i0 != 0 goto label01;

        return;

     label01:
        i3 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i0 != 2 goto label02;

        i3 = i3 + -1;

     label02:
        r29 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.decoder.vp9.LibvpxVideoRenderer");

        $r9 = newarray (java.lang.Class)[4];

        $r10 = <java.lang.Long: java.lang.Class TYPE>;

        $r9[0] = $r10;

        $r9[1] = class "Landroid/os/Handler;";

        $r9[2] = class "Landroidx/media3/exoplayer/video/VideoRendererEventListener;";

        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        $r9[3] = $r11;

        r30 = virtualinvoke r29.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

        $r12 = newarray (java.lang.Object)[4];

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r12[0] = $r13;

        $r12[1] = r3;

        $r12[2] = r4;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        $r12[3] = $r14;

        $r15 = virtualinvoke r30.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        r31 = (androidx.media3.exoplayer.Renderer) $r15;

        $i2 = i3;

        i3 = i3 + 1;

        virtualinvoke r5.<java.util.ArrayList: void add(int,java.lang.Object)>($i2, r31);

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("DefaultRenderersFactory", "Loaded LibvpxVideoRenderer.");

     label03:
        goto label06;

     label04:
        $r28 := @caughtexception;

        r32 = $r28;

        goto label06;

     label05:
        $r26 := @caughtexception;

        r33 = $r26;

        r40 = new java.lang.RuntimeException;

        specialinvoke r40.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error instantiating VP9 extension", r33);

        r42 = (java.lang.Throwable) r40;

        throw r42;

     label06:
        r34 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.decoder.av1.Libgav1VideoRenderer");

        $r16 = newarray (java.lang.Class)[4];

        $r17 = <java.lang.Long: java.lang.Class TYPE>;

        $r16[0] = $r17;

        $r16[1] = class "Landroid/os/Handler;";

        $r16[2] = class "Landroidx/media3/exoplayer/video/VideoRendererEventListener;";

        $r18 = <java.lang.Integer: java.lang.Class TYPE>;

        $r16[3] = $r18;

        r35 = virtualinvoke r34.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r16);

        $r19 = newarray (java.lang.Object)[4];

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r19[0] = $r20;

        $r19[1] = r3;

        $r19[2] = r4;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        $r19[3] = $r21;

        $r22 = virtualinvoke r35.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r19);

        r36 = (androidx.media3.exoplayer.Renderer) $r22;

        i4 = i3 + 1;

        virtualinvoke r5.<java.util.ArrayList: void add(int,java.lang.Object)>(i3, r36);

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("DefaultRenderersFactory", "Loaded Libgav1VideoRenderer.");

     label07:
        goto label10;

     label08:
        $r23 := @caughtexception;

        r37 = $r23;

        goto label10;

     label09:
        $r24 := @caughtexception;

        r38 = $r24;

        r41 = new java.lang.RuntimeException;

        specialinvoke r41.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error instantiating AV1 extension", r38);

        r43 = (java.lang.Throwable) r41;

        throw r43;

     label10:
        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.ClassNotFoundException from label06 to label07 with label08;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    protected void buildAudioRenderers(android.content.Context, int, androidx.media3.exoplayer.mediacodec.MediaCodecSelector, boolean, androidx.media3.exoplayer.audio.AudioSink, android.os.Handler, androidx.media3.exoplayer.audio.AudioRendererEventListener, java.util.ArrayList)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3, i4, i5;
        androidx.media3.exoplayer.mediacodec.MediaCodecSelector r2;
        boolean z0;
        androidx.media3.exoplayer.audio.AudioSink r3;
        android.os.Handler r4;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r5;
        java.util.ArrayList r6;
        androidx.media3.exoplayer.audio.MediaCodecAudioRenderer r7, r54;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory $r9;
        java.lang.Class[] $r10, $r13, $r16, $r19;
        java.lang.Object[] $r11, $r14, $r17, $r20;
        java.lang.Object $r12, $r15, $r18, $r21;
        java.lang.Throwable $r22, $r24, $r25, $r27, $r29, $r30, $r31, $r32, r37, r38, r42, r43, r47, r48, r52, r53, r59, r60, r61, r62;
        java.lang.Class r34, r39, r44, r49;
        java.lang.reflect.Constructor r35, r40, r45, r50;
        androidx.media3.exoplayer.Renderer r36, r41, r46, r51;
        java.lang.RuntimeException r55, r56, r57, r58;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.exoplayer.mediacodec.MediaCodecSelector;

        z0 := @parameter3: boolean;

        r3 := @parameter4: androidx.media3.exoplayer.audio.AudioSink;

        r4 := @parameter5: android.os.Handler;

        r5 := @parameter6: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        r6 := @parameter7: java.util.ArrayList;

        r54 = new androidx.media3.exoplayer.audio.MediaCodecAudioRenderer;

        $r9 = virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory getCodecAdapterFactory()>();

        specialinvoke r54.<androidx.media3.exoplayer.audio.MediaCodecAudioRenderer: void <init>(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.audio.AudioSink)>(r1, $r9, r2, z0, r4, r5, r3);

        r7 = r54;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        if i0 != 0 goto label01;

        return;

     label01:
        i4 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i0 != 2 goto label02;

        i4 = i4 + -1;

     label02:
        r34 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.decoder.midi.MidiRenderer");

        $r10 = newarray (java.lang.Class)[0];

        r35 = virtualinvoke r34.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r10);

        $r11 = newarray (java.lang.Object)[0];

        $r12 = virtualinvoke r35.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r11);

        r36 = (androidx.media3.exoplayer.Renderer) $r12;

        $i1 = i4;

        i4 = i4 + 1;

        virtualinvoke r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, r36);

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("DefaultRenderersFactory", "Loaded MidiRenderer.");

     label03:
        goto label06;

     label04:
        $r24 := @caughtexception;

        r37 = $r24;

        goto label06;

     label05:
        $r32 := @caughtexception;

        r38 = $r32;

        r55 = new java.lang.RuntimeException;

        specialinvoke r55.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error instantiating MIDI extension", r38);

        r59 = (java.lang.Throwable) r55;

        throw r59;

     label06:
        r39 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.decoder.opus.LibopusAudioRenderer");

        $r13 = newarray (java.lang.Class)[3];

        $r13[0] = class "Landroid/os/Handler;";

        $r13[1] = class "Landroidx/media3/exoplayer/audio/AudioRendererEventListener;";

        $r13[2] = class "Landroidx/media3/exoplayer/audio/AudioSink;";

        r40 = virtualinvoke r39.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r13);

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = r4;

        $r14[1] = r5;

        $r14[2] = r3;

        $r15 = virtualinvoke r40.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14);

        r41 = (androidx.media3.exoplayer.Renderer) $r15;

        $i2 = i4;

        i4 = i4 + 1;

        virtualinvoke r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i2, r41);

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("DefaultRenderersFactory", "Loaded LibopusAudioRenderer.");

     label07:
        goto label10;

     label08:
        $r29 := @caughtexception;

        r42 = $r29;

        goto label10;

     label09:
        $r27 := @caughtexception;

        r43 = $r27;

        r56 = new java.lang.RuntimeException;

        specialinvoke r56.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error instantiating Opus extension", r43);

        r60 = (java.lang.Throwable) r56;

        throw r60;

     label10:
        r44 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.decoder.flac.LibflacAudioRenderer");

        $r16 = newarray (java.lang.Class)[3];

        $r16[0] = class "Landroid/os/Handler;";

        $r16[1] = class "Landroidx/media3/exoplayer/audio/AudioRendererEventListener;";

        $r16[2] = class "Landroidx/media3/exoplayer/audio/AudioSink;";

        r45 = virtualinvoke r44.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r16);

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = r4;

        $r17[1] = r5;

        $r17[2] = r3;

        $r18 = virtualinvoke r45.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r17);

        r46 = (androidx.media3.exoplayer.Renderer) $r18;

        $i3 = i4;

        i4 = i4 + 1;

        virtualinvoke r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i3, r46);

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("DefaultRenderersFactory", "Loaded LibflacAudioRenderer.");

     label11:
        goto label14;

     label12:
        $r30 := @caughtexception;

        r47 = $r30;

        goto label14;

     label13:
        $r25 := @caughtexception;

        r48 = $r25;

        r57 = new java.lang.RuntimeException;

        specialinvoke r57.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error instantiating FLAC extension", r48);

        r61 = (java.lang.Throwable) r57;

        throw r61;

     label14:
        r49 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.media3.decoder.ffmpeg.FfmpegAudioRenderer");

        $r19 = newarray (java.lang.Class)[3];

        $r19[0] = class "Landroid/os/Handler;";

        $r19[1] = class "Landroidx/media3/exoplayer/audio/AudioRendererEventListener;";

        $r19[2] = class "Landroidx/media3/exoplayer/audio/AudioSink;";

        r50 = virtualinvoke r49.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r19);

        $r20 = newarray (java.lang.Object)[3];

        $r20[0] = r4;

        $r20[1] = r5;

        $r20[2] = r3;

        $r21 = virtualinvoke r50.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r20);

        r51 = (androidx.media3.exoplayer.Renderer) $r21;

        i5 = i4 + 1;

        virtualinvoke r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i4, r51);

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("DefaultRenderersFactory", "Loaded FfmpegAudioRenderer.");

     label15:
        goto label18;

     label16:
        $r31 := @caughtexception;

        r52 = $r31;

        goto label18;

     label17:
        $r22 := @caughtexception;

        r53 = $r22;

        r58 = new java.lang.RuntimeException;

        specialinvoke r58.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error instantiating FFmpeg extension", r53);

        r62 = (java.lang.Throwable) r58;

        throw r62;

     label18:
        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.ClassNotFoundException from label06 to label07 with label08;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.ClassNotFoundException from label10 to label11 with label12;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.ClassNotFoundException from label14 to label15 with label16;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    protected void buildTextRenderers(android.content.Context, androidx.media3.exoplayer.text.TextOutput, android.os.Looper, int, java.util.ArrayList)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        androidx.media3.exoplayer.text.TextOutput r2;
        android.os.Looper r3;
        int i0;
        java.util.ArrayList r4;
        androidx.media3.exoplayer.text.TextRenderer $r5;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.exoplayer.text.TextOutput;

        r3 := @parameter2: android.os.Looper;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.ArrayList;

        $r5 = new androidx.media3.exoplayer.text.TextRenderer;

        specialinvoke $r5.<androidx.media3.exoplayer.text.TextRenderer: void <init>(androidx.media3.exoplayer.text.TextOutput,android.os.Looper)>(r2, r3);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return;
    }

    protected void buildMetadataRenderers(android.content.Context, androidx.media3.exoplayer.metadata.MetadataOutput, android.os.Looper, int, java.util.ArrayList)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        androidx.media3.exoplayer.metadata.MetadataOutput r2;
        android.os.Looper r3;
        int i0;
        java.util.ArrayList r4;
        androidx.media3.exoplayer.metadata.MetadataRenderer $r5;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.exoplayer.metadata.MetadataOutput;

        r3 := @parameter2: android.os.Looper;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.ArrayList;

        $r5 = new androidx.media3.exoplayer.metadata.MetadataRenderer;

        specialinvoke $r5.<androidx.media3.exoplayer.metadata.MetadataRenderer: void <init>(androidx.media3.exoplayer.metadata.MetadataOutput,android.os.Looper)>(r2, r3);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return;
    }

    protected void buildCameraMotionRenderers(android.content.Context, int, java.util.ArrayList)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        int i0;
        java.util.ArrayList r2;
        androidx.media3.exoplayer.video.spherical.CameraMotionRenderer $r3;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.ArrayList;

        $r3 = new androidx.media3.exoplayer.video.spherical.CameraMotionRenderer;

        specialinvoke $r3.<androidx.media3.exoplayer.video.spherical.CameraMotionRenderer: void <init>()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    protected void buildMiscellaneousRenderers(android.content.Context, android.os.Handler, int, java.util.ArrayList)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        android.os.Handler r2;
        int i0;
        java.util.ArrayList r3;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        return;
    }

    protected androidx.media3.exoplayer.audio.AudioSink buildAudioSink(android.content.Context, boolean, boolean, boolean)
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        android.content.Context r1;
        boolean z0, z1, z2;
        androidx.media3.exoplayer.audio.DefaultAudioSink$Builder $r2, $r4, $r5, $r6, $r7;
        androidx.media3.exoplayer.audio.AudioCapabilities $r3;
        androidx.media3.exoplayer.audio.DefaultAudioSink $r8;
        byte $b0;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r2 = new androidx.media3.exoplayer.audio.DefaultAudioSink$Builder;

        specialinvoke $r2.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: void <init>()>();

        $r3 = staticinvoke <androidx.media3.exoplayer.audio.AudioCapabilities: androidx.media3.exoplayer.audio.AudioCapabilities getCapabilities(android.content.Context)>(r1);

        $r4 = virtualinvoke $r2.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setAudioCapabilities(androidx.media3.exoplayer.audio.AudioCapabilities)>($r3);

        $r5 = virtualinvoke $r4.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setEnableFloatOutput(boolean)>(z0);

        $r6 = virtualinvoke $r5.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setEnableAudioTrackPlaybackParams(boolean)>(z1);

        if z2 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        $r7 = virtualinvoke $r6.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setOffloadMode(int)>($b0);

        $r8 = virtualinvoke $r7.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink build()>();

        return $r8;
    }

    protected androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory getCodecAdapterFactory()
    {
        androidx.media3.exoplayer.DefaultRenderersFactory r0;
        androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory $r1;

        r0 := @this: androidx.media3.exoplayer.DefaultRenderersFactory;

        $r1 = r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory>;

        return $r1;
    }

androidx.media3.exoplayer.DefaultRenderersFactory$ExtensionRendererMode
