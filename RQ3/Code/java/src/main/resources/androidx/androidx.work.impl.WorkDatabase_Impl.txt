androidx.work.impl.WorkDatabase_Impl
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao _workSpecDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.DependencyDao _dependencyDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkTagDao _workTagDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkNameDao _workNameDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao _workProgressDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao _preferenceDao>
<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.RawWorkInfoDao _rawWorkInfoDao>
    public void <init>()
    {
        androidx.work.impl.WorkDatabase_Impl r0;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        specialinvoke r0.<androidx.work.impl.WorkDatabase: void <init>()>();

        return;
    }

    protected androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        androidx.room.DatabaseConfiguration r1;
        androidx.room.RoomOpenHelper r2, $r5;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration r3;
        androidx.sqlite.db.SupportSQLiteOpenHelper r4;
        androidx.work.impl.WorkDatabase_Impl$1 $r6;
        android.content.Context $r7;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder $r8, $r10, $r11;
        java.lang.String $r9;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Factory $r12;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        r1 := @parameter0: androidx.room.DatabaseConfiguration;

        $r5 = new androidx.room.RoomOpenHelper;

        $r6 = new androidx.work.impl.WorkDatabase_Impl$1;

        specialinvoke $r6.<androidx.work.impl.WorkDatabase_Impl$1: void <init>(androidx.work.impl.WorkDatabase_Impl,int)>(r0, 16);

        specialinvoke $r5.<androidx.room.RoomOpenHelper: void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String)>(r1, $r6, "5181942b9ebc31ce68dacb56c16fd79f", "ae2044fb577e65ee8bb576ca48a2f06e");

        r2 = $r5;

        $r7 = r1.<androidx.room.DatabaseConfiguration: android.content.Context context>;

        $r8 = staticinvoke <androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context)>($r7);

        $r9 = r1.<androidx.room.DatabaseConfiguration: java.lang.String name>;

        $r10 = virtualinvoke $r8.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)>(r2);

        r3 = virtualinvoke $r11.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()>();

        $r12 = r1.<androidx.room.DatabaseConfiguration: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory sqliteOpenHelperFactory>;

        r4 = interfaceinvoke $r12.<androidx.sqlite.db.SupportSQLiteOpenHelper$Factory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)>(r3);

        return r4;
    }

    protected androidx.room.InvalidationTracker createInvalidationTracker()
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.HashMap r1, r2, $r3, $r4;
        androidx.room.InvalidationTracker $r5;
        java.lang.String[] $r6;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(0);

        r1 = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(0);

        r2 = $r4;

        $r5 = new androidx.room.InvalidationTracker;

        $r6 = newarray (java.lang.String)[7];

        $r6[0] = "Dependency";

        $r6[1] = "WorkSpec";

        $r6[2] = "WorkTag";

        $r6[3] = "SystemIdInfo";

        $r6[4] = "WorkName";

        $r6[5] = "WorkProgress";

        $r6[6] = "Preference";

        specialinvoke $r5.<androidx.room.InvalidationTracker: void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[])>(r0, r1, r2, $r6);

        return $r5;
    }

    public void clearAllTables()
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r2, $r5;
        androidx.sqlite.db.SupportSQLiteOpenHelper $r3;
        int $i0;
        android.database.Cursor $r4, $r6;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        specialinvoke r0.<androidx.work.impl.WorkDatabase: void assertNotMainThread()>();

        $r3 = specialinvoke r0.<androidx.work.impl.WorkDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper()>();

        r1 = interfaceinvoke $r3.<androidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

     label03:
        if z0 != 0 goto label04;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("PRAGMA foreign_keys = FALSE");

     label04:
        specialinvoke r0.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

        if z0 == 0 goto label05;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("PRAGMA defer_foreign_keys = TRUE");

     label05:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `Dependency`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `WorkSpec`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `WorkTag`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `SystemIdInfo`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `WorkName`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `WorkProgress`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM `Preference`");

        specialinvoke r0.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label06:
        specialinvoke r0.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        if z0 != 0 goto label07;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("PRAGMA foreign_keys = TRUE");

     label07:
        $r4 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>("PRAGMA wal_checkpoint(FULL)");

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        $z1 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: boolean inTransaction()>();

        if $z1 != 0 goto label11;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("VACUUM");

        goto label11;

     label08:
        $r5 := @caughtexception;

        r2 = $r5;

        specialinvoke r0.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        if z0 != 0 goto label09;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("PRAGMA foreign_keys = TRUE");

     label09:
        $r6 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>("PRAGMA wal_checkpoint(FULL)");

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        $z2 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: boolean inTransaction()>();

        if $z2 != 0 goto label10;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("VACUUM");

     label10:
        throw r2;

     label11:
        return;

        catch java.lang.Throwable from label03 to label06 with label08;
    }

    protected java.util.Map getRequiredTypeConverters()
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.HashMap r1, $r2;
        java.util.List $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r1 = $r2;

        $r3 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/WorkSpecDao;", $r3);

        $r5 = staticinvoke <androidx.work.impl.model.DependencyDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/DependencyDao;", $r5);

        $r7 = staticinvoke <androidx.work.impl.model.WorkTagDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/WorkTagDao;", $r7);

        $r9 = staticinvoke <androidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/SystemIdInfoDao;", $r9);

        $r11 = staticinvoke <androidx.work.impl.model.WorkNameDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/WorkNameDao;", $r11);

        $r13 = staticinvoke <androidx.work.impl.model.WorkProgressDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/WorkProgressDao;", $r13);

        $r15 = staticinvoke <androidx.work.impl.model.PreferenceDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/PreferenceDao;", $r15);

        $r17 = staticinvoke <androidx.work.impl.model.RawWorkInfoDao_Impl: java.util.List getRequiredConverters()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Landroidx/work/impl/model/RawWorkInfoDao;", $r17);

        return r1;
    }

    public java.util.Set getRequiredAutoMigrationSpecs()
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.HashSet r1, $r2;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        return r1;
    }

    public java.util.List getAutoMigrations(java.util.Map)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.Map r1;
        java.lang.Object[] $r2;
        androidx.work.impl.WorkDatabase_AutoMigration_13_14_Impl $r3;
        androidx.work.impl.WorkDatabase_AutoMigration_14_15_Impl $r4;
        java.util.List $r5;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        r1 := @parameter0: java.util.Map;

        $r2 = newarray (androidx.room.migration.Migration)[2];

        $r3 = new androidx.work.impl.WorkDatabase_AutoMigration_13_14_Impl;

        specialinvoke $r3.<androidx.work.impl.WorkDatabase_AutoMigration_13_14_Impl: void <init>()>();

        $r2[0] = $r3;

        $r4 = new androidx.work.impl.WorkDatabase_AutoMigration_14_15_Impl;

        specialinvoke $r4.<androidx.work.impl.WorkDatabase_AutoMigration_14_15_Impl: void <init>()>();

        $r2[1] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r5;
    }

    public androidx.work.impl.model.WorkSpecDao workSpecDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.WorkSpecDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.WorkSpecDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao _workSpecDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao _workSpecDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao _workSpecDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.WorkSpecDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.WorkSpecDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao _workSpecDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao _workSpecDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.DependencyDao dependencyDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.DependencyDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.DependencyDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.DependencyDao _dependencyDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.DependencyDao _dependencyDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.DependencyDao _dependencyDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.DependencyDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.DependencyDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.DependencyDao _dependencyDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.DependencyDao _dependencyDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.WorkTagDao workTagDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.WorkTagDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.WorkTagDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkTagDao _workTagDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkTagDao _workTagDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkTagDao _workTagDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.WorkTagDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.WorkTagDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkTagDao _workTagDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkTagDao _workTagDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.SystemIdInfoDao systemIdInfoDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.SystemIdInfoDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.SystemIdInfoDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.SystemIdInfoDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.SystemIdInfoDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.WorkNameDao workNameDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.WorkNameDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.WorkNameDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkNameDao _workNameDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkNameDao _workNameDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkNameDao _workNameDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.WorkNameDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.WorkNameDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkNameDao _workNameDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkNameDao _workNameDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.WorkProgressDao workProgressDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.WorkProgressDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.WorkProgressDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao _workProgressDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao _workProgressDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao _workProgressDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.WorkProgressDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.WorkProgressDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao _workProgressDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao _workProgressDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.PreferenceDao preferenceDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.PreferenceDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.PreferenceDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao _preferenceDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao _preferenceDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao _preferenceDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.PreferenceDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.PreferenceDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao _preferenceDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao _preferenceDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.RawWorkInfoDao rawWorkInfoDao()
    {
        androidx.work.impl.WorkDatabase_Impl r0, r1;
        java.lang.Throwable r2, $r9;
        androidx.work.impl.model.RawWorkInfoDao $r3, $r5, $r6, $r8;
        androidx.work.impl.model.RawWorkInfoDao_Impl $r7;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl;

        $r3 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.RawWorkInfoDao _rawWorkInfoDao>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.RawWorkInfoDao _rawWorkInfoDao>;

        return $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.RawWorkInfoDao _rawWorkInfoDao>;

        if $r5 != null goto label3;

        $r7 = new androidx.work.impl.model.RawWorkInfoDao_Impl;

        specialinvoke $r7.<androidx.work.impl.model.RawWorkInfoDao_Impl: void <init>(androidx.room.RoomDatabase)>(r0);

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.RawWorkInfoDao _rawWorkInfoDao> = $r7;

     label3:
        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.RawWorkInfoDao _rawWorkInfoDao>;

        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static java.util.List access$000(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$100(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$200(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$300(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$400(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$500(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static androidx.sqlite.db.SupportSQLiteDatabase access$602(androidx.work.impl.WorkDatabase_Impl, androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        r1 := @parameter1: androidx.sqlite.db.SupportSQLiteDatabase;

        r0.<androidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteDatabase mDatabase> = r1;

        return r1;
    }

    static void access$700(androidx.work.impl.WorkDatabase_Impl, androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        r1 := @parameter1: androidx.sqlite.db.SupportSQLiteDatabase;

        virtualinvoke r0.<androidx.work.impl.WorkDatabase_Impl: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)>(r1);

        return;
    }

    static java.util.List access$800(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$900(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

    static java.util.List access$1000(androidx.work.impl.WorkDatabase_Impl)
    {
        androidx.work.impl.WorkDatabase_Impl r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        $r1 = r0.<androidx.work.impl.WorkDatabase_Impl: java.util.List mCallbacks>;

        return $r1;
    }

androidx.work.impl.WorkDatabase_Impl$1
<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>
    void <init>(androidx.work.impl.WorkDatabase_Impl, int)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.work.impl.WorkDatabase_Impl r1;
        int i0;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.work.impl.WorkDatabase_Impl;

        i0 := @parameter1: int;

        r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.RoomOpenHelper$Delegate: void <init>(int)>(i0);

        return;
    }

    public void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `Dependency` (`work_spec_id` TEXT NOT NULL, `prerequisite_id` TEXT NOT NULL, PRIMARY KEY(`work_spec_id`, `prerequisite_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`prerequisite_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS `index_Dependency_work_spec_id` ON `Dependency` (`work_spec_id`)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS `index_Dependency_prerequisite_id` ON `Dependency` (`prerequisite_id`)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `WorkSpec` (`id` TEXT NOT NULL, `state` INTEGER NOT NULL, `worker_class_name` TEXT NOT NULL, `input_merger_class_name` TEXT, `input` BLOB NOT NULL, `output` BLOB NOT NULL, `initial_delay` INTEGER NOT NULL, `interval_duration` INTEGER NOT NULL, `flex_duration` INTEGER NOT NULL, `run_attempt_count` INTEGER NOT NULL, `backoff_policy` INTEGER NOT NULL, `backoff_delay_duration` INTEGER NOT NULL, `last_enqueue_time` INTEGER NOT NULL, `minimum_retention_duration` INTEGER NOT NULL, `schedule_requested_at` INTEGER NOT NULL, `run_in_foreground` INTEGER NOT NULL, `out_of_quota_policy` INTEGER NOT NULL, `period_count` INTEGER NOT NULL DEFAULT 0, `generation` INTEGER NOT NULL DEFAULT 0, `required_network_type` INTEGER NOT NULL, `requires_charging` INTEGER NOT NULL, `requires_device_idle` INTEGER NOT NULL, `requires_battery_not_low` INTEGER NOT NULL, `requires_storage_not_low` INTEGER NOT NULL, `trigger_content_update_delay` INTEGER NOT NULL, `trigger_max_content_delay` INTEGER NOT NULL, `content_uri_triggers` BLOB NOT NULL, PRIMARY KEY(`id`))");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS `index_WorkSpec_schedule_requested_at` ON `WorkSpec` (`schedule_requested_at`)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS `index_WorkSpec_last_enqueue_time` ON `WorkSpec` (`last_enqueue_time`)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `WorkTag` (`tag` TEXT NOT NULL, `work_spec_id` TEXT NOT NULL, PRIMARY KEY(`tag`, `work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS `index_WorkTag_work_spec_id` ON `WorkTag` (`work_spec_id`)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `SystemIdInfo` (`work_spec_id` TEXT NOT NULL, `generation` INTEGER NOT NULL DEFAULT 0, `system_id` INTEGER NOT NULL, PRIMARY KEY(`work_spec_id`, `generation`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `WorkName` (`name` TEXT NOT NULL, `work_spec_id` TEXT NOT NULL, PRIMARY KEY(`name`, `work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS `index_WorkName_work_spec_id` ON `WorkName` (`work_spec_id`)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `WorkProgress` (`work_spec_id` TEXT NOT NULL, `progress` BLOB NOT NULL, PRIMARY KEY(`work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `Preference` (`key` TEXT NOT NULL, `long_value` INTEGER, PRIMARY KEY(`key`))");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \'5181942b9ebc31ce68dacb56c16fd79f\')");

        return;
    }

    public void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        int i0, i1;
        androidx.work.impl.WorkDatabase_Impl $r2, $r4, $r6;
        java.util.List $r3, $r5, $r7;
        java.lang.Object $r8;
        androidx.room.RoomDatabase$Callback $r9;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `Dependency`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `WorkSpec`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `WorkTag`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `SystemIdInfo`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `WorkName`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `WorkProgress`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS `Preference`");

        $r2 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r3 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$000(androidx.work.impl.WorkDatabase_Impl)>($r2);

        if $r3 == null goto label2;

        i1 = 0;

        $r4 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r5 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$100(androidx.work.impl.WorkDatabase_Impl)>($r4);

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r7 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$200(androidx.work.impl.WorkDatabase_Impl)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (androidx.room.RoomDatabase$Callback) $r8;

        virtualinvoke $r9.<androidx.room.RoomDatabase$Callback: void onDestructiveMigration(androidx.sqlite.db.SupportSQLiteDatabase)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        int i0, i1;
        androidx.work.impl.WorkDatabase_Impl $r2, $r4, $r6;
        java.util.List $r3, $r5, $r7;
        java.lang.Object $r8;
        androidx.room.RoomDatabase$Callback $r9;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r2 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r3 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$300(androidx.work.impl.WorkDatabase_Impl)>($r2);

        if $r3 == null goto label2;

        i1 = 0;

        $r4 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r5 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$400(androidx.work.impl.WorkDatabase_Impl)>($r4);

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r7 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$500(androidx.work.impl.WorkDatabase_Impl)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (androidx.room.RoomDatabase$Callback) $r8;

        virtualinvoke $r9.<androidx.room.RoomDatabase$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        int i0, i1;
        androidx.work.impl.WorkDatabase_Impl $r2, $r4, $r5, $r7, $r9;
        java.util.List $r6, $r8, $r10;
        java.lang.Object $r11;
        androidx.room.RoomDatabase$Callback $r12;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r2 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        staticinvoke <androidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteDatabase access$602(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)>($r2, r1);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("PRAGMA foreign_keys = ON");

        $r4 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        staticinvoke <androidx.work.impl.WorkDatabase_Impl: void access$700(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)>($r4, r1);

        $r5 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r6 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$800(androidx.work.impl.WorkDatabase_Impl)>($r5);

        if $r6 == null goto label2;

        i1 = 0;

        $r7 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r8 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$900(androidx.work.impl.WorkDatabase_Impl)>($r7);

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r9 = r0.<androidx.work.impl.WorkDatabase_Impl$1: androidx.work.impl.WorkDatabase_Impl this$0>;

        $r10 = staticinvoke <androidx.work.impl.WorkDatabase_Impl: java.util.List access$1000(androidx.work.impl.WorkDatabase_Impl)>($r9);

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (androidx.room.RoomDatabase$Callback) $r11;

        virtualinvoke $r12.<androidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        staticinvoke <androidx.room.util.DBUtil: void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)>(r1);

        return;
    }

    public void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        return;
    }

    public androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.WorkDatabase_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        java.util.HashMap r2, r7, r12, r17, r22, r27, r32, $r37, $r65, $r133, $r151, $r166, $r184, $r197;
        java.util.HashSet r3, r4, r8, r9, r13, r14, r18, r19, r23, r24, r28, r29, r33, r34, $r42, $r53, $r120, $r121, $r138, $r144, $r158, $r164, $r171, $r177, $r189, $r195, $r202, $r203;
        androidx.room.util.TableInfo r5, r6, r10, r11, r15, r16, r20, r21, r25, r26, r30, r31, r35, r36, $r64, $r132, $r150, $r165, $r183, $r196, $r204;
        androidx.room.util.TableInfo$Column $r38, $r40, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r118, $r134, $r136, $r152, $r154, $r156, $r167, $r169, $r185, $r187, $r198, $r200;
        androidx.room.util.TableInfo$ForeignKey $r43, $r48, $r139, $r159, $r172, $r190;
        java.lang.String[] $r44, $r46, $r49, $r51, $r55, $r57, $r60, $r62, $r123, $r125, $r128, $r130, $r140, $r142, $r146, $r148, $r160, $r162, $r173, $r175, $r179, $r181, $r191, $r193;
        java.util.List $r45, $r47, $r50, $r52, $r56, $r58, $r61, $r63, $r124, $r126, $r129, $r131, $r141, $r143, $r147, $r149, $r161, $r163, $r174, $r176, $r180, $r182, $r192, $r194;
        androidx.room.util.TableInfo$Index $r54, $r59, $r122, $r127, $r145, $r178;
        boolean $z4, $z7, $z10, $z12, $z15, $z17, $z18;
        androidx.room.RoomOpenHelper$ValidationResult $r205, $r206, $r213, $r220, $r227, $r234, $r241, $r248;
        java.lang.StringBuilder $r207, $r208, $r209, $r210, $r211, $r214, $r215, $r216, $r217, $r218, $r221, $r222, $r223, $r224, $r225, $r228, $r229, $r230, $r231, $r232, $r235, $r236, $r237, $r238, $r239, $r242, $r243, $r244, $r245, $r246, $r249, $r250, $r251, $r252, $r253;
        java.lang.String $r212, $r219, $r226, $r233, $r240, $r247, $r254;

        r0 := @this: androidx.work.impl.WorkDatabase_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r37 = new java.util.HashMap;

        specialinvoke $r37.<java.util.HashMap: void <init>(int)>(2);

        r2 = $r37;

        $r38 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r38.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("work_spec_id", "TEXT", 1, 1, null, 1);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("work_spec_id", $r38);

        $r40 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r40.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("prerequisite_id", "TEXT", 1, 2, null, 1);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("prerequisite_id", $r40);

        $r42 = new java.util.HashSet;

        specialinvoke $r42.<java.util.HashSet: void <init>(int)>(2);

        r3 = $r42;

        $r43 = new androidx.room.util.TableInfo$ForeignKey;

        $r44 = newarray (java.lang.String)[1];

        $r44[0] = "work_spec_id";

        $r45 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r44);

        $r46 = newarray (java.lang.String)[1];

        $r46[0] = "id";

        $r47 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r46);

        specialinvoke $r43.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("WorkSpec", "CASCADE", "CASCADE", $r45, $r47);

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r43);

        $r48 = new androidx.room.util.TableInfo$ForeignKey;

        $r49 = newarray (java.lang.String)[1];

        $r49[0] = "prerequisite_id";

        $r50 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r49);

        $r51 = newarray (java.lang.String)[1];

        $r51[0] = "id";

        $r52 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r51);

        specialinvoke $r48.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("WorkSpec", "CASCADE", "CASCADE", $r50, $r52);

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r48);

        $r53 = new java.util.HashSet;

        specialinvoke $r53.<java.util.HashSet: void <init>(int)>(2);

        r4 = $r53;

        $r54 = new androidx.room.util.TableInfo$Index;

        $r55 = newarray (java.lang.String)[1];

        $r55[0] = "work_spec_id";

        $r56 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r55);

        $r57 = newarray (java.lang.String)[1];

        $r57[0] = "ASC";

        $r58 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r57);

        specialinvoke $r54.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List,java.util.List)>("index_Dependency_work_spec_id", 0, $r56, $r58);

        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>($r54);

        $r59 = new androidx.room.util.TableInfo$Index;

        $r60 = newarray (java.lang.String)[1];

        $r60[0] = "prerequisite_id";

        $r61 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r60);

        $r62 = newarray (java.lang.String)[1];

        $r62[0] = "ASC";

        $r63 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r62);

        specialinvoke $r59.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List,java.util.List)>("index_Dependency_prerequisite_id", 0, $r61, $r63);

        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>($r59);

        $r64 = new androidx.room.util.TableInfo;

        specialinvoke $r64.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("Dependency", r2, r3, r4);

        r5 = $r64;

        r6 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "Dependency");

        $z4 = virtualinvoke r5.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r6);

        if $z4 != 0 goto label1;

        $r248 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r249 = new java.lang.StringBuilder;

        specialinvoke $r249.<java.lang.StringBuilder: void <init>()>();

        $r250 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dependency(androidx.work.impl.model.Dependency).\n Expected:\n");

        $r251 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r252 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r253 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r254 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r248.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r254);

        return $r248;

     label1:
        $r65 = new java.util.HashMap;

        specialinvoke $r65.<java.util.HashMap: void <init>(int)>(27);

        r7 = $r65;

        $r66 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r66.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("id", "TEXT", 1, 1, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("id", $r66);

        $r68 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r68.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("state", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("state", $r68);

        $r70 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r70.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("worker_class_name", "TEXT", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("worker_class_name", $r70);

        $r72 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r72.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("input_merger_class_name", "TEXT", 0, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("input_merger_class_name", $r72);

        $r74 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r74.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("input", "BLOB", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("input", $r74);

        $r76 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r76.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("output", "BLOB", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("output", $r76);

        $r78 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r78.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("initial_delay", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("initial_delay", $r78);

        $r80 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r80.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("interval_duration", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("interval_duration", $r80);

        $r82 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r82.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("flex_duration", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("flex_duration", $r82);

        $r84 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r84.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("run_attempt_count", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("run_attempt_count", $r84);

        $r86 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r86.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("backoff_policy", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("backoff_policy", $r86);

        $r88 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r88.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("backoff_delay_duration", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("backoff_delay_duration", $r88);

        $r90 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r90.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("last_enqueue_time", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("last_enqueue_time", $r90);

        $r92 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r92.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("minimum_retention_duration", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("minimum_retention_duration", $r92);

        $r94 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r94.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("schedule_requested_at", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("schedule_requested_at", $r94);

        $r96 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r96.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("run_in_foreground", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("run_in_foreground", $r96);

        $r98 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r98.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("out_of_quota_policy", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("out_of_quota_policy", $r98);

        $r100 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r100.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("period_count", "INTEGER", 1, 0, "0", 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("period_count", $r100);

        $r102 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r102.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("generation", "INTEGER", 1, 0, "0", 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("generation", $r102);

        $r104 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r104.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("required_network_type", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("required_network_type", $r104);

        $r106 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r106.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("requires_charging", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("requires_charging", $r106);

        $r108 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r108.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("requires_device_idle", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("requires_device_idle", $r108);

        $r110 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r110.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("requires_battery_not_low", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("requires_battery_not_low", $r110);

        $r112 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r112.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("requires_storage_not_low", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("requires_storage_not_low", $r112);

        $r114 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r114.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("trigger_content_update_delay", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("trigger_content_update_delay", $r114);

        $r116 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r116.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("trigger_max_content_delay", "INTEGER", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("trigger_max_content_delay", $r116);

        $r118 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r118.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("content_uri_triggers", "BLOB", 1, 0, null, 1);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("content_uri_triggers", $r118);

        $r120 = new java.util.HashSet;

        specialinvoke $r120.<java.util.HashSet: void <init>(int)>(0);

        r8 = $r120;

        $r121 = new java.util.HashSet;

        specialinvoke $r121.<java.util.HashSet: void <init>(int)>(2);

        r9 = $r121;

        $r122 = new androidx.room.util.TableInfo$Index;

        $r123 = newarray (java.lang.String)[1];

        $r123[0] = "schedule_requested_at";

        $r124 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r123);

        $r125 = newarray (java.lang.String)[1];

        $r125[0] = "ASC";

        $r126 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r125);

        specialinvoke $r122.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List,java.util.List)>("index_WorkSpec_schedule_requested_at", 0, $r124, $r126);

        virtualinvoke r9.<java.util.HashSet: boolean add(java.lang.Object)>($r122);

        $r127 = new androidx.room.util.TableInfo$Index;

        $r128 = newarray (java.lang.String)[1];

        $r128[0] = "last_enqueue_time";

        $r129 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r128);

        $r130 = newarray (java.lang.String)[1];

        $r130[0] = "ASC";

        $r131 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r130);

        specialinvoke $r127.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List,java.util.List)>("index_WorkSpec_last_enqueue_time", 0, $r129, $r131);

        virtualinvoke r9.<java.util.HashSet: boolean add(java.lang.Object)>($r127);

        $r132 = new androidx.room.util.TableInfo;

        specialinvoke $r132.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("WorkSpec", r7, r8, r9);

        r10 = $r132;

        r11 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "WorkSpec");

        $z7 = virtualinvoke r10.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r11);

        if $z7 != 0 goto label2;

        $r241 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r242 = new java.lang.StringBuilder;

        specialinvoke $r242.<java.lang.StringBuilder: void <init>()>();

        $r243 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkSpec(androidx.work.impl.model.WorkSpec).\n Expected:\n");

        $r244 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r245 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r246 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r247 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r241.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r247);

        return $r241;

     label2:
        $r133 = new java.util.HashMap;

        specialinvoke $r133.<java.util.HashMap: void <init>(int)>(2);

        r12 = $r133;

        $r134 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r134.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("tag", "TEXT", 1, 1, null, 1);

        virtualinvoke r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("tag", $r134);

        $r136 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r136.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("work_spec_id", "TEXT", 1, 2, null, 1);

        virtualinvoke r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("work_spec_id", $r136);

        $r138 = new java.util.HashSet;

        specialinvoke $r138.<java.util.HashSet: void <init>(int)>(1);

        r13 = $r138;

        $r139 = new androidx.room.util.TableInfo$ForeignKey;

        $r140 = newarray (java.lang.String)[1];

        $r140[0] = "work_spec_id";

        $r141 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r140);

        $r142 = newarray (java.lang.String)[1];

        $r142[0] = "id";

        $r143 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r142);

        specialinvoke $r139.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("WorkSpec", "CASCADE", "CASCADE", $r141, $r143);

        virtualinvoke r13.<java.util.HashSet: boolean add(java.lang.Object)>($r139);

        $r144 = new java.util.HashSet;

        specialinvoke $r144.<java.util.HashSet: void <init>(int)>(1);

        r14 = $r144;

        $r145 = new androidx.room.util.TableInfo$Index;

        $r146 = newarray (java.lang.String)[1];

        $r146[0] = "work_spec_id";

        $r147 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r146);

        $r148 = newarray (java.lang.String)[1];

        $r148[0] = "ASC";

        $r149 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r148);

        specialinvoke $r145.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List,java.util.List)>("index_WorkTag_work_spec_id", 0, $r147, $r149);

        virtualinvoke r14.<java.util.HashSet: boolean add(java.lang.Object)>($r145);

        $r150 = new androidx.room.util.TableInfo;

        specialinvoke $r150.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("WorkTag", r12, r13, r14);

        r15 = $r150;

        r16 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "WorkTag");

        $z10 = virtualinvoke r15.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r16);

        if $z10 != 0 goto label3;

        $r234 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r235 = new java.lang.StringBuilder;

        specialinvoke $r235.<java.lang.StringBuilder: void <init>()>();

        $r236 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkTag(androidx.work.impl.model.WorkTag).\n Expected:\n");

        $r237 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r239 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r240 = virtualinvoke $r239.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r234.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r240);

        return $r234;

     label3:
        $r151 = new java.util.HashMap;

        specialinvoke $r151.<java.util.HashMap: void <init>(int)>(3);

        r17 = $r151;

        $r152 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r152.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("work_spec_id", "TEXT", 1, 1, null, 1);

        virtualinvoke r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("work_spec_id", $r152);

        $r154 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r154.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("generation", "INTEGER", 1, 2, "0", 1);

        virtualinvoke r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("generation", $r154);

        $r156 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r156.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("system_id", "INTEGER", 1, 0, null, 1);

        virtualinvoke r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("system_id", $r156);

        $r158 = new java.util.HashSet;

        specialinvoke $r158.<java.util.HashSet: void <init>(int)>(1);

        r18 = $r158;

        $r159 = new androidx.room.util.TableInfo$ForeignKey;

        $r160 = newarray (java.lang.String)[1];

        $r160[0] = "work_spec_id";

        $r161 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r160);

        $r162 = newarray (java.lang.String)[1];

        $r162[0] = "id";

        $r163 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r162);

        specialinvoke $r159.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("WorkSpec", "CASCADE", "CASCADE", $r161, $r163);

        virtualinvoke r18.<java.util.HashSet: boolean add(java.lang.Object)>($r159);

        $r164 = new java.util.HashSet;

        specialinvoke $r164.<java.util.HashSet: void <init>(int)>(0);

        r19 = $r164;

        $r165 = new androidx.room.util.TableInfo;

        specialinvoke $r165.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("SystemIdInfo", r17, r18, r19);

        r20 = $r165;

        r21 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "SystemIdInfo");

        $z12 = virtualinvoke r20.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r21);

        if $z12 != 0 goto label4;

        $r227 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r228 = new java.lang.StringBuilder;

        specialinvoke $r228.<java.lang.StringBuilder: void <init>()>();

        $r229 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SystemIdInfo(androidx.work.impl.model.SystemIdInfo).\n Expected:\n");

        $r230 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r231 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r233 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r227.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r233);

        return $r227;

     label4:
        $r166 = new java.util.HashMap;

        specialinvoke $r166.<java.util.HashMap: void <init>(int)>(2);

        r22 = $r166;

        $r167 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r167.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("name", "TEXT", 1, 1, null, 1);

        virtualinvoke r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", $r167);

        $r169 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r169.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("work_spec_id", "TEXT", 1, 2, null, 1);

        virtualinvoke r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("work_spec_id", $r169);

        $r171 = new java.util.HashSet;

        specialinvoke $r171.<java.util.HashSet: void <init>(int)>(1);

        r23 = $r171;

        $r172 = new androidx.room.util.TableInfo$ForeignKey;

        $r173 = newarray (java.lang.String)[1];

        $r173[0] = "work_spec_id";

        $r174 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r173);

        $r175 = newarray (java.lang.String)[1];

        $r175[0] = "id";

        $r176 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r175);

        specialinvoke $r172.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("WorkSpec", "CASCADE", "CASCADE", $r174, $r176);

        virtualinvoke r23.<java.util.HashSet: boolean add(java.lang.Object)>($r172);

        $r177 = new java.util.HashSet;

        specialinvoke $r177.<java.util.HashSet: void <init>(int)>(1);

        r24 = $r177;

        $r178 = new androidx.room.util.TableInfo$Index;

        $r179 = newarray (java.lang.String)[1];

        $r179[0] = "work_spec_id";

        $r180 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r179);

        $r181 = newarray (java.lang.String)[1];

        $r181[0] = "ASC";

        $r182 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r181);

        specialinvoke $r178.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List,java.util.List)>("index_WorkName_work_spec_id", 0, $r180, $r182);

        virtualinvoke r24.<java.util.HashSet: boolean add(java.lang.Object)>($r178);

        $r183 = new androidx.room.util.TableInfo;

        specialinvoke $r183.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("WorkName", r22, r23, r24);

        r25 = $r183;

        r26 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "WorkName");

        $z15 = virtualinvoke r25.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r26);

        if $z15 != 0 goto label5;

        $r220 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>()>();

        $r222 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkName(androidx.work.impl.model.WorkName).\n Expected:\n");

        $r223 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r225 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        $r226 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r220.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r226);

        return $r220;

     label5:
        $r184 = new java.util.HashMap;

        specialinvoke $r184.<java.util.HashMap: void <init>(int)>(2);

        r27 = $r184;

        $r185 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r185.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("work_spec_id", "TEXT", 1, 1, null, 1);

        virtualinvoke r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("work_spec_id", $r185);

        $r187 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r187.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("progress", "BLOB", 1, 0, null, 1);

        virtualinvoke r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("progress", $r187);

        $r189 = new java.util.HashSet;

        specialinvoke $r189.<java.util.HashSet: void <init>(int)>(1);

        r28 = $r189;

        $r190 = new androidx.room.util.TableInfo$ForeignKey;

        $r191 = newarray (java.lang.String)[1];

        $r191[0] = "work_spec_id";

        $r192 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r191);

        $r193 = newarray (java.lang.String)[1];

        $r193[0] = "id";

        $r194 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r193);

        specialinvoke $r190.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("WorkSpec", "CASCADE", "CASCADE", $r192, $r194);

        virtualinvoke r28.<java.util.HashSet: boolean add(java.lang.Object)>($r190);

        $r195 = new java.util.HashSet;

        specialinvoke $r195.<java.util.HashSet: void <init>(int)>(0);

        r29 = $r195;

        $r196 = new androidx.room.util.TableInfo;

        specialinvoke $r196.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("WorkProgress", r27, r28, r29);

        r30 = $r196;

        r31 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "WorkProgress");

        $z17 = virtualinvoke r30.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r31);

        if $z17 != 0 goto label6;

        $r213 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r214 = new java.lang.StringBuilder;

        specialinvoke $r214.<java.lang.StringBuilder: void <init>()>();

        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkProgress(androidx.work.impl.model.WorkProgress).\n Expected:\n");

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r218 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r213.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r219);

        return $r213;

     label6:
        $r197 = new java.util.HashMap;

        specialinvoke $r197.<java.util.HashMap: void <init>(int)>(2);

        r32 = $r197;

        $r198 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r198.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("key", "TEXT", 1, 1, null, 1);

        virtualinvoke r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", $r198);

        $r200 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r200.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>("long_value", "INTEGER", 0, 0, null, 1);

        virtualinvoke r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("long_value", $r200);

        $r202 = new java.util.HashSet;

        specialinvoke $r202.<java.util.HashSet: void <init>(int)>(0);

        r33 = $r202;

        $r203 = new java.util.HashSet;

        specialinvoke $r203.<java.util.HashSet: void <init>(int)>(0);

        r34 = $r203;

        $r204 = new androidx.room.util.TableInfo;

        specialinvoke $r204.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>("Preference", r32, r33, r34);

        r35 = $r204;

        r36 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, "Preference");

        $z18 = virtualinvoke r35.<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>(r36);

        if $z18 != 0 goto label7;

        $r206 = new androidx.room.RoomOpenHelper$ValidationResult;

        $r207 = new java.lang.StringBuilder;

        specialinvoke $r207.<java.lang.StringBuilder: void <init>()>();

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preference(androidx.work.impl.model.Preference).\n Expected:\n");

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Found:\n");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r206.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(0, $r212);

        return $r206;

     label7:
        $r205 = new androidx.room.RoomOpenHelper$ValidationResult;

        specialinvoke $r205.<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>(1, null);

        return $r205;
    }

