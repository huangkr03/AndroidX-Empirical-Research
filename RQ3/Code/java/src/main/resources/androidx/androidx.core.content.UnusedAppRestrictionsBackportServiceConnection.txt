androidx.core.content.UnusedAppRestrictionsBackportServiceConnection
<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService mUnusedAppRestrictionsService>
<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture>
<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: android.content.Context mContext>
<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService>
    void <init>(android.content.Context)
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r0;
        android.content.Context r1;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService mUnusedAppRestrictionsService> = null;

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService> = 0;

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: android.content.Context mContext> = r1;

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Throwable r3, $r7;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService $r4, $r5;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback $r6;
        androidx.concurrent.futures.ResolvableFuture $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r4 = staticinvoke <androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService asInterface(android.os.IBinder)>(r2);

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService mUnusedAppRestrictionsService> = $r4;

     label1:
        $r5 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService mUnusedAppRestrictionsService>;

        $r6 = specialinvoke r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getBackportCallback()>();

        interfaceinvoke $r5.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService: void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r8.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r9);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r0;
        android.content.ComponentName r1;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService mUnusedAppRestrictionsService> = null;

        return;
    }

    public void connectAndFetchResult(androidx.concurrent.futures.ResolvableFuture)
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r0;
        androidx.concurrent.futures.ResolvableFuture r1;
        android.content.Intent r2, $r3;
        boolean $z0;
        android.content.Context $r4, $r7;
        android.content.pm.PackageManager $r5;
        java.lang.String $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        r1 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        $z0 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService>;

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Each UnusedAppRestrictionsBackportServiceConnection can only be bound once.");

        throw $r8;

     label1:
        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService> = 1;

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture> = r1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.support.unusedapprestrictions.action.CustomUnusedAppRestrictionsBackportService");

        $r4 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = staticinvoke <androidx.core.content.PackageManagerCompat: java.lang.String getPermissionRevocationVerifierApp(android.content.pm.PackageManager)>($r5);

        r2 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        $r7 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r2, r0, 1);

        return;
    }

    public void disconnectFromService()
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        $z0 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("bindService must be called before unbind");

        throw $r2;

     label1:
        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService> = 0;

        $r1 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        return;
    }

    private androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getBackportCallback()
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r0;
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1 $r1;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        $r1 = new androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1;

        specialinvoke $r1.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: void <init>(androidx.core.content.UnusedAppRestrictionsBackportServiceConnection)>(r0);

        return $r1;
    }

androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1
<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection this$0>
    void <init>(androidx.core.content.UnusedAppRestrictionsBackportServiceConnection)
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1 r0;
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r1;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1;

        r1 := @parameter0: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection this$0> = r1;

        specialinvoke r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: void <init>()>();

        return;
    }

    public void onIsPermissionRevocationEnabledForAppResult(boolean, boolean) throws android.os.RemoteException
    {
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1 r0;
        boolean z0, z1;
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection $r1, $r4, $r7;
        androidx.concurrent.futures.ResolvableFuture $r2, $r5, $r8;
        java.lang.Integer $r3, $r6, $r9;

        r0 := @this: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label2;

        if z1 == 0 goto label1;

        $r7 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection this$0>;

        $r8 = $r7.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r8.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r9);

        goto label3;

     label1:
        $r4 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection this$0>;

        $r5 = $r4.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r5.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r6);

        goto label3;

     label2:
        $r1 = r0.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection this$0>;

        $r2 = $r1.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManagerCompat", "Unable to retrieve the permission revocation setting from the backport");

     label3:
        return;
    }

