androidx.health.services.client.impl.IExerciseApiService
<androidx.health.services.client.impl.IExerciseApiService: java.lang.String DESCRIPTOR>
<androidx.health.services.client.impl.IExerciseApiService: int API_VERSION>
<androidx.health.services.client.impl.IExerciseApiService: int getApiVersion()>
<androidx.health.services.client.impl.IExerciseApiService: void prepareExercise(androidx.health.services.client.impl.request.PrepareExerciseRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void startExercise(androidx.health.services.client.impl.request.StartExerciseRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void pauseExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void resumeExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void endExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void markLap(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void getCurrentExerciseInfo(java.lang.String,androidx.health.services.client.impl.internal.IExerciseInfoCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void setUpdateListener(java.lang.String,androidx.health.services.client.impl.IExerciseUpdateListener,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void clearUpdateListener(java.lang.String,androidx.health.services.client.impl.IExerciseUpdateListener,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void addGoalToActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void removeGoalFromActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void overrideAutoPauseAndResumeForActiveExercise(androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>
<androidx.health.services.client.impl.IExerciseApiService: void flushExercise(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IExerciseApiService: void updateExerciseTypeConfigForActiveExercise(androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
androidx.health.services.client.impl.IExerciseApiService$Default
    public void <init>()
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        return 0;
    }

    public void prepareExercise(androidx.health.services.client.impl.request.PrepareExerciseRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.PrepareExerciseRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.PrepareExerciseRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void startExercise(androidx.health.services.client.impl.request.StartExerciseRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.StartExerciseRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.StartExerciseRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void pauseExercise(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void resumeExercise(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void endExercise(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void markLap(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void getCurrentExerciseInfo(java.lang.String, androidx.health.services.client.impl.internal.IExerciseInfoCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IExerciseInfoCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IExerciseInfoCallback;

        return;
    }

    public void setUpdateListener(java.lang.String, androidx.health.services.client.impl.IExerciseUpdateListener, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.IExerciseUpdateListener r2;
        androidx.health.services.client.impl.internal.IStatusCallback r3;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.IExerciseUpdateListener;

        r3 := @parameter2: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void clearUpdateListener(java.lang.String, androidx.health.services.client.impl.IExerciseUpdateListener, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.IExerciseUpdateListener r2;
        androidx.health.services.client.impl.internal.IStatusCallback r3;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.IExerciseUpdateListener;

        r3 := @parameter2: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void addGoalToActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.ExerciseGoalRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.ExerciseGoalRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void removeGoalFromActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.ExerciseGoalRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.ExerciseGoalRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void overrideAutoPauseAndResumeForActiveExercise(androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.CapabilitiesRequest r1;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.CapabilitiesRequest;

        return null;
    }

    public void flushExercise(androidx.health.services.client.impl.request.FlushRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.FlushRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.FlushRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void updateExerciseTypeConfigForActiveExercise(androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;
        androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.services.client.impl.IExerciseApiService$Default r0;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Default;

        return null;
    }

androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy
<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>
    void <init>(android.os.IBinder)
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        $r1 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        return "androidx.health.services.client.impl.IExerciseApiService";
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean z0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        $r4 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void prepareExercise(androidx.health.services.client.impl.request.PrepareExerciseRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.PrepareExerciseRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.PrepareExerciseRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void startExercise(androidx.health.services.client.impl.request.StartExerciseRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.StartExerciseRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.StartExerciseRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void pauseExercise(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void resumeExercise(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void endExercise(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void markLap(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void getCurrentExerciseInfo(java.lang.String, androidx.health.services.client.impl.internal.IExerciseInfoCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IExerciseInfoCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IExerciseInfoCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setUpdateListener(java.lang.String, androidx.health.services.client.impl.IExerciseUpdateListener, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.IExerciseUpdateListener r2;
        androidx.health.services.client.impl.internal.IStatusCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.IExerciseUpdateListener;

        r3 := @parameter2: androidx.health.services.client.impl.internal.IStatusCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearUpdateListener(java.lang.String, androidx.health.services.client.impl.IExerciseUpdateListener, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.IExerciseUpdateListener r2;
        androidx.health.services.client.impl.internal.IStatusCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.IExerciseUpdateListener;

        r3 := @parameter2: androidx.health.services.client.impl.internal.IStatusCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addGoalToActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.ExerciseGoalRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.ExerciseGoalRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeGoalFromActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.ExerciseGoalRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.ExerciseGoalRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void overrideAutoPauseAndResumeForActiveExercise(androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.CapabilitiesRequest r1;
        android.os.Parcel r2, r3;
        androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse r4;
        java.lang.Throwable r5, $r9;
        android.os.IBinder $r6;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.CapabilitiesRequest;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r2, r1, 0);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r7 = <androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse: android.os.Parcelable$Creator CREATOR>;

        $r8 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r3, $r7);

        r4 = (androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse) $r8;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void flushExercise(androidx.health.services.client.impl.request.FlushRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.FlushRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.FlushRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updateExerciseTypeConfigForActiveExercise(androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.health.services.client.impl.IExerciseApiService$Stub
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_getApiVersion>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_prepareExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_startExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_pauseExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_resumeExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_endExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_markLap>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_getCurrentExerciseInfo>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_setUpdateListener>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_clearUpdateListener>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_addGoalToActiveExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_removeGoalFromActiveExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_overrideAutoPauseAndResumeForActiveExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_getCapabilities>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_flushExercise>
<androidx.health.services.client.impl.IExerciseApiService$Stub: int TRANSACTION_updateExerciseTypeConfigForActiveExercise>
    public void <init>()
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub r0;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.health.services.client.impl.IExerciseApiService");

        return;
    }

    public static androidx.health.services.client.impl.IExerciseApiService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy $r2;
        boolean $z0;
        androidx.health.services.client.impl.IExerciseApiService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.health.services.client.impl.IExerciseApiService");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.health.services.client.impl.IExerciseApiService;

        if $z0 == 0 goto label2;

        $r3 = (androidx.health.services.client.impl.IExerciseApiService) r1;

        return $r3;

     label2:
        $r2 = new androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy;

        specialinvoke $r2.<androidx.health.services.client.impl.IExerciseApiService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IExerciseApiService$Stub r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        java.lang.String r3, r40, r42, r44, r46, r48, r50, r53;
        android.os.Parcelable$Creator $r4, $r7, $r10, $r13, $r16, $r18, $r21, $r33;
        java.lang.Object $r5, $r8, $r11, $r14, $r17, $r19, $r22, $r34;
        android.os.IBinder $r6, $r9, $r12, $r15, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r35;
        boolean $z0;
        androidx.health.services.client.impl.request.PrepareExerciseRequest r36;
        androidx.health.services.client.impl.internal.IStatusCallback r37, r39, r41, r43, r45, r47, r52, r55, r57, r59, r61, r65, r67;
        androidx.health.services.client.impl.request.StartExerciseRequest r38;
        androidx.health.services.client.impl.internal.IExerciseInfoCallback r49;
        androidx.health.services.client.impl.IExerciseUpdateListener r51, r54;
        androidx.health.services.client.impl.request.ExerciseGoalRequest r56, r58;
        androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest r60;
        androidx.health.services.client.impl.request.CapabilitiesRequest r62;
        androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse r63;
        androidx.health.services.client.impl.request.FlushRequest r64;
        androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest r66;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.health.services.client.impl.IExerciseApiService";

        if i0 < 1 goto label01;

        if i0 > 16777215 goto label01;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

     label01:
        lookupswitch(i0)
        {
            case 1598968902: goto label02;
            default: goto label03;
        };

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label03:
        tableswitch(i0)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label16;
            case 12: goto label17;
            case 13: goto label18;
            case 14: goto label15;
            case 15: goto label05;
            case 16: goto label20;
            case 17: goto label19;
            default: goto label20;
        };

     label04:
        i2 = virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: int getApiVersion()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        goto label21;

     label05:
        $r7 = <androidx.health.services.client.impl.request.PrepareExerciseRequest: android.os.Parcelable$Creator CREATOR>;

        $r8 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r7);

        r36 = (androidx.health.services.client.impl.request.PrepareExerciseRequest) $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r37 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r9);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void prepareExercise(androidx.health.services.client.impl.request.PrepareExerciseRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r36, r37);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label06:
        $r33 = <androidx.health.services.client.impl.request.StartExerciseRequest: android.os.Parcelable$Creator CREATOR>;

        $r34 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r33);

        r38 = (androidx.health.services.client.impl.request.StartExerciseRequest) $r34;

        $r35 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r39 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r35);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void startExercise(androidx.health.services.client.impl.request.StartExerciseRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r38, r39);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label07:
        r40 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r32 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r41 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r32);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void pauseExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>(r40, r41);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label08:
        r42 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r31 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r43 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r31);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void resumeExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>(r42, r43);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label09:
        r44 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r30 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r45 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r30);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void endExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>(r44, r45);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label10:
        r46 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r29 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r47 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r29);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void markLap(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>(r46, r47);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label11:
        r48 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r28 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r49 = staticinvoke <androidx.health.services.client.impl.internal.IExerciseInfoCallback$Stub: androidx.health.services.client.impl.internal.IExerciseInfoCallback asInterface(android.os.IBinder)>($r28);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void getCurrentExerciseInfo(java.lang.String,androidx.health.services.client.impl.internal.IExerciseInfoCallback)>(r48, r49);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label12:
        r50 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r26 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r51 = staticinvoke <androidx.health.services.client.impl.IExerciseUpdateListener$Stub: androidx.health.services.client.impl.IExerciseUpdateListener asInterface(android.os.IBinder)>($r26);

        $r27 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r52 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r27);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void setUpdateListener(java.lang.String,androidx.health.services.client.impl.IExerciseUpdateListener,androidx.health.services.client.impl.internal.IStatusCallback)>(r50, r51, r52);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label13:
        r53 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r24 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r54 = staticinvoke <androidx.health.services.client.impl.IExerciseUpdateListener$Stub: androidx.health.services.client.impl.IExerciseUpdateListener asInterface(android.os.IBinder)>($r24);

        $r25 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r55 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r25);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void clearUpdateListener(java.lang.String,androidx.health.services.client.impl.IExerciseUpdateListener,androidx.health.services.client.impl.internal.IStatusCallback)>(r53, r54, r55);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label14:
        $r21 = <androidx.health.services.client.impl.request.ExerciseGoalRequest: android.os.Parcelable$Creator CREATOR>;

        $r22 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r21);

        r56 = (androidx.health.services.client.impl.request.ExerciseGoalRequest) $r22;

        $r23 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r57 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r23);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void addGoalToActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r56, r57);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label15:
        $r10 = <androidx.health.services.client.impl.request.ExerciseGoalRequest: android.os.Parcelable$Creator CREATOR>;

        $r11 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r10);

        r58 = (androidx.health.services.client.impl.request.ExerciseGoalRequest) $r11;

        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r59 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void removeGoalFromActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r58, r59);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label16:
        $r18 = <androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest: android.os.Parcelable$Creator CREATOR>;

        $r19 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r18);

        r60 = (androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest) $r19;

        $r20 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r61 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void overrideAutoPauseAndResumeForActiveExercise(androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r60, r61);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label17:
        $r16 = <androidx.health.services.client.impl.request.CapabilitiesRequest: android.os.Parcelable$Creator CREATOR>;

        $r17 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r16);

        r62 = (androidx.health.services.client.impl.request.CapabilitiesRequest) $r17;

        r63 = virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>(r62);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r2, r63, 1);

        goto label21;

     label18:
        $r13 = <androidx.health.services.client.impl.request.FlushRequest: android.os.Parcelable$Creator CREATOR>;

        $r14 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r13);

        r64 = (androidx.health.services.client.impl.request.FlushRequest) $r14;

        $r15 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r65 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r15);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void flushExercise(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r64, r65);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label19:
        $r4 = <androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest: android.os.Parcelable$Creator CREATOR>;

        $r5 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r4);

        r66 = (androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest) $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r67 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<androidx.health.services.client.impl.IExerciseApiService$Stub: void updateExerciseTypeConfigForActiveExercise(androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r66, r67);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label21;

     label20:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;

     label21:
        return 1;
    }

androidx.health.services.client.impl.IExerciseApiService$_Parcel
    public void <init>()
    {
        androidx.health.services.client.impl.IExerciseApiService$_Parcel r0;

        r0 := @this: androidx.health.services.client.impl.IExerciseApiService$_Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object readTypedObject(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        return $r2;

     label1:
        return null;
    }

    private static void writeTypedObject(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    static java.lang.Object access$000(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $r2 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)>(r0, r1);

        return $r2;
    }

    static void access$100(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        staticinvoke <androidx.health.services.client.impl.IExerciseApiService$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)>(r0, r1, i0);

        return;
    }

