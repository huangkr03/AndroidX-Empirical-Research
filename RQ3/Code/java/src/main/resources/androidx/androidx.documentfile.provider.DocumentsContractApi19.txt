androidx.documentfile.provider.DocumentsContractApi19
<androidx.documentfile.provider.DocumentsContractApi19: java.lang.String TAG>
<androidx.documentfile.provider.DocumentsContractApi19: int FLAG_VIRTUAL_DOCUMENT>
    public static boolean isVirtual(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        boolean $z0, $z1;
        long $l0, $l1;
        byte $b2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $z0 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>(r0, r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>(r0, r1);

        $l1 = $l0 & 512L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.lang.String getName(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>(r0, r1, "_display_name", null);

        return $r2;
    }

    private static java.lang.String getRawType(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>(r0, r1, "mime_type", null);

        return $r2;
    }

    public static java.lang.String getType(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>(r0, r1);

        $r3 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        return r2;
    }

    public static long getFlags(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        long $l0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>(r0, r1, "flags", 0L);

        return $l0;
    }

    public static boolean isDirectory(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $r2 = "vnd.android.document/directory";

        $r3 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>(r0, r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public static boolean isFile(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>(r0, r1);

        $r3 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static long lastModified(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        long $l0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>(r0, r1, "last_modified", 0L);

        return $l0;
    }

    public static long length(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        long $l0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>(r0, r1, "_size", 0L);

        return $l0;
    }

    public static boolean canRead(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $i0 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>(r1, 1);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>(r0, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static boolean canWrite(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String r2, $r3;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>(r1, 2);

        if $i1 == 0 goto label1;

        return 0;

     label1:
        r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>(r0, r1);

        i0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>(r0, r1, "flags", 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i2 = i0 & 4;

        if $i2 == 0 goto label3;

        return 1;

     label3:
        $r3 = "vnd.android.document/directory";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        return 1;

     label4:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label5;

        $i3 = i0 & 2;

        if $i3 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public static boolean exists(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        android.content.ContentResolver r2;
        boolean z0, $z1, z2;
        java.lang.Throwable r3, $r5, $r6, r12;
        java.lang.String[] $r4;
        int $i0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        android.database.Cursor r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r11 = null;

     label1:
        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "document_id";

        r11 = virtualinvoke r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r4, null, null, null);

        $i0 = interfaceinvoke r11.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z2 = $z1;

     label4:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r11);

        return z2;

     label5:
        $r6 := @caughtexception;

        r12 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r10);

        z0 = 0;

     label6:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r11);

        return z0;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

     label8:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r11);

        throw r3;

        catch java.lang.Exception from label1 to label4 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static java.lang.String queryForString(android.content.Context, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String r2, r3, r5, $r12, r15, r16;
        android.content.ContentResolver r4;
        java.lang.Throwable r6, $r8, $r13, r17;
        java.lang.String[] $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r11;
        android.database.Cursor r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r14 = null;

     label1:
        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r2;

        r14 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r7, null, null, null);

        $z0 = interfaceinvoke r14.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r14.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 != 0 goto label3;

        r15 = interfaceinvoke r14.<android.database.Cursor: java.lang.String getString(int)>(0);

     label2:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r14);

        return r15;

     label3:
        r16 = r3;

     label4:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r14);

        return r16;

     label5:
        $r8 := @caughtexception;

        r17 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r12);

        r5 = r3;

     label6:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r14);

        return r5;

     label7:
        $r13 := @caughtexception;

        r6 = $r13;

     label8:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r14);

        throw r6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static int queryForInt(android.content.Context, android.net.Uri, java.lang.String, int)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String r2;
        int i0, $i3;
        long $l1, $l2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $l1 = (long) i0;

        $l2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>(r0, r1, r2, $l1);

        $i3 = (int) $l2;

        return $i3;
    }

    private static long queryForLong(android.content.Context, android.net.Uri, java.lang.String, long)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String r2, $r10;
        long l0, l1, l3, l4;
        android.content.ContentResolver r3;
        java.lang.Throwable r4, $r6, $r11, r13;
        java.lang.String[] $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r9;
        android.database.Cursor r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = null;

     label1:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r2;

        r12 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r5, null, null, null);

        $z0 = interfaceinvoke r12.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r12.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 != 0 goto label3;

        l3 = interfaceinvoke r12.<android.database.Cursor: long getLong(int)>(0);

     label2:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return l3;

     label3:
        l4 = l0;

     label4:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return l4;

     label5:
        $r6 := @caughtexception;

        r13 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r10);

        l1 = l0;

     label6:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return l1;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

     label8:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>(r12);

        throw r4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static void closeQuietly(java.lang.AutoCloseable)
    {
        java.lang.AutoCloseable r0;
        java.lang.Throwable $r1, $r2, r3, r4;

        r0 := @parameter0: java.lang.AutoCloseable;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.lang.AutoCloseable: void close()>();

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        r3 = $r1;

        throw r3;

     label4:
        $r2 := @caughtexception;

        r4 = $r2;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void <init>()
    {
        androidx.documentfile.provider.DocumentsContractApi19 r0;

        r0 := @this: androidx.documentfile.provider.DocumentsContractApi19;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

