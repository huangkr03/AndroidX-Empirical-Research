androidx.slice.SliceUtils
<androidx.slice.SliceUtils: int LOADING_ALL>
<androidx.slice.SliceUtils: int LOADING_PARTIAL>
<androidx.slice.SliceUtils: int LOADING_COMPLETE>
    private void <init>()
    {
        androidx.slice.SliceUtils r0;

        r0 := @this: androidx.slice.SliceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.slice.Slice stripSlice(androidx.slice.Slice, int, boolean)
    {
        androidx.slice.Slice r0, $r10, $r16, $r22, $r24;
        int i0, $i1;
        boolean z0, $z1, $z2;
        androidx.slice.widget.ListContent r1, $r8;
        androidx.slice.Slice$Builder r2, r4, r7, $r13, $r15, $r19;
        java.util.List r3;
        java.util.Iterator r5;
        androidx.slice.core.SliceAction r6;
        androidx.slice.widget.ShortcutContent $r9;
        androidx.slice.SliceItem $r11;
        java.lang.String[] $r14, $r20;
        java.lang.Object $r18;
        androidx.slice.core.SliceActionImpl $r21;

        r0 := @parameter0: androidx.slice.Slice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r8 = new androidx.slice.widget.ListContent;

        specialinvoke $r8.<androidx.slice.widget.ListContent: void <init>(android.content.Context,androidx.slice.Slice,android.util.AttributeSet,int,int)>(null, r0, null, 0, 0);

        r1 = $r8;

        if r1 == null goto label7;

        $z1 = virtualinvoke r1.<androidx.slice.widget.ListContent: boolean isValid()>();

        if $z1 == 0 goto label7;

        r2 = staticinvoke <androidx.slice.SliceUtils: androidx.slice.Slice$Builder copyMetadata(androidx.slice.Slice)>(r0);

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label1;
            default: goto label6;
        };

     label1:
        $r9 = new androidx.slice.widget.ShortcutContent;

        specialinvoke $r9.<androidx.slice.widget.ShortcutContent: void <init>(androidx.slice.widget.ListContent)>(r1);

        $r10 = virtualinvoke $r9.<androidx.slice.widget.ShortcutContent: androidx.slice.Slice buildSlice(androidx.slice.Slice$Builder)>(r2);

        return $r10;

     label2:
        $r11 = virtualinvoke r1.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getHeaderItem()>();

        virtualinvoke r2.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addItem(androidx.slice.SliceItem)>($r11);

        r3 = virtualinvoke r1.<androidx.slice.widget.ListContent: java.util.List getSliceActions()>();

        if r3 == null goto label5;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 <= 0 goto label5;

        $r13 = new androidx.slice.Slice$Builder;

        specialinvoke $r13.<androidx.slice.Slice$Builder: void <init>(androidx.slice.Slice$Builder)>(r2);

        r4 = $r13;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.slice.core.SliceAction) $r18;

        $r19 = new androidx.slice.Slice$Builder;

        specialinvoke $r19.<androidx.slice.Slice$Builder: void <init>(androidx.slice.Slice$Builder)>(r4);

        $r20 = newarray (java.lang.String)[1];

        $r20[0] = "actions";

        r7 = virtualinvoke $r19.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.lang.String[])>($r20);

        $r21 = (androidx.slice.core.SliceActionImpl) r6;

        $r22 = virtualinvoke $r21.<androidx.slice.core.SliceActionImpl: androidx.slice.Slice buildSlice(androidx.slice.Slice$Builder)>(r7);

        virtualinvoke r4.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice)>($r22);

        goto label3;

     label4:
        $r14 = newarray (java.lang.String)[1];

        $r14[0] = "actions";

        $r15 = virtualinvoke r4.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.lang.String[])>($r14);

        $r16 = virtualinvoke $r15.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        virtualinvoke r2.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice)>($r16);

     label5:
        $r24 = virtualinvoke r2.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        return $r24;

     label6:
        return r0;

     label7:
        return r0;
    }

    private static androidx.slice.Slice$Builder copyMetadata(androidx.slice.Slice)
    {
        androidx.slice.Slice r0, $r15;
        androidx.slice.Slice$Builder r1, $r9, $r12, $r14, r28;
        androidx.slice.SliceItem r2, r3, r4, r5;
        java.util.List r6, r29;
        java.util.Iterator r7;
        java.lang.String r8;
        android.net.Uri $r10;
        int $i0, $i1, $i2, $i5;
        boolean $z0;
        java.lang.String[] $r13, $r18, $r20, $r22, $r24, $r26;
        java.lang.Object $r17;
        long $l3, $l4;

        r0 := @parameter0: androidx.slice.Slice;

        $r9 = new androidx.slice.Slice$Builder;

        $r10 = virtualinvoke r0.<androidx.slice.Slice: android.net.Uri getUri()>();

        specialinvoke $r9.<androidx.slice.Slice$Builder: void <init>(android.net.Uri)>($r10);

        r1 = $r9;

        r2 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem findTopLevelItem(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(r0, "long", "ttl", null, null);

        if r2 == null goto label1;

        $l4 = virtualinvoke r2.<androidx.slice.SliceItem: long getLong()>();

        $r26 = newarray (java.lang.String)[1];

        $r26[0] = "ttl";

        virtualinvoke r1.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addLong(long,java.lang.String,java.lang.String[])>($l4, "millis", $r26);

     label1:
        r3 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem findTopLevelItem(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(r0, "long", "last_updated", null, null);

        if r3 == null goto label2;

        $l3 = virtualinvoke r3.<androidx.slice.SliceItem: long getLong()>();

        $r24 = newarray (java.lang.String)[1];

        $r24[0] = "last_updated";

        virtualinvoke r1.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addLong(long,java.lang.String,java.lang.String[])>($l3, "millis", $r24);

     label2:
        r4 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem findTopLevelItem(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(r0, "int", "color", null, null);

        if r4 == null goto label3;

        $i2 = virtualinvoke r4.<androidx.slice.SliceItem: int getInt()>();

        $r22 = newarray (java.lang.String)[0];

        virtualinvoke r1.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addInt(int,java.lang.String,java.lang.String[])>($i2, "color", $r22);

     label3:
        r5 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem findTopLevelItem(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(r0, "int", "layout_direction", null, null);

        if r5 == null goto label4;

        $i1 = virtualinvoke r5.<androidx.slice.SliceItem: int getInt()>();

        $r20 = newarray (java.lang.String)[0];

        virtualinvoke r1.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addInt(int,java.lang.String,java.lang.String[])>($i1, "layout_direction", $r20);

     label4:
        r6 = staticinvoke <androidx.slice.SliceUtils: java.util.List getSliceKeywords(androidx.slice.Slice)>(r0);

        if r6 == null goto label7;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i0 <= 0 goto label7;

        $r12 = new androidx.slice.Slice$Builder;

        specialinvoke $r12.<androidx.slice.Slice$Builder: void <init>(androidx.slice.Slice$Builder)>(r1);

        r28 = $r12;

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r17;

        $r18 = newarray (java.lang.String)[0];

        virtualinvoke r28.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.lang.String[])>(r8, null, $r18);

        goto label5;

     label6:
        $r13 = newarray (java.lang.String)[1];

        $r13[0] = "keywords";

        $r14 = virtualinvoke r28.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.lang.String[])>($r13);

        $r15 = virtualinvoke $r14.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        virtualinvoke r1.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice)>($r15);

     label7:
        r29 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getHints()>();

        $i5 = interfaceinvoke r29.<java.util.List: int size()>();

        if $i5 <= 0 goto label8;

        virtualinvoke r1.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.util.List)>(r29);

     label8:
        return r1;
    }

    public static void serializeSlice(androidx.slice.Slice, android.content.Context, java.io.OutputStream, java.lang.String, androidx.slice.SliceUtils$SerializeOptions) throws java.io.IOException, java.lang.IllegalArgumentException
    {
        androidx.slice.Slice r0;
        android.content.Context r1;
        java.io.OutputStream r2;
        java.lang.String r3;
        androidx.slice.SliceUtils$SerializeOptions r4;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.io.OutputStream;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: androidx.slice.SliceUtils$SerializeOptions;

        staticinvoke <androidx.slice.SliceUtils: void serializeSlice(androidx.slice.Slice,android.content.Context,java.io.OutputStream,androidx.slice.SliceUtils$SerializeOptions)>(r0, r1, r2, r4);

        return;
    }

    public static void serializeSlice(androidx.slice.Slice, android.content.Context, java.io.OutputStream, androidx.slice.SliceUtils$SerializeOptions) throws java.lang.IllegalArgumentException
    {
        androidx.slice.Slice r0, r4;
        android.content.Context r1;
        java.io.OutputStream r2;
        androidx.slice.SliceUtils$SerializeOptions r3;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.io.OutputStream;

        r3 := @parameter3: androidx.slice.SliceUtils$SerializeOptions;

        r4 = staticinvoke <androidx.slice.SliceUtils: androidx.slice.Slice convert(android.content.Context,androidx.slice.Slice,androidx.slice.SliceUtils$SerializeOptions)>(r1, r0, r3);

        staticinvoke <androidx.versionedparcelable.ParcelUtils: void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream)>(r4, r2);

        return;
    }

    public static androidx.slice.Slice convert(android.content.Context, androidx.slice.Slice, androidx.slice.SliceUtils$SerializeOptions)
    {
        android.content.Context r0;
        androidx.slice.Slice r1, $r15, $r28, $r29, $r43, $r44;
        androidx.slice.SliceUtils$SerializeOptions r2;
        androidx.slice.Slice$Builder r3, $r8;
        java.util.Iterator r4;
        androidx.slice.SliceItem r5;
        java.lang.String r6, $r17, $r20, $r24, $r30, $r34, $r39, $r45;
        androidx.slice.SliceUtils$1 r7, $r27;
        android.net.Uri $r9;
        androidx.slice.SliceSpec $r10;
        java.util.List $r12, $r14, $r18, $r21, $r25, $r35, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r16;
        int $i0, $i2, $i3, $i4, $i5;
        long $l1;
        java.lang.CharSequence $r23;
        java.lang.IllegalArgumentException $r32, $r42;
        android.app.RemoteInput $r33;
        android.support.v4.graphics.drawable.IconCompat $r37, $r38;
        byte b6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: androidx.slice.Slice;

        r2 := @parameter2: androidx.slice.SliceUtils$SerializeOptions;

        $r8 = new androidx.slice.Slice$Builder;

        $r9 = virtualinvoke r1.<androidx.slice.Slice: android.net.Uri getUri()>();

        specialinvoke $r8.<androidx.slice.Slice$Builder: void <init>(android.net.Uri)>($r9);

        r3 = $r8;

        $r10 = virtualinvoke r1.<androidx.slice.Slice: androidx.slice.SliceSpec getSpec()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder setSpec(androidx.slice.SliceSpec)>($r10);

        $r12 = virtualinvoke r1.<androidx.slice.Slice: java.util.List getHints()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.util.List)>($r12);

        $r14 = virtualinvoke r1.<androidx.slice.Slice: java.util.List getItems()>();

        r4 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.slice.SliceItem) $r16;

        r6 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        b6 = -1;

        $i0 = virtualinvoke r6.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1422950858: goto label05;
            case 104431: goto label07;
            case 3327612: goto label08;
            case 3556653: goto label06;
            case 100313435: goto label03;
            case 100358090: goto label04;
            case 109526418: goto label02;
            default: goto label09;
        };

     label02:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("slice");

        if $z1 == 0 goto label09;

        b6 = 0;

        goto label09;

     label03:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("image");

        if $z3 == 0 goto label09;

        b6 = 1;

        goto label09;

     label04:
        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("input");

        if $z2 == 0 goto label09;

        b6 = 2;

        goto label09;

     label05:
        $z7 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("action");

        if $z7 == 0 goto label09;

        b6 = 3;

        goto label09;

     label06:
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z4 == 0 goto label09;

        b6 = 4;

        goto label09;

     label07:
        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 == 0 goto label09;

        b6 = 5;

        goto label09;

     label08:
        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z5 == 0 goto label09;

        b6 = 6;

     label09:
        tableswitch(b6)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label22;
            case 5: goto label23;
            case 6: goto label24;
            default: goto label25;
        };

     label10:
        $r43 = virtualinvoke r5.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r44 = staticinvoke <androidx.slice.SliceUtils: androidx.slice.Slice convert(android.content.Context,androidx.slice.Slice,androidx.slice.SliceUtils$SerializeOptions)>(r0, $r43, r2);

        $r45 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice,java.lang.String)>($r44, $r45);

        goto label25;

     label11:
        $i5 = virtualinvoke r2.<androidx.slice.SliceUtils$SerializeOptions: int getImageMode()>();

        tableswitch($i5)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            default: goto label15;
        };

     label12:
        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot serialize icon");

        throw $r42;

     label13:
        goto label15;

     label14:
        $r37 = virtualinvoke r5.<androidx.slice.SliceItem: android.support.v4.graphics.drawable.IconCompat getIcon()>();

        $r38 = staticinvoke <androidx.slice.SliceUtils: android.support.v4.graphics.drawable.IconCompat convert(android.content.Context,android.support.v4.graphics.drawable.IconCompat,androidx.slice.SliceUtils$SerializeOptions)>(r0, $r37, r2);

        $r39 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $r40 = virtualinvoke r5.<androidx.slice.SliceItem: java.util.List getHints()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addIcon(android.support.v4.graphics.drawable.IconCompat,java.lang.String,java.util.List)>($r38, $r39, $r40);

     label15:
        goto label25;

     label16:
        $i4 = virtualinvoke r2.<androidx.slice.SliceUtils$SerializeOptions: int getActionMode()>();

        if $i4 != 0 goto label25;

        $r33 = virtualinvoke r5.<androidx.slice.SliceItem: android.app.RemoteInput getRemoteInput()>();

        $r34 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $r35 = virtualinvoke r5.<androidx.slice.SliceItem: java.util.List getHints()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addRemoteInput(android.app.RemoteInput,java.lang.String,java.util.List)>($r33, $r34, $r35);

        goto label25;

     label17:
        $i3 = virtualinvoke r2.<androidx.slice.SliceUtils$SerializeOptions: int getActionMode()>();

        tableswitch($i3)
        {
            case 0: goto label18;
            case 1: goto label19;
            case 2: goto label20;
            default: goto label21;
        };

     label18:
        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot serialize action");

        throw $r32;

     label19:
        goto label21;

     label20:
        $r27 = new androidx.slice.SliceUtils$1;

        specialinvoke $r27.<androidx.slice.SliceUtils$1: void <init>()>();

        r7 = $r27;

        $r28 = virtualinvoke r5.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r29 = staticinvoke <androidx.slice.SliceUtils: androidx.slice.Slice convert(android.content.Context,androidx.slice.Slice,androidx.slice.SliceUtils$SerializeOptions)>(r0, $r28, r2);

        $r30 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addAction(androidx.slice.SliceItem$ActionHandler,androidx.slice.Slice,java.lang.String)>(r7, $r29, $r30);

     label21:
        goto label25;

     label22:
        $r23 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.CharSequence getText()>();

        $r24 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $r25 = virtualinvoke r5.<androidx.slice.SliceItem: java.util.List getHints()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.util.List)>($r23, $r24, $r25);

        goto label25;

     label23:
        $i2 = virtualinvoke r5.<androidx.slice.SliceItem: int getInt()>();

        $r20 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $r21 = virtualinvoke r5.<androidx.slice.SliceItem: java.util.List getHints()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addInt(int,java.lang.String,java.util.List)>($i2, $r20, $r21);

        goto label25;

     label24:
        $l1 = virtualinvoke r5.<androidx.slice.SliceItem: long getLong()>();

        $r17 = virtualinvoke r5.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $r18 = virtualinvoke r5.<androidx.slice.SliceItem: java.util.List getHints()>();

        virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addLong(long,java.lang.String,java.util.List)>($l1, $r17, $r18);

     label25:
        goto label01;

     label26:
        $r15 = virtualinvoke r3.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        return $r15;
    }

    public static android.support.v4.graphics.drawable.IconCompat convert(android.content.Context, android.support.v4.graphics.drawable.IconCompat, androidx.slice.SliceUtils$SerializeOptions)
    {
        android.content.Context r0;
        android.support.v4.graphics.drawable.IconCompat r1, $r4;
        androidx.slice.SliceUtils$SerializeOptions r2;
        byte[] r3;
        int $i0, $i1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.support.v4.graphics.drawable.IconCompat;

        r2 := @parameter2: androidx.slice.SliceUtils$SerializeOptions;

        $i0 = virtualinvoke r1.<android.support.v4.graphics.drawable.IconCompat: int getType()>();

        lookupswitch($i0)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        return r1;

     label2:
        r3 = staticinvoke <androidx.slice.SliceXml: byte[] convertToBytes(android.support.v4.graphics.drawable.IconCompat,android.content.Context,androidx.slice.SliceUtils$SerializeOptions)>(r1, r0, r2);

        $i1 = lengthof r3;

        $r4 = staticinvoke <android.support.v4.graphics.drawable.IconCompat: android.support.v4.graphics.drawable.IconCompat createWithData(byte[],int,int)>(r3, 0, $i1);

        return $r4;
    }

    public static androidx.slice.Slice parseSlice(android.content.Context, java.io.InputStream, java.lang.String, androidx.slice.SliceUtils$SliceActionListener) throws java.io.IOException, androidx.slice.SliceUtils$SliceParseException
    {
        android.content.Context r0;
        java.io.InputStream r1;
        java.lang.String r2, r5;
        androidx.slice.SliceUtils$SliceActionListener r3;
        java.io.BufferedInputStream r4, $r7;
        boolean z0;
        androidx.slice.Slice r6, $r9;
        java.lang.Class $r8;
        int $i0, $i1;
        androidx.versionedparcelable.VersionedParcelable $r10;
        androidx.slice.SliceUtils$2 $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.InputStream;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: androidx.slice.SliceUtils$SliceActionListener;

        $r7 = new java.io.BufferedInputStream;

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

        r4 = $r7;

        $r8 = class "Landroidx/slice/Slice;";

        r5 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        $i1 = $i0 + 4;

        virtualinvoke r4.<java.io.BufferedInputStream: void mark(int)>($i1);

        z0 = staticinvoke <androidx.slice.SliceUtils: boolean doesStreamStartWith(java.lang.String,java.io.BufferedInputStream)>(r5, r4);

        virtualinvoke r4.<java.io.BufferedInputStream: void reset()>();

        if z0 == 0 goto label1;

        $r10 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream)>(r4);

        r6 = (androidx.slice.Slice) $r10;

        $r11 = new androidx.slice.SliceUtils$2;

        specialinvoke $r11.<androidx.slice.SliceUtils$2: void <init>(androidx.slice.SliceUtils$SliceActionListener)>(r3);

        staticinvoke <androidx.slice.SliceUtils: void setActionsAndUpdateIcons(androidx.slice.Slice,androidx.slice.SliceItem$ActionHandler,android.content.Context)>(r6, $r11, r0);

        return r6;

     label1:
        $r9 = staticinvoke <androidx.slice.SliceXml: androidx.slice.Slice parseSlice(android.content.Context,java.io.InputStream,java.lang.String,androidx.slice.SliceUtils$SliceActionListener)>(r0, r4, r2, r3);

        return $r9;
    }

    private static void setActionsAndUpdateIcons(androidx.slice.Slice, androidx.slice.SliceItem$ActionHandler, android.content.Context)
    {
        androidx.slice.Slice r0, $r8, $r13;
        androidx.slice.SliceItem$ActionHandler r1;
        android.content.Context r2;
        java.util.Iterator r3;
        androidx.slice.SliceItem r4;
        java.lang.String r5;
        java.util.List $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r7, $r10, $r12;
        int $i0;
        android.support.v4.util.Pair $r9, $r11;
        android.support.v4.graphics.drawable.IconCompat $r14;
        byte b1;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: androidx.slice.SliceItem$ActionHandler;

        r2 := @parameter2: android.content.Context;

        $r6 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getItems()>();

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.slice.SliceItem) $r7;

        r5 = virtualinvoke r4.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        b1 = -1;

        $i0 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1422950858: goto label03;
            case 100313435: goto label02;
            case 109526418: goto label04;
            default: goto label05;
        };

     label02:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("image");

        if $z2 == 0 goto label05;

        b1 = 0;

        goto label05;

     label03:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("action");

        if $z3 == 0 goto label05;

        b1 = 1;

        goto label05;

     label04:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("slice");

        if $z1 == 0 goto label05;

        b1 = 2;

     label05:
        tableswitch(b1)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            default: goto label09;
        };

     label06:
        $r14 = virtualinvoke r4.<androidx.slice.SliceItem: android.support.v4.graphics.drawable.IconCompat getIcon()>();

        virtualinvoke $r14.<android.support.v4.graphics.drawable.IconCompat: void checkResource(android.content.Context)>(r2);

        goto label09;

     label07:
        $r9 = new android.support.v4.util.Pair;

        $r10 = r4.<androidx.slice.SliceItem: java.lang.Object mObj>;

        $r11 = (android.support.v4.util.Pair) $r10;

        $r12 = $r11.<android.support.v4.util.Pair: java.lang.Object second>;

        specialinvoke $r9.<android.support.v4.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r12);

        r4.<androidx.slice.SliceItem: java.lang.Object mObj> = $r9;

        $r13 = virtualinvoke r4.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        staticinvoke <androidx.slice.SliceUtils: void setActionsAndUpdateIcons(androidx.slice.Slice,androidx.slice.SliceItem$ActionHandler,android.content.Context)>($r13, r1, r2);

        goto label09;

     label08:
        $r8 = virtualinvoke r4.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        staticinvoke <androidx.slice.SliceUtils: void setActionsAndUpdateIcons(androidx.slice.Slice,androidx.slice.SliceItem$ActionHandler,android.content.Context)>($r8, r1, r2);

     label09:
        goto label01;

     label10:
        return;
    }

    private static boolean doesStreamStartWith(java.lang.String, java.io.BufferedInputStream)
    {
        java.lang.String r0;
        java.io.BufferedInputStream r1;
        byte[] r2, r3;
        java.lang.Throwable r4, $r6;
        java.nio.charset.Charset $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.BufferedInputStream;

        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        $i0 = lengthof r2;

        r3 = newarray (byte)[$i0];

     label1:
        $i1 = virtualinvoke r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r3, 0, 4);

        if $i1 >= 0 goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r3;

        $i3 = virtualinvoke r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r3, 0, $i2);

        if $i3 >= 0 goto label5;

     label4:
        return 0;

     label5:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r3, r2);

     label6:
        return $z0;

     label7:
        $r6 := @caughtexception;

        r4 = $r6;

        return 0;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public static int getLoadingState(androidx.slice.Slice)
    {
        androidx.slice.Slice r0;
        boolean z0, $z1;
        androidx.slice.SliceItem $r1;
        java.util.List $r2;
        int $i0;

        r0 := @parameter0: androidx.slice.Slice;

        $r1 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "partial", null);

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r2 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getItems()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        return 0;

     label3:
        if z0 == 0 goto label4;

        return 1;

     label4:
        return 2;
    }

    public static java.util.List getSliceActions(androidx.slice.Slice)
    {
        androidx.slice.Slice r0;
        androidx.slice.SliceItem r1;
        java.lang.String[] r2, $r3;
        java.util.List $r4;

        r0 := @parameter0: androidx.slice.Slice;

        r1 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String)>(r0, "slice", "actions", null);

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "actions";

        $r3[1] = "shortcut";

        r2 = $r3;

        if r1 == null goto label1;

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List findAll(androidx.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r1, "slice", r2, null);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public static java.util.List getSliceKeywords(androidx.slice.Slice)
    {
        androidx.slice.Slice r0;
        androidx.slice.SliceItem r1, $r7;
        java.util.List r2;
        java.util.ArrayList r3, $r5;
        java.lang.String r4;
        int $i0, i1;
        java.lang.Object $r6;
        java.lang.CharSequence $r8;
        boolean $z0;

        r0 := @parameter0: androidx.slice.Slice;

        r1 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.Slice,java.lang.String,java.lang.String,java.lang.String)>(r0, "slice", "keywords", null);

        if r1 == null goto label4;

        r2 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List findAll(androidx.slice.SliceItem,java.lang.String)>(r1, "text");

        if r2 == null goto label4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r3 = $r5;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (androidx.slice.SliceItem) $r6;

        $r8 = virtualinvoke $r7.<androidx.slice.SliceItem: java.lang.CharSequence getText()>();

        r4 = (java.lang.String) $r8;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label2;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r3;

     label4:
        return null;
    }

androidx.slice.SliceUtils$1
    void <init>()
    {
        androidx.slice.SliceUtils$1 r0;

        r0 := @this: androidx.slice.SliceUtils$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAction(androidx.slice.SliceItem, android.content.Context, android.content.Intent)
    {
        androidx.slice.SliceUtils$1 r0;
        androidx.slice.SliceItem r1;
        android.content.Context r2;
        android.content.Intent r3;

        r0 := @this: androidx.slice.SliceUtils$1;

        r1 := @parameter0: androidx.slice.SliceItem;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.content.Intent;

        return;
    }

androidx.slice.SliceUtils$2
<androidx.slice.SliceUtils$2: androidx.slice.SliceUtils$SliceActionListener val$listener>
    void <init>(androidx.slice.SliceUtils$SliceActionListener)
    {
        androidx.slice.SliceUtils$2 r0;
        androidx.slice.SliceUtils$SliceActionListener r1;

        r0 := @this: androidx.slice.SliceUtils$2;

        r1 := @parameter0: androidx.slice.SliceUtils$SliceActionListener;

        r0.<androidx.slice.SliceUtils$2: androidx.slice.SliceUtils$SliceActionListener val$listener> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAction(androidx.slice.SliceItem, android.content.Context, android.content.Intent)
    {
        androidx.slice.SliceUtils$2 r0;
        androidx.slice.SliceItem r1;
        android.content.Context r2;
        android.content.Intent r3;
        androidx.slice.SliceUtils$SliceActionListener $r4;
        androidx.slice.Slice $r5;
        android.net.Uri $r6;

        r0 := @this: androidx.slice.SliceUtils$2;

        r1 := @parameter0: androidx.slice.SliceItem;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.content.Intent;

        $r4 = r0.<androidx.slice.SliceUtils$2: androidx.slice.SliceUtils$SliceActionListener val$listener>;

        $r5 = virtualinvoke r1.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r6 = virtualinvoke $r5.<androidx.slice.Slice: android.net.Uri getUri()>();

        interfaceinvoke $r4.<androidx.slice.SliceUtils$SliceActionListener: void onSliceAction(android.net.Uri,android.content.Context,android.content.Intent)>($r6, r2, r3);

        return;
    }

androidx.slice.SliceUtils$SerializeOptions
<androidx.slice.SliceUtils$SerializeOptions: int MODE_THROW>
<androidx.slice.SliceUtils$SerializeOptions: int MODE_REMOVE>
<androidx.slice.SliceUtils$SerializeOptions: int MODE_CONVERT>
<androidx.slice.SliceUtils$SerializeOptions: int mActionMode>
<androidx.slice.SliceUtils$SerializeOptions: int mImageMode>
<androidx.slice.SliceUtils$SerializeOptions: int mMaxWidth>
<androidx.slice.SliceUtils$SerializeOptions: int mMaxHeight>
<androidx.slice.SliceUtils$SerializeOptions: android.graphics.Bitmap$CompressFormat mFormat>
<androidx.slice.SliceUtils$SerializeOptions: int mQuality>
    public void <init>()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        android.graphics.Bitmap$CompressFormat $r1;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mActionMode> = 0;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mImageMode> = 0;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mMaxWidth> = 1000;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mMaxHeight> = 1000;

        $r1 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        r0.<androidx.slice.SliceUtils$SerializeOptions: android.graphics.Bitmap$CompressFormat mFormat> = $r1;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mQuality> = 100;

        return;
    }

    public void checkThrow(java.lang.String)
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        java.lang.String r1, r2, $r7;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        byte b3;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b3 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1422950858: goto label1;
            case 100313435: goto label3;
            case 100358090: goto label2;
            default: goto label4;
        };

     label1:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("action");

        if $z2 == 0 goto label4;

        b3 = 0;

        goto label4;

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("input");

        if $z0 == 0 goto label4;

        b3 = 1;

        goto label4;

     label3:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("image");

        if $z1 == 0 goto label4;

        b3 = 2;

     label4:
        tableswitch(b3)
        {
            case 0: goto label5;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label5:
        $i2 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mActionMode>;

        if $i2 == 0 goto label8;

        return;

     label6:
        $i1 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mImageMode>;

        if $i1 == 0 goto label8;

        return;

     label7:
        return;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be serialized");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public int getActionMode()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int $i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        $i0 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mActionMode>;

        return $i0;
    }

    public int getImageMode()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int $i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        $i0 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mImageMode>;

        return $i0;
    }

    public int getMaxWidth()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int $i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        $i0 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mMaxWidth>;

        return $i0;
    }

    public int getMaxHeight()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int $i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        $i0 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mMaxHeight>;

        return $i0;
    }

    public android.graphics.Bitmap$CompressFormat getFormat()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        android.graphics.Bitmap$CompressFormat $r1;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        $r1 = r0.<androidx.slice.SliceUtils$SerializeOptions: android.graphics.Bitmap$CompressFormat mFormat>;

        return $r1;
    }

    public int getQuality()
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int $i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        $i0 = r0.<androidx.slice.SliceUtils$SerializeOptions: int mQuality>;

        return $i0;
    }

    public androidx.slice.SliceUtils$SerializeOptions setActionMode(int)
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        i0 := @parameter0: int;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mActionMode> = i0;

        return r0;
    }

    public androidx.slice.SliceUtils$SerializeOptions setImageMode(int)
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        i0 := @parameter0: int;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mImageMode> = i0;

        return r0;
    }

    public androidx.slice.SliceUtils$SerializeOptions setMaxImageWidth(int)
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        i0 := @parameter0: int;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mMaxWidth> = i0;

        return r0;
    }

    public androidx.slice.SliceUtils$SerializeOptions setMaxImageHeight(int)
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        int i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        i0 := @parameter0: int;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mMaxHeight> = i0;

        return r0;
    }

    public androidx.slice.SliceUtils$SerializeOptions setImageConversionFormat(android.graphics.Bitmap$CompressFormat, int)
    {
        androidx.slice.SliceUtils$SerializeOptions r0;
        android.graphics.Bitmap$CompressFormat r1;
        int i0;

        r0 := @this: androidx.slice.SliceUtils$SerializeOptions;

        r1 := @parameter0: android.graphics.Bitmap$CompressFormat;

        i0 := @parameter1: int;

        r0.<androidx.slice.SliceUtils$SerializeOptions: android.graphics.Bitmap$CompressFormat mFormat> = r1;

        r0.<androidx.slice.SliceUtils$SerializeOptions: int mQuality> = i0;

        return r0;
    }

androidx.slice.SliceUtils$SliceActionListener
<androidx.slice.SliceUtils$SliceActionListener: void onSliceAction(android.net.Uri,android.content.Context,android.content.Intent)>
androidx.slice.SliceUtils$SliceParseException
    public void <init>(java.lang.String, java.lang.Throwable)
    {
        androidx.slice.SliceUtils$SliceParseException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.slice.SliceUtils$SliceParseException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        androidx.slice.SliceUtils$SliceParseException r0;
        java.lang.String r1;

        r0 := @this: androidx.slice.SliceUtils$SliceParseException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

