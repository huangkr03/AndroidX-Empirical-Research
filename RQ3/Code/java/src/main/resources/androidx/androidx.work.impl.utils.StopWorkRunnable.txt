androidx.work.impl.utils.StopWorkRunnable
<androidx.work.impl.utils.StopWorkRunnable: java.lang.String TAG>
<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>
<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.StartStopToken mToken>
<androidx.work.impl.utils.StopWorkRunnable: boolean mStopInForeground>
    public void <init>(androidx.work.impl.WorkManagerImpl, androidx.work.impl.StartStopToken, boolean)
    {
        androidx.work.impl.utils.StopWorkRunnable r0;
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.impl.StartStopToken r2;
        boolean z0;

        r0 := @this: androidx.work.impl.utils.StopWorkRunnable;

        r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        r2 := @parameter1: androidx.work.impl.StartStopToken;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.WorkManagerImpl mWorkManagerImpl> = r1;

        r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.StartStopToken mToken> = r2;

        r0.<androidx.work.impl.utils.StopWorkRunnable: boolean mStopInForeground> = z0;

        return;
    }

    public void run()
    {
        androidx.work.impl.utils.StopWorkRunnable r0;
        boolean $z0, z1;
        androidx.work.impl.WorkManagerImpl $r1, $r15;
        androidx.work.impl.Processor $r2, $r16;
        androidx.work.impl.StartStopToken $r3, $r8, $r17;
        androidx.work.Logger $r4;
        java.lang.StringBuilder $r5, $r7, $r11, $r12, $r13;
        java.lang.String $r6, $r10, $r14;
        androidx.work.impl.model.WorkGenerationalId $r9;

        r0 := @this: androidx.work.impl.utils.StopWorkRunnable;

        $z0 = r0.<androidx.work.impl.utils.StopWorkRunnable: boolean mStopInForeground>;

        if $z0 == 0 goto label1;

        $r15 = r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r16 = virtualinvoke $r15.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.Processor getProcessor()>();

        $r17 = r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.StartStopToken mToken>;

        z1 = virtualinvoke $r16.<androidx.work.impl.Processor: boolean stopForegroundWork(androidx.work.impl.StartStopToken)>($r17);

        goto label2;

     label1:
        $r1 = r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r2 = virtualinvoke $r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.Processor getProcessor()>();

        $r3 = r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.StartStopToken mToken>;

        z1 = virtualinvoke $r2.<androidx.work.impl.Processor: boolean stopWork(androidx.work.impl.StartStopToken)>($r3);

     label2:
        $r4 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r6 = <androidx.work.impl.utils.StopWorkRunnable: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StopWorkRunnable for ");

        $r8 = r0.<androidx.work.impl.utils.StopWorkRunnable: androidx.work.impl.StartStopToken mToken>;

        $r9 = virtualinvoke $r8.<androidx.work.impl.StartStopToken: androidx.work.impl.model.WorkGenerationalId getId()>();

        $r10 = virtualinvoke $r9.<androidx.work.impl.model.WorkGenerationalId: java.lang.String getWorkSpecId()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Processor.stopWork = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r6, $r14);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("StopWorkRunnable");

        <androidx.work.impl.utils.StopWorkRunnable: java.lang.String TAG> = $r0;

        return;
    }

