androidx.metrics.performance.DelegatingOnPreDrawListener
<androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion Companion>
<androidx.metrics.performance.DelegatingOnPreDrawListener: android.view.Choreographer choreographer>
<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>
<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating>
<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded>
<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved>
<androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.ref.WeakReference decorViewRef>
<androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.PerformanceMetricsState$Holder metricsStateHolder>
<androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.reflect.Field choreographerLastFrameTimeField>
    public void <init>(android.view.View, android.view.Choreographer, java.util.List)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        android.view.View r1;
        android.view.Choreographer r2;
        java.util.List r3, $r5, $r7;
        java.util.ArrayList $r4, $r6;
        java.lang.ref.WeakReference $r8;
        androidx.metrics.performance.PerformanceMetricsState$Companion $r9;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r10;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.Choreographer;

        r3 := @parameter2: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "decorView");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "choreographer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "delegates");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: android.view.Choreographer choreographer> = r2;

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates> = r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = (java.util.List) $r4;

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = (java.util.List) $r6;

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved> = $r7;

        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.ref.WeakReference decorViewRef> = $r8;

        $r9 = <androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.metrics.performance.PerformanceMetricsState$Companion: androidx.metrics.performance.PerformanceMetricsState$Holder getHolderForHierarchy(android.view.View)>(r1);

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.PerformanceMetricsState$Holder metricsStateHolder> = $r10;

        return;
    }

    public final android.view.Choreographer getChoreographer()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        android.view.Choreographer $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: android.view.Choreographer choreographer>;

        return $r1;
    }

    public final java.util.List getDelegates()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        java.util.List $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        return $r1;
    }

    public final boolean getIterating()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        boolean $z0;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $z0 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating>;

        return $z0;
    }

    public final void setIterating(boolean)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        boolean z0;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        z0 := @parameter0: boolean;

        r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating> = z0;

        return;
    }

    public final java.util.List getToBeAdded()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        java.util.List $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded>;

        return $r1;
    }

    public final java.util.List getToBeRemoved()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        java.util.List $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved>;

        return $r1;
    }

    public final java.lang.ref.WeakReference getDecorViewRef()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.ref.WeakReference decorViewRef>;

        return $r1;
    }

    public final androidx.metrics.performance.PerformanceMetricsState$Holder getMetricsStateHolder()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.PerformanceMetricsState$Holder metricsStateHolder>;

        return $r1;
    }

    public boolean onPreDraw()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        android.view.View r1, r2;
        long l0;
        android.os.Message r4;
        android.os.Handler r6, $r9, $r10;
        java.lang.ref.WeakReference $r7;
        java.lang.Object $r8;
        java.lang.Runnable $r11;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r7 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.ref.WeakReference decorViewRef>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.View) $r8;

        if r1 == null goto label1;

        r2 = r1;

        l0 = specialinvoke r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: long getFrameStartTime()>();

        $r9 = virtualinvoke r1.<android.view.View: android.os.Handler getHandler()>();

        $r10 = virtualinvoke r1.<android.view.View: android.os.Handler getHandler()>();

        $r11 = dynamicinvoke "run" <java.lang.Runnable (android.view.View,androidx.metrics.performance.DelegatingOnPreDrawListener,long,android.view.View)>(r1, r0, l0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.metrics.performance.DelegatingOnPreDrawListener: void onPreDraw$lambda-4$lambda-3$lambda-1(android.view.View,androidx.metrics.performance.DelegatingOnPreDrawListener,long,android.view.View)>, methodtype: void __METHODTYPE__());

        r4 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>($r10, $r11);

        r6 = $r9;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "this");

        virtualinvoke r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: void setMessageAsynchronicity$metrics_performance_release(android.os.Message)>(r4);

        virtualinvoke r6.<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>(r4);

        goto label1;

     label1:
        return 1;
    }

    public final void add(androidx.metrics.performance.OnFrameListenerDelegate)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0, r2;
        androidx.metrics.performance.OnFrameListenerDelegate r1;
        boolean $z0;
        java.util.List $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        r1 := @parameter0: androidx.metrics.performance.OnFrameListenerDelegate;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        r2 = r0;

        entermonitor r2;

     label1:
        $z0 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating>;

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r3 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r2;

        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void remove(androidx.metrics.performance.OnFrameListenerDelegate, android.view.ViewTreeObserver)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0, r3;
        androidx.metrics.performance.OnFrameListenerDelegate r1;
        android.view.ViewTreeObserver r2;
        boolean z0, $z1, $z2, $z4, $z5, $z7;
        android.view.View r4;
        java.util.List $r5, $r7, $r8, $r12;
        java.util.Collection $r6;
        android.view.ViewTreeObserver$OnPreDrawListener $r9;
        java.lang.ref.WeakReference $r10;
        java.lang.Object $r11, $r14;
        int $i0;
        java.lang.Throwable $r13;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        r1 := @parameter0: androidx.metrics.performance.OnFrameListenerDelegate;

        r2 := @parameter1: android.view.ViewTreeObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "viewTreeObserver");

        r3 = r0;

        entermonitor r3;

     label01:
        $z1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating>;

        if $z1 == 0 goto label02;

        $r12 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved>;

        $z5 = interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r1);

        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        goto label07;

     label02:
        $r5 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        $r6 = (java.util.Collection) $r5;

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z0 = $z7;

        $r7 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        interfaceinvoke $r7.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if z0 == 0 goto label06;

        $r8 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        $z4 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label06;

        $r9 = (android.view.ViewTreeObserver$OnPreDrawListener) r0;

        virtualinvoke r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r9);

        $r10 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.ref.WeakReference decorViewRef>;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.view.View) $r11;

        if r4 == null goto label05;

        $i0 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        virtualinvoke r4.<android.view.View: void setTag(int,java.lang.Object)>($i0, null);

        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label07;

     label05:
        goto label07;

     label06:
        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label07:
        exitmonitor r3;

        goto label10;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r3;

        throw $r13;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private final long getFrameStartTime()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        android.view.Choreographer $r1;
        java.lang.reflect.Field $r2;
        java.lang.Object $r3;
        java.lang.Long $r4;
        long $l0;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $r2 = <androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.reflect.Field choreographerLastFrameTimeField>;

        $r1 = r0.<androidx.metrics.performance.DelegatingOnPreDrawListener: android.view.Choreographer choreographer>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Long");

        $r4 = (java.lang.Long) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public void setMessageAsynchronicity$metrics_performance_release(android.os.Message)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener r0;
        android.os.Message r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener;

        r1 := @parameter0: android.os.Message;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        return;
    }

    private static final void onPreDraw$lambda-4$lambda-3$lambda-1(android.view.View, androidx.metrics.performance.DelegatingOnPreDrawListener, long, android.view.View)
    {
        android.view.View $r0, $r2;
        androidx.metrics.performance.DelegatingOnPreDrawListener r1, r3;
        long $l0, l1, l2, $l4;
        androidx.metrics.performance.OnFrameListenerDelegate r4, r29, r31;
        androidx.metrics.performance.DelegatingOnPreDrawListener$Companion $r5;
        java.util.List $r6, $r7, $r9, $r13, $r15, $r16, $r17, $r21, $r22, $r23, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z9, $z10, $z11, z12, $z13;
        java.util.Collection $r8, $r10, $r14;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r11;
        androidx.metrics.performance.PerformanceMetricsState $r12;
        android.view.ViewTreeObserver $r18;
        android.view.ViewTreeObserver$OnPreDrawListener $r19;
        int $i3;
        java.lang.Object $r20, $r24, $r26;
        java.lang.Throwable $r27;
        java.util.Iterator r28, r30, r32;
        kotlin.Unit $r33;

        $r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.metrics.performance.DelegatingOnPreDrawListener;

        $l0 := @parameter2: long;

        $r2 := @parameter3: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$this_with");

        l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $r5 = <androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion Companion>;

        l2 = virtualinvoke $r5.<androidx.metrics.performance.DelegatingOnPreDrawListener$Companion: long getExpectedFrameDuration(android.view.View)>($r0);

        r3 = r1;

        entermonitor r3;

     label01:
        r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating> = 1;

        $r6 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        r28 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r26 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (androidx.metrics.performance.OnFrameListenerDelegate) $r26;

        $l4 = l1 - $l0;

        virtualinvoke r29.<androidx.metrics.performance.OnFrameListenerDelegate: void onFrame(long,long,long)>($l0, $l4, l2);

        goto label02;

     label03:
        $r7 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded>;

        $r8 = (java.util.Collection) $r7;

        $z1 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        if $z9 == 0 goto label08;

        $r22 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded>;

        r30 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r24 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (androidx.metrics.performance.OnFrameListenerDelegate) $r24;

        $r25 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r31);

        goto label06;

     label07:
        $r23 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeAdded>;

        interfaceinvoke $r23.<java.util.List: void clear()>();

     label08:
        $r9 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved>;

        $r10 = (java.util.Collection) $r9;

        $z2 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        if $z10 == 0 goto label15;

        $r13 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        $r14 = (java.util.Collection) $r13;

        $z3 = interfaceinvoke $r14.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z12 = $z11;

        $r15 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved>;

        r32 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z13 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label14;

        $r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.metrics.performance.OnFrameListenerDelegate) $r20;

        $r21 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        interfaceinvoke $r21.<java.util.List: boolean remove(java.lang.Object)>(r4);

        goto label13;

     label14:
        $r16 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List toBeRemoved>;

        interfaceinvoke $r16.<java.util.List: void clear()>();

        if z12 == 0 goto label15;

        $r17 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: java.util.List delegates>;

        $z4 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label15;

        $r18 = virtualinvoke $r2.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r19 = (android.view.ViewTreeObserver$OnPreDrawListener) r1;

        virtualinvoke $r18.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r19);

        $i3 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        virtualinvoke $r2.<android.view.View: void setTag(int,java.lang.Object)>($i3, null);

     label15:
        r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: boolean iterating> = 0;

        $r33 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label16:
        exitmonitor r3;

        goto label19;

     label17:
        $r27 := @caughtexception;

     label18:
        exitmonitor r3;

        throw $r27;

     label19:
        $r11 = r1.<androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.PerformanceMetricsState$Holder metricsStateHolder>;

        $r12 = virtualinvoke $r11.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState getState()>();

        if $r12 == null goto label20;

        virtualinvoke $r12.<androidx.metrics.performance.PerformanceMetricsState: void cleanupSingleFrameStates$metrics_performance_release()>();

        goto label20;

     label20:
        return;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public static final java.lang.reflect.Field access$getChoreographerLastFrameTimeField$cp()
    {
        java.lang.reflect.Field $r0;

        $r0 = <androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.reflect.Field choreographerLastFrameTimeField>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener$Companion $r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2, $r3;

        $r0 = new androidx.metrics.performance.DelegatingOnPreDrawListener$Companion;

        specialinvoke $r0.<androidx.metrics.performance.DelegatingOnPreDrawListener$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.metrics.performance.DelegatingOnPreDrawListener: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion Companion> = $r0;

        $r1 = class "Landroid/view/Choreographer;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mLastFrameTimeNanos");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "Choreographer::class.jav\u2026ld(\"mLastFrameTimeNanos\")");

        <androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.reflect.Field choreographerLastFrameTimeField> = $r2;

        $r3 = <androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.reflect.Field choreographerLastFrameTimeField>;

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        return;
    }

androidx.metrics.performance.DelegatingOnPreDrawListener$Companion
    private void <init>()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener$Companion r0;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.reflect.Field getChoreographerLastFrameTimeField()
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener$Companion r0;
        java.lang.reflect.Field $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion;

        $r1 = staticinvoke <androidx.metrics.performance.DelegatingOnPreDrawListener: java.lang.reflect.Field access$getChoreographerLastFrameTimeField$cp()>();

        return $r1;
    }

    public final long getExpectedFrameDuration(android.view.View)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener$Companion r0;
        android.view.View r1;
        android.view.Window r2, $r9;
        android.view.Display r3;
        androidx.metrics.performance.JankStatsBaseImpl$Companion $r4, $r10, $r11;
        long $l0, $l4, $l5;
        byte $b1, $b2, $b3;
        boolean $z0;
        android.view.WindowManager $r5;
        android.content.Context $r6, $r8;
        android.app.Activity $r7;
        float f0, $f1, $f2, $f3, $f4;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion;

        r1 := @parameter0: android.view.View;

        $r4 = <androidx.metrics.performance.JankStatsBaseImpl: androidx.metrics.performance.JankStatsBaseImpl$Companion Companion>;

        $l0 = virtualinvoke $r4.<androidx.metrics.performance.JankStatsBaseImpl$Companion: long getFrameDuration()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label8;

        f0 = 60.0F;

        if r1 == null goto label1;

        $r8 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        $z0 = $r8 instanceof android.app.Activity;

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type android.app.Activity");

        $r7 = (android.app.Activity) $r6;

        $r9 = virtualinvoke $r7.<android.app.Activity: android.view.Window getWindow()>();

        goto label4;

     label3:
        $r9 = null;

     label4:
        r2 = $r9;

        if r2 == null goto label5;

        $r5 = virtualinvoke r2.<android.view.Window: android.view.WindowManager getWindowManager()>();

        r3 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        f0 = virtualinvoke r3.<android.view.Display: float getRefreshRate()>();

     label5:
        $b2 = f0 cmpg 30.0F;

        if $b2 < 0 goto label6;

        $b3 = f0 cmpl 200.0F;

        if $b3 <= 0 goto label7;

     label6:
        f0 = 60.0F;

     label7:
        $r10 = <androidx.metrics.performance.JankStatsBaseImpl: androidx.metrics.performance.JankStatsBaseImpl$Companion Companion>;

        $f1 = (float) 1000;

        $f2 = $f1 / f0;

        $f3 = (float) 1000000;

        $f4 = $f2 * $f3;

        $l4 = (long) $f4;

        virtualinvoke $r10.<androidx.metrics.performance.JankStatsBaseImpl$Companion: void setFrameDuration(long)>($l4);

     label8:
        $r11 = <androidx.metrics.performance.JankStatsBaseImpl: androidx.metrics.performance.JankStatsBaseImpl$Companion Companion>;

        $l5 = virtualinvoke $r11.<androidx.metrics.performance.JankStatsBaseImpl$Companion: long getFrameDuration()>();

        return $l5;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.metrics.performance.DelegatingOnPreDrawListener$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.metrics.performance.DelegatingOnPreDrawListener$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.metrics.performance.DelegatingOnPreDrawListener$Companion: void <init>()>();

        return;
    }

