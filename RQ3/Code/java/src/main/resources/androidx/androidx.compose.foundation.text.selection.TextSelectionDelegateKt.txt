androidx.compose.foundation.text.selection.TextSelectionDelegateKt
    public static final kotlin.Triple processAsSingleComposable-_9LtXmE(int, int, androidx.compose.ui.text.TextRange, boolean, int, boolean)
    {
        int i0, i1, i2, i3, i4;
        androidx.compose.ui.text.TextRange r0;
        boolean z0, z1, $z2, z3;
        kotlin.Triple $r1;
        java.lang.Integer $r2, $r3;
        java.lang.Boolean $r4;
        long l5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.compose.ui.text.TextRange;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        z1 := @parameter5: boolean;

        i3 = i0;

        i4 = i1;

        if i3 != i4 goto label1;

        l5 = staticinvoke <androidx.compose.foundation.text.selection.TextSelectionDelegateKt: long ensureAtLeastOneChar-7uVtTH8(int,int,androidx.compose.ui.text.TextRange,boolean,boolean)>(i0, i2, r0, z0, z1);

        i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l5);

        i4 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l5);

     label1:
        if i3 <= i4 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z3 = $z2;

        $r1 = new kotlin.Triple;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        specialinvoke $r1.<kotlin.Triple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        return $r1;
    }

    public static final kotlin.Triple processCrossComposable-pltxxdk(long, long, int, int, int, androidx.compose.ui.geometry.Rect, boolean, boolean)
    {
        long l0, l1, $l6, $l7;
        int i2, i3, i4, i5, $i9, $i10, i12;
        androidx.compose.ui.geometry.Rect r0;
        boolean z0, z1, z2, z3, z4, z5;
        androidx.compose.foundation.text.selection.SelectionMode $r1, $r2;
        byte b8, b11;
        kotlin.Triple $r4;
        java.lang.Integer $r5, $r6;
        java.lang.Boolean $r7;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r0 := @parameter5: androidx.compose.ui.geometry.Rect;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "bounds");

        $r1 = <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Vertical>;

        z2 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.SelectionMode: boolean areHandlesCrossed-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect,long,long)>(r0, l0, l1);

        $r2 = <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Vertical>;

        if z2 == 0 goto label01;

        $l6 = l1;

        goto label02;

     label01:
        $l6 = l0;

     label02:
        if z2 == 0 goto label03;

        $l7 = l0;

        goto label04;

     label03:
        $l7 = l1;

     label04:
        z3 = virtualinvoke $r2.<androidx.compose.foundation.text.selection.SelectionMode: boolean isSelected-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect,long,long)>(r0, $l6, $l7);

        if z3 == 0 goto label06;

        if z0 != 0 goto label06;

        if z2 == 0 goto label05;

        b8 = 0;

        z5 = 0;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(i4, b8);

        goto label07;

     label05:
        $i9 = 0;

        goto label07;

     label06:
        $i9 = i2;

     label07:
        i5 = $i9;

        if z3 == 0 goto label10;

        if z1 != 0 goto label10;

        if z2 == 0 goto label08;

        $i10 = 0;

        goto label09;

     label08:
        b11 = 0;

        z4 = 0;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(i4, b11);

     label09:
        goto label11;

     label10:
        $i10 = i3;

     label11:
        i12 = $i10;

        $r4 = new kotlin.Triple;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        specialinvoke $r4.<kotlin.Triple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r7);

        return $r4;
    }

    public static final kotlin.Pair updateWordBasedSelection(androidx.compose.ui.text.TextLayoutResult, int, int, boolean)
    {
        androidx.compose.ui.text.TextLayoutResult r0;
        int i0, i1, i2, i5, i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0;
        long l3, l4;
        androidx.compose.ui.text.TextLayoutInput $r1;
        androidx.compose.ui.text.AnnotatedString $r2;
        java.lang.String $r3;
        kotlin.Pair $r4;
        java.lang.Integer $r5, $r6;

        r0 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "textLayoutResult");

        $r1 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.text.TextLayoutInput getLayoutInput()>();

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutInput: androidx.compose.ui.text.AnnotatedString getText()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        $i7 = virtualinvoke $r3.<java.lang.String: int length()>();

        i2 = $i7 - 1;

        $i8 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>(i0, 0, i2);

        l3 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: long getWordBoundary-d9O1mEE(int)>($i8);

        $i9 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>(i1, 0, i2);

        l4 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: long getWordBoundary-d9O1mEE(int)>($i9);

        if z0 == 0 goto label1;

        $i10 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l3);

        goto label2;

     label1:
        $i10 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l3);

     label2:
        i5 = $i10;

        if z0 == 0 goto label3;

        $i11 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l4);

        goto label4;

     label3:
        $i11 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l4);

     label4:
        i6 = $i11;

        $r4 = new kotlin.Pair;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        specialinvoke $r4.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $r4;
    }

    private static final long ensureAtLeastOneChar-7uVtTH8(int, int, androidx.compose.ui.text.TextRange, boolean, boolean)
    {
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14;
        androidx.compose.ui.text.TextRange r0, r1, r2;
        boolean z0, z1, z2, z3, z5, z6;
        long l2, $l15;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.compose.ui.text.TextRange;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z5 = 0;

        i11 = i0;

        z6 = 0;

        i12 = i0;

        r1 = r0;

        if r1 != null goto label01;

        goto label17;

     label01:
        r2 = r1;

        z2 = 0;

        z3 = 0;

        l2 = virtualinvoke r2.<androidx.compose.ui.text.TextRange: long unbox-impl()>();

        if z0 == 0 goto label09;

        if z1 == 0 goto label05;

        if i12 == 0 goto label02;

        $i9 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l2);

        $i10 = i12 + 1;

        if $i9 != $i10 goto label03;

     label02:
        $i13 = i12 + 1;

        goto label04;

     label03:
        $i13 = i12 - 1;

     label04:
        goto label08;

     label05:
        if i12 == i1 goto label06;

        $i7 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l2);

        $i8 = i12 - 1;

        if $i7 != $i8 goto label07;

     label06:
        $i13 = i12 - 1;

        goto label08;

     label07:
        $i13 = i12 + 1;

     label08:
        i11 = $i13;

        goto label17;

     label09:
        if z1 == 0 goto label13;

        if i11 == i1 goto label10;

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l2);

        $i6 = i11 - 1;

        if $i5 != $i6 goto label11;

     label10:
        $i14 = i11 - 1;

        goto label12;

     label11:
        $i14 = i11 + 1;

     label12:
        goto label16;

     label13:
        if i11 == 0 goto label14;

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l2);

        $i4 = i11 + 1;

        if $i3 != $i4 goto label15;

     label14:
        $i14 = i11 + 1;

        goto label16;

     label15:
        $i14 = i11 - 1;

     label16:
        i12 = $i14;

     label17:
        $l15 = staticinvoke <androidx.compose.ui.text.TextRange: long constructor-impl(int,int)>(i11, i12);

        return $l15;
    }

    public static final long getSelectionHandleCoordinates(androidx.compose.ui.text.TextLayoutResult, int, boolean, boolean)
    {
        androidx.compose.ui.text.TextLayoutResult r0;
        int i0, i1, i2, $i5, $i6, $i12, i13;
        boolean z0, z1, z4, z5, z6, $z7;
        float f0, f1, f2, f3;
        long l3, l4, $l7, $l8, $l9, $l10;
        byte b14;
        androidx.compose.ui.text.style.ResolvedTextDirection r2, r3;

        r0 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "textLayoutResult");

        i1 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: int getLineForOffset(int)>(i0);

        if z0 == 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        if z0 != 0 goto label3;

        if z1 == 0 goto label3;

     label2:
        $i12 = i0;

        goto label4;

     label3:
        i13 = i0 - 1;

        b14 = 0;

        z6 = 0;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(i13, b14);

     label4:
        i2 = $i12;

        r2 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int)>(i2);

        r3 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int)>(i0);

        if r2 != r3 goto label5;

        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        f3 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: float getHorizontalPosition(int,boolean)>(i0, $z7);

        f0 = virtualinvoke r0.<androidx.compose.ui.text.TextLayoutResult: float getLineBottom(int)>(i1);

        f1 = f3;

        z4 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l3 = (long) $i5;

        f2 = f0;

        z5 = 0;

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l4 = (long) $i6;

        $l8 = l3 << 32;

        $l7 = l4 & 4294967295L;

        $l9 = $l8 | $l7;

        $l10 = staticinvoke <androidx.compose.ui.geometry.Offset: long constructor-impl(long)>($l9);

        return $l10;
    }

