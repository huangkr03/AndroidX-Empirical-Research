androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int FALLBACK_TYPE_LOCATION>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int FALLBACK_TYPE_TRACK>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>
    public void onLoadTaskConcluded(long)
    {
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        l0 := @parameter0: long;

        return;
    }

<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)>
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfLocations>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfExcludedLocations>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfTracks>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfExcludedTracks>
    public void <init>(int, int, int, int)
    {
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfLocations> = i0;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfExcludedLocations> = i1;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfTracks> = i2;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfExcludedTracks> = i3;

        return;
    }

    public boolean isFallbackAvailable(int)
    {
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions;

        i0 := @parameter0: int;

        if i0 != 1 goto label2;

        $i5 = r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfLocations>;

        $i4 = r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfExcludedLocations>;

        $i6 = $i5 - $i4;

        if $i6 <= 1 goto label1;

        $z0 = 1;

        goto label4;

     label1:
        $z0 = 0;

        goto label4;

     label2:
        $i2 = r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfTracks>;

        $i1 = r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: int numberOfExcludedTracks>;

        $i3 = $i2 - $i1;

        if $i3 <= 1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: int type>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: long exclusionDurationMs>
    public void <init>(int, long)
    {
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection r0;
        int i0;
        long l1;
        byte $b2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b2 = l1 cmp 0L;

        if $b2 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: int type> = i0;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: long exclusionDurationMs> = l1;

        return;
    }

androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackType
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: androidx.media3.exoplayer.source.LoadEventInfo loadEventInfo>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: androidx.media3.exoplayer.source.MediaLoadData mediaLoadData>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: java.io.IOException exception>
<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: int errorCount>
    public void <init>(androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData, java.io.IOException, int)
    {
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r0;
        androidx.media3.exoplayer.source.LoadEventInfo r1;
        androidx.media3.exoplayer.source.MediaLoadData r2;
        java.io.IOException r3;
        int i0;

        r0 := @this: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        r1 := @parameter0: androidx.media3.exoplayer.source.LoadEventInfo;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaLoadData;

        r3 := @parameter2: java.io.IOException;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: androidx.media3.exoplayer.source.LoadEventInfo loadEventInfo> = r1;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: androidx.media3.exoplayer.source.MediaLoadData mediaLoadData> = r2;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: java.io.IOException exception> = r3;

        r0.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: int errorCount> = i0;

        return;
    }

