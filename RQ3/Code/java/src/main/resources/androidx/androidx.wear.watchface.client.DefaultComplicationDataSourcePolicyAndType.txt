androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType
<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.DefaultComplicationDataSourcePolicy policy>
<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.data.ComplicationType type>
    public void <init>(androidx.wear.complications.DefaultComplicationDataSourcePolicy, androidx.wear.complications.data.ComplicationType)
    {
        androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType r0;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r1;
        androidx.wear.complications.data.ComplicationType r2;

        r0 := @this: androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        r1 := @parameter0: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        r2 := @parameter1: androidx.wear.complications.data.ComplicationType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "policy");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "type");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.DefaultComplicationDataSourcePolicy policy> = r1;

        r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.data.ComplicationType type> = r2;

        return;
    }

    public final androidx.wear.complications.DefaultComplicationDataSourcePolicy getPolicy()
    {
        androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType r0;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r1;

        r0 := @this: androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        $r1 = r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.DefaultComplicationDataSourcePolicy policy>;

        return $r1;
    }

    public final androidx.wear.complications.data.ComplicationType getType()
    {
        androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType r0;
        androidx.wear.complications.data.ComplicationType $r1;

        r0 := @this: androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        $r1 = r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.data.ComplicationType type>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType r0, $r4, $r5, $r8;
        java.lang.Object r1, r2;
        java.lang.Class $r3, $r12;
        boolean $z0, $z1;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r6, $r7;
        androidx.wear.complications.data.ComplicationType $r9, $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = r1;

        if r2 != null goto label2;

        $r12 = null;

        goto label3;

     label2:
        $r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label3:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r12);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        if r1 != null goto label5;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType");

        throw $r11;

     label5:
        $r4 = (androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType) r1;

        $r7 = r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.DefaultComplicationDataSourcePolicy policy>;

        $r5 = (androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType) r1;

        $r6 = $r5.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.DefaultComplicationDataSourcePolicy policy>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z1 != 0 goto label6;

        return 0;

     label6:
        $r10 = r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.data.ComplicationType type>;

        $r8 = (androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType) r1;

        $r9 = $r8.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.data.ComplicationType type>;

        if $r10 == $r9 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType r0;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r1;
        androidx.wear.complications.data.ComplicationType $r2;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        $r1 = r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.DefaultComplicationDataSourcePolicy policy>;

        i2 = virtualinvoke $r1.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: int hashCode()>();

        $i0 = 31 * i2;

        $r2 = r0.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: androidx.wear.complications.data.ComplicationType type>;

        $i1 = virtualinvoke $r2.<androidx.wear.complications.data.ComplicationType: int hashCode()>();

        i3 = $i0 + $i1;

        return i3;
    }

