androidx.test.internal.util.ReflectionUtil
<androidx.test.internal.util.ReflectionUtil: java.lang.String TAG>
    public static transient java.lang.Object callStaticMethod(java.lang.Class, java.lang.String, androidx.test.internal.util.ReflectionUtil$ReflectionParams[]) throws androidx.test.internal.util.ReflectionUtil$ReflectionException
    {
        java.lang.Class r0;
        java.lang.String r1, r5, $r9;
        androidx.test.internal.util.ReflectionUtil$ReflectionParams[] r2;
        java.lang.Object[] r3;
        java.lang.reflect.Method r4;
        java.lang.StringBuilder $r7, $r8, r21;
        java.lang.Object $r10;
        java.lang.Throwable $r11, $r13, $r15, r18, r19, r20, r25, r26, r27;
        java.lang.Class[] r17;
        androidx.test.internal.util.ReflectionUtil$ReflectionException r22, r23, r24;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.test.internal.util.ReflectionUtil$ReflectionParams[];

        r5 = r1;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to reflectively call: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReflectionUtil", $r9);

     label1:
        r17 = staticinvoke <androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Class[] getTypes(androidx.test.internal.util.ReflectionUtil$ReflectionParams[])>(r2);

        r3 = staticinvoke <androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Object[] getValues(androidx.test.internal.util.ReflectionUtil$ReflectionParams[])>(r2);

        r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r1, r17);

        virtualinvoke r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r10 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r3);

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        r18 = $r11;

        r22 = new androidx.test.internal.util.ReflectionUtil$ReflectionException;

        specialinvoke r22.<androidx.test.internal.util.ReflectionUtil$ReflectionException: void <init>(java.lang.Exception)>(r18);

        r25 = (java.lang.Throwable) r22;

        throw r25;

     label4:
        $r15 := @caughtexception;

        r19 = $r15;

        r23 = new androidx.test.internal.util.ReflectionUtil$ReflectionException;

        specialinvoke r23.<androidx.test.internal.util.ReflectionUtil$ReflectionException: void <init>(java.lang.Exception)>(r19);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label5:
        $r13 := @caughtexception;

        r20 = $r13;

        r24 = new androidx.test.internal.util.ReflectionUtil$ReflectionException;

        specialinvoke r24.<androidx.test.internal.util.ReflectionUtil$ReflectionException: void <init>(java.lang.Exception)>(r20);

        r27 = (java.lang.Throwable) r24;

        throw r27;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    public static transient java.lang.Object callStaticMethod(java.lang.String, java.lang.String, androidx.test.internal.util.ReflectionUtil$ReflectionParams[]) throws androidx.test.internal.util.ReflectionUtil$ReflectionException
    {
        java.lang.String r0, r1;
        androidx.test.internal.util.ReflectionUtil$ReflectionParams[] r2;
        java.lang.Throwable r3, $r6, r9;
        java.lang.Class $r4;
        java.lang.Object $r5;
        androidx.test.internal.util.ReflectionUtil$ReflectionException r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.test.internal.util.ReflectionUtil$ReflectionParams[];

     label1:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r5 = staticinvoke <androidx.test.internal.util.ReflectionUtil: java.lang.Object callStaticMethod(java.lang.Class,java.lang.String,androidx.test.internal.util.ReflectionUtil$ReflectionParams[])>($r4, r1, r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        r8 = new androidx.test.internal.util.ReflectionUtil$ReflectionException;

        specialinvoke r8.<androidx.test.internal.util.ReflectionUtil$ReflectionException: void <init>(java.lang.Exception)>(r3);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public void <init>()
    {
        androidx.test.internal.util.ReflectionUtil r0;

        r0 := @this: androidx.test.internal.util.ReflectionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.internal.util.ReflectionUtil$ReflectionException
    void <init>(java.lang.Exception)
    {
        androidx.test.internal.util.ReflectionUtil$ReflectionException r0;
        java.lang.Exception r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.internal.util.ReflectionUtil$ReflectionException;

        r1 := @parameter0: java.lang.Exception;

        r2 = (java.lang.Throwable) r1;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Reflective call failed", r2);

        return;
    }

androidx.test.internal.util.ReflectionUtil$ReflectionParams
<androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Class type>
<androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Object value>
    public void <init>(java.lang.Class, java.lang.Object)
    {
        androidx.test.internal.util.ReflectionUtil$ReflectionParams r0;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: androidx.test.internal.util.ReflectionUtil$ReflectionParams;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Class type> = r1;

        r0.<androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Object value> = r2;

        return;
    }

    public static java.lang.Class[] getTypes(androidx.test.internal.util.ReflectionUtil$ReflectionParams[])
    {
        androidx.test.internal.util.ReflectionUtil$ReflectionParams[] r0;
        java.lang.Class[] r1;
        int $i0, $i1, i2;
        androidx.test.internal.util.ReflectionUtil$ReflectionParams $r2;
        java.lang.Class $r3;

        r0 := @parameter0: androidx.test.internal.util.ReflectionUtil$ReflectionParams[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Class)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $r3 = $r2.<androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Class type>;

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.Object[] getValues(androidx.test.internal.util.ReflectionUtil$ReflectionParams[])
    {
        androidx.test.internal.util.ReflectionUtil$ReflectionParams[] r0;
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        androidx.test.internal.util.ReflectionUtil$ReflectionParams $r2;
        java.lang.Object $r3;

        r0 := @parameter0: androidx.test.internal.util.ReflectionUtil$ReflectionParams[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $r3 = $r2.<androidx.test.internal.util.ReflectionUtil$ReflectionParams: java.lang.Object value>;

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

