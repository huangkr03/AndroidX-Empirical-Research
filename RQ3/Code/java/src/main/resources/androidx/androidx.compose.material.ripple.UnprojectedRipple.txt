androidx.compose.material.ripple.UnprojectedRipple
<androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.material.ripple.UnprojectedRipple$Companion Companion>
<androidx.compose.material.ripple.UnprojectedRipple: boolean bounded>
<androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.ui.graphics.Color rippleColor>
<androidx.compose.material.ripple.UnprojectedRipple: java.lang.Integer rippleRadius>
<androidx.compose.material.ripple.UnprojectedRipple: boolean projected>
<androidx.compose.material.ripple.UnprojectedRipple: java.lang.reflect.Method setMaxRadiusMethod>
<androidx.compose.material.ripple.UnprojectedRipple: boolean setMaxRadiusFetched>
    public void <init>(boolean)
    {
        androidx.compose.material.ripple.UnprojectedRipple r0;
        boolean z0;
        android.content.res.ColorStateList $r1;
        android.graphics.drawable.Drawable $r2;
        android.graphics.drawable.ColorDrawable $r4;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-16777216);

        if z0 == 0 goto label1;

        $r4 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r4.<android.graphics.drawable.ColorDrawable: void <init>(int)>(-1);

        goto label2;

     label1:
        $r4 = null;

     label2:
        $r2 = (android.graphics.drawable.Drawable) $r4;

        specialinvoke r0.<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r1, null, $r2);

        r0.<androidx.compose.material.ripple.UnprojectedRipple: boolean bounded> = z0;

        return;
    }

    public final void setColor-DxMtmZc(long, float)
    {
        androidx.compose.material.ripple.UnprojectedRipple r0;
        long l0, l1, $l2;
        float f0;
        androidx.compose.ui.graphics.Color $r1, $r2;
        int $i3;
        android.content.res.ColorStateList $r3;
        boolean $z0;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        l1 = specialinvoke r0.<androidx.compose.material.ripple.UnprojectedRipple: long calculateRippleColor-5vOe2sY(long,float)>(l0, f0);

        $r1 = r0.<androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.ui.graphics.Color rippleColor>;

        if $r1 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $l2 = virtualinvoke $r1.<androidx.compose.ui.graphics.Color: long unbox-impl()>();

        $z0 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l2, l1);

     label2:
        if $z0 != 0 goto label3;

        $r2 = staticinvoke <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color box-impl(long)>(l1);

        r0.<androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.ui.graphics.Color rippleColor> = $r2;

        $i3 = staticinvoke <androidx.compose.ui.graphics.ColorKt: int toArgb-8_81llA(long)>(l1);

        $r3 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i3);

        virtualinvoke r0.<androidx.compose.material.ripple.UnprojectedRipple: void setColor(android.content.res.ColorStateList)>($r3);

     label3:
        return;
    }

    public boolean isProjected()
    {
        androidx.compose.material.ripple.UnprojectedRipple r0;
        boolean $z0;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple;

        $z0 = r0.<androidx.compose.material.ripple.UnprojectedRipple: boolean projected>;

        return $z0;
    }

    public android.graphics.Rect getDirtyBounds()
    {
        androidx.compose.material.ripple.UnprojectedRipple r0;
        android.graphics.Rect r1, $r2;
        boolean $z0;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple;

        $z0 = r0.<androidx.compose.material.ripple.UnprojectedRipple: boolean bounded>;

        if $z0 != 0 goto label1;

        r0.<androidx.compose.material.ripple.UnprojectedRipple: boolean projected> = 1;

     label1:
        $r2 = specialinvoke r0.<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "super.getDirtyBounds()");

        r1 = $r2;

        r0.<androidx.compose.material.ripple.UnprojectedRipple: boolean projected> = 0;

        return r1;
    }

    public final void trySetRadius(int)
    {
        androidx.compose.material.ripple.UnprojectedRipple r0;
        int i0, $i1, $i2, i3;
        java.lang.Object[] r1;
        java.lang.Integer $r2, $r3, $r6;
        android.graphics.drawable.RippleDrawable $r4;
        androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper $r5;
        boolean $z0;
        androidx.compose.material.ripple.UnprojectedRipple$Companion $r8, $r9;
        java.lang.Class $r10, $r11;
        java.lang.reflect.Method $r12, r16;
        java.lang.Throwable $r14, r17;
        java.lang.Class[] r15;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.material.ripple.UnprojectedRipple: java.lang.Integer rippleRadius>;

        i3 = i0;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i1 == i3 goto label8;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.compose.material.ripple.UnprojectedRipple: java.lang.Integer rippleRadius> = $r3;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 23 goto label7;

     label3:
        $z0 = <androidx.compose.material.ripple.UnprojectedRipple: boolean setMaxRadiusFetched>;

        if $z0 != 0 goto label4;

        $r8 = <androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.material.ripple.UnprojectedRipple$Companion Companion>;

        <androidx.compose.material.ripple.UnprojectedRipple: boolean setMaxRadiusFetched> = 1;

        $r9 = <androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.material.ripple.UnprojectedRipple$Companion Companion>;

        $r11 = class "Landroid/graphics/drawable/RippleDrawable;";

        r15 = newarray (java.lang.Class)[1];

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        r15[0] = $r10;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setMaxRadius", r15);

        <androidx.compose.material.ripple.UnprojectedRipple: java.lang.reflect.Method setMaxRadiusMethod> = $r12;

     label4:
        r16 = <androidx.compose.material.ripple.UnprojectedRipple: java.lang.reflect.Method setMaxRadiusMethod>;

        if r16 == null goto label5;

        r1 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r1[0] = $r6;

        virtualinvoke r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r1);

        goto label8;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r17 = $r14;

        goto label8;

     label7:
        $r5 = <androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper INSTANCE>;

        $r4 = (android.graphics.drawable.RippleDrawable) r0;

        virtualinvoke $r5.<androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: void setRadius(android.graphics.drawable.RippleDrawable,int)>($r4, i0);

     label8:
        return;

        catch java.lang.Exception from label3 to label5 with label6;
    }

    private final long calculateRippleColor-5vOe2sY(long, float)
    {
        androidx.compose.material.ripple.UnprojectedRipple r0;
        long l0, $l2;
        float f0, f1, $f2, $f3;
        int $i1;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 28 goto label1;

        $f2 = (float) 2;

        $f3 = f0 * $f2;

        goto label2;

     label1:
        $f3 = f0;

     label2:
        f1 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtMost(float,float)>($f3, 1.0F);

        $l2 = staticinvoke <androidx.compose.ui.graphics.Color: long copy-wmQWz5c$default(long,float,float,float,float,int,java.lang.Object)>(l0, f1, 0.0F, 0.0F, 0.0F, 14, null);

        return $l2;
    }

    static void <clinit>()
    {
        androidx.compose.material.ripple.UnprojectedRipple$Companion $r0;

        $r0 = new androidx.compose.material.ripple.UnprojectedRipple$Companion;

        specialinvoke $r0.<androidx.compose.material.ripple.UnprojectedRipple$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.material.ripple.UnprojectedRipple: androidx.compose.material.ripple.UnprojectedRipple$Companion Companion> = $r0;

        return;
    }

androidx.compose.material.ripple.UnprojectedRipple$Companion
    private void <init>()
    {
        androidx.compose.material.ripple.UnprojectedRipple$Companion r0;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.material.ripple.UnprojectedRipple$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.material.ripple.UnprojectedRipple$Companion: void <init>()>();

        return;
    }

androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper
<androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper INSTANCE>
    private void <init>()
    {
        androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper r0;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void setRadius(android.graphics.drawable.RippleDrawable, int)
    {
        androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper r0;
        android.graphics.drawable.RippleDrawable r1;
        int i0;

        r0 := @this: androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper;

        r1 := @parameter0: android.graphics.drawable.RippleDrawable;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ripple");

        virtualinvoke r1.<android.graphics.drawable.RippleDrawable: void setRadius(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper $r0;

        $r0 = new androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper;

        specialinvoke $r0.<androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: void <init>()>();

        <androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper INSTANCE> = $r0;

        return;
    }

