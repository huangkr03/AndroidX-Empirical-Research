androidx.ui.material.ripple.RippleModifier
<androidx.ui.material.ripple.RippleModifier: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.material.ripple.RippleModifier: androidx.compose.MutableState color$delegate>
<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size>
<androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList effects>
<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect>
    public void <init>()
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.graphics.Color$Companion $r1;
        long $l0;
        androidx.ui.graphics.Color $r2;
        kotlin.jvm.functions.Function2 $r3;
        androidx.compose.MutableState $r4;
        androidx.ui.unit.IntSize $r5;
        androidx.compose.frames.ModelList $r6;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.ui.graphics.Color: androidx.ui.graphics.Color$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.ui.graphics.Color$Companion: long getTransparent()>();

        $r2 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>($l0);

        $r3 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r4 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r2, $r3);

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.MutableState color$delegate> = $r4;

        $r5 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>(0, 0);

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size> = $r5;

        $r6 = staticinvoke <androidx.compose.frames.FrameContainersKt: androidx.compose.frames.ModelList modelListOf()>();

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList effects> = $r6;

        return;
    }

    public final long getColor()
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r3 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.MutableState color$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ripple.RippleModifier: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public final void setColor(long)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.MutableState color$delegate>;

        $r4 = <androidx.ui.material.ripple.RippleModifier: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public androidx.ui.core.MeasureScope$MeasureResult measure(androidx.ui.core.MeasureScope, androidx.ui.core.Measurable, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.MeasureScope $r1;
        androidx.ui.core.Measurable r2;
        androidx.ui.core.Constraints r3;
        androidx.ui.core.LayoutDirection r4;
        androidx.ui.core.Placeable r5;
        int $i0, $i1, $i2, $i3;
        androidx.ui.unit.IntSize $r6;
        androidx.ui.material.ripple.RippleModifier$measure$1 $r7;
        kotlin.jvm.functions.Function1 $r8;
        androidx.ui.core.MeasureScope$MeasureResult $r9;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 := @parameter0: androidx.ui.core.MeasureScope;

        r2 := @parameter1: androidx.ui.core.Measurable;

        r3 := @parameter2: androidx.ui.core.Constraints;

        r4 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "layoutDirection");

        r5 = virtualinvoke $r1.<androidx.ui.core.MeasureScope: androidx.ui.core.Placeable measure(androidx.ui.core.Measurable,androidx.ui.core.Constraints)>(r2, r3);

        $i0 = virtualinvoke r5.<androidx.ui.core.Placeable: int getWidth()>();

        $i1 = virtualinvoke r5.<androidx.ui.core.Placeable: int getHeight()>();

        $r6 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>($i0, $i1);

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size> = $r6;

        $i2 = virtualinvoke r5.<androidx.ui.core.Placeable: int getWidth()>();

        $i3 = virtualinvoke r5.<androidx.ui.core.Placeable: int getHeight()>();

        $r7 = new androidx.ui.material.ripple.RippleModifier$measure$1;

        specialinvoke $r7.<androidx.ui.material.ripple.RippleModifier$measure$1: void <init>(androidx.ui.core.Placeable)>(r5);

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r9 = staticinvoke <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout$default(androidx.ui.core.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i2, $i3, null, $r8, 4, null);

        return $r9;
    }

    public final void handleStart-BEzzPjo(androidx.ui.geometry.Offset, androidx.ui.unit.Density, boolean, androidx.ui.unit.Dp, androidx.animation.AnimationClockObservable)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.geometry.Offset r1, r5, $r20;
        androidx.ui.unit.Density r2;
        boolean z0, z1, z4;
        androidx.ui.unit.Dp r3, r8;
        androidx.animation.AnimationClockObservable r4;
        kotlin.jvm.functions.Function1 r6;
        float f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Float r9, $r21;
        androidx.ui.unit.IntSize $r10, $r14, $r17, $r18;
        androidx.ui.geometry.Size $r11, $r15, $r19;
        androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1 $r12;
        androidx.ui.material.ripple.RippleAnimation $r13, r22;
        androidx.compose.frames.ModelList $r16;
        int $i0, $i1;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        r2 := @parameter1: androidx.ui.unit.Density;

        z0 := @parameter2: boolean;

        r3 := @parameter3: androidx.ui.unit.Dp;

        r4 := @parameter4: androidx.animation.AnimationClockObservable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "touchPosition");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "density");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "clock");

        if z0 == 0 goto label1;

        $r20 = r1;

        goto label2;

     label1:
        $r10 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size>;

        $r11 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.geometry.Size toSize(androidx.ui.unit.IntSize)>($r10);

        $r20 = staticinvoke <androidx.ui.geometry.Size: androidx.ui.geometry.Offset center$default(androidx.ui.geometry.Size,androidx.ui.geometry.Offset,int,java.lang.Object)>($r11, null, 1, null);

     label2:
        r5 = $r20;

        $r12 = new androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1;

        specialinvoke $r12.<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: void <init>(androidx.ui.material.ripple.RippleModifier)>(r0);

        r6 = (kotlin.jvm.functions.Function1) $r12;

        z4 = 0;

        z1 = 0;

        r8 = r3;

        if r8 != null goto label3;

        $r21 = (java.lang.Float) null;

        goto label4;

     label3:
        $f1 = virtualinvoke r8.<androidx.ui.unit.Dp: float unbox-impl()>();

        $f2 = interfaceinvoke r2.<androidx.ui.unit.Density: float toPx-ipo6vVg(float)>($f1);

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

     label4:
        r9 = $r21;

        if r9 != null goto label5;

        $r17 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size>;

        $i0 = virtualinvoke $r17.<androidx.ui.unit.IntSize: int getWidth()>();

        $f3 = (float) $i0;

        $r18 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size>;

        $i1 = virtualinvoke $r18.<androidx.ui.unit.IntSize: int getHeight()>();

        $f4 = (float) $i1;

        $r19 = staticinvoke <androidx.ui.geometry.SizeKt: androidx.ui.geometry.Size Size(float,float)>($f3, $f4);

        $f5 = staticinvoke <androidx.ui.material.ripple.RippleAnimationKt: float getRippleEndRadius(androidx.ui.unit.Density,boolean,androidx.ui.geometry.Size)>(r2, z0, $r19);

        goto label6;

     label5:
        $f5 = virtualinvoke r9.<java.lang.Float: float floatValue()>();

     label6:
        f0 = $f5;

        $r13 = new androidx.ui.material.ripple.RippleAnimation;

        $r14 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.unit.IntSize size>;

        $r15 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.geometry.Size toSize(androidx.ui.unit.IntSize)>($r14);

        specialinvoke $r13.<androidx.ui.material.ripple.RippleAnimation: void <init>(androidx.ui.geometry.Size,androidx.ui.geometry.Offset,float,boolean,androidx.animation.AnimationClockObservable,kotlin.jvm.functions.Function1)>($r15, r5, f0, z0, r4, r6);

        r22 = $r13;

        $r16 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList effects>;

        virtualinvoke $r16.<androidx.compose.frames.ModelList: boolean add(java.lang.Object)>(r22);

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect> = r22;

        return;
    }

    public final void handleFinish()
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.material.ripple.RippleAnimation r1, $r2;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect>;

        if r1 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r1.<androidx.ui.material.ripple.RippleAnimation: void finish()>();

     label2:
        $r2 = (androidx.ui.material.ripple.RippleAnimation) null;

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect> = $r2;

        return;
    }

    public void draw(androidx.ui.core.ContentDrawScope)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.ContentDrawScope $r1;
        java.util.List $r2;
        int i0, i1, $i2, i4;
        java.lang.Object r3;
        androidx.ui.material.ripple.RippleAnimation r4;
        boolean z2, z3;
        androidx.compose.frames.ModelList $r5;
        java.util.Collection $r6;
        androidx.ui.graphics.drawscope.DrawScope $r7;
        long $l3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 := @parameter0: androidx.ui.core.ContentDrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        virtualinvoke $r1.<androidx.ui.core.ContentDrawScope: void drawContent()>();

        $r5 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList effects>;

        $r2 = (java.util.List) $r5;

        i4 = 0;

        $r6 = (java.util.Collection) $r2;

        $i2 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        i0 = $i2 + -1;

        if i4 > i0 goto label2;

     label1:
        i1 = i4;

        i4 = i4 + 1;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.ui.material.ripple.RippleAnimation) r3;

        z2 = 0;

        z3 = 0;

        $r7 = (androidx.ui.graphics.drawscope.DrawScope) $r1;

        $l3 = virtualinvoke r0.<androidx.ui.material.ripple.RippleModifier: long getColor()>();

        virtualinvoke r4.<androidx.ui.material.ripple.RippleAnimation: void draw-z8Px3OI(androidx.ui.graphics.drawscope.DrawScope,long)>($r7, $l3);

        if i4 <= i0 goto label1;

     label2:
        return;
    }

    public void onEnter()
    {
        androidx.ui.material.ripple.RippleModifier r0;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        return;
    }

    public void onLeave()
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.compose.frames.ModelList $r1;
        androidx.ui.material.ripple.RippleAnimation $r2;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList effects>;

        virtualinvoke $r1.<androidx.compose.frames.ModelList: void clear()>();

        $r2 = (androidx.ui.material.ripple.RippleAnimation) null;

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect> = $r2;

        return;
    }

    public int maxIntrinsicHeight(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int maxIntrinsicHeight(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public int maxIntrinsicWidth(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int maxIntrinsicWidth(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public int minIntrinsicHeight(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int minIntrinsicHeight(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public int minIntrinsicWidth(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int minIntrinsicWidth(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldIn(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldOut(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean all(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean any(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public androidx.ui.core.Modifier plus(androidx.ui.core.Modifier)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.core.Modifier r1, $r2, r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter0: androidx.ui.core.Modifier;

        r3 = (androidx.ui.core.Modifier) r0;

        $r2 = staticinvoke <androidx.ui.core.Modifier$DefaultImpls: androidx.ui.core.Modifier plus(androidx.ui.core.Modifier,androidx.ui.core.Modifier)>(r3, r1);

        return $r2;
    }

    public static final androidx.compose.frames.ModelList access$getEffects$p(androidx.ui.material.ripple.RippleModifier)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.compose.frames.ModelList $r1;

        r0 := @parameter0: androidx.ui.material.ripple.RippleModifier;

        $r1 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList effects>;

        return $r1;
    }

    public static final androidx.ui.material.ripple.RippleAnimation access$getCurrentEffect$p(androidx.ui.material.ripple.RippleModifier)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.material.ripple.RippleAnimation $r1;

        r0 := @parameter0: androidx.ui.material.ripple.RippleModifier;

        $r1 = r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect>;

        return $r1;
    }

    public static final void access$setCurrentEffect$p(androidx.ui.material.ripple.RippleModifier, androidx.ui.material.ripple.RippleAnimation)
    {
        androidx.ui.material.ripple.RippleModifier r0;
        androidx.ui.material.ripple.RippleAnimation r1;

        r0 := @parameter0: androidx.ui.material.ripple.RippleModifier;

        r1 := @parameter1: androidx.ui.material.ripple.RippleAnimation;

        r0.<androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation currentEffect> = r1;

        return;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.MutablePropertyReference1 $r4;
        kotlin.reflect.KMutableProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ripple/RippleModifier;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "color", "getColor()J");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.ui.material.ripple.RippleModifier: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1
<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: androidx.ui.material.ripple.RippleModifier $this>
    void <init>(androidx.ui.material.ripple.RippleModifier)
    {
        androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1 r0;
        androidx.ui.material.ripple.RippleModifier $r1;

        r0 := @this: androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1;

        $r1 := @parameter0: androidx.ui.material.ripple.RippleModifier;

        r0.<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: androidx.ui.material.ripple.RippleModifier $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.material.ripple.RippleAnimation)
    {
        androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1 r0;
        androidx.ui.material.ripple.RippleAnimation r1, $r5, $r6;
        androidx.ui.material.ripple.RippleModifier $r2, $r4, $r7;
        androidx.compose.frames.ModelList $r3;
        boolean $z1;

        r0 := @this: androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1;

        r1 := @parameter0: androidx.ui.material.ripple.RippleAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "effect");

        $r2 = r0.<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: androidx.ui.material.ripple.RippleModifier $this>;

        $r3 = staticinvoke <androidx.ui.material.ripple.RippleModifier: androidx.compose.frames.ModelList access$getEffects$p(androidx.ui.material.ripple.RippleModifier)>($r2);

        virtualinvoke $r3.<androidx.compose.frames.ModelList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: androidx.ui.material.ripple.RippleModifier $this>;

        $r5 = staticinvoke <androidx.ui.material.ripple.RippleModifier: androidx.ui.material.ripple.RippleAnimation access$getCurrentEffect$p(androidx.ui.material.ripple.RippleModifier)>($r4);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z1 == 0 goto label1;

        $r7 = r0.<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: androidx.ui.material.ripple.RippleModifier $this>;

        $r6 = (androidx.ui.material.ripple.RippleAnimation) null;

        staticinvoke <androidx.ui.material.ripple.RippleModifier: void access$setCurrentEffect$p(androidx.ui.material.ripple.RippleModifier,androidx.ui.material.ripple.RippleAnimation)>($r7, $r6);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1 r0;
        java.lang.Object r1;
        androidx.ui.material.ripple.RippleAnimation $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.material.ripple.RippleAnimation) r1;

        virtualinvoke r0.<androidx.ui.material.ripple.RippleModifier$handleStart$onAnimationFinished$1: void invoke(androidx.ui.material.ripple.RippleAnimation)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.material.ripple.RippleModifier$measure$1
<androidx.ui.material.ripple.RippleModifier$measure$1: androidx.ui.core.Placeable $placeable>
    void <init>(androidx.ui.core.Placeable)
    {
        androidx.ui.material.ripple.RippleModifier$measure$1 r0;
        androidx.ui.core.Placeable $r1;

        r0 := @this: androidx.ui.material.ripple.RippleModifier$measure$1;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r0.<androidx.ui.material.ripple.RippleModifier$measure$1: androidx.ui.core.Placeable $placeable> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.Placeable$PlacementScope)
    {
        androidx.ui.material.ripple.RippleModifier$measure$1 r0;
        androidx.ui.core.Placeable$PlacementScope r1;
        androidx.ui.core.Placeable $r2;

        r0 := @this: androidx.ui.material.ripple.RippleModifier$measure$1;

        r1 := @parameter0: androidx.ui.core.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        $r2 = r0.<androidx.ui.material.ripple.RippleModifier$measure$1: androidx.ui.core.Placeable $placeable>;

        virtualinvoke r1.<androidx.ui.core.Placeable$PlacementScope: void place(androidx.ui.core.Placeable,int,int)>($r2, 0, 0);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.material.ripple.RippleModifier$measure$1 r0;
        java.lang.Object r1;
        androidx.ui.core.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.material.ripple.RippleModifier$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.ui.material.ripple.RippleModifier$measure$1: void invoke(androidx.ui.core.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

