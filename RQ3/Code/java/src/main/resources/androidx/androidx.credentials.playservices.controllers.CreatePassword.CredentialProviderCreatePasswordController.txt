androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion Companion>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.app.Activity activity>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CredentialManagerCallback callback>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.util.concurrent.Executor executor>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.os.CancellationSignal cancellationSignal>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 resultReceiver>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.lang.String TAG>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController controller>
    public void <init>(android.app.Activity)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        android.app.Activity r1;
        android.os.Handler r2, $r3;
        android.os.Looper $r4;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        specialinvoke r0.<androidx.credentials.playservices.controllers.CredentialProviderController: void <init>(android.app.Activity)>(r1);

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.app.Activity activity> = r1;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r2 = $r3;

        $r5 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1;

        specialinvoke $r5.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: void <init>(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,android.os.Handler)>(r0, r2);

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 resultReceiver> = $r5;

        return;
    }

    private static void getCallback$annotations()
    {
        return;
    }

    private static void getCancellationSignal$annotations()
    {
        return;
    }

    public void invokePlayServices(androidx.credentials.CreatePasswordRequest, androidx.credentials.CredentialManagerCallback, java.util.concurrent.Executor, android.os.CancellationSignal)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        androidx.credentials.CreatePasswordRequest r1;
        androidx.credentials.CredentialManagerCallback r2;
        java.util.concurrent.Executor r3;
        android.os.CancellationSignal r4;
        com.google.android.gms.auth.api.identity.SavePasswordRequest r5;
        android.content.Intent r6, $r8;
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion $r7;
        boolean $z0;
        android.app.Activity $r9, $r15;
        android.content.Context $r10;
        android.os.Parcelable $r11;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 $r13;
        android.os.ResultReceiver $r14;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: androidx.credentials.CreatePasswordRequest;

        r2 := @parameter1: androidx.credentials.CredentialManagerCallback;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.os.CancellationSignal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executor");

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.os.CancellationSignal cancellationSignal> = r4;

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CredentialManagerCallback callback> = r2;

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.util.concurrent.Executor executor> = r3;

        $r7 = <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion Companion>;

        $z0 = virtualinvoke $r7.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion: boolean cancellationReviewer$credentials_play_services_auth_release(android.os.CancellationSignal)>(r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        r5 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: com.google.android.gms.auth.api.identity.SavePasswordRequest convertRequestToPlayServices(androidx.credentials.CreatePasswordRequest)>(r1);

        $r8 = new android.content.Intent;

        $r9 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.app.Activity activity>;

        $r10 = (android.content.Context) $r9;

        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r10, class "Landroidx/credentials/playservices/HiddenActivity;");

        r6 = $r8;

        $r11 = (android.os.Parcelable) r5;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("REQUEST_TYPE", $r11);

        $r13 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 resultReceiver>;

        $r14 = (android.os.ResultReceiver) $r13;

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void generateHiddenActivityIntent(android.os.ResultReceiver,android.content.Intent,java.lang.String)>($r14, r6, "CREATE_PASSWORD");

        $r15 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.app.Activity activity>;

        virtualinvoke $r15.<android.app.Activity: void startActivity(android.content.Intent)>(r6);

        return;
    }

    public final void handleResponse$credentials_play_services_auth_release(int, int)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        int i0, i1, $i2, $i3;
        androidx.credentials.CreateCredentialResponse r1;
        androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion $r2, $r18;
        androidx.credentials.playservices.controllers.CredentialProviderController$Companion $r3, $r11;
        java.lang.String $r4, $r16, $r22;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 $r5;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2 $r6;
        kotlin.jvm.functions.Function2 $r7;
        android.os.CancellationSignal $r8, $r13;
        kotlin.jvm.functions.Function1 $r9;
        boolean $z0;
        kotlin.Unit $r10;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3 $r12;
        kotlin.jvm.functions.Function0 $r14;
        java.lang.StringBuilder $r15, $r17, $r19, $r20, $r21;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <androidx.credentials.playservices.controllers.CredentialProviderBaseController: androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion Companion>;

        $i2 = staticinvoke <androidx.credentials.playservices.controllers.CredentialProviderBaseController: int getCONTROLLER_REQUEST_CODE()>();

        if i0 == $i2 goto label1;

        $r16 = <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returned request code ");

        $r18 = <androidx.credentials.playservices.controllers.CredentialProviderBaseController: androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion Companion>;

        $i3 = staticinvoke <androidx.credentials.playservices.controllers.CredentialProviderBaseController: int getCONTROLLER_REQUEST_CODE()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which does not match what was given ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r16, $r22);

        return;

     label1:
        $r3 = <androidx.credentials.playservices.controllers.CredentialProviderController: androidx.credentials.playservices.controllers.CredentialProviderController$Companion Companion>;

        $r4 = <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.lang.String TAG>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "TAG");

        $r5 = <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 INSTANCE>;

        $r7 = (kotlin.jvm.functions.Function2) $r5;

        $r6 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2;

        specialinvoke $r6.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: void <init>(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>(r0);

        $r9 = (kotlin.jvm.functions.Function1) $r6;

        $r8 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.os.CancellationSignal cancellationSignal>;

        $z0 = staticinvoke <androidx.credentials.playservices.controllers.CredentialProviderController: boolean maybeReportErrorResultCodeCreate(int,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,android.os.CancellationSignal)>(i1, $r4, $r7, $r9, $r8);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r1 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CreateCredentialResponse convertResponseToCredentialManager(kotlin.Unit)>($r10);

        $r11 = <androidx.credentials.playservices.controllers.CredentialProviderController: androidx.credentials.playservices.controllers.CredentialProviderController$Companion Companion>;

        $r13 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.os.CancellationSignal cancellationSignal>;

        $r12 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3;

        specialinvoke $r12.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: void <init>(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,androidx.credentials.CreateCredentialResponse)>(r0, r1);

        $r14 = (kotlin.jvm.functions.Function0) $r12;

        staticinvoke <androidx.credentials.playservices.controllers.CredentialProviderController: void cancelOrCallbackExceptionOrResult(android.os.CancellationSignal,kotlin.jvm.functions.Function0)>($r13, $r14);

        return;
    }

    public com.google.android.gms.auth.api.identity.SavePasswordRequest convertRequestToPlayServices(androidx.credentials.CreatePasswordRequest)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        androidx.credentials.CreatePasswordRequest r1;
        com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder $r2, $r6;
        com.google.android.gms.auth.api.identity.SignInPassword $r3;
        java.lang.String $r4, $r5;
        com.google.android.gms.auth.api.identity.SavePasswordRequest $r7;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: androidx.credentials.CreatePasswordRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r2 = staticinvoke <com.google.android.gms.auth.api.identity.SavePasswordRequest: com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder builder()>();

        $r3 = new com.google.android.gms.auth.api.identity.SignInPassword;

        $r4 = virtualinvoke r1.<androidx.credentials.CreatePasswordRequest: java.lang.String getId()>();

        $r5 = virtualinvoke r1.<androidx.credentials.CreatePasswordRequest: java.lang.String getPassword()>();

        specialinvoke $r3.<com.google.android.gms.auth.api.identity.SignInPassword: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        $r6 = virtualinvoke $r2.<com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder: com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder setSignInPassword(com.google.android.gms.auth.api.identity.SignInPassword)>($r3);

        $r7 = virtualinvoke $r6.<com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder: com.google.android.gms.auth.api.identity.SavePasswordRequest build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "builder().setSignInPassw\u2026ssword)\n        ).build()");

        return $r7;
    }

    public androidx.credentials.CreateCredentialResponse convertResponseToCredentialManager(kotlin.Unit)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        kotlin.Unit r1;
        androidx.credentials.CreatePasswordResponse $r2;
        androidx.credentials.CreateCredentialResponse $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: kotlin.Unit;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "response");

        $r2 = new androidx.credentials.CreatePasswordResponse;

        specialinvoke $r2.<androidx.credentials.CreatePasswordResponse: void <init>()>();

        $r3 = (androidx.credentials.CreateCredentialResponse) $r2;

        return $r3;
    }

    public static final androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController getInstance(android.app.Activity)
    {
        android.app.Activity r0;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion $r1;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r2;

        r0 := @parameter0: android.app.Activity;

        $r1 = <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController getInstance(android.app.Activity)>(r0);

        return $r2;
    }

    public volatile void invokePlayServices(java.lang.Object, androidx.credentials.CredentialManagerCallback, java.util.concurrent.Executor, android.os.CancellationSignal)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        java.lang.Object r1;
        androidx.credentials.CredentialManagerCallback r2;
        java.util.concurrent.Executor r3;
        android.os.CancellationSignal r4;
        androidx.credentials.CreatePasswordRequest $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.credentials.CredentialManagerCallback;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.os.CancellationSignal;

        $r5 = (androidx.credentials.CreatePasswordRequest) r1;

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void invokePlayServices(androidx.credentials.CreatePasswordRequest,androidx.credentials.CredentialManagerCallback,java.util.concurrent.Executor,android.os.CancellationSignal)>($r5, r2, r3, r4);

        return;
    }

    public volatile java.lang.Object convertRequestToPlayServices(java.lang.Object)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        java.lang.Object r1;
        androidx.credentials.CreatePasswordRequest $r2;
        com.google.android.gms.auth.api.identity.SavePasswordRequest $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.CreatePasswordRequest) r1;

        $r3 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: com.google.android.gms.auth.api.identity.SavePasswordRequest convertRequestToPlayServices(androidx.credentials.CreatePasswordRequest)>($r2);

        return $r3;
    }

    public volatile java.lang.Object convertResponseToCredentialManager(java.lang.Object)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        java.lang.Object r1;
        kotlin.Unit $r2;
        androidx.credentials.CreateCredentialResponse $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.Unit) r1;

        $r3 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CreateCredentialResponse convertResponseToCredentialManager(kotlin.Unit)>($r2);

        return $r3;
    }

    public static final void access$cancelOrCallbackExceptionOrResult$s895630660(android.os.CancellationSignal, kotlin.jvm.functions.Function0)
    {
        android.os.CancellationSignal r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @parameter0: android.os.CancellationSignal;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <androidx.credentials.playservices.controllers.CredentialProviderController: void cancelOrCallbackExceptionOrResult(android.os.CancellationSignal,kotlin.jvm.functions.Function0)>(r0, r1);

        return;
    }

    public static final java.util.concurrent.Executor access$getExecutor$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r0;
        java.util.concurrent.Executor $r1;

        $r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r1 = $r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.util.concurrent.Executor executor>;

        return $r1;
    }

    public static final androidx.credentials.CredentialManagerCallback access$getCallback$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r0;
        androidx.credentials.CredentialManagerCallback $r1;

        $r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r1 = $r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CredentialManagerCallback callback>;

        return $r1;
    }

    public static final androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController access$getController$cp()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r0;

        $r0 = <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController controller>;

        return $r0;
    }

    public static final void access$setController$cp(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;

        r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController controller> = r0;

        return;
    }

    public static final boolean access$maybeReportErrorFromResultReceiver(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController, android.os.Bundle, kotlin.jvm.functions.Function2, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback, android.os.CancellationSignal)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r0;
        android.os.Bundle r1;
        kotlin.jvm.functions.Function2 r2;
        java.util.concurrent.Executor r3;
        androidx.credentials.CredentialManagerCallback r4;
        android.os.CancellationSignal r5;
        boolean $z0;

        $r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: androidx.credentials.CredentialManagerCallback;

        r5 := @parameter5: android.os.CancellationSignal;

        $z0 = virtualinvoke $r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: boolean maybeReportErrorFromResultReceiver(android.os.Bundle,kotlin.jvm.functions.Function2,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback,android.os.CancellationSignal)>(r1, r2, r3, r4, r5);

        return $z0;
    }

    public static final android.os.CancellationSignal access$getCancellationSignal$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r0;
        android.os.CancellationSignal $r1;

        $r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r1 = $r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.os.CancellationSignal cancellationSignal>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r0 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion;

        specialinvoke $r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion Companion> = $r0;

        $r1 = class "Landroidx/credentials/playservices/controllers/CreatePassword/CredentialProviderCreatePasswordController;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.lang.String TAG> = $r2;

        return;
    }

androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion
    private void <init>()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion r0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController getInstance(android.app.Activity)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion r0;
        android.app.Activity r1;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r2, $r3, $r4;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController access$getController$cp()>();

        if $r2 != null goto label1;

        $r4 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        specialinvoke $r4.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void <init>(android.app.Activity)>(r1);

        staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void access$setController$cp(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>($r4);

     label1:
        $r3 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController access$getController$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion: void <init>()>();

        return;
    }

androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 INSTANCE>
    void <init>()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 r0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(android.os.CancellationSignal, kotlin.jvm.functions.Function0)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 r0;
        android.os.CancellationSignal r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.credentials.playservices.controllers.CredentialProviderController$Companion $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1;

        r1 := @parameter0: android.os.CancellationSignal;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "f");

        $r3 = <androidx.credentials.playservices.controllers.CredentialProviderController: androidx.credentials.playservices.controllers.CredentialProviderController$Companion Companion>;

        staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void access$cancelOrCallbackExceptionOrResult$s895630660(android.os.CancellationSignal,kotlin.jvm.functions.Function0)>(r1, r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 r0;
        java.lang.Object r1, r2;
        kotlin.jvm.functions.Function0 $r3;
        android.os.CancellationSignal $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.os.CancellationSignal) r1;

        $r3 = (kotlin.jvm.functions.Function0) r2;

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1: void invoke(android.os.CancellationSignal,kotlin.jvm.functions.Function0)>($r4, $r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

    static void <clinit>()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 $r0;

        $r0 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1;

        specialinvoke $r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1: void <init>()>();

        <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$1 INSTANCE> = $r0;

        return;
    }

androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>
    void <init>(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2 r0;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r1;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2;

        $r1 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.credentials.exceptions.CreateCredentialException)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2 r0;
        androidx.credentials.exceptions.CreateCredentialException r1;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r2, $r3;
        java.lang.Runnable $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2;

        r1 := @parameter0: androidx.credentials.exceptions.CreateCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "e");

        $r2 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r5 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.util.concurrent.Executor access$getExecutor$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>($r2);

        if $r5 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("executor");

        $r5 = null;

     label1:
        $r3 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,androidx.credentials.exceptions.CreateCredentialException)>($r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: void invoke$lambda$0(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,androidx.credentials.exceptions.CreateCredentialException)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private static final void invoke$lambda$0(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController, androidx.credentials.exceptions.CreateCredentialException)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        androidx.credentials.exceptions.CreateCredentialException $r1;
        androidx.credentials.CredentialManagerCallback $r2;

        r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r1 := @parameter1: androidx.credentials.exceptions.CreateCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$e");

        $r2 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CredentialManagerCallback access$getCallback$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>(r0);

        if $r2 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("callback");

        $r2 = null;

     label1:
        interfaceinvoke $r2.<androidx.credentials.CredentialManagerCallback: void onError(java.lang.Object)>($r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2 r0;
        java.lang.Object r1;
        androidx.credentials.exceptions.CreateCredentialException $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.exceptions.CreateCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$2: void invoke(androidx.credentials.exceptions.CreateCredentialException)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.CreateCredentialResponse $response>
    void <init>(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController, androidx.credentials.CreateCredentialResponse)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3 r0;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r1;
        androidx.credentials.CreateCredentialResponse $r2;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3;

        $r1 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r2 := @parameter1: androidx.credentials.CreateCredentialResponse;

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0> = $r1;

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.CreateCredentialResponse $response> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3 r0;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r1, $r3;
        androidx.credentials.CreateCredentialResponse $r2;
        java.lang.Runnable $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3;

        $r1 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r5 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.util.concurrent.Executor access$getExecutor$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>($r1);

        if $r5 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("executor");

        $r5 = null;

     label1:
        $r3 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r2 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: androidx.credentials.CreateCredentialResponse $response>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,androidx.credentials.CreateCredentialResponse)>($r3, $r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: void invoke$lambda$0(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,androidx.credentials.CreateCredentialResponse)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private static final void invoke$lambda$0(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController, androidx.credentials.CreateCredentialResponse)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController r0;
        androidx.credentials.CreateCredentialResponse $r1;
        androidx.credentials.CredentialManagerCallback $r2;

        r0 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r1 := @parameter1: androidx.credentials.CreateCredentialResponse;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$response");

        $r2 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CredentialManagerCallback access$getCallback$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>(r0);

        if $r2 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("callback");

        $r2 = null;

     label1:
        interfaceinvoke $r2.<androidx.credentials.CredentialManagerCallback: void onResult(java.lang.Object)>($r1);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3;

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$handleResponse$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1
    void <init>(java.lang.Object)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(2, r1, class "Landroidx/credentials/playservices/controllers/CredentialProviderBaseController$Companion;", "createCredentialExceptionTypeToException", "createCredentialExceptionTypeToException$credentials_play_services_auth_release(Ljava/lang/String;Ljava/lang/String;)Landroidx/credentials/exceptions/CreateCredentialException;", 0);

        return;
    }

    public final androidx.credentials.exceptions.CreateCredentialException invoke(java.lang.String, java.lang.String)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1 r0;
        java.lang.String r1, r2;
        java.lang.Object $r3;
        androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion $r4;
        androidx.credentials.exceptions.CreateCredentialException $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1: java.lang.Object receiver>;

        $r4 = (androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion) $r3;

        $r5 = virtualinvoke $r4.<androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion: androidx.credentials.exceptions.CreateCredentialException createCredentialExceptionTypeToException$credentials_play_services_auth_release(java.lang.String,java.lang.String)>(r1, r2);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1 r0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4;
        androidx.credentials.exceptions.CreateCredentialException $r5;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $r5 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1: androidx.credentials.exceptions.CreateCredentialException invoke(java.lang.String,java.lang.String)>($r4, $r3);

        return $r5;
    }

androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1
<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>
    void <init>(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController, android.os.Handler)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 r0;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r1;
        android.os.Handler $r2;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1;

        $r1 := @parameter0: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController;

        $r2 := @parameter1: android.os.Handler;

        r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0> = $r1;

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>($r2);

        return;
    }

    public void onReceiveResult(int, android.os.Bundle)
    {
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1 r0;
        int i0, $i1;
        android.os.Bundle r1;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1 $r2;
        androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion $r3;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r4, $r5, $r6, $r7, $r12;
        kotlin.jvm.functions.Function2 $r9;
        java.util.concurrent.Executor $r10;
        androidx.credentials.CredentialManagerCallback $r11;
        android.os.CancellationSignal $r13;
        boolean $z0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resultData");

        $r7 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r2 = new androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1;

        $r3 = <androidx.credentials.playservices.controllers.CredentialProviderBaseController: androidx.credentials.playservices.controllers.CredentialProviderBaseController$Companion Companion>;

        specialinvoke $r2.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1$onReceiveResult$1: void <init>(java.lang.Object)>($r3);

        $r9 = (kotlin.jvm.functions.Function2) $r2;

        $r4 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r10 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: java.util.concurrent.Executor access$getExecutor$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>($r4);

        if $r10 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("executor");

        $r10 = null;

     label1:
        $r5 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r11 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.CredentialManagerCallback access$getCallback$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>($r5);

        if $r11 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("callback");

        $r11 = null;

     label2:
        $r12 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $r13 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: android.os.CancellationSignal access$getCancellationSignal$p(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController)>($r12);

        $z0 = staticinvoke <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: boolean access$maybeReportErrorFromResultReceiver(androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController,android.os.Bundle,kotlin.jvm.functions.Function2,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback,android.os.CancellationSignal)>($r7, r1, $r9, $r10, $r11, $r13);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r6 = r0.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$resultReceiver$1: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController this$0>;

        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("ACTIVITY_REQUEST_CODE");

        virtualinvoke $r6.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void handleResponse$credentials_play_services_auth_release(int,int)>($i1, i0);

        return;
    }

