androidx.wear.watchface.editor.ComplicationDataSourceChooserContract
<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract$Companion Companion>
<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: java.lang.String EXTRA_PROVIDER_INFO>
<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: boolean useTestComplicationHelperActivity>
    public void <init>()
    {
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract r0;

        r0 := @this: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest)
    {
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract r0;
        android.content.Context r1;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest r2;
        java.util.Map r3;
        android.content.Intent r4, r6, r27;
        android.os.Bundle r5, $r21, $r22, $r23;
        boolean z0, z1, $z3;
        kotlin.Unit r7;
        androidx.wear.watchface.editor.EditorSession $r8, $r11;
        kotlinx.coroutines.flow.StateFlow $r9;
        java.lang.Object $r10, $r14, $r20;
        android.content.ComponentName $r12, $r25;
        int $i0, $i1, $i2;
        java.lang.Integer $r13, $r19;
        androidx.wear.watchface.client.ComplicationSlotState $r15, r28;
        java.util.List $r16;
        java.util.Collection $r17;
        java.lang.String $r18;

        r0 := @this: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r8 = virtualinvoke r2.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: androidx.wear.watchface.editor.EditorSession getEditorSession$wear_watchface_editor_release()>();

        $r9 = interfaceinvoke $r8.<androidx.wear.watchface.editor.EditorSession: kotlinx.coroutines.flow.StateFlow getComplicationSlotsState()>();

        $r10 = interfaceinvoke $r9.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        r3 = (java.util.Map) $r10;

        $r11 = virtualinvoke r2.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: androidx.wear.watchface.editor.EditorSession getEditorSession$wear_watchface_editor_release()>();

        $r12 = interfaceinvoke $r11.<androidx.wear.watchface.editor.EditorSession: android.content.ComponentName getWatchFaceComponentName()>();

        $i0 = virtualinvoke r2.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: int getComplicationSlotId$wear_watchface_editor_release()>();

        $i1 = virtualinvoke r2.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: int getComplicationSlotId$wear_watchface_editor_release()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r14 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r14);

        $r15 = (androidx.wear.watchface.client.ComplicationSlotState) $r14;

        $r16 = virtualinvoke $r15.<androidx.wear.watchface.client.ComplicationSlotState: java.util.List getSupportedTypes()>();

        $r17 = (java.util.Collection) $r16;

        $r18 = virtualinvoke r2.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: java.lang.String getInstanceId$wear_watchface_editor_release()>();

        r27 = staticinvoke <androidx.wear.watchface.ComplicationHelperActivity: android.content.Intent createComplicationDataSourceChooserHelperIntent(android.content.Context,android.content.ComponentName,int,java.util.Collection,java.lang.String)>(r1, $r12, $i0, $r17, $r18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r27, "createComplicationDataSo\u2026nput.instanceId\n        )");

        r4 = r27;

        $i2 = virtualinvoke r2.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: int getComplicationSlotId$wear_watchface_editor_release()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r20 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r20);

        r28 = (androidx.wear.watchface.client.ComplicationSlotState) $r20;

        $r21 = new android.os.Bundle;

        $r22 = virtualinvoke r28.<androidx.wear.watchface.client.ComplicationSlotState: android.os.Bundle getComplicationConfigExtras()>();

        specialinvoke $r21.<android.os.Bundle: void <init>(android.os.Bundle)>($r22);

        r5 = $r21;

        z0 = 0;

        z1 = 0;

        r6 = r4;

        $r23 = virtualinvoke r4.<android.content.Intent: android.os.Bundle getExtras()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r23);

        virtualinvoke r5.<android.os.Bundle: void putAll(android.os.Bundle)>($r23);

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        virtualinvoke r6.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>(r5);

        $z3 = <androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: boolean useTestComplicationHelperActivity>;

        if $z3 == 0 goto label1;

        $r25 = new android.content.ComponentName;

        specialinvoke $r25.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("androidx.wear.watchface.editor.test", "androidx.wear.watchface.editor.TestComplicationHelperActivity");

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r25);

     label1:
        return r4;
    }

    public androidx.wear.watchface.editor.ComplicationDataSourceChooserResult parseResult(int, android.content.Intent)
    {
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract r0;
        int i0;
        android.content.Intent r1, r2, r3, r4;
        boolean z0, z1, z3, z4, z6, z7;
        android.os.Bundle r5, r6, r7, r8, r9, $r10, $r13, r14, $r15;
        android.os.Parcelable $r11;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserResult $r12;
        android.support.wearable.complications.ComplicationProviderInfo r16;
        androidx.wear.complications.ComplicationDataSourceInfo $r17;

        r0 := @this: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        if r2 != null goto label1;

        $r12 = null;

        goto label8;

     label1:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        r5 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        if r5 != null goto label2;

        $r13 = null;

        goto label3;

     label2:
        r6 = r5;

        z3 = 0;

        z4 = 0;

        r7 = r6;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>(android.os.Bundle)>(r7);

        r8 = $r10;

        z6 = 0;

        z7 = 0;

        virtualinvoke r8.<android.os.Bundle: void remove(java.lang.String)>("android.support.wearable.complications.EXTRA_PROVIDER_INFO");

        $r13 = r8;

     label3:
        r14 = $r13;

        if r14 != null goto label4;

        $r15 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label5;

     label4:
        $r15 = r14;

     label5:
        r9 = $r15;

        $r12 = new androidx.wear.watchface.editor.ComplicationDataSourceChooserResult;

        $r11 = virtualinvoke r4.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.support.wearable.complications.EXTRA_PROVIDER_INFO");

        r16 = (android.support.wearable.complications.ComplicationProviderInfo) $r11;

        if r16 != null goto label6;

        $r17 = null;

        goto label7;

     label6:
        $r17 = staticinvoke <androidx.wear.complications.ComplicationDataSourceInfoRetrieverKt: androidx.wear.complications.ComplicationDataSourceInfo toApiComplicationDataSourceInfo(android.support.wearable.complications.ComplicationProviderInfo)>(r16);

     label7:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r9, "extras");

        specialinvoke $r12.<androidx.wear.watchface.editor.ComplicationDataSourceChooserResult: void <init>(androidx.wear.complications.ComplicationDataSourceInfo,android.os.Bundle)>($r17, r9);

     label8:
        return $r12;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest) r2;

        $r4 = virtualinvoke r0.<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: android.content.Intent createIntent(android.content.Context,androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract r0;
        int i0;
        android.content.Intent r1;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserResult $r2;

        r0 := @this: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: androidx.wear.watchface.editor.ComplicationDataSourceChooserResult parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public static final boolean access$getUseTestComplicationHelperActivity$cp()
    {
        boolean $z0;

        $z0 = <androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: boolean useTestComplicationHelperActivity>;

        return $z0;
    }

    public static final void access$setUseTestComplicationHelperActivity$cp(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: boolean useTestComplicationHelperActivity> = z0;

        return;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract$Companion $r0;

        $r0 = new androidx.wear.watchface.editor.ComplicationDataSourceChooserContract$Companion;

        specialinvoke $r0.<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: androidx.wear.watchface.editor.ComplicationDataSourceChooserContract$Companion Companion> = $r0;

        return;
    }

