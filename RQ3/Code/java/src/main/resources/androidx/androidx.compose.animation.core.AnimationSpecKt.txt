androidx.compose.animation.core.AnimationSpecKt
    private static final androidx.compose.animation.core.AnimationVector convert(androidx.compose.animation.core.TwoWayConverter, java.lang.Object)
    {
        androidx.compose.animation.core.TwoWayConverter $r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.animation.core.AnimationVector $r4;

        $r0 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        r1 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r0.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (androidx.compose.animation.core.AnimationVector) $r3;

        return $r4;
    }

    public static final androidx.compose.animation.core.TweenSpec tween(int, int, androidx.compose.animation.core.Easing)
    {
        int i0, i1;
        androidx.compose.animation.core.Easing r0;
        androidx.compose.animation.core.TweenSpec $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.compose.animation.core.Easing;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "easing");

        $r1 = new androidx.compose.animation.core.TweenSpec;

        specialinvoke $r1.<androidx.compose.animation.core.TweenSpec: void <init>(int,int,androidx.compose.animation.core.Easing)>(i0, i1, r0);

        return $r1;
    }

    public static androidx.compose.animation.core.TweenSpec tween$default(int, int, androidx.compose.animation.core.Easing, int, java.lang.Object)
    {
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object r0;
        androidx.compose.animation.core.TweenSpec $r1;
        androidx.compose.animation.core.Easing r2;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        r2 := @parameter2: androidx.compose.animation.core.Easing;

        i0 := @parameter3: int;

        r0 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i4 = 300;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i5 = 0;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r2 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getFastOutSlowInEasing()>();

     label3:
        $r1 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween(int,int,androidx.compose.animation.core.Easing)>(i4, i5, r2);

        return $r1;
    }

    public static final androidx.compose.animation.core.SpringSpec spring(float, float, java.lang.Object)
    {
        float f0, f1;
        java.lang.Object r0;
        androidx.compose.animation.core.SpringSpec $r1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: java.lang.Object;

        $r1 = new androidx.compose.animation.core.SpringSpec;

        specialinvoke $r1.<androidx.compose.animation.core.SpringSpec: void <init>(float,float,java.lang.Object)>(f0, f1, r0);

        return $r1;
    }

    public static androidx.compose.animation.core.SpringSpec spring$default(float, float, java.lang.Object, int, java.lang.Object)
    {
        int i0, $i1, $i2, $i3;
        java.lang.Object r0, r2;
        androidx.compose.animation.core.SpringSpec $r1;
        float f0, f1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r2 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        r0 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 1.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 1500.0F;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r2 = null;

     label3:
        $r1 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring(float,float,java.lang.Object)>(f0, f1, r2);

        return $r1;
    }

    public static final androidx.compose.animation.core.KeyframesSpec keyframes(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig r1, $r3;
        androidx.compose.animation.core.KeyframesSpec $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "init");

        $r2 = new androidx.compose.animation.core.KeyframesSpec;

        $r3 = new androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig;

        specialinvoke $r3.<androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig: void <init>()>();

        r1 = $r3;

        interfaceinvoke r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        specialinvoke $r2.<androidx.compose.animation.core.KeyframesSpec: void <init>(androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig)>(r1);

        return $r2;
    }

    public static final androidx.compose.animation.core.RepeatableSpec repeatable-91I0pcU(int, androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long)
    {
        int i0;
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        androidx.compose.animation.core.RepeatMode r1;
        long l1;
        androidx.compose.animation.core.RepeatableSpec $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r1 := @parameter2: androidx.compose.animation.core.RepeatMode;

        l1 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "repeatMode");

        $r2 = new androidx.compose.animation.core.RepeatableSpec;

        specialinvoke $r2.<androidx.compose.animation.core.RepeatableSpec: void <init>(int,androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, r0, r1, l1, null);

        return $r2;
    }

    public static androidx.compose.animation.core.RepeatableSpec repeatable-91I0pcU$default(int, androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long, int, java.lang.Object)
    {
        int i0, i1, $i2, $i3;
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        java.lang.Object r1;
        androidx.compose.animation.core.RepeatableSpec $r2;
        androidx.compose.animation.core.RepeatMode r3;
        long l4;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r3 := @parameter2: androidx.compose.animation.core.RepeatMode;

        l4 := @parameter3: long;

        i1 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r3 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

     label1:
        $i3 = i1 & 8;

        if $i3 == 0 goto label2;

        l4 = staticinvoke <androidx.compose.animation.core.StartOffset: long constructor-impl$default(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

     label2:
        $r2 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.RepeatableSpec repeatable-91I0pcU(int,androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long)>(i0, r0, r3, l4);

        return $r2;
    }

    public static final androidx.compose.animation.core.RepeatableSpec repeatable(int, androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode)
    {
        int i0;
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        androidx.compose.animation.core.RepeatMode r1;
        androidx.compose.animation.core.RepeatableSpec $r2;
        long $l1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r1 := @parameter2: androidx.compose.animation.core.RepeatMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "repeatMode");

        $r2 = new androidx.compose.animation.core.RepeatableSpec;

        $l1 = staticinvoke <androidx.compose.animation.core.StartOffset: long constructor-impl$default(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

        specialinvoke $r2.<androidx.compose.animation.core.RepeatableSpec: void <init>(int,androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, r0, r1, $l1, null);

        return $r2;
    }

    public static androidx.compose.animation.core.RepeatableSpec repeatable$default(int, androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, int, java.lang.Object)
    {
        int i0, i1, $i2;
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        java.lang.Object r1;
        androidx.compose.animation.core.RepeatableSpec $r2;
        androidx.compose.animation.core.RepeatMode r3;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r3 := @parameter2: androidx.compose.animation.core.RepeatMode;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r3 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

     label1:
        $r2 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.RepeatableSpec repeatable(int,androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode)>(i0, r0, r3);

        return $r2;
    }

    public static final androidx.compose.animation.core.InfiniteRepeatableSpec infiniteRepeatable-9IiC70o(androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long)
    {
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        androidx.compose.animation.core.RepeatMode r1;
        long l0;
        androidx.compose.animation.core.InfiniteRepeatableSpec $r2;

        r0 := @parameter0: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r1 := @parameter1: androidx.compose.animation.core.RepeatMode;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "repeatMode");

        $r2 = new androidx.compose.animation.core.InfiniteRepeatableSpec;

        specialinvoke $r2.<androidx.compose.animation.core.InfiniteRepeatableSpec: void <init>(androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long,kotlin.jvm.internal.DefaultConstructorMarker)>(r0, r1, l0, null);

        return $r2;
    }

    public static androidx.compose.animation.core.InfiniteRepeatableSpec infiniteRepeatable-9IiC70o$default(androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long, int, java.lang.Object)
    {
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.compose.animation.core.InfiniteRepeatableSpec $r2;
        androidx.compose.animation.core.RepeatMode r3;
        long l3;

        r0 := @parameter0: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r3 := @parameter1: androidx.compose.animation.core.RepeatMode;

        l3 := @parameter2: long;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        l3 = staticinvoke <androidx.compose.animation.core.StartOffset: long constructor-impl$default(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

     label2:
        $r2 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.InfiniteRepeatableSpec infiniteRepeatable-9IiC70o(androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long)>(r0, r3, l3);

        return $r2;
    }

    public static final androidx.compose.animation.core.InfiniteRepeatableSpec infiniteRepeatable(androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode)
    {
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        androidx.compose.animation.core.RepeatMode r1;
        androidx.compose.animation.core.InfiniteRepeatableSpec $r2;
        long $l0;

        r0 := @parameter0: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r1 := @parameter1: androidx.compose.animation.core.RepeatMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "repeatMode");

        $r2 = new androidx.compose.animation.core.InfiniteRepeatableSpec;

        $l0 = staticinvoke <androidx.compose.animation.core.StartOffset: long constructor-impl$default(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

        specialinvoke $r2.<androidx.compose.animation.core.InfiniteRepeatableSpec: void <init>(androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long,kotlin.jvm.internal.DefaultConstructorMarker)>(r0, r1, $l0, null);

        return $r2;
    }

    public static androidx.compose.animation.core.InfiniteRepeatableSpec infiniteRepeatable$default(androidx.compose.animation.core.DurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, int, java.lang.Object)
    {
        androidx.compose.animation.core.DurationBasedAnimationSpec r0;
        int i0, $i1;
        java.lang.Object r1;
        androidx.compose.animation.core.InfiniteRepeatableSpec $r2;
        androidx.compose.animation.core.RepeatMode r3;

        r0 := @parameter0: androidx.compose.animation.core.DurationBasedAnimationSpec;

        r3 := @parameter1: androidx.compose.animation.core.RepeatMode;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

     label1:
        $r2 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.InfiniteRepeatableSpec infiniteRepeatable(androidx.compose.animation.core.DurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode)>(r0, r3);

        return $r2;
    }

    public static final androidx.compose.animation.core.SnapSpec snap(int)
    {
        int i0;
        androidx.compose.animation.core.SnapSpec $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.compose.animation.core.SnapSpec;

        specialinvoke $r0.<androidx.compose.animation.core.SnapSpec: void <init>(int)>(i0);

        return $r0;
    }

    public static androidx.compose.animation.core.SnapSpec snap$default(int, int, java.lang.Object)
    {
        int i0, $i1, i2;
        java.lang.Object r0;
        androidx.compose.animation.core.SnapSpec $r1;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        $r1 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SnapSpec snap(int)>(i2);

        return $r1;
    }

    public static final androidx.compose.animation.core.AnimationVector access$convert(androidx.compose.animation.core.TwoWayConverter, java.lang.Object)
    {
        androidx.compose.animation.core.TwoWayConverter $r0;
        java.lang.Object r1;
        androidx.compose.animation.core.AnimationVector $r2;

        $r0 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.AnimationVector convert(androidx.compose.animation.core.TwoWayConverter,java.lang.Object)>($r0, r1);

        return $r2;
    }

