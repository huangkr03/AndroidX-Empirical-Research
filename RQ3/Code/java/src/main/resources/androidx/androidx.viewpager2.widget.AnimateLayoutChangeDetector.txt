androidx.viewpager2.widget.AnimateLayoutChangeDetector
<androidx.viewpager2.widget.AnimateLayoutChangeDetector: android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS>
<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>
    void <init>(androidx.recyclerview.widget.LinearLayoutManager)
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector r0;
        androidx.recyclerview.widget.LinearLayoutManager r1;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector;

        r1 := @parameter0: androidx.recyclerview.widget.LinearLayoutManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager> = r1;

        return;
    }

    boolean mayHaveInterferingAnimations()
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector r0;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.LinearLayoutManager $r1;
        int $i0;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector;

        $z0 = specialinvoke r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: boolean arePagesLaidOutContiguously()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 > 1 goto label2;

     label1:
        $z1 = specialinvoke r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: boolean hasRunningChangingLayoutTransition()>();

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean arePagesLaidOutContiguously()
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, i23, i24;
        boolean z0, $z1, $z2;
        int[][] r1;
        android.view.View r2;
        android.view.ViewGroup$LayoutParams r3;
        androidx.recyclerview.widget.LinearLayoutManager $r4, $r5, $r13;
        androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 $r6;
        int[] $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15;
        java.lang.IllegalStateException $r16;
        android.view.ViewGroup$MarginLayoutParams r17;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector;

        $r4 = r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>;

        i0 = virtualinvoke $r4.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if i0 != 0 goto label01;

        return 1;

     label01:
        $r5 = r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>;

        $i1 = virtualinvoke $r5.<androidx.recyclerview.widget.LinearLayoutManager: int getOrientation()>();

        if $i1 != 0 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z0 = $z2;

        r1 = newmultiarray (int)[i0][2];

        i20 = 0;

     label04:
        if i20 >= i0 goto label12;

        $r13 = r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>;

        r2 = virtualinvoke $r13.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i20);

        if r2 != null goto label05;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("null view contained in the view hierarchy");

        throw $r16;

     label05:
        r3 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z1 = r3 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label06;

        r17 = (android.view.ViewGroup$MarginLayoutParams) r3;

        goto label07;

     label06:
        r17 = <androidx.viewpager2.widget.AnimateLayoutChangeDetector: android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS>;

     label07:
        $r14 = r1[i20];

        if z0 == 0 goto label08;

        $i18 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i19 = r17.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i21 = $i18 - $i19;

        goto label09;

     label08:
        $i11 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i12 = r17.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i21 = $i11 - $i12;

     label09:
        $r14[0] = $i21;

        $r15 = r1[i20];

        if z0 == 0 goto label10;

        $i16 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i17 = r17.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i22 = $i16 + $i17;

        goto label11;

     label10:
        $i14 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $i15 = r17.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i22 = $i14 + $i15;

     label11:
        $r15[1] = $i22;

        i20 = i20 + 1;

        goto label04;

     label12:
        $r6 = new androidx.viewpager2.widget.AnimateLayoutChangeDetector$1;

        specialinvoke $r6.<androidx.viewpager2.widget.AnimateLayoutChangeDetector$1: void <init>(androidx.viewpager2.widget.AnimateLayoutChangeDetector)>(r0);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r1, $r6);

        i23 = 1;

     label13:
        if i23 >= i0 goto label15;

        $i7 = i23 - 1;

        $r11 = r1[$i7];

        $i9 = $r11[1];

        $r12 = r1[i23];

        $i8 = $r12[0];

        if $i9 == $i8 goto label14;

        return 0;

     label14:
        i23 = i23 + 1;

        goto label13;

     label15:
        $r7 = r1[0];

        $i3 = $r7[1];

        $r8 = r1[0];

        $i2 = $r8[0];

        i24 = $i3 - $i2;

        $r9 = r1[0];

        $i4 = $r9[0];

        if $i4 > 0 goto label16;

        $i5 = i0 - 1;

        $r10 = r1[$i5];

        $i6 = $r10[1];

        if $i6 >= i24 goto label17;

     label16:
        return 0;

     label17:
        return 1;
    }

    private boolean hasRunningChangingLayoutTransition()
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector r0;
        int i0, i1;
        androidx.recyclerview.widget.LinearLayoutManager $r1, $r2;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector;

        $r1 = r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>;

        i0 = virtualinvoke $r1.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector: androidx.recyclerview.widget.LinearLayoutManager mLayoutManager>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i1);

        $z0 = staticinvoke <androidx.viewpager2.widget.AnimateLayoutChangeDetector: boolean hasRunningChangingLayoutTransition(android.view.View)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static boolean hasRunningChangingLayoutTransition(android.view.View)
    {
        android.view.View r0, $r3;
        android.view.ViewGroup r1;
        android.animation.LayoutTransition r2;
        int i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.view.View;

        $z0 = r0 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        r1 = (android.view.ViewGroup) r0;

        r2 = virtualinvoke r1.<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>();

        if r2 == null goto label1;

        $z2 = virtualinvoke r2.<android.animation.LayoutTransition: boolean isChangingLayout()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        i0 = virtualinvoke r1.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        $z1 = staticinvoke <androidx.viewpager2.widget.AnimateLayoutChangeDetector: boolean hasRunningChangingLayoutTransition(android.view.View)>($r3);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        android.view.ViewGroup$MarginLayoutParams $r0, $r1;

        $r0 = new android.view.ViewGroup$MarginLayoutParams;

        specialinvoke $r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(-1, -1);

        <androidx.viewpager2.widget.AnimateLayoutChangeDetector: android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS> = $r0;

        $r1 = <androidx.viewpager2.widget.AnimateLayoutChangeDetector: android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS>;

        virtualinvoke $r1.<android.view.ViewGroup$MarginLayoutParams: void setMargins(int,int,int,int)>(0, 0, 0, 0);

        return;
    }

androidx.viewpager2.widget.AnimateLayoutChangeDetector$1
<androidx.viewpager2.widget.AnimateLayoutChangeDetector$1: androidx.viewpager2.widget.AnimateLayoutChangeDetector this$0>
    void <init>(androidx.viewpager2.widget.AnimateLayoutChangeDetector)
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 r0;
        androidx.viewpager2.widget.AnimateLayoutChangeDetector r1;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector$1;

        r1 := @parameter0: androidx.viewpager2.widget.AnimateLayoutChangeDetector;

        r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector$1: androidx.viewpager2.widget.AnimateLayoutChangeDetector this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(int[], int[])
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 r0;
        int[] r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector$1;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i1 = r1[0];

        $i0 = r2[0];

        $i2 = $i1 - $i0;

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 r0;
        java.lang.Object r1, r2;
        int[] $r3, $r4;
        int $i0;

        r0 := @this: androidx.viewpager2.widget.AnimateLayoutChangeDetector$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (int[]) r1;

        $r3 = (int[]) r2;

        $i0 = virtualinvoke r0.<androidx.viewpager2.widget.AnimateLayoutChangeDetector$1: int compare(int[],int[])>($r4, $r3);

        return $i0;
    }

