androidx.media3.extractor.DtsUtil
<androidx.media3.extractor.DtsUtil: int DTS_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.DtsUtil: int DTS_HD_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.DtsUtil: int SYNC_VALUE_BE>
<androidx.media3.extractor.DtsUtil: int SYNC_VALUE_14B_BE>
<androidx.media3.extractor.DtsUtil: int SYNC_VALUE_LE>
<androidx.media3.extractor.DtsUtil: int SYNC_VALUE_14B_LE>
<androidx.media3.extractor.DtsUtil: byte FIRST_BYTE_BE>
<androidx.media3.extractor.DtsUtil: byte FIRST_BYTE_14B_BE>
<androidx.media3.extractor.DtsUtil: byte FIRST_BYTE_LE>
<androidx.media3.extractor.DtsUtil: byte FIRST_BYTE_14B_LE>
<androidx.media3.extractor.DtsUtil: int[] CHANNELS_BY_AMODE>
<androidx.media3.extractor.DtsUtil: int[] SAMPLE_RATE_BY_SFREQ>
<androidx.media3.extractor.DtsUtil: int[] TWICE_BITRATE_KBPS_BY_RATE>
    public static boolean isSyncWord(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 2147385345 goto label1;

        if i0 == -25230976 goto label1;

        if i0 == 536864768 goto label1;

        if i0 != -14745368 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static androidx.media3.common.Format parseDtsFormat(byte[], java.lang.String, java.lang.String, androidx.media3.common.DrmInitData)
    {
        byte[] r0;
        java.lang.String r1, r2;
        androidx.media3.common.DrmInitData r3;
        androidx.media3.common.util.ParsableBitArray r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i10, $i11, i13;
        int[] $r5, $r6, $r7, $r8;
        androidx.media3.common.Format$Builder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        androidx.media3.common.Format $r17;
        byte $b12;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: androidx.media3.common.DrmInitData;

        r4 = staticinvoke <androidx.media3.extractor.DtsUtil: androidx.media3.common.util.ParsableBitArray getNormalizedFrameHeader(byte[])>(r0);

        virtualinvoke r4.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(60);

        i0 = virtualinvoke r4.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(6);

        $r5 = <androidx.media3.extractor.DtsUtil: int[] CHANNELS_BY_AMODE>;

        i10 = $r5[i0];

        i1 = virtualinvoke r4.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(4);

        $r6 = <androidx.media3.extractor.DtsUtil: int[] SAMPLE_RATE_BY_SFREQ>;

        i2 = $r6[i1];

        i3 = virtualinvoke r4.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(5);

        $r7 = <androidx.media3.extractor.DtsUtil: int[] TWICE_BITRATE_KBPS_BY_RATE>;

        $i5 = lengthof $r7;

        if i3 < $i5 goto label1;

        $i11 = -1;

        goto label2;

     label1:
        $r8 = <androidx.media3.extractor.DtsUtil: int[] TWICE_BITRATE_KBPS_BY_RATE>;

        $i6 = $r8[i3];

        $i7 = $i6 * 1000;

        $i11 = $i7 / 2;

     label2:
        i4 = $i11;

        virtualinvoke r4.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(10);

        $i8 = virtualinvoke r4.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(2);

        if $i8 <= 0 goto label3;

        $b12 = 1;

        goto label4;

     label3:
        $b12 = 0;

     label4:
        i13 = i10 + $b12;

        $r9 = new androidx.media3.common.Format$Builder;

        specialinvoke $r9.<androidx.media3.common.Format$Builder: void <init>()>();

        $r10 = virtualinvoke $r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("audio/vnd.dts");

        $r12 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAverageBitrate(int)>(i4);

        $r13 = virtualinvoke $r12.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>(i13);

        $r14 = virtualinvoke $r13.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>(i2);

        $r15 = virtualinvoke $r14.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setDrmInitData(androidx.media3.common.DrmInitData)>(r3);

        $r16 = virtualinvoke $r15.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r17;
    }

    public static int parseDtsAudioSampleCount(byte[])
    {
        byte[] r0;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b7, $b8, $b9, $b10, $b11, $b13, $b14, $b15, $b19, $b20, $b21;
        int $i6, $i12, $i18, $i24, i25, $i26, $i27;
        short $s16, $s17, $s22, $s23;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        lookupswitch($b0)
        {
            case -2: goto label1;
            case -1: goto label2;
            case 31: goto label3;
            default: goto label4;
        };

     label1:
        $b13 = r0[5];

        $b14 = $b13 & 1;

        $i18 = $b14 << 6;

        $b15 = r0[4];

        $s16 = $b15 & 252;

        $s17 = $s16 >> 2;

        i25 = $i18 | $s17;

        goto label5;

     label2:
        $b7 = r0[4];

        $b8 = $b7 & 7;

        $i12 = $b8 << 4;

        $b9 = r0[7];

        $b10 = $b9 & 60;

        $b11 = $b10 >> 2;

        i25 = $i12 | $b11;

        goto label5;

     label3:
        $b1 = r0[5];

        $b2 = $b1 & 7;

        $i6 = $b2 << 4;

        $b3 = r0[6];

        $b4 = $b3 & 60;

        $b5 = $b4 >> 2;

        i25 = $i6 | $b5;

        goto label5;

     label4:
        $b19 = r0[4];

        $b20 = $b19 & 1;

        $i24 = $b20 << 6;

        $b21 = r0[5];

        $s22 = $b21 & 252;

        $s23 = $s22 >> 2;

        i25 = $i24 | $s23;

     label5:
        $i26 = i25 + 1;

        $i27 = $i26 * 32;

        return $i27;
    }

    public static int parseDtsAudioSampleCount(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int i0, $i2, $i5, $i6, $i10, $i13, $i14, $i18, $i21, $i22, $i26, $i29, $i30, i34, $i35, $i36;
        byte $b1, $b3, $b4, $b7, $b8, $b9, $b11, $b12, $b15, $b16, $b17, $b19, $b20, $b23, $b27, $b28, $b31;
        short $s24, $s25, $s32, $s33;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $b1 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i0);

        lookupswitch($b1)
        {
            case -2: goto label1;
            case -1: goto label2;
            case 31: goto label3;
            default: goto label4;
        };

     label1:
        $i18 = i0 + 5;

        $b19 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i18);

        $b20 = $b19 & 1;

        $i22 = $b20 << 6;

        $i21 = i0 + 4;

        $b23 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i21);

        $s24 = $b23 & 252;

        $s25 = $s24 >> 2;

        i34 = $i22 | $s25;

        goto label5;

     label2:
        $i10 = i0 + 4;

        $b11 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i10);

        $b12 = $b11 & 7;

        $i14 = $b12 << 4;

        $i13 = i0 + 7;

        $b15 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i13);

        $b16 = $b15 & 60;

        $b17 = $b16 >> 2;

        i34 = $i14 | $b17;

        goto label5;

     label3:
        $i2 = i0 + 5;

        $b3 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i2);

        $b4 = $b3 & 7;

        $i6 = $b4 << 4;

        $i5 = i0 + 6;

        $b7 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i5);

        $b8 = $b7 & 60;

        $b9 = $b8 >> 2;

        i34 = $i6 | $b9;

        goto label5;

     label4:
        $i26 = i0 + 4;

        $b27 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i26);

        $b28 = $b27 & 1;

        $i30 = $b28 << 6;

        $i29 = i0 + 5;

        $b31 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i29);

        $s32 = $b31 & 252;

        $s33 = $s32 >> 2;

        i34 = $i30 | $s33;

     label5:
        $i35 = i34 + 1;

        $i36 = $i35 * 32;

        return $i36;
    }

    public static int getDtsFrameSize(byte[])
    {
        byte[] r0;
        byte $b0, $b1, $b2, $b3, $b7, $b8, $b9, $b13, $b14, $b15, $b19, $b20, $b21, $b24, $b25, $b26, $b30, $b35, $b36, $b37, $b41;
        short $s4, $s16, $s27, $s31, $s32, $s38, $s42, $s43;
        int $i5, $i6, $i10, $i11, $i12, $i17, $i18, $i22, $i23, $i28, $i29, $i33, $i34, $i39, $i40, $i44, $i45, i46, $i47;
        boolean z0;

        r0 := @parameter0: byte[];

        z0 = 0;

        $b0 = r0[0];

        lookupswitch($b0)
        {
            case -2: goto label2;
            case -1: goto label3;
            case 31: goto label1;
            default: goto label4;
        };

     label1:
        $b1 = r0[6];

        $b2 = $b1 & 3;

        $i6 = $b2 << 12;

        $b3 = r0[7];

        $s4 = $b3 & 255;

        $i5 = $s4 << 4;

        $i10 = $i6 | $i5;

        $b7 = r0[8];

        $b8 = $b7 & 60;

        $b9 = $b8 >> 2;

        $i11 = $i10 | $b9;

        i46 = $i11 + 1;

        z0 = 1;

        goto label5;

     label2:
        $b24 = r0[4];

        $b25 = $b24 & 3;

        $i29 = $b25 << 12;

        $b26 = r0[7];

        $s27 = $b26 & 255;

        $i28 = $s27 << 4;

        $i33 = $i29 | $i28;

        $b30 = r0[6];

        $s31 = $b30 & 240;

        $s32 = $s31 >> 4;

        $i34 = $i33 | $s32;

        i46 = $i34 + 1;

        goto label5;

     label3:
        $b13 = r0[7];

        $b14 = $b13 & 3;

        $i18 = $b14 << 12;

        $b15 = r0[6];

        $s16 = $b15 & 255;

        $i17 = $s16 << 4;

        $i22 = $i18 | $i17;

        $b19 = r0[9];

        $b20 = $b19 & 60;

        $b21 = $b20 >> 2;

        $i23 = $i22 | $b21;

        i46 = $i23 + 1;

        z0 = 1;

        goto label5;

     label4:
        $b35 = r0[5];

        $b36 = $b35 & 3;

        $i40 = $b36 << 12;

        $b37 = r0[6];

        $s38 = $b37 & 255;

        $i39 = $s38 << 4;

        $i44 = $i40 | $i39;

        $b41 = r0[7];

        $s42 = $b41 & 240;

        $s43 = $s42 >> 4;

        $i45 = $i44 | $s43;

        i46 = $i45 + 1;

     label5:
        if z0 == 0 goto label6;

        $i12 = i46 * 16;

        $i47 = $i12 / 14;

        goto label7;

     label6:
        $i47 = i46;

     label7:
        return $i47;
    }

    private static androidx.media3.common.util.ParsableBitArray getNormalizedFrameHeader(byte[])
    {
        byte $b0, $b2, $b8, b11;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i9, i10;
        boolean $z0;
        androidx.media3.common.util.ParsableBitArray $r0, $r1, $r2, r5, r6;
        byte[] r3, r4;

        r3 := @parameter0: byte[];

        $b0 = r3[0];

        if $b0 != 127 goto label1;

        $r2 = new androidx.media3.common.util.ParsableBitArray;

        specialinvoke $r2.<androidx.media3.common.util.ParsableBitArray: void <init>(byte[])>(r3);

        return $r2;

     label1:
        $i1 = lengthof r3;

        r4 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r3, $i1);

        $z0 = staticinvoke <androidx.media3.extractor.DtsUtil: boolean isLittleEndianFrameHeader(byte[])>(r4);

        if $z0 == 0 goto label3;

        i10 = 0;

     label2:
        $i5 = lengthof r4;

        $i6 = $i5 - 1;

        if i10 >= $i6 goto label3;

        b11 = r4[i10];

        $i7 = i10 + 1;

        $b8 = r4[$i7];

        r4[i10] = $b8;

        $i9 = i10 + 1;

        r4[$i9] = b11;

        i10 = i10 + 2;

        goto label2;

     label3:
        $r0 = new androidx.media3.common.util.ParsableBitArray;

        specialinvoke $r0.<androidx.media3.common.util.ParsableBitArray: void <init>(byte[])>(r4);

        r5 = $r0;

        $b2 = r4[0];

        if $b2 != 31 goto label5;

        $r1 = new androidx.media3.common.util.ParsableBitArray;

        specialinvoke $r1.<androidx.media3.common.util.ParsableBitArray: void <init>(byte[])>(r4);

        r6 = $r1;

     label4:
        $i3 = virtualinvoke r6.<androidx.media3.common.util.ParsableBitArray: int bitsLeft()>();

        if $i3 < 16 goto label5;

        virtualinvoke r6.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(2);

        $i4 = virtualinvoke r6.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(14);

        virtualinvoke r5.<androidx.media3.common.util.ParsableBitArray: void putInt(int,int)>($i4, 14);

        goto label4;

     label5:
        virtualinvoke r5.<androidx.media3.common.util.ParsableBitArray: void reset(byte[])>(r4);

        return r5;
    }

    private static boolean isLittleEndianFrameHeader(byte[])
    {
        byte[] r0;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        if $b0 == -2 goto label1;

        $b1 = r0[0];

        if $b1 != -1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void <init>()
    {
        androidx.media3.extractor.DtsUtil r0;

        r0 := @this: androidx.media3.extractor.DtsUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2;

        $r0 = newarray (int)[16];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 2;

        $r0[3] = 2;

        $r0[4] = 2;

        $r0[5] = 3;

        $r0[6] = 3;

        $r0[7] = 4;

        $r0[8] = 4;

        $r0[9] = 5;

        $r0[10] = 6;

        $r0[11] = 6;

        $r0[12] = 6;

        $r0[13] = 7;

        $r0[14] = 8;

        $r0[15] = 8;

        <androidx.media3.extractor.DtsUtil: int[] CHANNELS_BY_AMODE> = $r0;

        $r1 = newarray (int)[16];

        $r1[0] = -1;

        $r1[1] = 8000;

        $r1[2] = 16000;

        $r1[3] = 32000;

        $r1[4] = -1;

        $r1[5] = -1;

        $r1[6] = 11025;

        $r1[7] = 22050;

        $r1[8] = 44100;

        $r1[9] = -1;

        $r1[10] = -1;

        $r1[11] = 12000;

        $r1[12] = 24000;

        $r1[13] = 48000;

        $r1[14] = -1;

        $r1[15] = -1;

        <androidx.media3.extractor.DtsUtil: int[] SAMPLE_RATE_BY_SFREQ> = $r1;

        $r2 = newarray (int)[29];

        $r2[0] = 64;

        $r2[1] = 112;

        $r2[2] = 128;

        $r2[3] = 192;

        $r2[4] = 224;

        $r2[5] = 256;

        $r2[6] = 384;

        $r2[7] = 448;

        $r2[8] = 512;

        $r2[9] = 640;

        $r2[10] = 768;

        $r2[11] = 896;

        $r2[12] = 1024;

        $r2[13] = 1152;

        $r2[14] = 1280;

        $r2[15] = 1536;

        $r2[16] = 1920;

        $r2[17] = 2048;

        $r2[18] = 2304;

        $r2[19] = 2560;

        $r2[20] = 2688;

        $r2[21] = 2816;

        $r2[22] = 2823;

        $r2[23] = 2944;

        $r2[24] = 3072;

        $r2[25] = 3840;

        $r2[26] = 4096;

        $r2[27] = 6144;

        $r2[28] = 7680;

        <androidx.media3.extractor.DtsUtil: int[] TWICE_BITRATE_KBPS_BY_RATE> = $r2;

        return;
    }

