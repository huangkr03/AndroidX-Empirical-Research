androidx.constraintlayout.utils.widget.ImageFilterButton
<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>
<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>
<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>
<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>
    public void <init>(android.content.Context)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        android.content.Context r1;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r2;
        android.graphics.drawable.Drawable[] $r3;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context)>(r1);

        $r2 = new androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix;

        specialinvoke $r2.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix> = $r2;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade> = 0.0F;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent> = 0.0F;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound> = #NaNF;

        $r3 = newarray (android.graphics.drawable.Drawable)[2];

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers> = $r3;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay> = 1;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable> = null;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate> = #NaNF;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r3;
        android.graphics.drawable.Drawable[] $r4;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix;

        specialinvoke $r3.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix> = $r3;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade> = 0.0F;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent> = 0.0F;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound> = #NaNF;

        $r4 = newarray (android.graphics.drawable.Drawable)[2];

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers> = $r4;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay> = 1;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable> = null;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate> = #NaNF;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r3;
        android.graphics.drawable.Drawable[] $r4;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix;

        specialinvoke $r3.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix> = $r3;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade> = 0.0F;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent> = 0.0F;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound> = #NaNF;

        $r4 = newarray (android.graphics.drawable.Drawable)[2];

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers> = $r4;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay> = 1;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable> = null;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom> = #NaNF;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate> = #NaNF;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void init(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        android.content.Context r1, $r4;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        int[] $r5;
        android.graphics.drawable.Drawable $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r20, $r24, $r27;
        android.graphics.drawable.Drawable[] $r12, $r15, $r19, $r22;
        android.graphics.drawable.LayerDrawable $r21, $r23, $r25, $r26;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setPadding(int,int,int,int)>(0, 0, 0, 0);

        if r2 == null goto label16;

        $r4 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.content.Context getContext()>();

        $r5 = <androidx.constraintlayout.widget.R$styleable: int[] ImageFilterView>;

        r3 = virtualinvoke $r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getIndexCount()>();

        $i2 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_altSrc>;

        $r6 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i2);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable> = $r6;

        i18 = 0;

     label01:
        if i18 >= i0 goto label13;

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getIndex(int)>(i18);

        $i5 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_crossfade>;

        if i1 != $i5 goto label02;

        $f18 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade> = $f18;

        goto label12;

     label02:
        $i6 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_warmth>;

        if i1 != $i6 goto label03;

        $f17 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setWarmth(float)>($f17);

        goto label12;

     label03:
        $i7 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_saturation>;

        if i1 != $i7 goto label04;

        $f16 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setSaturation(float)>($f16);

        goto label12;

     label04:
        $i8 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_contrast>;

        if i1 != $i8 goto label05;

        $f15 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setContrast(float)>($f15);

        goto label12;

     label05:
        $i9 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_round>;

        if i1 != $i9 goto label06;

        $i17 = <android.os.Build$VERSION: int SDK_INT>;

        if $i17 < 21 goto label12;

        $f14 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(i1, 0.0F);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>($f14);

        goto label12;

     label06:
        $i10 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_roundPercent>;

        if i1 != $i10 goto label07;

        $i16 = <android.os.Build$VERSION: int SDK_INT>;

        if $i16 < 21 goto label12;

        $f13 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>($f13);

        goto label12;

     label07:
        $i11 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_overlay>;

        if i1 != $i11 goto label08;

        $z1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay>;

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z1);

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setOverlay(boolean)>($z2);

        goto label12;

     label08:
        $i12 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_imagePanX>;

        if i1 != $i12 goto label09;

        $f11 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>;

        $f12 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f11);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setImagePanX(float)>($f12);

        goto label12;

     label09:
        $i13 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_imagePanY>;

        if i1 != $i13 goto label10;

        $f9 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>;

        $f10 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f9);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setImagePanY(float)>($f10);

        goto label12;

     label10:
        $i14 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_imageRotate>;

        if i1 != $i14 goto label11;

        $f7 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>;

        $f8 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f7);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setImageRotate(float)>($f8);

        goto label12;

     label11:
        $i15 = <androidx.constraintlayout.widget.R$styleable: int ImageFilterView_imageZoom>;

        if i1 != $i15 goto label12;

        $f5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>;

        $f6 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f5);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setImageZoom(float)>($f6);

     label12:
        i18 = i18 + 1;

        goto label01;

     label13:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r7 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable getDrawable()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = $r7;

        $r8 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        if $r8 == null goto label15;

        $r14 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>;

        if $r14 == null goto label15;

        $r15 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r16 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable getDrawable()>();

        $r17 = virtualinvoke $r16.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = $r17;

        $r15[0] = $r17;

        $r19 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r18 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        $r20 = virtualinvoke $r18.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r19[1] = $r20;

        $r21 = new android.graphics.drawable.LayerDrawable;

        $r22 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        specialinvoke $r21.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r22);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer> = $r21;

        $r23 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        $r24 = virtualinvoke $r23.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        $f1 = 255.0F * $f0;

        $i3 = (int) $f1;

        virtualinvoke $r24.<android.graphics.drawable.Drawable: void setAlpha(int)>($i3);

        $z0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay>;

        if $z0 != 0 goto label14;

        $r26 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        $r27 = virtualinvoke $r26.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $f2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        $f3 = 1.0F - $f2;

        $f4 = 255.0F * $f3;

        $i4 = (int) $f4;

        virtualinvoke $r27.<android.graphics.drawable.Drawable: void setAlpha(int)>($i4);

     label14:
        $r25 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r25);

        goto label16;

     label15:
        $r9 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable getDrawable()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = $r9;

        $r10 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>;

        if $r10 == null goto label16;

        $r12 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r11 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>;

        $r13 = virtualinvoke $r11.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = $r13;

        $r12[0] = $r13;

     label16:
        return;
    }

    public float getImagePanX()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>;

        return $f0;
    }

    public float getImagePanY()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>;

        return $f0;
    }

    public float getImageZoom()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>;

        return $f0;
    }

    public float getImageRotate()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>;

        return $f0;
    }

    public void setImagePanX(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX> = f0;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void updateViewMatrix()>();

        return;
    }

    public void setImagePanY(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY> = f0;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void updateViewMatrix()>();

        return;
    }

    public void setImageZoom(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom> = f0;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void updateViewMatrix()>();

        return;
    }

    public void setImageRotate(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate> = f0;

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void updateViewMatrix()>();

        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r6;
        android.graphics.drawable.Drawable[] $r5, $r7, $r9;
        android.graphics.drawable.LayerDrawable $r8, $r10;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = $r3;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r4 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>;

        $r5[0] = $r4;

        $r7 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r6 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        $r7[1] = $r6;

        $r8 = new android.graphics.drawable.LayerDrawable;

        $r9 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        specialinvoke $r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r9);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer> = $r8;

        $r10 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r10);

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setCrossfade(float)>($f0);

        goto label2;

     label1:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label2:
        return;
    }

    public void setImageResource(int)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r3, $r4, $r5, $r7;
        android.content.Context $r2;
        android.graphics.drawable.Drawable[] $r6, $r8, $r10;
        android.graphics.drawable.LayerDrawable $r9, $r11;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, i0);

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable> = $r4;

        $r6 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>;

        $r6[0] = $r5;

        $r8 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r7 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        $r8[1] = $r7;

        $r9 = new android.graphics.drawable.LayerDrawable;

        $r10 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        specialinvoke $r9.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r10);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer> = $r9;

        $r11 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r11);

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setCrossfade(float)>($f0);

        goto label2;

     label1:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)>(i0);

     label2:
        return;
    }

    public void setAltImageResource(int)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r6;
        android.graphics.drawable.Drawable[] $r5, $r7, $r9;
        android.graphics.drawable.LayerDrawable $r8, $r10;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.content.Context getContext()>();

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable> = $r3;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r4 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mDrawable>;

        $r5[0] = $r4;

        $r7 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        $r6 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable mAltDrawable>;

        $r7[1] = $r6;

        $r8 = new android.graphics.drawable.LayerDrawable;

        $r9 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        specialinvoke $r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r9);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer> = $r8;

        $r10 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r10);

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setCrossfade(float)>($f0);

        return;
    }

    private void updateViewMatrix()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3;
        android.widget.ImageView$ScaleType $r1;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label1;

        $f1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 == 0 goto label1;

        $f2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z2 == 0 goto label1;

        $f3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z3 == 0 goto label1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

        return;

     label1:
        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setMatrix()>();

        return;
    }

    private void setMatrix()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40;
        android.graphics.Matrix r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z7, $z8, $z9, $z10;
        android.graphics.drawable.Drawable $r3, $r4;
        int $i0, $i1, $i2, $i3;
        byte $b4;
        android.widget.ImageView$ScaleType $r5;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f11 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f11);

        if $z0 == 0 goto label01;

        $f32 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>;

        $z7 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f32);

        if $z7 == 0 goto label01;

        $f33 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>;

        $z8 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f33);

        if $z8 == 0 goto label01;

        $f34 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>;

        $z9 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f34);

        if $z9 == 0 goto label01;

        return;

     label01:
        $f35 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>;

        $z10 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f35);

        if $z10 == 0 goto label02;

        $f36 = 0.0F;

        goto label03;

     label02:
        $f36 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanX>;

     label03:
        f0 = $f36;

        $f12 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f12);

        if $z1 == 0 goto label04;

        $f37 = 0.0F;

        goto label05;

     label04:
        $f37 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mPanY>;

     label05:
        f1 = $f37;

        $f13 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f13);

        if $z2 == 0 goto label06;

        $f38 = 1.0F;

        goto label07;

     label06:
        $f38 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mZoom>;

     label07:
        f2 = $f38;

        $f14 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f14);

        if $z3 == 0 goto label08;

        $f39 = 0.0F;

        goto label09;

     label08:
        $f39 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRotate>;

     label09:
        f3 = $f39;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.graphics.Matrix: void reset()>();

        $r3 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable getDrawable()>();

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        f4 = (float) $i0;

        $r4 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable getDrawable()>();

        $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        f5 = (float) $i1;

        $i2 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getWidth()>();

        f6 = (float) $i2;

        $i3 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getHeight()>();

        f7 = (float) $i3;

        $f16 = f4 * f7;

        $f15 = f5 * f6;

        $b4 = $f16 cmpg $f15;

        if $b4 >= 0 goto label10;

        $f40 = f6 / f4;

        goto label11;

     label10:
        $f40 = f7 / f5;

     label11:
        f8 = f2 * $f40;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f8, f8);

        $f17 = f8 * f4;

        $f18 = f6 - $f17;

        $f19 = f0 * $f18;

        $f21 = $f19 + f6;

        $f20 = f8 * f4;

        $f22 = $f21 - $f20;

        f9 = 0.5F * $f22;

        $f23 = f8 * f5;

        $f24 = f7 - $f23;

        $f25 = f1 * $f24;

        $f27 = $f25 + f7;

        $f26 = f8 * f5;

        $f28 = $f27 - $f26;

        f10 = 0.5F * $f28;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>(f9, f10);

        $f30 = f6 / 2.0F;

        $f29 = f7 / 2.0F;

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float,float,float)>(f3, $f30, $f29);

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setImageMatrix(android.graphics.Matrix)>(r1);

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setScaleType(android.widget.ImageView$ScaleType)>($r5);

        return;
    }

    private void setOverlay(boolean)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        boolean z0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        z0 := @parameter0: boolean;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay> = z0;

        return;
    }

    public void setSaturation(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mSaturation> = f0;

        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getSaturation()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mSaturation>;

        return $f0;
    }

    public void setContrast(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mContrast> = f0;

        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getContrast()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mContrast>;

        return $f0;
    }

    public void setWarmth(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mWarmth> = f0;

        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getWarmth()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mWarmth>;

        return $f0;
    }

    public void setCrossfade(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.Drawable[] $r1;
        boolean $z0;
        android.graphics.drawable.LayerDrawable $r2, $r4, $r5;
        android.graphics.drawable.Drawable $r3, $r6;
        int $i0, $i1;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade> = f0;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.Drawable[] mLayers>;

        if $r1 == null goto label2;

        $z0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: boolean mOverlay>;

        if $z0 != 0 goto label1;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $f3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        $f4 = 1.0F - $f3;

        $f5 = 255.0F * $f4;

        $i1 = (int) $f5;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setAlpha(int)>($i1);

     label1:
        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $f1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        $f2 = 255.0F * $f1;

        $i0 = (int) $f2;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        $r4 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

     label2:
        return;
    }

    public float getCrossfade()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mCrossfade>;

        return $f0;
    }

    public void setBrightness(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0;
        androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: float mBrightness> = f0;

        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public void setRoundPercent(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean z0, $z1;
        int i0, i1, $i4, $i5, $i6, $i7;
        byte $b2, $b3;
        android.graphics.Path $r1, $r7, $r9, $r10;
        android.graphics.RectF $r2, $r6, $r8, $r11;
        android.view.ViewOutlineProvider $r3, $r5;
        androidx.constraintlayout.utils.widget.ImageFilterButton$1 $r4;
        android.graphics.Path$Direction $r12;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        $f2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>;

        $b2 = $f2 cmpl f0;

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent> = f0;

        $f3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>;

        $b3 = $f3 cmpl 0.0F;

        if $b3 == 0 goto label7;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        if $r1 != null goto label3;

        $r7 = new android.graphics.Path;

        specialinvoke $r7.<android.graphics.Path: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath> = $r7;

     label3:
        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>;

        if $r2 != null goto label4;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect> = $r6;

     label4:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 21 goto label6;

        $r3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider>;

        if $r3 != null goto label5;

        $r4 = new androidx.constraintlayout.utils.widget.ImageFilterButton$1;

        specialinvoke $r4.<androidx.constraintlayout.utils.widget.ImageFilterButton$1: void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton)>(r0);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider> = $r4;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setOutlineProvider(android.view.ViewOutlineProvider)>($r5);

     label5:
        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setClipToOutline(boolean)>(1);

     label6:
        i0 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getWidth()>();

        i1 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getHeight()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $f4 = (float) $i7;

        $f5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>;

        $f6 = $f4 * $f5;

        f1 = $f6 / 2.0F;

        $r8 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>;

        $f7 = (float) i0;

        $f8 = (float) i1;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f7, $f8);

        $r9 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        virtualinvoke $r9.<android.graphics.Path: void reset()>();

        $r10 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        $r11 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>;

        $r12 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r10.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)>($r11, f1, f1, $r12);

        goto label8;

     label7:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label8;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setClipToOutline(boolean)>(0);

     label8:
        if z0 == 0 goto label9;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 < 21 goto label9;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void invalidateOutline()>();

     label9:
        return;
    }

    public void setRound(float)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float f0, $f1, $f2, f3, $f4, $f5, $f6, $f7;
        int i0, i1, $i4, $i5, $i6;
        boolean $z0, $z1, z2;
        byte $b2, $b3;
        android.graphics.Path $r1, $r7, $r9, $r10;
        android.graphics.RectF $r2, $r6, $r8, $r11;
        android.view.ViewOutlineProvider $r3, $r5;
        androidx.constraintlayout.utils.widget.ImageFilterButton$2 $r4;
        android.graphics.Path$Direction $r12;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label01;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound> = f0;

        f3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent> = -1.0F;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>(f3);

        return;

     label01:
        $f1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        $b2 = $f1 cmpl f0;

        if $b2 == 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z2 = $z1;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound> = f0;

        $f2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        $b3 = $f2 cmpl 0.0F;

        if $b3 == 0 goto label08;

        $r1 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        if $r1 != null goto label04;

        $r7 = new android.graphics.Path;

        specialinvoke $r7.<android.graphics.Path: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath> = $r7;

     label04:
        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>;

        if $r2 != null goto label05;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect> = $r6;

     label05:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 21 goto label07;

        $r3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider>;

        if $r3 != null goto label06;

        $r4 = new androidx.constraintlayout.utils.widget.ImageFilterButton$2;

        specialinvoke $r4.<androidx.constraintlayout.utils.widget.ImageFilterButton$2: void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton)>(r0);

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider> = $r4;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.view.ViewOutlineProvider mViewOutlineProvider>;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setOutlineProvider(android.view.ViewOutlineProvider)>($r5);

     label06:
        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setClipToOutline(boolean)>(1);

     label07:
        i0 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getWidth()>();

        i1 = virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getHeight()>();

        $r8 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>;

        $f4 = (float) i0;

        $f5 = (float) i1;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f4, $f5);

        $r9 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        virtualinvoke $r9.<android.graphics.Path: void reset()>();

        $r10 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        $r11 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.RectF mRect>;

        $f6 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        $f7 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        $r12 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r10.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)>($r11, $f6, $f7, $r12);

        goto label09;

     label08:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label09;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setClipToOutline(boolean)>(0);

     label09:
        if z2 == 0 goto label10;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 < 21 goto label10;

        virtualinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void invalidateOutline()>();

     label10:
        return;
    }

    public float getRoundPercent()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>;

        return $f0;
    }

    public float getRound()
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        return $f0;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        android.graphics.Canvas r1;
        int $i0;
        float $f0;
        byte $b1;
        android.graphics.Path $r2, $r3;
        boolean z1;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r1 := @parameter0: android.graphics.Canvas;

        z1 = 0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label1;

        $r2 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        if $r2 == null goto label1;

        z1 = 1;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: android.graphics.Path mPath>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>($r3);

     label1:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void draw(android.graphics.Canvas)>(r1);

        if z1 == 0 goto label2;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label2:
        return;
    }

    public void layout(int, int, int, int)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageButton: void layout(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: void setMatrix()>();

        return;
    }

    static float access$000(androidx.constraintlayout.utils.widget.ImageFilterButton)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @parameter0: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRoundPercent>;

        return $f0;
    }

    static float access$100(androidx.constraintlayout.utils.widget.ImageFilterButton)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton r0;
        float $f0;

        r0 := @parameter0: androidx.constraintlayout.utils.widget.ImageFilterButton;

        $f0 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton: float mRound>;

        return $f0;
    }

androidx.constraintlayout.utils.widget.ImageFilterButton$1
<androidx.constraintlayout.utils.widget.ImageFilterButton$1: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>
    void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton$1 r0;
        androidx.constraintlayout.utils.widget.ImageFilterButton r1;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton$1;

        r1 := @parameter0: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$1: androidx.constraintlayout.utils.widget.ImageFilterButton this$0> = r1;

        specialinvoke r0.<android.view.ViewOutlineProvider: void <init>()>();

        return;
    }

    public void getOutline(android.view.View, android.graphics.Outline)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton$1 r0;
        android.view.View r1;
        android.graphics.Outline r2;
        int i0, i1, $i2;
        float f0, $f1, $f2, $f3;
        androidx.constraintlayout.utils.widget.ImageFilterButton $r3, $r4, $r5;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Outline;

        $r3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$1: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>;

        i0 = virtualinvoke $r3.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getWidth()>();

        $r4 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$1: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>;

        i1 = virtualinvoke $r4.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $f1 = (float) $i2;

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$1: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>;

        $f2 = staticinvoke <androidx.constraintlayout.utils.widget.ImageFilterButton: float access$000(androidx.constraintlayout.utils.widget.ImageFilterButton)>($r5);

        $f3 = $f1 * $f2;

        f0 = $f3 / 2.0F;

        virtualinvoke r2.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>(0, 0, i0, i1, f0);

        return;
    }

androidx.constraintlayout.utils.widget.ImageFilterButton$2
<androidx.constraintlayout.utils.widget.ImageFilterButton$2: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>
    void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton$2 r0;
        androidx.constraintlayout.utils.widget.ImageFilterButton r1;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton$2;

        r1 := @parameter0: androidx.constraintlayout.utils.widget.ImageFilterButton;

        r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$2: androidx.constraintlayout.utils.widget.ImageFilterButton this$0> = r1;

        specialinvoke r0.<android.view.ViewOutlineProvider: void <init>()>();

        return;
    }

    public void getOutline(android.view.View, android.graphics.Outline)
    {
        androidx.constraintlayout.utils.widget.ImageFilterButton$2 r0;
        android.view.View r1;
        android.graphics.Outline r2;
        int i0, i1;
        androidx.constraintlayout.utils.widget.ImageFilterButton $r3, $r4, $r5;
        float $f0;

        r0 := @this: androidx.constraintlayout.utils.widget.ImageFilterButton$2;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Outline;

        $r3 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$2: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>;

        i0 = virtualinvoke $r3.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getWidth()>();

        $r4 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$2: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>;

        i1 = virtualinvoke $r4.<androidx.constraintlayout.utils.widget.ImageFilterButton: int getHeight()>();

        $r5 = r0.<androidx.constraintlayout.utils.widget.ImageFilterButton$2: androidx.constraintlayout.utils.widget.ImageFilterButton this$0>;

        $f0 = staticinvoke <androidx.constraintlayout.utils.widget.ImageFilterButton: float access$100(androidx.constraintlayout.utils.widget.ImageFilterButton)>($r5);

        virtualinvoke r2.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>(0, 0, i0, i1, $f0);

        return;
    }

