androidx.credentials.GetPublicKeyCredentialOption
<androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion>
<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String requestJson>
<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String clientDataHash>
<androidx.credentials.GetPublicKeyCredentialOption: boolean preferImmediatelyAvailableCredentials>
<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String BUNDLE_KEY_PREFER_IMMEDIATELY_AVAILABLE_CREDENTIALS>
<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String BUNDLE_KEY_CLIENT_DATA_HASH>
<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String BUNDLE_KEY_REQUEST_JSON>
<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String BUNDLE_VALUE_SUBTYPE_GET_PUBLIC_KEY_CREDENTIAL_OPTION>
    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        java.lang.String r1, r2, $r7, $r10, $r11;
        boolean z0, $z1;
        androidx.credentials.GetPublicKeyCredentialOption$Companion $r3, $r5;
        android.os.Bundle $r4, $r6;
        java.lang.CharSequence $r8;
        int $i0;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requestJson");

        $r3 = <androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.credentials.GetPublicKeyCredentialOption$Companion: android.os.Bundle toRequestDataBundle$credentials_release(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        $r5 = <androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.credentials.GetPublicKeyCredentialOption$Companion: android.os.Bundle toRequestDataBundle$credentials_release(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        specialinvoke r0.<androidx.credentials.CredentialOption: void <init>(java.lang.String,android.os.Bundle,android.os.Bundle,boolean,boolean)>("androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL", $r4, $r6, 0, 1);

        r0.<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String requestJson> = r1;

        r0.<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String clientDataHash> = r2;

        r0.<androidx.credentials.GetPublicKeyCredentialOption: boolean preferImmediatelyAvailableCredentials> = z0;

        $r7 = r0.<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String requestJson>;

        $r8 = (java.lang.CharSequence) $r7;

        $i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r11 = "requestJson must not be empty";

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        java.lang.String r1, r3;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        boolean z0;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        specialinvoke r0.<androidx.credentials.GetPublicKeyCredentialOption: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r3, z0);

        return;
    }

    public final java.lang.String getRequestJson()
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        java.lang.String $r1;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        $r1 = r0.<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String requestJson>;

        return $r1;
    }

    public final java.lang.String getClientDataHash()
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        java.lang.String $r1;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        $r1 = r0.<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String clientDataHash>;

        return $r1;
    }

    public final boolean preferImmediatelyAvailableCredentials()
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        boolean $z0;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        $z0 = r0.<androidx.credentials.GetPublicKeyCredentialOption: boolean preferImmediatelyAvailableCredentials>;

        return $z0;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requestJson");

        specialinvoke r0.<androidx.credentials.GetPublicKeyCredentialOption: void <init>(java.lang.String,java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, 0, 4, null);

        return;
    }

    public void <init>(java.lang.String)
    {
        androidx.credentials.GetPublicKeyCredentialOption r0;
        java.lang.String r1;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requestJson");

        specialinvoke r0.<androidx.credentials.GetPublicKeyCredentialOption: void <init>(java.lang.String,java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 0, 6, null);

        return;
    }

    public static final android.os.Bundle toRequestDataBundle$credentials_release(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0;
        androidx.credentials.GetPublicKeyCredentialOption$Companion $r2;
        android.os.Bundle $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = <androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.GetPublicKeyCredentialOption$Companion: android.os.Bundle toRequestDataBundle$credentials_release(java.lang.String,java.lang.String,boolean)>(r0, r1, z0);

        return $r3;
    }

    public static final androidx.credentials.GetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.credentials.GetPublicKeyCredentialOption$Companion $r1;
        androidx.credentials.GetPublicKeyCredentialOption $r2;

        r0 := @parameter0: android.os.Bundle;

        $r1 = <androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.GetPublicKeyCredentialOption$Companion: androidx.credentials.GetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.credentials.GetPublicKeyCredentialOption$Companion $r0;

        $r0 = new androidx.credentials.GetPublicKeyCredentialOption$Companion;

        specialinvoke $r0.<androidx.credentials.GetPublicKeyCredentialOption$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion> = $r0;

        return;
    }

androidx.credentials.GetPublicKeyCredentialOption$Companion
    private void <init>()
    {
        androidx.credentials.GetPublicKeyCredentialOption$Companion r0;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.os.Bundle toRequestDataBundle$credentials_release(java.lang.String, java.lang.String, boolean)
    {
        androidx.credentials.GetPublicKeyCredentialOption$Companion r0;
        java.lang.String r1, r2;
        boolean z0;
        android.os.Bundle r3, $r4;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption$Companion;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requestJson");

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.credentials.BUNDLE_KEY_SUBTYPE", "androidx.credentials.BUNDLE_VALUE_SUBTYPE_GET_PUBLIC_KEY_CREDENTIAL_OPTION");

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.credentials.BUNDLE_KEY_REQUEST_JSON", r1);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.credentials.BUNDLE_KEY_CLIENT_DATA_HASH", r2);

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("androidx.credentials.BUNDLE_KEY_PREFER_IMMEDIATELY_AVAILABLE_CREDENTIALS", z0);

        return r3;
    }

    public final androidx.credentials.GetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle)
    {
        androidx.credentials.GetPublicKeyCredentialOption$Companion r0;
        android.os.Bundle r1;
        java.lang.String r2, r8;
        java.lang.Object r3;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Throwable $r6, r9, r12;
        androidx.credentials.GetPublicKeyCredentialOption r10;
        androidx.credentials.internal.FrameworkClassParsingException r11;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption$Companion;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

     label1:
        r8 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.credentials.BUNDLE_KEY_REQUEST_JSON");

        r2 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.credentials.BUNDLE_KEY_CLIENT_DATA_HASH");

        r3 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>("androidx.credentials.BUNDLE_KEY_PREFER_IMMEDIATELY_AVAILABLE_CREDENTIALS");

        r10 = new androidx.credentials.GetPublicKeyCredentialOption;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        $r5 = (java.lang.Boolean) r3;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        specialinvoke r10.<androidx.credentials.GetPublicKeyCredentialOption: void <init>(java.lang.String,java.lang.String,boolean)>(r8, r2, $z0);

        return r10;

     label2:
        $r6 := @caughtexception;

        r9 = $r6;

        r11 = new androidx.credentials.internal.FrameworkClassParsingException;

        specialinvoke r11.<androidx.credentials.internal.FrameworkClassParsingException: void <init>()>();

        r12 = (java.lang.Throwable) r11;

        throw r12;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.GetPublicKeyCredentialOption$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.GetPublicKeyCredentialOption$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.GetPublicKeyCredentialOption$Companion: void <init>()>();

        return;
    }

