androidx.wear.complications.datasource.SuspendingComplicationDataSourceService
<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService: kotlinx.coroutines.CoroutineScope scope>
    public void <init>()
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService r0;
        kotlinx.coroutines.CompletableJob $r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2, $r3;
        kotlin.coroutines.CoroutineContext $r4, $r5;
        kotlinx.coroutines.CoroutineScope $r6;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService;

        specialinvoke r0.<androidx.wear.complications.datasource.ComplicationDataSourceService: void <init>()>();

        $r1 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = virtualinvoke $r2.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r4 = (kotlin.coroutines.CoroutineContext) $r3;

        $r5 = interfaceinvoke $r1.<kotlinx.coroutines.CompletableJob: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r4);

        $r6 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r5);

        r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService: kotlinx.coroutines.CoroutineScope scope> = $r6;

        return;
    }

    public final void onComplicationRequest(androidx.wear.complications.datasource.ComplicationRequest, androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener)
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService r0;
        androidx.wear.complications.datasource.ComplicationRequest r1;
        androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener r2;
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1 $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        kotlin.jvm.functions.Function2 $r5;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService;

        r1 := @parameter0: androidx.wear.complications.datasource.ComplicationRequest;

        r2 := @parameter1: androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "listener");

        $r4 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService: kotlinx.coroutines.CoroutineScope scope>;

        $r3 = new androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        specialinvoke $r3.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: void <init>(androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener,androidx.wear.complications.datasource.SuspendingComplicationDataSourceService,androidx.wear.complications.datasource.ComplicationRequest,kotlin.coroutines.Continuation)>(r2, r0, r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r4, null, null, $r5, 3, null);

        return;
    }

<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService: java.lang.Object onComplicationRequest(androidx.wear.complications.datasource.ComplicationRequest,kotlin.coroutines.Continuation)>
    public void onDestroy()
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService;

        specialinvoke r0.<androidx.wear.complications.datasource.ComplicationDataSourceService: void onDestroy()>();

        $r1 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService: kotlinx.coroutines.CoroutineScope scope>;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1
<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: java.lang.Object L$0>
<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: int label>
<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener $listener>
<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService this$0>
<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationRequest $request>
    void <init>(androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener, androidx.wear.complications.datasource.SuspendingComplicationDataSourceService, androidx.wear.complications.datasource.ComplicationRequest, kotlin.coroutines.Continuation)
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1 r0;
        androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener $r1;
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService $r2;
        androidx.wear.complications.datasource.ComplicationRequest $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        $r1 := @parameter0: androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener;

        $r2 := @parameter1: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService;

        $r3 := @parameter2: androidx.wear.complications.datasource.ComplicationRequest;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener $listener> = $r1;

        r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService this$0> = $r2;

        r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationRequest $request> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1 r0;
        java.lang.Object $r1, r2, r3, $r4, $r12;
        int $i0;
        androidx.wear.complications.data.ComplicationData $r5;
        kotlin.Unit $r6;
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService $r7;
        androidx.wear.complications.datasource.ComplicationRequest $r8;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r10;
        androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener r11;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r11 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener $listener>;

        $r7 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService this$0>;

        $r8 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationRequest $request>;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: java.lang.Object L$0> = r11;

        r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: int label> = 1;

        $r12 = virtualinvoke $r7.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService: java.lang.Object onComplicationRequest(androidx.wear.complications.datasource.ComplicationRequest,kotlin.coroutines.Continuation)>($r8, $r9);

        if $r12 != r3 goto label3;

        return r3;

     label2:
        $r4 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: java.lang.Object L$0>;

        r11 = (androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r12 = $r1;

     label3:
        r2 = $r12;

        $r5 = (androidx.wear.complications.data.ComplicationData) r2;

        interfaceinvoke r11.<androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener: void onComplicationData(androidx.wear.complications.data.ComplicationData)>($r5);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.wear.complications.datasource.ComplicationRequest $r4;
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService $r5;
        androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener $r6;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        $r6 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener $listener>;

        $r5 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService this$0>;

        $r4 = r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: androidx.wear.complications.datasource.ComplicationRequest $request>;

        specialinvoke $r3.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: void <init>(androidx.wear.complications.datasource.ComplicationDataSourceService$ComplicationRequestListener,androidx.wear.complications.datasource.SuspendingComplicationDataSourceService,androidx.wear.complications.datasource.ComplicationRequest,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $r2);

        $r7 = (kotlin.coroutines.Continuation) $r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.complications.datasource.SuspendingComplicationDataSourceService$onComplicationRequest$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

