androidx.media3.extractor.flv.TagPayloadReader
<androidx.media3.extractor.flv.TagPayloadReader: androidx.media3.extractor.TrackOutput output>
    protected void <init>(androidx.media3.extractor.TrackOutput)
    {
        androidx.media3.extractor.flv.TagPayloadReader r0;
        androidx.media3.extractor.TrackOutput r1;

        r0 := @this: androidx.media3.extractor.flv.TagPayloadReader;

        r1 := @parameter0: androidx.media3.extractor.TrackOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.flv.TagPayloadReader: androidx.media3.extractor.TrackOutput output> = r1;

        return;
    }

<androidx.media3.extractor.flv.TagPayloadReader: void seek()>
    public final boolean consume(androidx.media3.common.util.ParsableByteArray, long) throws androidx.media3.common.ParserException
    {
        androidx.media3.extractor.flv.TagPayloadReader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        long l0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.extractor.flv.TagPayloadReader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        l0 := @parameter1: long;

        $z0 = virtualinvoke r0.<androidx.media3.extractor.flv.TagPayloadReader: boolean parseHeader(androidx.media3.common.util.ParsableByteArray)>(r1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.media3.extractor.flv.TagPayloadReader: boolean parsePayload(androidx.media3.common.util.ParsableByteArray,long)>(r1, l0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

<androidx.media3.extractor.flv.TagPayloadReader: boolean parseHeader(androidx.media3.common.util.ParsableByteArray)>
<androidx.media3.extractor.flv.TagPayloadReader: boolean parsePayload(androidx.media3.common.util.ParsableByteArray,long)>
androidx.media3.extractor.flv.TagPayloadReader$UnsupportedFormatException
    public void <init>(java.lang.String)
    {
        androidx.media3.extractor.flv.TagPayloadReader$UnsupportedFormatException r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.extractor.flv.TagPayloadReader$UnsupportedFormatException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.common.ParserException: void <init>(java.lang.String,java.lang.Throwable,boolean,int)>(r1, null, 0, 1);

        return;
    }

