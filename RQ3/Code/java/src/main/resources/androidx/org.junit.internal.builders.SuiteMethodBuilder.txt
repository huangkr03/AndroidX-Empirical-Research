org.junit.internal.builders.SuiteMethodBuilder
    public void <init>()
    {
        org.junit.internal.builders.SuiteMethodBuilder $r0;

        $r0 := @this: org.junit.internal.builders.SuiteMethodBuilder;

        specialinvoke $r0.<org.junit.runners.model.RunnerBuilder: void <init>()>();

        return;
    }

    public boolean hasSuiteMethod(java.lang.Class)
    {
        org.junit.internal.builders.SuiteMethodBuilder $r0;
        java.lang.Class $r1;
        java.lang.Class[] $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.junit.internal.builders.SuiteMethodBuilder;

        $r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.Class)[0];

     label1:
        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("suite", $r2);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public org.junit.runner.Runner runnerForClass(java.lang.Class) throws java.lang.Throwable
    {
        org.junit.internal.builders.SuiteMethodBuilder $r0;
        java.lang.Class $r1;
        boolean $z0;
        org.junit.internal.runners.SuiteMethod $r2;

        $r0 := @this: org.junit.internal.builders.SuiteMethodBuilder;

        $r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke $r0.<org.junit.internal.builders.SuiteMethodBuilder: boolean hasSuiteMethod(java.lang.Class)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new org.junit.internal.runners.SuiteMethod;

        specialinvoke $r2.<org.junit.internal.runners.SuiteMethod: void <init>(java.lang.Class)>($r1);

        return $r2;

     label1:
        return null;
    }

