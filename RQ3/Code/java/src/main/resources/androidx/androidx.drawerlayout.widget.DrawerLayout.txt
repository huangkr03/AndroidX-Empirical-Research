androidx.drawerlayout.widget.DrawerLayout
<androidx.drawerlayout.widget.DrawerLayout: java.lang.String TAG>
<androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS>
<androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE>
<androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING>
<androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING>
<androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED>
<androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED>
<androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN>
<androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED>
<androidx.drawerlayout.widget.DrawerLayout: int MIN_DRAWER_MARGIN>
<androidx.drawerlayout.widget.DrawerLayout: int DEFAULT_SCRIM_COLOR>
<androidx.drawerlayout.widget.DrawerLayout: int PEEK_DELAY>
<androidx.drawerlayout.widget.DrawerLayout: int MIN_FLING_VELOCITY>
<androidx.drawerlayout.widget.DrawerLayout: boolean ALLOW_EDGE_LOCK>
<androidx.drawerlayout.widget.DrawerLayout: boolean CHILDREN_DISALLOW_INTERCEPT>
<androidx.drawerlayout.widget.DrawerLayout: float TOUCH_SLOP_SENSITIVITY>
<androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS>
<androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>
<androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>
<androidx.drawerlayout.widget.DrawerLayout: java.lang.String ACCESSIBILITY_CLASS_NAME>
<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate>
<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>
<androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin>
<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor>
<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint>
<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>
<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>
<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>
<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>
<androidx.drawerlayout.widget.DrawerLayout: int mDrawerState>
<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout>
<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout>
<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>
<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>
<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>
<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>
<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch>
<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener>
<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>
<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX>
<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>
<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft>
<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight>
<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>
<androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>
<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>
<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>
<androidx.drawerlayout.widget.DrawerLayout: boolean sEdgeSizeUsingSystemGestureInsets>
<androidx.drawerlayout.widget.DrawerLayout: androidx.core.view.accessibility.AccessibilityViewCommand mActionDismiss>
    public void <init>(android.content.Context)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.content.Context r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.drawerlayout.R$attr: int drawerLayoutStyle>;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        float f0, f1, $f2, $f3, $f4, $f5;
        java.lang.Throwable r3, r4, $r30, $r31;
        android.content.res.Resources $r8, $r25;
        android.util.DisplayMetrics $r9;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback $r12, $r17, $r18, $r23, r38, r39;
        androidx.customview.widget.ViewDragHelper $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r22;
        boolean $z0, $z1;
        int[] $r28, $r33;
        android.graphics.drawable.Drawable $r29;
        android.content.res.TypedArray r32, r34;
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate r35;
        android.graphics.Paint r36;
        androidx.drawerlayout.widget.DrawerLayout$1 r37;
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate r40;
        androidx.drawerlayout.widget.DrawerLayout$2 r41;
        java.util.ArrayList r42;
        android.view.View r43, r44, r45;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r35 = new androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate;

        specialinvoke r35.<androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate: void <init>()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate> = r35;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor> = -1728053248;

        r36 = new android.graphics.Paint;

        specialinvoke r36.<android.graphics.Paint: void <init>()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint> = r36;

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 1;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft> = 3;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight> = 3;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart> = 3;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd> = 3;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart> = null;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd> = null;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft> = null;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight> = null;

        r37 = new androidx.drawerlayout.widget.DrawerLayout$1;

        specialinvoke r37.<androidx.drawerlayout.widget.DrawerLayout$1: void <init>(androidx.drawerlayout.widget.DrawerLayout)>(r0);

        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.core.view.accessibility.AccessibilityViewCommand mActionDismiss> = r37;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDescendantFocusability(int)>(262144);

        $r8 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r9.<android.util.DisplayMetrics: float density>;

        $f2 = 64.0F * f0;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin> = $i1;

        f1 = 400.0F * f0;

        r38 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback;

        specialinvoke r38.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void <init>(androidx.drawerlayout.widget.DrawerLayout,int)>(r0, 3);

        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback> = r38;

        r39 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback;

        specialinvoke r39.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void <init>(androidx.drawerlayout.widget.DrawerLayout,int)>(r0, 5);

        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback> = r39;

        $r12 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        $r13 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>(r0, 1.0F, $r12);

        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger> = $r13;

        $r14 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r14.<androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(1);

        $r15 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r15.<androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)>(f1);

        $r17 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        $r16 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r17.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void setDragger(androidx.customview.widget.ViewDragHelper)>($r16);

        $r18 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        $r19 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>(r0, 1.0F, $r18);

        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger> = $r19;

        $r20 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r20.<androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(2);

        $r21 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r21.<androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)>(f1);

        $r23 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        $r22 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r23.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void setDragger(androidx.customview.widget.ViewDragHelper)>($r22);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setFocusableInTouchMode(boolean)>(1);

        r43 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r43, 1);

        r40 = new androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        specialinvoke r40.<androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void <init>(androidx.drawerlayout.widget.DrawerLayout)>(r0);

        r44 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(r44, r40);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setMotionEventSplittingEnabled(boolean)>(0);

        r45 = (android.view.View) r0;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r45);

        if $z0 == 0 goto label07;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label06;

        r41 = new androidx.drawerlayout.widget.DrawerLayout$2;

        specialinvoke r41.<androidx.drawerlayout.widget.DrawerLayout$2: void <init>(androidx.drawerlayout.widget.DrawerLayout)>(r0);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>(r41);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setSystemUiVisibility(int)>(1280);

        $r28 = <androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS>;

        r32 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r28);

     label01:
        $r29 = virtualinvoke r32.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r29;

     label02:
        virtualinvoke r32.<android.content.res.TypedArray: void recycle()>();

        goto label05;

     label03:
        $r31 := @caughtexception;

        r3 = $r31;

     label04:
        virtualinvoke r32.<android.content.res.TypedArray: void recycle()>();

        throw r3;

     label05:
        goto label07;

     label06:
        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = null;

     label07:
        $r33 = <androidx.drawerlayout.R$styleable: int[] DrawerLayout>;

        r34 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r33, i0, 0);

     label08:
        $i5 = <androidx.drawerlayout.R$styleable: int DrawerLayout_elevation>;

        $z1 = virtualinvoke r34.<android.content.res.TypedArray: boolean hasValue(int)>($i5);

        if $z1 == 0 goto label09;

        $i3 = <androidx.drawerlayout.R$styleable: int DrawerLayout_elevation>;

        $f5 = virtualinvoke r34.<android.content.res.TypedArray: float getDimension(int,float)>($i3, 0.0F);

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation> = $f5;

        goto label10;

     label09:
        $r25 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.content.res.Resources getResources()>();

        $i2 = <androidx.drawerlayout.R$dimen: int def_drawer_elevation>;

        $f4 = virtualinvoke $r25.<android.content.res.Resources: float getDimension(int)>($i2);

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation> = $f4;

     label10:
        virtualinvoke r34.<android.content.res.TypedArray: void recycle()>();

        goto label13;

     label11:
        $r30 := @caughtexception;

        r4 = $r30;

     label12:
        virtualinvoke r34.<android.content.res.TypedArray: void recycle()>();

        throw r4;

     label13:
        r42 = new java.util.ArrayList;

        specialinvoke r42.<java.util.ArrayList: void <init>()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews> = r42;

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void setDrawerElevation(float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        float f0, $f1;
        android.view.View r1;
        int $i0, i1;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        f0 := @parameter0: float;

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation> = f0;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        if i1 >= $i0 goto label3;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 == 0 goto label2;

        $f1 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>(r1, $f1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public float getDrawerElevation()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;
        float $f0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $z0 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $z0 == 0 goto label1;

        $f0 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        return $f0;

     label1:
        return 0.0F;
    }

    public void setChildInsets(java.lang.Object, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets> = r1;

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground> = z0;

        if z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setWillNotDraw(boolean)>($z1);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void requestLayout()>();

        return;
    }

    public void setDrawerShadow(android.graphics.drawable.Drawable, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $z0 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i1 = i0 & 8388611;

        if $i1 != 8388611 goto label2;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart> = r1;

        goto label6;

     label2:
        $i2 = i0 & 8388613;

        if $i2 != 8388613 goto label3;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd> = r1;

        goto label6;

     label3:
        $i3 = i0 & 3;

        if $i3 != 3 goto label4;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft> = r1;

        goto label6;

     label4:
        $i4 = i0 & 5;

        if $i4 != 5 goto label5;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight> = r1;

        goto label6;

     label5:
        return;

     label6:
        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>();

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setDrawerShadow(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>($r2, i1);

        return;
    }

    public void setScrimColor(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor> = i0;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener r1, $r2, $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: androidx.drawerlayout.widget.DrawerLayout$DrawerListener;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener>;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>($r3);

     label1:
        if r1 == null goto label2;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>(r1);

     label2:
        r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener> = r1;

        return;
    }

    public void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: androidx.drawerlayout.widget.DrawerLayout$DrawerListener;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners> = $r4;

     label2:
        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: androidx.drawerlayout.widget.DrawerLayout$DrawerListener;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $r2 != null goto label2;

        return;

     label2:
        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setDrawerLockMode(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(i0, 3);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(i0, 5);

        return;
    }

    public void setDrawerLockMode(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, i2, $i3;
        android.view.View r1, r4, r5;
        androidx.customview.widget.ViewDragHelper $r2, r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 = (android.view.View) r0;

        $i3 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r5);

        i2 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(i1, $i3);

        lookupswitch(i1)
        {
            case 3: goto label01;
            case 5: goto label02;
            case 8388611: goto label03;
            case 8388613: goto label04;
            default: goto label05;
        };

     label01:
        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft> = i0;

        goto label05;

     label02:
        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight> = i0;

        goto label05;

     label03:
        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart> = i0;

        goto label05;

     label04:
        r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd> = i0;

     label05:
        if i0 == 0 goto label08;

        if i2 != 3 goto label06;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        goto label07;

     label06:
        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

     label07:
        r3 = $r2;

        virtualinvoke r3.<androidx.customview.widget.ViewDragHelper: void cancel()>();

     label08:
        lookupswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label09;
            default: goto label11;
        };

     label09:
        r4 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i2);

        if r4 == null goto label11;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)>(r4);

        goto label11;

     label10:
        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i2);

        if r1 == null goto label11;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)>(r1);

     label11:
        return;
    }

    public void setDrawerLockMode(int, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer with appropriate layout_gravity");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i1 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>(i0, i1);

        return;
    }

    public int getDrawerLockMode(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.view.View r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = (android.view.View) r0;

        i1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r1);

        lookupswitch(i0)
        {
            case 3: goto label01;
            case 5: goto label05;
            case 8388611: goto label09;
            case 8388613: goto label13;
            default: goto label17;
        };

     label01:
        $i12 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        if $i12 == 3 goto label02;

        $i13 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        return $i13;

     label02:
        if i1 != 0 goto label03;

        $i14 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        goto label04;

     label03:
        $i14 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

     label04:
        i2 = $i14;

        if i2 == 3 goto label17;

        return i2;

     label05:
        $i10 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        if $i10 == 3 goto label06;

        $i11 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        return $i11;

     label06:
        if i1 != 0 goto label07;

        $i15 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        goto label08;

     label07:
        $i15 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

     label08:
        i3 = $i15;

        if i3 == 3 goto label17;

        return i3;

     label09:
        $i8 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        if $i8 == 3 goto label10;

        $i9 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        return $i9;

     label10:
        if i1 != 0 goto label11;

        $i16 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        goto label12;

     label11:
        $i16 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

     label12:
        i4 = $i16;

        if i4 == 3 goto label17;

        return i4;

     label13:
        $i6 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        if $i6 == 3 goto label14;

        $i7 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        return $i7;

     label14:
        if i1 != 0 goto label15;

        $i17 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        goto label16;

     label15:
        $i17 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

     label16:
        i5 = $i17;

        if i5 == 3 goto label17;

        return i5;

     label17:
        return 0;
    }

    public int getDrawerLockMode(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, $i1;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        $i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)>(i0);

        return $i1;
    }

    public void setDrawerTitle(int, java.lang.CharSequence)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, $i2;
        java.lang.CharSequence r1;
        android.view.View r2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        r2 = (android.view.View) r0;

        $i2 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r2);

        i1 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        if i1 != 3 goto label1;

        r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft> = r1;

        goto label2;

     label1:
        if i1 != 5 goto label2;

        r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight> = r1;

     label2:
        return;
    }

    public java.lang.CharSequence getDrawerTitle(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, $i2;
        java.lang.CharSequence $r1, $r2;
        android.view.View r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r3 = (android.view.View) r0;

        $i2 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r3);

        i1 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        if i1 != 3 goto label1;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft>;

        return $r2;

     label1:
        if i1 != 5 goto label2;

        $r1 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight>;

        return $r1;

     label2:
        return null;
    }

    private boolean isInBoundsOfChild(float, float, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        float f0, f1;
        android.view.View r1;
        android.graphics.Rect $r2, $r3, $r4, $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: android.view.View;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>;

        if $r2 != null goto label1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect> = $r5;

     label1:
        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>;

        virtualinvoke r1.<android.view.View: void getHitRect(android.graphics.Rect)>($r3);

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect>;

        $i1 = (int) f0;

        $i0 = (int) f1;

        $z0 = virtualinvoke $r4.<android.graphics.Rect: boolean contains(int,int)>($i1, $i0);

        return $z0;
    }

    private boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent r1, r4;
        android.view.View r2;
        android.graphics.Matrix r3;
        float f0, $f1, $f2, f3;
        boolean $z0, z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.View;

        r3 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke r3.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label1;

        r4 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View)>(r1, r2);

        z1 = virtualinvoke r2.<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r4);

        virtualinvoke r4.<android.view.MotionEvent: void recycle()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getScrollX()>();

        $i1 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i2 = $i0 - $i1;

        f3 = (float) $i2;

        $i3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getScrollY()>();

        $i4 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i5 = $i3 - $i4;

        f0 = (float) $i5;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(f3, f0);

        z1 = virtualinvoke r2.<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        $f2 = neg f3;

        $f1 = neg f0;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f2, $f1);

     label2:
        return z1;
    }

    private android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent r1, r3;
        android.view.View r2;
        float f0, f1;
        android.graphics.Matrix r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getScrollX()>();

        $i1 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i2 = $i0 - $i1;

        f0 = (float) $i2;

        $i3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getScrollY()>();

        $i4 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i5 = $i3 - $i4;

        f1 = (float) $i5;

        r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        virtualinvoke r3.<android.view.MotionEvent: void offsetLocation(float,float)>(f0, f1);

        r4 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke r4.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>;

        if $r5 != null goto label1;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix> = $r8;

     label1:
        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>;

        virtualinvoke r4.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>($r6);

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix>;

        virtualinvoke r3.<android.view.MotionEvent: void transform(android.graphics.Matrix)>($r7);

     label2:
        return r3;
    }

    void updateDrawerState(int, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, i2, $i6, i7, i8;
        android.view.View r1;
        androidx.customview.widget.ViewDragHelper $r2, $r3;
        java.util.List $r4, $r5, $r6;
        java.lang.Object $r7;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r8;
        android.view.ViewGroup$LayoutParams $r9;
        float $f0, $f1;
        byte $b3, $b4, b5;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r10;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        i1 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper: int getViewDragState()>();

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        i2 = virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper: int getViewDragState()>();

        if i1 == 1 goto label1;

        if i2 != 1 goto label2;

     label1:
        b5 = 1;

        goto label5;

     label2:
        if i1 == 2 goto label3;

        if i2 != 2 goto label4;

     label3:
        b5 = 2;

        goto label5;

     label4:
        b5 = 0;

     label5:
        if r1 == null goto label7;

        if i0 != 0 goto label7;

        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r10 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r9;

        $f0 = r10.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 != 0 goto label6;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)>(r1);

        goto label7;

     label6:
        $f1 = r10.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b4 = $f1 cmpl 1.0F;

        if $b4 != 0 goto label7;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)>(r1);

     label7:
        $i6 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mDrawerState>;

        if b5 == $i6 goto label9;

        r0.<androidx.drawerlayout.widget.DrawerLayout: int mDrawerState> = b5;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $r4 == null goto label9;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        i7 = interfaceinvoke $r5.<java.util.List: int size()>();

        i8 = i7 - 1;

     label8:
        if i8 < 0 goto label9;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i8);

        $r8 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r7;

        interfaceinvoke $r8.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerStateChanged(int)>(b5);

        i8 = i8 + -1;

        goto label8;

     label9:
        return;
    }

    void dispatchOnDrawerClosed(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1, r9;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, i2, i3;
        java.util.List $r4, $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r8;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $i0 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label3;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 0;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        i3 = i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r7;

        interfaceinvoke $r8.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerClosed(android.view.View)>(r1);

        i3 = i3 + -1;

        goto label1;

     label2:
        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)>(r1, 0);

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateChildAccessibilityAction(android.view.View)>(r1);

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean hasWindowFocus()>();

        if $z0 == 0 goto label3;

        r9 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getRootView()>();

        if r9 == null goto label3;

        virtualinvoke r9.<android.view.View: void sendAccessibilityEvent(int)>(32);

     label3:
        return;
    }

    void dispatchOnDrawerOpened(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        int i0, $i1, $i2, i3;
        android.view.ViewGroup$LayoutParams $r3;
        java.util.List $r4, $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r8;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $i1 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label3;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 1;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i3 = i0 - 1;

     label1:
        if i3 < 0 goto label2;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r7;

        interfaceinvoke $r8.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerOpened(android.view.View)>(r1);

        i3 = i3 + -1;

        goto label1;

     label2:
        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)>(r1, 1);

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateChildAccessibilityAction(android.view.View)>(r1);

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean hasWindowFocus()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void sendAccessibilityEvent(int)>(32);

     label3:
        return;
    }

    private void updateChildrenImportantForAccessibility(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1, r2;
        boolean z0, $z1;
        int i0, i1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        if z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r2);

        if $z1 == 0 goto label3;

     label2:
        if z0 == 0 goto label4;

        if r2 != r1 goto label4;

     label3:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r2, 1);

        goto label5;

     label4:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r2, 4);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }

    private void updateChildAccessibilityAction(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r2, $r4;
        int $i0, $i1;
        boolean $z0;
        androidx.core.view.accessibility.AccessibilityViewCommand $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS>;

        $i0 = virtualinvoke $r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        staticinvoke <androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)>(r1, $i0);

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r1);

        if $i1 == 2 goto label1;

        $r4 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS>;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.core.view.accessibility.AccessibilityViewCommand mActionDismiss>;

        staticinvoke <androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>(r1, $r4, null, $r3);

     label1:
        return;
    }

    void dispatchOnDrawerSlide(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        float f0;
        int i0, i1;
        java.util.List $r2, $r3, $r4;
        java.lang.Object $r5;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r6;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r5;

        interfaceinvoke $r6.<androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerSlide(android.view.View,float)>(r1, f0);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void setDrawerViewOffset(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        float f0, $f1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        byte $b0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $f1 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b0 = f0 cmpl $f1;

        if $b0 != 0 goto label1;

        return;

     label1:
        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen> = f0;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)>(r1, f0);

        return;
    }

    float getDrawerViewOffset(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;
        float $f0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $f0 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        return $f0;
    }

    int getDrawerViewAbsoluteGravity(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1, r4;
        int i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        r4 = (android.view.View) r0;

        $i1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r4);

        $i2 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i1);

        return $i2;
    }

    boolean checkDrawerViewAbsoluteGravity(android.view.View, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        $i2 = i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    android.view.View findOpenDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, $i1, $i2, i3;
        android.view.View r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i3);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $i1 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $i2 = $i1 & 1;

        if $i2 != 1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    void moveDrawerToOffset(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, i2, i3, $i4;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>(r1);

        i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $f2 = (float) i0;

        $f3 = $f2 * f1;

        i1 = (int) $f3;

        $f4 = (float) i0;

        $f5 = $f4 * f0;

        i2 = (int) $f5;

        i3 = i2 - i1;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z0 == 0 goto label1;

        $i4 = i3;

        goto label2;

     label1:
        $i4 = neg i3;

     label2:
        virtualinvoke r1.<android.view.View: void offsetLeftAndRight(int)>($i4);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>(r1, f0);

        return;
    }

    android.view.View findDrawerWithGravity(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        android.view.View r1, r2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r2 = (android.view.View) r0;

        $i4 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r2);

        $i5 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i4);

        i1 = $i5 & 7;

        i2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i7 = 0;

     label1:
        if i7 >= i2 goto label3;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i7);

        i3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        $i6 = i3 & 7;

        if $i6 != i1 goto label2;

        return r1;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return null;
    }

    static java.lang.String gravityToString(int)
    {
        int i0, $i1, $i2;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $i1 = i0 & 3;

        if $i1 != 3 goto label1;

        return "LEFT";

     label1:
        $i2 = i0 & 5;

        if $i2 != 5 goto label2;

        return "RIGHT";

     label2:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        return $r0;
    }

    protected void onDetachedFromWindow()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onAttachedToWindow()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, i46, $i47, $i48, $i49, $i50, i51, i52, $i53, i54;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, $z9, $z10, z11;
        android.view.View r1, r33, r34;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r15, $r17, $r18, $r19, $r20, r29, r31;
        java.lang.String $r12, $r16, $r21;
        float $f0, $f1, $f2;
        byte $b19;
        java.lang.Object $r22, $r23, $r25;
        android.view.WindowInsets r26, r27;
        java.lang.IllegalArgumentException r28;
        java.lang.IllegalStateException r30, r32;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i43 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i44 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i2 != 1073741824 goto label01;

        if i3 == 1073741824 goto label04;

     label01:
        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isInEditMode()>();

        if $z1 == 0 goto label03;

        if i2 != 0 goto label02;

        i43 = 300;

     label02:
        if i3 != 0 goto label04;

        i44 = 300;

        goto label04;

     label03:
        r28 = new java.lang.IllegalArgumentException;

        specialinvoke r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DrawerLayout must be measured with MeasureSpec.EXACTLY.");

        throw r28;

     label04:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setMeasuredDimension(int,int)>(i43, i44);

        $r25 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        if $r25 == null goto label05;

        r33 = (android.view.View) r0;

        $z5 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r33);

        if $z5 == 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z0 = $z6;

        r34 = (android.view.View) r0;

        i4 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r34);

        z7 = 0;

        z8 = 0;

        i5 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i45 = 0;

     label07:
        if i45 >= i5 goto label26;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i45);

        $i8 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i8 != 8 goto label08;

        goto label25;

     label08:
        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r4;

        if z0 == 0 goto label14;

        $i28 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        i46 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i28, i4);

        $z4 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r1);

        if $z4 == 0 goto label11;

        $i36 = <android.os.Build$VERSION: int SDK_INT>;

        if $i36 < 21 goto label14;

        $r23 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        r26 = (android.view.WindowInsets) $r23;

        if i46 != 3 goto label09;

        $i40 = virtualinvoke r26.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $i41 = virtualinvoke r26.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i42 = virtualinvoke r26.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r26 = virtualinvoke r26.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($i40, $i41, 0, $i42);

        goto label10;

     label09:
        if i46 != 5 goto label10;

        $i37 = virtualinvoke r26.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i38 = virtualinvoke r26.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $i39 = virtualinvoke r26.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r26 = virtualinvoke r26.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>(0, $i37, $i38, $i39);

     label10:
        virtualinvoke r1.<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>(r26);

        goto label14;

     label11:
        $i29 = <android.os.Build$VERSION: int SDK_INT>;

        if $i29 < 21 goto label14;

        $r22 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        r27 = (android.view.WindowInsets) $r22;

        if i46 != 3 goto label12;

        $i33 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $i34 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i35 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r27 = virtualinvoke r27.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($i33, $i34, 0, $i35);

        goto label13;

     label12:
        if i46 != 5 goto label13;

        $i30 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i31 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $i32 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r27 = virtualinvoke r27.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>(0, $i30, $i31, $i32);

     label13:
        $i47 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin> = $i47;

        $i48 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin> = $i48;

        $i49 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int rightMargin> = $i49;

        $i50 = virtualinvoke r27.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin> = $i50;

     label14:
        $z9 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>(r1);

        if $z9 == 0 goto label15;

        $i20 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i22 = i43 - $i20;

        $i21 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int rightMargin>;

        $i23 = $i22 - $i21;

        i51 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i23, 1073741824);

        $i24 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i26 = i44 - $i24;

        $i25 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i27 = $i26 - $i25;

        i52 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i27, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i51, i52);

        goto label25;

     label15:
        $z2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z2 == 0 goto label24;

        $z3 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $z3 == 0 goto label16;

        $f0 = staticinvoke <androidx.core.view.ViewCompat: float getElevation(android.view.View)>(r1);

        $f1 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        $b19 = $f0 cmpl $f1;

        if $b19 == 0 goto label16;

        $f2 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation>;

        staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>(r1, $f2);

     label16:
        $i53 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        i54 = $i53 & 7;

        if i54 != 3 goto label17;

        $z10 = 1;

        goto label18;

     label17:
        $z10 = 0;

     label18:
        z11 = $z10;

        if z11 == 0 goto label19;

        if z7 != 0 goto label20;

     label19:
        if z11 != 0 goto label21;

        if z8 == 0 goto label21;

     label20:
        r30 = new java.lang.IllegalStateException;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child drawer has absolute gravity ");

        $r16 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)>(i54);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrawerLayout");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already has a drawer view along that edge");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw r30;

     label21:
        if z11 == 0 goto label22;

        z7 = 1;

        goto label23;

     label22:
        z8 = 1;

     label23:
        $i10 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin>;

        $i9 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i12 = $i10 + $i9;

        $i11 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int rightMargin>;

        $i14 = $i12 + $i11;

        $i13 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int width>;

        i6 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: int getChildMeasureSpec(int,int,int)>(i0, $i14, $i13);

        $i16 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i15 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i18 = $i16 + $i15;

        $i17 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int height>;

        i7 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: int getChildMeasureSpec(int,int,int)>(i1, $i18, $i17);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i6, i7);

        goto label25;

     label24:
        r32 = new java.lang.IllegalStateException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a valid layout_gravity - must be Gravity.LEFT, Gravity.RIGHT or Gravity.NO_GRAVITY");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw r32;

     label25:
        i45 = i45 + 1;

        goto label07;

     label26:
        return;
    }

    private void resolveShadowDrawables()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $z0 = <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved> = $r1;

        $r2 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveRightShadow()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved> = $r2;

        return;
    }

    private android.graphics.drawable.Drawable resolveLeftShadow()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        android.view.View r8;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r8 = (android.view.View) r0;

        i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r8);

        if i0 != 0 goto label1;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void mirror(android.graphics.drawable.Drawable,int)>($r6, i0);

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        return $r7;

     label1:
        $r1 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        if $r1 == null goto label2;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void mirror(android.graphics.drawable.Drawable,int)>($r3, i0);

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        return $r4;

     label2:
        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        return $r2;
    }

    private android.graphics.drawable.Drawable resolveRightShadow()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        android.view.View r8;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r8 = (android.view.View) r0;

        i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r8);

        if i0 != 0 goto label1;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void mirror(android.graphics.drawable.Drawable,int)>($r6, i0);

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd>;

        return $r7;

     label1:
        $r1 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        if $r1 == null goto label2;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void mirror(android.graphics.drawable.Drawable,int)>($r3, i0);

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart>;

        return $r4;

     label2:
        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        return $r2;
    }

    private void mirror(android.graphics.drawable.Drawable, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r1;
        int i0;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>(r1, i0);

     label1:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, i53, i54, i55, $i56, $i57;
        androidx.customview.widget.ViewDragHelper $r1, $r2, $r3, $r4;
        android.view.ViewGroup$LayoutParams $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;
        byte $b18, $b27, $b58, b59;
        android.view.View r6;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r7;
        android.view.WindowInsets r8;
        androidx.core.view.WindowInsetsCompat r9;
        androidx.core.graphics.Insets r10;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout> = 1;

        i4 = i2 - i0;

        i5 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i51 = 0;

     label01:
        if i51 >= i5 goto label18;

        r6 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i51);

        $i15 = virtualinvoke r6.<android.view.View: int getVisibility()>();

        if $i15 != 8 goto label02;

        goto label17;

     label02:
        $r5 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r5;

        $z3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>(r6);

        if $z3 == 0 goto label03;

        $i43 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i44 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i45 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i46 = virtualinvoke r6.<android.view.View: int getMeasuredWidth()>();

        $i47 = $i45 + $i46;

        $i48 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i49 = virtualinvoke r6.<android.view.View: int getMeasuredHeight()>();

        $i50 = $i48 + $i49;

        virtualinvoke r6.<android.view.View: void layout(int,int,int,int)>($i43, $i44, $i47, $i50);

        goto label17;

     label03:
        i6 = virtualinvoke r6.<android.view.View: int getMeasuredWidth()>();

        i7 = virtualinvoke r6.<android.view.View: int getMeasuredHeight()>();

        $z4 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r6, 3);

        if $z4 == 0 goto label04;

        $i41 = neg i6;

        $f8 = (float) i6;

        $f7 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $f9 = $f8 * $f7;

        $i40 = (int) $f9;

        i52 = $i41 + $i40;

        $i42 = i6 + i52;

        $f11 = (float) $i42;

        $f10 = (float) i6;

        f12 = $f11 / $f10;

        goto label05;

     label04:
        $f1 = (float) i6;

        $f0 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $f2 = $f1 * $f0;

        $i16 = (int) $f2;

        i52 = i4 - $i16;

        $i17 = i4 - i52;

        $f4 = (float) $i17;

        $f3 = (float) i6;

        f12 = $f4 / $f3;

     label05:
        $f5 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b18 = f12 cmpl $f5;

        if $b18 == 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        z1 = $z5;

        $i19 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        i8 = $i19 & 112;

        lookupswitch(i8)
        {
            case 16: goto label10;
            case 48: goto label08;
            case 80: goto label09;
            default: goto label08;
        };

     label08:
        $i39 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i38 = i52 + i6;

        $i36 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i37 = $i36 + i7;

        virtualinvoke r6.<android.view.View: void layout(int,int,int,int)>(i52, $i39, $i38, $i37);

        goto label13;

     label09:
        i53 = i3 - i1;

        $i20 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i21 = i53 - $i20;

        $i22 = virtualinvoke r6.<android.view.View: int getMeasuredHeight()>();

        $i26 = $i21 - $i22;

        $i25 = i52 + i6;

        $i23 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i24 = i53 - $i23;

        virtualinvoke r6.<android.view.View: void layout(int,int,int,int)>(i52, $i26, $i25, $i24);

        goto label13;

     label10:
        i54 = i3 - i1;

        $i29 = i54 - i7;

        i55 = $i29 / 2;

        $i30 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        if i55 >= $i30 goto label11;

        i55 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int topMargin>;

        goto label12;

     label11:
        $i33 = i55 + i7;

        $i31 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i32 = i54 - $i31;

        if $i33 <= $i32 goto label12;

        $i34 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i35 = i54 - $i34;

        i55 = $i35 - i7;

     label12:
        $i56 = i52 + i6;

        $i57 = i55 + i7;

        virtualinvoke r6.<android.view.View: void layout(int,int,int,int)>(i52, i55, $i56, $i57);

        goto label13;

     label13:
        if z1 == 0 goto label14;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>(r6, f12);

     label14:
        $f6 = r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b27 = $f6 cmpl 0.0F;

        if $b27 <= 0 goto label15;

        $b58 = 0;

        goto label16;

     label15:
        $b58 = 4;

     label16:
        b59 = $b58;

        $i28 = virtualinvoke r6.<android.view.View: int getVisibility()>();

        if $i28 == b59 goto label17;

        virtualinvoke r6.<android.view.View: void setVisibility(int)>(b59);

     label17:
        i51 = i51 + 1;

        goto label01;

     label18:
        $z2 = <androidx.drawerlayout.widget.DrawerLayout: boolean sEdgeSizeUsingSystemGestureInsets>;

        if $z2 == 0 goto label19;

        r8 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.WindowInsets getRootWindowInsets()>();

        if r8 == null goto label19;

        r9 = staticinvoke <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)>(r8);

        r10 = virtualinvoke r9.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getSystemGestureInsets()>();

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $r1 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $i9 = virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper: int getDefaultEdgeSize()>();

        $i10 = r10.<androidx.core.graphics.Insets: int left>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i10);

        virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper: void setEdgeSize(int)>($i11);

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $i12 = virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper: int getDefaultEdgeSize()>();

        $i13 = r10.<androidx.core.graphics.Insets: int right>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13);

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: void setEdgeSize(int)>($i14);

     label19:
        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout> = 0;

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout> = 0;

        return;
    }

    public void requestLayout()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $z0 = r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void computeScroll()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1;
        androidx.customview.widget.ViewDragHelper $r1, $r2;
        android.view.View $r3, r6;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r5;
        float f0, f1;
        boolean z0, z1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        f0 = 0.0F;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r4;

        f1 = $r5.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity> = f0;

        $r1 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        z0 = virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        z1 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        if z0 != 0 goto label3;

        if z1 == 0 goto label4;

     label3:
        r6 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r6);

     label4:
        return;
    }

    private static boolean hasOpaqueBackground(android.view.View)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = r1;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $r1 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        return $r1;
    }

    public void setStatusBarBackground(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r3;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setStatusBarBackgroundColor(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>(i0);

        r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r1;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>();

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.Canvas r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3, $r4;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5, $r6;
        android.view.WindowInsets $r7;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $z0 = r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground>;

        if $z0 == 0 goto label5;

        $r2 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == null goto label5;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        if $r5 == null goto label1;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets>;

        $r7 = (android.view.WindowInsets) $r6;

        $i2 = virtualinvoke $r7.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        i3 = $i2;

        goto label4;

     label3:
        i3 = 0;

     label4:
        if i3 <= 0 goto label5;

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, i3);

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label5:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.Canvas r1;
        android.view.View r2, r17;
        long l0;
        int i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37;
        boolean z0, $z1, $z2, $z4, $z5, $z6, z7;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18;
        byte $b3;
        android.graphics.drawable.Drawable $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14;
        androidx.customview.widget.ViewDragHelper $r6, $r11;
        android.graphics.Paint $r15, $r16;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getHeight()>();

        z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>(r2);

        i22 = 0;

        i23 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        i2 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        if z0 == 0 goto label07;

        i24 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i25 = 0;

     label01:
        if i25 >= i24 goto label06;

        r17 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i25);

        if r17 == r2 goto label05;

        $i20 = virtualinvoke r17.<android.view.View: int getVisibility()>();

        if $i20 != 0 goto label05;

        $z4 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: boolean hasOpaqueBackground(android.view.View)>(r17);

        if $z4 == 0 goto label05;

        $z5 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r17);

        if $z5 == 0 goto label05;

        $i21 = virtualinvoke r17.<android.view.View: int getHeight()>();

        if $i21 >= i1 goto label02;

        goto label05;

     label02:
        $z6 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r17, 3);

        if $z6 == 0 goto label04;

        i26 = virtualinvoke r17.<android.view.View: int getRight()>();

        if i26 <= i22 goto label03;

        i22 = i26;

     label03:
        goto label05;

     label04:
        i27 = virtualinvoke r17.<android.view.View: int getLeft()>();

        if i27 >= i23 goto label05;

        i23 = i27;

     label05:
        i25 = i25 + 1;

        goto label01;

     label06:
        $i19 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getHeight()>();

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i22, 0, i23, $i19);

     label07:
        z7 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

        $f1 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        $b3 = $f1 cmpl 0.0F;

        if $b3 <= 0 goto label08;

        if z0 == 0 goto label08;

        $i13 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor>;

        $i14 = $i13 & -16777216;

        i28 = $i14 >>> 24;

        $f13 = (float) i28;

        $f12 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        $f14 = $f13 * $f12;

        i29 = (int) $f14;

        $i17 = i29 << 24;

        $i15 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mScrimColor>;

        $i16 = $i15 & 16777215;

        i30 = $i17 | $i16;

        $r15 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>(i30);

        $f15 = (float) i22;

        $f16 = (float) i23;

        $i18 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getHeight()>();

        $f17 = (float) $i18;

        $r16 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f15, 0.0F, $f16, $f17, $r16);

        goto label10;

     label08:
        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        if $r3 == null goto label09;

        $z2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r2, 3);

        if $z2 == 0 goto label09;

        $r10 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        i31 = virtualinvoke $r10.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i32 = virtualinvoke r2.<android.view.View: int getRight()>();

        $r11 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        i33 = virtualinvoke $r11.<androidx.customview.widget.ViewDragHelper: int getEdgeSize()>();

        $f8 = (float) i32;

        $f7 = (float) i33;

        $f9 = $f8 / $f7;

        $f10 = staticinvoke <java.lang.Math: float min(float,float)>($f9, 1.0F);

        f18 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f10);

        $r12 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        $i9 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i10 = i32 + i31;

        $i11 = virtualinvoke r2.<android.view.View: int getBottom()>();

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i32, $i9, $i10, $i11);

        $r13 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        $f11 = 255.0F * f18;

        $i12 = (int) $f11;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void setAlpha(int)>($i12);

        $r14 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved>;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label10;

     label09:
        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        if $r4 == null goto label10;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r2, 5);

        if $z1 == 0 goto label10;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        i34 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i35 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        i36 = $i4 - i35;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        i37 = virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper: int getEdgeSize()>();

        $f3 = (float) i36;

        $f2 = (float) i37;

        $f4 = $f3 / $f2;

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f4, 1.0F);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f5);

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        $i5 = i35 - i34;

        $i6 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i7 = virtualinvoke r2.<android.view.View: int getBottom()>();

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i5, $i6, i35, $i7);

        $r8 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        $f6 = 255.0F * f0;

        $i8 = (int) $f6;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>($i8);

        $r9 = r0.<androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label10:
        return z7;
    }

    boolean isContentView(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $i0 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isDrawerView(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        $i2 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r1);

        i1 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        $i3 = i1 & 3;

        if $i3 == 0 goto label1;

        return 1;

     label1:
        $i4 = i1 & 5;

        if $i4 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent r1;
        int i0, $i2, $i3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        float f0, f1, $f2;
        android.view.View r2;
        androidx.customview.widget.ViewDragHelper $r3, $r4, $r5, $r8;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback $r6, $r7;
        byte $b1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $z1 = virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $z2 = virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        z0 = $z1 | $z2;

        z7 = 0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX> = f0;

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY> = f1;

        $f2 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        $b1 = $f2 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        $r8 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $i3 = (int) f0;

        $i2 = (int) f1;

        r2 = virtualinvoke $r8.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3, $i2);

        if r2 == null goto label2;

        $z6 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>(r2);

        if $z6 == 0 goto label2;

        z7 = 1;

     label2:
        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        goto label5;

     label3:
        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $z3 = virtualinvoke $r5.<androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)>(3);

        if $z3 == 0 goto label5;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        virtualinvoke $r6.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        virtualinvoke $r7.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        goto label5;

     label4:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(1);

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

     label5:
        if z0 != 0 goto label6;

        if z7 != 0 goto label6;

        $z4 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean hasPeekingDrawer()>();

        if $z4 != 0 goto label6;

        $z5 = r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch>;

        if $z5 == 0 goto label7;

     label6:
        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        return $z8;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, i5;
        float f0, f1, $f2;
        android.view.View r2;
        byte $b4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i2 = $i1 & 2;

        if $i2 == 0 goto label1;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i3 == 10 goto label1;

        $f2 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity>;

        $b4 = $f2 cmpg 0.0F;

        if $b4 > 0 goto label2;

     label1:
        $z3 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z3;

     label2:
        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        if i0 == 0 goto label6;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i5 = i0 - 1;

     label3:
        if i5 < 0 goto label6;

        r2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i5);

        $z0 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isInBoundsOfChild(float,float,android.view.View)>(f0, f1, r2);

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>(r2);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $z2 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)>(r1, r2);

        if $z2 == 0 goto label5;

        return 1;

     label5:
        i5 = i5 + -1;

        goto label3;

     label6:
        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        android.view.View r2, r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;
        androidx.customview.widget.ViewDragHelper $r4, $r5, $r6, $r7;
        boolean $z0, z1, $z2;
        byte $b6;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r5.<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i2 = i0 & 255;

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label7;
            case 3: goto label6;
            default: goto label7;
        };

     label1:
        f8 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f9 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX> = f8;

        r0.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY> = f9;

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        goto label7;

     label2:
        f10 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f11 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        z1 = 1;

        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $i4 = (int) f10;

        $i3 = (int) f11;

        r2 = virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i4, $i3);

        if r2 == null goto label5;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)>(r2);

        if $z0 == 0 goto label5;

        $f2 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX>;

        f0 = f10 - $f2;

        $f3 = r0.<androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY>;

        f1 = f11 - $f3;

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        i1 = virtualinvoke $r7.<androidx.customview.widget.ViewDragHelper: int getTouchSlop()>();

        $f5 = f0 * f0;

        $f4 = f1 * f1;

        $f7 = $f5 + $f4;

        $i5 = i1 * i1;

        $f6 = (float) $i5;

        $b6 = $f7 cmpg $f6;

        if $b6 >= 0 goto label5;

        r3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()>();

        if r3 == null goto label5;

        $i7 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r3);

        if $i7 != 2 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;

     label5:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(z1);

        goto label7;

     label6:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(1);

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

     label7:
        return 1;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(1);

     label1:
        return;
    }

    public void closeDrawers()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)>(0);

        return;
    }

    void closeDrawers(boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        android.view.View r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback $r3, $r4;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.customview.widget.ViewDragHelper $r6, $r7;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        z0 := @parameter0: boolean;

        z6 = 0;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label6;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i6);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r5;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z1 == 0 goto label5;

        if z0 == 0 goto label2;

        $z5 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking>;

        if $z5 != 0 goto label2;

        goto label5;

     label2:
        i1 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $z2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z2 == 0 goto label3;

        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $i4 = neg i1;

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        $z4 = virtualinvoke $r7.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i4, $i5);

        z6 = z6 | $z4;

        goto label4;

     label3:
        $r6 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $i2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        $z3 = virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i2, $i3);

        z6 = z6 | $z3;

     label4:
        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 0;

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        virtualinvoke $r3.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        virtualinvoke $r4.<androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        if z6 == 0 goto label7;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

     label7:
        return;
    }

    public void open()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)>(8388611);

        return;
    }

    public void openDrawer(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)>(r1, 1);

        return;
    }

    public void openDrawer(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        boolean z0, $z1, $z2, $z3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.customview.widget.ViewDragHelper $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sliding drawer");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $z2 = r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout>;

        if $z2 == 0 goto label2;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen> = 1.0F;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 1;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)>(r1, 1);

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateChildAccessibilityAction(android.view.View)>(r1);

        goto label5;

     label2:
        if z0 == 0 goto label4;

        $i0 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $i1 = $i0 | 2;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = $i1;

        $z3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z3 == 0 goto label3;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r5.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, 0, $i6);

        goto label5;

     label3:
        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $i2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        $i3 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i4, $i5);

        goto label5;

     label4:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)>(r1, 1.0F);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,android.view.View)>(0, r1);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

     label5:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void openDrawer(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)>(i0, 1);

        return;
    }

    public void openDrawer(int, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        boolean z0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No drawer view found with gravity ");

        $r5 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)>(r1, z0);

        return;
    }

    public void close()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)>(8388611);

        return;
    }

    public void closeDrawer(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)>(r1, 1);

        return;
    }

    public void closeDrawer(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        boolean z0, $z1, $z2, $z3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.customview.widget.ViewDragHelper $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sliding drawer");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $z2 = r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout>;

        if $z2 == 0 goto label2;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen> = 0.0F;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = 0;

        goto label5;

     label2:
        if z0 == 0 goto label4;

        $i0 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $i1 = $i0 | 4;

        r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState> = $i1;

        $z3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z3 == 0 goto label3;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger>;

        $i4 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i5 = neg $i4;

        $i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r5.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i5, $i6);

        goto label5;

     label3:
        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger>;

        $i2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getWidth()>();

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i2, $i3);

        goto label5;

     label4:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)>(r1, 0.0F);

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,android.view.View)>(0, r1);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(4);

     label5:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void closeDrawer(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)>(i0, 1);

        return;
    }

    public void closeDrawer(int, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        boolean z0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No drawer view found with gravity ");

        $r5 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)>(r1, z0);

        return;
    }

    public boolean isDrawerOpen(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $i0 = r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isOpen()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        return $z0;
    }

    public boolean isDrawerOpen(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public boolean isDrawerVisible(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;
        float $f0;
        byte $b0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $f0 = $r3.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isDrawerVisible(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>(r1);

        return $z0;

     label1:
        return 0;
    }

    private boolean hasPeekingDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        $z0 = r1.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        specialinvoke r2.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        r3 = (android.view.ViewGroup$LayoutParams) r2;

        return r3;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams r1, r9;
        boolean $z0, $z1;
        android.view.ViewGroup$MarginLayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r4, $r5, r6, r7, r8;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        if $z0 == 0 goto label1;

        r6 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r5 = r6;

        $r4 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) r1;

        specialinvoke r6.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams)>($r4);

        goto label3;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        r7 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r5 = r7;

        $r2 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke r7.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r2);

        goto label3;

     label2:
        r8 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r5 = r8;

        specialinvoke r8.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

     label3:
        r9 = (android.view.ViewGroup$LayoutParams) $r5;

        return r9;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.util.AttributeSet r1;
        android.content.Context $r3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams r5;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.util.AttributeSet;

        r4 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.content.Context getContext()>();

        specialinvoke r4.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        r5 = (android.view.ViewGroup$LayoutParams) r4;

        return r5;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.util.ArrayList r1, $r3, $r4, $r5, $r7;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;
        android.view.View r2, r8;
        java.lang.Object $r6;
        boolean $z0, $z2, z3;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDescendantFocusability()>();

        if $i3 != 393216 goto label1;

        return;

     label1:
        i2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        z3 = 0;

        i5 = 0;

     label2:
        if i5 >= i2 goto label5;

        r8 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i5);

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r8);

        if $z0 == 0 goto label3;

        $z2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)>(r8);

        if $z2 == 0 goto label4;

        z3 = 1;

        virtualinvoke r8.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, i1);

        goto label4;

     label3:
        $r7 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        if z3 != 0 goto label8;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        i6 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i7 = 0;

     label6:
        if i7 >= i6 goto label8;

        $r5 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r2 = (android.view.View) $r6;

        $i4 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i4 != 0 goto label7;

        virtualinvoke r2.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, i1);

     label7:
        i7 = i7 + 1;

        goto label6;

     label8:
        $r3 = r0.<androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        return;
    }

    private boolean hasVisibleDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    android.view.View findVisibleDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $z0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>(r1);

        if $z1 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    void cancelChildViewTouch()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        long l0;
        android.view.MotionEvent r1;
        int i1, i2;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        $z0 = r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch>;

        if $z0 != 0 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 3, 0.0F, 0.0F, 0);

        i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r2.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        r0.<androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 1;

     label3:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label1;

        $z1 = specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean hasVisibleDrawer()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        android.view.View r2;
        boolean $z0, $z1;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label4;

        r2 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if r2 == null goto label1;

        $i1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r2);

        if $i1 != 0 goto label1;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()>();

     label1:
        if r2 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.os.Parcelable r1, $r4;
        androidx.drawerlayout.widget.DrawerLayout$SavedState r2;
        android.view.View r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof androidx.drawerlayout.widget.DrawerLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (androidx.drawerlayout.widget.DrawerLayout$SavedState) r1;

        $r4 = virtualinvoke r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        $i0 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity>;

        if $i0 == 0 goto label2;

        $i8 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity>;

        r3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($i8);

        if r3 == null goto label2;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)>(r3);

     label2:
        $i9 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft>;

        if $i9 == 3 goto label3;

        $i7 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft>;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($i7, 3);

     label3:
        $i1 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight>;

        if $i1 == 3 goto label4;

        $i6 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight>;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($i6, 5);

     label4:
        $i2 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart>;

        if $i2 == 3 goto label5;

        $i5 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart>;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($i5, 8388611);

     label5:
        $i3 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd>;

        if $i3 == 3 goto label6;

        $i4 = r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd>;

        virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)>($i4, 8388613);

     label6:
        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.os.Parcelable r1, r8;
        androidx.drawerlayout.widget.DrawerLayout$SavedState r2, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.view.View r3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r4;
        boolean z0, z1, $z2, $z3;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        r7 = new androidx.drawerlayout.widget.DrawerLayout$SavedState;

        specialinvoke r7.<androidx.drawerlayout.widget.DrawerLayout$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = r7;

        i0 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: int getChildCount()>();

        i8 = 0;

     label1:
        if i8 >= i0 goto label8;

        r3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View getChildAt(int)>(i8);

        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r6;

        $i5 = r4.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        if $i5 != 1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $i6 = r4.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState>;

        if $i6 != 2 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z1 = $z3;

        if z0 != 0 goto label6;

        if z1 == 0 goto label7;

     label6:
        $i7 = r4.<androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity>;

        r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity> = $i7;

        goto label8;

     label7:
        i8 = i8 + 1;

        goto label1;

     label8:
        $i1 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft>;

        r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft> = $i1;

        $i2 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight>;

        r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight> = $i2;

        $i3 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart>;

        r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart> = $i3;

        $i4 = r0.<androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd>;

        r2.<androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd> = $i4;

        r8 = (android.os.Parcelable) r2;

        return r8;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.View r1, r3;
        int i0;
        android.view.ViewGroup$LayoutParams r2;
        boolean $z0, $z1;
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $r4;

        r0 := @this: androidx.drawerlayout.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        r3 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()>();

        if r3 != null goto label1;

        $z1 = virtualinvoke r0.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z1 == 0 goto label2;

     label1:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 4);

        goto label3;

     label2:
        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 1);

     label3:
        $z0 = <androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>;

        if $z0 != 0 goto label4;

        $r4 = r0.<androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate>;

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(r1, $r4);

     label4:
        return;
    }

    static boolean includeChildForAccessibility(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i0 == 4 goto label1;

        $i1 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i1 == 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        $r0 = newarray (int)[1];

        $r0[0] = 16843828;

        <androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842931;

        <androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS> = $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS> = $z0;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION> = $z1;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 29 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        <androidx.drawerlayout.widget.DrawerLayout: boolean sEdgeSizeUsingSystemGestureInsets> = $z2;

        return;
    }

