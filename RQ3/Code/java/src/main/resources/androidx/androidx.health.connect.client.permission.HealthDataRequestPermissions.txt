androidx.health.connect.client.permission.HealthDataRequestPermissions
<androidx.health.connect.client.permission.HealthDataRequestPermissions: java.lang.String providerPackageName>
    public void <init>(java.lang.String)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        java.lang.String r1;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "providerPackageName");

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: java.lang.String providerPackageName> = r1;

        return;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.String r2;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = "com.google.android.apps.healthdata";

     label1:
        specialinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: void <init>(java.lang.String)>(r2);

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.util.Set)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        android.content.Context r1;
        java.util.Set r2;
        java.util.ArrayList r3, $r11;
        java.util.Collection $r5, $r12, $r13;
        boolean $z1, $z2, $z4;
        java.lang.Iterable $r6;
        kotlin.sequences.Sequence $r7, $r10;
        androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 $r8;
        kotlin.jvm.functions.Function1 $r9;
        android.content.Intent $r14;
        java.lang.String $r16, $r18, $r21, $r22;
        java.lang.CharSequence $r17;
        int $i0;
        java.lang.IllegalArgumentException $r20;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r5 = (java.util.Collection) r2;

        $z1 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $r22 = "At least one permission is required!";

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label3:
        $r6 = (java.lang.Iterable) r2;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r6);

        $r8 = <androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1: androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r10 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r7, $r9);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = (java.util.Collection) $r11;

        $r13 = staticinvoke <kotlin.sequences.SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)>($r10, $r12);

        r3 = (java.util.ArrayList) $r13;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("androidx.health.ACTION_REQUEST_PERMISSIONS");

        virtualinvoke $r14.<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>("requested_permissions_jetpack", r3);

        $r16 = r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: java.lang.String providerPackageName>;

        $r17 = (java.lang.CharSequence) $r16;

        $i0 = interfaceinvoke $r17.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        if $z4 == 0 goto label6;

        $r18 = r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: java.lang.String providerPackageName>;

        virtualinvoke $r14.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r18);

     label6:
        return $r14;
    }

    public java.util.Set parseResult(int, android.content.Intent)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        int i0;
        android.content.Intent r1;
        java.util.ArrayList r2;
        kotlin.sequences.Sequence r3, r4;
        java.util.Set r5, $r9;
        java.lang.Iterable $r6;
        androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 $r7;
        kotlin.jvm.functions.Function1 $r8;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>("granted_permissions_jetpack");

        if r2 == null goto label1;

        $r6 = (java.lang.Iterable) r2;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r6);

        if r3 == null goto label1;

        $r7 = <androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1: androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 INSTANCE>;

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>(r3, $r8);

        if r4 == null goto label1;

        r5 = staticinvoke <kotlin.sequences.SequencesKt: java.util.Set toSet(kotlin.sequences.Sequence)>(r4);

        if r5 == null goto label1;

        $r9 = r5;

        goto label2;

     label1:
        $r9 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

     label2:
        return $r9;
    }

    public androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.util.Set)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        android.content.Context r1;
        java.util.Set r2;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public void <init>()
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        specialinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.util.Set $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Set) r2;

        $r4 = virtualinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: android.content.Intent createIntent(android.content.Context,java.util.Set)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        int i0;
        android.content.Intent r1;
        java.util.Set $r2;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: java.util.Set parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.util.Set $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Set) r2;

        $r4 = virtualinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.util.Set)>(r1, $r3);

        return $r4;
    }

androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1
<androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1: androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 INSTANCE>
    void <init>()
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 r0;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.health.platform.client.permission.Permission invoke(androidx.health.connect.client.permission.Permission)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 r0;
        androidx.health.connect.client.permission.Permission r1;
        androidx.health.platform.client.permission.Permission $r2;
        androidx.health.platform.client.proto.PermissionProto$Permission $r3;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1;

        r1 := @parameter0: androidx.health.connect.client.permission.Permission;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new androidx.health.platform.client.permission.Permission;

        $r3 = staticinvoke <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt: androidx.health.platform.client.proto.PermissionProto$Permission toProtoPermission(androidx.health.connect.client.permission.Permission)>(r1);

        specialinvoke $r2.<androidx.health.platform.client.permission.Permission: void <init>(androidx.health.platform.client.proto.PermissionProto$Permission)>($r3);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 r0;
        java.lang.Object r1;
        androidx.health.connect.client.permission.Permission $r2;
        androidx.health.platform.client.permission.Permission $r3;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.health.connect.client.permission.Permission) r1;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1: androidx.health.platform.client.permission.Permission invoke(androidx.health.connect.client.permission.Permission)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 $r0;

        $r0 = new androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1;

        specialinvoke $r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1: void <init>()>();

        <androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1: androidx.health.connect.client.permission.HealthDataRequestPermissions$createIntent$protoPermissionList$1 INSTANCE> = $r0;

        return;
    }

androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1
<androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1: androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 INSTANCE>
    void <init>()
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 r0;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.health.connect.client.permission.Permission invoke(androidx.health.platform.client.permission.Permission)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 r0;
        androidx.health.platform.client.permission.Permission r1;
        androidx.health.platform.client.proto.PermissionProto$Permission $r2;
        androidx.health.connect.client.permission.Permission $r3;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1;

        r1 := @parameter0: androidx.health.platform.client.permission.Permission;

        $r2 = virtualinvoke r1.<androidx.health.platform.client.permission.Permission: androidx.health.platform.client.proto.PermissionProto$Permission getProto()>();

        $r3 = staticinvoke <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt: androidx.health.connect.client.permission.Permission toJetpackPermission(androidx.health.platform.client.proto.PermissionProto$Permission)>($r2);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 r0;
        java.lang.Object r1;
        androidx.health.platform.client.permission.Permission $r2;
        androidx.health.connect.client.permission.Permission $r3;

        r0 := @this: androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.health.platform.client.permission.Permission) r1;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1: androidx.health.connect.client.permission.Permission invoke(androidx.health.platform.client.permission.Permission)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 $r0;

        $r0 = new androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1;

        specialinvoke $r0.<androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1: void <init>()>();

        <androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1: androidx.health.connect.client.permission.HealthDataRequestPermissions$parseResult$1 INSTANCE> = $r0;

        return;
    }

