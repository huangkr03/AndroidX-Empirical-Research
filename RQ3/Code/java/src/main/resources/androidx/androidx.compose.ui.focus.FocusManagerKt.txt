androidx.compose.ui.focus.FocusManagerKt
    private static final void updateProperties(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r3;
        androidx.compose.runtime.collection.MutableVector r1;
        int i0, i1;
        java.lang.Object[] r2, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: void refreshFocusProperties(androidx.compose.ui.focus.FocusModifier)>($r0);

        r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        i0 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = 0;

        $r4 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r4;

     label1:
        $r5 = r2[i1];

        r3 = (androidx.compose.ui.focus.FocusModifier) $r5;

        staticinvoke <androidx.compose.ui.focus.FocusManagerKt: void updateProperties(androidx.compose.ui.focus.FocusModifier)>(r3);

        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label2:
        return;
    }

    private static final androidx.compose.ui.focus.FocusModifier findActiveItem(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, $r3, $r8;
        androidx.compose.ui.focus.FocusStateImpl $r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5, $r6;
        kotlin.NoWhenBranchMatchedException $r7;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusManagerKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r8 = $r0;

        goto label6;

     label2:
        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getFocusedChild()>();

        if $r3 == null goto label3;

        $r8 = staticinvoke <androidx.compose.ui.focus.FocusManagerKt: androidx.compose.ui.focus.FocusModifier findActiveItem(androidx.compose.ui.focus.FocusModifier)>($r3);

        if $r8 != null goto label6;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = "no child";

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        $r8 = null;

        goto label6;

     label5:
        $r7 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r7.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r7;

     label6:
        return $r8;
    }

    public static final void access$updateProperties(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <androidx.compose.ui.focus.FocusManagerKt: void updateProperties(androidx.compose.ui.focus.FocusModifier)>($r0);

        return;
    }

    public static final androidx.compose.ui.focus.FocusModifier access$findActiveItem(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, $r1;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusManagerKt: androidx.compose.ui.focus.FocusModifier findActiveItem(androidx.compose.ui.focus.FocusModifier)>($r0);

        return $r1;
    }

