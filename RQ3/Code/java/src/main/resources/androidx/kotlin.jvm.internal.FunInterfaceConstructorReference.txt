kotlin.jvm.internal.FunInterfaceConstructorReference
<kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface>
    public void <init>(java.lang.Class)
    {
        kotlin.jvm.internal.FunInterfaceConstructorReference $r0;
        java.lang.Class $r1;

        $r0 := @this: kotlin.jvm.internal.FunInterfaceConstructorReference;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<kotlin.jvm.internal.FunctionReference: void <init>(int)>(1);

        $r0.<kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface> = $r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.jvm.internal.FunInterfaceConstructorReference $r0, $r2;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Class $r3, $r4;

        $r0 := @this: kotlin.jvm.internal.FunInterfaceConstructorReference;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof kotlin.jvm.internal.FunInterfaceConstructorReference;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (kotlin.jvm.internal.FunInterfaceConstructorReference) $r1;

        $r3 = $r0.<kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface>;

        $r4 = $r2.<kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    protected volatile kotlin.reflect.KCallable getReflected()
    {
        kotlin.jvm.internal.FunInterfaceConstructorReference $r0;
        kotlin.reflect.KFunction $r1;

        $r0 := @this: kotlin.jvm.internal.FunInterfaceConstructorReference;

        $r1 = virtualinvoke $r0.<kotlin.jvm.internal.FunInterfaceConstructorReference: kotlin.reflect.KFunction getReflected()>();

        return $r1;
    }

    protected kotlin.reflect.KFunction getReflected()
    {
        kotlin.jvm.internal.FunInterfaceConstructorReference $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: kotlin.jvm.internal.FunInterfaceConstructorReference;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Functional interface constructor does not support reflection");

        throw $r1;
    }

    public int hashCode()
    {
        kotlin.jvm.internal.FunInterfaceConstructorReference $r0;
        int $i0;
        java.lang.Class $r1;

        $r0 := @this: kotlin.jvm.internal.FunInterfaceConstructorReference;

        $r1 = $r0.<kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlin.jvm.internal.FunInterfaceConstructorReference $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: kotlin.jvm.internal.FunInterfaceConstructorReference;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fun interface ");

        $r2 = $r0.<kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

