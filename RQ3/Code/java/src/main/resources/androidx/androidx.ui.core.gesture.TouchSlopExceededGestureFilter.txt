androidx.ui.core.gesture.TouchSlopExceededGestureFilter
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: float touchSlop>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function1 canDrag>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onTouchSlopExceeded>
    private void <init>(float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0, r1;
        float f0;
        boolean z0;
        java.util.Map r2;
        java.util.LinkedHashMap $r3;
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1 $r4;
        kotlin.jvm.functions.Function0 $r5;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: float touchSlop> = f0;

        r1 = r0;

        z0 = 0;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r2 = (java.util.Map) $r3;

        r1.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers> = r2;

        $r4 = new androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1;

        specialinvoke $r4.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1: void <init>()>();

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onTouchSlopExceeded> = $r5;

        return;
    }

    public final kotlin.jvm.functions.Function1 getCanDrag()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function1 canDrag>;

        return $r1;
    }

    public final void setCanDrag(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function1 canDrag> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnTouchSlopExceeded()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onTouchSlopExceeded>;

        return $r1;
    }

    public final void setOnTouchSlopExceeded(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onTouchSlopExceeded> = r1;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        java.util.List r1, $r10;
        androidx.ui.core.PointerEventPass r2, $r5, $r6, $r8, $r25, $r65;
        androidx.ui.unit.IntPxSize r3;
        long l0, l1, $l2, $l3, $l4, $l14, $l15;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        kotlin.jvm.functions.Function1 r4;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20, $z21, $z22, $z23, z28, $z30, z32, $z33, $z35, z40, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, z53, $z54, z55, $z56, $z58, $z59;
        java.util.Collection $r7, r48;
        java.util.ArrayList $r9;
        java.util.Map $r11, $r35, r43, $r45;
        androidx.ui.core.PointerId $r12, $r36, $r44;
        java.lang.Object $r13, $r20, $r22, $r28, $r29, $r31, $r37, r41, r50, r54, r72;
        byte $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b18;
        kotlin.jvm.functions.Function0 $r14;
        androidx.ui.core.Direction $r16, $r17, $r18, $r19, $r61, $r62, $r63, $r64;
        java.lang.Boolean $r21, $r23;
        androidx.ui.core.PointerInputData $r24;
        java.lang.Iterable $r26, $r39, $r52, $r70;
        java.util.Set $r27;
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData $r30, $r32, $r33, $r38, r56, r66, r67, r68, r69;
        java.util.Iterator $r40, r46, $r49, $r53, $r71;
        androidx.ui.core.PointerInputChange r42, $r51, r55, r73;
        java.util.Map$Entry r47;
        androidx.ui.unit.PxPosition r58;
        kotlin.jvm.internal.FloatCompanionObject $r59, r60;
        int i16, i17;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        $r5 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z1 == 0 goto label06;

        $r39 = (java.lang.Iterable) r1;

        $r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z19 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label04;

        r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r42 = (androidx.ui.core.PointerInputChange) r41;

        $z22 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r42);

        if $z22 == 0 goto label02;

        $r35 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers>;

        $l15 = virtualinvoke r42.<androidx.ui.core.PointerInputChange: long getId()>();

        $r36 = staticinvoke <androidx.ui.core.PointerId: androidx.ui.core.PointerId box-impl(long)>($l15);

        $r37 = interfaceinvoke $r35.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r36);

        $r38 = (androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData) $r37;

        goto label03;

     label02:
        $z23 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDownIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r42);

        if $z23 == 0 goto label03;

        r43 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers>;

        $l14 = virtualinvoke r42.<androidx.ui.core.PointerInputChange: long getId()>();

        $r44 = staticinvoke <androidx.ui.core.PointerId: androidx.ui.core.PointerId box-impl(long)>($l14);

        $r33 = new androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        specialinvoke $r33.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void <init>(float,float,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 0.0F, 0.0F, 15, null);

        interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r33);

     label03:
        goto label01;

     label04:
        $z20 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop>;

        if $z20 != 0 goto label06;

        $r45 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers>;

        z28 = 0;

        $r27 = interfaceinvoke $r45.<java.util.Map: java.util.Set entrySet()>();

        r46 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z21 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label06;

        $r28 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (java.util.Map$Entry) $r28;

        $r29 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData) $r29;

        virtualinvoke $r30.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDxForPass(float)>(0.0F);

        $r31 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData) $r31;

        virtualinvoke $r32.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDyForPass(float)>(0.0F);

        goto label05;

     label06:
        $z30 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop>;

        if $z30 != 0 goto label43;

        $r8 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z6 != 0 goto label07;

        $r25 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z18 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r25);

        if $z18 == 0 goto label43;

     label07:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r48 = (java.util.Collection) $r9;

        z32 = 0;

        $r26 = (java.lang.Iterable) r1;

        $r49 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z33 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z33 == 0 goto label11;

        r50 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        $r51 = (androidx.ui.core.PointerInputChange) r50;

        $r24 = virtualinvoke $r51.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $z15 = virtualinvoke $r24.<androidx.ui.core.PointerInputData: boolean getDown()>();

        if $z15 == 0 goto label09;

        $z17 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDownIgnoreConsumed(androidx.ui.core.PointerInputChange)>($r51);

        if $z17 != 0 goto label09;

        $z35 = 1;

        goto label10;

     label09:
        $z35 = 0;

     label10:
        if $z35 == 0 goto label08;

        interfaceinvoke r48.<java.util.Collection: boolean add(java.lang.Object)>(r50);

        goto label08;

     label11:
        $r10 = (java.util.List) r48;

        $r52 = (java.lang.Iterable) $r10;

        $r53 = interfaceinvoke $r52.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z7 = interfaceinvoke $r53.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label43;

        r54 = interfaceinvoke $r53.<java.util.Iterator: java.lang.Object next()>();

        r55 = (androidx.ui.core.PointerInputChange) r54;

        $z8 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop>;

        if $z8 != 0 goto label42;

        $r11 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers>;

        $l2 = virtualinvoke r55.<androidx.ui.core.PointerInputChange: long getId()>();

        $r12 = staticinvoke <androidx.ui.core.PointerId: androidx.ui.core.PointerId box-impl(long)>($l2);

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r56 = (androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData) $r13;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r56);

        r58 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.unit.PxPosition positionChange(androidx.ui.core.PointerInputChange)>(r55);

        l0 = virtualinvoke r58.<androidx.ui.unit.PxPosition: long getValue()>();

        $r59 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l3 = l0 >> 32;

        i16 = (int) $l3;

        z40 = 0;

        $f23 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i16);

        f0 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f23);

        l1 = virtualinvoke r58.<androidx.ui.unit.PxPosition: long getValue()>();

        r60 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l4 = l1 & 4294967295L;

        i17 = (int) $l4;

        $f24 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i17);

        $f25 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f24);

        $b5 = f0 cmpg 0.0F;

        if $b5 != 0 goto label13;

        $z45 = 1;

        goto label14;

     label13:
        $z45 = 0;

     label14:
        if $z45 == 0 goto label15;

        $r61 = (androidx.ui.core.Direction) null;

        goto label17;

     label15:
        $b6 = f0 cmpg 0.0F;

        if $b6 >= 0 goto label16;

        $r61 = <androidx.ui.core.Direction: androidx.ui.core.Direction LEFT>;

        goto label17;

     label16:
        $r61 = <androidx.ui.core.Direction: androidx.ui.core.Direction RIGHT>;

     label17:
        $r62 = $r61;

        $b18 = $f25 cmpg 0.0F;

        if $b18 != 0 goto label18;

        $z46 = 1;

        goto label19;

     label18:
        $z46 = 0;

     label19:
        if $z46 == 0 goto label20;

        $r63 = (androidx.ui.core.Direction) null;

        goto label22;

     label20:
        $b7 = $f25 cmpg 0.0F;

        if $b7 >= 0 goto label21;

        $r63 = <androidx.ui.core.Direction: androidx.ui.core.Direction UP>;

        goto label22;

     label21:
        $r63 = <androidx.ui.core.Direction: androidx.ui.core.Direction DOWN>;

     label22:
        $r64 = $r63;

        r4 = virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function1 getCanDrag()>();

        if $r62 == null goto label24;

        if r4 == null goto label23;

        $r22 = interfaceinvoke r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r62);

        $r23 = (java.lang.Boolean) $r22;

        $z14 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        if $z14 == 0 goto label24;

     label23:
        $z47 = 1;

        goto label25;

     label24:
        $z47 = 0;

     label25:
        $z48 = $z47;

        if $r64 == null goto label27;

        if r4 == null goto label26;

        $r20 = interfaceinvoke r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r64);

        $r21 = (java.lang.Boolean) $r20;

        $z13 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        if $z13 == 0 goto label27;

     label26:
        $z49 = 1;

        goto label28;

     label27:
        $z49 = 0;

     label28:
        $z50 = $z49;

        $r65 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z51 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r65);

        if $z51 == 0 goto label29;

        virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDxForPass(float)>(f0);

        virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDyForPass(float)>($f25);

        r66 = r56;

        $f19 = virtualinvoke r66.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDxUnderSlop()>();

        $f20 = $f19 + f0;

        virtualinvoke r66.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDxUnderSlop(float)>($f20);

        r67 = r56;

        $f21 = virtualinvoke r67.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDyUnderSlop()>();

        $f22 = $f21 + $f25;

        virtualinvoke r67.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDyUnderSlop(float)>($f22);

        goto label30;

     label29:
        r68 = r56;

        $f1 = virtualinvoke r68.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDxUnderSlop()>();

        $f2 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDxForPass()>();

        $f3 = f0 - $f2;

        $f4 = $f1 + $f3;

        virtualinvoke r68.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDxUnderSlop(float)>($f4);

        r69 = r56;

        $f5 = virtualinvoke r69.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDyUnderSlop()>();

        $f6 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDyForPass()>();

        $f7 = $f25 - $f6;

        $f8 = $f5 + $f7;

        virtualinvoke r69.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDyUnderSlop(float)>($f8);

     label30:
        if $z48 == 0 goto label31;

        $f16 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDxUnderSlop()>();

        $f17 = staticinvoke <java.lang.Math: float abs(float)>($f16);

        $f18 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: float touchSlop>;

        $b13 = $f17 cmpl $f18;

        if $b13 <= 0 goto label31;

        $z52 = 1;

        goto label32;

     label31:
        $z52 = 0;

     label32:
        z53 = $z52;

        if $z50 == 0 goto label33;

        $f13 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDyUnderSlop()>();

        $f14 = staticinvoke <java.lang.Math: float abs(float)>($f13);

        $f15 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: float touchSlop>;

        $b12 = $f14 cmpl $f15;

        if $b12 <= 0 goto label33;

        $z54 = 1;

        goto label34;

     label33:
        $z54 = 0;

     label34:
        z55 = $z54;

        if z53 != 0 goto label35;

        if z55 == 0 goto label36;

     label35:
        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop> = 1;

        $r14 = virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: kotlin.jvm.functions.Function0 getOnTouchSlopExceeded()>();

        interfaceinvoke $r14.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label42;

     label36:
        if $z48 != 0 goto label39;

        $r18 = <androidx.ui.core.Direction: androidx.ui.core.Direction LEFT>;

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r62, $r18);

        if $z11 == 0 goto label37;

        $f12 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDxUnderSlop()>();

        $b11 = $f12 cmpg 0.0F;

        if $b11 < 0 goto label38;

     label37:
        $r19 = <androidx.ui.core.Direction: androidx.ui.core.Direction RIGHT>;

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r62, $r19);

        if $z12 == 0 goto label39;

        $f11 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDxUnderSlop()>();

        $b10 = $f11 cmpl 0.0F;

        if $b10 <= 0 goto label39;

     label38:
        virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDxUnderSlop(float)>(0.0F);

     label39:
        if $z50 != 0 goto label42;

        $r16 = <androidx.ui.core.Direction: androidx.ui.core.Direction LEFT>;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r64, $r16);

        if $z9 == 0 goto label40;

        $f10 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDyUnderSlop()>();

        $b9 = $f10 cmpg 0.0F;

        if $b9 < 0 goto label41;

     label40:
        $r17 = <androidx.ui.core.Direction: androidx.ui.core.Direction DOWN>;

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r64, $r17);

        if $z10 == 0 goto label42;

        $f9 = virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float getDyUnderSlop()>();

        $b8 = $f9 cmpl 0.0F;

        if $b8 <= 0 goto label42;

     label41:
        virtualinvoke r56.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void setDyUnderSlop(float)>(0.0F);

     label42:
        goto label12;

     label43:
        $z56 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop>;

        if $z56 == 0 goto label48;

        $r6 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z2 == 0 goto label48;

        $r70 = (java.lang.Iterable) r1;

        $z3 = $r70 instanceof java.util.Collection;

        if $z3 == 0 goto label44;

        $r7 = (java.util.Collection) $r70;

        $z5 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label44;

        $z58 = 1;

        goto label47;

     label44:
        $r71 = interfaceinvoke $r70.<java.lang.Iterable: java.util.Iterator iterator()>();

     label45:
        $z59 = interfaceinvoke $r71.<java.util.Iterator: boolean hasNext()>();

        if $z59 == 0 goto label46;

        r72 = interfaceinvoke $r71.<java.util.Iterator: java.lang.Object next()>();

        r73 = (androidx.ui.core.PointerInputChange) r72;

        $z4 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r73);

        if $z4 != 0 goto label45;

        $z58 = 0;

        goto label47;

     label46:
        $z58 = 1;

     label47:
        if $z58 == 0 goto label48;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop> = 0;

     label48:
        return r1;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        java.util.Map $r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: java.util.Map pointerTrackers>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: boolean passedSlop> = 0;

        return;
    }

    public void <init>(float, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter r0;
        float f0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter;

        f0 := @parameter0: float;

        r1 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter: void <init>(float)>(f0);

        return;
    }

androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1
    void <init>()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1 r0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1 r0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1;

        virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$onTouchSlopExceeded$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>
<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>
    public void <init>(float, float, float, float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float f0, f1, f2, f3;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop> = f0;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop> = f1;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass> = f2;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass> = f3;

        return;
    }

    public void <init>(float, float, float, float, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        float f0, f1, f2, f3;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 0.0F;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        f2 = 0.0F;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        f3 = 0.0F;

     label4:
        specialinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

    public final float getDxUnderSlop()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

        return $f0;
    }

    public final void setDxUnderSlop(float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop> = f0;

        return;
    }

    public final float getDyUnderSlop()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

        return $f0;
    }

    public final void setDyUnderSlop(float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop> = f0;

        return;
    }

    public final float getDxForPass()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

        return $f0;
    }

    public final void setDxForPass(float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass> = f0;

        return;
    }

    public final float getDyForPass()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

        return $f0;
    }

    public final void setDyForPass(float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass> = f0;

        return;
    }

    public final float component1()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

        return $f0;
    }

    public final float component2()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

        return $f0;
    }

    public final float component3()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

        return $f0;
    }

    public final float component4()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

        return $f0;
    }

    public final androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData copy(float, float, float, float)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0, $r1;
        float f0, f1, f2, f3;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = new androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        specialinvoke $r1.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        return $r1;
    }

    public static androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData copy$default(androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData, float, float, float, float, int, java.lang.Object)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1;
        float f0, f1, f2, f3;

        r0 := @parameter0: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        f2 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        f3 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

     label4:
        $r2 = virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData copy(float,float,float,float)>(f0, f1, f2, f3);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r11;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PointerTrackingData(dxUnderSlop=");

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dyUnderSlop=");

        $f1 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dxForPass=");

        $f2 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dyForPass=");

        $f3 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public int hashCode()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

        $i0 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        $i1 = $i0 * 31;

        $f1 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

        $i2 = staticinvoke <java.lang.Float: int hashCode(float)>($f1);

        $i3 = $i1 + $i2;

        $i4 = $i3 * 31;

        $f2 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

        $i5 = staticinvoke <java.lang.Float: int hashCode(float)>($f2);

        $i6 = $i4 + $i5;

        $i7 = $i6 * 31;

        $f3 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

        $i8 = staticinvoke <java.lang.Float: int hashCode(float)>($f3);

        $i9 = $i7 + $i8;

        return $i9;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0, r2;
        java.lang.Object r1, r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.lang.Float $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r1;

        r2 = (androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData) r3;

        $f0 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f1 = r2.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxUnderSlop>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $f2 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $f3 = r2.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyUnderSlop>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $f4 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $f5 = r2.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dxForPass>;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $f6 = r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $f7 = r2.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: float dyForPass>;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public void <init>()
    {
        androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData r0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData;

        specialinvoke r0.<androidx.ui.core.gesture.TouchSlopExceededGestureFilter$PointerTrackingData: void <init>(float,float,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 0.0F, 0.0F, 15, null);

        return;
    }

