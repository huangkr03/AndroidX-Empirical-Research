androidx.benchmark.MetricCapture
    public void <init>()
    {
        androidx.benchmark.MetricCapture r0;

        r0 := @this: androidx.benchmark.MetricCapture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.benchmark.MetricCapture: java.lang.String getName()>
<androidx.benchmark.MetricCapture: void captureStart(long)>
<androidx.benchmark.MetricCapture: long captureStop(long)>
<androidx.benchmark.MetricCapture: void capturePaused()>
<androidx.benchmark.MetricCapture: void captureResumed()>
    public boolean equals(java.lang.Object)
    {
        androidx.benchmark.MetricCapture r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.benchmark.MetricCapture;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.benchmark.MetricCapture;

        if $z0 == 0 goto label1;

        $r2 = (androidx.benchmark.MetricCapture) r1;

        $r3 = virtualinvoke $r2.<androidx.benchmark.MetricCapture: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<androidx.benchmark.MetricCapture: java.lang.String getName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        androidx.benchmark.MetricCapture r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.benchmark.MetricCapture;

        $r1 = virtualinvoke r0.<androidx.benchmark.MetricCapture: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

