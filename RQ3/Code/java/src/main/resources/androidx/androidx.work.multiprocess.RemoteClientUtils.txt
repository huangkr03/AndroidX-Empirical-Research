androidx.work.multiprocess.RemoteClientUtils
<androidx.work.multiprocess.RemoteClientUtils: androidx.arch.core.util.Function sVoidMapper>
    private void <init>()
    {
        androidx.work.multiprocess.RemoteClientUtils r0;

        r0 := @this: androidx.work.multiprocess.RemoteClientUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture map(com.google.common.util.concurrent.ListenableFuture, androidx.arch.core.util.Function, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.arch.core.util.Function r1;
        java.util.concurrent.Executor r2;
        androidx.work.impl.utils.futures.SettableFuture r3;
        androidx.work.multiprocess.RemoteClientUtils$2 $r4;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.arch.core.util.Function;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 = staticinvoke <androidx.work.impl.utils.futures.SettableFuture: androidx.work.impl.utils.futures.SettableFuture create()>();

        $r4 = new androidx.work.multiprocess.RemoteClientUtils$2;

        specialinvoke $r4.<androidx.work.multiprocess.RemoteClientUtils$2: void <init>(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,androidx.work.impl.utils.futures.SettableFuture)>(r0, r1, r3);

        interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r4, r2);

        return r3;
    }

    static void <clinit>()
    {
        androidx.work.multiprocess.RemoteClientUtils$1 $r0;

        $r0 = new androidx.work.multiprocess.RemoteClientUtils$1;

        specialinvoke $r0.<androidx.work.multiprocess.RemoteClientUtils$1: void <init>()>();

        <androidx.work.multiprocess.RemoteClientUtils: androidx.arch.core.util.Function sVoidMapper> = $r0;

        return;
    }

androidx.work.multiprocess.RemoteClientUtils$1
    void <init>()
    {
        androidx.work.multiprocess.RemoteClientUtils$1 r0;

        r0 := @this: androidx.work.multiprocess.RemoteClientUtils$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void apply(byte[])
    {
        androidx.work.multiprocess.RemoteClientUtils$1 r0;
        byte[] r1;

        r0 := @this: androidx.work.multiprocess.RemoteClientUtils$1;

        r1 := @parameter0: byte[];

        return null;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.work.multiprocess.RemoteClientUtils$1 r0;
        java.lang.Object r1;
        byte[] $r2;
        java.lang.Void $r3;

        r0 := @this: androidx.work.multiprocess.RemoteClientUtils$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (byte[]) r1;

        $r3 = virtualinvoke r0.<androidx.work.multiprocess.RemoteClientUtils$1: java.lang.Void apply(byte[])>($r2);

        return $r3;
    }

androidx.work.multiprocess.RemoteClientUtils$2
<androidx.work.multiprocess.RemoteClientUtils$2: com.google.common.util.concurrent.ListenableFuture val$input>
<androidx.work.multiprocess.RemoteClientUtils$2: androidx.arch.core.util.Function val$transformation>
<androidx.work.multiprocess.RemoteClientUtils$2: androidx.work.impl.utils.futures.SettableFuture val$output>
    void <init>(com.google.common.util.concurrent.ListenableFuture, androidx.arch.core.util.Function, androidx.work.impl.utils.futures.SettableFuture)
    {
        androidx.work.multiprocess.RemoteClientUtils$2 r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.arch.core.util.Function r2;
        androidx.work.impl.utils.futures.SettableFuture r3;

        r0 := @this: androidx.work.multiprocess.RemoteClientUtils$2;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: androidx.arch.core.util.Function;

        r3 := @parameter2: androidx.work.impl.utils.futures.SettableFuture;

        r0.<androidx.work.multiprocess.RemoteClientUtils$2: com.google.common.util.concurrent.ListenableFuture val$input> = r1;

        r0.<androidx.work.multiprocess.RemoteClientUtils$2: androidx.arch.core.util.Function val$transformation> = r2;

        r0.<androidx.work.multiprocess.RemoteClientUtils$2: androidx.work.impl.utils.futures.SettableFuture val$output> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.work.multiprocess.RemoteClientUtils$2 r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        androidx.arch.core.util.Function $r2;
        androidx.work.impl.utils.futures.SettableFuture $r3, $r5;
        java.lang.Throwable $r4, r8, r9, $r10, r11;
        java.lang.Object r6, r7;

        r0 := @this: androidx.work.multiprocess.RemoteClientUtils$2;

     label1:
        $r1 = r0.<androidx.work.multiprocess.RemoteClientUtils$2: com.google.common.util.concurrent.ListenableFuture val$input>;

        r6 = interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r2 = r0.<androidx.work.multiprocess.RemoteClientUtils$2: androidx.arch.core.util.Function val$transformation>;

        r7 = interfaceinvoke $r2.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r6);

        $r3 = r0.<androidx.work.multiprocess.RemoteClientUtils$2: androidx.work.impl.utils.futures.SettableFuture val$output>;

        virtualinvoke $r3.<androidx.work.impl.utils.futures.SettableFuture: boolean set(java.lang.Object)>(r7);

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

        r8 = $r4;

        r9 = virtualinvoke r8.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if r9 != null goto label4;

        $r10 = r8;

        goto label5;

     label4:
        $r10 = r9;

     label5:
        r11 = $r10;

        $r5 = r0.<androidx.work.multiprocess.RemoteClientUtils$2: androidx.work.impl.utils.futures.SettableFuture val$output>;

        virtualinvoke $r5.<androidx.work.impl.utils.futures.SettableFuture: boolean setException(java.lang.Throwable)>(r11);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

