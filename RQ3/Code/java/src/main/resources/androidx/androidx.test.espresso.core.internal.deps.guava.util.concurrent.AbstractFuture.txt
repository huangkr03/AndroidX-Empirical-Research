androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean GENERATE_CANCELLATION_CAUSES>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.util.logging.Logger log>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object NULL>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener listeners>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>
    static androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper access$200()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r0;

        $r0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        return $r0;
    }

    static androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$700(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener $r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener listeners>;

        return $r1;
    }

    static androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$702(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener listeners> = r1;

        return r1;
    }

    private androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener clearListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener $r0, r3, r4, r5, r6;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r2;

        r2 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r3 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        $r1 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $r0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener TOMBSTONE>;

        r4 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener gasListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>(r2, $r0);

        r5 = r3;

     label1:
        if r4 == null goto label2;

        r6 = r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener next>;

        r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener next> = r5;

        r5 = r4;

        r4 = r6;

        goto label1;

     label2:
        return r5;
    }

    static androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$800(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter $r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>;

        return $r1;
    }

    static androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$802(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters> = r1;

        return r1;
    }

    static java.lang.Object access$300(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Object $r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        return $r1;
    }

    static java.lang.Object access$302(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Object r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: java.lang.Object;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value> = r1;

        return r1;
    }

    static java.lang.Object access$400(com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r1 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)>(r0);

        return $r1;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Object r0, $r3, $r6, $r7, r10, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, z10;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter $r1, $r5, r11, r12;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r4;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r8;
        java.lang.InterruptedException r9, r13;

        r8 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 == 0 goto label01;

        r9 = new java.lang.InterruptedException;

        specialinvoke r9.<java.lang.InterruptedException: void <init>()>();

        throw r9;

     label01:
        r10 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r10 == null goto label15;

        z7 = 1;

     label02:
        $z1 = r10 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z1 != 0 goto label14;

        z8 = 1;

     label03:
        $z2 = z7 & z8;

        if $z2 == 0 goto label04;

        $r7 = specialinvoke r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r10);

        return $r7;

     label04:
        r11 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>;

        $r1 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>;

        if r11 == $r1 goto label13;

        r12 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        specialinvoke r12.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: void <init>()>();

     label05:
        virtualinvoke r12.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: void setNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r11);

        $r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z3 = virtualinvoke $r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r8, r11, r12);

        if $z3 == 0 goto label12;

     label06:
        staticinvoke <java.util.concurrent.locks.LockSupport: void park(java.lang.Object)>(r8);

        $z4 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z4 == 0 goto label07;

        specialinvoke r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void removeWaiter(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r12);

        r13 = new java.lang.InterruptedException;

        specialinvoke r13.<java.lang.InterruptedException: void <init>()>();

        throw r13;

     label07:
        r0 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r0 == null goto label11;

        z9 = 1;

     label08:
        $z5 = r0 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z5 != 0 goto label10;

        z10 = 1;

     label09:
        $z6 = z9 & z10;

        if $z6 == 0 goto label06;

        $r6 = specialinvoke r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r0);

        return $r6;

     label10:
        z10 = 0;

        goto label09;

     label11:
        z9 = 0;

        goto label08;

     label12:
        r11 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>;

        $r5 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>;

        if r11 != $r5 goto label05;

     label13:
        r14 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = specialinvoke r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r14);

        return $r3;

     label14:
        z8 = 0;

        goto label03;

     label15:
        z7 = 0;

        goto label02;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException
    {
        long l0, l1, l2, l3, $l6, $l8, $l11, $l12, $l14, l15, l16, l17, l18, l19, l21, l22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z13, z14, z15, z16, $z17;
        byte $b4, $b5, $b7, $b9, $b10, $b13, $b20, $b23;
        java.lang.String $r0, $r5, $r7, $r12, $r15, r53, r54, r56, r58, r60, r62, r63, r65, r66, r68, r70;
        java.util.Locale $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, r55, r57, r59, r61, r64, r67, r69, r72, r74;
        java.util.concurrent.TimeUnit $r18, r41;
        java.lang.Object $r32, $r35, $r38, $r39, r43, r48, r49, r52;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter $r33, $r37, r44, r45, r46, r51;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r36;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r40;
        java.lang.InterruptedException r42, r47, r50;
        java.util.concurrent.TimeoutException r71, r73;

        r40 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        l15 := @parameter0: long;

        r41 := @parameter1: java.util.concurrent.TimeUnit;

        l0 = virtualinvoke r41.<java.util.concurrent.TimeUnit: long toNanos(long)>(l15);

        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 == 0 goto label01;

        r42 = new java.lang.InterruptedException;

        specialinvoke r42.<java.lang.InterruptedException: void <init>()>();

        throw r42;

     label01:
        r43 = r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r43 == null goto label27;

        z10 = 1;

     label02:
        $z1 = r43 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z1 != 0 goto label26;

        z11 = 1;

     label03:
        $z2 = z10 & z11;

        if $z2 == 0 goto label04;

        $r39 = specialinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r43);

        return $r39;

     label04:
        $b4 = l0 cmp 0L;

        if $b4 <= 0 goto label25;

        $l14 = staticinvoke <java.lang.System: long nanoTime()>();

        l16 = $l14 + l0;

        l17 = l16;

     label05:
        $b5 = l0 cmp 1000L;

        if $b5 < 0 goto label24;

        r44 = r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>;

        $r33 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>;

        if r44 == $r33 goto label23;

        r45 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        specialinvoke r45.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: void <init>()>();

        r46 = r44;

     label06:
        virtualinvoke r45.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: void setNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r46);

        $r36 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z6 = virtualinvoke $r36.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r40, r46, r45);

        if $z6 == 0 goto label22;

        l18 = l0;

     label07:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.OverflowAvoidingLockSupport: void parkNanos(java.lang.Object,long)>(r40, l18);

        $z7 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z7 == 0 goto label08;

        specialinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void removeWaiter(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r45);

        r47 = new java.lang.InterruptedException;

        specialinvoke r47.<java.lang.InterruptedException: void <init>()>();

        throw r47;

     label08:
        r48 = r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r48 == null goto label21;

        z12 = 1;

     label09:
        $z8 = r48 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z8 != 0 goto label20;

        z13 = 1;

     label10:
        $z9 = z12 & z13;

        if $z9 == 0 goto label11;

        $r38 = specialinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r48);

        return $r38;

     label11:
        $l12 = staticinvoke <java.lang.System: long nanoTime()>();

        l1 = l17 - $l12;

        $b13 = l1 cmp 1000L;

        if $b13 >= 0 goto label19;

        specialinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void removeWaiter(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r45);

        l19 = l1;

     label12:
        $b20 = l19 cmp 0L;

        if $b20 <= 0 goto label28;

        r49 = r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r49 == null goto label18;

        z14 = 1;

     label13:
        $z3 = r49 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z3 != 0 goto label17;

        z15 = 1;

     label14:
        $z4 = z14 & z15;

        if $z4 == 0 goto label15;

        $r32 = specialinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r49);

        return $r32;

     label15:
        $z5 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z5 == 0 goto label16;

        r50 = new java.lang.InterruptedException;

        specialinvoke r50.<java.lang.InterruptedException: void <init>()>();

        throw r50;

     label16:
        $l11 = staticinvoke <java.lang.System: long nanoTime()>();

        l21 = l17 - $l11;

        l19 = l21;

        goto label12;

     label17:
        z15 = 0;

        goto label14;

     label18:
        z14 = 0;

        goto label13;

     label19:
        l18 = l1;

        goto label07;

     label20:
        z13 = 0;

        goto label10;

     label21:
        z12 = 0;

        goto label09;

     label22:
        r51 = r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>;

        $r37 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>;

        if r51 == $r37 goto label23;

        r46 = r51;

        goto label06;

     label23:
        r52 = r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        virtualinvoke r52.<java.lang.Object: java.lang.Class getClass()>();

        $r35 = specialinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>(r52);

        return $r35;

     label24:
        l19 = l0;

        goto label12;

     label25:
        l17 = 0L;

        goto label05;

     label26:
        z11 = 0;

        goto label03;

     label27:
        z10 = 0;

        goto label02;

     label28:
        r53 = virtualinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.String toString()>();

        $r0 = virtualinvoke r41.<java.util.concurrent.TimeUnit: java.lang.String toString()>();

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        r54 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waited ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke r41.<java.util.concurrent.TimeUnit: java.lang.String toString()>();

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r56 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $l6 = l19 + 1000L;

        $b7 = $l6 cmp 0L;

        if $b7 >= 0 goto label35;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (plus ");

        r58 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        l22 = neg l19;

        $r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        l2 = virtualinvoke r41.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l22, $r18);

        $l8 = virtualinvoke r41.<java.util.concurrent.TimeUnit: long toNanos(long)>(l2);

        l3 = l22 - $l8;

        $b9 = l2 cmp 0L;

        if $b9 == 0 goto label29;

        $b10 = l3 cmp 1000L;

        if $b10 <= 0 goto label36;

     label29:
        z16 = 1;

     label30:
        $b23 = l2 cmp 0L;

        if $b23 <= 0 goto label37;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        r60 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        if z16 == 0 goto label38;

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        r62 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        r63 = r62;

     label31:
        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r65 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        r66 = r65;

     label32:
        if z16 == 0 goto label40;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nanoseconds ");

        r68 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label33:
        r69 = new java.lang.StringBuilder;

        specialinvoke r69.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delay)");

        r70 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label34:
        $z17 = virtualinvoke r40.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isDone()>();

        if $z17 == 0 goto label39;

        r71 = new java.util.concurrent.TimeoutException;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but future completed as timeout expired");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r71.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r15);

        throw r71;

     label35:
        r70 = r56;

        goto label34;

     label36:
        z16 = 0;

        goto label30;

     label37:
        r66 = r58;

        goto label32;

     label38:
        r63 = r60;

        goto label31;

     label39:
        r73 = new java.util.concurrent.TimeoutException;

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r73.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r12);

        throw r73;

     label40:
        r68 = r66;

        goto label33;
    }

    private java.lang.Object getDoneValue(java.lang.Object) throws java.util.concurrent.ExecutionException
    {
        java.lang.Object r0, $r1, $r2;
        boolean $z0, $z1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure $r3;
        java.lang.Throwable $r4, $r6;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation $r5;
        java.util.concurrent.CancellationException $r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r8;
        java.util.concurrent.ExecutionException r9;

        r8 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        if $z0 == 0 goto label1;

        $r5 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation) r0;

        $r6 = $r5.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: java.lang.Throwable cause>;

        $r7 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable)>("Task was cancelled.", $r6);

        throw $r7;

     label1:
        $z1 = r0 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        if $z1 == 0 goto label2;

        r9 = new java.util.concurrent.ExecutionException;

        $r3 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure) r0;

        $r4 = $r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: java.lang.Throwable exception>;

        specialinvoke r9.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw r9;

     label2:
        $r1 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object NULL>;

        if r0 != $r1 goto label3;

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.NullnessCasts: java.lang.Object uncheckedNull()>();

        return $r2;

     label3:
        return r0;
    }

    private static java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        java.lang.StringBuilder $r0, $r1, $r12, $r13, $r16, $r17, r28, r32, r36, r43, r46, r49;
        java.lang.String $r2, $r14, $r18;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.internal.InternalFutureFailureAccess $r4;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture $r5;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r15, r22, r29, r33, r37;
        com.google.common.util.concurrent.ListenableFuture r19;
        java.lang.Object r20, r25;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation r21, r24, r26, r30, r40, r41, r45, r48, r54;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure r23, r34, r38, r39, r42, r51, r52, r53;
        java.lang.IllegalArgumentException r27, r31, r35, r44, r47, r50;
        java.util.concurrent.Future r55;
        java.util.concurrent.ExecutionException r56;

        r19 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $z0 = r19 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Trusted;

        if $z0 == 0 goto label03;

        $r5 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture) r19;

        r20 = $r5.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        $z4 = r20 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        if $z4 == 0 goto label01;

        r21 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation) r20;

        $z5 = r21.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: boolean wasInterrupted>;

        if $z5 == 0 goto label01;

        $r7 = r21.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: java.lang.Throwable cause>;

        if $r7 == null goto label02;

        r41 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        r20 = r41;

        $r8 = r21.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: java.lang.Throwable cause>;

        specialinvoke r41.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(0, $r8);

     label01:
        virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();

        return r20;

     label02:
        r20 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED>;

        goto label01;

     label03:
        $z1 = r19 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.internal.InternalFutureFailureAccess;

        if $z1 == 0 goto label04;

        $r4 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.internal.InternalFutureFailureAccess) r19;

        r22 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.internal.InternalFutures: java.lang.Throwable tryInternalFastPathGetFailure(androidx.test.espresso.core.internal.deps.guava.util.concurrent.internal.InternalFutureFailureAccess)>($r4);

        if r22 == null goto label04;

        r42 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        r23 = r42;

        specialinvoke r42.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>(r22);

        return r23;

     label04:
        z6 = interfaceinvoke r19.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();

        $z2 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean GENERATE_CANCELLATION_CAUSES>;

        if $z2 != 0 goto label14;

        z7 = 1;

     label05:
        $z3 = z7 & z6;

        if $z3 == 0 goto label06;

        r24 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED>;

        virtualinvoke r24.<java.lang.Object: java.lang.Class getClass()>();

        return r24;

     label06:
        r55 = (java.util.concurrent.Future) r19;

        r25 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>(r55);

     label07:
        if z6 == 0 goto label11;

     label08:
        r45 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        r26 = r45;

     label09:
        r44 = new java.lang.IllegalArgumentException;

        r27 = r44;

        r43 = new java.lang.StringBuilder;

        r28 = r43;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get() did not throw CancellationException, despite reporting isCancelled() == true: ");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        specialinvoke r45.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(0, r27);

     label10:
        return r26;

     label11:
        if r25 != null goto label13;

     label12:
        r25 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object NULL>;

     label13:
        return r25;

     label14:
        z7 = 0;

        goto label05;

     label15:
        $r10 := @caughtexception;

        r29 = $r10;

        if z6 == 0 goto label18;

        r48 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        r30 = r48;

        r47 = new java.lang.IllegalArgumentException;

        r31 = r47;

        r46 = new java.lang.StringBuilder;

        r32 = r46;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get() did not throw CancellationException, despite reporting isCancelled() == true: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r14, r29);

        specialinvoke r48.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(0, r31);

        return r30;

     label16:
        $r15 := @caughtexception;

        r33 = $r15;

        if z6 != 0 goto label19;

        r51 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        r34 = r51;

        r50 = new java.lang.IllegalArgumentException;

        r35 = r50;

        r49 = new java.lang.StringBuilder;

        r36 = r49;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get() threw CancellationException, despite reporting isCancelled() == false: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r33);

        specialinvoke r51.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>(r35);

        return r34;

     label17:
        $r9 := @caughtexception;

        r37 = $r9;

        r52 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        r38 = r52;

        specialinvoke r52.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>(r37);

        return r38;

     label18:
        r53 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        r39 = r53;

        r56 = (java.util.concurrent.ExecutionException) r29;

        $r11 = virtualinvoke r56.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke r53.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>($r11);

        return r39;

     label19:
        r54 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        r40 = r54;

        specialinvoke r54.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(0, r33);

        return r40;

        catch java.util.concurrent.ExecutionException from label06 to label07 with label15;
        catch java.util.concurrent.CancellationException from label06 to label07 with label16;
        catch java.lang.RuntimeException from label06 to label07 with label17;
        catch java.lang.Error from label06 to label07 with label17;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label15;
        catch java.util.concurrent.CancellationException from label08 to label09 with label16;
        catch java.lang.RuntimeException from label08 to label09 with label17;
        catch java.lang.Error from label08 to label09 with label17;
        catch java.util.concurrent.ExecutionException from label09 to label10 with label15;
        catch java.util.concurrent.CancellationException from label09 to label10 with label16;
        catch java.lang.RuntimeException from label09 to label10 with label17;
        catch java.lang.Error from label09 to label10 with label17;
        catch java.util.concurrent.ExecutionException from label12 to label13 with label15;
        catch java.util.concurrent.CancellationException from label12 to label13 with label16;
        catch java.lang.RuntimeException from label12 to label13 with label17;
        catch java.lang.Error from label12 to label13 with label17;
    }

    private static java.lang.Object getUninterruptibly(java.util.concurrent.Future) throws java.util.concurrent.ExecutionException
    {
        java.lang.Object r0;
        java.lang.Thread $r1, $r4;
        java.lang.Throwable $r2, $r3, r6;
        java.util.concurrent.Future r5;
        boolean z0;

        r5 := @parameter0: java.util.concurrent.Future;

        z0 = 0;

     label1:
        r0 = interfaceinvoke r5.<java.util.concurrent.Future: java.lang.Object get()>();

     label2:
        if z0 == 0 goto label3;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r1.<java.lang.Thread: void interrupt()>();

     label3:
        return r0;

     label4:
        $r2 := @caughtexception;

        z0 = 1;

        goto label1;

     label5:
        $r3 := @caughtexception;

        r6 = $r3;

        if z0 != 0 goto label7;

     label6:
        throw r6;

     label7:
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r4.<java.lang.Thread: void interrupt()>();

        goto label6;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
    }

    protected java.lang.String pendingToString()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.StringBuilder r1, $r2, $r5, $r6;
        boolean $z0;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.ScheduledFuture $r4;
        long $l0;
        java.lang.String $r7;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $z0 = r0 instanceof java.util.concurrent.ScheduledFuture;

        if $z0 == 0 goto label1;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remaining delay=[");

        $r4 = (java.util.concurrent.ScheduledFuture) r0;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l0 = interfaceinvoke $r4.<java.util.concurrent.ScheduledFuture: long getDelay(java.util.concurrent.TimeUnit)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return null;
    }

    public java.lang.String toString()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.StringBuilder r1, $r7, $r9, $r15;
        java.lang.Class $r2, $r4, $r12;
        java.lang.String $r3, $r5, $r8, $r13, $r16;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("androidx.test.espresso.core.internal.deps.guava.util.concurrent.");

        if $z0 == 0 goto label5;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label1:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[status=");

        $z1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isCancelled()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CANCELLED");

     label2:
        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label3:
        $z2 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isDone()>();

        if $z2 == 0 goto label4;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void addDoneString(java.lang.StringBuilder)>(r1);

        goto label2;

     label4:
        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void addPendingString(java.lang.StringBuilder)>(r1);

        goto label2;

     label5:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;
    }

    protected final java.lang.Throwable tryInternalFastPathGetFailure()
    {
        boolean $z0, $z1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure $r0;
        java.lang.Throwable $r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r2;
        java.lang.Object r3;

        r2 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $z0 = r2 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Trusted;

        if $z0 == 0 goto label1;

        r3 = r2.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        $z1 = r3 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        if $z1 == 0 goto label1;

        $r0 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure) r3;

        $r1 = $r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: java.lang.Throwable exception>;

        return $r1;

     label1:
        return null;
    }

    private static java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;
        java.util.concurrent.CancellationException r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        r2 = new java.util.concurrent.CancellationException;

        specialinvoke r2.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>(r0);

        virtualinvoke r2.<java.util.concurrent.CancellationException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class r0, $r3, r22;
        java.lang.String r1, $r2, $r4;
        java.util.logging.Logger $r5, $r7, $r9;
        java.util.logging.Level $r6, $r8;
        java.lang.Throwable $r10, $r16, $r17, r19, r20;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r11, $r12, $r13, $r14, $r15;
        boolean z0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper r18;
        java.lang.Object r21, r24;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r23;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r25;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r26;

     label01:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("guava.concurrent.generate_cancellation_cause", "false");

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

     label02:
        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean GENERATE_CANCELLATION_CAUSES> = z0;

        $r3 = class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r4);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.util.logging.Logger log> = $r5;

     label03:
        r23 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r18 = r23;

        specialinvoke r23.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)>(null);

     label04:
        r19 = null;

        r20 = null;

     label05:
        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER> = r18;

        if r20 == null goto label06;

        $r7 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.util.logging.Logger log>;

        $r6 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r7.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture", "<clinit>", "UnsafeAtomicHelper is broken!", r19);

        $r9 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.util.logging.Logger log>;

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r9.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture", "<clinit>", "SafeAtomicHelper is broken!", r20);

     label06:
        r24 = new java.lang.Object;

        r21 = r24;

        specialinvoke r24.<java.lang.Object: void <init>()>();

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object NULL> = r21;

        return;

     label07:
        $r16 := @caughtexception;

        z0 = 0;

        goto label02;

     label08:
        $r10 := @caughtexception;

        r19 = $r10;

     label09:
        r25 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r18 = r25;

        r22 = class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Waiter;";

        r0 = class "Ljava/lang/Thread;";

        r1 = "thread";

     label10:
        $r11 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(r22, r0, r1);

        $r12 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Waiter;", class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Waiter;", "next");

        $r13 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture;", class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Waiter;", "waiters");

        $r14 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture;", class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Listener;", "listeners");

        $r15 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture;", class "Ljava/lang/Object;", "value");

        specialinvoke r25.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>($r11, $r12, $r13, $r14, $r15);

     label11:
        r20 = null;

        goto label05;

     label12:
        $r17 := @caughtexception;

        r20 = $r17;

        r26 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r18 = r26;

        specialinvoke r26.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)>(null);

        goto label05;

        catch java.lang.SecurityException from label01 to label02 with label07;
        catch java.lang.RuntimeException from label03 to label04 with label08;
        catch java.lang.Error from label03 to label04 with label08;
        catch java.lang.RuntimeException from label09 to label10 with label12;
        catch java.lang.Error from label09 to label10 with label12;
        catch java.lang.RuntimeException from label10 to label11 with label12;
        catch java.lang.Error from label10 to label11 with label12;
    }

    protected void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.internal.InternalFutureFailureAccess: void <init>()>();

        return;
    }

    static void access$500(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void complete(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

        return;
    }

    private void addDoneString(java.lang.StringBuilder)
    {
        java.lang.StringBuilder r0, $r5, $r7, $r10, $r12;
        java.lang.Object r1;
        java.lang.Throwable $r4, $r6, $r9, $r14, r17, r18;
        java.lang.Class $r11;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r16;
        java.util.concurrent.Future r19;
        java.util.concurrent.ExecutionException r20;

        r16 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r0 := @parameter0: java.lang.StringBuilder;

     label1:
        r19 = (java.util.concurrent.Future) r16;

        r1 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>(r19);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUCCESS, result=[");

        specialinvoke r16.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void appendResultObject(java.lang.StringBuilder,java.lang.Object)>(r0, r1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r17 = $r4;

        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAILURE, cause=[");

        r20 = (java.util.concurrent.ExecutionException) r17;

        $r6 = virtualinvoke r20.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        return;

     label4:
        $r14 := @caughtexception;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CANCELLED");

        return;

     label5:
        $r9 := @caughtexception;

        r18 = $r9;

        $r10 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN, cause=[");

        $r11 = virtualinvoke r18.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" thrown from get()]");

        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.util.concurrent.CancellationException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r3, $r6, $r8, r9;
        boolean $z0, $z1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r7;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Runnable was null.");

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Executor was null.");

        $z0 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isDone()>();

        if $z0 != 0 goto label3;

        r9 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener listeners>;

        $r6 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener TOMBSTONE>;

        if r9 == $r6 goto label3;

        r3 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        specialinvoke r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

     label1:
        r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener next> = r9;

        $r7 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z1 = virtualinvoke $r7.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>(r0, r9, r3);

        if $z1 == 0 goto label2;

        return;

     label2:
        r9 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener listeners>;

        $r8 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener TOMBSTONE>;

        if r9 != $r8 goto label1;

     label3:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

        return;
    }

    private void addPendingString(java.lang.StringBuilder)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.StringBuilder r1, r2, $r6, $r7, $r14, $r16;
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.String $r4, r18;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture $r10;
        com.google.common.util.concurrent.ListenableFuture $r11;
        java.lang.Throwable $r13, r19;
        java.lang.Class $r15;
        java.lang.Object r17;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PENDING");

        r17 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        $z0 = r17 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z0 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", setFuture=[");

        $r10 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture) r17;

        $r11 = $r10.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future>;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void appendUserObject(java.lang.StringBuilder,java.lang.Object)>(r1, $r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label1:
        $z1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isDone()>();

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(i0, $i1);

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void addDoneString(java.lang.StringBuilder)>(r1);

        return;

     label2:
        return;

     label3:
        $r4 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.String pendingToString()>();

        r18 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r4);

     label4:
        if r18 == null goto label1;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", info=[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        goto label1;

     label5:
        $r13 := @caughtexception;

        r19 = $r13;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown from implementation: ");

        $r15 = virtualinvoke r19.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

        catch java.lang.RuntimeException from label3 to label4 with label5;
        catch java.lang.StackOverflowError from label3 to label4 with label5;
    }

    protected void afterDone()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        return;
    }

    private void appendResultObject(java.lang.StringBuilder, java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.StringBuilder r1, $r5, $r6;
        java.lang.Object r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

        return;

     label1:
        if r2 != r0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this future");

        return;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        return;
    }

    private void appendUserObject(java.lang.StringBuilder, java.lang.Object)
    {
        java.lang.StringBuilder r0, $r5;
        java.lang.Object r1;
        java.lang.Throwable $r4, r9;
        java.lang.Class $r6;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r8;

        r8 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.Object;

        if r1 != r8 goto label2;

     label1:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this future");

        return;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        return;

     label3:
        $r4 := @caughtexception;

        r9 = $r4;

        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown from implementation: ");

        $r6 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        return;

        catch java.lang.RuntimeException from label1 to label3 with label3;
        catch java.lang.StackOverflowError from label1 to label3 with label3;
    }

    private static void complete(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)
    {
        boolean $z0, $z1;
        java.lang.Object $r2, r11;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r3;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r4, r9;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r5, r6;
        java.lang.Runnable r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture r8;
        com.google.common.util.concurrent.ListenableFuture r10;
        java.util.concurrent.Executor r12;

        r4 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r5 = null;

     label1:
        specialinvoke r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void releaseWaiters()>();

        virtualinvoke r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void afterDone()>();

        r6 = specialinvoke r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener clearListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>(r5);

     label2:
        if r6 == null goto label6;

        r5 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener next>;

        r7 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.lang.Runnable task>;

        virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = r7 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z0 == 0 goto label5;

        r8 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture) r7;

        r9 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture owner>;

        $r2 = r9.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if $r2 != r8 goto label4;

        r10 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future>;

        r11 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)>(r10);

        $r3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z1 = virtualinvoke $r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r9, r8, r11);

        if $z1 == 0 goto label3;

        r4 = r9;

        goto label1;

     label3:
        r6 = r5;

        goto label2;

     label4:
        r6 = r5;

        goto label2;

     label5:
        r12 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.util.concurrent.Executor executor>;

        virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>(r7, r12);

        r6 = r5;

        goto label2;

     label6:
        return;
    }

    private static void executeListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.lang.Runnable r0;
        java.util.concurrent.Executor r1;
        java.lang.Throwable r2, $r6;
        java.util.logging.Logger r3;
        java.util.logging.Level r4;
        java.lang.StringBuilder r5, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @parameter0: java.lang.Runnable;

        r1 := @parameter1: java.util.concurrent.Executor;

     label1:
        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        r3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.util.logging.Logger log>;

        r4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RuntimeException while executing runnable ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with executor ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>(r4, "androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture", "executeListener", $r11, r2);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void interruptTask()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        return;
    }

    final void maybePropagateCancellationTo(java.util.concurrent.Future)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.util.concurrent.Future r1;
        boolean $z0, $z1, $z2, z4;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.util.concurrent.Future;

        if r1 == null goto label3;

        z4 = 1;

     label1:
        $z0 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isCancelled()>();

        $z1 = z4 & $z0;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean wasInterrupted()>();

        interfaceinvoke r1.<java.util.concurrent.Future: boolean cancel(boolean)>($z2);

        return;

     label2:
        return;

     label3:
        z4 = 0;

        goto label1;
    }

    private void releaseWaiters()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter $r0, r3;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r2;

        r2 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $r1 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $r0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>;

        r3 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter gasWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r2, $r0);

     label1:
        if r3 == null goto label2;

        virtualinvoke r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: void unpark()>();

        r3 = r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter next>;

        goto label1;

     label2:
        return;
    }

    private void removeWaiter(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1, r5, r6, $r7, r8;
        java.lang.Thread $r2, $r4;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r5 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r5.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread> = null;

     label1:
        r6 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter waiters>;

        $r7 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>;

        if r6 == $r7 goto label7;

        r8 = null;

     label2:
        if r6 == null goto label6;

        r1 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter next>;

        $r2 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread>;

        if $r2 == null goto label4;

        r8 = r6;

     label3:
        r6 = r1;

        goto label2;

     label4:
        if r8 == null goto label5;

        r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter next> = r1;

        $r4 = r8.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread>;

        if $r4 != null goto label3;

        goto label1;

     label5:
        $r3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z0 = virtualinvoke $r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r0, r6, r1);

        if $z0 != 0 goto label3;

        goto label1;

     label6:
        return;

     label7:
        return;
    }

    public boolean cancel(boolean)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, z10, z11, $z12, z13, z14;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture $r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r2, r6;
        java.lang.Object r3;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation r4;
        java.util.concurrent.CancellationException r5;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r7;
        com.google.common.util.concurrent.ListenableFuture r8;

        r2 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        z0 := @parameter0: boolean;

        r3 = r2.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r3 != null goto label16;

        z10 = 1;

     label01:
        $z1 = r3 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        $z2 = z10 | $z1;

        if $z2 == 0 goto label15;

        $z3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean GENERATE_CANCELLATION_CAUSES>;

        if $z3 == 0 goto label12;

        r4 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        r5 = new java.util.concurrent.CancellationException;

        specialinvoke r5.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>("Future.cancel() was called.");

        specialinvoke r4.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(z0, r5);

     label02:
        z11 = 0;

        r6 = r2;

     label03:
        $r7 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z12 = virtualinvoke $r7.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r6, r3, r4);

        if $z12 == 0 goto label11;

        if z0 == 0 goto label04;

        virtualinvoke r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void interruptTask()>();

     label04:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void complete(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r6);

        $z5 = r3 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z5 == 0 goto label10;

        $r1 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture) r3;

        r8 = $r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future>;

        $z6 = r8 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Trusted;

        if $z6 == 0 goto label09;

        r6 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture) r8;

        r3 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r3 != null goto label08;

        z13 = 1;

     label05:
        $z8 = r3 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        $z9 = z13 | $z8;

        if $z9 == 0 goto label06;

        z11 = 1;

        goto label03;

     label06:
        z14 = 1;

     label07:
        return z14;

     label08:
        z13 = 0;

        goto label05;

     label09:
        interfaceinvoke r8.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(z0);

        z14 = 1;

        goto label07;

     label10:
        z14 = 1;

        goto label07;

     label11:
        r3 = r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        $z4 = r3 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z4 != 0 goto label03;

        z14 = z11;

        goto label07;

     label12:
        if z0 == 0 goto label14;

        r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED>;

     label13:
        virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        goto label02;

     label14:
        r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED>;

        goto label13;

     label15:
        z14 = 0;

        goto label07;

     label16:
        z10 = 0;

        goto label01;
    }

    public boolean isCancelled()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        $z0 = $r1 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        return $z0;
    }

    public boolean isDone()
    {
        boolean $z0, $z1, z2, z3;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Object r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r1 == null goto label4;

        z2 = 1;

     label1:
        $z0 = r1 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        if $z0 != 0 goto label3;

        z3 = 1;

     label2:
        $z1 = z2 & z3;

        return $z1;

     label3:
        z3 = 0;

        goto label2;

     label4:
        z2 = 0;

        goto label1;
    }

    protected boolean set(java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r1;
        boolean $z0;
        java.lang.Object r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter0: java.lang.Object;

        if r2 != null goto label1;

        r2 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object NULL>;

     label1:
        $r1 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z0 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r0, null, r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void complete(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

        return 1;

     label2:
        return 0;
    }

    protected boolean setException(java.lang.Throwable)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Throwable r1, $r4;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure r2;
        java.lang.Object $r3;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r5;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.lang.Throwable;

        r2 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.Throwable) $r3;

        specialinvoke r2.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>($r4);

        $r5 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z0 = virtualinvoke $r5.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r0, null, r2);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void complete(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

        return 1;

     label1:
        return 0;
    }

    protected boolean setFuture(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure r0, r16;
        boolean $z0, $z1, $z3, $z4, $z5;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation $r2;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r3, $r5, $r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.DirectExecutor $r4;
        java.lang.Throwable $r6, $r8, r15;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r9;
        com.google.common.util.concurrent.ListenableFuture r10;
        java.lang.Object r11, r12, r14;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture r13;

        r9 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r10 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r10);

        r11 = r9.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        if r11 != null goto label08;

        $z3 = interfaceinvoke r10.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z3 == 0 goto label02;

        r12 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)>(r10);

        $r5 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z5 = virtualinvoke $r5.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r9, null, r12);

        if $z5 == 0 goto label01;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void complete(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r9);

        return 1;

     label01:
        return 0;

     label02:
        r13 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        specialinvoke r13.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,com.google.common.util.concurrent.ListenableFuture)>(r9, r10);

        $r3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        $z4 = virtualinvoke $r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r9, null, r13);

        if $z4 == 0 goto label05;

     label03:
        $r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.DirectExecutor: androidx.test.espresso.core.internal.deps.guava.util.concurrent.DirectExecutor INSTANCE>;

        interfaceinvoke r10.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r13, $r4);

     label04:
        return 1;

     label05:
        r14 = r9.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

     label06:
        $z0 = r14 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        if $z0 == 0 goto label07;

        $r2 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation) r14;

        $z1 = $r2.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: boolean wasInterrupted>;

        interfaceinvoke r10.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>($z1);

     label07:
        return 0;

     label08:
        r14 = r11;

        goto label06;

     label09:
        $r8 := @caughtexception;

        r15 = $r8;

     label10:
        r0 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>(r15);

     label11:
        r16 = r0;

     label12:
        $r7 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER>;

        virtualinvoke $r7.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>(r9, r13, r16);

        goto label04;

     label13:
        $r6 := @caughtexception;

        r16 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE>;

        goto label12;

        catch java.lang.RuntimeException from label03 to label04 with label09;
        catch java.lang.Error from label03 to label04 with label09;
        catch java.lang.RuntimeException from label10 to label11 with label13;
        catch java.lang.Error from label10 to label11 with label13;
    }

    protected final boolean wasInterrupted()
    {
        boolean $z0, $z1, z2;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation $r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        java.lang.Object r2;

        r1 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 = r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object value>;

        $z0 = r2 instanceof androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        if $z0 == 0 goto label2;

        $r0 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation) r2;

        $z1 = $r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: boolean wasInterrupted>;

        if $z1 == 0 goto label2;

        z2 = 1;

     label1:
        return z2;

     label2:
        z2 = 0;

        goto label1;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1
androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener gasListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter gasWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>
    private void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1 r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void <init>()>();

        return;
    }

<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void putNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void putThread(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>
androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: boolean wasInterrupted>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: java.lang.Throwable cause>
    static void <clinit>()
    {
        boolean $z0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation r0, r1;

        $z0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean GENERATE_CANCELLATION_CAUSES>;

        if $z0 == 0 goto label1;

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED> = null;

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED> = null;

        return;

     label1:
        r0 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(0, null);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED> = r0;

        r1 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>(1, null);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED> = r1;

        return;
    }

    void <init>(boolean, java.lang.Throwable)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation r0;
        boolean z0;
        java.lang.Throwable r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: boolean wasInterrupted> = z0;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Cancellation: java.lang.Throwable cause> = r1;

        return;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1
    public synchronized java.lang.Throwable fillInStackTrace()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1 r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1;

        return r0;
    }

    void <init>(java.lang.String)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1 r0;
        java.lang.String r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Throwable: void <init>(java.lang.String)>(r1);

        return;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: java.lang.Throwable exception>
    static void <clinit>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1 r1;

        r0 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        r1 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure$1: void <init>(java.lang.String)>("Failure occurred while trying to finish a future.");

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>(r1);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE> = r0;

        return;
    }

    void <init>(java.lang.Throwable)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure r0;
        java.lang.Throwable r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.Throwable) $r2;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Failure: java.lang.Throwable exception> = $r3;

        return;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener TOMBSTONE>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.lang.Runnable task>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.util.concurrent.Executor executor>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener next>
    static void <clinit>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r0;

        r0 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: void <init>()>();

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener TOMBSTONE> = r0;

        return;
    }

    void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.lang.Runnable task> = null;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.util.concurrent.Executor executor> = null;

        return;
    }

    void <init>(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.lang.Runnable task> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener: java.util.concurrent.Executor executor> = r2;

        return;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0
    public static boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater r0;
        java.lang.Object r1, r2, r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

     label1:
        $z0 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object get(java.lang.Object)>(r1);

        if $r4 == r2 goto label1;

        return 0;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>
    androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener gasListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r2, $r5;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        $r3 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener) $r4;

        return $r5;
    }

    androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter gasWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r2, $r5;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        $r3 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter) $r4;

        return $r5;
    }

    void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater r1, r2, r3, r4, r5;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r5 := @parameter4: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)>(null);

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater> = r2;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater> = r3;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater> = r4;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater> = r5;

        return;
    }

    void putNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1, r2;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        $r3 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putThread(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, java.lang.Thread)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1;
        java.lang.Thread r2;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter1: java.lang.Thread;

        $r3 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    boolean casListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r2, r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        r3 := @parameter2: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        $r4 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater>;

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r1, r2, r3);

        return $z0;
    }

    boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        java.lang.Object r2, r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>;

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r1, r2, r3);

        return $z0;
    }

    boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r2, r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r3 := @parameter2: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        $r4 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater>;

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r1, r2, r3);

        return $z0;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture owner>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future>
    void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        com.google.common.util.concurrent.ListenableFuture r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture owner> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future> = r2;

        return;
    }

    public void run()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture $r1, $r4, $r5;
        java.lang.Object $r2, r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r3;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture r6;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture owner>;

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object access$300(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>($r1);

        if $r2 == r0 goto label1;

        return;

     label1:
        r6 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future>;

        r7 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object access$400(com.google.common.util.concurrent.ListenableFuture)>(r6);

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper access$200()>();

        $r4 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture owner>;

        $z0 = virtualinvoke $r3.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>($r4, r0, r7);

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SetFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture owner>;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void access$500(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>($r5);

        return;

     label2:
        return;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper
    androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener gasListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r1, r5;
        java.lang.Throwable $r3, r6;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r4;

        r4 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        entermonitor r0;

     label1:
        r5 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$700(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

     label2:
        if r5 == r1 goto label4;

     label3:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$702(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>(r0, r1);

     label4:
        exitmonitor r0;

     label5:
        return r5;

     label6:
        $r3 := @caughtexception;

        r6 = $r3;

        goto label8;

     label7:
        throw r6;

     label8:
        exitmonitor r0;

        goto label7;

     label9:
        nop;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }

    androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter gasWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1, r5;
        java.lang.Throwable $r3, r6;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r4;

        r4 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        entermonitor r0;

     label1:
        r5 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$800(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

     label2:
        if r5 == r1 goto label4;

     label3:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$802(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r0, r1);

     label4:
        exitmonitor r0;

     label5:
        return r5;

     label6:
        $r3 := @caughtexception;

        r6 = $r3;

        goto label8;

     label7:
        throw r6;

     label8:
        exitmonitor r0;

        goto label7;

     label9:
        nop;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }

    private void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)>(null);

        return;
    }

    void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1 r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>()>();

        return;
    }

    void putNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1, r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter next> = r2;

        return;
    }

    void putThread(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, java.lang.Thread)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1;
        java.lang.Thread r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter1: java.lang.Thread;

        r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread> = r2;

        return;
    }

    boolean casListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r1, r2, r6;
        java.lang.Throwable $r4, r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r5;

        r5 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        r2 := @parameter2: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        entermonitor r0;

     label01:
        r6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$700(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

     label02:
        if r6 != r1 goto label06;

     label03:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$702(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>(r0, r2);

     label04:
        exitmonitor r0;

     label05:
        return 1;

     label06:
        exitmonitor r0;

     label07:
        return 0;

     label08:
        $r4 := @caughtexception;

        r7 = $r4;

        goto label10;

     label09:
        throw r7;

     label10:
        exitmonitor r0;

        goto label09;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        java.lang.Object r1, r2, r6;
        java.lang.Throwable $r4, r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r5;

        r5 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        entermonitor r0;

     label01:
        r6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object access$300(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

     label02:
        if r6 != r1 goto label06;

     label03:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object access$302(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,java.lang.Object)>(r0, r2);

     label04:
        exitmonitor r0;

     label05:
        return 1;

     label06:
        exitmonitor r0;

     label07:
        return 0;

     label08:
        $r4 := @caughtexception;

        r7 = $r4;

        goto label10;

     label09:
        throw r7;

     label10:
        exitmonitor r0;

        goto label09;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1, r2, r6;
        java.lang.Throwable $r4, r7;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper r5;

        r5 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$SynchronizedHelper;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r1 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter2: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        entermonitor r0;

     label01:
        r6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$800(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r0);

     label02:
        if r6 != r1 goto label06;

     label03:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$802(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r0, r2);

     label04:
        exitmonitor r0;

     label05:
        return 1;

     label06:
        exitmonitor r0;

     label07:
        return 0;

     label08:
        $r4 := @caughtexception;

        r7 = $r4;

        goto label10;

     label09:
        throw r7;

     label10:
        exitmonitor r0;

        goto label09;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Trusted
androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture
    public final java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;
        java.lang.Object $r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        $r1 = specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object get()>();

        return $r1;
    }

    public final java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void <init>()>();

        return;
    }

    public final void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

        return;
    }

    public final boolean cancel(boolean)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;
        boolean z0, $z1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean cancel(boolean)>(z0);

        return $z1;
    }

    public final boolean isCancelled()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        $z0 = specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isCancelled()>();

        return $z0;
    }

    public final boolean isDone()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture;

        $z0 = specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: boolean isDone()>();

        return $z0;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0
    public static boolean m(sun.misc.Unsafe, java.lang.Object, long, java.lang.Object, java.lang.Object)
    {
        sun.misc.Unsafe r0;
        java.lang.Object r1, r2, r3, $r4;
        long l0;
        boolean $z0;

        r0 := @parameter0: sun.misc.Unsafe;

        r1 := @parameter1: java.lang.Object;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.Object;

        r3 := @parameter4: java.lang.Object;

     label1:
        $z0 = virtualinvoke r0.<sun.misc.Unsafe: boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object)>(r1, l0, r2, r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>(r1, l0);

        if $r4 == r2 goto label1;

        return 0;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1
    public volatile java.lang.Object run() throws java.lang.Exception
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 r0;
        sun.misc.Unsafe $r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1;

        $r1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: sun.misc.Unsafe run()>();

        return $r1;
    }

    public sun.misc.Unsafe run() throws java.lang.Exception
    {
        java.lang.Class r0;
        java.lang.reflect.Field[] r1;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r2, r6;
        sun.misc.Unsafe $r3;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 r4;
        java.lang.reflect.Field r5;
        java.lang.NoSuchFieldError r7;

        r4 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1;

        r0 = class "Lsun/misc/Unsafe;";

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r1[i1];

        virtualinvoke r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        r6 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r6);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r6);

        $r3 = (sun.misc.Unsafe) $r2;

        return $r3;

     label2:
        r7 = new java.lang.NoSuchFieldError;

        specialinvoke r7.<java.lang.NoSuchFieldError: void <init>(java.lang.String)>("the Unsafe");

        throw r7;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long LISTENERS_OFFSET>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITERS_OFFSET>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long VALUE_OFFSET>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_THREAD_OFFSET>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_NEXT_OFFSET>
    androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener gasListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r2, r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

     label1:
        r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener access$700(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r1);

        if r2 != r3 goto label2;

        return r3;

     label2:
        $z0 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)>(r1, r3, r2);

        if $z0 == 0 goto label1;

        return r3;
    }

    androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter gasWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r2, r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

     label1:
        r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter access$800(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture)>(r1);

        if r2 != r3 goto label2;

        return r3;

     label2:
        $z0 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r1, r3, r2);

        if $z0 == 0 goto label1;

        return r3;
    }

    static void <clinit>()
    {
        java.lang.reflect.Field $r0, $r1, $r2, $r4, $r6;
        long $l0, $l1, $l2, $l3, $l4;
        java.lang.Class $r3, $r5, r14;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r12, r16, r18, r20, r25, r26;
        java.lang.Object $r11;
        sun.misc.Unsafe r13;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 r15, r21;
        java.lang.RuntimeException r17, r19, r22, r23;
        java.security.PrivilegedActionException r24;

     label1:
        r13 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>();

     label2:
        r14 = class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture;";

        $r0 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("waiters");

        $l0 = virtualinvoke r13.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r0);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITERS_OFFSET> = $l0;

        $r1 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("listeners");

        $l1 = virtualinvoke r13.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r1);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long LISTENERS_OFFSET> = $l1;

        $r2 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("value");

        $l2 = virtualinvoke r13.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r2);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long VALUE_OFFSET> = $l2;

        $r3 = class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Waiter;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("thread");

        $l3 = virtualinvoke r13.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r4);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_THREAD_OFFSET> = $l3;

        $r5 = class "Landroidx/test/espresso/core/internal/deps/guava/util/concurrent/AbstractFuture$Waiter;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("next");

        $l4 = virtualinvoke r13.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r6);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_NEXT_OFFSET> = $l4;

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE> = r13;

        return;

     label3:
        $r10 := @caughtexception;

     label4:
        r21 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1;

        r15 = r21;

        specialinvoke r21.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: void <init>()>();

        $r11 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>(r15);

        r13 = (sun.misc.Unsafe) $r11;

        goto label2;

     label5:
        $r7 := @caughtexception;

        r16 = $r7;

        r22 = new java.lang.RuntimeException;

        r17 = r22;

        r24 = (java.security.PrivilegedActionException) r16;

        $r8 = virtualinvoke r24.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not initialize intrinsics", $r8);

        r25 = (java.lang.Throwable) r17;

        throw r25;

     label6:
        $r12 := @caughtexception;

        r18 = $r12;

        r23 = new java.lang.RuntimeException;

        r19 = r23;

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r18);

        r26 = (java.lang.Throwable) r19;

        throw r26;

     label7:
        $r9 := @caughtexception;

        r20 = $r9;

        throw r20;

        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label2 to label3 with label6;
        catch java.lang.RuntimeException from label2 to label3 with label7;
        catch java.security.PrivilegedActionException from label4 to label5 with label5;
    }

    private void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)>(null);

        return;
    }

    void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1 r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$1;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>()>();

        return;
    }

    void putNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1, r2;
        long $l0;
        sun.misc.Unsafe $r3;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        $r3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_NEXT_OFFSET>;

        virtualinvoke $r3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>(r1, $l0, r2);

        return;
    }

    void putThread(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, java.lang.Thread)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r1;
        java.lang.Thread r2;
        long $l0;
        sun.misc.Unsafe $r3;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r2 := @parameter1: java.lang.Thread;

        $r3 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_THREAD_OFFSET>;

        virtualinvoke $r3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>(r1, $l0, r2);

        return;
    }

    boolean casListeners(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener r2, r3;
        long $l0;
        sun.misc.Unsafe $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        r3 := @parameter2: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Listener;

        $r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long LISTENERS_OFFSET>;

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(sun.misc.Unsafe,java.lang.Object,long,java.lang.Object,java.lang.Object)>($r4, r1, $l0, r2, r3);

        return $z0;
    }

    boolean casValue(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        java.lang.Object r2, r3;
        long $l0;
        sun.misc.Unsafe $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long VALUE_OFFSET>;

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(sun.misc.Unsafe,java.lang.Object,long,java.lang.Object,java.lang.Object)>($r4, r1, $l0, r2, r3);

        return $z0;
    }

    boolean casWaiters(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter, androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r2, r3;
        long $l0;
        sun.misc.Unsafe $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r3 := @parameter2: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        $r4 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITERS_OFFSET>;

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$UnsafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(sun.misc.Unsafe,java.lang.Object,long,java.lang.Object,java.lang.Object)>($r4, r1, $l0, r2, r3);

        return $z0;
    }

androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread>
<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter next>
    static void <clinit>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r0;

        r0 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: void <init>(boolean)>(0);

        <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter TOMBSTONE> = r0;

        return;
    }

    void <init>()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r0;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r1;
        java.lang.Thread $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper access$200()>();

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void putThread(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)>(r0, $r2);

        return;
    }

    void <init>(boolean)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void setNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r0, r1;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper access$200()>();

        virtualinvoke $r2.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$AtomicHelper: void putNext(androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter,androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter)>(r0, r1);

        return;
    }

    void unpark()
    {
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter r0;
        java.lang.Thread r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter;

        r1 = r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread>;

        if r1 == null goto label1;

        r0.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread> = null;

        staticinvoke <java.util.concurrent.locks.LockSupport: void unpark(java.lang.Thread)>(r1);

        return;

     label1:
        return;
    }

