io.grpc.internal.InternalSubchannel
<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport activeTransport>
<io.grpc.internal.InternalSubchannel: java.util.List addressGroups>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex>
<io.grpc.internal.InternalSubchannel: java.lang.String authority>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback callback>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.CallTracer callsTracer>
<io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger channelLogger>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.ChannelTracer channelTracer>
<io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz channelz>
<io.grpc.internal.InternalSubchannel: com.google.common.base.Stopwatch connectingTimer>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.InUseStateAggregator inUseStateAggregator>
<io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId logId>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport pendingTransport>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy>
<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask>
<io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService scheduledExecutor>
<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle shutdownDueToUpdateTask>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport shutdownDueToUpdateTransport>
<io.grpc.internal.InternalSubchannel: io.grpc.Status shutdownReason>
<io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state>
<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>
<io.grpc.internal.InternalSubchannel: io.grpc.internal.ClientTransportFactory transportFactory>
<io.grpc.internal.InternalSubchannel: java.util.Collection transports>
<io.grpc.internal.InternalSubchannel: java.lang.String userAgent>
    void <init>(java.util.List, java.lang.String, java.lang.String, io.grpc.internal.BackoffPolicy$Provider, io.grpc.internal.ClientTransportFactory, java.util.concurrent.ScheduledExecutorService, com.google.common.base.Supplier, io.grpc.SynchronizationContext, io.grpc.internal.InternalSubchannel$Callback, io.grpc.InternalChannelz, io.grpc.internal.CallTracer, io.grpc.internal.ChannelTracer, io.grpc.InternalLogId, io.grpc.ChannelLogger)
    {
        io.grpc.internal.InternalSubchannel $r0;
        java.util.List $r1;
        java.lang.String $r2, $r3;
        io.grpc.internal.BackoffPolicy$Provider $r4;
        io.grpc.internal.ClientTransportFactory $r5;
        java.util.concurrent.ScheduledExecutorService $r6;
        com.google.common.base.Supplier $r7;
        io.grpc.SynchronizationContext $r8;
        io.grpc.internal.InternalSubchannel$Callback $r9;
        io.grpc.InternalChannelz $r10;
        io.grpc.internal.CallTracer $r11;
        io.grpc.internal.ChannelTracer $r12;
        io.grpc.InternalLogId $r13;
        io.grpc.ChannelLogger $r14;
        io.grpc.ConnectivityState $r15;
        io.grpc.ConnectivityStateInfo $r16;
        boolean $z0;
        java.lang.Object $r17;
        com.google.common.base.Stopwatch $r18;
        java.util.ArrayList r19;
        io.grpc.internal.InternalSubchannel$1 r20;
        io.grpc.internal.InternalSubchannel$Index r21;
        java.util.Collection r22;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: io.grpc.internal.BackoffPolicy$Provider;

        $r5 := @parameter4: io.grpc.internal.ClientTransportFactory;

        $r6 := @parameter5: java.util.concurrent.ScheduledExecutorService;

        $r7 := @parameter6: com.google.common.base.Supplier;

        $r8 := @parameter7: io.grpc.SynchronizationContext;

        $r9 := @parameter8: io.grpc.internal.InternalSubchannel$Callback;

        $r10 := @parameter9: io.grpc.InternalChannelz;

        $r11 := @parameter10: io.grpc.internal.CallTracer;

        $r12 := @parameter11: io.grpc.internal.ChannelTracer;

        $r13 := @parameter12: io.grpc.InternalLogId;

        $r14 := @parameter13: io.grpc.ChannelLogger;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        r22 = (java.util.Collection) r19;

        $r0.<io.grpc.internal.InternalSubchannel: java.util.Collection transports> = r22;

        r20 = new io.grpc.internal.InternalSubchannel$1;

        specialinvoke r20.<io.grpc.internal.InternalSubchannel$1: void <init>(io.grpc.internal.InternalSubchannel)>($r0);

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InUseStateAggregator inUseStateAggregator> = r20;

        $r15 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

        $r16 = staticinvoke <io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityStateInfo forNonError(io.grpc.ConnectivityState)>($r15);

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state> = $r16;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "addressGroups");

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "addressGroups is empty");

        staticinvoke <io.grpc.internal.InternalSubchannel: void checkListHasNoNulls(java.util.List,java.lang.String)>($r1, "addressGroups contains null entry");

        r19 = new java.util.ArrayList;

        r22 = (java.util.Collection) $r1;

        specialinvoke r19.<java.util.ArrayList: void <init>(java.util.Collection)>(r22);

        $r1 = (java.util.List) r19;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r0.<io.grpc.internal.InternalSubchannel: java.util.List addressGroups> = $r1;

        r21 = new io.grpc.internal.InternalSubchannel$Index;

        specialinvoke r21.<io.grpc.internal.InternalSubchannel$Index: void <init>(java.util.List)>($r1);

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex> = r21;

        $r0.<io.grpc.internal.InternalSubchannel: java.lang.String authority> = $r2;

        $r0.<io.grpc.internal.InternalSubchannel: java.lang.String userAgent> = $r3;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider> = $r4;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ClientTransportFactory transportFactory> = $r5;

        $r0.<io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService scheduledExecutor> = $r6;

        $r17 = interfaceinvoke $r7.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r18 = (com.google.common.base.Stopwatch) $r17;

        $r0.<io.grpc.internal.InternalSubchannel: com.google.common.base.Stopwatch connectingTimer> = $r18;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext> = $r8;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback callback> = $r9;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz channelz> = $r10;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.CallTracer callsTracer> = $r11;

        $r17 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r12, "channelTracer");

        $r12 = (io.grpc.internal.ChannelTracer) $r17;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ChannelTracer channelTracer> = $r12;

        $r17 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r13, "logId");

        $r13 = (io.grpc.InternalLogId) $r17;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId logId> = $r13;

        $r17 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r14, "channelLogger");

        $r14 = (io.grpc.ChannelLogger) $r17;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger channelLogger> = $r14;

        return;
    }

    static io.grpc.internal.InternalSubchannel$Callback access$000(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.InternalSubchannel$Callback r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback callback>;

        return r1;
    }

    static io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.ConnectivityStateInfo r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state>;

        return r1;
    }

    static io.grpc.internal.ManagedClientTransport access$1000(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ManagedClientTransport r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport activeTransport>;

        return r1;
    }

    static io.grpc.internal.ManagedClientTransport access$1002(io.grpc.internal.InternalSubchannel, io.grpc.internal.ManagedClientTransport)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ManagedClientTransport $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.internal.ManagedClientTransport;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport activeTransport> = $r1;

        return $r1;
    }

    static io.grpc.internal.ConnectionClientTransport access$1100(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ConnectionClientTransport r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport pendingTransport>;

        return r1;
    }

    static io.grpc.internal.ConnectionClientTransport access$1102(io.grpc.internal.InternalSubchannel, io.grpc.internal.ConnectionClientTransport)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ConnectionClientTransport $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.internal.ConnectionClientTransport;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport pendingTransport> = $r1;

        return $r1;
    }

    static io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext$ScheduledHandle r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle shutdownDueToUpdateTask>;

        return r1;
    }

    static io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.InternalSubchannel, io.grpc.SynchronizationContext$ScheduledHandle)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext$ScheduledHandle $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.SynchronizationContext$ScheduledHandle;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle shutdownDueToUpdateTask> = $r1;

        return $r1;
    }

    static io.grpc.internal.ManagedClientTransport access$1300(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ManagedClientTransport r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport shutdownDueToUpdateTransport>;

        return r1;
    }

    static io.grpc.internal.ManagedClientTransport access$1302(io.grpc.internal.InternalSubchannel, io.grpc.internal.ManagedClientTransport)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ManagedClientTransport $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.internal.ManagedClientTransport;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport shutdownDueToUpdateTransport> = $r1;

        return $r1;
    }

    static java.util.concurrent.ScheduledExecutorService access$1400(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        java.util.concurrent.ScheduledExecutorService r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService scheduledExecutor>;

        return r1;
    }

    static io.grpc.SynchronizationContext access$1500(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        return r1;
    }

    static io.grpc.Status access$1600(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.Status r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.Status shutdownReason>;

        return r1;
    }

    static io.grpc.Status access$1602(io.grpc.internal.InternalSubchannel, io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.Status $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.Status;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.Status shutdownReason> = $r1;

        return $r1;
    }

    static java.util.Collection access$1700(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        java.util.Collection r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: java.util.Collection transports>;

        return r1;
    }

    static void access$1800(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void handleTermination()>();

        return;
    }

    static io.grpc.internal.InUseStateAggregator access$1900(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.InUseStateAggregator r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        return r1;
    }

    static io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.ChannelLogger r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger channelLogger>;

        return r1;
    }

    static io.grpc.internal.BackoffPolicy access$2202(io.grpc.internal.InternalSubchannel, io.grpc.internal.BackoffPolicy)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.BackoffPolicy $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.internal.BackoffPolicy;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy> = $r1;

        return $r1;
    }

    static void access$2300(io.grpc.internal.InternalSubchannel, io.grpc.internal.ConnectionClientTransport, boolean)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ConnectionClientTransport $r1;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.internal.ConnectionClientTransport;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void handleTransportInUseState(io.grpc.internal.ConnectionClientTransport,boolean)>($r1, $z0);

        return;
    }

    static java.lang.String access$2400(io.grpc.internal.InternalSubchannel, io.grpc.Status)
    {
        io.grpc.Status $r0;
        java.lang.String $r1;
        io.grpc.internal.InternalSubchannel $r2;

        $r2 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r0 := @parameter1: io.grpc.Status;

        $r1 = specialinvoke $r2.<io.grpc.internal.InternalSubchannel: java.lang.String printShortStatus(io.grpc.Status)>($r0);

        return $r1;
    }

    static void access$2500(io.grpc.internal.InternalSubchannel, io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.Status $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.Status;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void scheduleBackoff(io.grpc.Status)>($r1);

        return;
    }

    static io.grpc.InternalChannelz access$2600(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.InternalChannelz r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz channelz>;

        return r1;
    }

    static void access$300(io.grpc.internal.InternalSubchannel, io.grpc.ConnectivityState)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.ConnectivityState $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.ConnectivityState;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void gotoNonErrorState(io.grpc.ConnectivityState)>($r1);

        return;
    }

    static void access$400(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void startNewTransport()>();

        return;
    }

    static io.grpc.SynchronizationContext$ScheduledHandle access$602(io.grpc.internal.InternalSubchannel, io.grpc.SynchronizationContext$ScheduledHandle)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext$ScheduledHandle $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.SynchronizationContext$ScheduledHandle;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask> = $r1;

        return $r1;
    }

    static void access$700(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void cancelReconnectTask()>();

        return;
    }

    static io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.InternalSubchannel$Index r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex>;

        return r1;
    }

    static java.util.List access$902(io.grpc.internal.InternalSubchannel, java.util.List)
    {
        io.grpc.internal.InternalSubchannel $r0;
        java.util.List $r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: java.util.List;

        $r0.<io.grpc.internal.InternalSubchannel: java.util.List addressGroups> = $r1;

        return $r1;
    }

    private void cancelReconnectTask()
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext $r1;
        io.grpc.SynchronizationContext$ScheduledHandle $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<io.grpc.SynchronizationContext$ScheduledHandle: void cancel()>();

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask> = null;

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy> = null;

     label1:
        return;
    }

    private static void checkListHasNoNulls(java.util.List, java.lang.String)
    {
        java.lang.String $r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, $r0);

        goto label1;

     label2:
        return;
    }

    private void gotoNonErrorState(io.grpc.ConnectivityState)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext $r1;
        io.grpc.ConnectivityStateInfo $r2;
        io.grpc.ConnectivityState $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r3 := @parameter0: io.grpc.ConnectivityState;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = staticinvoke <io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityStateInfo forNonError(io.grpc.ConnectivityState)>($r3);

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void gotoState(io.grpc.ConnectivityStateInfo)>($r2);

        return;
    }

    private void gotoState(io.grpc.ConnectivityStateInfo)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.ConnectivityStateInfo $r1, $r3;
        io.grpc.SynchronizationContext $r2;
        io.grpc.ConnectivityState $r4, $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        io.grpc.internal.InternalSubchannel$Callback $r8;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter0: io.grpc.ConnectivityStateInfo;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r3 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state>;

        $r4 = virtualinvoke $r3.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r5 = virtualinvoke $r1.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        if $r4 == $r5 goto label3;

        $r3 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state>;

        $r4 = virtualinvoke $r3.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r5 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        if $r4 == $r5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot transition out of SHUTDOWN to ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, $r7);

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state> = $r1;

        $r8 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback callback>;

        virtualinvoke $r8.<io.grpc.internal.InternalSubchannel$Callback: void onStateChange(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityStateInfo)>($r0, $r1);

     label3:
        return;
    }

    private void handleTermination()
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext $r1;
        io.grpc.internal.InternalSubchannel$6 $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        $r2 = new io.grpc.internal.InternalSubchannel$6;

        specialinvoke $r2.<io.grpc.internal.InternalSubchannel$6: void <init>(io.grpc.internal.InternalSubchannel)>($r0);

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r2);

        return;
    }

    private void handleTransportInUseState(io.grpc.internal.ConnectionClientTransport, boolean)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.ConnectionClientTransport $r1;
        boolean $z0;
        io.grpc.SynchronizationContext $r2;
        io.grpc.internal.InternalSubchannel$7 $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter0: io.grpc.internal.ConnectionClientTransport;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        $r3 = new io.grpc.internal.InternalSubchannel$7;

        specialinvoke $r3.<io.grpc.internal.InternalSubchannel$7: void <init>(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,boolean)>($r0, $r1, $z0);

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r3);

        return;
    }

    private java.lang.String printShortStatus(io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel $r0;
        java.lang.StringBuilder $r1, $r5;
        io.grpc.Status $r2;
        io.grpc.Status$Code $r3;
        java.lang.String $r4;
        java.lang.Throwable $r6;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r2 := @parameter0: io.grpc.Status;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<io.grpc.Status: io.grpc.Status$Code getCode()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<io.grpc.Status: java.lang.String getDescription()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke $r2.<io.grpc.Status: java.lang.String getDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label1:
        $r6 = virtualinvoke $r2.<io.grpc.Status: java.lang.Throwable getCause()>();

        if $r6 == null goto label2;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke $r2.<io.grpc.Status: java.lang.Throwable getCause()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void scheduleBackoff(io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.ChannelLogger$ChannelLogLevel $r1;
        io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff $r2;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.ScheduledExecutorService $r4;
        io.grpc.Status $r5;
        io.grpc.SynchronizationContext $r6;
        io.grpc.ConnectivityStateInfo $r7;
        io.grpc.internal.BackoffPolicy $r8;
        io.grpc.internal.BackoffPolicy$Provider $r9;
        com.google.common.base.Stopwatch $r10;
        io.grpc.ChannelLogger $r11;
        java.lang.Object[] $r12;
        java.lang.String $r13;
        boolean $z0;
        java.lang.Long $r14;
        io.grpc.SynchronizationContext$ScheduledHandle $r15;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r5 := @parameter0: io.grpc.Status;

        $r6 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r6.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r7 = staticinvoke <io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityStateInfo forTransientFailure(io.grpc.Status)>($r5);

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel: void gotoState(io.grpc.ConnectivityStateInfo)>($r7);

        $r8 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy>;

        if $r8 != null goto label1;

        $r9 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider>;

        $r8 = interfaceinvoke $r9.<io.grpc.internal.BackoffPolicy$Provider: io.grpc.internal.BackoffPolicy get()>();

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy> = $r8;

     label1:
        $r8 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy>;

        $l0 = interfaceinvoke $r8.<io.grpc.internal.BackoffPolicy: long nextBackoffNanos()>();

        $r10 = $r0.<io.grpc.internal.InternalSubchannel: com.google.common.base.Stopwatch connectingTimer>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = virtualinvoke $r10.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r3);

        $l0 = $l0 - $l1;

        $r11 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger channelLogger>;

        $r1 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r12 = newarray (java.lang.Object)[2];

        $r13 = specialinvoke $r0.<io.grpc.internal.InternalSubchannel: java.lang.String printShortStatus(io.grpc.Status)>($r5);

        $z0 = 0;

        $r12[0] = $r13;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r12[1] = $r14;

        virtualinvoke $r11.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r1, "TRANSIENT_FAILURE ({0}). Will reconnect after {1} ns", $r12);

        $r15 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask>;

        if $r15 != null goto label2;

        $z0 = 1;

        goto label2;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "previous reconnectTask is not done");

        $r6 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        $r2 = new io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff;

        specialinvoke $r2.<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: void <init>(io.grpc.internal.InternalSubchannel)>($r0);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r4 = $r0.<io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService scheduledExecutor>;

        $r15 = virtualinvoke $r6.<io.grpc.SynchronizationContext: io.grpc.SynchronizationContext$ScheduledHandle schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>($r2, $l0, $r3, $r4);

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask> = $r15;

        return;
    }

    private void startNewTransport()
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.SynchronizationContext $r1;
        io.grpc.SynchronizationContext$ScheduledHandle $r2;
        boolean $z0;
        io.grpc.internal.InternalSubchannel$Index $r3;
        com.google.common.base.Stopwatch $r4;
        java.net.SocketAddress $r5;
        java.lang.Object $r6, $r11;
        io.grpc.HttpConnectProxiedSocketAddress $r7;
        java.net.InetSocketAddress $r8;
        io.grpc.Attributes $r9;
        io.grpc.Attributes$Key $r10;
        java.lang.String $r12;
        io.grpc.internal.ClientTransportFactory$ClientTransportOptions $r13, r26;
        io.grpc.internal.InternalSubchannel$TransportLogger $r14, r27;
        io.grpc.InternalLogId $r15;
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r16, r28;
        io.grpc.internal.ClientTransportFactory $r17;
        io.grpc.internal.ConnectionClientTransport $r18;
        io.grpc.internal.CallTracer $r19;
        io.grpc.InternalChannelz $r20;
        java.util.Collection $r21;
        java.lang.Runnable $r22;
        io.grpc.ChannelLogger $r23;
        io.grpc.ChannelLogger$ChannelLogLevel $r24;
        java.lang.Object[] $r25;
        io.grpc.internal.InternalSubchannel$TransportListener r29;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Should have no reconnectTask scheduled");

        $r3 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex>;

        $z0 = virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: boolean isAtBeginning()>();

        if $z0 == 0 goto label3;

        $r4 = $r0.<io.grpc.internal.InternalSubchannel: com.google.common.base.Stopwatch connectingTimer>;

        $r4 = virtualinvoke $r4.<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch reset()>();

        virtualinvoke $r4.<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch start()>();

     label3:
        $r3 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex>;

        $r5 = virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: java.net.SocketAddress getCurrentAddress()>();

        $r6 = $r5;

        $z0 = $r5 instanceof io.grpc.HttpConnectProxiedSocketAddress;

        if $z0 == 0 goto label4;

        $r7 = (io.grpc.HttpConnectProxiedSocketAddress) $r5;

        $r8 = virtualinvoke $r7.<io.grpc.HttpConnectProxiedSocketAddress: java.net.InetSocketAddress getTargetAddress()>();

        $r6 = $r8;

        goto label5;

     label4:
        $r7 = null;

     label5:
        $r3 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex>;

        $r9 = virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: io.grpc.Attributes getCurrentEagAttributes()>();

        $r10 = <io.grpc.EquivalentAddressGroup: io.grpc.Attributes$Key ATTR_AUTHORITY_OVERRIDE>;

        $r11 = virtualinvoke $r9.<io.grpc.Attributes: java.lang.Object get(io.grpc.Attributes$Key)>($r10);

        $r12 = (java.lang.String) $r11;

        r26 = new io.grpc.internal.ClientTransportFactory$ClientTransportOptions;

        $r13 = r26;

        specialinvoke r26.<io.grpc.internal.ClientTransportFactory$ClientTransportOptions: void <init>()>();

        if $r12 != null goto label6;

        $r12 = $r0.<io.grpc.internal.InternalSubchannel: java.lang.String authority>;

     label6:
        $r13 = virtualinvoke $r13.<io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setAuthority(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setEagAttributes(io.grpc.Attributes)>($r9);

        $r12 = $r0.<io.grpc.internal.InternalSubchannel: java.lang.String userAgent>;

        $r13 = virtualinvoke $r13.<io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setUserAgent(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setHttpConnectProxiedSocketAddress(io.grpc.HttpConnectProxiedSocketAddress)>($r7);

        r27 = new io.grpc.internal.InternalSubchannel$TransportLogger;

        $r14 = r27;

        specialinvoke r27.<io.grpc.internal.InternalSubchannel$TransportLogger: void <init>()>();

        $r15 = virtualinvoke $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId getLogId()>();

        $r14.<io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId> = $r15;

        r28 = new io.grpc.internal.InternalSubchannel$CallTracingTransport;

        $r16 = r28;

        $r17 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ClientTransportFactory transportFactory>;

        $r5 = (java.net.SocketAddress) $r6;

        $r18 = interfaceinvoke $r17.<io.grpc.internal.ClientTransportFactory: io.grpc.internal.ConnectionClientTransport newClientTransport(java.net.SocketAddress,io.grpc.internal.ClientTransportFactory$ClientTransportOptions,io.grpc.ChannelLogger)>($r5, $r13, $r14);

        $r19 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.CallTracer callsTracer>;

        specialinvoke r28.<io.grpc.internal.InternalSubchannel$CallTracingTransport: void <init>(io.grpc.internal.ConnectionClientTransport,io.grpc.internal.CallTracer,io.grpc.internal.InternalSubchannel$1)>($r18, $r19, null);

        $r15 = interfaceinvoke $r16.<io.grpc.internal.ConnectionClientTransport: io.grpc.InternalLogId getLogId()>();

        $r14.<io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId> = $r15;

        $r20 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz channelz>;

        virtualinvoke $r20.<io.grpc.InternalChannelz: void addClientSocket(io.grpc.InternalInstrumented)>($r16);

        $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport pendingTransport> = $r16;

        $r21 = $r0.<io.grpc.internal.InternalSubchannel: java.util.Collection transports>;

        interfaceinvoke $r21.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        r29 = new io.grpc.internal.InternalSubchannel$TransportListener;

        $r5 = (java.net.SocketAddress) $r6;

        specialinvoke r29.<io.grpc.internal.InternalSubchannel$TransportListener: void <init>(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,java.net.SocketAddress)>($r0, $r16, $r5);

        $r22 = interfaceinvoke $r16.<io.grpc.internal.ConnectionClientTransport: java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener)>(r29);

        if $r22 == null goto label7;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)>($r22);

     label7:
        $r23 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger channelLogger>;

        $r24 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r25 = newarray (java.lang.Object)[1];

        $r15 = $r14.<io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId>;

        $r25[0] = $r15;

        virtualinvoke $r23.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r24, "Started transport {0}", $r25);

        return;
    }

    public io.grpc.InternalLogId getLogId()
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.InternalLogId r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        r1 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId logId>;

        return r1;
    }

    public io.grpc.internal.ClientTransport obtainActiveTransport()
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.internal.InternalSubchannel$2 $r1;
        io.grpc.internal.ManagedClientTransport $r2;
        io.grpc.SynchronizationContext $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport activeTransport>;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.InternalSubchannel$2;

        specialinvoke $r1.<io.grpc.internal.InternalSubchannel$2: void <init>(io.grpc.internal.InternalSubchannel)>($r0);

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return null;
    }

    public void shutdown(io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.Status $r1;
        io.grpc.SynchronizationContext $r2;
        io.grpc.internal.InternalSubchannel$5 $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter0: io.grpc.Status;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        $r3 = new io.grpc.internal.InternalSubchannel$5;

        specialinvoke $r3.<io.grpc.internal.InternalSubchannel$5: void <init>(io.grpc.internal.InternalSubchannel,io.grpc.Status)>($r0, $r1);

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void shutdownNow(io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel $r0;
        io.grpc.Status $r1;
        io.grpc.SynchronizationContext $r2;
        io.grpc.internal.InternalSubchannel$8 $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter0: io.grpc.Status;

        virtualinvoke $r0.<io.grpc.internal.InternalSubchannel: void shutdown(io.grpc.Status)>($r1);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        $r3 = new io.grpc.internal.InternalSubchannel$8;

        specialinvoke $r3.<io.grpc.internal.InternalSubchannel$8: void <init>(io.grpc.internal.InternalSubchannel,io.grpc.Status)>($r0, $r1);

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.InternalSubchannel $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        io.grpc.InternalLogId $r2;
        long $l0;
        java.util.List $r3;
        java.lang.String $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>($r0);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId logId>;

        $l0 = virtualinvoke $r2.<io.grpc.InternalLogId: long getId()>();

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long)>("logId", $l0);

        $r3 = $r0.<io.grpc.internal.InternalSubchannel: java.util.List addressGroups>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("addressGroups", $r3);

        $r4 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r4;
    }

    public void updateAddresses(java.util.List)
    {
        io.grpc.internal.InternalSubchannel $r0;
        java.util.List $r1;
        boolean $z0;
        io.grpc.SynchronizationContext $r2;
        java.util.ArrayList r3;
        io.grpc.internal.InternalSubchannel$4 r4;
        java.util.Collection r5;

        $r0 := @this: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter0: java.util.List;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "newAddressGroups");

        staticinvoke <io.grpc.internal.InternalSubchannel: void checkListHasNoNulls(java.util.List,java.lang.String)>($r1, "newAddressGroups contains null entry");

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "newAddressGroups is empty");

        r3 = new java.util.ArrayList;

        r5 = (java.util.Collection) $r1;

        specialinvoke r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        $r1 = (java.util.List) r3;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext>;

        r4 = new io.grpc.internal.InternalSubchannel$4;

        specialinvoke r4.<io.grpc.internal.InternalSubchannel$4: void <init>(io.grpc.internal.InternalSubchannel,java.util.List)>($r0, $r1);

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>(r4);

        return;
    }

io.grpc.internal.InternalSubchannel$1
<io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0>
    void <init>(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$1 $r0;
        io.grpc.internal.InternalSubchannel $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$1;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r0.<io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0> = $r1;

        specialinvoke $r0.<io.grpc.internal.InUseStateAggregator: void <init>()>();

        return;
    }

    protected void handleInUse()
    {
        io.grpc.internal.InternalSubchannel$1 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.InternalSubchannel$Callback $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback access$000(io.grpc.internal.InternalSubchannel)>($r1);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0>;

        virtualinvoke $r2.<io.grpc.internal.InternalSubchannel$Callback: void onInUse(io.grpc.internal.InternalSubchannel)>($r1);

        return;
    }

    protected void handleNotInUse()
    {
        io.grpc.internal.InternalSubchannel$1 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.InternalSubchannel$Callback $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback access$000(io.grpc.internal.InternalSubchannel)>($r1);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0>;

        virtualinvoke $r2.<io.grpc.internal.InternalSubchannel$Callback: void onNotInUse(io.grpc.internal.InternalSubchannel)>($r1);

        return;
    }

io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff
<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0>
    void <init>(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff $r0;
        io.grpc.internal.InternalSubchannel $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r0.<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff $r0;
        io.grpc.ChannelLogger $r1;
        io.grpc.internal.InternalSubchannel $r2;
        io.grpc.ChannelLogger$ChannelLogLevel $r3;
        io.grpc.ConnectivityState $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$602(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)>($r2, null);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0>;

        $r1 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)>($r2);

        $r3 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r1.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r3, "CONNECTING after backoff");

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0>;

        $r4 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)>($r2, $r4);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$400(io.grpc.internal.InternalSubchannel)>($r2);

        return;
    }

io.grpc.internal.InternalSubchannel$2
<io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0>
    void <init>(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$2 $r0;
        io.grpc.internal.InternalSubchannel $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$2;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r0.<io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$2 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.ConnectivityStateInfo $r2;
        io.grpc.ConnectivityState $r3, $r4;
        io.grpc.ChannelLogger $r5;
        io.grpc.ChannelLogger$ChannelLogLevel $r6;

        $r0 := @this: io.grpc.internal.InternalSubchannel$2;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r1);

        $r3 = virtualinvoke $r2.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r4 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

        if $r3 != $r4 goto label1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0>;

        $r5 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)>($r1);

        $r6 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r5.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r6, "CONNECTING as requested");

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)>($r1, $r3);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$400(io.grpc.internal.InternalSubchannel)>($r1);

     label1:
        return;
    }

io.grpc.internal.InternalSubchannel$4$1
<io.grpc.internal.InternalSubchannel$4$1: io.grpc.internal.InternalSubchannel$4 this$1>
    void <init>(io.grpc.internal.InternalSubchannel$4)
    {
        io.grpc.internal.InternalSubchannel$4$1 $r0;
        io.grpc.internal.InternalSubchannel$4 $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$4$1;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel$4;

        $r0.<io.grpc.internal.InternalSubchannel$4$1: io.grpc.internal.InternalSubchannel$4 this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$4$1 $r0;
        io.grpc.internal.InternalSubchannel$4 $r1;
        io.grpc.internal.InternalSubchannel $r2;
        io.grpc.internal.ManagedClientTransport $r3;
        io.grpc.Status $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$4$1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$4$1: io.grpc.internal.InternalSubchannel$4 this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1300(io.grpc.internal.InternalSubchannel)>($r2);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$4$1: io.grpc.internal.InternalSubchannel$4 this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)>($r2, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$4$1: io.grpc.internal.InternalSubchannel$4 this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1302(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r2, null);

        $r4 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r4 = virtualinvoke $r4.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("InternalSubchannel closed transport due to address change");

        interfaceinvoke $r3.<io.grpc.internal.ManagedClientTransport: void shutdown(io.grpc.Status)>($r4);

        return;
    }

io.grpc.internal.InternalSubchannel$4
<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>
<io.grpc.internal.InternalSubchannel$4: java.util.List val$newImmutableAddressGroups>
    void <init>(io.grpc.internal.InternalSubchannel, java.util.List)
    {
        io.grpc.internal.InternalSubchannel$4 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        java.util.List $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$4;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 := @parameter1: java.util.List;

        $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$4: java.util.List val$newImmutableAddressGroups> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$4 $r0;
        java.util.concurrent.TimeUnit $r1;
        io.grpc.internal.InternalSubchannel $r2, $r16;
        io.grpc.internal.InternalSubchannel$Index $r3;
        java.net.SocketAddress $r4;
        java.util.List $r5;
        io.grpc.ConnectivityStateInfo $r6;
        io.grpc.ConnectivityState $r7, $r8;
        boolean $z0;
        io.grpc.internal.ManagedClientTransport $r9, $r13;
        io.grpc.internal.ConnectionClientTransport $r10;
        io.grpc.Status $r11;
        io.grpc.SynchronizationContext$ScheduledHandle $r12;
        io.grpc.SynchronizationContext $r14;
        io.grpc.internal.InternalSubchannel$4$1 $r15;
        java.util.concurrent.ScheduledExecutorService $r17;

        $r0 := @this: io.grpc.internal.InternalSubchannel$4;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        $r4 = virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: java.net.SocketAddress getCurrentAddress()>();

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$4: java.util.List val$newImmutableAddressGroups>;

        virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: void updateGroups(java.util.List)>($r5);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$4: java.util.List val$newImmutableAddressGroups>;

        staticinvoke <io.grpc.internal.InternalSubchannel: java.util.List access$902(io.grpc.internal.InternalSubchannel,java.util.List)>($r2, $r5);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r6 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r7 = virtualinvoke $r6.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r8 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState READY>;

        if $r7 == $r8 goto label1;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r6 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r7 = virtualinvoke $r6.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r8 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

        if $r7 != $r8 goto label3;

     label1:
        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        $z0 = virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: boolean seekTo(java.net.SocketAddress)>($r4);

        if $z0 != 0 goto label3;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r6 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r7 = virtualinvoke $r6.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r8 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState READY>;

        if $r7 != $r8 goto label2;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r9 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1000(io.grpc.internal.InternalSubchannel)>($r2);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1002(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r2, null);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: void reset()>();

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r7 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)>($r2, $r7);

        goto label4;

     label2:
        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r10 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1100(io.grpc.internal.InternalSubchannel)>($r2);

        $r11 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r11 = virtualinvoke $r11.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("InternalSubchannel closed pending transport due to address change");

        interfaceinvoke $r10.<io.grpc.internal.ConnectionClientTransport: void shutdown(io.grpc.Status)>($r11);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1102(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport)>($r2, null);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        virtualinvoke $r3.<io.grpc.internal.InternalSubchannel$Index: void reset()>();

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$400(io.grpc.internal.InternalSubchannel)>($r2);

     label3:
        $r9 = null;

     label4:
        if $r9 == null goto label6;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r12 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.InternalSubchannel)>($r2);

        if $r12 == null goto label5;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r13 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1300(io.grpc.internal.InternalSubchannel)>($r2);

        $r11 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r11 = virtualinvoke $r11.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("InternalSubchannel closed transport early due to address change");

        interfaceinvoke $r13.<io.grpc.internal.ManagedClientTransport: void shutdown(io.grpc.Status)>($r11);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r12 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.InternalSubchannel)>($r2);

        virtualinvoke $r12.<io.grpc.SynchronizationContext$ScheduledHandle: void cancel()>();

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)>($r2, null);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1302(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r2, null);

     label5:
        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1302(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r2, $r9);

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r14 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext access$1500(io.grpc.internal.InternalSubchannel)>($r2);

        $r15 = new io.grpc.internal.InternalSubchannel$4$1;

        specialinvoke $r15.<io.grpc.internal.InternalSubchannel$4$1: void <init>(io.grpc.internal.InternalSubchannel$4)>($r0);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r16 = $r0.<io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0>;

        $r17 = staticinvoke <io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService access$1400(io.grpc.internal.InternalSubchannel)>($r16);

        $r12 = virtualinvoke $r14.<io.grpc.SynchronizationContext: io.grpc.SynchronizationContext$ScheduledHandle schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>($r15, 5L, $r1, $r17);

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)>($r2, $r12);

     label6:
        return;
    }

io.grpc.internal.InternalSubchannel$5
<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>
<io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason>
    void <init>(io.grpc.internal.InternalSubchannel, io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel$5 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.Status $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$5;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 := @parameter1: io.grpc.Status;

        $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$5 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.ConnectivityStateInfo $r2;
        io.grpc.ConnectivityState $r3, $r4;
        io.grpc.Status $r5;
        io.grpc.internal.ManagedClientTransport $r6, $r11;
        io.grpc.internal.ConnectionClientTransport $r7;
        io.grpc.internal.InternalSubchannel$Index $r8;
        java.util.Collection $r9;
        boolean $z0;
        io.grpc.SynchronizationContext$ScheduledHandle $r10;

        $r0 := @this: io.grpc.internal.InternalSubchannel$5;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r1);

        $r3 = virtualinvoke $r2.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r4 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        if $r3 != $r4 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.Status access$1602(io.grpc.internal.InternalSubchannel,io.grpc.Status)>($r1, $r5);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r6 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1000(io.grpc.internal.InternalSubchannel)>($r1);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r7 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1100(io.grpc.internal.InternalSubchannel)>($r1);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1002(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r1, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1102(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport)>($r1, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)>($r1, $r3);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r1);

        virtualinvoke $r8.<io.grpc.internal.InternalSubchannel$Index: void reset()>();

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r9 = staticinvoke <io.grpc.internal.InternalSubchannel: java.util.Collection access$1700(io.grpc.internal.InternalSubchannel)>($r1);

        $z0 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$1800(io.grpc.internal.InternalSubchannel)>($r1);

     label2:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$700(io.grpc.internal.InternalSubchannel)>($r1);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r10 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.InternalSubchannel)>($r1);

        if $r10 == null goto label3;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r10 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.InternalSubchannel)>($r1);

        virtualinvoke $r10.<io.grpc.SynchronizationContext$ScheduledHandle: void cancel()>();

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        $r11 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1300(io.grpc.internal.InternalSubchannel)>($r1);

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason>;

        interfaceinvoke $r11.<io.grpc.internal.ManagedClientTransport: void shutdown(io.grpc.Status)>($r5);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)>($r1, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1302(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r1, null);

     label3:
        if $r6 == null goto label4;

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason>;

        interfaceinvoke $r6.<io.grpc.internal.ManagedClientTransport: void shutdown(io.grpc.Status)>($r5);

     label4:
        if $r7 == null goto label5;

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason>;

        interfaceinvoke $r7.<io.grpc.internal.ConnectionClientTransport: void shutdown(io.grpc.Status)>($r5);

     label5:
        return;
    }

io.grpc.internal.InternalSubchannel$6
<io.grpc.internal.InternalSubchannel$6: io.grpc.internal.InternalSubchannel this$0>
    void <init>(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$6 $r0;
        io.grpc.internal.InternalSubchannel $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$6;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r0.<io.grpc.internal.InternalSubchannel$6: io.grpc.internal.InternalSubchannel this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$6 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.ChannelLogger $r2;
        io.grpc.ChannelLogger$ChannelLogLevel $r3;
        io.grpc.internal.InternalSubchannel$Callback $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$6;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$6: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)>($r1);

        $r3 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r2.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r3, "Terminated");

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$6: io.grpc.internal.InternalSubchannel this$0>;

        $r4 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback access$000(io.grpc.internal.InternalSubchannel)>($r1);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$6: io.grpc.internal.InternalSubchannel this$0>;

        virtualinvoke $r4.<io.grpc.internal.InternalSubchannel$Callback: void onTerminated(io.grpc.internal.InternalSubchannel)>($r1);

        return;
    }

io.grpc.internal.InternalSubchannel$7
<io.grpc.internal.InternalSubchannel$7: io.grpc.internal.InternalSubchannel this$0>
<io.grpc.internal.InternalSubchannel$7: boolean val$inUse>
<io.grpc.internal.InternalSubchannel$7: io.grpc.internal.ConnectionClientTransport val$transport>
    void <init>(io.grpc.internal.InternalSubchannel, io.grpc.internal.ConnectionClientTransport, boolean)
    {
        io.grpc.internal.InternalSubchannel$7 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.ConnectionClientTransport $r2;
        boolean $z0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$7;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 := @parameter1: io.grpc.internal.ConnectionClientTransport;

        $z0 := @parameter2: boolean;

        $r0.<io.grpc.internal.InternalSubchannel$7: io.grpc.internal.InternalSubchannel this$0> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$7: io.grpc.internal.ConnectionClientTransport val$transport> = $r2;

        $r0.<io.grpc.internal.InternalSubchannel$7: boolean val$inUse> = $z0;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$7 $r0;
        io.grpc.internal.ConnectionClientTransport $r1;
        boolean $z0;
        io.grpc.internal.InUseStateAggregator $r2;
        io.grpc.internal.InternalSubchannel $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel$7;

        $r3 = $r0.<io.grpc.internal.InternalSubchannel$7: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InUseStateAggregator access$1900(io.grpc.internal.InternalSubchannel)>($r3);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$7: io.grpc.internal.ConnectionClientTransport val$transport>;

        $z0 = $r0.<io.grpc.internal.InternalSubchannel$7: boolean val$inUse>;

        virtualinvoke $r2.<io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)>($r1, $z0);

        return;
    }

io.grpc.internal.InternalSubchannel$8
<io.grpc.internal.InternalSubchannel$8: io.grpc.internal.InternalSubchannel this$0>
<io.grpc.internal.InternalSubchannel$8: io.grpc.Status val$reason>
    void <init>(io.grpc.internal.InternalSubchannel, io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel$8 $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.Status $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$8;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 := @parameter1: io.grpc.Status;

        $r0.<io.grpc.internal.InternalSubchannel$8: io.grpc.internal.InternalSubchannel this$0> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$8: io.grpc.Status val$reason> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$8 $r0;
        io.grpc.Status $r1;
        io.grpc.internal.InternalSubchannel $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        io.grpc.internal.ManagedClientTransport $r6;
        java.util.ArrayList r7;

        $r0 := @this: io.grpc.internal.InternalSubchannel$8;

        r7 = new java.util.ArrayList;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$8: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: java.util.Collection access$1700(io.grpc.internal.InternalSubchannel)>($r2);

        specialinvoke r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r3 = (java.util.Collection) r7;

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (io.grpc.internal.ManagedClientTransport) $r5;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$8: io.grpc.Status val$reason>;

        interfaceinvoke $r6.<io.grpc.internal.ManagedClientTransport: void shutdownNow(io.grpc.Status)>($r1);

        goto label1;

     label2:
        return;
    }

io.grpc.internal.InternalSubchannel$Callback
    void <init>()
    {
        io.grpc.internal.InternalSubchannel$Callback $r0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Callback;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void onInUse(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$Callback $r0;
        io.grpc.internal.InternalSubchannel $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Callback;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        return;
    }

    void onNotInUse(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$Callback $r0;
        io.grpc.internal.InternalSubchannel $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Callback;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        return;
    }

    void onStateChange(io.grpc.internal.InternalSubchannel, io.grpc.ConnectivityStateInfo)
    {
        io.grpc.internal.InternalSubchannel$Callback $r0;
        io.grpc.ConnectivityStateInfo $r1;
        io.grpc.internal.InternalSubchannel $r2;
        java.lang.NullPointerException r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Callback;

        $r2 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.ConnectivityStateInfo;

        r3 = new java.lang.NullPointerException;

        specialinvoke r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r3;
    }

    void onTerminated(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.InternalSubchannel$Callback $r0;
        io.grpc.internal.InternalSubchannel $r1;
        java.lang.NullPointerException r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Callback;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r2;
    }

io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1
<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.InternalSubchannel$CallTracingTransport$1 this$1>
<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.ClientStreamListener val$listener>
    void <init>(io.grpc.internal.InternalSubchannel$CallTracingTransport$1, io.grpc.internal.ClientStreamListener)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1 $r0;
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1 $r1;
        io.grpc.internal.ClientStreamListener $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel$CallTracingTransport$1;

        $r2 := @parameter1: io.grpc.internal.ClientStreamListener;

        $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.InternalSubchannel$CallTracingTransport$1 this$1> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.ClientStreamListener val$listener> = $r2;

        specialinvoke $r0.<io.grpc.internal.ForwardingClientStreamListener: void <init>()>();

        return;
    }

    public void closed(io.grpc.Status, io.grpc.internal.ClientStreamListener$RpcProgress, io.grpc.Metadata)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1 $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ClientStreamListener$RpcProgress $r2;
        io.grpc.Metadata $r3;
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1 $r4;
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r5;
        io.grpc.internal.CallTracer $r6;
        boolean $z0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1;

        $r1 := @parameter0: io.grpc.Status;

        $r2 := @parameter1: io.grpc.internal.ClientStreamListener$RpcProgress;

        $r3 := @parameter2: io.grpc.Metadata;

        $r4 = $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.InternalSubchannel$CallTracingTransport$1 this$1>;

        $r5 = $r4.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.InternalSubchannel$CallTracingTransport this$0>;

        $r6 = staticinvoke <io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer access$2700(io.grpc.internal.InternalSubchannel$CallTracingTransport)>($r5);

        $z0 = virtualinvoke $r1.<io.grpc.Status: boolean isOk()>();

        virtualinvoke $r6.<io.grpc.internal.CallTracer: void reportCallEnded(boolean)>($z0);

        specialinvoke $r0.<io.grpc.internal.ForwardingClientStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)>($r1, $r2, $r3);

        return;
    }

    protected io.grpc.internal.ClientStreamListener delegate()
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1 $r0;
        io.grpc.internal.ClientStreamListener r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1;

        r1 = $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.ClientStreamListener val$listener>;

        return r1;
    }

io.grpc.internal.InternalSubchannel$CallTracingTransport$1
<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.InternalSubchannel$CallTracingTransport this$0>
<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.ClientStream val$streamDelegate>
    void <init>(io.grpc.internal.InternalSubchannel$CallTracingTransport, io.grpc.internal.ClientStream)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1 $r0;
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r1;
        io.grpc.internal.ClientStream $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport$1;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel$CallTracingTransport;

        $r2 := @parameter1: io.grpc.internal.ClientStream;

        $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.InternalSubchannel$CallTracingTransport this$0> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.ClientStream val$streamDelegate> = $r2;

        specialinvoke $r0.<io.grpc.internal.ForwardingClientStream: void <init>()>();

        return;
    }

    protected io.grpc.internal.ClientStream delegate()
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1 $r0;
        io.grpc.internal.ClientStream r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport$1;

        r1 = $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.ClientStream val$streamDelegate>;

        return r1;
    }

    public void start(io.grpc.internal.ClientStreamListener)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1 $r0;
        io.grpc.internal.ClientStreamListener $r1;
        io.grpc.internal.CallTracer $r2;
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r3;
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1 $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport$1;

        $r1 := @parameter0: io.grpc.internal.ClientStreamListener;

        $r3 = $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.InternalSubchannel$CallTracingTransport this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer access$2700(io.grpc.internal.InternalSubchannel$CallTracingTransport)>($r3);

        virtualinvoke $r2.<io.grpc.internal.CallTracer: void reportCallStarted()>();

        $r4 = new io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1;

        specialinvoke $r4.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: void <init>(io.grpc.internal.InternalSubchannel$CallTracingTransport$1,io.grpc.internal.ClientStreamListener)>($r0, $r1);

        specialinvoke $r0.<io.grpc.internal.ForwardingClientStream: void start(io.grpc.internal.ClientStreamListener)>($r4);

        return;
    }

io.grpc.internal.InternalSubchannel$CallTracingTransport
<io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer callTracer>
<io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.ConnectionClientTransport delegate>
    private void <init>(io.grpc.internal.ConnectionClientTransport, io.grpc.internal.CallTracer)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r0;
        io.grpc.internal.ConnectionClientTransport $r1;
        io.grpc.internal.CallTracer $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport;

        $r1 := @parameter0: io.grpc.internal.ConnectionClientTransport;

        $r2 := @parameter1: io.grpc.internal.CallTracer;

        specialinvoke $r0.<io.grpc.internal.ForwardingConnectionClientTransport: void <init>()>();

        $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.ConnectionClientTransport delegate> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer callTracer> = $r2;

        return;
    }

    void <init>(io.grpc.internal.ConnectionClientTransport, io.grpc.internal.CallTracer, io.grpc.internal.InternalSubchannel$1)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r0;
        io.grpc.internal.ConnectionClientTransport $r1;
        io.grpc.internal.CallTracer $r2;
        io.grpc.internal.InternalSubchannel$1 $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport;

        $r1 := @parameter0: io.grpc.internal.ConnectionClientTransport;

        $r2 := @parameter1: io.grpc.internal.CallTracer;

        $r3 := @parameter2: io.grpc.internal.InternalSubchannel$1;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport: void <init>(io.grpc.internal.ConnectionClientTransport,io.grpc.internal.CallTracer)>($r1, $r2);

        return;
    }

    static io.grpc.internal.CallTracer access$2700(io.grpc.internal.InternalSubchannel$CallTracingTransport)
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r0;
        io.grpc.internal.CallTracer r1;

        $r0 := @parameter0: io.grpc.internal.InternalSubchannel$CallTracingTransport;

        r1 = $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer callTracer>;

        return r1;
    }

    protected io.grpc.internal.ConnectionClientTransport delegate()
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r0;
        io.grpc.internal.ConnectionClientTransport r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport;

        r1 = $r0.<io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.ConnectionClientTransport delegate>;

        return r1;
    }

    public io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor, io.grpc.Metadata, io.grpc.CallOptions, io.grpc.ClientStreamTracer[])
    {
        io.grpc.internal.InternalSubchannel$CallTracingTransport $r0;
        io.grpc.CallOptions $r1;
        io.grpc.ClientStreamTracer[] $r2;
        io.grpc.internal.ClientStream $r3;
        io.grpc.MethodDescriptor $r4;
        io.grpc.Metadata $r5;
        io.grpc.internal.InternalSubchannel$CallTracingTransport$1 $r6;

        $r0 := @this: io.grpc.internal.InternalSubchannel$CallTracingTransport;

        $r4 := @parameter0: io.grpc.MethodDescriptor;

        $r5 := @parameter1: io.grpc.Metadata;

        $r1 := @parameter2: io.grpc.CallOptions;

        $r2 := @parameter3: io.grpc.ClientStreamTracer[];

        $r3 = specialinvoke $r0.<io.grpc.internal.ForwardingConnectionClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])>($r4, $r5, $r1, $r2);

        $r6 = new io.grpc.internal.InternalSubchannel$CallTracingTransport$1;

        specialinvoke $r6.<io.grpc.internal.InternalSubchannel$CallTracingTransport$1: void <init>(io.grpc.internal.InternalSubchannel$CallTracingTransport,io.grpc.internal.ClientStream)>($r0, $r3);

        return $r6;
    }

io.grpc.internal.InternalSubchannel$Index
<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>
<io.grpc.internal.InternalSubchannel$Index: int addressIndex>
<io.grpc.internal.InternalSubchannel$Index: int groupIndex>
    public void <init>(java.util.List)
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        java.util.List $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r1 := @parameter0: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups> = $r1;

        return;
    }

    public java.net.SocketAddress getCurrentAddress()
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2;
        io.grpc.EquivalentAddressGroup $r3;
        java.net.SocketAddress $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (io.grpc.EquivalentAddressGroup) $r2;

        $r1 = virtualinvoke $r3.<io.grpc.EquivalentAddressGroup: java.util.List getAddresses()>();

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.net.SocketAddress) $r2;

        return $r4;
    }

    public io.grpc.Attributes getCurrentEagAttributes()
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        io.grpc.EquivalentAddressGroup $r3;
        io.grpc.Attributes $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (io.grpc.EquivalentAddressGroup) $r2;

        $r4 = virtualinvoke $r3.<io.grpc.EquivalentAddressGroup: io.grpc.Attributes getAttributes()>();

        return $r4;
    }

    public void increment()
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        io.grpc.EquivalentAddressGroup $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (io.grpc.EquivalentAddressGroup) $r2;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex>;

        $i0 = $i0 + 1;

        $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex> = $i0;

        $r1 = virtualinvoke $r3.<io.grpc.EquivalentAddressGroup: java.util.List getAddresses()>();

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 < $i1 goto label1;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex>;

        $i0 = $i0 + 1;

        $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex> = $i0;

        $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex> = 0;

     label1:
        return;
    }

    public boolean isAtBeginning()
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        int $i0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex>;

        if $i0 != 0 goto label1;

        $i0 = $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isValid()
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        int $i0, $i1;
        java.util.List $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $i1 = $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex>;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void reset()
    {
        io.grpc.internal.InternalSubchannel$Index $r0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex> = 0;

        $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex> = 0;

        return;
    }

    public boolean seekTo(java.net.SocketAddress)
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        java.net.SocketAddress $r1;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        io.grpc.EquivalentAddressGroup $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r1 := @parameter0: java.net.SocketAddress;

        $i0 = 0;

     label1:
        $r2 = $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (io.grpc.EquivalentAddressGroup) $r3;

        $r2 = virtualinvoke $r4.<io.grpc.EquivalentAddressGroup: java.util.List getAddresses()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>($r1);

        if $i1 != -1 goto label2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r0.<io.grpc.internal.InternalSubchannel$Index: int groupIndex> = $i0;

        $r0.<io.grpc.internal.InternalSubchannel$Index: int addressIndex> = $i1;

        return 1;

     label3:
        return 0;
    }

    public void updateGroups(java.util.List)
    {
        io.grpc.internal.InternalSubchannel$Index $r0;
        java.util.List $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$Index;

        $r1 := @parameter0: java.util.List;

        $r0.<io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups> = $r1;

        virtualinvoke $r0.<io.grpc.internal.InternalSubchannel$Index: void reset()>();

        return;
    }

io.grpc.internal.InternalSubchannel$TransportListener$1
<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>
    void <init>(io.grpc.internal.InternalSubchannel$TransportListener)
    {
        io.grpc.internal.InternalSubchannel$TransportListener$1 $r0;
        io.grpc.internal.InternalSubchannel$TransportListener $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener$1;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel$TransportListener;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$TransportListener$1 $r0;
        io.grpc.internal.InternalSubchannel$TransportListener $r1;
        io.grpc.internal.InternalSubchannel $r2;
        io.grpc.Status $r3;
        io.grpc.internal.ManagedClientTransport $r4;
        boolean $z0;
        io.grpc.internal.ConnectionClientTransport $r5, $r6;
        io.grpc.ConnectivityState $r7;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener$1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy access$2202(io.grpc.internal.InternalSubchannel,io.grpc.internal.BackoffPolicy)>($r2, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.Status access$1600(io.grpc.internal.InternalSubchannel)>($r2);

        if $r3 == null goto label3;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r4 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1000(io.grpc.internal.InternalSubchannel)>($r2);

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Unexpected non-null activeTransport");

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r5 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.Status access$1600(io.grpc.internal.InternalSubchannel)>($r2);

        interfaceinvoke $r5.<io.grpc.internal.ConnectionClientTransport: void shutdown(io.grpc.Status)>($r3);

        return;

     label3:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r5 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1100(io.grpc.internal.InternalSubchannel)>($r2);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r6 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        if $r5 != $r6 goto label4;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r5 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1002(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r2, $r5);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1102(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport)>($r2, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r7 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState READY>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)>($r2, $r7);

     label4:
        return;
    }

io.grpc.internal.InternalSubchannel$TransportListener$2
<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>
<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.Status val$s>
    void <init>(io.grpc.internal.InternalSubchannel$TransportListener, io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel$TransportListener$2 $r0;
        io.grpc.internal.InternalSubchannel$TransportListener $r1;
        io.grpc.Status $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener$2;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel$TransportListener;

        $r2 := @parameter1: io.grpc.Status;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.Status val$s> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$TransportListener$2 $r0;
        io.grpc.internal.InternalSubchannel$TransportListener $r1;
        io.grpc.internal.InternalSubchannel $r2;
        io.grpc.ConnectivityStateInfo $r3;
        io.grpc.ConnectivityState $r4, $r5;
        io.grpc.internal.ManagedClientTransport $r6;
        io.grpc.internal.ConnectionClientTransport $r7, $r9;
        io.grpc.internal.InternalSubchannel$Index $r8;
        boolean $z0;
        io.grpc.Status $r10;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener$2;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r4 = virtualinvoke $r3.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r5 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        if $r4 != $r5 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r6 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1000(io.grpc.internal.InternalSubchannel)>($r2);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r7 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        if $r6 != $r7 goto label2;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1002(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)>($r2, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        virtualinvoke $r8.<io.grpc.internal.InternalSubchannel$Index: void reset()>();

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r4 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)>($r2, $r4);

        return;

     label2:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r7 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1100(io.grpc.internal.InternalSubchannel)>($r2);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r9 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        if $r7 != $r9 goto label6;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r4 = virtualinvoke $r3.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r5 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

        if $r4 != $r5 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r4 = virtualinvoke $r3.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>($z0, "Expected state is CONNECTING, actual state is %s", $r4);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        virtualinvoke $r8.<io.grpc.internal.InternalSubchannel$Index: void increment()>();

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        $z0 = virtualinvoke $r8.<io.grpc.internal.InternalSubchannel$Index: boolean isValid()>();

        if $z0 != 0 goto label5;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1102(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport)>($r2, null);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)>($r2);

        virtualinvoke $r8.<io.grpc.internal.InternalSubchannel$Index: void reset()>();

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r10 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.Status val$s>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$2500(io.grpc.internal.InternalSubchannel,io.grpc.Status)>($r2, $r10);

        return;

     label5:
        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$400(io.grpc.internal.InternalSubchannel)>($r2);

     label6:
        return;
    }

io.grpc.internal.InternalSubchannel$TransportListener$3
<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1>
    void <init>(io.grpc.internal.InternalSubchannel$TransportListener)
    {
        io.grpc.internal.InternalSubchannel$TransportListener$3 $r0;
        io.grpc.internal.InternalSubchannel$TransportListener $r1;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener$3;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel$TransportListener;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.InternalSubchannel$TransportListener$3 $r0;
        io.grpc.internal.InternalSubchannel$TransportListener $r1;
        io.grpc.internal.InternalSubchannel $r2;
        java.util.Collection $r3;
        io.grpc.internal.ConnectionClientTransport $r4;
        io.grpc.ConnectivityStateInfo $r5;
        io.grpc.ConnectivityState $r6, $r7;
        boolean $z0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener$3;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: java.util.Collection access$1700(io.grpc.internal.InternalSubchannel)>($r2);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r4 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>($r4);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r5 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)>($r2);

        $r6 = virtualinvoke $r5.<io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()>();

        $r7 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        if $r6 != $r7 goto label1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: java.util.Collection access$1700(io.grpc.internal.InternalSubchannel)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1>;

        $r2 = $r1.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$1800(io.grpc.internal.InternalSubchannel)>($r2);

     label1:
        return;
    }

io.grpc.internal.InternalSubchannel$TransportListener
<io.grpc.internal.InternalSubchannel$TransportListener: java.net.SocketAddress address>
<io.grpc.internal.InternalSubchannel$TransportListener: boolean shutdownInitiated>
<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>
<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>
    void <init>(io.grpc.internal.InternalSubchannel, io.grpc.internal.ConnectionClientTransport, java.net.SocketAddress)
    {
        io.grpc.internal.InternalSubchannel$TransportListener $r0;
        io.grpc.internal.ConnectionClientTransport $r1;
        java.net.SocketAddress $r2;
        io.grpc.internal.InternalSubchannel $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener;

        $r3 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.internal.ConnectionClientTransport;

        $r2 := @parameter2: java.net.SocketAddress;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0> = $r3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener: boolean shutdownInitiated> = 0;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport> = $r1;

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener: java.net.SocketAddress address> = $r2;

        return;
    }

    public void transportInUse(boolean)
    {
        io.grpc.internal.InternalSubchannel$TransportListener $r0;
        boolean $z0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.ConnectionClientTransport $r2;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$2300(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,boolean)>($r1, $r2, $z0);

        return;
    }

    public void transportReady()
    {
        io.grpc.internal.InternalSubchannel$TransportListener $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.ChannelLogger $r2;
        io.grpc.ChannelLogger$ChannelLogLevel $r3;
        io.grpc.SynchronizationContext $r4;
        io.grpc.internal.InternalSubchannel$TransportListener$1 $r5;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener;

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)>($r1);

        $r3 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r2.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r3, "READY");

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r4 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext access$1500(io.grpc.internal.InternalSubchannel)>($r1);

        $r5 = new io.grpc.internal.InternalSubchannel$TransportListener$1;

        specialinvoke $r5.<io.grpc.internal.InternalSubchannel$TransportListener$1: void <init>(io.grpc.internal.InternalSubchannel$TransportListener)>($r0);

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public void transportShutdown(io.grpc.Status)
    {
        io.grpc.internal.InternalSubchannel$TransportListener $r0;
        io.grpc.Status $r1;
        io.grpc.internal.InternalSubchannel $r2;
        io.grpc.ChannelLogger $r3;
        io.grpc.ChannelLogger$ChannelLogLevel $r4;
        java.lang.Object[] $r5;
        io.grpc.internal.ConnectionClientTransport $r6;
        io.grpc.InternalLogId $r7;
        java.lang.String $r8;
        io.grpc.SynchronizationContext $r9;
        io.grpc.internal.InternalSubchannel$TransportListener$2 $r10;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener;

        $r1 := @parameter0: io.grpc.Status;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r3 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)>($r2);

        $r4 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        $r7 = interfaceinvoke $r6.<io.grpc.internal.ConnectionClientTransport: io.grpc.InternalLogId getLogId()>();

        $r5[0] = $r7;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: java.lang.String access$2400(io.grpc.internal.InternalSubchannel,io.grpc.Status)>($r2, $r1);

        $r5[1] = $r8;

        virtualinvoke $r3.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r4, "{0} SHUTDOWN with {1}", $r5);

        $r0.<io.grpc.internal.InternalSubchannel$TransportListener: boolean shutdownInitiated> = 1;

        $r2 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r9 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext access$1500(io.grpc.internal.InternalSubchannel)>($r2);

        $r10 = new io.grpc.internal.InternalSubchannel$TransportListener$2;

        specialinvoke $r10.<io.grpc.internal.InternalSubchannel$TransportListener$2: void <init>(io.grpc.internal.InternalSubchannel$TransportListener,io.grpc.Status)>($r0, $r1);

        virtualinvoke $r9.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r10);

        return;
    }

    public void transportTerminated()
    {
        io.grpc.internal.InternalSubchannel$TransportListener $r0;
        boolean $z0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.ChannelLogger $r2;
        io.grpc.ChannelLogger$ChannelLogLevel $r3;
        java.lang.Object[] $r4;
        io.grpc.internal.ConnectionClientTransport $r5;
        io.grpc.InternalLogId $r6;
        io.grpc.InternalChannelz $r7;
        io.grpc.SynchronizationContext $r8;
        io.grpc.internal.InternalSubchannel$TransportListener$3 $r9;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportListener;

        $z0 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: boolean shutdownInitiated>;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "transportShutdown() must be called before transportTerminated().");

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r2 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)>($r1);

        $r3 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        $r6 = interfaceinvoke $r5.<io.grpc.internal.ConnectionClientTransport: io.grpc.InternalLogId getLogId()>();

        $r4[0] = $r6;

        virtualinvoke $r2.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r3, "{0} Terminated", $r4);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r7 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz access$2600(io.grpc.internal.InternalSubchannel)>($r1);

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        virtualinvoke $r7.<io.grpc.InternalChannelz: void removeClientSocket(io.grpc.InternalInstrumented)>($r5);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r5 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport>;

        staticinvoke <io.grpc.internal.InternalSubchannel: void access$2300(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,boolean)>($r1, $r5, 0);

        $r1 = $r0.<io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0>;

        $r8 = staticinvoke <io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext access$1500(io.grpc.internal.InternalSubchannel)>($r1);

        $r9 = new io.grpc.internal.InternalSubchannel$TransportListener$3;

        specialinvoke $r9.<io.grpc.internal.InternalSubchannel$TransportListener$3: void <init>(io.grpc.internal.InternalSubchannel$TransportListener)>($r0);

        virtualinvoke $r8.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r9);

        return;
    }

io.grpc.internal.InternalSubchannel$TransportLogger
<io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId>
    void <init>()
    {
        io.grpc.internal.InternalSubchannel$TransportLogger $r0;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportLogger;

        specialinvoke $r0.<io.grpc.ChannelLogger: void <init>()>();

        return;
    }

    public void log(io.grpc.ChannelLogger$ChannelLogLevel, java.lang.String)
    {
        io.grpc.internal.InternalSubchannel$TransportLogger $r0;
        io.grpc.ChannelLogger$ChannelLogLevel $r1;
        java.lang.String $r2;
        io.grpc.InternalLogId $r3;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportLogger;

        $r1 := @parameter0: io.grpc.ChannelLogger$ChannelLogLevel;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId>;

        staticinvoke <io.grpc.internal.ChannelLoggerImpl: void logOnly(io.grpc.InternalLogId,io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r3, $r1, $r2);

        return;
    }

    public transient void log(io.grpc.ChannelLogger$ChannelLogLevel, java.lang.String, java.lang.Object[])
    {
        io.grpc.internal.InternalSubchannel$TransportLogger $r0;
        io.grpc.ChannelLogger$ChannelLogLevel $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        io.grpc.InternalLogId $r4;

        $r0 := @this: io.grpc.internal.InternalSubchannel$TransportLogger;

        $r1 := @parameter0: io.grpc.ChannelLogger$ChannelLogLevel;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        $r4 = $r0.<io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId>;

        staticinvoke <io.grpc.internal.ChannelLoggerImpl: void logOnly(io.grpc.InternalLogId,io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r4, $r1, $r2, $r3);

        return;
    }

