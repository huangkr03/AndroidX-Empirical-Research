androidx.transition.PatternPathMotion
<androidx.transition.PatternPathMotion: android.graphics.Path mOriginalPatternPath>
<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath>
<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>
    public void <init>()
    {
        androidx.transition.PatternPathMotion r0;
        android.graphics.Path $r1, $r3, $r4;
        android.graphics.Matrix $r2;

        r0 := @this: androidx.transition.PatternPathMotion;

        specialinvoke r0.<androidx.transition.PathMotion: void <init>()>();

        $r1 = new android.graphics.Path;

        specialinvoke $r1.<android.graphics.Path: void <init>()>();

        r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath> = $r1;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix> = $r2;

        $r3 = r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath>;

        virtualinvoke $r3.<android.graphics.Path: void lineTo(float,float)>(1.0F, 0.0F);

        $r4 = r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath>;

        r0.<androidx.transition.PatternPathMotion: android.graphics.Path mOriginalPatternPath> = $r4;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.transition.PatternPathMotion r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        java.lang.String r4;
        android.graphics.Path r5, $r7;
        java.lang.Throwable r6, $r12;
        android.graphics.Matrix $r8;
        int[] $r9;
        org.xmlpull.v1.XmlPullParser $r10;
        java.lang.RuntimeException $r11;

        r0 := @this: androidx.transition.PatternPathMotion;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.transition.PathMotion: void <init>()>();

        $r7 = new android.graphics.Path;

        specialinvoke $r7.<android.graphics.Path: void <init>()>();

        r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath> = $r7;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix> = $r8;

        $r9 = <androidx.transition.Styleable: int[] PATTERN_PATH_MOTION>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r9);

     label1:
        $r10 = (org.xmlpull.v1.XmlPullParser) r2;

        r4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r3, $r10, "patternPathData", 0);

        if r4 != null goto label2;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("pathData must be supplied for patternPathMotion");

        throw $r11;

     label2:
        r5 = staticinvoke <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>(r4);

        virtualinvoke r0.<androidx.transition.PatternPathMotion: void setPatternPath(android.graphics.Path)>(r5);

     label3:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label6;

     label4:
        $r12 := @caughtexception;

        r6 = $r12;

     label5:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void <init>(android.graphics.Path)
    {
        androidx.transition.PatternPathMotion r0;
        android.graphics.Path r1, $r2;
        android.graphics.Matrix $r3;

        r0 := @this: androidx.transition.PatternPathMotion;

        r1 := @parameter0: android.graphics.Path;

        specialinvoke r0.<androidx.transition.PathMotion: void <init>()>();

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath> = $r2;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix> = $r3;

        virtualinvoke r0.<androidx.transition.PatternPathMotion: void setPatternPath(android.graphics.Path)>(r1);

        return;
    }

    public android.graphics.Path getPatternPath()
    {
        androidx.transition.PatternPathMotion r0;
        android.graphics.Path $r1;

        r0 := @this: androidx.transition.PatternPathMotion;

        $r1 = r0.<androidx.transition.PatternPathMotion: android.graphics.Path mOriginalPatternPath>;

        return $r1;
    }

    public void setPatternPath(android.graphics.Path)
    {
        androidx.transition.PatternPathMotion r0;
        android.graphics.Path r1, $r8;
        android.graphics.PathMeasure r2, $r4;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11;
        float[] r3;
        double d0, $d1, $d2, $d3, $d4;
        byte $b0, $b1;
        android.graphics.Matrix $r5, $r6, $r7, $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: androidx.transition.PatternPathMotion;

        r1 := @parameter0: android.graphics.Path;

        $r4 = new android.graphics.PathMeasure;

        specialinvoke $r4.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>(r1, 0);

        r2 = $r4;

        f0 = virtualinvoke r2.<android.graphics.PathMeasure: float getLength()>();

        r3 = newarray (float)[2];

        virtualinvoke r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>(f0, r3, null);

        f1 = r3[0];

        f2 = r3[1];

        virtualinvoke r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>(0.0F, r3, null);

        f3 = r3[0];

        f4 = r3[1];

        $b0 = f3 cmpl f1;

        if $b0 != 0 goto label1;

        $b1 = f4 cmpl f2;

        if $b1 != 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pattern must not end at the starting point");

        throw $r10;

     label1:
        $r5 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        $f10 = neg f3;

        $f9 = neg f4;

        virtualinvoke $r5.<android.graphics.Matrix: void setTranslate(float,float)>($f10, $f9);

        f5 = f1 - f3;

        f6 = f2 - f4;

        f7 = staticinvoke <androidx.transition.PatternPathMotion: float distance(float,float)>(f5, f6);

        f8 = 1.0F / f7;

        $r6 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r6.<android.graphics.Matrix: boolean postScale(float,float)>(f8, f8);

        $d2 = (double) f6;

        $d1 = (double) f5;

        d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d2, $d1);

        $r7 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        $d3 = neg d0;

        $d4 = staticinvoke <java.lang.Math: double toDegrees(double)>($d3);

        $f11 = (float) $d4;

        virtualinvoke $r7.<android.graphics.Matrix: boolean postRotate(float)>($f11);

        $r9 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        $r8 = r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath>;

        virtualinvoke r1.<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>($r9, $r8);

        r0.<androidx.transition.PatternPathMotion: android.graphics.Path mOriginalPatternPath> = r1;

        return;
    }

    public android.graphics.Path getPath(float, float, float, float)
    {
        androidx.transition.PatternPathMotion r0;
        float f0, f1, f2, f3, f4, f5, f6, $f7;
        double d0, $d1, $d2, $d3;
        android.graphics.Path r1, $r5, $r7;
        android.graphics.Matrix $r2, $r3, $r4, $r6;

        r0 := @this: androidx.transition.PatternPathMotion;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 = f2 - f0;

        f5 = f3 - f1;

        f6 = staticinvoke <androidx.transition.PatternPathMotion: float distance(float,float)>(f4, f5);

        $d2 = (double) f5;

        $d1 = (double) f4;

        d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d2, $d1);

        $r2 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>(f6, f6);

        $r3 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>(d0);

        $f7 = (float) $d3;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postRotate(float)>($f7);

        $r4 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: boolean postTranslate(float,float)>(f0, f1);

        $r5 = new android.graphics.Path;

        specialinvoke $r5.<android.graphics.Path: void <init>()>();

        r1 = $r5;

        $r7 = r0.<androidx.transition.PatternPathMotion: android.graphics.Path mPatternPath>;

        $r6 = r0.<androidx.transition.PatternPathMotion: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r7.<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>($r6, r1);

        return r1;
    }

    private static float distance(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        $f4 = $f3 + $f2;

        $d0 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f5 = (float) $d1;

        return $f5;
    }

