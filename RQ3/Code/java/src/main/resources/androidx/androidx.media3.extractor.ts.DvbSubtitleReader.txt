androidx.media3.extractor.ts.DvbSubtitleReader
<androidx.media3.extractor.ts.DvbSubtitleReader: java.util.List subtitleInfos>
<androidx.media3.extractor.ts.DvbSubtitleReader: androidx.media3.extractor.TrackOutput[] outputs>
<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample>
<androidx.media3.extractor.ts.DvbSubtitleReader: int bytesToCheck>
<androidx.media3.extractor.ts.DvbSubtitleReader: int sampleBytesWritten>
<androidx.media3.extractor.ts.DvbSubtitleReader: long sampleTimeUs>
    public void <init>(java.util.List)
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;
        java.util.List r1;
        int $i0;
        androidx.media3.extractor.TrackOutput[] $r2;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: java.util.List subtitleInfos> = r1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = newarray (androidx.media3.extractor.TrackOutput)[$i0];

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: androidx.media3.extractor.TrackOutput[] outputs> = $r2;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: long sampleTimeUs> = -9223372036854775807L;

        return;
    }

    public void seek()
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample> = 0;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: long sampleTimeUs> = -9223372036854775807L;

        return;
    }

    public void createTracks(androidx.media3.extractor.ExtractorOutput, androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator r2;
        androidx.media3.extractor.ts.TsPayloadReader$DvbSubtitleInfo r3;
        androidx.media3.extractor.TrackOutput r4;
        androidx.media3.extractor.TrackOutput[] $r5, $r18;
        int $i0, $i1, i2;
        java.util.List $r6, $r13;
        java.lang.Object $r7;
        androidx.media3.common.Format$Builder $r8, $r10, $r11, $r14, $r16;
        java.lang.String $r9, $r15;
        byte[] $r12;
        androidx.media3.common.Format $r17;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r2 := @parameter1: androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator;

        i2 = 0;

     label1:
        $r5 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: androidx.media3.extractor.TrackOutput[] outputs>;

        $i0 = lengthof $r5;

        if i2 >= $i0 goto label2;

        $r6 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: java.util.List subtitleInfos>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (androidx.media3.extractor.ts.TsPayloadReader$DvbSubtitleInfo) $r7;

        virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: void generateNewId()>();

        $i1 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: int getTrackId()>();

        r4 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>($i1, 3);

        $r8 = new androidx.media3.common.Format$Builder;

        specialinvoke $r8.<androidx.media3.common.Format$Builder: void <init>()>();

        $r9 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String getFormatId()>();

        $r10 = virtualinvoke $r8.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("application/dvbsubs");

        $r12 = r3.<androidx.media3.extractor.ts.TsPayloadReader$DvbSubtitleInfo: byte[] initializationData>;

        $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>($r13);

        $r15 = r3.<androidx.media3.extractor.ts.TsPayloadReader$DvbSubtitleInfo: java.lang.String language>;

        $r16 = virtualinvoke $r14.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke r4.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r17);

        $r18 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: androidx.media3.extractor.TrackOutput[] outputs>;

        $r18[i2] = r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void packetStarted(long, int)
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;
        long l0;
        int i1, $i2;
        byte $b3;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = i1 & 4;

        if $i2 != 0 goto label1;

        return;

     label1:
        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample> = 1;

        $b3 = l0 cmp -9223372036854775807L;

        if $b3 == 0 goto label2;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: long sampleTimeUs> = l0;

     label2:
        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int sampleBytesWritten> = 0;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int bytesToCheck> = 2;

        return;
    }

    public void packetFinished()
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;
        androidx.media3.extractor.TrackOutput[] r1;
        int i0, $i3, i5;
        androidx.media3.extractor.TrackOutput r2;
        boolean $z0;
        long $l1, $l4;
        byte $b2;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        $z0 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample>;

        if $z0 == 0 goto label3;

        $l1 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: long sampleTimeUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label2;

        r1 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: androidx.media3.extractor.TrackOutput[] outputs>;

        i0 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        r2 = r1[i5];

        $l4 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: long sampleTimeUs>;

        $i3 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int sampleBytesWritten>;

        interfaceinvoke r2.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l4, 1, $i3, 0, null);

        i5 = i5 + 1;

        goto label1;

     label2:
        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample> = 0;

     label3:
        return;
    }

    public void consume(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        androidx.media3.extractor.TrackOutput[] r2;
        androidx.media3.extractor.TrackOutput r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        $z0 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample>;

        if $z0 == 0 goto label5;

        $i3 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int bytesToCheck>;

        if $i3 != 2 goto label1;

        $z2 = specialinvoke r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean checkNextByte(androidx.media3.common.util.ParsableByteArray,int)>(r1, 32);

        if $z2 != 0 goto label1;

        return;

     label1:
        $i4 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int bytesToCheck>;

        if $i4 != 1 goto label2;

        $z1 = specialinvoke r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean checkNextByte(androidx.media3.common.util.ParsableByteArray,int)>(r1, 0);

        if $z1 != 0 goto label2;

        return;

     label2:
        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        r2 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: androidx.media3.extractor.TrackOutput[] outputs>;

        i2 = lengthof r2;

        i7 = 0;

     label3:
        if i7 >= i2 goto label4;

        r3 = r2[i7];

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i0);

        interfaceinvoke r3.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r1, i1);

        i7 = i7 + 1;

        goto label3;

     label4:
        $i5 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int sampleBytesWritten>;

        $i6 = $i5 + i1;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int sampleBytesWritten> = $i6;

     label5:
        return;
    }

    private boolean checkNextByte(androidx.media3.common.util.ParsableByteArray, int)
    {
        androidx.media3.extractor.ts.DvbSubtitleReader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.ts.DvbSubtitleReader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        if $i2 == i0 goto label2;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample> = 0;

     label2:
        $i3 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int bytesToCheck>;

        $i4 = $i3 - 1;

        r0.<androidx.media3.extractor.ts.DvbSubtitleReader: int bytesToCheck> = $i4;

        $z0 = r0.<androidx.media3.extractor.ts.DvbSubtitleReader: boolean writingSample>;

        return $z0;
    }

