androidx.compose.foundation.text.selection.BaseTextPreparedSelection
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion Companion>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString originalText>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long originalSelection>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState state>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString>
<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int NoCharacterFound>
    private void <init>(androidx.compose.ui.text.AnnotatedString, long, androidx.compose.ui.text.TextLayoutResult, androidx.compose.ui.text.input.OffsetMapping, androidx.compose.foundation.text.selection.TextPreparedSelectionState)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString r1, $r5;
        long l0, $l1;
        androidx.compose.ui.text.TextLayoutResult r2;
        androidx.compose.ui.text.input.OffsetMapping r3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState r4;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter0: androidx.compose.ui.text.AnnotatedString;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.ui.text.TextLayoutResult;

        r3 := @parameter3: androidx.compose.ui.text.input.OffsetMapping;

        r4 := @parameter4: androidx.compose.foundation.text.selection.TextPreparedSelectionState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString originalText> = r1;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long originalSelection> = l0;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult> = r2;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping> = r3;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState state> = r4;

        $l1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long originalSelection>;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection> = $l1;

        $r5 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString originalText>;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString> = $r5;

        return;
    }

    public final androidx.compose.ui.text.AnnotatedString getOriginalText()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString originalText>;

        return $r1;
    }

    public final long getOriginalSelection-d9O1mEE()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long originalSelection>;

        return $l0;
    }

    public final androidx.compose.ui.text.TextLayoutResult getLayoutResult()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        return $r1;
    }

    public final androidx.compose.ui.text.input.OffsetMapping getOffsetMapping()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.input.OffsetMapping $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        return $r1;
    }

    public final androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState state>;

        return $r1;
    }

    public final long getSelection-d9O1mEE()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        return $l0;
    }

    public final void setSelection-5zc-tL8(long)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        long l0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        l0 := @parameter0: long;

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection> = l0;

        return;
    }

    public final androidx.compose.ui.text.AnnotatedString getAnnotatedString()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString>;

        return $r1;
    }

    public final void setAnnotatedString(androidx.compose.ui.text.AnnotatedString)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter0: androidx.compose.ui.text.AnnotatedString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString> = r1;

        return;
    }

    public final java.lang.String getText$foundation_release()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        return $r2;
    }

    protected final androidx.compose.foundation.text.selection.BaseTextPreparedSelection apply(java.lang.Object, boolean, kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r5;
        java.lang.Object $r1;
        boolean z0, $z2;
        kotlin.jvm.functions.Function1 r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r7;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        if z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r7.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

     label1:
        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label4;

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) $r1;

        return $r5;
    }

    public static androidx.compose.foundation.text.selection.BaseTextPreparedSelection apply$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection, java.lang.Object, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection $r0, $r6;
        java.lang.Object $r1, r3;
        kotlin.jvm.functions.Function1 r2;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r8;
        java.lang.UnsupportedOperationException $r9;
        boolean z0, $z2;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        $i2 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        if r3 == null goto label1;

        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: apply");

        throw $r9;

     label1:
        $i0 = $i2 & 1;

        if $i0 == 0 goto label2;

        z0 = 1;

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        if z0 == 0 goto label3;

        $r8 = virtualinvoke $r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r8.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

     label3:
        $r4 = virtualinvoke $r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r5 = (java.lang.CharSequence) $r4;

        $i1 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 == 0 goto label6;

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

     label6:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r6 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) $r1;

        return $r6;
    }

    protected final void setCursor(int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        int i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setSelection(int,int)>(i0, i0);

        return;
    }

    protected final void setSelection(int, int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        int i0, i1;
        long $l2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = staticinvoke <androidx.compose.ui.text.TextRangeKt: long TextRange(int,int)>(i0, i1);

        r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection> = $l2;

        return;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection selectAll()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3, $r6;
        java.lang.CharSequence $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r6 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setSelection(int,int)>(0, $i1);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection deselect()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0, $i2;
        long $l1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $l1 = $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l1);

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i2);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorLeft()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z3, $z4;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $z3 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z3 == 0 goto label3;

        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrev()>();

        goto label4;

     label3:
        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNext()>();

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorRight()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z3, $z4;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $z3 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z3 == 0 goto label3;

        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNext()>();

        goto label4;

     label3:
        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrev()>();

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection collapseLeftOr(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r2, $r7;
        kotlin.jvm.functions.Function1 r1;
        boolean z0, $z3, $z4, $z5;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        int $i0, $i3, $i5;
        long $l1, $l2, $l4;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "or");

        z0 = 1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r3.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r4 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r5 = (java.lang.CharSequence) $r4;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        if $z5 == 0 goto label5;

        $r2 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $l1 = $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $z3 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l1);

        if $z3 == 0 goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection.collapseLeftOr$lambda-4");

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        goto label5;

     label3:
        $z4 = specialinvoke $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z4 == 0 goto label4;

        $l4 = $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l4);

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i5);

        goto label5;

     label4:
        $l2 = $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l2);

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i3);

     label5:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection collapseRightOr(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r2, $r7;
        kotlin.jvm.functions.Function1 r1;
        boolean z0, $z3, $z4, $z5;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        int $i0, $i3, $i5;
        long $l1, $l2, $l4;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "or");

        z0 = 1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r3.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r4 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r5 = (java.lang.CharSequence) $r4;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        if $z5 == 0 goto label5;

        $r2 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $l1 = $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $z3 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l1);

        if $z3 == 0 goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection.collapseRightOr$lambda-5");

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        goto label5;

     label3:
        $z4 = specialinvoke $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z4 == 0 goto label4;

        $l4 = $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l4);

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i5);

        goto label5;

     label4:
        $l2 = $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l2);

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i3);

     label5:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final int getPrecedingCharacterIndex()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString $r1;
        java.lang.String $r2;
        long $l0;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l0);

        $i2 = staticinvoke <androidx.compose.foundation.text.StringHelpers_androidKt: int findPrecedingBreak(java.lang.String,int)>($r2, $i1);

        return $i2;
    }

    public final int getNextCharacterIndex()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString $r1;
        java.lang.String $r2;
        long $l0;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString annotatedString>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l0);

        $i2 = staticinvoke <androidx.compose.foundation.text.StringHelpers_androidKt: int findFollowingBreak(java.lang.String,int)>($r2, $i1);

        return $i2;
    }

    private final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrev()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        int i0, $i1;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        i0 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getPrecedingCharacterIndex()>();

        if i0 == -1 goto label3;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    private final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNext()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        int i0, $i1;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        i0 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getNextCharacterIndex()>();

        if i0 == -1 goto label3;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToHome()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(0);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToEnd()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3, $r6;
        java.lang.CharSequence $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r6 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i1);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorLeftByWord()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z3, $z4;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $z3 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z3 == 0 goto label3;

        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrevByWord()>();

        goto label4;

     label3:
        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNextByWord()>();

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorRightByWord()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z3, $z4;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $z3 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z3 == 0 goto label3;

        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNextByWord()>();

        goto label4;

     label3:
        specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrevByWord()>();

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final java.lang.Integer getNextWordOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r1 == null goto label1;

        $i0 = staticinvoke <androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getNextWordOffsetForLayout$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection,androidx.compose.ui.text.TextLayoutResult,int,int,java.lang.Object)>(r0, $r1, 0, 1, null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNextByWord()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z4;
        int i0, $i1;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        java.lang.Integer $r5;
        java.lang.Number $r6;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r5 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.Integer getNextWordOffset()>();

        if $r5 == null goto label3;

        $r6 = (java.lang.Number) $r5;

        i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final java.lang.Integer getPreviousWordOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r1 == null goto label1;

        $i0 = staticinvoke <androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getPrevWordOffset$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection,androidx.compose.ui.text.TextLayoutResult,int,int,java.lang.Object)>(r0, $r1, 0, 1, null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrevByWord()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z4;
        int i0, $i1;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        java.lang.Integer $r5;
        java.lang.Number $r6;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r5 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.Integer getPreviousWordOffset()>();

        if $r5 == null goto label3;

        $r6 = (java.lang.Number) $r5;

        i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorPrevByParagraph()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $i1 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getParagraphStart()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i1);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorNextByParagraph()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r5;
        boolean z0, $z3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $i1 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getParagraphEnd()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>($i1);

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r5 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r5;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorUpByLine()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, r1, $r3, $r7;
        boolean z0, $z4;
        int i0, $i1;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        androidx.compose.ui.text.TextLayoutResult $r6;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 = r0;

        z0 = 0;

        $r4 = virtualinvoke r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r5 = (java.lang.CharSequence) $r4;

        $i1 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r3 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r6 = $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r6 == null goto label3;

        i0 = specialinvoke $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int jumpByLinesOffset(androidx.compose.ui.text.TextLayoutResult,int)>($r6, -1);

        virtualinvoke $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorDownByLine()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, r1, $r3, $r7;
        boolean z0, $z4;
        int i0, $i1;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        androidx.compose.ui.text.TextLayoutResult $r6;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 = r0;

        z0 = 0;

        $r4 = virtualinvoke r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r5 = (java.lang.CharSequence) $r4;

        $i1 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r3 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r6 = $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r6 == null goto label3;

        i0 = specialinvoke $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int jumpByLinesOffset(androidx.compose.ui.text.TextLayoutResult,int)>($r6, 1);

        virtualinvoke $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final java.lang.Integer getLineStartByOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r1 == null goto label1;

        $i0 = staticinvoke <androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getLineStartByOffsetForLayout$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection,androidx.compose.ui.text.TextLayoutResult,int,int,java.lang.Object)>(r0, $r1, 0, 1, null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineStart()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z4;
        int i0, $i1;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        java.lang.Integer $r5;
        java.lang.Number $r6;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r5 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.Integer getLineStartByOffset()>();

        if $r5 == null goto label3;

        $r6 = (java.lang.Number) $r5;

        i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final java.lang.Integer getLineEndByOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r1 == null goto label1;

        $i0 = staticinvoke <androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getLineEndByOffsetForLayout$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection,androidx.compose.ui.text.TextLayoutResult,int,int,java.lang.Object)>(r0, $r1, 0, 1, null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineEnd()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z4;
        int i0, $i1;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        java.lang.Integer $r5;
        java.lang.Number $r6;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $r5 = virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.Integer getLineEndByOffset()>();

        if $r5 == null goto label3;

        $r6 = (java.lang.Number) $r5;

        i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void setCursor(int)>(i0);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineLeftSide()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z3, $z4;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $z3 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z3 == 0 goto label3;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineStart()>();

        goto label4;

     label3:
        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineEnd()>();

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineRightSide()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, $r1, $r7;
        boolean z0, $z3, $z4;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        z0 = 1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState getState()>();

        virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void resetCachedX()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r4 = (java.lang.CharSequence) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r1 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $z3 = specialinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z3 == 0 goto label3;

        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineEnd()>();

        goto label4;

     label3:
        virtualinvoke $r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection moveCursorToLineStart()>();

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r7 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r7;
    }

    public final androidx.compose.foundation.text.selection.BaseTextPreparedSelection selectMovement()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0, r1, $r3, $r6;
        boolean z0, $z3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 = r0;

        z0 = 0;

        $r4 = virtualinvoke r1.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r5 = (java.lang.CharSequence) $r4;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r3 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        $l1 = $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long originalSelection>;

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>($l1);

        $l3 = $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i4 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l3);

        $l5 = staticinvoke <androidx.compose.ui.text.TextRangeKt: long TextRange(int,int)>($i2, $i4);

        $r3.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection> = $l5;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type T of androidx.compose.foundation.text.selection.BaseTextPreparedSelection");

        $r6 = (androidx.compose.foundation.text.selection.BaseTextPreparedSelection) r0;

        return $r6;
    }

    private final boolean isLtr()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.style.ResolvedTextDirection r1, $r3, $r4;
        androidx.compose.ui.text.TextLayoutResult $r2;
        long $l0;
        int $i1;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r2 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.TextLayoutResult layoutResult>;

        if $r2 == null goto label1;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l0);

        $r4 = virtualinvoke $r2.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int)>($i1);

        goto label2;

     label1:
        $r4 = null;

     label2:
        r1 = $r4;

        $r3 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Rtl>;

        if r1 == $r3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private final int getNextWordOffsetForLayout(androidx.compose.ui.text.TextLayoutResult, int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long l1;
        androidx.compose.ui.text.AnnotatedString $r2, $r4;
        androidx.compose.ui.text.input.OffsetMapping $r3;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString originalText>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.text.AnnotatedString: int length()>();

        if i0 < $i2 goto label1;

        $r4 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.AnnotatedString originalText>;

        $i7 = virtualinvoke $r4.<androidx.compose.ui.text.AnnotatedString: int length()>();

        return $i7;

     label1:
        $i3 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int charOffset(int)>(i0);

        l1 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: long getWordBoundary--jx7JFs(int)>($i3);

        $i4 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l1);

        if $i4 > i0 goto label2;

        $i6 = i0 + 1;

        $i8 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getNextWordOffsetForLayout(androidx.compose.ui.text.TextLayoutResult,int)>($r1, $i6);

        goto label3;

     label2:
        $r3 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l1);

        $i8 = interfaceinvoke $r3.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>($i5);

     label3:
        return $i8;
    }

    static int getNextWordOffsetForLayout$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection, androidx.compose.ui.text.TextLayoutResult, int, int, java.lang.Object)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult r1;
        int i0, $i1, $i2, i3;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @parameter0: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter1: androidx.compose.ui.text.TextLayoutResult;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        if r2 == null goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: getNextWordOffsetForLayout");

        throw $r3;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        i3 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int transformedEndOffset()>();

     label2:
        $i2 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getNextWordOffsetForLayout(androidx.compose.ui.text.TextLayoutResult,int)>(r1, i3);

        return $i2;
    }

    private final int getPrevWordOffset(androidx.compose.ui.text.TextLayoutResult, int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int i0, $i2, $i3, $i4, $i5, $i6;
        long l1;
        androidx.compose.ui.text.input.OffsetMapping $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        return 0;

     label1:
        $i2 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int charOffset(int)>(i0);

        l1 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: long getWordBoundary--jx7JFs(int)>($i2);

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l1);

        if $i3 < i0 goto label2;

        $i5 = i0 - 1;

        $i6 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getPrevWordOffset(androidx.compose.ui.text.TextLayoutResult,int)>($r1, $i5);

        goto label3;

     label2:
        $r2 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $i4 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l1);

        $i6 = interfaceinvoke $r2.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>($i4);

     label3:
        return $i6;
    }

    static int getPrevWordOffset$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection, androidx.compose.ui.text.TextLayoutResult, int, int, java.lang.Object)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult r1;
        int i0, $i1, $i2, i3;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @parameter0: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter1: androidx.compose.ui.text.TextLayoutResult;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        if r2 == null goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: getPrevWordOffset");

        throw $r3;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        i3 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int transformedEndOffset()>();

     label2:
        $i2 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getPrevWordOffset(androidx.compose.ui.text.TextLayoutResult,int)>(r1, i3);

        return $i2;
    }

    private final int getLineStartByOffsetForLayout(androidx.compose.ui.text.TextLayoutResult, int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int i0, i1, $i2, $i3;
        androidx.compose.ui.text.input.OffsetMapping $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        i1 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineForOffset(int)>(i0);

        $r2 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $i2 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineStart(int)>(i1);

        $i3 = interfaceinvoke $r2.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>($i2);

        return $i3;
    }

    static int getLineStartByOffsetForLayout$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection, androidx.compose.ui.text.TextLayoutResult, int, int, java.lang.Object)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult r1;
        int i0, $i1, $i2, i3;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @parameter0: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter1: androidx.compose.ui.text.TextLayoutResult;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        if r2 == null goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: getLineStartByOffsetForLayout");

        throw $r3;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        i3 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int transformedMinOffset()>();

     label2:
        $i2 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getLineStartByOffsetForLayout(androidx.compose.ui.text.TextLayoutResult,int)>(r1, i3);

        return $i2;
    }

    private final int getLineEndByOffsetForLayout(androidx.compose.ui.text.TextLayoutResult, int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int i0, i1, $i2, $i3;
        androidx.compose.ui.text.input.OffsetMapping $r2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        i1 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineForOffset(int)>(i0);

        $r2 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $i2 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineEnd(int,boolean)>(i1, 1);

        $i3 = interfaceinvoke $r2.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>($i2);

        return $i3;
    }

    static int getLineEndByOffsetForLayout$default(androidx.compose.foundation.text.selection.BaseTextPreparedSelection, androidx.compose.ui.text.TextLayoutResult, int, int, java.lang.Object)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult r1;
        int i0, $i1, $i2, i3;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @parameter0: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter1: androidx.compose.ui.text.TextLayoutResult;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        if r2 == null goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: getLineEndByOffsetForLayout");

        throw $r3;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        i3 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int transformedMaxOffset()>();

     label2:
        $i2 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int getLineEndByOffsetForLayout(androidx.compose.ui.text.TextLayoutResult,int)>(r1, i3);

        return $i2;
    }

    private final int jumpByLinesOffset(androidx.compose.ui.text.TextLayoutResult, int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.TextLayoutResult $r1;
        int i0, i1, i2, $i3, $i4, $i7, $i9, $i10, i11;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState $r2, $r4, $r10;
        java.lang.Float $r3, $r5, $r12, r13;
        java.lang.Number $r6, $r7;
        boolean $z1, $z2;
        long $l5;
        androidx.compose.ui.text.input.OffsetMapping $r8;
        byte $b6, $b8;
        java.lang.String $r9;
        androidx.compose.ui.geometry.Rect $r11;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 := @parameter0: androidx.compose.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        i1 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: int transformedEndOffset()>();

        $r2 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState state>;

        $r3 = virtualinvoke $r2.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: java.lang.Float getCachedX()>();

        if $r3 != null goto label1;

        $r10 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState state>;

        $r11 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.geometry.Rect getCursorRect(int)>(i1);

        $f7 = virtualinvoke $r11.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        virtualinvoke $r10.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: void setCachedX(java.lang.Float)>($r12);

     label1:
        $i3 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineForOffset(int)>(i1);

        i2 = $i3 + i0;

        if i2 >= 0 goto label2;

        return 0;

     label2:
        $i4 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineCount()>();

        if i2 < $i4 goto label3;

        $r9 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $i9 = virtualinvoke $r9.<java.lang.String: int length()>();

        return $i9;

     label3:
        $f3 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: float getLineBottom(int)>(i2);

        $f4 = (float) 1;

        f0 = $f3 - $f4;

        $r4 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.TextPreparedSelectionState state>;

        $r5 = virtualinvoke $r4.<androidx.compose.foundation.text.selection.TextPreparedSelectionState: java.lang.Float getCachedX()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        r13 = $r5;

        $r6 = (java.lang.Number) r13;

        f2 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $z1 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z1 == 0 goto label4;

        $f6 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: float getLineRight(int)>(i2);

        $b8 = f2 cmpl $f6;

        if $b8 >= 0 goto label5;

     label4:
        $z2 = specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: boolean isLtr()>();

        if $z2 != 0 goto label6;

        $f5 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: float getLineLeft(int)>(i2);

        $b6 = f2 cmpg $f5;

        if $b6 > 0 goto label6;

     label5:
        $i7 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getLineEnd(int,boolean)>(i2, 1);

        return $i7;

     label6:
        $r7 = (java.lang.Number) r13;

        f1 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $l5 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f1, f0);

        $i10 = virtualinvoke $r1.<androidx.compose.ui.text.TextLayoutResult: int getOffsetForPosition-k-4lQ0M(long)>($l5);

        $r8 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        i11 = interfaceinvoke $r8.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>($i10);

        return i11;
    }

    private final int transformedEndOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        long $l0;
        androidx.compose.ui.text.input.OffsetMapping $r1;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l0);

        $i2 = interfaceinvoke $r1.<androidx.compose.ui.text.input.OffsetMapping: int originalToTransformed(int)>($i1);

        return $i2;
    }

    private final int transformedMinOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        long $l0;
        androidx.compose.ui.text.input.OffsetMapping $r1;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l0);

        $i2 = interfaceinvoke $r1.<androidx.compose.ui.text.input.OffsetMapping: int originalToTransformed(int)>($i1);

        return $i2;
    }

    private final int transformedMaxOffset()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        long $l0;
        androidx.compose.ui.text.input.OffsetMapping $r1;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.ui.text.input.OffsetMapping offsetMapping>;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l0);

        $i2 = interfaceinvoke $r1.<androidx.compose.ui.text.input.OffsetMapping: int originalToTransformed(int)>($i1);

        return $i2;
    }

    private final int charOffset(int)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        int i0, $i1, $i2, $i3;
        java.lang.String $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $i3 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>(i0, $i2);

        return $i3;
    }

    private final int getParagraphStart()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        java.lang.String $r1;
        long $l0;
        java.lang.CharSequence $r2;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r2 = (java.lang.CharSequence) $r1;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l0);

        $i2 = staticinvoke <androidx.compose.foundation.text.StringHelpersKt: int findParagraphStart(java.lang.CharSequence,int)>($r2, $i1);

        return $i2;
    }

    private final int getParagraphEnd()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        java.lang.String $r1;
        long $l0;
        java.lang.CharSequence $r2;
        int $i1, $i2;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        $r1 = virtualinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: java.lang.String getText$foundation_release()>();

        $r2 = (java.lang.CharSequence) $r1;

        $l0 = r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: long selection>;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l0);

        $i2 = staticinvoke <androidx.compose.foundation.text.StringHelpersKt: int findParagraphEnd(java.lang.CharSequence,int)>($r2, $i1);

        return $i2;
    }

    public void <init>(androidx.compose.ui.text.AnnotatedString, long, androidx.compose.ui.text.TextLayoutResult, androidx.compose.ui.text.input.OffsetMapping, androidx.compose.foundation.text.selection.TextPreparedSelectionState, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection r0;
        androidx.compose.ui.text.AnnotatedString r1;
        long l0;
        androidx.compose.ui.text.TextLayoutResult r2;
        androidx.compose.ui.text.input.OffsetMapping r3;
        androidx.compose.foundation.text.selection.TextPreparedSelectionState r4;
        kotlin.jvm.internal.DefaultConstructorMarker $r5;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection;

        r1 := @parameter0: androidx.compose.ui.text.AnnotatedString;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.ui.text.TextLayoutResult;

        r3 := @parameter3: androidx.compose.ui.text.input.OffsetMapping;

        r4 := @parameter4: androidx.compose.foundation.text.selection.TextPreparedSelectionState;

        $r5 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection: void <init>(androidx.compose.ui.text.AnnotatedString,long,androidx.compose.ui.text.TextLayoutResult,androidx.compose.ui.text.input.OffsetMapping,androidx.compose.foundation.text.selection.TextPreparedSelectionState)>(r1, l0, r2, r3, r4);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion $r0;

        $r0 = new androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion;

        specialinvoke $r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.foundation.text.selection.BaseTextPreparedSelection: androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion Companion> = $r0;

        return;
    }

androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion
    private void <init>()
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion r0;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.text.selection.BaseTextPreparedSelection$Companion: void <init>()>();

        return;
    }

