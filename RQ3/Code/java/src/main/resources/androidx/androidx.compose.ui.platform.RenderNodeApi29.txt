androidx.compose.ui.platform.RenderNodeApi29
<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.platform.AndroidComposeView ownerView>
<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>
<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.graphics.RenderEffect internalRenderEffect>
    public void <init>(androidx.compose.ui.platform.AndroidComposeView)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        androidx.compose.ui.platform.AndroidComposeView r1;
        android.graphics.RenderNode $r2;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: androidx.compose.ui.platform.AndroidComposeView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ownerView");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.platform.AndroidComposeView ownerView> = r1;

        $r2 = new android.graphics.RenderNode;

        specialinvoke $r2.<android.graphics.RenderNode: void <init>(java.lang.String)>("Compose");

        r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode> = $r2;

        return;
    }

    public final androidx.compose.ui.platform.AndroidComposeView getOwnerView()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        androidx.compose.ui.platform.AndroidComposeView $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.platform.AndroidComposeView ownerView>;

        return $r1;
    }

    public long getUniqueId()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $l0 = virtualinvoke $r1.<android.graphics.RenderNode: long getUniqueId()>();

        return $l0;
    }

    public int getLeft()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getLeft()>();

        return $i0;
    }

    public int getTop()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getTop()>();

        return $i0;
    }

    public int getRight()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getRight()>();

        return $i0;
    }

    public int getBottom()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getBottom()>();

        return $i0;
    }

    public int getWidth()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getWidth()>();

        return $i0;
    }

    public int getHeight()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getHeight()>();

        return $i0;
    }

    public float getScaleX()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getScaleX()>();

        return $f0;
    }

    public void setScaleX(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setScaleX(float)>(f0);

        return;
    }

    public float getScaleY()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getScaleY()>();

        return $f0;
    }

    public void setScaleY(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setScaleY(float)>(f0);

        return;
    }

    public float getTranslationX()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getTranslationX()>();

        return $f0;
    }

    public void setTranslationX(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setTranslationX(float)>(f0);

        return;
    }

    public float getTranslationY()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getTranslationY()>();

        return $f0;
    }

    public void setTranslationY(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setTranslationY(float)>(f0);

        return;
    }

    public float getElevation()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getElevation()>();

        return $f0;
    }

    public void setElevation(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setElevation(float)>(f0);

        return;
    }

    public int getAmbientShadowColor()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getAmbientShadowColor()>();

        return $i0;
    }

    public void setAmbientShadowColor(int)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        int i0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setAmbientShadowColor(int)>(i0);

        return;
    }

    public int getSpotShadowColor()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i0 = virtualinvoke $r1.<android.graphics.RenderNode: int getSpotShadowColor()>();

        return $i0;
    }

    public void setSpotShadowColor(int)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        int i0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setSpotShadowColor(int)>(i0);

        return;
    }

    public float getRotationZ()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getRotationZ()>();

        return $f0;
    }

    public void setRotationZ(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setRotationZ(float)>(f0);

        return;
    }

    public float getRotationX()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getRotationX()>();

        return $f0;
    }

    public void setRotationX(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setRotationX(float)>(f0);

        return;
    }

    public float getRotationY()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getRotationY()>();

        return $f0;
    }

    public void setRotationY(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setRotationY(float)>(f0);

        return;
    }

    public float getCameraDistance()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getCameraDistance()>();

        return $f0;
    }

    public void setCameraDistance(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setCameraDistance(float)>(f0);

        return;
    }

    public float getPivotX()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getPivotX()>();

        return $f0;
    }

    public void setPivotX(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setPivotX(float)>(f0);

        return;
    }

    public float getPivotY()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getPivotY()>();

        return $f0;
    }

    public void setPivotY(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setPivotY(float)>(f0);

        return;
    }

    public boolean getClipToOutline()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z0 = virtualinvoke $r1.<android.graphics.RenderNode: boolean getClipToOutline()>();

        return $z0;
    }

    public void setClipToOutline(boolean)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        boolean z0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setClipToOutline(boolean)>(z0);

        return;
    }

    public boolean getClipToBounds()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z0 = virtualinvoke $r1.<android.graphics.RenderNode: boolean getClipToBounds()>();

        return $z0;
    }

    public void setClipToBounds(boolean)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        boolean z0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setClipToBounds(boolean)>(z0);

        return;
    }

    public float getAlpha()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r1.<android.graphics.RenderNode: float getAlpha()>();

        return $f0;
    }

    public void setAlpha(float)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        float f0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean setAlpha(float)>(f0);

        return;
    }

    public androidx.compose.ui.graphics.RenderEffect getRenderEffect()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        androidx.compose.ui.graphics.RenderEffect $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.graphics.RenderEffect internalRenderEffect>;

        return $r1;
    }

    public void setRenderEffect(androidx.compose.ui.graphics.RenderEffect)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        androidx.compose.ui.graphics.RenderEffect r1;
        int $i0;
        android.graphics.RenderNode $r2;
        androidx.compose.ui.platform.RenderNodeApi29VerificationHelper $r3;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: androidx.compose.ui.graphics.RenderEffect;

        r0.<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.graphics.RenderEffect internalRenderEffect> = r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 31 goto label1;

        $r3 = <androidx.compose.ui.platform.RenderNodeApi29VerificationHelper: androidx.compose.ui.platform.RenderNodeApi29VerificationHelper INSTANCE>;

        $r2 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r3.<androidx.compose.ui.platform.RenderNodeApi29VerificationHelper: void setRenderEffect(android.graphics.RenderNode,androidx.compose.ui.graphics.RenderEffect)>($r2, r1);

     label1:
        return;
    }

    public boolean getHasDisplayList()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z0 = virtualinvoke $r1.<android.graphics.RenderNode: boolean hasDisplayList()>();

        return $z0;
    }

    public void setOutline(android.graphics.Outline)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.Outline r1;
        android.graphics.RenderNode $r2;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r2.<android.graphics.RenderNode: boolean setOutline(android.graphics.Outline)>(r1);

        return;
    }

    public boolean setPosition(int, int, int, int)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        int i0, i1, i2, i3;
        android.graphics.RenderNode $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z0 = virtualinvoke $r1.<android.graphics.RenderNode: boolean setPosition(int,int,int,int)>(i0, i1, i2, i3);

        return $z0;
    }

    public void offsetLeftAndRight(int)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        int i0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean offsetLeftAndRight(int)>(i0);

        return;
    }

    public void offsetTopAndBottom(int)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        int i0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: boolean offsetTopAndBottom(int)>(i0);

        return;
    }

    public void record(androidx.compose.ui.graphics.CanvasHolder, androidx.compose.ui.graphics.Path, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        androidx.compose.ui.graphics.CanvasHolder r1, r4;
        androidx.compose.ui.graphics.Path r2;
        kotlin.jvm.functions.Function1 r3;
        android.graphics.Canvas r5, r6;
        androidx.compose.ui.graphics.Canvas $r7;
        android.graphics.RenderNode $r8, $r15;
        android.graphics.RecordingCanvas $r9;
        androidx.compose.ui.graphics.AndroidCanvas $r10, $r11, $r12, $r14;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: androidx.compose.ui.graphics.CanvasHolder;

        r2 := @parameter1: androidx.compose.ui.graphics.Path;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvasHolder");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "drawBlock");

        r4 = r1;

        $r8 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $r9 = virtualinvoke $r8.<android.graphics.RenderNode: android.graphics.RecordingCanvas beginRecording()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "renderNode.beginRecording()");

        r5 = (android.graphics.Canvas) $r9;

        $r10 = virtualinvoke r4.<androidx.compose.ui.graphics.CanvasHolder: androidx.compose.ui.graphics.AndroidCanvas getAndroidCanvas()>();

        r6 = virtualinvoke $r10.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas getInternalCanvas()>();

        $r11 = virtualinvoke r4.<androidx.compose.ui.graphics.CanvasHolder: androidx.compose.ui.graphics.AndroidCanvas getAndroidCanvas()>();

        virtualinvoke $r11.<androidx.compose.ui.graphics.AndroidCanvas: void setInternalCanvas(android.graphics.Canvas)>(r5);

        $r12 = virtualinvoke r4.<androidx.compose.ui.graphics.CanvasHolder: androidx.compose.ui.graphics.AndroidCanvas getAndroidCanvas()>();

        $r7 = (androidx.compose.ui.graphics.Canvas) $r12;

        if r2 == null goto label1;

        interfaceinvoke $r7.<androidx.compose.ui.graphics.Canvas: void save()>();

        staticinvoke <androidx.compose.ui.graphics.Canvas: void clipPath-mtrdD-E$default(androidx.compose.ui.graphics.Canvas,androidx.compose.ui.graphics.Path,int,int,java.lang.Object)>($r7, r2, 0, 2, null);

     label1:
        interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        if r2 == null goto label2;

        interfaceinvoke $r7.<androidx.compose.ui.graphics.Canvas: void restore()>();

     label2:
        $r14 = virtualinvoke r4.<androidx.compose.ui.graphics.CanvasHolder: androidx.compose.ui.graphics.AndroidCanvas getAndroidCanvas()>();

        virtualinvoke $r14.<androidx.compose.ui.graphics.AndroidCanvas: void setInternalCanvas(android.graphics.Canvas)>(r6);

        $r15 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r15.<android.graphics.RenderNode: void endRecording()>();

        return;
    }

    public void getMatrix(android.graphics.Matrix)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.Matrix r1;
        android.graphics.RenderNode $r2;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: android.graphics.Matrix;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matrix");

        $r2 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r2.<android.graphics.RenderNode: void getMatrix(android.graphics.Matrix)>(r1);

        return;
    }

    public void getInverseMatrix(android.graphics.Matrix)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.Matrix r1;
        android.graphics.RenderNode $r2;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: android.graphics.Matrix;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matrix");

        $r2 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r2.<android.graphics.RenderNode: void getInverseMatrix(android.graphics.Matrix)>(r1);

        return;
    }

    public void drawInto(android.graphics.Canvas)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.Canvas r1;
        android.graphics.RenderNode $r2;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r2 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRenderNode(android.graphics.RenderNode)>($r2);

        return;
    }

    public boolean setHasOverlappingRendering(boolean)
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        boolean z0, $z1;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z1 = virtualinvoke $r1.<android.graphics.RenderNode: boolean setHasOverlappingRendering(boolean)>(z0);

        return $z1;
    }

    public androidx.compose.ui.platform.DeviceRenderNodeData dumpRenderNodeData()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        androidx.compose.ui.platform.DeviceRenderNodeData $r1;
        android.graphics.RenderNode $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean $z0, $z1;
        androidx.compose.ui.graphics.RenderEffect $r25;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = new androidx.compose.ui.platform.DeviceRenderNodeData;

        $r2 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $l0 = virtualinvoke $r2.<android.graphics.RenderNode: long getUniqueId()>();

        $r3 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i1 = virtualinvoke $r3.<android.graphics.RenderNode: int getLeft()>();

        $r4 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i2 = virtualinvoke $r4.<android.graphics.RenderNode: int getTop()>();

        $r5 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i3 = virtualinvoke $r5.<android.graphics.RenderNode: int getRight()>();

        $r6 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i4 = virtualinvoke $r6.<android.graphics.RenderNode: int getBottom()>();

        $r7 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i5 = virtualinvoke $r7.<android.graphics.RenderNode: int getWidth()>();

        $r8 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i6 = virtualinvoke $r8.<android.graphics.RenderNode: int getHeight()>();

        $r9 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r9.<android.graphics.RenderNode: float getScaleX()>();

        $r10 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f1 = virtualinvoke $r10.<android.graphics.RenderNode: float getScaleY()>();

        $r11 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f2 = virtualinvoke $r11.<android.graphics.RenderNode: float getTranslationX()>();

        $r12 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f3 = virtualinvoke $r12.<android.graphics.RenderNode: float getTranslationY()>();

        $r13 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f4 = virtualinvoke $r13.<android.graphics.RenderNode: float getElevation()>();

        $r14 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i7 = virtualinvoke $r14.<android.graphics.RenderNode: int getAmbientShadowColor()>();

        $r15 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $i8 = virtualinvoke $r15.<android.graphics.RenderNode: int getSpotShadowColor()>();

        $r16 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f5 = virtualinvoke $r16.<android.graphics.RenderNode: float getRotationZ()>();

        $r17 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f6 = virtualinvoke $r17.<android.graphics.RenderNode: float getRotationX()>();

        $r18 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f7 = virtualinvoke $r18.<android.graphics.RenderNode: float getRotationY()>();

        $r19 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f8 = virtualinvoke $r19.<android.graphics.RenderNode: float getCameraDistance()>();

        $r20 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f9 = virtualinvoke $r20.<android.graphics.RenderNode: float getPivotX()>();

        $r21 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f10 = virtualinvoke $r21.<android.graphics.RenderNode: float getPivotY()>();

        $r22 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z0 = virtualinvoke $r22.<android.graphics.RenderNode: boolean getClipToOutline()>();

        $r23 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $z1 = virtualinvoke $r23.<android.graphics.RenderNode: boolean getClipToBounds()>();

        $r24 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        $f11 = virtualinvoke $r24.<android.graphics.RenderNode: float getAlpha()>();

        $r25 = r0.<androidx.compose.ui.platform.RenderNodeApi29: androidx.compose.ui.graphics.RenderEffect internalRenderEffect>;

        specialinvoke $r1.<androidx.compose.ui.platform.DeviceRenderNodeData: void <init>(long,int,int,int,int,int,int,float,float,float,float,float,int,int,float,float,float,float,float,float,boolean,boolean,float,androidx.compose.ui.graphics.RenderEffect)>($l0, $i1, $i2, $i3, $i4, $i5, $i6, $f0, $f1, $f2, $f3, $f4, $i7, $i8, $f5, $f6, $f7, $f8, $f9, $f10, $z0, $z1, $f11, $r25);

        return $r1;
    }

    public void discardDisplayList()
    {
        androidx.compose.ui.platform.RenderNodeApi29 r0;
        android.graphics.RenderNode $r1;

        r0 := @this: androidx.compose.ui.platform.RenderNodeApi29;

        $r1 = r0.<androidx.compose.ui.platform.RenderNodeApi29: android.graphics.RenderNode renderNode>;

        virtualinvoke $r1.<android.graphics.RenderNode: void discardDisplayList()>();

        return;
    }

