androidx.ui.animation.AnimatedValueModel
<androidx.ui.animation.AnimatedValueModel: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.animation.AnimatedValueModel: androidx.compose.MutableState value$delegate>
    public void <init>(java.lang.Object, androidx.animation.TwoWayConverter, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector)
    {
        androidx.ui.animation.AnimatedValueModel r0;
        java.lang.Object r1;
        androidx.animation.TwoWayConverter r2;
        androidx.animation.AnimationClockObservable r3;
        androidx.animation.AnimationVector r4;
        kotlin.jvm.functions.Function2 $r5;
        androidx.compose.MutableState $r6;

        r0 := @this: androidx.ui.animation.AnimatedValueModel;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.animation.TwoWayConverter;

        r3 := @parameter2: androidx.animation.AnimationClockObservable;

        r4 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "clock");

        specialinvoke r0.<androidx.animation.AnimatedValue: void <init>(androidx.animation.TwoWayConverter,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r2, r3, r4);

        $r5 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r6 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>(r1, $r5);

        r0.<androidx.ui.animation.AnimatedValueModel: androidx.compose.MutableState value$delegate> = $r6;

        return;
    }

    public void <init>(java.lang.Object, androidx.animation.TwoWayConverter, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.animation.AnimatedValueModel r0;
        java.lang.Object r1;
        androidx.animation.TwoWayConverter r2;
        androidx.animation.AnimationClockObservable r3;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r4;
        androidx.animation.AnimationVector r5;

        r0 := @this: androidx.ui.animation.AnimatedValueModel;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.animation.TwoWayConverter;

        r3 := @parameter2: androidx.animation.AnimationClockObservable;

        r5 := @parameter3: androidx.animation.AnimationVector;

        i0 := @parameter4: int;

        r4 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        r5 = (androidx.animation.AnimationVector) null;

     label1:
        specialinvoke r0.<androidx.ui.animation.AnimatedValueModel: void <init>(java.lang.Object,androidx.animation.TwoWayConverter,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r1, r2, r3, r5);

        return;
    }

    public java.lang.Object getValue()
    {
        androidx.ui.animation.AnimatedValueModel r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.ui.animation.AnimatedValueModel;

        $r3 = r0.<androidx.ui.animation.AnimatedValueModel: androidx.compose.MutableState value$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.animation.AnimatedValueModel: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        return $r5;
    }

    protected void setValue(java.lang.Object)
    {
        androidx.ui.animation.AnimatedValueModel r0;
        java.lang.Object r1;
        androidx.compose.MutableState $r2;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.animation.AnimatedValueModel;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.ui.animation.AnimatedValueModel: androidx.compose.MutableState value$delegate>;

        $r4 = <androidx.ui.animation.AnimatedValueModel: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[0];

        interfaceinvoke $r2.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.MutablePropertyReference1 $r4;
        kotlin.reflect.KMutableProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/animation/AnimatedValueModel;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "value", "getValue()Ljava/lang/Object;");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.ui.animation.AnimatedValueModel: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

