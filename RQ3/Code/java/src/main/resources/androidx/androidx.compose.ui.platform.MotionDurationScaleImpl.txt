androidx.compose.ui.platform.MotionDurationScaleImpl
<androidx.compose.ui.platform.MotionDurationScaleImpl: androidx.compose.runtime.MutableState scaleFactor$delegate>
    public void <init>()
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        java.lang.Float $r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        $r2 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r1, null, 2, null);

        r0.<androidx.compose.ui.platform.MotionDurationScaleImpl: androidx.compose.runtime.MutableState scaleFactor$delegate> = $r2;

        return;
    }

    public float getScaleFactor()
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        $r2 = r0.<androidx.compose.ui.platform.MotionDurationScaleImpl: androidx.compose.runtime.MutableState scaleFactor$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public void setScaleFactor(float)
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        float f0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Float r2;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.platform.MotionDurationScaleImpl: androidx.compose.runtime.MutableState scaleFactor$delegate>;

        r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = staticinvoke <androidx.compose.ui.MotionDurationScale$DefaultImpls: java.lang.Object fold(androidx.compose.ui.MotionDurationScale,java.lang.Object,kotlin.jvm.functions.Function2)>(r0, r1, r2);

        return $r3;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        kotlin.coroutines.CoroutineContext$Key r1;
        kotlin.coroutines.CoroutineContext$Element $r2;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r2 = staticinvoke <androidx.compose.ui.MotionDurationScale$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(androidx.compose.ui.MotionDurationScale,kotlin.coroutines.CoroutineContext$Key)>(r0, r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        kotlin.coroutines.CoroutineContext$Key r1;
        kotlin.coroutines.CoroutineContext $r2;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r2 = staticinvoke <androidx.compose.ui.MotionDurationScale$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(androidx.compose.ui.MotionDurationScale,kotlin.coroutines.CoroutineContext$Key)>(r0, r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.ui.platform.MotionDurationScaleImpl r0;
        kotlin.coroutines.CoroutineContext r1, $r2;

        r0 := @this: androidx.compose.ui.platform.MotionDurationScaleImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = staticinvoke <androidx.compose.ui.MotionDurationScale$DefaultImpls: kotlin.coroutines.CoroutineContext plus(androidx.compose.ui.MotionDurationScale,kotlin.coroutines.CoroutineContext)>(r0, r1);

        return $r2;
    }

