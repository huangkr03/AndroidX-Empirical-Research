androidx.health.connect.client.records.FloorsClimbedRecord
<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.FloorsClimbedRecord$Companion Companion>
<androidx.health.connect.client.records.FloorsClimbedRecord: double floors>
<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant startTime>
<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset startZoneOffset>
<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant endTime>
<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset endZoneOffset>
<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.metadata.Metadata metadata>
<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.aggregate.AggregateMetric FLOORS_CLIMBED_TOTAL>
    public void <init>(double, java.time.Instant, java.time.ZoneOffset, java.time.Instant, java.time.ZoneOffset, androidx.health.connect.client.records.metadata.Metadata)
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        double d0, $d1;
        java.time.Instant r1, r3;
        java.time.ZoneOffset r2, r4;
        androidx.health.connect.client.records.metadata.Metadata r5;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        d0 := @parameter0: double;

        r1 := @parameter1: java.time.Instant;

        r2 := @parameter2: java.time.ZoneOffset;

        r3 := @parameter3: java.time.Instant;

        r4 := @parameter4: java.time.ZoneOffset;

        r5 := @parameter5: androidx.health.connect.client.records.metadata.Metadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "endTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "metadata");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.records.FloorsClimbedRecord: double floors> = d0;

        r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant startTime> = r1;

        r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset startZoneOffset> = r2;

        r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant endTime> = r3;

        r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset endZoneOffset> = r4;

        r0.<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.metadata.Metadata metadata> = r5;

        $d1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: double floors>;

        staticinvoke <androidx.health.connect.client.records.UtilsKt: void requireNonNegative(double,java.lang.String)>($d1, "floors");

        return;
    }

    public void <init>(double, java.time.Instant, java.time.ZoneOffset, java.time.Instant, java.time.ZoneOffset, androidx.health.connect.client.records.metadata.Metadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        double d0;
        java.time.Instant r1, r3;
        java.time.ZoneOffset r2, r4;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r5;
        androidx.health.connect.client.records.metadata.Metadata r6;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        d0 := @parameter0: double;

        r1 := @parameter1: java.time.Instant;

        r2 := @parameter2: java.time.ZoneOffset;

        r3 := @parameter3: java.time.Instant;

        r4 := @parameter4: java.time.ZoneOffset;

        r6 := @parameter5: androidx.health.connect.client.records.metadata.Metadata;

        i0 := @parameter6: int;

        r5 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 32;

        if $i1 == 0 goto label1;

        r6 = <androidx.health.connect.client.records.metadata.Metadata: androidx.health.connect.client.records.metadata.Metadata EMPTY>;

     label1:
        specialinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: void <init>(double,java.time.Instant,java.time.ZoneOffset,java.time.Instant,java.time.ZoneOffset,androidx.health.connect.client.records.metadata.Metadata)>(d0, r1, r2, r3, r4, r6);

        return;
    }

    public final double getFloors()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        double $d0;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        $d0 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: double floors>;

        return $d0;
    }

    public java.time.Instant getStartTime()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        $r1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant startTime>;

        return $r1;
    }

    public java.time.ZoneOffset getStartZoneOffset()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        $r1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset startZoneOffset>;

        return $r1;
    }

    public java.time.Instant getEndTime()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        $r1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant endTime>;

        return $r1;
    }

    public java.time.ZoneOffset getEndZoneOffset()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        $r1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset endZoneOffset>;

        return $r1;
    }

    public androidx.health.connect.client.records.metadata.Metadata getMetadata()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        androidx.health.connect.client.records.metadata.Metadata $r1;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        $r1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.metadata.Metadata metadata>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0, $r2, $r4, $r7, $r10, $r13, $r16;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        double $d0, $d1;
        byte $b0;
        java.time.Instant $r3, $r5, $r9, $r11;
        java.time.ZoneOffset $r6, $r8, $r12, $r14;
        androidx.health.connect.client.records.metadata.Metadata $r15, $r17;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof androidx.health.connect.client.records.FloorsClimbedRecord;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $d1 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: double floors>;

        $r2 = (androidx.health.connect.client.records.FloorsClimbedRecord) r1;

        $d0 = $r2.<androidx.health.connect.client.records.FloorsClimbedRecord: double floors>;

        $b0 = $d1 cmpg $d0;

        if $b0 != 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        if $z6 != 0 goto label05;

        return 0;

     label05:
        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant getStartTime()>();

        $r4 = (androidx.health.connect.client.records.FloorsClimbedRecord) r1;

        $r5 = virtualinvoke $r4.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant getStartTime()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 != 0 goto label06;

        return 0;

     label06:
        $r6 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset getStartZoneOffset()>();

        $r7 = (androidx.health.connect.client.records.FloorsClimbedRecord) r1;

        $r8 = virtualinvoke $r7.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset getStartZoneOffset()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r8);

        if $z2 != 0 goto label07;

        return 0;

     label07:
        $r9 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant getEndTime()>();

        $r10 = (androidx.health.connect.client.records.FloorsClimbedRecord) r1;

        $r11 = virtualinvoke $r10.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant getEndTime()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r11);

        if $z3 != 0 goto label08;

        return 0;

     label08:
        $r12 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset getEndZoneOffset()>();

        $r13 = (androidx.health.connect.client.records.FloorsClimbedRecord) r1;

        $r14 = virtualinvoke $r13.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset getEndZoneOffset()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r14);

        if $z4 != 0 goto label09;

        return 0;

     label09:
        $r15 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $r16 = (androidx.health.connect.client.records.FloorsClimbedRecord) r1;

        $r17 = virtualinvoke $r16.<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r17);

        if $z5 != 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord r0;
        double $d0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, $i10, i11, i12, $i13, i14, i15;
        java.time.ZoneOffset $r1, $r3;
        java.time.Instant $r2;
        androidx.health.connect.client.records.metadata.Metadata $r4;
        byte b8;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord;

        b8 = 0;

        $i0 = 31 * b8;

        $d0 = r0.<androidx.health.connect.client.records.FloorsClimbedRecord: double floors>;

        $i1 = staticinvoke <java.lang.Double: int hashCode(double)>($d0);

        i9 = $i0 + $i1;

        $i2 = 31 * i9;

        $r1 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset getStartZoneOffset()>();

        if $r1 == null goto label1;

        $i10 = virtualinvoke $r1.<java.time.ZoneOffset: int hashCode()>();

        goto label2;

     label1:
        $i10 = 0;

     label2:
        i11 = $i2 + $i10;

        $i3 = 31 * i11;

        $r2 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.Instant getEndTime()>();

        $i4 = virtualinvoke $r2.<java.time.Instant: int hashCode()>();

        i12 = $i3 + $i4;

        $i5 = 31 * i12;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: java.time.ZoneOffset getEndZoneOffset()>();

        if $r3 == null goto label3;

        $i13 = virtualinvoke $r3.<java.time.ZoneOffset: int hashCode()>();

        goto label4;

     label3:
        $i13 = 0;

     label4:
        i14 = $i5 + $i13;

        $i6 = 31 * i14;

        $r4 = virtualinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $i7 = virtualinvoke $r4.<androidx.health.connect.client.records.metadata.Metadata: int hashCode()>();

        i15 = $i6 + $i7;

        return i15;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord$Companion $r0;
        androidx.health.connect.client.aggregate.AggregateMetric$AggregationType $r1;
        androidx.health.connect.client.aggregate.AggregateMetric$Companion $r2;
        androidx.health.connect.client.aggregate.AggregateMetric $r3;

        $r0 = new androidx.health.connect.client.records.FloorsClimbedRecord$Companion;

        specialinvoke $r0.<androidx.health.connect.client.records.FloorsClimbedRecord$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.records.FloorsClimbedRecord$Companion Companion> = $r0;

        $r2 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r1 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType TOTAL>;

        $r3 = virtualinvoke $r2.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric doubleMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("FloorsClimbed", $r1, "floors");

        <androidx.health.connect.client.records.FloorsClimbedRecord: androidx.health.connect.client.aggregate.AggregateMetric FLOORS_CLIMBED_TOTAL> = $r3;

        return;
    }

androidx.health.connect.client.records.FloorsClimbedRecord$Companion
    private void <init>()
    {
        androidx.health.connect.client.records.FloorsClimbedRecord$Companion r0;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.FloorsClimbedRecord$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.records.FloorsClimbedRecord$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.records.FloorsClimbedRecord$Companion: void <init>()>();

        return;
    }

