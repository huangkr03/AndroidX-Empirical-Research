androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner
<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: java.util.List testProcessors>
<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: java.lang.String name>
    public void <init>(java.util.List)
    {
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner r0;
        java.util.List r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testProcessors");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: java.util.List testProcessors> = r1;

        r0.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: java.lang.String name> = "javac";

        return;
    }

    public void <init>(java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.util.List r2;

        r0 := @this: androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        r2 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        specialinvoke r0.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: void <init>(java.util.List)>(r2);

        return;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        $r1 = r0.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: java.lang.String name>;

        return $r1;
    }

    public boolean canRun(androidx.room.compiler.processing.util.runner.TestCompilationParameters)
    {
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner r0;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.room.compiler.processing.util.Source r5;
        java.util.List $r6;
        boolean $z2, $z3, $z4, $z5, $z6;
        java.util.Collection $r7;

        r0 := @this: androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        r1 := @parameter0: androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        $r6 = virtualinvoke r1.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getSources()>();

        $r2 = (java.lang.Iterable) $r6;

        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r7 = (java.util.Collection) $r2;

        $z4 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.util.Source) r4;

        $z3 = r5 instanceof androidx.room.compiler.processing.util.Source$JavaSource;

        if $z3 != 0 goto label2;

        $z5 = 0;

        goto label4;

     label3:
        $z5 = 1;

     label4:
        return $z5;
    }

    public androidx.room.compiler.processing.util.CompilationResult compile(java.io.File, androidx.room.compiler.processing.util.runner.TestCompilationParameters)
    {
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner r0;
        java.io.File r1;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters r2;
        androidx.room.compiler.processing.SyntheticJavacProcessor r3, r9, r13, $r16;
        java.util.List r4, r5, r6, r11, $r18, $r19, $r21, $r28, $r31, $r33, $r35, $r44, $r47, $r72, $r86, $r130, $r139, r141;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner r7, r15;
        com.google.testing.compile.Compilation r8, r14, $r103;
        java.util.Map r10, r12, $r22, $r48, r97, r101, $r106, r109, $r112, $r123, r126, r129, $r132, r137;
        androidx.room.compiler.processing.XProcessingEnvConfig $r17;
        java.util.Collection $r20, $r30, $r32, $r36, $r50, r88, r92, r114;
        boolean $z0, $z1, $z2, $z3, $z6, $z10, z12, $z13, z14, z15, $z16, z19, z23, z28, z30, z31, $z32, z33;
        java.util.Set $r23, $r38;
        java.util.ArrayList $r24, $r43, $r54;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        com.google.testing.compile.Compiler $r25, $r27, $r93, $r94, $r95;
        java.lang.Iterable $r26, $r29, $r34, $r39, $r51, $r73, $r87, $r96, $r104, r105, r113, r115, $r121, r122, r131;
        java.util.LinkedHashMap $r37, $r45, $r49, $r64;
        com.google.testing.compile.Compilation$Status $r40, $r41;
        com.google.common.collect.ImmutableList $r42, $r46, $r63;
        androidx.room.compiler.processing.util.JavaCompileTestingCompilationResult $r52;
        androidx.room.compiler.processing.util.CompilationResult $r53;
        androidx.room.compiler.processing.util.Source$Companion $r56, $r65, $r84;
        androidx.room.compiler.processing.util.Source $r57, $r66, $r85, r100;
        java.lang.Object $r58, $r59, $r61, $r67, $r68, $r76, $r80, r90, r99, $r108, r117, r118, $r125, $r134, r138, $r140;
        javax.tools.JavaFileObject $r62, $r70, r110, r120, r127;
        java.lang.StringBuilder $r74, $r75, $r78, $r79, $r82;
        java.lang.String $r77, $r81, $r83;
        java.util.Iterator $r89, $r98, r107, $r116, r124, r133;
        java.util.Map$Entry r91;
        kotlin.Pair r111, r128;
        javax.tools.Diagnostic r119;
        androidx.room.compiler.processing.util.DiagnosticMessage r135;
        javax.tools.Diagnostic$Kind $r136;

        r0 := @this: androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workingDir");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "params");

        $r16 = new androidx.room.compiler.processing.SyntheticJavacProcessor;

        $r17 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: androidx.room.compiler.processing.XProcessingEnvConfig getConfig()>();

        $r18 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getHandlers()>();

        specialinvoke $r16.<androidx.room.compiler.processing.SyntheticJavacProcessor: void <init>(androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>($r17, $r18);

        r3 = $r16;

        $r19 = r0.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: java.util.List testProcessors>;

        $r20 = (java.util.Collection) $r19;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r20, r3);

        $r21 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getSources()>();

        $z0 = interfaceinvoke $r21.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r84 = <androidx.room.compiler.processing.util.Source: androidx.room.compiler.processing.util.Source$Companion Companion>;

        $r85 = virtualinvoke $r84.<androidx.room.compiler.processing.util.Source$Companion: androidx.room.compiler.processing.util.Source java(java.lang.String,java.lang.String)>("foo.bar.SyntheticSource", "package foo.bar;\npublic class SyntheticSource {}");

        $r86 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r85);

        goto label02;

     label01:
        $r86 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getSources()>();

     label02:
        r5 = $r86;

        $r22 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.Map getOptions()>();

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>();

        $r87 = (java.lang.Iterable) $r23;

        $r24 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r87, 10);

        specialinvoke $r24.<java.util.ArrayList: void <init>(int)>($i0);

        r88 = (java.util.Collection) $r24;

        $r89 = interfaceinvoke $r87.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z10 = interfaceinvoke $r89.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label04;

        r90 = interfaceinvoke $r89.<java.util.Iterator: java.lang.Object next()>();

        r91 = (java.util.Map$Entry) r90;

        r92 = r88;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-A");

        $r76 = interfaceinvoke r91.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r77 = (java.lang.String) $r76;

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r80 = interfaceinvoke r91.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r81 = (java.lang.String) $r80;

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r92.<java.util.Collection: boolean add(java.lang.Object)>($r83);

        goto label03;

     label04:
        r6 = (java.util.List) r88;

        $r25 = staticinvoke <com.google.testing.compile.Compiler: com.google.testing.compile.Compiler javac()>();

        $r26 = (java.lang.Iterable) r4;

        $r27 = virtualinvoke $r25.<com.google.testing.compile.Compiler: com.google.testing.compile.Compiler withProcessors(java.lang.Iterable)>($r26);

        $r28 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getJavacArguments()>();

        $r30 = (java.util.Collection) $r28;

        $r29 = (java.lang.Iterable) r6;

        $r31 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r30, $r29);

        $r32 = (java.util.Collection) $r31;

        $r33 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r32, "-Xlint");

        $r34 = (java.lang.Iterable) $r33;

        $r93 = virtualinvoke $r27.<com.google.testing.compile.Compiler: com.google.testing.compile.Compiler withOptions(java.lang.Iterable)>($r34);

        z12 = 0;

        $r35 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getClasspath()>();

        $r36 = (java.util.Collection) $r35;

        $z1 = interfaceinvoke $r36.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        $z13 = 1;

        goto label06;

     label05:
        $z13 = 0;

     label06:
        if $z13 == 0 goto label07;

        $r72 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getClasspath()>();

        $r73 = (java.lang.Iterable) $r72;

        $r94 = virtualinvoke $r93.<com.google.testing.compile.Compiler: com.google.testing.compile.Compiler withClasspath(java.lang.Iterable)>($r73);

        goto label08;

     label07:
        $r94 = $r93;

     label08:
        $r95 = $r94;

        $r96 = (java.lang.Iterable) r5;

        z14 = 0;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r96, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        $r37 = new java.util.LinkedHashMap;

        $i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        specialinvoke $r37.<java.util.LinkedHashMap: void <init>(int)>($i7);

        r97 = (java.util.Map) $r37;

        z15 = 0;

        $r98 = interfaceinvoke $r96.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z16 = interfaceinvoke $r98.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label10;

        r99 = interfaceinvoke $r98.<java.util.Iterator: java.lang.Object next()>();

        r100 = (androidx.room.compiler.processing.util.Source) r99;

        r101 = r97;

        $r70 = virtualinvoke r100.<androidx.room.compiler.processing.util.Source: javax.tools.JavaFileObject toJFO()>();

        interfaceinvoke r101.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, r99);

        goto label09;

     label10:
        $r38 = interfaceinvoke r97.<java.util.Map: java.util.Set keySet()>();

        $r39 = (java.lang.Iterable) $r38;

        $r103 = virtualinvoke $r95.<com.google.testing.compile.Compiler: com.google.testing.compile.Compilation compile(java.lang.Iterable)>($r39);

        $r40 = virtualinvoke $r103.<com.google.testing.compile.Compilation: com.google.testing.compile.Compilation$Status status()>();

        $r41 = <com.google.testing.compile.Compilation$Status: com.google.testing.compile.Compilation$Status SUCCESS>;

        if $r40 != $r41 goto label13;

        $r63 = virtualinvoke $r103.<com.google.testing.compile.Compilation: com.google.common.collect.ImmutableList generatedSourceFiles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r63, "compilation.generatedSourceFiles()");

        $r104 = (java.lang.Iterable) $r63;

        $i5 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r104, 10);

        $i6 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i5);

        i8 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i6, 16);

        r105 = $r104;

        $r64 = new java.util.LinkedHashMap;

        specialinvoke $r64.<java.util.LinkedHashMap: void <init>(int)>(i8);

        $r106 = (java.util.Map) $r64;

        z19 = 0;

        r107 = interfaceinvoke r105.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z6 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label12;

        $r108 = interfaceinvoke r107.<java.util.Iterator: java.lang.Object next()>();

        r109 = $r106;

        r110 = (javax.tools.JavaFileObject) $r108;

        $r65 = <androidx.room.compiler.processing.util.Source: androidx.room.compiler.processing.util.Source$Companion Companion>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r110, "it");

        $r66 = virtualinvoke $r65.<androidx.room.compiler.processing.util.Source$Companion: androidx.room.compiler.processing.util.Source fromJavaFileObject(javax.tools.JavaFileObject)>(r110);

        r111 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r110, $r66);

        $r67 = virtualinvoke r111.<kotlin.Pair: java.lang.Object getFirst()>();

        $r68 = virtualinvoke r111.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r109.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r67, $r68);

        goto label11;

     label12:
        $r112 = $r106;

        goto label19;

     label13:
        $r42 = virtualinvoke $r103.<com.google.testing.compile.Compilation: com.google.common.collect.ImmutableList diagnostics()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r42, "compilation.diagnostics()");

        r113 = (java.lang.Iterable) $r42;

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        r114 = (java.util.Collection) $r43;

        r115 = r113;

        z23 = 0;

        $r116 = interfaceinvoke r115.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke $r116.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        r117 = interfaceinvoke $r116.<java.util.Iterator: java.lang.Object next()>();

        r118 = r117;

        r119 = (javax.tools.Diagnostic) r118;

        $r61 = interfaceinvoke r119.<javax.tools.Diagnostic: java.lang.Object getSource()>();

        $r62 = (javax.tools.JavaFileObject) $r61;

        if $r62 == null goto label15;

        r120 = $r62;

        interfaceinvoke r114.<java.util.Collection: boolean add(java.lang.Object)>(r120);

        goto label15;

     label15:
        goto label14;

     label16:
        $r44 = (java.util.List) r114;

        $r121 = (java.lang.Iterable) $r44;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r121, 10);

        $i4 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i3);

        i9 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i4, 16);

        r122 = $r121;

        $r45 = new java.util.LinkedHashMap;

        specialinvoke $r45.<java.util.LinkedHashMap: void <init>(int)>(i9);

        $r123 = (java.util.Map) $r45;

        z28 = 0;

        r124 = interfaceinvoke r122.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z3 = interfaceinvoke r124.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r125 = interfaceinvoke r124.<java.util.Iterator: java.lang.Object next()>();

        r126 = $r123;

        r127 = (javax.tools.JavaFileObject) $r125;

        $r56 = <androidx.room.compiler.processing.util.Source: androidx.room.compiler.processing.util.Source$Companion Companion>;

        $r57 = virtualinvoke $r56.<androidx.room.compiler.processing.util.Source$Companion: androidx.room.compiler.processing.util.Source fromJavaFileObject(javax.tools.JavaFileObject)>(r127);

        r128 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r127, $r57);

        $r58 = virtualinvoke r128.<kotlin.Pair: java.lang.Object getFirst()>();

        $r59 = virtualinvoke r128.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r126.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, $r59);

        goto label17;

     label18:
        $r112 = $r123;

     label19:
        r129 = $r112;

        $r46 = virtualinvoke $r103.<com.google.testing.compile.Compilation: com.google.common.collect.ImmutableList diagnostics()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r46, "compilation.diagnostics()");

        $r47 = (java.util.List) $r46;

        $r48 = staticinvoke <kotlin.collections.MapsKt: java.util.Map plus(java.util.Map,java.util.Map)>(r97, r129);

        $r130 = staticinvoke <androidx.room.compiler.processing.util.TestUiltsKt: java.util.List toDiagnosticMessages(java.util.List,java.util.Map)>($r47, $r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r103, "compilation");

        r9 = r3;

        r8 = $r103;

        r7 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) r0;

        z30 = 0;

        r131 = (java.lang.Iterable) $r130;

        $r49 = new java.util.LinkedHashMap;

        specialinvoke $r49.<java.util.LinkedHashMap: void <init>()>();

        $r132 = (java.util.Map) $r49;

        z31 = 0;

        r133 = interfaceinvoke r131.<java.lang.Iterable: java.util.Iterator iterator()>();

     label20:
        $z32 = interfaceinvoke r133.<java.util.Iterator: boolean hasNext()>();

        if $z32 == 0 goto label23;

        $r134 = interfaceinvoke r133.<java.util.Iterator: java.lang.Object next()>();

        r135 = (androidx.room.compiler.processing.util.DiagnosticMessage) $r134;

        z33 = 0;

        $r136 = virtualinvoke r135.<androidx.room.compiler.processing.util.DiagnosticMessage: javax.tools.Diagnostic$Kind getKind()>();

        r137 = $r132;

        r138 = interfaceinvoke r137.<java.util.Map: java.lang.Object get(java.lang.Object)>($r136);

        if r138 != null goto label21;

        $r54 = new java.util.ArrayList;

        specialinvoke $r54.<java.util.ArrayList: void <init>()>();

        $r139 = (java.util.List) $r54;

        interfaceinvoke r137.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r136, $r139);

        $r140 = $r139;

        goto label22;

     label21:
        $r140 = r138;

     label22:
        r141 = (java.util.List) $r140;

        interfaceinvoke r141.<java.util.List: boolean add(java.lang.Object)>($r134);

        goto label20;

     label23:
        r10 = $r132;

        $r50 = interfaceinvoke r129.<java.util.Map: java.util.Collection values()>();

        $r51 = (java.lang.Iterable) $r50;

        r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r51);

        r12 = r10;

        r13 = r9;

        r14 = r8;

        r15 = r7;

        $r52 = new androidx.room.compiler.processing.util.JavaCompileTestingCompilationResult;

        specialinvoke $r52.<androidx.room.compiler.processing.util.JavaCompileTestingCompilationResult: void <init>(androidx.room.compiler.processing.util.runner.CompilationTestRunner,com.google.testing.compile.Compilation,androidx.room.compiler.processing.SyntheticJavacProcessor,java.util.Map,java.util.List)>(r15, r14, r13, r12, r11);

        $r53 = (androidx.room.compiler.processing.util.CompilationResult) $r52;

        return $r53;
    }

    public void <init>()
    {
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner r0;

        r0 := @this: androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        specialinvoke r0.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

