androidx.media3.test.utils.robolectric.RobolectricUtil
<androidx.media3.test.utils.robolectric.RobolectricUtil: long DEFAULT_TIMEOUT_MS>
    private void <init>()
    {
        androidx.media3.test.utils.robolectric.RobolectricUtil r0;

        r0 := @this: androidx.media3.test.utils.robolectric.RobolectricUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.media3.common.util.ConditionVariable createRobolectricConditionVariable()
    {
        androidx.media3.test.utils.robolectric.RobolectricUtil$1 r2;
        androidx.media3.common.util.ConditionVariable r3;
        androidx.media3.common.util.Clock r4;

        r3 = new androidx.media3.common.util.ConditionVariable;

        r2 = new androidx.media3.test.utils.robolectric.RobolectricUtil$1;

        specialinvoke r2.<androidx.media3.test.utils.robolectric.RobolectricUtil$1: void <init>()>();

        r4 = (androidx.media3.common.util.Clock) r2;

        specialinvoke r3.<androidx.media3.common.util.ConditionVariable: void <init>(androidx.media3.common.util.Clock)>(r4);

        return r3;
    }

    public static void runMainLooperUntil(com.google.common.base.Supplier) throws java.util.concurrent.TimeoutException
    {
        com.google.common.base.Supplier r0;
        androidx.media3.common.util.Clock $r1;

        r0 := @parameter0: com.google.common.base.Supplier;

        $r1 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        staticinvoke <androidx.media3.test.utils.robolectric.RobolectricUtil: void runMainLooperUntil(com.google.common.base.Supplier,long,androidx.media3.common.util.Clock)>(r0, 10000L, $r1);

        return;
    }

    public static void runMainLooperUntil(com.google.common.base.Supplier, long, androidx.media3.common.util.Clock) throws java.util.concurrent.TimeoutException
    {
        com.google.common.base.Supplier r0;
        long l0;
        androidx.media3.common.util.Clock r1;
        android.os.Looper $r2;

        r0 := @parameter0: com.google.common.base.Supplier;

        l0 := @parameter1: long;

        r1 := @parameter2: androidx.media3.common.util.Clock;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        staticinvoke <androidx.media3.test.utils.robolectric.RobolectricUtil: void runLooperUntil(android.os.Looper,com.google.common.base.Supplier,long,androidx.media3.common.util.Clock)>($r2, r0, l0, r1);

        return;
    }

    public static void runLooperUntil(android.os.Looper, com.google.common.base.Supplier) throws java.util.concurrent.TimeoutException
    {
        android.os.Looper r0;
        com.google.common.base.Supplier r1;
        androidx.media3.common.util.Clock $r2;

        r0 := @parameter0: android.os.Looper;

        r1 := @parameter1: com.google.common.base.Supplier;

        $r2 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        staticinvoke <androidx.media3.test.utils.robolectric.RobolectricUtil: void runLooperUntil(android.os.Looper,com.google.common.base.Supplier,long,androidx.media3.common.util.Clock)>(r0, r1, 10000L, $r2);

        return;
    }

    public static void runLooperUntil(android.os.Looper, com.google.common.base.Supplier, long, androidx.media3.common.util.Clock) throws java.util.concurrent.TimeoutException
    {
        android.os.Looper r0, $r4;
        com.google.common.base.Supplier r1;
        long l0, l1, $l2, $l3;
        androidx.media3.common.util.Clock r2;
        org.robolectric.shadows.ShadowLooper r3;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        byte $b4;
        java.util.concurrent.TimeoutException $r7;
        java.lang.IllegalStateException $r8;

        r0 := @parameter0: android.os.Looper;

        r1 := @parameter1: com.google.common.base.Supplier;

        l0 := @parameter2: long;

        r2 := @parameter3: androidx.media3.common.util.Clock;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 == r0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label1:
        r3 = staticinvoke <org.robolectric.Shadows: org.robolectric.shadows.ShadowLooper shadowOf(android.os.Looper)>(r0);

        $l2 = interfaceinvoke r2.<androidx.media3.common.util.Clock: long currentTimeMillis()>();

        l1 = $l2 + l0;

     label2:
        $r5 = interfaceinvoke r1.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label4;

        $l3 = interfaceinvoke r2.<androidx.media3.common.util.Clock: long currentTimeMillis()>();

        $b4 = $l3 cmp l1;

        if $b4 < 0 goto label3;

        $r7 = new java.util.concurrent.TimeoutException;

        specialinvoke $r7.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r7;

     label3:
        virtualinvoke r3.<org.robolectric.shadows.ShadowLooper: void runOneTask()>();

        goto label2;

     label4:
        return;
    }

androidx.media3.test.utils.robolectric.RobolectricUtil$1
    void <init>()
    {
        androidx.media3.test.utils.robolectric.RobolectricUtil$1 r0;

        r0 := @this: androidx.media3.test.utils.robolectric.RobolectricUtil$1;

        specialinvoke r0.<androidx.media3.common.util.SystemClock: void <init>()>();

        return;
    }

    public long elapsedRealtime()
    {
        androidx.media3.test.utils.robolectric.RobolectricUtil$1 r0;
        androidx.media3.common.util.Clock $r1;
        long $l0;

        r0 := @this: androidx.media3.test.utils.robolectric.RobolectricUtil$1;

        $r1 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        $l0 = interfaceinvoke $r1.<androidx.media3.common.util.Clock: long currentTimeMillis()>();

        return $l0;
    }

