androidx.compose.animation.AnimatedContentMeasurePolicy
<androidx.compose.animation.AnimatedContentMeasurePolicy: androidx.compose.animation.AnimatedContentScope rootScope>
    public void <init>(androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.animation.AnimatedContentScope r1;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rootScope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy: androidx.compose.animation.AnimatedContentScope rootScope> = r1;

        return;
    }

    public final androidx.compose.animation.AnimatedContentScope getRootScope()
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.animation.AnimatedContentScope $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $r1 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy: androidx.compose.animation.AnimatedContentScope rootScope>;

        return $r1;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, java.util.List, long)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        java.util.List r2;
        long l0, $l4;
        androidx.compose.ui.layout.Placeable[] r3, r21;
        int $i1, $i2, $i3, i5, $i6, i7, i8, $i9, i10, i11, $i12, i13, i14, $i15, i16, $i17, $i18, i19, $i20, $i21, i22, $i23, $i25;
        kotlin.ranges.IntRange $r4, $r5;
        androidx.compose.animation.AnimatedContentScope $r6;
        androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3 $r7;
        kotlin.jvm.functions.Function1 $r8;
        androidx.compose.ui.layout.MeasureResult $r9;
        androidx.compose.ui.layout.Placeable $r10, $r11, $r12, $r22, r23, r24, r26, r27, $r29, r30, r33;
        boolean $z1, $z2, $z5, $z9, $z11, z13, $z14, z15, $z16;
        java.lang.Object r14, r16, r19;
        androidx.compose.ui.layout.Measurable r15, r20;
        androidx.compose.animation.AnimatedContentScope$ChildData $r17;
        kotlin.collections.IntIterator $r25, r32;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = newarray (androidx.compose.ui.layout.Placeable)[$i1];

        i5 = 0;

        $i6 = interfaceinvoke r2.<java.util.List: int size()>();

     label01:
        if i5 >= $i6 goto label08;

        r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        r15 = (androidx.compose.ui.layout.Measurable) r14;

        i7 = i5;

        r16 = interfaceinvoke r15.<androidx.compose.ui.layout.Measurable: java.lang.Object getParentData()>();

        $z1 = r16 instanceof androidx.compose.animation.AnimatedContentScope$ChildData;

        if $z1 == 0 goto label02;

        $r17 = (androidx.compose.animation.AnimatedContentScope$ChildData) r16;

        goto label03;

     label02:
        $r17 = null;

     label03:
        if $r17 == null goto label05;

        $z2 = virtualinvoke $r17.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget()>();

        if $z2 != 1 goto label04;

        $z5 = 1;

        goto label06;

     label04:
        $z5 = 0;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        if $z5 == 0 goto label07;

        $r12 = interfaceinvoke r15.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        r3[i7] = $r12;

     label07:
        i5 = i5 + 1;

        goto label01;

     label08:
        i8 = 0;

        $i9 = interfaceinvoke r2.<java.util.List: int size()>();

     label09:
        if i8 >= $i9 goto label11;

        r19 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i8);

        r20 = (androidx.compose.ui.layout.Measurable) r19;

        i10 = i8;

        $r10 = r3[i10];

        if $r10 != null goto label10;

        $r11 = interfaceinvoke r20.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        r3[i10] = $r11;

     label10:
        i8 = i8 + 1;

        goto label09;

     label11:
        r21 = r3;

        $i2 = lengthof r21;

        if $i2 != 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        if $z9 == 0 goto label14;

        $r22 = null;

        goto label22;

     label14:
        r23 = r21[0];

        i11 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r21);

        if i11 != 0 goto label15;

        $r22 = r23;

        goto label22;

     label15:
        r24 = r23;

        if r24 == null goto label16;

        $i12 = virtualinvoke r24.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label17;

     label16:
        $i12 = 0;

     label17:
        i13 = $i12;

        $r4 = new kotlin.ranges.IntRange;

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, i11);

        $r25 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label18:
        $z11 = virtualinvoke $r25.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z11 == 0 goto label21;

        i14 = virtualinvoke $r25.<kotlin.collections.IntIterator: int nextInt()>();

        r26 = r21[i14];

        r27 = r26;

        if r27 == null goto label19;

        $i15 = virtualinvoke r27.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label20;

     label19:
        $i15 = 0;

     label20:
        i16 = $i15;

        if i13 >= i16 goto label18;

        r23 = r26;

        i13 = i16;

        goto label18;

     label21:
        $r22 = r23;

     label22:
        if $r22 == null goto label23;

        $i17 = virtualinvoke $r22.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label24;

     label23:
        $i17 = 0;

     label24:
        $i18 = $i17;

        z13 = 0;

        $i3 = lengthof r3;

        if $i3 != 0 goto label25;

        $z14 = 1;

        goto label26;

     label25:
        $z14 = 0;

     label26:
        if $z14 == 0 goto label27;

        $r29 = null;

        goto label35;

     label27:
        r30 = r3[0];

        i19 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r3);

        if i19 != 0 goto label28;

        $r29 = r30;

        goto label35;

     label28:
        z15 = 0;

        if r30 == null goto label29;

        $i20 = virtualinvoke r30.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        goto label30;

     label29:
        $i20 = 0;

     label30:
        $i21 = $i20;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, i19);

        r32 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label31:
        $z16 = virtualinvoke r32.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z16 == 0 goto label34;

        i22 = virtualinvoke r32.<kotlin.collections.IntIterator: int nextInt()>();

        r33 = r3[i22];

        if r33 == null goto label32;

        $i23 = virtualinvoke r33.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        goto label33;

     label32:
        $i23 = 0;

     label33:
        if $i21 >= $i23 goto label31;

        r30 = r33;

        $i21 = $i23;

        goto label31;

     label34:
        $r29 = r30;

     label35:
        if $r29 == null goto label36;

        $i25 = virtualinvoke $r29.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        goto label37;

     label36:
        $i25 = 0;

     label37:
        $r6 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy: androidx.compose.animation.AnimatedContentScope rootScope>;

        $l4 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i18, $i25);

        virtualinvoke $r6.<androidx.compose.animation.AnimatedContentScope: void setMeasuredSize-ozmzZPI$animation_release(long)>($l4);

        $r7 = new androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3;

        specialinvoke $r7.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: void <init>(androidx.compose.ui.layout.Placeable[],androidx.compose.animation.AnimatedContentMeasurePolicy,int,int)>(r3, r0, $i18, $i25);

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r9 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i18, $i25, null, $r8, 4, null);

        return $r9;
    }

    public int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1
<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1: int $width>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1: int $width> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1: int $width>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicHeight(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicHeight$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1
<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1: int $height>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1: int $height> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1: int $height>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicWidth(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$maxIntrinsicWidth$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3
<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: androidx.compose.ui.layout.Placeable[] $placeables>
<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: androidx.compose.animation.AnimatedContentMeasurePolicy this$0>
<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: int $maxWidth>
<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: int $maxHeight>
    void <init>(androidx.compose.ui.layout.Placeable[], androidx.compose.animation.AnimatedContentMeasurePolicy, int, int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3 r0;
        androidx.compose.ui.layout.Placeable[] $r1;
        androidx.compose.animation.AnimatedContentMeasurePolicy $r2;
        int $i0, $i1;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable[];

        $r2 := @parameter1: androidx.compose.animation.AnimatedContentMeasurePolicy;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: androidx.compose.ui.layout.Placeable[] $placeables> = $r1;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: androidx.compose.animation.AnimatedContentMeasurePolicy this$0> = $r2;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: int $maxWidth> = $i0;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: int $maxHeight> = $i1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        androidx.compose.ui.layout.Placeable[] $r2;
        androidx.compose.animation.AnimatedContentMeasurePolicy r3;
        int i0, i1, i2, $i4, $i5, $i8, $i9, i10;
        androidx.compose.ui.layout.Placeable r4, r5, r6;
        long l3, $l6, $l7;
        androidx.compose.animation.AnimatedContentScope $r7;
        androidx.compose.ui.Alignment $r8;
        androidx.compose.ui.unit.LayoutDirection $r9;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $r2 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: androidx.compose.ui.layout.Placeable[] $placeables>;

        r3 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: androidx.compose.animation.AnimatedContentMeasurePolicy this$0>;

        i0 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: int $maxWidth>;

        i1 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: int $maxHeight>;

        i10 = 0;

        i2 = lengthof $r2;

     label1:
        if i10 >= i2 goto label3;

        r4 = $r2[i10];

        r5 = r4;

        if r5 == null goto label2;

        r6 = r5;

        $r7 = virtualinvoke r3.<androidx.compose.animation.AnimatedContentMeasurePolicy: androidx.compose.animation.AnimatedContentScope getRootScope()>();

        $r8 = virtualinvoke $r7.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment getContentAlignment$animation_release()>();

        $i4 = virtualinvoke r6.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $i5 = virtualinvoke r6.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        $l6 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i4, $i5);

        $l7 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i1);

        $r9 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        l3 = interfaceinvoke $r8.<androidx.compose.ui.Alignment: long align-KFBX0sM(long,long,androidx.compose.ui.unit.LayoutDirection)>($l6, $l7, $r9);

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l3);

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l3);

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void place$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,int,int,float,int,java.lang.Object)>($r1, r6, $i8, $i9, 0.0F, 4, null);

        goto label2;

     label2:
        i10 = i10 + 1;

        goto label1;

     label3:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$measure$3: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1
<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1: int $width>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1: int $width> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1: int $width>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicHeight(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicHeight$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1
<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1: int $height>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1: int $height> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1: int $height>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicWidth(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentMeasurePolicy$minIntrinsicWidth$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

