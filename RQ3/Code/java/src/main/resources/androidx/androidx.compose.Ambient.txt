androidx.compose.Ambient
<androidx.compose.Ambient: androidx.compose.LazyValueHolder defaultValueHolder>
    private void <init>(kotlin.jvm.functions.Function0)
    {
        androidx.compose.Ambient r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.LazyValueHolder $r2;

        r0 := @this: androidx.compose.Ambient;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.compose.LazyValueHolder;

        specialinvoke $r2.<androidx.compose.LazyValueHolder: void <init>(kotlin.jvm.functions.Function0)>(r1);

        r0.<androidx.compose.Ambient: androidx.compose.LazyValueHolder defaultValueHolder> = $r2;

        return;
    }

    void <init>(kotlin.jvm.functions.Function0, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.Ambient r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        kotlin.jvm.functions.Function0 r2;

        r0 := @this: androidx.compose.Ambient;

        r2 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = (kotlin.jvm.functions.Function0) null;

     label1:
        specialinvoke r0.<androidx.compose.Ambient: void <init>(kotlin.jvm.functions.Function0)>(r2);

        return;
    }

    public final androidx.compose.LazyValueHolder getDefaultValueHolder$compose_runtime_release()
    {
        androidx.compose.Ambient r0;
        androidx.compose.LazyValueHolder $r1;

        r0 := @this: androidx.compose.Ambient;

        $r1 = r0.<androidx.compose.Ambient: androidx.compose.LazyValueHolder defaultValueHolder>;

        return $r1;
    }

    public static void getDefaultValueHolder$compose_runtime_release$annotations$compose_runtime_release()
    {
        return;
    }

<androidx.compose.Ambient: androidx.compose.State provided$compose_runtime_release(java.lang.Object,androidx.compose.Composer,int,int)>
    public final java.lang.Object getCurrent(androidx.compose.Composer, int, int)
    {
        androidx.compose.Ambient r0;
        androidx.compose.Composer $r1;
        int $i0, $i1;
        java.lang.Object r2;

        r0 := @this: androidx.compose.Ambient;

        $r1 := @parameter0: androidx.compose.Composer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = virtualinvoke $r1.<androidx.compose.Composer: java.lang.Object consume(androidx.compose.Ambient)>(r0);

        return r2;
    }

    public static void getCurrent$annotations()
    {
        return;
    }

    public void <init>(kotlin.jvm.functions.Function0, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.Ambient r0;
        kotlin.jvm.functions.Function0 r1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.compose.Ambient;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.Ambient: void <init>(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

