androidx.car.app.testing.TestScreenManager
<androidx.car.app.testing.TestScreenManager: java.util.List mScreensPushed>
<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>
    public void reset()
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.util.Deque $r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        $r1 = virtualinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Deque getScreenStack()>();

        interfaceinvoke $r1.<java.util.Deque: void clear()>();

        $r2 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensPushed>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    public java.util.List getScreensPushed()
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        $r1 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensPushed>;

        $r2 = staticinvoke <androidx.car.app.utils.CollectionUtils: java.util.List unmodifiableCopy(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getScreensRemoved()
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        $r1 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>;

        $r2 = staticinvoke <androidx.car.app.utils.CollectionUtils: java.util.List unmodifiableCopy(java.util.List)>($r1);

        return $r2;
    }

    public boolean hasScreens()
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        $r1 = specialinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Set getScreensInStack()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void push(androidx.car.app.Screen)
    {
        androidx.car.app.testing.TestScreenManager r0;
        androidx.car.app.Screen r1, $r4;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 := @parameter0: androidx.car.app.Screen;

        $r2 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensPushed>;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (androidx.car.app.Screen) $r3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        specialinvoke r0.<androidx.car.app.ScreenManager: void push(androidx.car.app.Screen)>(r1);

        return;
    }

    public void pushForResult(androidx.car.app.Screen, androidx.car.app.OnScreenResultListener)
    {
        androidx.car.app.testing.TestScreenManager r0;
        androidx.car.app.Screen r1;
        androidx.car.app.OnScreenResultListener r2;
        java.util.List $r3;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 := @parameter0: androidx.car.app.Screen;

        r2 := @parameter1: androidx.car.app.OnScreenResultListener;

        $r3 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensPushed>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.car.app.ScreenManager: void pushForResult(androidx.car.app.Screen,androidx.car.app.OnScreenResultListener)>(r1, r2);

        return;
    }

    public void pop()
    {
        androidx.car.app.testing.TestScreenManager r0;
        androidx.car.app.Screen r1, $r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 = virtualinvoke r0.<androidx.car.app.testing.TestScreenManager: androidx.car.app.Screen getTop()>();

        specialinvoke r0.<androidx.car.app.ScreenManager: void pop()>();

        $r2 = virtualinvoke r0.<androidx.car.app.testing.TestScreenManager: androidx.car.app.Screen getTop()>();

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void popTo(java.lang.String)
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.lang.String r1;
        java.util.Set r2, r3;
        java.util.Iterator r4;
        androidx.car.app.Screen r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.util.List $r7;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Set getScreensInStack()>();

        specialinvoke r0.<androidx.car.app.ScreenManager: void popTo(java.lang.String)>(r1);

        r3 = specialinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Set getScreensInStack()>();

        r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.car.app.Screen) $r6;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z1 != 0 goto label2;

        $r7 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        goto label1;

     label3:
        return;
    }

    public void popToRoot()
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.util.Set r1, r2;
        java.util.Iterator r3;
        androidx.car.app.Screen r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.util.List $r6;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 = specialinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Set getScreensInStack()>();

        specialinvoke r0.<androidx.car.app.ScreenManager: void popToRoot()>();

        r2 = specialinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Set getScreensInStack()>();

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.car.app.Screen) $r5;

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z1 != 0 goto label2;

        $r6 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        return;
    }

    public void remove(androidx.car.app.Screen)
    {
        androidx.car.app.testing.TestScreenManager r0;
        androidx.car.app.Screen r1;
        androidx.lifecycle.Lifecycle $r2;
        androidx.lifecycle.Lifecycle$State $r3, $r4;
        java.util.List $r5;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 := @parameter0: androidx.car.app.Screen;

        specialinvoke r0.<androidx.car.app.ScreenManager: void remove(androidx.car.app.Screen)>(r1);

        $r2 = virtualinvoke r1.<androidx.car.app.Screen: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r3 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r3 != $r4 goto label1;

        $r5 = r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    private java.util.Set getScreensInStack()
    {
        androidx.car.app.testing.TestScreenManager r0;
        java.util.HashSet $r1;
        java.util.Deque $r2;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        $r1 = new java.util.HashSet;

        $r2 = virtualinvoke r0.<androidx.car.app.testing.TestScreenManager: java.util.Deque getScreenStack()>();

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    void <init>(androidx.car.app.testing.TestCarContext)
    {
        androidx.car.app.testing.TestScreenManager r0;
        androidx.car.app.testing.TestCarContext r1;
        androidx.car.app.testing.TestLifecycleOwner $r2;
        androidx.lifecycle.LifecycleRegistry $r3;
        java.util.ArrayList $r4, $r5;

        r0 := @this: androidx.car.app.testing.TestScreenManager;

        r1 := @parameter0: androidx.car.app.testing.TestCarContext;

        $r2 = virtualinvoke r1.<androidx.car.app.testing.TestCarContext: androidx.car.app.testing.TestLifecycleOwner getLifecycleOwner()>();

        $r3 = $r2.<androidx.car.app.testing.TestLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        specialinvoke r0.<androidx.car.app.ScreenManager: void <init>(androidx.car.app.CarContext,androidx.lifecycle.Lifecycle)>(r1, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensPushed> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.car.app.testing.TestScreenManager: java.util.List mScreensRemoved> = $r5;

        return;
    }

