androidx.compose.ui.test.junit4.MainTestClockImpl
<androidx.compose.ui.test.junit4.MainTestClockImpl: boolean hasAwaiters>
    public void <init>(kotlinx.coroutines.test.TestCoroutineScheduler, androidx.compose.ui.test.TestMonotonicFrameClock)
    {
        androidx.compose.ui.test.junit4.MainTestClockImpl r0;
        kotlinx.coroutines.test.TestCoroutineScheduler r1;
        androidx.compose.ui.test.TestMonotonicFrameClock r2;
        long $l0;
        androidx.compose.ui.test.junit4.MainTestClockImpl$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.junit4.MainTestClockImpl;

        r1 := @parameter0: kotlinx.coroutines.test.TestCoroutineScheduler;

        r2 := @parameter1: androidx.compose.ui.test.TestMonotonicFrameClock;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testScheduler");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "frameClock");

        $l0 = staticinvoke <androidx.compose.ui.test.TestMonotonicFrameClock_jvmKt: long getFrameDelayMillis(androidx.compose.ui.test.TestMonotonicFrameClock)>(r2);

        $r3 = <androidx.compose.ui.test.junit4.MainTestClockImpl$1: androidx.compose.ui.test.junit4.MainTestClockImpl$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        specialinvoke r0.<androidx.compose.ui.test.junit4.AbstractMainTestClock: void <init>(kotlinx.coroutines.test.TestCoroutineScheduler,long,kotlin.jvm.functions.Function1)>(r1, $l0, $r4);

        $z0 = virtualinvoke r2.<androidx.compose.ui.test.TestMonotonicFrameClock: boolean getHasAwaiters()>();

        r0.<androidx.compose.ui.test.junit4.MainTestClockImpl: boolean hasAwaiters> = $z0;

        return;
    }

    public final boolean getHasAwaiters$ui_test_junit4_release()
    {
        androidx.compose.ui.test.junit4.MainTestClockImpl r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.junit4.MainTestClockImpl;

        $z0 = r0.<androidx.compose.ui.test.junit4.MainTestClockImpl: boolean hasAwaiters>;

        return $z0;
    }

androidx.compose.ui.test.junit4.MainTestClockImpl$1
<androidx.compose.ui.test.junit4.MainTestClockImpl$1: androidx.compose.ui.test.junit4.MainTestClockImpl$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.test.junit4.MainTestClockImpl$1 r0;

        r0 := @this: androidx.compose.ui.test.junit4.MainTestClockImpl$1;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int)>(1, class "Landroidx/compose/ui/test/junit4/AndroidSynchronization_androidKt;", "runOnUiThread", "runOnUiThread(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;", 1);

        return;
    }

    public final void invoke(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.junit4.MainTestClockImpl$1 r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.compose.ui.test.junit4.MainTestClockImpl$1;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        staticinvoke <androidx.compose.ui.test.junit4.AndroidSynchronization_androidKt: java.lang.Object runOnUiThread(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.junit4.MainTestClockImpl$1 r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.test.junit4.MainTestClockImpl$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.jvm.functions.Function0) r1;

        virtualinvoke r0.<androidx.compose.ui.test.junit4.MainTestClockImpl$1: void invoke(kotlin.jvm.functions.Function0)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.junit4.MainTestClockImpl$1 $r0;

        $r0 = new androidx.compose.ui.test.junit4.MainTestClockImpl$1;

        specialinvoke $r0.<androidx.compose.ui.test.junit4.MainTestClockImpl$1: void <init>()>();

        <androidx.compose.ui.test.junit4.MainTestClockImpl$1: androidx.compose.ui.test.junit4.MainTestClockImpl$1 INSTANCE> = $r0;

        return;
    }

