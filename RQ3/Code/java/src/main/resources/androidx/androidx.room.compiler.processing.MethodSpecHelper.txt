androidx.room.compiler.processing.MethodSpecHelper
<androidx.room.compiler.processing.MethodSpecHelper: androidx.room.compiler.processing.MethodSpecHelper INSTANCE>
    private void <init>()
    {
        androidx.room.compiler.processing.MethodSpecHelper r0;

        r0 := @this: androidx.room.compiler.processing.MethodSpecHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final com.squareup.javapoet.MethodSpec$Builder overridingWithFinalParams(androidx.room.compiler.processing.XMethodElement, androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XMethodElement r0;
        androidx.room.compiler.processing.XType r1;
        androidx.room.compiler.processing.XMethodType r2;
        javax.lang.model.element.Modifier[] r3;
        javax.lang.model.element.Modifier $r4;
        androidx.room.compiler.processing.MethodSpecHelper $r5;
        com.squareup.javapoet.MethodSpec$Builder $r6;

        r0 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        r1 := @parameter1: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "elm");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMethodType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r5 = <androidx.room.compiler.processing.MethodSpecHelper: androidx.room.compiler.processing.MethodSpecHelper INSTANCE>;

        r3 = newarray (javax.lang.model.element.Modifier)[1];

        $r4 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier FINAL>;

        r3[0] = $r4;

        $r6 = specialinvoke $r5.<androidx.room.compiler.processing.MethodSpecHelper: com.squareup.javapoet.MethodSpec$Builder overriding(androidx.room.compiler.processing.XMethodElement,androidx.room.compiler.processing.XMethodType,javax.lang.model.element.Modifier[])>(r0, r2, r3);

        return $r6;
    }

    public static final com.squareup.javapoet.MethodSpec$Builder overriding(androidx.room.compiler.processing.XMethodElement, androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XMethodElement r0;
        androidx.room.compiler.processing.XType r1;
        androidx.room.compiler.processing.XMethodType r2;
        javax.lang.model.element.Modifier[] $r3;
        androidx.room.compiler.processing.MethodSpecHelper $r4;
        com.squareup.javapoet.MethodSpec$Builder $r5;

        r0 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        r1 := @parameter1: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "elm");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMethodType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r4 = <androidx.room.compiler.processing.MethodSpecHelper: androidx.room.compiler.processing.MethodSpecHelper INSTANCE>;

        $r3 = newarray (javax.lang.model.element.Modifier)[0];

        $r5 = specialinvoke $r4.<androidx.room.compiler.processing.MethodSpecHelper: com.squareup.javapoet.MethodSpec$Builder overriding(androidx.room.compiler.processing.XMethodElement,androidx.room.compiler.processing.XMethodType,javax.lang.model.element.Modifier[])>(r0, r2, $r3);

        return $r5;
    }

    private final transient com.squareup.javapoet.MethodSpec$Builder overriding(androidx.room.compiler.processing.XMethodElement, androidx.room.compiler.processing.XMethodType, javax.lang.model.element.Modifier[])
    {
        androidx.room.compiler.processing.MethodSpecHelper r0;
        androidx.room.compiler.processing.XMethodElement r1;
        androidx.room.compiler.processing.XMethodType r2;
        javax.lang.model.element.Modifier[] r3, $r32, $r39, $r40;
        com.squareup.javapoet.MethodSpec$Builder r4;
        androidx.room.compiler.processing.XType r6, $r14, r45;
        int i0, $i1, $i2, i3;
        java.lang.String $r7, $r30;
        java.util.List $r8, $r11, $r27, $r41;
        java.lang.Iterable $r9, $r36, $r42;
        boolean $z2, $z3, $z4, $z6, $z8;
        androidx.room.compiler.codegen.XTypeName $r15, $r18, $r25;
        com.squareup.javapoet.TypeName $r16, $r19, $r26;
        javax.lang.model.element.Modifier $r21, $r23;
        java.lang.Object $r28, r38, r44;
        androidx.room.compiler.processing.XExecutableParameterElement $r29;
        java.lang.Object[] $r31;
        com.squareup.javapoet.ParameterSpec$Builder $r33;
        com.squareup.javapoet.ParameterSpec $r34;
        java.util.Iterator r37, r43;

        r0 := @this: androidx.room.compiler.processing.MethodSpecHelper;

        r1 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        r2 := @parameter1: androidx.room.compiler.processing.XMethodType;

        r3 := @parameter2: javax.lang.model.element.Modifier[];

        $r7 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: java.lang.String getJvmName()>();

        r4 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>($r7);

        $r8 = interfaceinvoke r2.<androidx.room.compiler.processing.XMethodType: java.util.List getTypeVariableNames()>();

        $r9 = (java.lang.Iterable) $r8;

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addTypeVariables(java.lang.Iterable)>($r9);

        $r11 = interfaceinvoke r2.<androidx.room.compiler.processing.XMethodType: java.util.List getParameterTypes()>();

        $r36 = (java.lang.Iterable) $r11;

        i3 = 0;

        r37 = interfaceinvoke $r36.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        $i1 = i3;

        i3 = i3 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r6 = (androidx.room.compiler.processing.XType) r38;

        i0 = $i1;

        $r25 = interfaceinvoke r6.<androidx.room.compiler.processing.XType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r26 = virtualinvoke $r25.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r27 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: java.util.List getParameters()>();

        $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i0);

        $r29 = (androidx.room.compiler.processing.XExecutableParameterElement) $r28;

        $r30 = interfaceinvoke $r29.<androidx.room.compiler.processing.XExecutableParameterElement: java.lang.String getName()>();

        $i2 = lengthof r3;

        $r31 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r3, $i2);

        $r32 = (javax.lang.model.element.Modifier[]) $r31;

        $r33 = staticinvoke <com.squareup.javapoet.ParameterSpec: com.squareup.javapoet.ParameterSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r26, $r30, $r32);

        $r34 = virtualinvoke $r33.<com.squareup.javapoet.ParameterSpec$Builder: com.squareup.javapoet.ParameterSpec build()>();

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.ParameterSpec)>($r34);

        goto label1;

     label3:
        $z3 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: boolean isPublic()>();

        if $z3 == 0 goto label4;

        $r39 = newarray (javax.lang.model.element.Modifier)[1];

        $r23 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r39[0] = $r23;

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r39);

        goto label5;

     label4:
        $z4 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: boolean isProtected()>();

        if $z4 == 0 goto label5;

        $r40 = newarray (javax.lang.model.element.Modifier)[1];

        $r21 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PROTECTED>;

        $r40[0] = $r21;

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r40);

     label5:
        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(java.lang.Class)>(class "Ljava/lang/Override;");

        $z6 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: boolean isVarArgs()>();

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder varargs(boolean)>($z6);

        $r41 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: java.util.List getThrownTypes()>();

        $r42 = (java.lang.Iterable) $r41;

        r43 = interfaceinvoke $r42.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z8 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label7;

        r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.room.compiler.processing.XType) r44;

        $r18 = interfaceinvoke r45.<androidx.room.compiler.processing.XType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r19 = virtualinvoke $r18.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addException(com.squareup.javapoet.TypeName)>($r19);

        goto label6;

     label7:
        $r14 = interfaceinvoke r2.<androidx.room.compiler.processing.XMethodType: androidx.room.compiler.processing.XType getReturnType()>();

        $r15 = interfaceinvoke $r14.<androidx.room.compiler.processing.XType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r16 = virtualinvoke $r15.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        virtualinvoke r4.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder returns(com.squareup.javapoet.TypeName)>($r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "methodBuilder(executable\u2026ypeName().java)\n        }");

        return r4;
    }

    static com.squareup.javapoet.MethodSpec$Builder overriding$default(androidx.room.compiler.processing.MethodSpecHelper, androidx.room.compiler.processing.XMethodElement, androidx.room.compiler.processing.XMethodType, javax.lang.model.element.Modifier[], int, java.lang.Object)
    {
        androidx.room.compiler.processing.MethodSpecHelper r0;
        androidx.room.compiler.processing.XMethodElement r1;
        javax.lang.model.element.Modifier[] r2;
        int i0, $i1;
        java.lang.Object r3;
        com.squareup.javapoet.MethodSpec$Builder $r4;
        androidx.room.compiler.processing.XMethodType r5;

        r0 := @parameter0: androidx.room.compiler.processing.MethodSpecHelper;

        r1 := @parameter1: androidx.room.compiler.processing.XMethodElement;

        r5 := @parameter2: androidx.room.compiler.processing.XMethodType;

        r2 := @parameter3: javax.lang.model.element.Modifier[];

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r5 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMethodType getExecutableType()>();

     label1:
        $r4 = specialinvoke r0.<androidx.room.compiler.processing.MethodSpecHelper: com.squareup.javapoet.MethodSpec$Builder overriding(androidx.room.compiler.processing.XMethodElement,androidx.room.compiler.processing.XMethodType,javax.lang.model.element.Modifier[])>(r1, r5, r2);

        return $r4;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.MethodSpecHelper $r0;

        $r0 = new androidx.room.compiler.processing.MethodSpecHelper;

        specialinvoke $r0.<androidx.room.compiler.processing.MethodSpecHelper: void <init>()>();

        <androidx.room.compiler.processing.MethodSpecHelper: androidx.room.compiler.processing.MethodSpecHelper INSTANCE> = $r0;

        return;
    }

