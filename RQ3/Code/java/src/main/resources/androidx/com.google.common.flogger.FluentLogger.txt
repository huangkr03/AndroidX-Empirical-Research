com.google.common.flogger.FluentLogger
<com.google.common.flogger.FluentLogger: com.google.common.flogger.FluentLogger$NoOp NO_OP>
    static void <clinit>()
    {
        com.google.common.flogger.FluentLogger$NoOp $r0;

        $r0 = new com.google.common.flogger.FluentLogger$NoOp;

        specialinvoke $r0.<com.google.common.flogger.FluentLogger$NoOp: void <init>(com.google.common.flogger.FluentLogger$NoOp-IA)>(null);

        <com.google.common.flogger.FluentLogger: com.google.common.flogger.FluentLogger$NoOp NO_OP> = $r0;

        return;
    }

    void <init>(com.google.common.flogger.backend.LoggerBackend)
    {
        com.google.common.flogger.FluentLogger $r0;
        com.google.common.flogger.backend.LoggerBackend $r1;

        $r0 := @this: com.google.common.flogger.FluentLogger;

        $r1 := @parameter0: com.google.common.flogger.backend.LoggerBackend;

        specialinvoke $r0.<com.google.common.flogger.AbstractLogger: void <init>(com.google.common.flogger.backend.LoggerBackend)>($r1);

        return;
    }

    public static com.google.common.flogger.FluentLogger forEnclosingClass()
    {
        com.google.common.flogger.backend.Platform$LogCallerFinder $r0;
        java.lang.String $r1;
        com.google.common.flogger.FluentLogger $r2;
        com.google.common.flogger.backend.LoggerBackend $r3;

        $r0 = staticinvoke <com.google.common.flogger.backend.Platform: com.google.common.flogger.backend.Platform$LogCallerFinder getCallerFinder()>();

        $r1 = virtualinvoke $r0.<com.google.common.flogger.backend.Platform$LogCallerFinder: java.lang.String findLoggingClass(java.lang.Class)>(class "Lcom/google/common/flogger/FluentLogger;");

        $r2 = new com.google.common.flogger.FluentLogger;

        $r3 = staticinvoke <com.google.common.flogger.backend.Platform: com.google.common.flogger.backend.LoggerBackend getBackend(java.lang.String)>($r1);

        specialinvoke $r2.<com.google.common.flogger.FluentLogger: void <init>(com.google.common.flogger.backend.LoggerBackend)>($r3);

        return $r2;
    }

    public com.google.common.flogger.FluentLogger$Api at(java.util.logging.Level)
    {
        com.google.common.flogger.FluentLogger $r0;
        java.util.logging.Level $r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        com.google.common.flogger.FluentLogger$Context $r3;
        com.google.common.flogger.FluentLogger$NoOp r4;

        $r0 := @this: com.google.common.flogger.FluentLogger;

        $r1 := @parameter0: java.util.logging.Level;

        $z0 = virtualinvoke $r0.<com.google.common.flogger.FluentLogger: boolean isLoggable(java.util.logging.Level)>($r1);

        $r2 = virtualinvoke $r0.<com.google.common.flogger.FluentLogger: java.lang.String getName()>();

        $z1 = staticinvoke <com.google.common.flogger.backend.Platform: boolean shouldForceLogging(java.lang.String,java.util.logging.Level,boolean)>($r2, $r1, $z0);

        if $z0 != 0 goto label2;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r4 = <com.google.common.flogger.FluentLogger: com.google.common.flogger.FluentLogger$NoOp NO_OP>;

        return r4;

     label2:
        $r3 = new com.google.common.flogger.FluentLogger$Context;

        specialinvoke $r3.<com.google.common.flogger.FluentLogger$Context: void <init>(com.google.common.flogger.FluentLogger,java.util.logging.Level,boolean,com.google.common.flogger.FluentLogger$Context-IA)>($r0, $r1, $z1, null);

        return $r3;
    }

    public volatile com.google.common.flogger.LoggingApi at(java.util.logging.Level)
    {
        com.google.common.flogger.FluentLogger $r0;
        com.google.common.flogger.FluentLogger$Api $r1;
        java.util.logging.Level $r2;

        $r0 := @this: com.google.common.flogger.FluentLogger;

        $r2 := @parameter0: java.util.logging.Level;

        $r1 = virtualinvoke $r0.<com.google.common.flogger.FluentLogger: com.google.common.flogger.FluentLogger$Api at(java.util.logging.Level)>($r2);

        return $r1;
    }

com.google.common.flogger.FluentLogger$Api
com.google.common.flogger.FluentLogger$Context-IA
com.google.common.flogger.FluentLogger$Context
<com.google.common.flogger.FluentLogger$Context: com.google.common.flogger.FluentLogger this$0>
    private void <init>(com.google.common.flogger.FluentLogger, java.util.logging.Level, boolean)
    {
        com.google.common.flogger.FluentLogger$Context $r0;
        com.google.common.flogger.FluentLogger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        $r1 := @parameter0: com.google.common.flogger.FluentLogger;

        $r2 := @parameter1: java.util.logging.Level;

        $z0 := @parameter2: boolean;

        $r0.<com.google.common.flogger.FluentLogger$Context: com.google.common.flogger.FluentLogger this$0> = $r1;

        specialinvoke $r0.<com.google.common.flogger.LogContext: void <init>(java.util.logging.Level,boolean)>($r2, $z0);

        return;
    }

    void <init>(com.google.common.flogger.FluentLogger, java.util.logging.Level, boolean, com.google.common.flogger.FluentLogger$Context-IA)
    {
        com.google.common.flogger.FluentLogger$Context $r0;
        com.google.common.flogger.FluentLogger $r1;
        java.util.logging.Level $r2;
        boolean $z0;
        com.google.common.flogger.FluentLogger$Context-IA $r3;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        $r1 := @parameter0: com.google.common.flogger.FluentLogger;

        $r2 := @parameter1: java.util.logging.Level;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.google.common.flogger.FluentLogger$Context-IA;

        specialinvoke $r0.<com.google.common.flogger.FluentLogger$Context: void <init>(com.google.common.flogger.FluentLogger,java.util.logging.Level,boolean)>($r1, $r2, $z0);

        return;
    }

    protected com.google.common.flogger.FluentLogger$Api api()
    {
        com.google.common.flogger.FluentLogger$Context $r0;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        return $r0;
    }

    protected volatile com.google.common.flogger.LoggingApi api()
    {
        com.google.common.flogger.FluentLogger$Context $r0;
        com.google.common.flogger.FluentLogger$Api $r1;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        $r1 = virtualinvoke $r0.<com.google.common.flogger.FluentLogger$Context: com.google.common.flogger.FluentLogger$Api api()>();

        return $r1;
    }

    protected volatile com.google.common.flogger.AbstractLogger getLogger()
    {
        com.google.common.flogger.FluentLogger$Context $r0;
        com.google.common.flogger.FluentLogger $r1;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        $r1 = virtualinvoke $r0.<com.google.common.flogger.FluentLogger$Context: com.google.common.flogger.FluentLogger getLogger()>();

        return $r1;
    }

    protected com.google.common.flogger.FluentLogger getLogger()
    {
        com.google.common.flogger.FluentLogger$Context $r0;
        com.google.common.flogger.FluentLogger r1;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        r1 = $r0.<com.google.common.flogger.FluentLogger$Context: com.google.common.flogger.FluentLogger this$0>;

        return r1;
    }

    protected com.google.common.flogger.parser.MessageParser getMessageParser()
    {
        com.google.common.flogger.FluentLogger$Context $r0;
        com.google.common.flogger.parser.PrintfMessageParser $r1;

        $r0 := @this: com.google.common.flogger.FluentLogger$Context;

        $r1 = staticinvoke <com.google.common.flogger.parser.DefaultPrintfMessageParser: com.google.common.flogger.parser.PrintfMessageParser getInstance()>();

        return $r1;
    }

com.google.common.flogger.FluentLogger$NoOp-IA
com.google.common.flogger.FluentLogger$NoOp
    private void <init>()
    {
        com.google.common.flogger.FluentLogger$NoOp $r0;

        $r0 := @this: com.google.common.flogger.FluentLogger$NoOp;

        specialinvoke $r0.<com.google.common.flogger.LoggingApi$NoOp: void <init>()>();

        return;
    }

    void <init>(com.google.common.flogger.FluentLogger$NoOp-IA)
    {
        com.google.common.flogger.FluentLogger$NoOp $r0;
        com.google.common.flogger.FluentLogger$NoOp-IA $r1;

        $r0 := @this: com.google.common.flogger.FluentLogger$NoOp;

        $r1 := @parameter0: com.google.common.flogger.FluentLogger$NoOp-IA;

        specialinvoke $r0.<com.google.common.flogger.FluentLogger$NoOp: void <init>()>();

        return;
    }

