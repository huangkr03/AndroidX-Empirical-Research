android.databinding.tool.ext.ExtKt
<android.databinding.tool.ext.ExtKt: java.util.concurrent.CopyOnWriteArrayList mappingHashes>
<android.databinding.tool.ext.ExtKt: java.util.Map REPLACEMENTS>
<android.databinding.tool.ext.ExtKt: java.util.Map PRIMITIVE_TYPE_NAME_MAP>
    public static final java.lang.String stripNonJava(java.lang.String)
    {
        java.lang.String $r0, r3, r4, r6, $r11;
        java.util.Iterator r1;
        java.lang.Object r2;
        java.util.Collection r5, r17;
        kotlin.text.Regex $r7;
        java.util.List $r8, $r10;
        java.util.ArrayList $r9;
        int $i0;
        boolean $z0;
        java.lang.CharSequence $r12, $r13, $r15;
        kotlin.TypeCastException $r14;
        byte b1;
        java.lang.Iterable $r16;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r15 = (java.lang.CharSequence) $r0;

        $r7 = new kotlin.text.Regex;

        specialinvoke $r7.<kotlin.text.Regex: void <init>(java.lang.String)>("[^a-zA-Z0-9]");

        b1 = 0;

        $r8 = virtualinvoke $r7.<kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)>($r15, b1);

        $r16 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r16, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r17 = (java.util.Collection) $r9;

        r1 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) r2;

        r5 = r17;

        r4 = r3;

        if r4 != null goto label2;

        $r14 = new kotlin.TypeCastException;

        specialinvoke $r14.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r14;

     label2:
        $r12 = (java.lang.CharSequence) r4;

        $r13 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r12);

        r6 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        goto label1;

     label3:
        $r10 = (java.util.List) r17;

        $r11 = staticinvoke <android.databinding.tool.ext.List_extKt: java.lang.String joinToCamelCaseAsVar(java.util.List)>($r10);

        return $r11;
    }

    public static final void cleanLazyProps()
    {
        java.lang.Iterable $r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        java.util.Map r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;

        $r4 = <android.databinding.tool.ext.ExtKt: java.util.concurrent.CopyOnWriteArrayList mappingHashes>;

        $r0 = (java.lang.Iterable) $r4;

        r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map) r2;

        interfaceinvoke r3.<java.util.Map: void clear()>();

        goto label1;

     label2:
        return;
    }

    public static final kotlin.properties.ReadOnlyProperty lazyProp(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        android.databinding.tool.ext.LazyExt $r1;
        kotlin.properties.ReadOnlyProperty $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r0, "initializer");

        $r1 = new android.databinding.tool.ext.LazyExt;

        specialinvoke $r1.<android.databinding.tool.ext.LazyExt: void <init>(kotlin.jvm.functions.Function1)>(r0);

        $r2 = (kotlin.properties.ReadOnlyProperty) $r1;

        return $r2;
    }

    public static final kotlin.properties.ReadOnlyProperty versionedLazy(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        android.databinding.tool.ext.VersionedLazyExt $r1;
        kotlin.properties.ReadOnlyProperty $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r0, "initializer");

        $r1 = new android.databinding.tool.ext.VersionedLazyExt;

        specialinvoke $r1.<android.databinding.tool.ext.VersionedLazyExt: void <init>(kotlin.jvm.functions.Function1)>(r0);

        $r2 = (kotlin.properties.ReadOnlyProperty) $r1;

        return $r2;
    }

    public static final java.lang.String toJavaCode(java.lang.Class)
    {
        java.lang.Class $r0;
        int i0, $i1, $i3, i4, i5;
        java.lang.String $r1, $r3, $r4, $r5, $r7, $r8, $r12, $r14, $r15, $r16, $r18, $r19, r21, r22, r23, $r24, r25, r27;
        java.lang.CharSequence $r2, $r6;
        boolean $z0;
        char $c2;
        java.lang.StringBuilder $r9, $r10, $r11;
        kotlin.TypeCastException $r13, $r17, $r20;
        byte b6;

        $r0 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r1, "name");

        $r2 = (java.lang.CharSequence) $r1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)>($r2, 91, 0, 2, null);

        if $z0 == 0 goto label15;

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r5, "name");

        $r6 = (java.lang.CharSequence) $r5;

        $i1 = staticinvoke <kotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r6, 91, 0, 0, 6, null);

        i0 = $i1 + 1;

        $r7 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $c2 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i0);

        tableswitch($c2)
        {
            case 66: goto label02;
            case 67: goto label03;
            case 68: goto label06;
            case 69: goto label11;
            case 70: goto label07;
            case 71: goto label11;
            case 72: goto label11;
            case 73: goto label08;
            case 74: goto label09;
            case 75: goto label11;
            case 76: goto label04;
            case 77: goto label11;
            case 78: goto label11;
            case 79: goto label11;
            case 80: goto label11;
            case 81: goto label11;
            case 82: goto label11;
            case 83: goto label10;
            case 84: goto label11;
            case 85: goto label11;
            case 86: goto label11;
            case 87: goto label11;
            case 88: goto label11;
            case 89: goto label11;
            case 90: goto label01;
            default: goto label11;
        };

     label01:
        r21 = "boolean";

        goto label13;

     label02:
        r21 = "byte";

        goto label13;

     label03:
        r21 = "char";

        goto label13;

     label04:
        $r14 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r14, "name");

        r22 = $r14;

        i4 = i0 + 1;

        $r15 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $i3 = virtualinvoke $r15.<java.lang.String: int length()>();

        i5 = $i3 - 1;

        if r22 != null goto label05;

        $r17 = new kotlin.TypeCastException;

        specialinvoke $r17.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r17;

     label05:
        $r16 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(i4, i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r16, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        r21 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r16, 36, 46, 0, 4, null);

        goto label13;

     label06:
        r21 = "double";

        goto label13;

     label07:
        r21 = "float";

        goto label13;

     label08:
        r21 = "int";

        goto label13;

     label09:
        r21 = "long";

        goto label13;

     label10:
        r21 = "short";

        goto label13;

     label11:
        $r18 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r18, "name");

        r23 = $r18;

        if r23 != null goto label12;

        $r20 = new kotlin.TypeCastException;

        specialinvoke $r20.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r20;

     label12:
        $r19 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r19, "(this as java.lang.String).substring(startIndex)");

        r21 = $r19;

     label13:
        $r24 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r24, "name");

        r25 = $r24;

        b6 = 0;

        if r25 != null goto label14;

        $r13 = new kotlin.TypeCastException;

        specialinvoke $r13.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r13;

     label14:
        $r8 = virtualinvoke r25.<java.lang.String: java.lang.String substring(int,int)>(b6, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r8, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        r27 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r8, "[", "[]", 0, 4, null);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label15:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r3, "name");

        $r4 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r3, "$", "", 0, 4, null);

        return $r4;
    }

    public static final java.lang.String androidId(java.lang.String)
    {
        java.lang.String $r0, r1, $r11;
        java.lang.String[] $r2;
        java.lang.CharSequence $r3, $r6, $r8;
        java.util.List $r4, $r9;
        java.lang.Object $r5, $r10;
        boolean $z0;
        char[] $r7;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r3 = (java.lang.CharSequence) $r0;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "/";

        $r4 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r3, $r2, 0, 0, 6, null);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(1);

        r1 = (java.lang.String) $r5;

        $r6 = (java.lang.CharSequence) r1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)>($r6, 58, 0, 2, null);

        if $z0 == 0 goto label1;

        $r8 = (java.lang.CharSequence) r1;

        $r7 = newarray (char)[1];

        $r7[0] = 58;

        $r9 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)>($r8, $r7, 0, 0, 6, null);

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(1);

        $r11 = (java.lang.String) $r10;

        return $r11;

     label1:
        return r1;
    }

    public static final java.lang.String toCamelCase(java.lang.String)
    {
        java.lang.String $r0, $r4, $r6, $r7;
        java.util.List r1;
        java.lang.String[] $r2;
        java.lang.CharSequence $r3;
        int $i0, $i1;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r3 = (java.lang.CharSequence) $r0;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "_";

        r1 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r3, $r2, 0, 0, 6, null);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <kotlin.text.StringsKt: java.lang.String capitalize(java.lang.String)>($r6);

        return $r7;

     label2:
        $r4 = staticinvoke <android.databinding.tool.ext.List_extKt: java.lang.String joinToCamelCase(java.util.List)>(r1);

        return $r4;
    }

    public static final java.lang.String toCamelCaseAsVar(java.lang.String)
    {
        java.lang.String $r0, $r4, $r6;
        java.util.List r1;
        java.lang.String[] $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        int $i0;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r3 = (java.lang.CharSequence) $r0;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "_";

        r1 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r3, $r2, 0, 0, 6, null);

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.lang.String) $r5;

        return $r6;

     label2:
        $r4 = staticinvoke <android.databinding.tool.ext.List_extKt: java.lang.String joinToCamelCaseAsVar(java.util.List)>(r1);

        return $r4;
    }

    public static final java.lang.String br(java.lang.String)
    {
        java.lang.String $r0, $r4, $r5;
        java.lang.StringBuilder $r1, $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BR.");

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, "");

        if $z0 == 0 goto label1;

        $r5 = "_all";

        goto label2;

     label1:
        $r5 = $r0;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static final java.lang.String readableName(java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r1 = staticinvoke <android.databinding.tool.ext.ExtKt: java.lang.String stripNonJava(java.lang.String)>($r0);

        return $r1;
    }

    public static final com.squareup.javapoet.TypeName toTypeName(java.lang.String, android.databinding.tool.LibTypes, java.util.Map)
    {
        java.lang.String $r0;
        android.databinding.tool.LibTypes r1;
        java.util.Map r2;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.databinding.tool.LibTypes;

        r2 := @parameter2: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "libTypes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "imports");

        $r3 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,android.databinding.tool.LibTypes,java.util.Map,boolean)>($r0, r1, r2, 1);

        return $r3;
    }

    public static final com.squareup.javapoet.TypeName toTypeName(java.lang.String, android.databinding.tool.LibTypes)
    {
        java.lang.String $r0;
        android.databinding.tool.LibTypes r1;
        com.squareup.javapoet.TypeName $r2;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.databinding.tool.LibTypes;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "libTypes");

        $r2 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,android.databinding.tool.LibTypes,java.util.Map,boolean)>($r0, r1, null, 0);

        return $r2;
    }

    public static final com.squareup.javapoet.TypeName toTypeName(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean z0;
        com.squareup.javapoet.TypeName $r1;

        $r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r1 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,boolean,java.util.Map,boolean)>($r0, z0, null, 0);

        return $r1;
    }

    public static final com.squareup.javapoet.ClassName toClassName(java.lang.String)
    {
        java.lang.String $r0;
        com.squareup.javapoet.ClassName $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $r1 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName bestGuess(java.lang.String)>($r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r1, "ClassName.bestGuess(this)");

        return $r1;
    }

    private static final com.squareup.javapoet.TypeName toTypeName(java.lang.String, android.databinding.tool.LibTypes, java.util.Map, boolean)
    {
        java.lang.String $r0;
        android.databinding.tool.LibTypes r1;
        java.util.Map r2;
        boolean z0, $z1;
        com.squareup.javapoet.TypeName $r3;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.databinding.tool.LibTypes;

        r2 := @parameter2: java.util.Map;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r1.<android.databinding.tool.LibTypes: boolean getUseAndroidX()>();

        $r3 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,boolean,java.util.Map,boolean)>($r0, $z1, r2, z0);

        return $r3;
    }

    private static final com.squareup.javapoet.TypeName toTypeName(java.lang.String, boolean, java.util.Map, boolean)
    {
        java.lang.String $r0, r4, $r19, $r24, $r27, $r41, $r44, r49, r50, r52, r53, r54, $r68, r69;
        boolean z0, z1, $z2, $z3, z5;
        java.util.Map r1, $r6, $r12;
        java.util.Iterator $r2;
        java.lang.Object r3, $r7, $r11, $r13;
        java.lang.CharSequence $r5, $r18, $r20, $r21, $r25, $r26, $r42, $r43;
        com.squareup.javapoet.ClassName $r8, $r9, $r16, $r17, r63;
        com.squareup.javapoet.TypeName $r10, $r34, $r46, r51, r58, $r62, $r67, $r70;
        kotlin.NoWhenBranchMatchedException $r15;
        java.util.ArrayList $r22, $r23;
        int $i0, $i1, $i2, i4, i5, i6, $i7;
        com.squareup.javapoet.TypeName[] $r28, $r30, $r32;
        java.lang.Object[] $r29, $r31, r65;
        com.squareup.javapoet.ParameterizedTypeName $r33;
        kotlin.TypeCastException $r35, $r36, $r37, $r38, $r39, $r40, $r47, $r48;
        com.squareup.javapoet.ArrayTypeName $r45;
        byte b3, b8;
        java.lang.Iterable $r55;
        java.util.Collection r56, r57, r64;
        java.util.List r59;
        android.databinding.tool.ext.Replacement r66;

        $r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.Map;

        z1 := @parameter3: boolean;

        $z2 = staticinvoke <kotlin.text.StringsKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r0, "[]", 0, 2, null);

        if $z2 == 0 goto label03;

        r49 = $r0;

        b3 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        i4 = $i2 - 2;

        if r49 != null goto label01;

        $r48 = new kotlin.TypeCastException;

        specialinvoke $r48.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r48;

     label01:
        $r41 = virtualinvoke r49.<java.lang.String: java.lang.String substring(int,int)>(b3, i4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r41, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        r50 = $r41;

        if r50 != null goto label02;

        $r47 = new kotlin.TypeCastException;

        specialinvoke $r47.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r47;

     label02:
        $r42 = (java.lang.CharSequence) r50;

        $r43 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.Object: java.lang.String toString()>();

        r51 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,boolean,java.util.Map,boolean)>($r44, z0, r1, z1);

        $r45 = staticinvoke <com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName of(com.squareup.javapoet.TypeName)>(r51);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r45, "ArrayTypeName.of(qType)");

        $r46 = (com.squareup.javapoet.TypeName) $r45;

        return $r46;

     label03:
        $r5 = (java.lang.CharSequence) $r0;

        i5 = staticinvoke <kotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)>($r5, ">", 0, 0, 6, null);

        if i5 < 0 goto label12;

        $r18 = (java.lang.CharSequence) $r0;

        i6 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)>($r18, "<", 0, 0, 6, null);

        if i6 < 0 goto label12;

        r52 = $r0;

        $i7 = i6 + 1;

        if r52 != null goto label04;

        $r40 = new kotlin.TypeCastException;

        specialinvoke $r40.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r40;

     label04:
        $r19 = virtualinvoke r52.<java.lang.String: java.lang.String substring(int,int)>($i7, i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r19, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        r53 = $r19;

        if r53 != null goto label05;

        $r39 = new kotlin.TypeCastException;

        specialinvoke $r39.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r39;

     label05:
        $r20 = (java.lang.CharSequence) r53;

        $r21 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r20);

        r54 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        $r22 = staticinvoke <android.databinding.tool.ext.ExtKt: java.util.ArrayList splitTemplateParameters(java.lang.String)>(r54);

        $r55 = (java.lang.Iterable) $r22;

        $r23 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r55, 10);

        specialinvoke $r23.<java.util.ArrayList: void <init>(int)>($i0);

        r56 = (java.util.Collection) $r23;

        $r2 = interfaceinvoke $r55.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) r3;

        r57 = r56;

        r58 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,boolean,java.util.Map,boolean)>(r4, z0, r1, z1);

        interfaceinvoke r57.<java.util.Collection: boolean add(java.lang.Object)>(r58);

        goto label06;

     label07:
        r59 = (java.util.List) r56;

        b8 = 0;

        if $r0 != null goto label08;

        $r38 = new kotlin.TypeCastException;

        specialinvoke $r38.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r38;

     label08:
        $r24 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(b8, i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r24, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        if $r24 != null goto label09;

        $r37 = new kotlin.TypeCastException;

        specialinvoke $r37.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r37;

     label09:
        $r25 = (java.lang.CharSequence) $r24;

        $r26 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        $r62 = staticinvoke <android.databinding.tool.ext.ExtKt: com.squareup.javapoet.TypeName toTypeName(java.lang.String,boolean,java.util.Map,boolean)>($r27, z0, r1, z1);

        if $r62 != null goto label10;

        $r36 = new kotlin.TypeCastException;

        specialinvoke $r36.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type com.squareup.javapoet.ClassName");

        throw $r36;

     label10:
        r63 = (com.squareup.javapoet.ClassName) $r62;

        r64 = (java.util.Collection) r59;

        $r28 = newarray (com.squareup.javapoet.TypeName)[0];

        $r29 = interfaceinvoke r64.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r28);

        if $r29 != null goto label11;

        $r35 = new kotlin.TypeCastException;

        specialinvoke $r35.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r35;

     label11:
        r65 = $r29;

        $r30 = (com.squareup.javapoet.TypeName[]) r65;

        $i1 = lengthof $r30;

        $r31 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r30, $i1);

        $r32 = (com.squareup.javapoet.TypeName[]) $r31;

        $r33 = staticinvoke <com.squareup.javapoet.ParameterizedTypeName: com.squareup.javapoet.ParameterizedTypeName get(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>(r63, $r32);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r33, "ParameterizedTypeName.ge\u2026Qualified.toTypedArray())");

        $r34 = (com.squareup.javapoet.TypeName) $r33;

        return $r34;

     label12:
        if z1 == 0 goto label16;

        $r12 = <android.databinding.tool.ext.ExtKt: java.util.Map REPLACEMENTS>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r66 = (android.databinding.tool.ext.Replacement) $r13;

        if r66 == null goto label16;

        z5 = z0;

        if z5 != 1 goto label13;

        $r17 = virtualinvoke r66.<android.databinding.tool.ext.Replacement: com.squareup.javapoet.ClassName getAndroidX()>();

        $r67 = (com.squareup.javapoet.TypeName) $r17;

        goto label15;

     label13:
        if z5 != 0 goto label14;

        $r16 = virtualinvoke r66.<android.databinding.tool.ext.Replacement: com.squareup.javapoet.ClassName getSupport()>();

        $r67 = (com.squareup.javapoet.TypeName) $r16;

        goto label15;

     label14:
        $r15 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r15.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r15;

     label15:
        return $r67;

     label16:
        if r1 == null goto label17;

        $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r68 = (java.lang.String) $r11;

        goto label18;

     label17:
        $r68 = null;

     label18:
        r69 = $r68;

        if r69 == null goto label19;

        $r9 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName bestGuess(java.lang.String)>(r69);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r9, "ClassName.bestGuess(import)");

        $r10 = (com.squareup.javapoet.TypeName) $r9;

        return $r10;

     label19:
        $r6 = <android.databinding.tool.ext.ExtKt: java.util.Map PRIMITIVE_TYPE_NAME_MAP>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r70 = (com.squareup.javapoet.TypeName) $r7;

        if $r70 == null goto label20;

        goto label21;

     label20:
        $r8 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName bestGuess(java.lang.String)>($r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r8, "ClassName.bestGuess(this)");

        $r70 = (com.squareup.javapoet.TypeName) $r8;

     label21:
        return $r70;
    }

    private static final java.util.ArrayList splitTemplateParameters(java.lang.String)
    {
        java.lang.String r0, $r5, $r7;
        java.util.ArrayList r1, $r3;
        java.lang.StringBuilder r2, $r4;
        char c0;
        int $i1, $i2, i3, i4;
        boolean $z1;

        r0 := @parameter0: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        i3 = 0;

        i4 = 0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r2 = $r4;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label5;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        if c0 != 44 goto label2;

        if i4 != 0 goto label2;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i2);

        goto label4;

     label2:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c0);

        if $z1 != 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        if c0 != 60 goto label3;

        i4 = i4 + 1;

        goto label4;

     label3:
        if c0 != 62 goto label4;

        i4 = i4 + -1;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return r1;
    }

    static void <clinit>()
    {
        java.util.concurrent.CopyOnWriteArrayList $r0;
        android.databinding.tool.ext.Replacement $r1;
        java.lang.String[] $r2, $r4;
        com.squareup.javapoet.ClassName $r3, $r5;
        kotlin.Pair $r6, $r12, $r16, $r20, $r24, $r28, $r32, $r36, $r40, $r44;
        java.util.Map $r7, $r45;
        kotlin.Pair[] $r8;
        com.squareup.javapoet.TypeName $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43;
        java.lang.String $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42;

        $r0 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        <android.databinding.tool.ext.ExtKt: java.util.concurrent.CopyOnWriteArrayList mappingHashes> = $r0;

        $r1 = new android.databinding.tool.ext.Replacement;

        $r2 = newarray (java.lang.String)[0];

        $r3 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("android.databinding", "ViewStubProxy", $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r3, "ClassName.get(\"android.d\u2026inding\", \"ViewStubProxy\")");

        $r4 = newarray (java.lang.String)[0];

        $r5 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.databinding", "ViewStubProxy", $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r5, "ClassName.get(\"androidx.\u2026binding\",\"ViewStubProxy\")");

        specialinvoke $r1.<android.databinding.tool.ext.Replacement: void <init>(com.squareup.javapoet.ClassName,com.squareup.javapoet.ClassName)>($r3, $r5);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("android.view.ViewStub", $r1);

        $r7 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair)>($r6);

        <android.databinding.tool.ext.ExtKt: java.util.Map REPLACEMENTS> = $r7;

        $r8 = newarray (kotlin.Pair)[9];

        $r9 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName VOID>;

        $r10 = virtualinvoke $r9.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r11 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName VOID>;

        $r12 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r8[0] = $r12;

        $r13 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BOOLEAN>;

        $r14 = virtualinvoke $r13.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r15 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BOOLEAN>;

        $r16 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r8[1] = $r16;

        $r17 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BYTE>;

        $r18 = virtualinvoke $r17.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r19 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BYTE>;

        $r20 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r8[2] = $r20;

        $r21 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName SHORT>;

        $r22 = virtualinvoke $r21.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r23 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName SHORT>;

        $r24 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r22, $r23);

        $r8[3] = $r24;

        $r25 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $r26 = virtualinvoke $r25.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r27 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $r28 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r8[4] = $r28;

        $r29 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName LONG>;

        $r30 = virtualinvoke $r29.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r31 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName LONG>;

        $r32 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r8[5] = $r32;

        $r33 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName CHAR>;

        $r34 = virtualinvoke $r33.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r35 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName CHAR>;

        $r36 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r8[6] = $r36;

        $r37 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName FLOAT>;

        $r38 = virtualinvoke $r37.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r39 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName FLOAT>;

        $r40 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r38, $r39);

        $r8[7] = $r40;

        $r41 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName DOUBLE>;

        $r42 = virtualinvoke $r41.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        $r43 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName DOUBLE>;

        $r44 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r8[8] = $r44;

        $r45 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>($r8);

        <android.databinding.tool.ext.ExtKt: java.util.Map PRIMITIVE_TYPE_NAME_MAP> = $r45;

        return;
    }

    public static final java.util.concurrent.CopyOnWriteArrayList access$getMappingHashes$p()
    {
        java.util.concurrent.CopyOnWriteArrayList $r0;

        $r0 = <android.databinding.tool.ext.ExtKt: java.util.concurrent.CopyOnWriteArrayList mappingHashes>;

        return $r0;
    }

