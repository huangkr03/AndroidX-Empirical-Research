androidx.paging.PagingDataDiffer
<androidx.paging.PagingDataDiffer: androidx.paging.DifferCallback differCallback>
<androidx.paging.PagingDataDiffer: kotlinx.coroutines.CoroutineDispatcher mainDispatcher>
<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>
<androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver receiver>
<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>
<androidx.paging.PagingDataDiffer: java.util.concurrent.CopyOnWriteArrayList onPagesUpdatedListeners>
<androidx.paging.PagingDataDiffer: androidx.paging.SingleRunner collectFromRunner>
<androidx.paging.PagingDataDiffer: boolean lastAccessedIndexUnfulfilled>
<androidx.paging.PagingDataDiffer: int lastAccessedIndex>
<androidx.paging.PagingDataDiffer: androidx.paging.PagingDataDiffer$processPageEventCallback$1 processPageEventCallback>
<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.Flow loadStateFlow>
<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.MutableSharedFlow _onPagesUpdatedFlow>
    public void <init>(androidx.paging.DifferCallback, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.DifferCallback r1;
        kotlinx.coroutines.CoroutineDispatcher r2;
        androidx.paging.PagePresenter$Companion $r3;
        androidx.paging.PagePresenter $r4;
        androidx.paging.MutableCombinedLoadStateCollection $r5, $r9;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        androidx.paging.SingleRunner $r7;
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 $r8;
        kotlinx.coroutines.flow.Flow $r10;
        kotlinx.coroutines.channels.BufferOverflow $r11;
        kotlinx.coroutines.flow.MutableSharedFlow $r12;
        androidx.paging.PagingDataDiffer$1 $r13;
        kotlin.jvm.functions.Function0 $r14;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: androidx.paging.DifferCallback;

        r2 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "differCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mainDispatcher");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PagingDataDiffer: androidx.paging.DifferCallback differCallback> = r1;

        r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.CoroutineDispatcher mainDispatcher> = r2;

        $r3 = <androidx.paging.PagePresenter: androidx.paging.PagePresenter$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.paging.PagePresenter$Companion: androidx.paging.PagePresenter initial$paging_common()>();

        r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter> = $r4;

        $r5 = new androidx.paging.MutableCombinedLoadStateCollection;

        specialinvoke $r5.<androidx.paging.MutableCombinedLoadStateCollection: void <init>()>();

        r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection> = $r5;

        $r6 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.paging.PagingDataDiffer: java.util.concurrent.CopyOnWriteArrayList onPagesUpdatedListeners> = $r6;

        $r7 = new androidx.paging.SingleRunner;

        specialinvoke $r7.<androidx.paging.SingleRunner: void <init>(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        r0.<androidx.paging.PagingDataDiffer: androidx.paging.SingleRunner collectFromRunner> = $r7;

        $r8 = new androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        specialinvoke $r8.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: void <init>(androidx.paging.PagingDataDiffer)>(r0);

        r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagingDataDiffer$processPageEventCallback$1 processPageEventCallback> = $r8;

        $r9 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        $r10 = virtualinvoke $r9.<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.Flow getFlow()>();

        r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.Flow loadStateFlow> = $r10;

        $r11 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST>;

        $r12 = staticinvoke <kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow(int,int,kotlinx.coroutines.channels.BufferOverflow)>(0, 64, $r11);

        r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.MutableSharedFlow _onPagesUpdatedFlow> = $r12;

        $r13 = new androidx.paging.PagingDataDiffer$1;

        specialinvoke $r13.<androidx.paging.PagingDataDiffer$1: void <init>(androidx.paging.PagingDataDiffer)>(r0);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        virtualinvoke r0.<androidx.paging.PagingDataDiffer: void addOnPagesUpdatedListener(kotlin.jvm.functions.Function0)>($r14);

        return;
    }

    public void <init>(androidx.paging.DifferCallback, kotlinx.coroutines.CoroutineDispatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.DifferCallback r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        kotlinx.coroutines.MainCoroutineDispatcher $r3;
        kotlinx.coroutines.CoroutineDispatcher r4;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: androidx.paging.DifferCallback;

        r4 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r4 = (kotlinx.coroutines.CoroutineDispatcher) $r3;

     label1:
        specialinvoke r0.<androidx.paging.PagingDataDiffer: void <init>(androidx.paging.DifferCallback,kotlinx.coroutines.CoroutineDispatcher)>(r1, r4);

        return;
    }

    public final void dispatchLoadStates$paging_common(androidx.paging.LoadStates, androidx.paging.LoadStates)
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.LoadStates r1, r2, $r4, $r7;
        androidx.paging.MutableCombinedLoadStateCollection $r3, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: androidx.paging.LoadStates;

        r2 := @parameter1: androidx.paging.LoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        $r3 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        $r4 = virtualinvoke $r3.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates getSource()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        $r7 = virtualinvoke $r6.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates getMediator()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r2);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        virtualinvoke $r5.<androidx.paging.MutableCombinedLoadStateCollection: void set(androidx.paging.LoadStates,androidx.paging.LoadStates)>(r1, r2);

        return;
    }

<androidx.paging.PagingDataDiffer: java.lang.Object presentNewList(androidx.paging.NullPaddedList,androidx.paging.NullPaddedList,int,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>
    public boolean postEvents()
    {
        androidx.paging.PagingDataDiffer r0;

        r0 := @this: androidx.paging.PagingDataDiffer;

        return 0;
    }

    public final java.lang.Object collectFrom(androidx.paging.PagingData, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.PagingData r1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.PagingDataDiffer$collectFrom$2 $r3;
        androidx.paging.SingleRunner $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Object $r6, $r7;
        kotlin.Unit $r8;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: androidx.paging.PagingData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.SingleRunner collectFromRunner>;

        $r3 = new androidx.paging.PagingDataDiffer$collectFrom$2;

        specialinvoke $r3.<androidx.paging.PagingDataDiffer$collectFrom$2: void <init>(androidx.paging.PagingDataDiffer,androidx.paging.PagingData,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        $r6 = staticinvoke <androidx.paging.SingleRunner: java.lang.Object runInIsolation$default(androidx.paging.SingleRunner,int,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r4, 0, $r5, $r2, 1, null);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

    public final java.lang.Object get(int)
    {
        androidx.paging.PagingDataDiffer r0;
        int i0;
        androidx.paging.UiReceiver r1;
        androidx.paging.PagePresenter $r2, $r5;
        androidx.paging.ViewportHint$Access $r3;
        androidx.paging.ViewportHint $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PagingDataDiffer;

        i0 := @parameter0: int;

        r0.<androidx.paging.PagingDataDiffer: boolean lastAccessedIndexUnfulfilled> = 1;

        r0.<androidx.paging.PagingDataDiffer: int lastAccessedIndex> = i0;

        r1 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver receiver>;

        if r1 != null goto label1;

        goto label2;

     label1:
        $r2 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>;

        $r3 = virtualinvoke $r2.<androidx.paging.PagePresenter: androidx.paging.ViewportHint$Access accessHintForPresenterIndex(int)>(i0);

        $r4 = (androidx.paging.ViewportHint) $r3;

        interfaceinvoke r1.<androidx.paging.UiReceiver: void accessHint(androidx.paging.ViewportHint)>($r4);

     label2:
        $r5 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>;

        $r6 = virtualinvoke $r5.<androidx.paging.PagePresenter: java.lang.Object get(int)>(i0);

        return $r6;
    }

    public final java.lang.Object peek(int)
    {
        androidx.paging.PagingDataDiffer r0;
        int i0;
        androidx.paging.PagePresenter $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.paging.PagingDataDiffer;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>;

        $r2 = virtualinvoke $r1.<androidx.paging.PagePresenter: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public final androidx.paging.ItemSnapshotList snapshot()
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.PagePresenter $r1;
        androidx.paging.ItemSnapshotList $r2;

        r0 := @this: androidx.paging.PagingDataDiffer;

        $r1 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>;

        $r2 = virtualinvoke $r1.<androidx.paging.PagePresenter: androidx.paging.ItemSnapshotList snapshot()>();

        return $r2;
    }

    public final void retry()
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.UiReceiver r1;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver receiver>;

        if r1 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r1.<androidx.paging.UiReceiver: void retry()>();

     label2:
        return;
    }

    public final void refresh()
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.UiReceiver r1;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver receiver>;

        if r1 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r1.<androidx.paging.UiReceiver: void refresh()>();

     label2:
        return;
    }

    public final int getSize()
    {
        androidx.paging.PagingDataDiffer r0;
        androidx.paging.PagePresenter $r1;
        int $i0;

        r0 := @this: androidx.paging.PagingDataDiffer;

        $r1 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>;

        $i0 = virtualinvoke $r1.<androidx.paging.PagePresenter: int getSize()>();

        return $i0;
    }

    public final kotlinx.coroutines.flow.Flow getLoadStateFlow()
    {
        androidx.paging.PagingDataDiffer r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.PagingDataDiffer;

        $r1 = r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.Flow loadStateFlow>;

        return $r1;
    }

    public final kotlinx.coroutines.flow.Flow getOnPagesUpdatedFlow()
    {
        androidx.paging.PagingDataDiffer r0;
        kotlinx.coroutines.flow.MutableSharedFlow $r1;
        kotlinx.coroutines.flow.SharedFlow $r2;
        kotlinx.coroutines.flow.Flow $r3;

        r0 := @this: androidx.paging.PagingDataDiffer;

        $r1 = r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.MutableSharedFlow _onPagesUpdatedFlow>;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)>($r1);

        $r3 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r3;
    }

    public final void addOnPagesUpdatedListener(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingDataDiffer r0;
        kotlin.jvm.functions.Function0 r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataDiffer: java.util.concurrent.CopyOnWriteArrayList onPagesUpdatedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeOnPagesUpdatedListener(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingDataDiffer r0;
        kotlin.jvm.functions.Function0 r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataDiffer: java.util.concurrent.CopyOnWriteArrayList onPagesUpdatedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public final void addLoadStateListener(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PagingDataDiffer r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.MutableCombinedLoadStateCollection $r2;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        virtualinvoke $r2.<androidx.paging.MutableCombinedLoadStateCollection: void addListener(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    public final void removeLoadStateListener(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PagingDataDiffer r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.MutableCombinedLoadStateCollection $r2;

        r0 := @this: androidx.paging.PagingDataDiffer;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        virtualinvoke $r2.<androidx.paging.MutableCombinedLoadStateCollection: void removeListener(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    public static final void access$setReceiver$p(androidx.paging.PagingDataDiffer, androidx.paging.UiReceiver)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.UiReceiver r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        r1 := @parameter1: androidx.paging.UiReceiver;

        $r0.<androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver receiver> = r1;

        return;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher access$getMainDispatcher$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.CoroutineDispatcher mainDispatcher>;

        return $r1;
    }

    public static final void access$setLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer, boolean)
    {
        androidx.paging.PagingDataDiffer $r0;
        boolean z0;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        z0 := @parameter1: boolean;

        $r0.<androidx.paging.PagingDataDiffer: boolean lastAccessedIndexUnfulfilled> = z0;

        return;
    }

    public static final androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.PagePresenter $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter>;

        return $r1;
    }

    public static final int access$getLastAccessedIndex$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        int $i0;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $i0 = $r0.<androidx.paging.PagingDataDiffer: int lastAccessedIndex>;

        return $i0;
    }

    public static final void access$setPresenter$p(androidx.paging.PagingDataDiffer, androidx.paging.PagePresenter)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.PagePresenter r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        r1 := @parameter1: androidx.paging.PagePresenter;

        $r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter presenter> = r1;

        return;
    }

    public static final androidx.paging.UiReceiver access$getReceiver$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.UiReceiver $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver receiver>;

        return $r1;
    }

    public static final void access$setLastAccessedIndex$p(androidx.paging.PagingDataDiffer, int)
    {
        androidx.paging.PagingDataDiffer $r0;
        int i0;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        i0 := @parameter1: int;

        $r0.<androidx.paging.PagingDataDiffer: int lastAccessedIndex> = i0;

        return;
    }

    public static final androidx.paging.PagingDataDiffer$processPageEventCallback$1 access$getProcessPageEventCallback$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: androidx.paging.PagingDataDiffer$processPageEventCallback$1 processPageEventCallback>;

        return $r1;
    }

    public static final androidx.paging.MutableCombinedLoadStateCollection access$getCombinedLoadStatesCollection$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.MutableCombinedLoadStateCollection $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection combinedLoadStatesCollection>;

        return $r1;
    }

    public static final boolean access$getLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $z0 = $r0.<androidx.paging.PagingDataDiffer: boolean lastAccessedIndexUnfulfilled>;

        return $z0;
    }

    public static final java.util.concurrent.CopyOnWriteArrayList access$getOnPagesUpdatedListeners$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: java.util.concurrent.CopyOnWriteArrayList onPagesUpdatedListeners>;

        return $r1;
    }

    public static final androidx.paging.DifferCallback access$getDifferCallback$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        androidx.paging.DifferCallback $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: androidx.paging.DifferCallback differCallback>;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.MutableSharedFlow access$get_onPagesUpdatedFlow$p(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer $r0;
        kotlinx.coroutines.flow.MutableSharedFlow $r1;

        $r0 := @parameter0: androidx.paging.PagingDataDiffer;

        $r1 = $r0.<androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.MutableSharedFlow _onPagesUpdatedFlow>;

        return $r1;
    }

androidx.paging.PagingDataDiffer$1
<androidx.paging.PagingDataDiffer$1: androidx.paging.PagingDataDiffer this$0>
    void <init>(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer$1 r0;
        androidx.paging.PagingDataDiffer $r1;

        r0 := @this: androidx.paging.PagingDataDiffer$1;

        $r1 := @parameter0: androidx.paging.PagingDataDiffer;

        r0.<androidx.paging.PagingDataDiffer$1: androidx.paging.PagingDataDiffer this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.PagingDataDiffer$1 r0;
        androidx.paging.PagingDataDiffer $r1;
        kotlinx.coroutines.flow.MutableSharedFlow $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.PagingDataDiffer$1;

        $r1 = r0.<androidx.paging.PagingDataDiffer$1: androidx.paging.PagingDataDiffer this$0>;

        $r2 = staticinvoke <androidx.paging.PagingDataDiffer: kotlinx.coroutines.flow.MutableSharedFlow access$get_onPagesUpdatedFlow$p(androidx.paging.PagingDataDiffer)>($r1);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r2.<kotlinx.coroutines.flow.MutableSharedFlow: boolean tryEmit(java.lang.Object)>($r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.PagingDataDiffer$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.PagingDataDiffer$1;

        virtualinvoke r0.<androidx.paging.PagingDataDiffer$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: androidx.paging.PagingDataDiffer this$0>
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: androidx.paging.PagePresenter $newPresenter>
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: kotlin.jvm.internal.Ref$BooleanRef $onListPresentableCalled>
    void <init>(androidx.paging.PagingDataDiffer, androidx.paging.PagePresenter, kotlin.jvm.internal.Ref$BooleanRef)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1 r0;
        androidx.paging.PagingDataDiffer $r1;
        androidx.paging.PagePresenter $r2;
        kotlin.jvm.internal.Ref$BooleanRef $r3;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1;

        $r1 := @parameter0: androidx.paging.PagingDataDiffer;

        $r2 := @parameter1: androidx.paging.PagePresenter;

        $r3 := @parameter2: kotlin.jvm.internal.Ref$BooleanRef;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: androidx.paging.PagingDataDiffer this$0> = $r1;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: androidx.paging.PagePresenter $newPresenter> = $r2;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: kotlin.jvm.internal.Ref$BooleanRef $onListPresentableCalled> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1 r0;
        androidx.paging.PagePresenter $r1;
        androidx.paging.PagingDataDiffer $r2;
        kotlin.jvm.internal.Ref$BooleanRef $r3;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1;

        $r2 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: androidx.paging.PagingDataDiffer this$0>;

        $r1 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: androidx.paging.PagePresenter $newPresenter>;

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setPresenter$p(androidx.paging.PagingDataDiffer,androidx.paging.PagePresenter)>($r2, $r1);

        $r3 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: kotlin.jvm.internal.Ref$BooleanRef $onListPresentableCalled>;

        $r3.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1;

        virtualinvoke r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.PagingDataDiffer$collectFrom$2$1$1
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object L$0>
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object L$1>
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: int label>
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>
<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>
    void <init>(androidx.paging.PageEvent, androidx.paging.PagingDataDiffer, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1 r0;
        androidx.paging.PageEvent $r1;
        androidx.paging.PagingDataDiffer $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        $r1 := @parameter0: androidx.paging.PageEvent;

        $r2 := @parameter1: androidx.paging.PagingDataDiffer;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event> = $r1;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1 r0;
        java.lang.Object $r1, r2, r4, $r47, $r48, $r69, $r92, r113;
        androidx.paging.TransformablePage r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        androidx.paging.PageEvent $r5, $r10, $r19, $r23, $r49, $r53, $r66, $r70, $r76, $r99, $r103, $r104, $r110;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z12, z13, z14, $z15, z16, $z18, $z19, $z20, z21, $z22, $z23, z24, $z25;
        androidx.paging.PagingDataDiffer $r6, $r11, $r15, $r27, $r28, $r29, $r30, $r32, $r35, $r36, $r38, $r39, $r41, $r43, $r46, $r51, $r56, $r57, $r60, $r67, $r74, $r79, $r80, $r82, $r86, $r97, $r100;
        java.util.concurrent.CopyOnWriteArrayList $r7;
        kotlin.Unit $r8;
        androidx.paging.MutableCombinedLoadStateCollection $r12, $r16;
        androidx.paging.LoadStates $r13, $r17, $r52, $r55;
        androidx.paging.LoadState $r14, $r18;
        androidx.paging.PageEvent$Insert $r20, $r24, $r50, $r54, $r71, $r77, $r105;
        androidx.paging.LoadType $r21, $r22, $r25, $r26, $r72, $r73;
        androidx.paging.PagePresenter $r31, $r37, $r40, $r42, $r75, $r81, r90, $r98;
        androidx.paging.ViewportHint$Access $r33, $r58;
        androidx.paging.ViewportHint $r34, $r59, $r62;
        java.util.List $r44, $r106;
        java.util.Collection $r45;
        androidx.paging.ViewportHint$Initial $r61;
        java.lang.IllegalStateException $r63, $r89;
        java.lang.String $r64, $r94;
        java.lang.Throwable $r65;
        kotlin.coroutines.Continuation $r68, $r88;
        kotlin.jvm.internal.Ref$BooleanRef $r78, r91;
        androidx.paging.NullPaddedList $r83, $r84;
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1 $r85;
        kotlin.jvm.functions.Function0 $r87, $r114;
        java.lang.Integer r93;
        androidx.paging.UiReceiver r95, r96, $r109;
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 $r101;
        androidx.paging.PagePresenter$ProcessPageEventCallback $r102;
        java.lang.Iterable $r107, r111;
        java.util.Iterator $r108, r112;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label09;
            default: goto label31;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r66 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $z6 = $r66 instanceof androidx.paging.PageEvent$Insert;

        if $z6 == 0 goto label08;

        $r70 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r71 = (androidx.paging.PageEvent$Insert) $r70;

        $r72 = virtualinvoke $r71.<androidx.paging.PageEvent$Insert: androidx.paging.LoadType getLoadType()>();

        $r73 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if $r72 != $r73 goto label08;

        $r74 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer,boolean)>($r74, 0);

        $r75 = new androidx.paging.PagePresenter;

        $r76 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r77 = (androidx.paging.PageEvent$Insert) $r76;

        specialinvoke $r75.<androidx.paging.PagePresenter: void <init>(androidx.paging.PageEvent$Insert)>($r77);

        r90 = $r75;

        $r78 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke $r78.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r91 = $r78;

        $r80 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r79 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r81 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)>($r79);

        $r83 = (androidx.paging.NullPaddedList) $r81;

        $r84 = (androidx.paging.NullPaddedList) r90;

        $r82 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $i10 = staticinvoke <androidx.paging.PagingDataDiffer: int access$getLastAccessedIndex$p(androidx.paging.PagingDataDiffer)>($r82);

        $r85 = new androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1;

        $r86 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        specialinvoke $r85.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1$transformedLastAccessedIndex$1: void <init>(androidx.paging.PagingDataDiffer,androidx.paging.PagePresenter,kotlin.jvm.internal.Ref$BooleanRef)>($r86, r90, r91);

        $r87 = (kotlin.jvm.functions.Function0) $r85;

        $r88 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object L$0> = r90;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object L$1> = r91;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: int label> = 1;

        $r92 = virtualinvoke $r80.<androidx.paging.PagingDataDiffer: java.lang.Object presentNewList(androidx.paging.NullPaddedList,androidx.paging.NullPaddedList,int,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r83, $r84, $i10, $r87, $r88);

        if $r92 != r4 goto label03;

        return r4;

     label02:
        $r47 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object L$1>;

        r91 = (kotlin.jvm.internal.Ref$BooleanRef) $r47;

        $r48 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object L$0>;

        r90 = (androidx.paging.PagePresenter) $r48;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r92 = $r1;

     label03:
        r93 = (java.lang.Integer) $r92;

        z8 = r91.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if z8 != 0 goto label04;

        $r94 = "Missing call to onListPresentable after new list was presented. If you are seeing this exception, it is generally an indication of an issue with Paging. Please file a bug so we can fix it at: https://issuetracker.google.com/issues/new?component=413106";

        $r63 = new java.lang.IllegalStateException;

        $r64 = virtualinvoke $r94.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r64);

        $r65 = (java.lang.Throwable) $r63;

        throw $r65;

     label04:
        $r51 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r49 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r50 = (androidx.paging.PageEvent$Insert) $r49;

        $r52 = virtualinvoke $r50.<androidx.paging.PageEvent$Insert: androidx.paging.LoadStates getSourceLoadStates()>();

        $r53 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r54 = (androidx.paging.PageEvent$Insert) $r53;

        $r55 = virtualinvoke $r54.<androidx.paging.PageEvent$Insert: androidx.paging.LoadStates getMediatorLoadStates()>();

        virtualinvoke $r51.<androidx.paging.PagingDataDiffer: void dispatchLoadStates$paging_common(androidx.paging.LoadStates,androidx.paging.LoadStates)>($r52, $r55);

        if r93 != null goto label06;

        $r60 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        r95 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver access$getReceiver$p(androidx.paging.PagingDataDiffer)>($r60);

        if r95 != null goto label05;

        goto label27;

     label05:
        $r61 = virtualinvoke r90.<androidx.paging.PagePresenter: androidx.paging.ViewportHint$Initial initializeHint()>();

        $r62 = (androidx.paging.ViewportHint) $r61;

        interfaceinvoke r95.<androidx.paging.UiReceiver: void accessHint(androidx.paging.ViewportHint)>($r62);

        goto label27;

     label06:
        $r56 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $i8 = virtualinvoke r93.<java.lang.Integer: int intValue()>();

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setLastAccessedIndex$p(androidx.paging.PagingDataDiffer,int)>($r56, $i8);

        $r57 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        r96 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver access$getReceiver$p(androidx.paging.PagingDataDiffer)>($r57);

        if r96 != null goto label07;

        goto label27;

     label07:
        $i9 = virtualinvoke r93.<java.lang.Integer: int intValue()>();

        $r58 = virtualinvoke r90.<androidx.paging.PagePresenter: androidx.paging.ViewportHint$Access accessHintForPresenterIndex(int)>($i9);

        $r59 = (androidx.paging.ViewportHint) $r58;

        interfaceinvoke r96.<androidx.paging.UiReceiver: void accessHint(androidx.paging.ViewportHint)>($r59);

        goto label27;

     label08:
        $r67 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $z7 = virtualinvoke $r67.<androidx.paging.PagingDataDiffer: boolean postEvents()>();

        if $z7 == 0 goto label10;

        $r68 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: int label> = 2;

        $r69 = staticinvoke <kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)>($r68);

        if $r69 != r4 goto label10;

        return r4;

     label09:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label10:
        $r97 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r98 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)>($r97);

        $r99 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r100 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r101 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagingDataDiffer$processPageEventCallback$1 access$getProcessPageEventCallback$p(androidx.paging.PagingDataDiffer)>($r100);

        $r102 = (androidx.paging.PagePresenter$ProcessPageEventCallback) $r101;

        virtualinvoke $r98.<androidx.paging.PagePresenter: void processEvent(androidx.paging.PageEvent,androidx.paging.PagePresenter$ProcessPageEventCallback)>($r99, $r102);

        $r103 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $z12 = $r103 instanceof androidx.paging.PageEvent$Drop;

        if $z12 == 0 goto label11;

        $r46 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer,boolean)>($r46, 0);

     label11:
        $r5 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $z1 = $r5 instanceof androidx.paging.PageEvent$Insert;

        if $z1 == 0 goto label27;

        $r11 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r12 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection access$getCombinedLoadStatesCollection$p(androidx.paging.PagingDataDiffer)>($r11);

        $r13 = virtualinvoke $r12.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates getSource()>();

        $r14 = virtualinvoke $r13.<androidx.paging.LoadStates: androidx.paging.LoadState getPrepend()>();

        z13 = virtualinvoke $r14.<androidx.paging.LoadState: boolean getEndOfPaginationReached()>();

        $r15 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r16 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection access$getCombinedLoadStatesCollection$p(androidx.paging.PagingDataDiffer)>($r15);

        $r17 = virtualinvoke $r16.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates getSource()>();

        $r18 = virtualinvoke $r17.<androidx.paging.LoadStates: androidx.paging.LoadState getAppend()>();

        z14 = virtualinvoke $r18.<androidx.paging.LoadState: boolean getEndOfPaginationReached()>();

        $r19 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r20 = (androidx.paging.PageEvent$Insert) $r19;

        $r21 = virtualinvoke $r20.<androidx.paging.PageEvent$Insert: androidx.paging.LoadType getLoadType()>();

        $r22 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if $r21 != $r22 goto label12;

        if z13 != 0 goto label14;

     label12:
        $r23 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r24 = (androidx.paging.PageEvent$Insert) $r23;

        $r25 = virtualinvoke $r24.<androidx.paging.PageEvent$Insert: androidx.paging.LoadType getLoadType()>();

        $r26 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        if $r25 != $r26 goto label13;

        if z14 != 0 goto label14;

     label13:
        $z15 = 1;

        goto label15;

     label14:
        $z15 = 0;

     label15:
        z16 = $z15;

        $r104 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r105 = (androidx.paging.PageEvent$Insert) $r104;

        $r106 = virtualinvoke $r105.<androidx.paging.PageEvent$Insert: java.util.List getPages()>();

        $r107 = (java.lang.Iterable) $r106;

        $z18 = $r107 instanceof java.util.Collection;

        if $z18 == 0 goto label16;

        $r45 = (java.util.Collection) $r107;

        $z5 = interfaceinvoke $r45.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label16;

        $z19 = 1;

        goto label19;

     label16:
        $r108 = interfaceinvoke $r107.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z20 = interfaceinvoke $r108.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label18;

        r2 = interfaceinvoke $r108.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.paging.TransformablePage) r2;

        $r44 = virtualinvoke r3.<androidx.paging.TransformablePage: java.util.List getData()>();

        $z4 = interfaceinvoke $r44.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label17;

        $z19 = 0;

        goto label19;

     label18:
        $z19 = 1;

     label19:
        z21 = $z19;

        if z16 != 0 goto label20;

        $r43 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer,boolean)>($r43, 0);

        goto label27;

     label20:
        $r27 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $z3 = staticinvoke <androidx.paging.PagingDataDiffer: boolean access$getLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer)>($r27);

        if $z3 != 0 goto label21;

        if z21 == 0 goto label27;

     label21:
        if z21 != 0 goto label22;

        $r35 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $i2 = staticinvoke <androidx.paging.PagingDataDiffer: int access$getLastAccessedIndex$p(androidx.paging.PagingDataDiffer)>($r35);

        $r36 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r37 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)>($r36);

        $i3 = virtualinvoke $r37.<androidx.paging.PagePresenter: int getPlaceholdersBefore()>();

        if $i2 < $i3 goto label22;

        $r38 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $i4 = staticinvoke <androidx.paging.PagingDataDiffer: int access$getLastAccessedIndex$p(androidx.paging.PagingDataDiffer)>($r38);

        $r39 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r40 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)>($r39);

        $i5 = virtualinvoke $r40.<androidx.paging.PagePresenter: int getPlaceholdersBefore()>();

        $r41 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r42 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)>($r41);

        $i6 = virtualinvoke $r42.<androidx.paging.PagePresenter: int getStorageCount()>();

        $i7 = $i5 + $i6;

        if $i4 <= $i7 goto label23;

     label22:
        $z22 = 1;

        goto label24;

     label23:
        $z22 = 0;

     label24:
        if $z22 == 0 goto label26;

        $r29 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r109 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.UiReceiver access$getReceiver$p(androidx.paging.PagingDataDiffer)>($r29);

        if $r109 != null goto label25;

        goto label27;

     label25:
        $r30 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r31 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.PagePresenter access$getPresenter$p(androidx.paging.PagingDataDiffer)>($r30);

        $r32 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $i1 = staticinvoke <androidx.paging.PagingDataDiffer: int access$getLastAccessedIndex$p(androidx.paging.PagingDataDiffer)>($r32);

        $r33 = virtualinvoke $r31.<androidx.paging.PagePresenter: androidx.paging.ViewportHint$Access accessHintForPresenterIndex(int)>($i1);

        $r34 = (androidx.paging.ViewportHint) $r33;

        interfaceinvoke $r109.<androidx.paging.UiReceiver: void accessHint(androidx.paging.ViewportHint)>($r34);

        goto label27;

     label26:
        $r28 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setLastAccessedIndexUnfulfilled$p(androidx.paging.PagingDataDiffer,boolean)>($r28, 0);

     label27:
        $r110 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $z23 = $r110 instanceof androidx.paging.PageEvent$Insert;

        if $z23 != 0 goto label28;

        $r10 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $z2 = $r10 instanceof androidx.paging.PageEvent$Drop;

        if $z2 == 0 goto label30;

     label28:
        $r6 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        $r7 = staticinvoke <androidx.paging.PagingDataDiffer: java.util.concurrent.CopyOnWriteArrayList access$getOnPagesUpdatedListeners$p(androidx.paging.PagingDataDiffer)>($r6);

        r111 = (java.lang.Iterable) $r7;

        z24 = 0;

        r112 = interfaceinvoke r111.<java.lang.Iterable: java.util.Iterator iterator()>();

     label29:
        $z25 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label30;

        r113 = interfaceinvoke r112.<java.util.Iterator: java.lang.Object next()>();

        $r114 = (kotlin.jvm.functions.Function0) r113;

        interfaceinvoke $r114.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label29;

     label30:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label31:
        $r89 = new java.lang.IllegalStateException;

        specialinvoke $r89.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r89;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.paging.PagingDataDiffer $r4;
        androidx.paging.PageEvent $r5;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        $r5 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PageEvent $event>;

        $r4 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: androidx.paging.PagingDataDiffer this$0>;

        specialinvoke $r3.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: void <init>(androidx.paging.PageEvent,androidx.paging.PagingDataDiffer,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.PagingDataDiffer$collectFrom$2$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1
<androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1: androidx.paging.PagingDataDiffer this$0>
    public void <init>(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1 r0;
        androidx.paging.PagingDataDiffer r1;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: androidx.paging.PagingDataDiffer;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1: androidx.paging.PagingDataDiffer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1 r0;
        java.lang.Object r1, $r11, $r12;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.PageEvent r4;
        androidx.paging.PagingDataDiffer $r5, $r8;
        kotlinx.coroutines.CoroutineDispatcher $r6;
        androidx.paging.PagingDataDiffer$collectFrom$2$1$1 $r7;
        kotlin.coroutines.CoroutineContext $r9;
        kotlin.jvm.functions.Function2 $r10;
        kotlin.Unit $r13;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r4 = (androidx.paging.PageEvent) r1;

        $r5 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1: androidx.paging.PagingDataDiffer this$0>;

        $r6 = staticinvoke <androidx.paging.PagingDataDiffer: kotlinx.coroutines.CoroutineDispatcher access$getMainDispatcher$p(androidx.paging.PagingDataDiffer)>($r5);

        $r9 = (kotlin.coroutines.CoroutineContext) $r6;

        $r7 = new androidx.paging.PagingDataDiffer$collectFrom$2$1$1;

        $r8 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1: androidx.paging.PagingDataDiffer this$0>;

        specialinvoke $r7.<androidx.paging.PagingDataDiffer$collectFrom$2$1$1: void <init>(androidx.paging.PageEvent,androidx.paging.PagingDataDiffer,kotlin.coroutines.Continuation)>(r4, $r8, null);

        $r10 = (kotlin.jvm.functions.Function2) $r7;

        $r11 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r9, $r10, $r2);

        $r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r11 != $r12 goto label1;

        return $r11;

     label1:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;
    }

androidx.paging.PagingDataDiffer$collectFrom$2
<androidx.paging.PagingDataDiffer$collectFrom$2: int label>
<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingDataDiffer this$0>
<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingData $pagingData>
    void <init>(androidx.paging.PagingDataDiffer, androidx.paging.PagingData, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2 r0;
        androidx.paging.PagingDataDiffer $r1;
        androidx.paging.PagingData $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2;

        $r1 := @parameter0: androidx.paging.PagingDataDiffer;

        $r2 := @parameter1: androidx.paging.PagingData;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingDataDiffer this$0> = $r1;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingData $pagingData> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2 r0;
        java.lang.Object $r1, r4, $r13;
        kotlinx.coroutines.flow.Flow $r2;
        androidx.paging.PagingDataDiffer r3, $r7;
        int $i0;
        kotlin.Unit $r5;
        androidx.paging.PagingData $r6, $r9;
        androidx.paging.UiReceiver $r8;
        androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1 $r10;
        kotlinx.coroutines.flow.FlowCollector $r11;
        kotlin.coroutines.Continuation $r12;
        java.lang.IllegalStateException $r14;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingDataDiffer this$0>;

        $r6 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingData $pagingData>;

        $r8 = virtualinvoke $r6.<androidx.paging.PagingData: androidx.paging.UiReceiver getReceiver$paging_common()>();

        staticinvoke <androidx.paging.PagingDataDiffer: void access$setReceiver$p(androidx.paging.PagingDataDiffer,androidx.paging.UiReceiver)>($r7, $r8);

        $r9 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingData $pagingData>;

        $r2 = virtualinvoke $r9.<androidx.paging.PagingData: kotlinx.coroutines.flow.Flow getFlow$paging_common()>();

        r3 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingDataDiffer this$0>;

        $r10 = new androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1;

        specialinvoke $r10.<androidx.paging.PagingDataDiffer$collectFrom$2$invokeSuspend$$inlined$collect$1: void <init>(androidx.paging.PagingDataDiffer)>(r3);

        $r11 = (kotlinx.coroutines.flow.FlowCollector) $r10;

        $r12 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PagingDataDiffer$collectFrom$2: int label> = 1;

        $r13 = interfaceinvoke $r2.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r11, $r12);

        if $r13 != r4 goto label3;

        return r4;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label4:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r14;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r5;
        androidx.paging.PagingData $r3;
        androidx.paging.PagingDataDiffer $r4;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.paging.PagingDataDiffer$collectFrom$2;

        $r4 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingDataDiffer this$0>;

        $r3 = r0.<androidx.paging.PagingDataDiffer$collectFrom$2: androidx.paging.PagingData $pagingData>;

        specialinvoke $r2.<androidx.paging.PagingDataDiffer$collectFrom$2: void <init>(androidx.paging.PagingDataDiffer,androidx.paging.PagingData,kotlin.coroutines.Continuation)>($r4, $r3, $r1);

        $r5 = (kotlin.coroutines.Continuation) $r2;

        return $r5;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.paging.PagingDataDiffer$collectFrom$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.paging.PagingDataDiffer$collectFrom$2) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.paging.PagingDataDiffer$collectFrom$2: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.PagingDataDiffer$collectFrom$2 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.PagingDataDiffer$collectFrom$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PagingDataDiffer$collectFrom$2: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.paging.PagingDataDiffer$processPageEventCallback$1
<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>
    void <init>(androidx.paging.PagingDataDiffer)
    {
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 r0;
        androidx.paging.PagingDataDiffer $r1;

        r0 := @this: androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        $r1 := @parameter0: androidx.paging.PagingDataDiffer;

        r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onChanged(int, int)
    {
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 r0;
        int i0, i1;
        androidx.paging.PagingDataDiffer $r1;
        androidx.paging.DifferCallback $r2;

        r0 := @this: androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>;

        $r2 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.DifferCallback access$getDifferCallback$p(androidx.paging.PagingDataDiffer)>($r1);

        interfaceinvoke $r2.<androidx.paging.DifferCallback: void onChanged(int,int)>(i0, i1);

        return;
    }

    public void onInserted(int, int)
    {
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 r0;
        int i0, i1;
        androidx.paging.PagingDataDiffer $r1;
        androidx.paging.DifferCallback $r2;

        r0 := @this: androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>;

        $r2 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.DifferCallback access$getDifferCallback$p(androidx.paging.PagingDataDiffer)>($r1);

        interfaceinvoke $r2.<androidx.paging.DifferCallback: void onInserted(int,int)>(i0, i1);

        return;
    }

    public void onRemoved(int, int)
    {
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 r0;
        int i0, i1;
        androidx.paging.PagingDataDiffer $r1;
        androidx.paging.DifferCallback $r2;

        r0 := @this: androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>;

        $r2 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.DifferCallback access$getDifferCallback$p(androidx.paging.PagingDataDiffer)>($r1);

        interfaceinvoke $r2.<androidx.paging.DifferCallback: void onRemoved(int,int)>(i0, i1);

        return;
    }

    public void onStateUpdate(androidx.paging.LoadStates, androidx.paging.LoadStates)
    {
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 r0;
        androidx.paging.LoadStates r1, r2;
        androidx.paging.PagingDataDiffer $r3;

        r0 := @this: androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        r1 := @parameter0: androidx.paging.LoadStates;

        r2 := @parameter1: androidx.paging.LoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        $r3 = r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>;

        virtualinvoke $r3.<androidx.paging.PagingDataDiffer: void dispatchLoadStates$paging_common(androidx.paging.LoadStates,androidx.paging.LoadStates)>(r1, r2);

        return;
    }

    public void onStateUpdate(androidx.paging.LoadType, boolean, androidx.paging.LoadState)
    {
        androidx.paging.PagingDataDiffer$processPageEventCallback$1 r0;
        androidx.paging.LoadType r1;
        boolean z0, $z1;
        androidx.paging.LoadState r2, r3;
        androidx.paging.PagingDataDiffer $r4, $r6;
        androidx.paging.MutableCombinedLoadStateCollection $r5, $r7;

        r0 := @this: androidx.paging.PagingDataDiffer$processPageEventCallback$1;

        r1 := @parameter0: androidx.paging.LoadType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.paging.LoadState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "loadState");

        $r4 = r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>;

        $r5 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection access$getCombinedLoadStatesCollection$p(androidx.paging.PagingDataDiffer)>($r4);

        r3 = virtualinvoke $r5.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState get(androidx.paging.LoadType,boolean)>(r1, z0);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.paging.PagingDataDiffer$processPageEventCallback$1: androidx.paging.PagingDataDiffer this$0>;

        $r7 = staticinvoke <androidx.paging.PagingDataDiffer: androidx.paging.MutableCombinedLoadStateCollection access$getCombinedLoadStatesCollection$p(androidx.paging.PagingDataDiffer)>($r6);

        virtualinvoke $r7.<androidx.paging.MutableCombinedLoadStateCollection: boolean set(androidx.paging.LoadType,boolean,androidx.paging.LoadState)>(r1, z0, r2);

        return;
    }

