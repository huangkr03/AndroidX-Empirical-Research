androidx.wear.tiles.TileUpdateRequesterService
<androidx.wear.tiles.TileUpdateRequesterService: int API_VERSION>
<androidx.wear.tiles.TileUpdateRequesterService: int getApiVersion()>
<androidx.wear.tiles.TileUpdateRequesterService: void requestUpdate(android.content.ComponentName,androidx.wear.tiles.TileUpdateRequestData)>
androidx.wear.tiles.TileUpdateRequesterService$Default
    public void <init>()
    {
        androidx.wear.tiles.TileUpdateRequesterService$Default r0;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.wear.tiles.TileUpdateRequesterService$Default r0;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Default;

        return 0;
    }

    public void requestUpdate(android.content.ComponentName, androidx.wear.tiles.TileUpdateRequestData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileUpdateRequesterService$Default r0;
        android.content.ComponentName r1;
        androidx.wear.tiles.TileUpdateRequestData r2;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Default;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: androidx.wear.tiles.TileUpdateRequestData;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.wear.tiles.TileUpdateRequesterService$Default r0;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Default;

        return null;
    }

androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy
<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: android.os.IBinder mRemote>
<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: androidx.wear.tiles.TileUpdateRequesterService sDefaultImpl>
    void <init>(android.os.IBinder)
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy;

        $r1 = r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy r0;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy;

        return "androidx.wear.tiles.TileUpdateRequesterService";
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0, i1;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.wear.tiles.TileUpdateRequesterService $r5, $r6;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileUpdateRequesterService");

        $r4 = r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if z0 != 0 goto label3;

        $r5 = staticinvoke <androidx.wear.tiles.TileUpdateRequesterService$Stub: androidx.wear.tiles.TileUpdateRequesterService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <androidx.wear.tiles.TileUpdateRequesterService$Stub: androidx.wear.tiles.TileUpdateRequesterService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<androidx.wear.tiles.TileUpdateRequesterService: int getApiVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void requestUpdate(android.content.ComponentName, androidx.wear.tiles.TileUpdateRequestData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy r0;
        android.content.ComponentName r1;
        androidx.wear.tiles.TileUpdateRequestData r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r8;
        android.os.IBinder $r5;
        androidx.wear.tiles.TileUpdateRequesterService $r6, $r7;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: androidx.wear.tiles.TileUpdateRequestData;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileUpdateRequesterService");

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<androidx.wear.tiles.TileUpdateRequestData: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label05;

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label05:
        $r5 = r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.wear.tiles.TileUpdateRequesterService$Stub: androidx.wear.tiles.TileUpdateRequesterService getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.wear.tiles.TileUpdateRequesterService$Stub: androidx.wear.tiles.TileUpdateRequesterService getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.wear.tiles.TileUpdateRequesterService: void requestUpdate(android.content.ComponentName,androidx.wear.tiles.TileUpdateRequestData)>(r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r8 := @caughtexception;

        r4 = $r8;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

androidx.wear.tiles.TileUpdateRequesterService$Stub
<androidx.wear.tiles.TileUpdateRequesterService$Stub: java.lang.String DESCRIPTOR>
<androidx.wear.tiles.TileUpdateRequesterService$Stub: int TRANSACTION_getApiVersion>
<androidx.wear.tiles.TileUpdateRequesterService$Stub: int TRANSACTION_requestUpdate>
    public void <init>()
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub r0;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.wear.tiles.TileUpdateRequesterService");

        return;
    }

    public static androidx.wear.tiles.TileUpdateRequesterService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy $r2;
        boolean $z0;
        androidx.wear.tiles.TileUpdateRequesterService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.wear.tiles.TileUpdateRequesterService");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.wear.tiles.TileUpdateRequesterService;

        if $z0 == 0 goto label2;

        $r3 = (androidx.wear.tiles.TileUpdateRequesterService) r1;

        return $r3;

     label2:
        $r2 = new androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy;

        specialinvoke $r2.<androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileUpdateRequesterService$Stub r0;
        int i0, i1, $i2, $i3, i4;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        android.os.Parcelable$Creator $r4, $r6;
        java.lang.Object $r5, $r7;
        boolean $z0;
        android.content.ComponentName r8;
        androidx.wear.tiles.TileUpdateRequestData r9;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.wear.tiles.TileUpdateRequesterService";

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 1598968902: goto label1;
            default: goto label8;
        };

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        i4 = virtualinvoke r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub: int getApiVersion()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        return 1;

     label3:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label4;

        $r6 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r8 = (android.content.ComponentName) $r7;

        goto label5;

     label4:
        r8 = null;

     label5:
        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label6;

        $r4 = <androidx.wear.tiles.TileUpdateRequestData: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r9 = (androidx.wear.tiles.TileUpdateRequestData) $r5;

        goto label7;

     label6:
        r9 = null;

     label7:
        virtualinvoke r0.<androidx.wear.tiles.TileUpdateRequesterService$Stub: void requestUpdate(android.content.ComponentName,androidx.wear.tiles.TileUpdateRequestData)>(r8, r9);

        return 1;

     label8:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static boolean setDefaultImpl(androidx.wear.tiles.TileUpdateRequesterService)
    {
        androidx.wear.tiles.TileUpdateRequesterService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: androidx.wear.tiles.TileUpdateRequesterService;

        $r1 = <androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: androidx.wear.tiles.TileUpdateRequesterService sDefaultImpl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;

     label1:
        if r0 == null goto label2;

        <androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: androidx.wear.tiles.TileUpdateRequesterService sDefaultImpl> = r0;

        return 1;

     label2:
        return 0;
    }

    public static androidx.wear.tiles.TileUpdateRequesterService getDefaultImpl()
    {
        androidx.wear.tiles.TileUpdateRequesterService $r0;

        $r0 = <androidx.wear.tiles.TileUpdateRequesterService$Stub$Proxy: androidx.wear.tiles.TileUpdateRequesterService sDefaultImpl>;

        return $r0;
    }

androidx.wear.tiles.TileUpdateRequesterService$_Parcel
    public void <init>()
    {
        androidx.wear.tiles.TileUpdateRequesterService$_Parcel r0;

        r0 := @this: androidx.wear.tiles.TileUpdateRequesterService$_Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object readTypedObject(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        return $r2;

     label1:
        return null;
    }

    private static void writeTypedObject(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    static java.lang.Object access$000(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $r2 = staticinvoke <androidx.wear.tiles.TileUpdateRequesterService$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)>(r0, r1);

        return $r2;
    }

    static void access$100(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        staticinvoke <androidx.wear.tiles.TileUpdateRequesterService$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)>(r0, r1, i0);

        return;
    }

