kotlinx.coroutines.intrinsics.UndispatchedKt
    public static final void startCoroutineUndispatched(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object $r1, $r5, $r6;
        kotlin.coroutines.Continuation $r2, $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlin.Result$Companion $r7;
        java.lang.Throwable $r8, $r9;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "completion");

        $r3 = staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)>($r2);

     label1:
        $r4 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

     label2:
        $r5 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r4, null);

        $r6 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)>($r0, 2);

        $r0 = (kotlin.jvm.functions.Function2) $r6;

     label3:
        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, $r3);

     label4:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r4, $r5);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 == $r5 goto label8;

        $r7 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r1 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r1);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r1);

        return;

     label5:
        $r8 := @caughtexception;

        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r4, $r5);

     label6:
        throw $r8;

     label7:
        $r9 := @caughtexception;

        $r7 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r1 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r9);

        $r1 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r1);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r1);

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public static final java.lang.Object startUndispatchedOrReturnIgnoreTimeout(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;
        java.lang.Object $r1, $r3;
        kotlin.jvm.functions.Function2 $r2;
        boolean $z0, $z1;
        java.lang.Throwable $r4;
        kotlinx.coroutines.CompletedExceptionally $r5;
        kotlinx.coroutines.internal.Symbol $r6;
        kotlinx.coroutines.TimeoutCancellationException $r7;
        kotlinx.coroutines.Job $r8;
        kotlin.coroutines.Continuation $r9;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r10;

        $r0 := @parameter0: kotlinx.coroutines.internal.ScopeCoroutine;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "block");

        $z0 = 0;

        $r3 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)>($r2, 2);

        $r2 = (kotlin.jvm.functions.Function2) $r3;

     label01:
        $r1 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, $r0);

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

        $r5 = new kotlinx.coroutines.CompletedExceptionally;

        specialinvoke $r5.<kotlinx.coroutines.CompletedExceptionally: void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r4, 0, 2, null);

        $r1 = $r5;

     label04:
        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 != $r3 goto label05;

        $r1 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        return $r1;

     label05:
        $r3 = virtualinvoke $r0.<kotlinx.coroutines.internal.ScopeCoroutine: java.lang.Object makeCompletingOnce$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object)>($r1);

        $r6 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN>;

        if $r3 != $r6 goto label06;

        $r1 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        return $r1;

     label06:
        $z1 = $r3 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z1 == 0 goto label15;

        $r5 = (kotlinx.coroutines.CompletedExceptionally) $r3;

        $r4 = $r5.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        $z1 = $r4 instanceof kotlinx.coroutines.TimeoutCancellationException;

        if $z1 == 0 goto label08;

        $r7 = (kotlinx.coroutines.TimeoutCancellationException) $r4;

        $r8 = $r7.<kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.Job coroutine>;

        if $r8 == $r0 goto label07;

        goto label08;

     label07:
        goto label09;

     label08:
        $z0 = 1;

     label09:
        if $z0 == 0 goto label12;

        $r4 = $r5.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        $r9 = $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 == 0 goto label11;

        $z0 = $r9 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 != 0 goto label10;

        goto label11;

     label10:
        $r10 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r9;

        $r4 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r4, $r10);

        throw $r4;

     label11:
        throw $r4;

     label12:
        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label16;

        $r5 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        $r4 = $r5.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        $r9 = $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 == 0 goto label14;

        $z0 = $r9 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 != 0 goto label13;

        goto label14;

     label13:
        $r10 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r9;

        $r4 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r4, $r10);

        throw $r4;

     label14:
        throw $r4;

     label15:
        $r1 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)>($r3);

     label16:
        return $r1;

        catch java.lang.Throwable from label01 to label02 with label03;
    }

