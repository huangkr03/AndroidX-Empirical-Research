androidx.constraintlayout.core.motion.utils.StepCurve
<androidx.constraintlayout.core.motion.utils.StepCurve: boolean DEBUG>
<androidx.constraintlayout.core.motion.utils.StepCurve: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCurveFit>
    void <init>(java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.StepCurve r0;
        java.lang.String r1, $r3, $r4, $r7, r8, r9;
        double[] r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        double $d0, $d1;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r6;

        r0 := @this: androidx.constraintlayout.core.motion.utils.StepCurve;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.constraintlayout.core.motion.utils.Easing: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.StepCurve: java.lang.String str> = r1;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.StepCurve: java.lang.String str>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        r2 = newarray (double)[$i1];

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(40);

        i5 = $i2 + 1;

        i6 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(44, i5);

        i7 = 0;

     label1:
        if i6 == -1 goto label2;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i5, i6);

        r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $i3 = i7;

        i7 = i7 + 1;

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r8);

        r2[$i3] = $d1;

        $i4 = i6 + 1;

        i5 = $i4;

        i6 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(44, $i4);

        goto label1;

     label2:
        i8 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(41, i5);

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i5, i8);

        r9 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        i9 = i7 + 1;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r9);

        r2[i7] = $d0;

        $r5 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, i9);

        $r6 = staticinvoke <androidx.constraintlayout.core.motion.utils.StepCurve: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit genSpline(double[])>($r5);

        r0.<androidx.constraintlayout.core.motion.utils.StepCurve: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCurveFit> = $r6;

        return;
    }

    private static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit genSpline(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        java.lang.String[] r2;
        double[] r3;
        int $i0, $i1, i2;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r4;
        double $d0;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $i0 = lengthof r2;

        r3 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r3;

        if i2 >= $i1 goto label2;

        $r5 = r2[i2];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        r3[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <androidx.constraintlayout.core.motion.utils.StepCurve: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit genSpline(double[])>(r3);

        return $r4;
    }

    private static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit genSpline(double[])
    {
        double[] r0, r2, $r14, $r15, $r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        double[][] r1;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r3, r17;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r11, $r12;
        java.io.PrintStream $r5, $r10;
        java.lang.String $r8, $r13;

        r0 := @parameter0: double[];

        $i2 = lengthof r0;

        $i3 = $i2 * 3;

        i0 = $i3 - 2;

        $i4 = lengthof r0;

        i1 = $i4 - 1;

        $d2 = (double) i1;

        d0 = 1.0 / $d2;

        r1 = newmultiarray (double)[i0][1];

        r2 = newarray (double)[i0];

        i14 = 0;

     label1:
        $i5 = lengthof r0;

        if i14 >= $i5 goto label3;

        d1 = r0[i14];

        $i6 = i14 + i1;

        $r14 = r1[$i6];

        $r14[0] = d1;

        $i7 = i14 + i1;

        $d5 = (double) i14;

        $d6 = $d5 * d0;

        r2[$i7] = $d6;

        if i14 <= 0 goto label2;

        $i8 = i1 * 2;

        $i9 = i14 + $i8;

        $r15 = r1[$i9];

        $d7 = d1 + 1.0;

        $r15[0] = $d7;

        $i10 = i1 * 2;

        $i11 = i14 + $i10;

        $d8 = (double) i14;

        $d9 = $d8 * d0;

        $d10 = $d9 + 1.0;

        r2[$i11] = $d10;

        $i12 = i14 - 1;

        $r16 = r1[$i12];

        $d11 = d1 - 1.0;

        $d12 = $d11 - d0;

        $r16[0] = $d12;

        $i13 = i14 - 1;

        $d13 = (double) i14;

        $d14 = $d13 * d0;

        $d15 = $d14 + -1.0;

        $d16 = $d15 - d0;

        r2[$i13] = $d16;

     label2:
        i14 = i14 + 1;

        goto label1;

     label3:
        $r3 = new androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        specialinvoke $r3.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: void <init>(double[],double[][])>(r2, r1);

        r17 = $r3;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0 ");

        $d3 = virtualinvoke r17.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getPos(double,int)>(0.0, 0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 1 ");

        $d4 = virtualinvoke r17.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getPos(double,int)>(1.0, 0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

        return r17;
    }

    public double getDiff(double)
    {
        androidx.constraintlayout.core.motion.utils.StepCurve r0;
        double d0, $d1;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.StepCurve;

        d0 := @parameter0: double;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.StepCurve: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCurveFit>;

        $d1 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getSlope(double,int)>(d0, 0);

        return $d1;
    }

    public double get(double)
    {
        androidx.constraintlayout.core.motion.utils.StepCurve r0;
        double d0, $d1;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.StepCurve;

        d0 := @parameter0: double;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.StepCurve: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCurveFit>;

        $d1 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getPos(double,int)>(d0, 0);

        return $d1;
    }

