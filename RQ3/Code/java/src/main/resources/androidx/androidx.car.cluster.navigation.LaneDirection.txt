androidx.car.cluster.navigation.LaneDirection
<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.EnumWrapper mShape>
<androidx.car.cluster.navigation.LaneDirection: boolean mHighlighted>
    void <init>()
    {
        androidx.car.cluster.navigation.LaneDirection r0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.car.cluster.navigation.EnumWrapper, boolean)
    {
        androidx.car.cluster.navigation.LaneDirection r0;
        androidx.car.cluster.navigation.EnumWrapper r1;
        boolean z0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        r1 := @parameter0: androidx.car.cluster.navigation.EnumWrapper;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.EnumWrapper mShape> = r1;

        r0.<androidx.car.cluster.navigation.LaneDirection: boolean mHighlighted> = z0;

        return;
    }

    public androidx.car.cluster.navigation.LaneDirection$Shape getShape()
    {
        androidx.car.cluster.navigation.LaneDirection r0;
        androidx.car.cluster.navigation.LaneDirection$Shape $r1, $r4;
        androidx.car.cluster.navigation.EnumWrapper $r2;
        java.lang.Enum $r3;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        $r2 = r0.<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.EnumWrapper mShape>;

        $r1 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape UNKNOWN>;

        $r3 = staticinvoke <androidx.car.cluster.navigation.EnumWrapper: java.lang.Enum getValue(androidx.car.cluster.navigation.EnumWrapper,java.lang.Enum)>($r2, $r1);

        $r4 = (androidx.car.cluster.navigation.LaneDirection$Shape) $r3;

        return $r4;
    }

    public boolean isHighlighted()
    {
        androidx.car.cluster.navigation.LaneDirection r0;
        boolean $z0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        $z0 = r0.<androidx.car.cluster.navigation.LaneDirection: boolean mHighlighted>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.car.cluster.navigation.LaneDirection r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        androidx.car.cluster.navigation.LaneDirection$Shape $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.car.cluster.navigation.LaneDirection) r1;

        $r5 = virtualinvoke r0.<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.LaneDirection$Shape getShape()>();

        $r6 = virtualinvoke r2.<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.LaneDirection$Shape getShape()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<androidx.car.cluster.navigation.LaneDirection: boolean isHighlighted()>();

        $z2 = virtualinvoke r2.<androidx.car.cluster.navigation.LaneDirection: boolean isHighlighted()>();

        if $z1 != $z2 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public int hashCode()
    {
        androidx.car.cluster.navigation.LaneDirection r0;
        java.lang.Object[] $r1;
        androidx.car.cluster.navigation.LaneDirection$Shape $r2;
        boolean $z0;
        java.lang.Boolean $r3;
        int $i0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r0.<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.LaneDirection$Shape getShape()>();

        $r1[0] = $r2;

        $z0 = virtualinvoke r0.<androidx.car.cluster.navigation.LaneDirection: boolean isHighlighted()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[1] = $r3;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.car.cluster.navigation.LaneDirection r0;
        java.lang.Object[] $r1;
        androidx.car.cluster.navigation.EnumWrapper $r2;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.String $r4;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<androidx.car.cluster.navigation.LaneDirection: androidx.car.cluster.navigation.EnumWrapper mShape>;

        $r1[0] = $r2;

        $z0 = r0.<androidx.car.cluster.navigation.LaneDirection: boolean mHighlighted>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{shape: %s, highlighted: %s}", $r1);

        return $r4;
    }

androidx.car.cluster.navigation.LaneDirection$Builder
<androidx.car.cluster.navigation.LaneDirection$Builder: androidx.car.cluster.navigation.EnumWrapper mShape>
<androidx.car.cluster.navigation.LaneDirection$Builder: boolean mHighlighted>
    public void <init>()
    {
        androidx.car.cluster.navigation.LaneDirection$Builder r0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient androidx.car.cluster.navigation.LaneDirection$Builder setShape(androidx.car.cluster.navigation.LaneDirection$Shape, androidx.car.cluster.navigation.LaneDirection$Shape[])
    {
        androidx.car.cluster.navigation.LaneDirection$Builder r0;
        androidx.car.cluster.navigation.LaneDirection$Shape r1;
        androidx.car.cluster.navigation.LaneDirection$Shape[] r2;
        androidx.car.cluster.navigation.EnumWrapper $r3;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection$Builder;

        r1 := @parameter0: androidx.car.cluster.navigation.LaneDirection$Shape;

        r2 := @parameter1: androidx.car.cluster.navigation.LaneDirection$Shape[];

        $r3 = staticinvoke <androidx.car.cluster.navigation.EnumWrapper: androidx.car.cluster.navigation.EnumWrapper of(java.lang.Enum,java.lang.Enum[])>(r1, r2);

        r0.<androidx.car.cluster.navigation.LaneDirection$Builder: androidx.car.cluster.navigation.EnumWrapper mShape> = $r3;

        return r0;
    }

    public androidx.car.cluster.navigation.LaneDirection$Builder setHighlighted(boolean)
    {
        androidx.car.cluster.navigation.LaneDirection$Builder r0;
        boolean z0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.car.cluster.navigation.LaneDirection$Builder: boolean mHighlighted> = z0;

        return r0;
    }

    public androidx.car.cluster.navigation.LaneDirection build()
    {
        androidx.car.cluster.navigation.LaneDirection$Builder r0;
        androidx.car.cluster.navigation.LaneDirection $r1;
        boolean $z0;
        androidx.car.cluster.navigation.EnumWrapper $r2;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection$Builder;

        $r1 = new androidx.car.cluster.navigation.LaneDirection;

        $r2 = r0.<androidx.car.cluster.navigation.LaneDirection$Builder: androidx.car.cluster.navigation.EnumWrapper mShape>;

        $z0 = r0.<androidx.car.cluster.navigation.LaneDirection$Builder: boolean mHighlighted>;

        specialinvoke $r1.<androidx.car.cluster.navigation.LaneDirection: void <init>(androidx.car.cluster.navigation.EnumWrapper,boolean)>($r2, $z0);

        return $r1;
    }

androidx.car.cluster.navigation.LaneDirection$Shape
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape UNKNOWN>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape STRAIGHT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SLIGHT_LEFT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SLIGHT_RIGHT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape NORMAL_LEFT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape NORMAL_RIGHT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SHARP_LEFT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SHARP_RIGHT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape U_TURN_LEFT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape U_TURN_RIGHT>
<androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape[] $VALUES>
    public static androidx.car.cluster.navigation.LaneDirection$Shape[] values()
    {
        androidx.car.cluster.navigation.LaneDirection$Shape[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.car.cluster.navigation.LaneDirection$Shape[]) $r1;

        return $r2;
    }

    public static androidx.car.cluster.navigation.LaneDirection$Shape valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.car.cluster.navigation.LaneDirection$Shape $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/car/cluster/navigation/LaneDirection$Shape;", r0);

        $r2 = (androidx.car.cluster.navigation.LaneDirection$Shape) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.car.cluster.navigation.LaneDirection$Shape r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.car.cluster.navigation.LaneDirection$Shape;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.car.cluster.navigation.LaneDirection$Shape $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        androidx.car.cluster.navigation.LaneDirection$Shape[] $r10;

        $r0 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r0.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("UNKNOWN", 0);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape UNKNOWN> = $r0;

        $r1 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r1.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("STRAIGHT", 1);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape STRAIGHT> = $r1;

        $r2 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r2.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("SLIGHT_LEFT", 2);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SLIGHT_LEFT> = $r2;

        $r3 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r3.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("SLIGHT_RIGHT", 3);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SLIGHT_RIGHT> = $r3;

        $r4 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r4.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("NORMAL_LEFT", 4);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape NORMAL_LEFT> = $r4;

        $r5 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r5.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("NORMAL_RIGHT", 5);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape NORMAL_RIGHT> = $r5;

        $r6 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r6.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("SHARP_LEFT", 6);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SHARP_LEFT> = $r6;

        $r7 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r7.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("SHARP_RIGHT", 7);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SHARP_RIGHT> = $r7;

        $r8 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r8.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("U_TURN_LEFT", 8);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape U_TURN_LEFT> = $r8;

        $r9 = new androidx.car.cluster.navigation.LaneDirection$Shape;

        specialinvoke $r9.<androidx.car.cluster.navigation.LaneDirection$Shape: void <init>(java.lang.String,int)>("U_TURN_RIGHT", 9);

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape U_TURN_RIGHT> = $r9;

        $r10 = newarray (androidx.car.cluster.navigation.LaneDirection$Shape)[10];

        $r11 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape UNKNOWN>;

        $r10[0] = $r11;

        $r12 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape STRAIGHT>;

        $r10[1] = $r12;

        $r13 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SLIGHT_LEFT>;

        $r10[2] = $r13;

        $r14 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SLIGHT_RIGHT>;

        $r10[3] = $r14;

        $r15 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape NORMAL_LEFT>;

        $r10[4] = $r15;

        $r16 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape NORMAL_RIGHT>;

        $r10[5] = $r16;

        $r17 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SHARP_LEFT>;

        $r10[6] = $r17;

        $r18 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape SHARP_RIGHT>;

        $r10[7] = $r18;

        $r19 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape U_TURN_LEFT>;

        $r10[8] = $r19;

        $r20 = <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape U_TURN_RIGHT>;

        $r10[9] = $r20;

        <androidx.car.cluster.navigation.LaneDirection$Shape: androidx.car.cluster.navigation.LaneDirection$Shape[] $VALUES> = $r10;

        return;
    }

