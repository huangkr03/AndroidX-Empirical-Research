androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter
<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>
<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] inputByteBuffers>
<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] outputByteBuffers>
    private void <init>(android.media.MediaCodec)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec r1, $r2, $r4;
        int $i0;
        java.nio.ByteBuffer[] $r3, $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec> = r1;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r3 = virtualinvoke $r2.<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>();

        r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] inputByteBuffers> = $r3;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r5 = virtualinvoke $r4.<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>();

        r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] outputByteBuffers> = $r5;

     label1:
        return;
    }

    public boolean needsReconfiguration()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        return 0;
    }

    public int dequeueInputBufferIndex()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $i0 = virtualinvoke $r1.<android.media.MediaCodec: int dequeueInputBuffer(long)>(0L);

        return $i0;
    }

    public int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec$BufferInfo r1;
        int i0, $i1;
        android.media.MediaCodec $r2, $r3;
        java.nio.ByteBuffer[] $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec$BufferInfo;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        i0 = virtualinvoke $r2.<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)>(r1, 0L);

        if i0 != -3 goto label2;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 21 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r4 = virtualinvoke $r3.<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>();

        r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] outputByteBuffers> = $r4;

     label2:
        if i0 == -3 goto label1;

        return i0;
    }

    public android.media.MediaFormat getOutputFormat()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec $r1;
        android.media.MediaFormat $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>();

        return $r2;
    }

    public java.nio.ByteBuffer getInputBuffer(int)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0, $i1;
        java.nio.ByteBuffer[] $r1, $r3;
        java.lang.Object $r2;
        java.nio.ByteBuffer $r4, $r6;
        android.media.MediaCodec $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r6 = virtualinvoke $r5.<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>(i0);

        return $r6;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] inputByteBuffers>;

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r1);

        $r3 = (java.nio.ByteBuffer[]) $r2;

        $r4 = $r3[i0];

        return $r4;
    }

    public java.nio.ByteBuffer getOutputBuffer(int)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0, $i1;
        java.nio.ByteBuffer[] $r1, $r3;
        java.lang.Object $r2;
        java.nio.ByteBuffer $r4, $r6;
        android.media.MediaCodec $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r6 = virtualinvoke $r5.<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>(i0);

        return $r6;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] outputByteBuffers>;

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r1);

        $r3 = (java.nio.ByteBuffer[]) $r2;

        $r4 = $r3[i0];

        return $r4;
    }

    public void queueInputBuffer(int, int, int, long, int)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0, i1, i2, i4;
        long l3;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>(i0, i1, i2, l3, i4);

        return;
    }

    public void queueSecureInputBuffer(int, int, androidx.media3.decoder.CryptoInfo, long, int)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0, i1, i3;
        androidx.media3.decoder.CryptoInfo r1;
        long l2;
        android.media.MediaCodec $r2;
        android.media.MediaCodec$CryptoInfo $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.decoder.CryptoInfo;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r3 = virtualinvoke r1.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfo()>();

        virtualinvoke $r2.<android.media.MediaCodec: void queueSecureInputBuffer(int,int,android.media.MediaCodec$CryptoInfo,long,int)>(i0, i1, $r3, l2, i3);

        return;
    }

    public void releaseOutputBuffer(int, boolean)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0;
        boolean z0;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>(i0, z0);

        return;
    }

    public void releaseOutputBuffer(int, long)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0;
        long l1;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void releaseOutputBuffer(int,long)>(i0, l1);

        return;
    }

    public void flush()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void flush()>();

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] inputByteBuffers> = null;

        r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer[] outputByteBuffers> = null;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void release()>();

        return;
    }

    public void setOnFrameRenderedListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener, android.os.Handler)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener r1;
        android.os.Handler r2;
        android.media.MediaCodec $r3;
        android.media.MediaCodec$OnFrameRenderedListener $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener;

        r2 := @parameter1: android.os.Handler;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r4 = dynamicinvoke "onFrameRendered" <android.media.MediaCodec$OnFrameRenderedListener (androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.media.MediaCodec,long,long), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: void lambda$setOnFrameRenderedListener$0(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.media.MediaCodec,long,long)>, methodtype: void __METHODTYPE__(android.media.MediaCodec,long,long));

        virtualinvoke $r3.<android.media.MediaCodec: void setOnFrameRenderedListener(android.media.MediaCodec$OnFrameRenderedListener,android.os.Handler)>($r4, r2);

        return;
    }

    public void setOutputSurface(android.view.Surface)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.view.Surface r1;
        android.media.MediaCodec $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: android.view.Surface;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void setOutputSurface(android.view.Surface)>(r1);

        return;
    }

    public void setParameters(android.os.Bundle)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.os.Bundle r1;
        android.media.MediaCodec $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void setParameters(android.os.Bundle)>(r1);

        return;
    }

    public void setVideoScalingMode(int)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        int i0;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void setVideoScalingMode(int)>(i0);

        return;
    }

    public android.os.PersistableBundle getMetrics()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec $r1;
        android.os.PersistableBundle $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodec: android.os.PersistableBundle getMetrics()>();

        return $r2;
    }

    private void lambda$setOnFrameRenderedListener$0(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener, android.media.MediaCodec, long, long)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener r1;
        android.media.MediaCodec r2;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener;

        r2 := @parameter1: android.media.MediaCodec;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        interfaceinvoke r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener: void onFrameRendered(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,long,long)>(r0, l0, l1);

        return;
    }

    void <init>(android.media.MediaCodec, androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1)
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter r0;
        android.media.MediaCodec r1;
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1 r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: void <init>(android.media.MediaCodec)>(r1);

        return;
    }

androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1
androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory
    public void <init>()
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory r0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.media3.exoplayer.mediacodec.MediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration) throws java.io.IOException
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration r1;
        java.lang.Throwable r2, $r7;
        int $i0;
        android.media.MediaCrypto $r3;
        android.view.Surface $r4;
        android.media.MediaFormat $r5;
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter $r6;
        android.media.MediaCodec r8;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration;

        r8 = null;

     label1:
        r8 = virtualinvoke r0.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory: android.media.MediaCodec createCodec(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration)>(r1);

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>("configureCodec");

        $r5 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: android.media.MediaFormat mediaFormat>;

        $r4 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: android.view.Surface surface>;

        $r3 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: android.media.MediaCrypto crypto>;

        $i0 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: int flags>;

        virtualinvoke r8.<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>($r5, $r4, $r3, $i0);

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>("startCodec");

        virtualinvoke r8.<android.media.MediaCodec: void start()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        $r6 = new androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter;

        specialinvoke $r6.<androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter: void <init>(android.media.MediaCodec,androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1)>(r8, null);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        if r8 == null goto label4;

        virtualinvoke r8.<android.media.MediaCodec: void release()>();

     label4:
        throw r2;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected android.media.MediaCodec createCodec(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration) throws java.io.IOException
    {
        androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration r1;
        java.lang.String r2, $r10;
        android.media.MediaCodec r3;
        androidx.media3.exoplayer.mediacodec.MediaCodecInfo $r4, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration;

        $r4 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo>;

        r2 = $r6.<androidx.media3.exoplayer.mediacodec.MediaCodecInfo: java.lang.String name>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createCodec:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>($r10);

        r3 = staticinvoke <android.media.MediaCodec: android.media.MediaCodec createByCodecName(java.lang.String)>(r2);

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        return r3;
    }

