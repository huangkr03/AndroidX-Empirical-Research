androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol
<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner declaration>
<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext functionContext>
    public boolean getComposable()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext $r1;
        boolean $z0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()>();

        $z0 = virtualinvoke $r1.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean getComposable()>();

        return $z0;
    }

    public org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r1;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner declaration>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrSymbolOwner: org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()>();

        return $r2;
    }

    public void declareLocal(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration r1;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration;

        $r2 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()>();

        virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: void declareLocal(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>(r1);

        return;
    }

    public void recordCapture(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration r1;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration;

        $r2 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()>();

        virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: void recordCapture(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>(r1);

        return;
    }

    public void pushCollector(androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector r1;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "collector");

        $r2 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()>();

        virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: void pushCollector(androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector)>(r1);

        return;
    }

    public void popCollector(androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector r1;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "collector");

        $r2 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()>();

        virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: void popCollector(androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector)>(r1);

        return;
    }

    public final org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getDeclaration()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner declaration>;

        return $r1;
    }

    public androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext functionContext>;

        return $r1;
    }

    public void <init>(org.jetbrains.kotlin.ir.declarations.IrSymbolOwner, androidx.compose.compiler.plugins.kotlin.lower.FunctionContext)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol r0;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner r1;
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner;

        r2 := @parameter1: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "functionContext");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.DeclarationContext: void <init>()>();

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner declaration> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionLocalSymbol: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext functionContext> = r2;

        return;
    }

