androidx.media3.transformer.PassthroughSamplePipeline
<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>
<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.common.Format format>
<androidx.media3.transformer.PassthroughSamplePipeline: boolean hasPendingBuffer>
    public void <init>(androidx.media3.common.Format, long, long, androidx.media3.transformer.TransformationRequest, androidx.media3.transformer.MuxerWrapper, androidx.media3.transformer.FallbackListener)
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        androidx.media3.common.Format r1;
        long l0, l1;
        androidx.media3.transformer.TransformationRequest r2;
        androidx.media3.transformer.MuxerWrapper r3;
        androidx.media3.transformer.FallbackListener r4;
        boolean $z0;
        androidx.media3.decoder.DecoderInputBuffer $r5;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        r1 := @parameter0: androidx.media3.common.Format;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: androidx.media3.transformer.TransformationRequest;

        r3 := @parameter4: androidx.media3.transformer.MuxerWrapper;

        r4 := @parameter5: androidx.media3.transformer.FallbackListener;

        $z0 = r2.<androidx.media3.transformer.TransformationRequest: boolean flattenForSlowMotion>;

        specialinvoke r0.<androidx.media3.transformer.BaseSamplePipeline: void <init>(androidx.media3.common.Format,long,long,boolean,androidx.media3.transformer.MuxerWrapper)>(r1, l0, l1, $z0, r3);

        r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.common.Format format> = r1;

        $r5 = new androidx.media3.decoder.DecoderInputBuffer;

        specialinvoke $r5.<androidx.media3.decoder.DecoderInputBuffer: void <init>(int)>(2);

        r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer> = $r5;

        virtualinvoke r4.<androidx.media3.transformer.FallbackListener: void onTransformationRequestFinalized(androidx.media3.transformer.TransformationRequest)>(r2);

        return;
    }

    public void release()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        return;
    }

    protected androidx.media3.decoder.DecoderInputBuffer dequeueInputBufferInternal()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        boolean $z0;
        androidx.media3.decoder.DecoderInputBuffer $r1;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        $z0 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: boolean hasPendingBuffer>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>;

     label2:
        return $r1;
    }

    protected void queueInputBufferInternal()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        androidx.media3.decoder.DecoderInputBuffer $r1, $r3;
        java.nio.ByteBuffer $r2, $r4;
        boolean $z0;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        $r1 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>;

        $r2 = $r1.<androidx.media3.decoder.DecoderInputBuffer: java.nio.ByteBuffer data>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>;

        $r4 = $r3.<androidx.media3.decoder.DecoderInputBuffer: java.nio.ByteBuffer data>;

        $z0 = virtualinvoke $r4.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label1;

        r0.<androidx.media3.transformer.PassthroughSamplePipeline: boolean hasPendingBuffer> = 1;

     label1:
        return;
    }

    protected boolean processDataUpToMuxer()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        return 0;
    }

    protected androidx.media3.common.Format getMuxerInputFormat()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        androidx.media3.common.Format $r1;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        $r1 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.common.Format format>;

        return $r1;
    }

    protected androidx.media3.decoder.DecoderInputBuffer getMuxerInputBuffer()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        boolean $z0;
        androidx.media3.decoder.DecoderInputBuffer $r1;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        $z0 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: boolean hasPendingBuffer>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    protected void releaseMuxerInputBuffer()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        androidx.media3.decoder.DecoderInputBuffer $r1;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        $r1 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>;

        virtualinvoke $r1.<androidx.media3.decoder.DecoderInputBuffer: void clear()>();

        r0.<androidx.media3.transformer.PassthroughSamplePipeline: boolean hasPendingBuffer> = 0;

        return;
    }

    protected boolean isMuxerInputEnded()
    {
        androidx.media3.transformer.PassthroughSamplePipeline r0;
        androidx.media3.decoder.DecoderInputBuffer $r1;
        boolean $z0;

        r0 := @this: androidx.media3.transformer.PassthroughSamplePipeline;

        $r1 = r0.<androidx.media3.transformer.PassthroughSamplePipeline: androidx.media3.decoder.DecoderInputBuffer buffer>;

        $z0 = virtualinvoke $r1.<androidx.media3.decoder.DecoderInputBuffer: boolean isEndOfStream()>();

        return $z0;
    }

