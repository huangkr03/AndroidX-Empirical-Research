androidx.animation.ManualAnimationClock
<androidx.animation.ManualAnimationClock: long clockTimeMillis>
<androidx.animation.ManualAnimationClock: boolean dispatchOnSubscribe>
    public final long getClockTimeMillis()
    {
        androidx.animation.ManualAnimationClock r0;
        long $l0;

        r0 := @this: androidx.animation.ManualAnimationClock;

        $l0 = r0.<androidx.animation.ManualAnimationClock: long clockTimeMillis>;

        return $l0;
    }

    public final void setClockTimeMillis(long)
    {
        androidx.animation.ManualAnimationClock r0;
        long l0;

        r0 := @this: androidx.animation.ManualAnimationClock;

        l0 := @parameter0: long;

        r0.<androidx.animation.ManualAnimationClock: long clockTimeMillis> = l0;

        virtualinvoke r0.<androidx.animation.ManualAnimationClock: void dispatchTime$ui_animation_core_release(long)>(l0);

        return;
    }

    public final boolean getHasObservers()
    {
        androidx.animation.ManualAnimationClock r0;
        boolean $z0;

        r0 := @this: androidx.animation.ManualAnimationClock;

        $z0 = virtualinvoke r0.<androidx.animation.ManualAnimationClock: boolean hasObservers$ui_animation_core_release()>();

        return $z0;
    }

    public void subscribe(androidx.animation.AnimationClockObserver)
    {
        androidx.animation.ManualAnimationClock r0;
        androidx.animation.AnimationClockObserver r1;
        boolean $z0;
        long $l0;

        r0 := @this: androidx.animation.ManualAnimationClock;

        r1 := @parameter0: androidx.animation.AnimationClockObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "observer");

        specialinvoke r0.<androidx.animation.BaseAnimationClock: void subscribe(androidx.animation.AnimationClockObserver)>(r1);

        $z0 = r0.<androidx.animation.ManualAnimationClock: boolean dispatchOnSubscribe>;

        if $z0 == 0 goto label1;

        $l0 = r0.<androidx.animation.ManualAnimationClock: long clockTimeMillis>;

        interfaceinvoke r1.<androidx.animation.AnimationClockObserver: void onAnimationFrame(long)>($l0);

     label1:
        return;
    }

    public void <init>(long, boolean)
    {
        androidx.animation.ManualAnimationClock r0;
        long l0;
        boolean z0;

        r0 := @this: androidx.animation.ManualAnimationClock;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.animation.BaseAnimationClock: void <init>()>();

        r0.<androidx.animation.ManualAnimationClock: boolean dispatchOnSubscribe> = z0;

        r0.<androidx.animation.ManualAnimationClock: long clockTimeMillis> = l0;

        return;
    }

    public void <init>(long, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.ManualAnimationClock r0;
        long l0;
        int i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0;

        r0 := @this: androidx.animation.ManualAnimationClock;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        z0 = 1;

     label1:
        specialinvoke r0.<androidx.animation.ManualAnimationClock: void <init>(long,boolean)>(l0, z0);

        return;
    }

