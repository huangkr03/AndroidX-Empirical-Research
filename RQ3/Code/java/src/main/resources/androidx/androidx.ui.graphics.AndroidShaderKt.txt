androidx.ui.graphics.AndroidShaderKt
    public static final android.graphics.Shader ActualLinearGradientShader(androidx.ui.geometry.Offset, androidx.ui.geometry.Offset, java.util.List, java.util.List, androidx.ui.graphics.TileMode)
    {
        androidx.ui.geometry.Offset r0, r1;
        java.util.List r2, r3, r5;
        androidx.ui.graphics.TileMode r4;
        android.graphics.LinearGradient $r6;
        float $f0, $f1, $f2, $f3;
        int[] $r7;
        java.util.Collection $r8;
        android.graphics.Shader$TileMode $r9;
        android.graphics.Shader $r10, $r11;
        float[] $r12;

        r0 := @parameter0: androidx.ui.geometry.Offset;

        r1 := @parameter1: androidx.ui.geometry.Offset;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: androidx.ui.graphics.TileMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "from");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "to");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "colors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "tileMode");

        staticinvoke <androidx.ui.graphics.AndroidShaderKt: void validateColorStops(java.util.List,java.util.List)>(r2, r3);

        $r6 = new android.graphics.LinearGradient;

        $f0 = virtualinvoke r0.<androidx.ui.geometry.Offset: float getX()>();

        $f1 = virtualinvoke r0.<androidx.ui.geometry.Offset: float getY()>();

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getX()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        $r7 = staticinvoke <androidx.ui.graphics.AndroidShaderKt: int[] toIntArray(java.util.List)>(r2);

        r5 = r3;

        if r5 != null goto label1;

        $r12 = (float[]) null;

        goto label2;

     label1:
        $r8 = (java.util.Collection) r5;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: float[] toFloatArray(java.util.Collection)>($r8);

     label2:
        $r9 = staticinvoke <androidx.ui.graphics.AndroidTileModeKt: android.graphics.Shader$TileMode toNativeTileMode(androidx.ui.graphics.TileMode)>(r4);

        specialinvoke $r6.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, $f1, $f2, $f3, $r7, $r12, $r9);

        $r10 = (android.graphics.Shader) $r6;

        $r11 = staticinvoke <androidx.ui.graphics.Shader: android.graphics.Shader constructor-impl(android.graphics.Shader)>($r10);

        return $r11;
    }

    public static final android.graphics.Shader ActualRadialGradientShader(androidx.ui.geometry.Offset, float, java.util.List, java.util.List, androidx.ui.graphics.TileMode)
    {
        androidx.ui.geometry.Offset r0;
        float f0, $f1, $f2;
        java.util.List r1, r2, r4;
        androidx.ui.graphics.TileMode r3;
        android.graphics.RadialGradient $r5;
        int[] $r6;
        java.util.Collection $r7;
        android.graphics.Shader$TileMode $r8;
        android.graphics.Shader $r9, $r10;
        float[] $r11;

        r0 := @parameter0: androidx.ui.geometry.Offset;

        f0 := @parameter1: float;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: androidx.ui.graphics.TileMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "center");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "colors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "tileMode");

        staticinvoke <androidx.ui.graphics.AndroidShaderKt: void validateColorStops(java.util.List,java.util.List)>(r1, r2);

        $r5 = new android.graphics.RadialGradient;

        $f1 = virtualinvoke r0.<androidx.ui.geometry.Offset: float getX()>();

        $f2 = virtualinvoke r0.<androidx.ui.geometry.Offset: float getY()>();

        $r6 = staticinvoke <androidx.ui.graphics.AndroidShaderKt: int[] toIntArray(java.util.List)>(r1);

        r4 = r2;

        if r4 != null goto label1;

        $r11 = (float[]) null;

        goto label2;

     label1:
        $r7 = (java.util.Collection) r4;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: float[] toFloatArray(java.util.Collection)>($r7);

     label2:
        $r8 = staticinvoke <androidx.ui.graphics.AndroidTileModeKt: android.graphics.Shader$TileMode toNativeTileMode(androidx.ui.graphics.TileMode)>(r3);

        specialinvoke $r5.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f1, $f2, f0, $r6, $r11, $r8);

        $r9 = (android.graphics.Shader) $r5;

        $r10 = staticinvoke <androidx.ui.graphics.Shader: android.graphics.Shader constructor-impl(android.graphics.Shader)>($r9);

        return $r10;
    }

    public static final android.graphics.Shader ActualImageShader(androidx.ui.graphics.ImageAsset, androidx.ui.graphics.TileMode, androidx.ui.graphics.TileMode)
    {
        androidx.ui.graphics.ImageAsset r0;
        androidx.ui.graphics.TileMode r1, r2;
        android.graphics.BitmapShader $r3;
        android.graphics.Bitmap $r4;
        android.graphics.Shader$TileMode $r5, $r6;
        android.graphics.Shader $r7, $r8;

        r0 := @parameter0: androidx.ui.graphics.ImageAsset;

        r1 := @parameter1: androidx.ui.graphics.TileMode;

        r2 := @parameter2: androidx.ui.graphics.TileMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tileModeX");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tileModeY");

        $r3 = new android.graphics.BitmapShader;

        $r4 = staticinvoke <androidx.ui.graphics.AndroidImageAssetKt: android.graphics.Bitmap asAndroidBitmap(androidx.ui.graphics.ImageAsset)>(r0);

        $r5 = staticinvoke <androidx.ui.graphics.AndroidTileModeKt: android.graphics.Shader$TileMode toNativeTileMode(androidx.ui.graphics.TileMode)>(r1);

        $r6 = staticinvoke <androidx.ui.graphics.AndroidTileModeKt: android.graphics.Shader$TileMode toNativeTileMode(androidx.ui.graphics.TileMode)>(r2);

        specialinvoke $r3.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r4, $r5, $r6);

        $r7 = (android.graphics.Shader) $r3;

        $r8 = staticinvoke <androidx.ui.graphics.Shader: android.graphics.Shader constructor-impl(android.graphics.Shader)>($r7);

        return $r8;
    }

    private static final int[] toIntArray(java.util.List)
    {
        java.util.List $r0;
        int i0, i1, $i3, i4;
        int[] r1;
        java.lang.Object $r2;
        androidx.ui.graphics.Color $r3;
        long $l2;

        $r0 := @parameter0: java.util.List;

        i4 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        r1 = newarray (int)[i0];

     label1:
        if i4 >= i0 goto label2;

        i1 = i4;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (androidx.ui.graphics.Color) $r2;

        $l2 = virtualinvoke $r3.<androidx.ui.graphics.Color: long unbox-impl()>();

        $i3 = staticinvoke <androidx.ui.graphics.ColorKt: int toArgb-QEYXlZo(long)>($l2);

        r1[i1] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static final void validateColorStops(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        if r1 != null goto label1;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i2 >= 2 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors must have length of at least 2 if colorStops is omitted.");

        throw $r3;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors and colorStops arguments must have equal length.");

        throw $r2;

     label2:
        return;
    }

