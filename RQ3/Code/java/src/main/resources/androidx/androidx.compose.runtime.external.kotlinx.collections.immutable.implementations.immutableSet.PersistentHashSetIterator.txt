androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: boolean hasNext>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator[] r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator $r3, $r7;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        java.lang.Object[] $r8;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = newarray (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator)[1];

        $r3 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator;

        specialinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void <init>()>();

        r2[0] = $r3;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>(r2);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path> = $r4;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: boolean hasNext> = 1;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r6;

        $r8 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void reset$default(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator,java.lang.Object[],int,int,java.lang.Object)>($r7, $r8, 0, 2, null);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex> = 0;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: void ensureNextElementIsReady()>();

        return;
    }

    protected final java.util.List getPath()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        return $r1;
    }

    protected final int getPathLastIndex()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex>;

        return $i0;
    }

    protected final void setPathLastIndex(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex> = i0;

        return;
    }

    private static void getHasNext$annotations()
    {
        return;
    }

    private final int moveToNextNodeWithData(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r1;
        java.util.List $r2, $r5, $r8, $r11, $r12, $r17;
        java.lang.Object $r3, $r6, $r9, $r13;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator $r4, $r7, $r10, $r14, $r16;
        boolean $z0, $z1;
        java.lang.Object[] $r15;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r3;

        $z0 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: boolean hasNextElement()>();

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r6;

        $z1 = virtualinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: boolean hasNextNode()>();

        if $z1 == 0 goto label3;

        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r9;

        r1 = virtualinvoke $r10.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode currentNode()>();

        $i1 = i0 + 1;

        $r11 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $i2 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i1 != $i2 goto label2;

        $r17 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r16 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator;

        specialinvoke $r16.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void <init>()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

     label2:
        $r12 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $i3 = i0 + 1;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i3);

        $r14 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r13;

        $r15 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void reset$default(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator,java.lang.Object[],int,int,java.lang.Object)>($r14, $r15, 0, 2, null);

        $i4 = i0 + 1;

        $i5 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int moveToNextNodeWithData(int)>($i4);

        return $i5;

     label3:
        return -1;
    }

    private final void ensureNextElementIsReady()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        int $i0, $i1, i2, i3;
        java.util.List $r1, $r4, $r10, $r13, $r16;
        java.lang.Object $r2, $r5, $r11, $r14, $r17;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator $r3, $r7, $r12, $r15, $r18;
        boolean $z0, $z1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r8;
        java.lang.Object[] $r9;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r2;

        $z0 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: boolean hasNextElement()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex>;

     label2:
        if -1 >= i2 goto label6;

        i3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int moveToNextNodeWithData(int)>(i2);

        if i3 != -1 goto label3;

        $r13 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i2);

        $r15 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r14;

        $z1 = virtualinvoke $r15.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: boolean hasNextCell()>();

        if $z1 == 0 goto label3;

        $r16 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i2);

        $r18 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r17;

        virtualinvoke $r18.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void moveToNextCell()>();

        i3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int moveToNextNodeWithData(int)>(i2);

     label3:
        if i3 == -1 goto label4;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex> = i3;

        return;

     label4:
        if i2 <= 0 goto label5;

        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $i1 = i2 - 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i1);

        $r12 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r11;

        virtualinvoke $r12.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void moveToNextCell()>();

     label5:
        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r5;

        $r6 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion Companion>;

        $r8 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getEMPTY$runtime_release()>();

        $r9 = virtualinvoke $r8.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        virtualinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void reset(java.lang.Object[],int)>($r9, 0);

        i2 = i2 + -1;

        goto label2;

     label6:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: boolean hasNext> = 0;

        return;
    }

    public boolean hasNext()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $z0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: boolean hasNext>;

        return $z0;
    }

    public java.lang.Object next()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        java.lang.Object r1, $r3;
        boolean $z0;
        int $i0;
        java.util.List $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $z0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: boolean hasNext>;

        if $z0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r3;

        r1 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: java.lang.Object nextElement()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: void ensureNextElementIsReady()>();

        return r1;
    }

    protected final java.lang.Object currentElement()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        boolean $z0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2, $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator $r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: boolean hasNext()>();

        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z0);

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.util.List path>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: int pathLastIndex>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r2;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: java.lang.Object currentElement()>();

        return $r4;
    }

    public void remove()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

