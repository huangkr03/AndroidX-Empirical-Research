androidx.collection.SimpleArrayMap
<androidx.collection.SimpleArrayMap: java.lang.Object[] array>
<androidx.collection.SimpleArrayMap: int[] hashes>
<androidx.collection.SimpleArrayMap: int size>
    public void <init>()
    {
        androidx.collection.SimpleArrayMap $r0;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        return;
    }

    public void <init>(int)
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0;
        int[] $r1;
        java.lang.Object[] $r2;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i0 != 0 goto label1;

        $r1 = <androidx.collection.internal.ContainerHelpersKt: int[] EMPTY_INTS>;

        goto label2;

     label1:
        $r1 = newarray (int)[$i0];

     label2:
        $r0.<androidx.collection.SimpleArrayMap: int[] hashes> = $r1;

        if $i0 != 0 goto label3;

        $r2 = <androidx.collection.internal.ContainerHelpersKt: java.lang.Object[] EMPTY_OBJECTS>;

        goto label4;

     label3:
        $i0 = $i0 + $i0;

        $r2 = newarray (java.lang.Object)[$i0];

     label4:
        $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array> = $r2;

        return;
    }

    public void <init>(int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.collection.SimpleArrayMap $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;
        int $i0, $i1;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 0;

     label1:
        specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>(int)>($i0);

        return;
    }

    private final int indexOf(java.lang.Object, int)
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1, $r4;
        int[] $r2;
        java.lang.Object[] $r3;
        boolean $z0;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i2 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i2 != 0 goto label1;

        return -1;

     label1:
        $r2 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i3 = staticinvoke <androidx.collection.internal.ContainerHelpersKt: int binarySearch(int[],int,int)>($r2, $i2, $i0);

        if $i3 >= 0 goto label2;

        return $i3;

     label2:
        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i4 = $i3 + $i3;

        $r4 = $r3[$i4];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label3;

        return $i3;

     label3:
        $i4 = $i3 + 1;

     label4:
        if $i4 >= $i2 goto label6;

        $r2 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i1 = $r2[$i4];

        if $i1 != $i0 goto label6;

        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i1 = $i4 + $i4;

        $r4 = $r3[$i1];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label5;

        return $i4;

     label5:
        $i4 = $i4 + 1;

        goto label4;

     label6:
        $i2 = $i3 + -1;

     label7:
        if $i2 < 0 goto label9;

        $r2 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i3 = $r2[$i2];

        if $i3 != $i0 goto label9;

        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i3 = $i2 + $i2;

        $r4 = $r3[$i3];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label8;

        return $i2;

     label8:
        $i2 = $i2 + -1;

        goto label7;

     label9:
        $i0 = $i4 ^ -1;

        return $i0;
    }

    private final int indexOfNull()
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $i2 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i2 != 0 goto label1;

        return -1;

     label1:
        $r1 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i1 = staticinvoke <androidx.collection.internal.ContainerHelpersKt: int binarySearch(int[],int,int)>($r1, $i2, 0);

        if $i1 >= 0 goto label2;

        return $i1;

     label2:
        $r2 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i3 = $i1 + $i1;

        $r3 = $r2[$i3];

        if $r3 != null goto label3;

        return $i1;

     label3:
        $i3 = $i1 + 1;

     label4:
        if $i3 >= $i2 goto label6;

        $r1 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i0 = $r1[$i3];

        if $i0 != 0 goto label6;

        $r2 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i0 = $i3 + $i3;

        $r3 = $r2[$i0];

        if $r3 != null goto label5;

        return $i3;

     label5:
        $i3 = $i3 + 1;

        goto label4;

     label6:
        $i1 = $i1 + -1;

     label7:
        if $i1 < 0 goto label9;

        $r1 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i2 = $r1[$i1];

        if $i2 != 0 goto label9;

        $r2 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i2 = $i1 + $i1;

        $r3 = $r2[$i2];

        if $r3 != null goto label8;

        return $i1;

     label8:
        $i1 = $i1 + -1;

        goto label7;

     label9:
        $i3 = $i3 ^ -1;

        return $i3;
    }

    public boolean containsKey(java.lang.Object)
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.collection.SimpleArrayMap $r0, $r2;
        java.lang.Object $r1, $r3, $r4, $r6;
        boolean $z0;
        int $i0, $i1;
        java.util.Map $r5;
        java.lang.Throwable $r7, $r8;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label01;

        return 1;

     label01:
        $z0 = $r1 instanceof androidx.collection.SimpleArrayMap;

        if $z0 == 0 goto label17;

     label02:
        $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int size()>();

     label03:
        $r2 = (androidx.collection.SimpleArrayMap) $r1;

     label04:
        $i1 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: int size()>();

     label05:
        if $i0 == $i1 goto label06;

        return 0;

     label06:
        $r2 = (androidx.collection.SimpleArrayMap) $r1;

     label07:
        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

     label08:
        $i1 = 0;

     label09:
        if $i1 >= $i0 goto label16;

     label10:
        $r1 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>($i1);

        $r3 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>($i1);

        $r4 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r1);

     label11:
        if $r3 != null goto label14;

        if $r4 != null goto label37;

     label12:
        $z0 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)>($r1);

     label13:
        if $z0 != 0 goto label15;

        return 0;

     label14:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 != 0 goto label15;

        return 0;

     label15:
        $i1 = $i1 + 1;

        goto label09;

     label16:
        return 1;

     label17:
        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label37;

     label18:
        $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int size()>();

     label19:
        $r5 = (java.util.Map) $r1;

     label20:
        $i1 = interfaceinvoke $r5.<java.util.Map: int size()>();

     label21:
        if $i0 == $i1 goto label22;

        return 0;

     label22:
        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

     label23:
        $i1 = 0;

     label24:
        if $i1 >= $i0 goto label34;

     label25:
        $r3 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>($i1);

        $r4 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>($i1);

     label26:
        $r5 = (java.util.Map) $r1;

     label27:
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

     label28:
        if $r4 != null goto label32;

        if $r6 != null goto label37;

     label29:
        $r5 = (java.util.Map) $r1;

     label30:
        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label31:
        if $z0 != 0 goto label33;

        return 0;

     label32:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r6);

        if $z0 != 0 goto label33;

        return 0;

     label33:
        $i1 = $i1 + 1;

        goto label24;

     label34:
        return 1;

     label35:
        $r7 := @caughtexception;

        goto label37;

     label36:
        $r8 := @caughtexception;

     label37:
        return 0;

        catch java.lang.NullPointerException from label02 to label03 with label36;
        catch java.lang.NullPointerException from label04 to label05 with label36;
        catch java.lang.NullPointerException from label07 to label08 with label36;
        catch java.lang.NullPointerException from label10 to label11 with label36;
        catch java.lang.NullPointerException from label12 to label13 with label36;
        catch java.lang.NullPointerException from label18 to label19 with label36;
        catch java.lang.NullPointerException from label20 to label21 with label36;
        catch java.lang.NullPointerException from label22 to label23 with label36;
        catch java.lang.NullPointerException from label25 to label26 with label36;
        catch java.lang.NullPointerException from label27 to label28 with label36;
        catch java.lang.NullPointerException from label30 to label31 with label36;
        catch java.lang.ClassCastException from label02 to label05 with label35;
        catch java.lang.ClassCastException from label06 to label07 with label35;
        catch java.lang.ClassCastException from label10 to label11 with label35;
        catch java.lang.ClassCastException from label12 to label13 with label35;
        catch java.lang.ClassCastException from label18 to label21 with label35;
        catch java.lang.ClassCastException from label25 to label28 with label35;
        catch java.lang.ClassCastException from label29 to label31 with label35;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.collection.SimpleArrayMap $r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Object $r2;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r2 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>($r2);

        if $i0 < 0 goto label1;

        $r1 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i0 = $i0 + $i0;

        $i0 = $i0 + 1;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        return null;
    }

    public int hashCode()
    {
        androidx.collection.SimpleArrayMap $r0;
        int[] $r1;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r1 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $r2 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        $i3 = 1;

        $i4 = 0;

        $i5 = 0;

     label1:
        if $i4 >= $i0 goto label4;

        $r3 = $r2[$i3];

        $i1 = $r1[$i4];

        if $r3 == null goto label2;

        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i2 = 0;

     label3:
        $i1 = $i2 ^ $i1;

        $i5 = $i5 + $i1;

        $i4 = $i4 + 1;

        $i3 = $i3 + 2;

        goto label1;

     label4:
        return $i5;
    }

    public int indexOfKey(java.lang.Object)
    {
        androidx.collection.SimpleArrayMap $r0;
        java.lang.Object $r1;
        int $i0;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $i0 = specialinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfNull()>();

        return $i0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = specialinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>($r1, $i0);

        return $i0;
    }

    public boolean isEmpty()
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i0 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object keyAt(int)
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $i0 := @parameter0: int;

        $z0 = 0;

        if $i0 < 0 goto label1;

        $i1 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label1;

     label1:
        if $z0 == 0 goto label2;

        $r1 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i0 = $i0 + $i0;

        $r2 = $r1[$i0];

        return $r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected index to be within 0..size()-1, but was ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r5;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        androidx.collection.SimpleArrayMap $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r3;
        int[] $r4;
        java.util.ConcurrentModificationException $r5;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $i1 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $r2 == null goto label01;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label02;

     label01:
        $i2 = 0;

     label02:
        if $r2 == null goto label03;

        $i3 = specialinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>($r2, $i2);

        goto label04;

     label03:
        $i3 = specialinvoke $r0.<androidx.collection.SimpleArrayMap: int indexOfNull()>();

     label04:
        if $i3 < 0 goto label05;

        $i1 = $i3 + $i3;

        $i1 = $i1 + 1;

        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $r2 = $r3[$i1];

        $r3[$i1] = $r1;

        return $r2;

     label05:
        $i3 = $i3 ^ -1;

        $r4 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i0 = lengthof $r4;

        if $i1 < $i0 goto label10;

        $i0 = 8;

        if $i1 < 8 goto label06;

        $i0 = $i1 >> 1;

        $i0 = $i0 + $i1;

        goto label08;

     label06:
        if $i1 < 4 goto label07;

        goto label08;

     label07:
        $i0 = 4;

     label08:
        $r4 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r4, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "copyOf(this, newSize)");

        $r0.<androidx.collection.SimpleArrayMap: int[] hashes> = $r4;

        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i0 = $i0 + $i0;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "copyOf(this, newSize)");

        $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array> = $r3;

        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i1 != $i0 goto label09;

        goto label10;

     label09:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label10:
        if $i3 >= $i1 goto label11;

        $r4 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i0 = $i3 + 1;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto(int[],int[],int,int,int)>($r4, $r4, $i0, $i3, $i1);

        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i4 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        $i5 = $i0 + $i0;

        $i0 = $i3 + $i3;

        $i4 = $i4 + $i4;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>($r3, $r3, $i5, $i0, $i4);

     label11:
        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i1 != $i0 goto label12;

        $r4 = $r0.<androidx.collection.SimpleArrayMap: int[] hashes>;

        $i1 = lengthof $r4;

        if $i3 >= $i1 goto label12;

        $r4[$i3] = $i2;

        $r3 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i1 = $i3 + $i3;

        $r3[$i1] = $r2;

        $i1 = $i1 + 1;

        $r3[$i1] = $r1;

        $i1 = $i0 + 1;

        $r0.<androidx.collection.SimpleArrayMap: int size> = $i1;

        return null;

     label12:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;
    }

    public int size()
    {
        androidx.collection.SimpleArrayMap $r0;
        int i0;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        return i0;
    }

    public java.lang.String toString()
    {
        androidx.collection.SimpleArrayMap $r0;
        boolean $z0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $z0 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        $r1 = new java.lang.StringBuilder;

        $i0 = $i0 * 28;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label8;

        if $i1 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $r2 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>($i1);

        if $r2 == $r1 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r2 = virtualinvoke $r0.<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>($i1);

        if $r2 == $r1 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        goto label7;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label7:
        $i1 = $i1 + 1;

        goto label2;

     label8:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "StringBuilder(capacity).\u2026builderAction).toString()");

        return $r3;
    }

    public java.lang.Object valueAt(int)
    {
        androidx.collection.SimpleArrayMap $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        $r0 := @this: androidx.collection.SimpleArrayMap;

        $i1 := @parameter0: int;

        $z0 = 0;

        if $i1 < 0 goto label1;

        $i0 = $r0.<androidx.collection.SimpleArrayMap: int size>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label1;

     label1:
        if $z0 == 0 goto label2;

        $r1 = $r0.<androidx.collection.SimpleArrayMap: java.lang.Object[] array>;

        $i1 = $i1 + $i1;

        $i1 = $i1 + 1;

        $r2 = $r1[$i1];

        return $r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected index to be within 0..size()-1, but was ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r5;
    }

