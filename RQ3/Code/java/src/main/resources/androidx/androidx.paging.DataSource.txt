androidx.paging.DataSource
<androidx.paging.DataSource: androidx.paging.DataSource$Companion Companion>
<androidx.paging.DataSource: androidx.paging.DataSource$KeyType type>
<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>
<androidx.paging.DataSource: boolean isContiguous>
<androidx.paging.DataSource: boolean supportsPageDropping>
    public void <init>(androidx.paging.DataSource$KeyType)
    {
        androidx.paging.DataSource r0;
        androidx.paging.DataSource$KeyType r1;
        androidx.paging.InvalidateCallbackTracker $r2;
        androidx.paging.DataSource$invalidateCallbackTracker$1 $r3;
        androidx.paging.DataSource$invalidateCallbackTracker$2 $r4;
        kotlin.jvm.functions.Function1 $r5;
        kotlin.jvm.functions.Function0 $r6;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: androidx.paging.DataSource$KeyType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.DataSource: androidx.paging.DataSource$KeyType type> = r1;

        $r2 = new androidx.paging.InvalidateCallbackTracker;

        $r3 = <androidx.paging.DataSource$invalidateCallbackTracker$1: androidx.paging.DataSource$invalidateCallbackTracker$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        $r4 = new androidx.paging.DataSource$invalidateCallbackTracker$2;

        specialinvoke $r4.<androidx.paging.DataSource$invalidateCallbackTracker$2: void <init>(androidx.paging.DataSource)>(r0);

        $r6 = (kotlin.jvm.functions.Function0) $r4;

        specialinvoke $r2.<androidx.paging.InvalidateCallbackTracker: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r5, $r6);

        r0.<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker> = $r2;

        r0.<androidx.paging.DataSource: boolean isContiguous> = 1;

        r0.<androidx.paging.DataSource: boolean supportsPageDropping> = 1;

        return;
    }

    public final androidx.paging.DataSource$KeyType getType$paging_common()
    {
        androidx.paging.DataSource r0;
        androidx.paging.DataSource$KeyType $r1;

        r0 := @this: androidx.paging.DataSource;

        $r1 = r0.<androidx.paging.DataSource: androidx.paging.DataSource$KeyType type>;

        return $r1;
    }

    public final int getInvalidateCallbackCount$paging_common()
    {
        androidx.paging.DataSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;
        int $i0;

        r0 := @this: androidx.paging.DataSource;

        $r1 = r0.<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        $i0 = virtualinvoke $r1.<androidx.paging.InvalidateCallbackTracker: int callbackCount$paging_common()>();

        return $i0;
    }

    public boolean isInvalid()
    {
        androidx.paging.DataSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;
        boolean $z0;

        r0 := @this: androidx.paging.DataSource;

        $r1 = r0.<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        $z0 = virtualinvoke $r1.<androidx.paging.InvalidateCallbackTracker: boolean getInvalid$paging_common()>();

        return $z0;
    }

    public androidx.paging.DataSource mapByPage(androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource r0, $r3;
        androidx.arch.core.util.Function r1;
        androidx.paging.WrapperDataSource $r2;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.WrapperDataSource;

        specialinvoke $r2.<androidx.paging.WrapperDataSource: void <init>(androidx.paging.DataSource,androidx.arch.core.util.Function)>(r0, r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public androidx.paging.DataSource mapByPage(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource$mapByPage$1 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$mapByPage$1;

        specialinvoke $r2.<androidx.paging.DataSource$mapByPage$1: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.DataSource: androidx.paging.DataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public androidx.paging.DataSource map(androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource r0, $r4;
        androidx.arch.core.util.Function r1;
        androidx.paging.DataSource$map$1 $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$map$1;

        specialinvoke $r2.<androidx.paging.DataSource$map$1: void <init>(androidx.arch.core.util.Function)>(r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.DataSource: androidx.paging.DataSource mapByPage(kotlin.jvm.functions.Function1)>($r3);

        return $r4;
    }

    public androidx.paging.DataSource map(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource$map$2 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$map$2;

        specialinvoke $r2.<androidx.paging.DataSource$map$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.DataSource: androidx.paging.DataSource map(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public boolean isContiguous$paging_common()
    {
        androidx.paging.DataSource r0;
        boolean $z0;

        r0 := @this: androidx.paging.DataSource;

        $z0 = r0.<androidx.paging.DataSource: boolean isContiguous>;

        return $z0;
    }

    public boolean getSupportsPageDropping$paging_common()
    {
        androidx.paging.DataSource r0;
        boolean $z0;

        r0 := @this: androidx.paging.DataSource;

        $z0 = r0.<androidx.paging.DataSource: boolean supportsPageDropping>;

        return $z0;
    }

    public void addInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)
    {
        androidx.paging.DataSource r0;
        androidx.paging.DataSource$InvalidatedCallback r1;
        androidx.paging.InvalidateCallbackTracker $r2;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: androidx.paging.DataSource$InvalidatedCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onInvalidatedCallback");

        $r2 = r0.<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        virtualinvoke $r2.<androidx.paging.InvalidateCallbackTracker: void registerInvalidatedCallback$paging_common(java.lang.Object)>(r1);

        return;
    }

    public void removeInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)
    {
        androidx.paging.DataSource r0;
        androidx.paging.DataSource$InvalidatedCallback r1;
        androidx.paging.InvalidateCallbackTracker $r2;

        r0 := @this: androidx.paging.DataSource;

        r1 := @parameter0: androidx.paging.DataSource$InvalidatedCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onInvalidatedCallback");

        $r2 = r0.<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        virtualinvoke $r2.<androidx.paging.InvalidateCallbackTracker: void unregisterInvalidatedCallback$paging_common(java.lang.Object)>(r1);

        return;
    }

    public void invalidate()
    {
        androidx.paging.DataSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;

        r0 := @this: androidx.paging.DataSource;

        $r1 = r0.<androidx.paging.DataSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        virtualinvoke $r1.<androidx.paging.InvalidateCallbackTracker: void invalidate$paging_common()>();

        return;
    }

<androidx.paging.DataSource: java.lang.Object load$paging_common(androidx.paging.DataSource$Params,kotlin.coroutines.Continuation)>
<androidx.paging.DataSource: java.lang.Object getKeyInternal$paging_common(java.lang.Object)>
    static void <clinit>()
    {
        androidx.paging.DataSource$Companion $r0;

        $r0 = new androidx.paging.DataSource$Companion;

        specialinvoke $r0.<androidx.paging.DataSource$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.DataSource: androidx.paging.DataSource$Companion Companion> = $r0;

        return;
    }

androidx.paging.DataSource$BaseResult$Companion
    private void <init>()
    {
        androidx.paging.DataSource$BaseResult$Companion r0;

        r0 := @this: androidx.paging.DataSource$BaseResult$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.paging.DataSource$BaseResult empty$paging_common()
    {
        androidx.paging.DataSource$BaseResult$Companion r0;
        androidx.paging.DataSource$BaseResult $r1;
        java.util.List $r2;

        r0 := @this: androidx.paging.DataSource$BaseResult$Companion;

        $r1 = new androidx.paging.DataSource$BaseResult;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r1.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>($r2, null, null, 0, 0);

        return $r1;
    }

    public final androidx.paging.DataSource$BaseResult convert$paging_common(androidx.paging.DataSource$BaseResult, androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource$BaseResult$Companion r0;
        androidx.paging.DataSource$BaseResult r1, $r3;
        androidx.arch.core.util.Function r2;
        java.util.List $r4, $r6;
        androidx.paging.DataSource$Companion $r5;
        java.lang.Object $r7, $r8;
        int $i0, $i1;

        r0 := @this: androidx.paging.DataSource$BaseResult$Companion;

        r1 := @parameter0: androidx.paging.DataSource$BaseResult;

        r2 := @parameter1: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "result");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "function");

        $r3 = new androidx.paging.DataSource$BaseResult;

        $r5 = <androidx.paging.DataSource: androidx.paging.DataSource$Companion Companion>;

        $r4 = r1.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $r6 = virtualinvoke $r5.<androidx.paging.DataSource$Companion: java.util.List convert$paging_common(androidx.arch.core.util.Function,java.util.List)>(r2, $r4);

        $r7 = virtualinvoke r1.<androidx.paging.DataSource$BaseResult: java.lang.Object getPrevKey()>();

        $r8 = virtualinvoke r1.<androidx.paging.DataSource$BaseResult: java.lang.Object getNextKey()>();

        $i0 = virtualinvoke r1.<androidx.paging.DataSource$BaseResult: int getItemsBefore()>();

        $i1 = virtualinvoke r1.<androidx.paging.DataSource$BaseResult: int getItemsAfter()>();

        specialinvoke $r3.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>($r6, $r7, $r8, $i0, $i1);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.DataSource$BaseResult$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.DataSource$BaseResult$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.DataSource$BaseResult$Companion: void <init>()>();

        return;
    }

androidx.paging.DataSource$BaseResult
<androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion>
<androidx.paging.DataSource$BaseResult: java.util.List data>
<androidx.paging.DataSource$BaseResult: java.lang.Object prevKey>
<androidx.paging.DataSource$BaseResult: java.lang.Object nextKey>
<androidx.paging.DataSource$BaseResult: int itemsBefore>
<androidx.paging.DataSource$BaseResult: int itemsAfter>
    public void <init>(java.util.List, java.lang.Object, java.lang.Object, int, int)
    {
        androidx.paging.DataSource$BaseResult r0;
        java.util.List r1, $r4;
        java.lang.Object r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        java.lang.IllegalArgumentException $r5, $r6, $r7;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.DataSource$BaseResult: java.util.List data> = r1;

        r0.<androidx.paging.DataSource$BaseResult: java.lang.Object prevKey> = r2;

        r0.<androidx.paging.DataSource$BaseResult: java.lang.Object nextKey> = r3;

        r0.<androidx.paging.DataSource$BaseResult: int itemsBefore> = i0;

        r0.<androidx.paging.DataSource$BaseResult: int itemsAfter> = i1;

        $i2 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        if $i2 >= 0 goto label1;

        $i7 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        if $i7 == -2147483648 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Position must be non-negative");

        throw $r7;

     label1:
        $r4 = r0.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $i5 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        if $i5 > 0 goto label2;

        $i6 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        if $i6 <= 0 goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Initial result cannot be empty if items are present in data set.");

        throw $r6;

     label3:
        $i3 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        if $i3 >= 0 goto label4;

        $i4 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        if $i4 == -2147483648 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List size + position too large, last item in list beyond totalCount.");

        throw $r5;

     label4:
        return;
    }

    public void <init>(java.util.List, java.lang.Object, java.lang.Object, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.DataSource$BaseResult r0;
        java.util.List r1;
        java.lang.Object r2, r3;
        int i0, $i1, $i2, i3, i4;
        kotlin.jvm.internal.DefaultConstructorMarker r4;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i0 := @parameter5: int;

        r4 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        i3 = -2147483648;

     label1:
        $i2 = i0 & 16;

        if $i2 == 0 goto label2;

        i4 = -2147483648;

     label2:
        specialinvoke r0.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, r2, r3, i3, i4);

        return;
    }

    public final java.lang.Object getPrevKey()
    {
        androidx.paging.DataSource$BaseResult r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        $r1 = r0.<androidx.paging.DataSource$BaseResult: java.lang.Object prevKey>;

        return $r1;
    }

    public final java.lang.Object getNextKey()
    {
        androidx.paging.DataSource$BaseResult r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        $r1 = r0.<androidx.paging.DataSource$BaseResult: java.lang.Object nextKey>;

        return $r1;
    }

    public final int getItemsBefore()
    {
        androidx.paging.DataSource$BaseResult r0;
        int $i0;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        $i0 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        return $i0;
    }

    public final int getItemsAfter()
    {
        androidx.paging.DataSource$BaseResult r0;
        int $i0;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        $i0 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        return $i0;
    }

    public final void validateForInitialTiling$paging_common(int)
    {
        androidx.paging.DataSource$BaseResult r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.IllegalStateException $r1;
        java.lang.IllegalArgumentException $r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r8, $r22;
        java.util.List $r9, $r10, $r14;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        if $i2 == -2147483648 goto label1;

        $i3 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        if $i3 != -2147483648 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Placeholders requested, but totalCount not provided. Please call the three-parameter onResult method, or disable placeholders in the PagedList.Config");

        throw $r1;

     label2:
        $i4 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        if $i4 <= 0 goto label3;

        $r9 = r0.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $i8 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i9 = $i8 % i0;

        if $i9 == 0 goto label3;

        $i10 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        $r10 = r0.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $i11 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i13 = $i10 + $i11;

        $i12 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        i1 = $i13 + $i12;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PositionalDataSource requires initial load size to be a multiple of page size to support internal tiling. loadSize ");

        $r14 = r0.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $i14 = interfaceinvoke $r14.<java.util.List: int size()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", position ");

        $i15 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", totalCount ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pageSize ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r11;

     label3:
        $i5 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        $i6 = $i5 % i0;

        if $i6 == 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initial load must be pageSize aligned.Position = ");

        $i7 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pageSize = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label4:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.paging.DataSource$BaseResult r0, $r3, $r6, $r9, $r12, $r13;
        java.lang.Object r1, r2, $r7, $r8, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.paging.DataSource$BaseResult;

        r1 := @parameter0: java.lang.Object;

        r2 = r1;

        $z0 = r2 instanceof androidx.paging.DataSource$BaseResult;

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $r3 = (androidx.paging.DataSource$BaseResult) r1;

        $r4 = $r3.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label1;

        $r8 = r0.<androidx.paging.DataSource$BaseResult: java.lang.Object prevKey>;

        $r6 = (androidx.paging.DataSource$BaseResult) r1;

        $r7 = $r6.<androidx.paging.DataSource$BaseResult: java.lang.Object prevKey>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z2 == 0 goto label1;

        $r11 = r0.<androidx.paging.DataSource$BaseResult: java.lang.Object nextKey>;

        $r9 = (androidx.paging.DataSource$BaseResult) r1;

        $r10 = $r9.<androidx.paging.DataSource$BaseResult: java.lang.Object nextKey>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, $r10);

        if $z3 == 0 goto label1;

        $i1 = r0.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        $r12 = (androidx.paging.DataSource$BaseResult) r1;

        $i0 = $r12.<androidx.paging.DataSource$BaseResult: int itemsBefore>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        $r13 = (androidx.paging.DataSource$BaseResult) r1;

        $i2 = $r13.<androidx.paging.DataSource$BaseResult: int itemsAfter>;

        if $i3 != $i2 goto label1;

        $z4 = 1;

        goto label3;

     label1:
        $z4 = 0;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    static void <clinit>()
    {
        androidx.paging.DataSource$BaseResult$Companion $r0;

        $r0 = new androidx.paging.DataSource$BaseResult$Companion;

        specialinvoke $r0.<androidx.paging.DataSource$BaseResult$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion> = $r0;

        return;
    }

androidx.paging.DataSource$Companion
    private void <init>()
    {
        androidx.paging.DataSource$Companion r0;

        r0 := @this: androidx.paging.DataSource$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List convert$paging_common(androidx.arch.core.util.Function, java.util.List)
    {
        androidx.paging.DataSource$Companion r0;
        androidx.arch.core.util.Function r1;
        java.util.List r2, r3;
        java.lang.Object $r4;
        int $i0, $i1;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.paging.DataSource$Companion;

        r1 := @parameter0: androidx.arch.core.util.Function;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "source");

        $r4 = interfaceinvoke r1.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r2);

        r3 = (java.util.List) $r4;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Function ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed return size. This is not supported.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "dest");

        return r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.DataSource$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.DataSource$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.DataSource$Companion: void <init>()>();

        return;
    }

androidx.paging.DataSource$Factory$asPagingSourceFactory$1
<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: kotlinx.coroutines.CoroutineDispatcher $fetchDispatcher>
<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: androidx.paging.DataSource$Factory this$0>
    void <init>(kotlinx.coroutines.CoroutineDispatcher, androidx.paging.DataSource$Factory)
    {
        androidx.paging.DataSource$Factory$asPagingSourceFactory$1 r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;
        androidx.paging.DataSource$Factory $r2;

        r0 := @this: androidx.paging.DataSource$Factory$asPagingSourceFactory$1;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineDispatcher;

        $r2 := @parameter1: androidx.paging.DataSource$Factory;

        r0.<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: kotlinx.coroutines.CoroutineDispatcher $fetchDispatcher> = $r1;

        r0.<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: androidx.paging.DataSource$Factory this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.paging.PagingSource invoke()
    {
        androidx.paging.DataSource$Factory$asPagingSourceFactory$1 r0;
        androidx.paging.LegacyPagingSource $r1;
        androidx.paging.DataSource$Factory $r2;
        kotlinx.coroutines.CoroutineDispatcher $r3;
        androidx.paging.DataSource $r4;
        androidx.paging.PagingSource $r5;

        r0 := @this: androidx.paging.DataSource$Factory$asPagingSourceFactory$1;

        $r1 = new androidx.paging.LegacyPagingSource;

        $r3 = r0.<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: kotlinx.coroutines.CoroutineDispatcher $fetchDispatcher>;

        $r2 = r0.<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: androidx.paging.DataSource$Factory this$0>;

        $r4 = virtualinvoke $r2.<androidx.paging.DataSource$Factory: androidx.paging.DataSource create()>();

        specialinvoke $r1.<androidx.paging.LegacyPagingSource: void <init>(kotlinx.coroutines.CoroutineDispatcher,androidx.paging.DataSource)>($r3, $r4);

        $r5 = (androidx.paging.PagingSource) $r1;

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.DataSource$Factory$asPagingSourceFactory$1 r0;
        androidx.paging.PagingSource $r1;

        r0 := @this: androidx.paging.DataSource$Factory$asPagingSourceFactory$1;

        $r1 = virtualinvoke r0.<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: androidx.paging.PagingSource invoke()>();

        return $r1;
    }

androidx.paging.DataSource$Factory$map$1
<androidx.paging.DataSource$Factory$map$1: androidx.arch.core.util.Function $function>
    void <init>(androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource$Factory$map$1 r0;
        androidx.arch.core.util.Function $r1;

        r0 := @this: androidx.paging.DataSource$Factory$map$1;

        $r1 := @parameter0: androidx.arch.core.util.Function;

        r0.<androidx.paging.DataSource$Factory$map$1: androidx.arch.core.util.Function $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.DataSource$Factory$map$1 r0;
        java.util.List r1, $r11;
        java.lang.Iterable $r2;
        androidx.arch.core.util.Function r3;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, r7, r9;
        java.util.ArrayList $r10;
        int $i0;
        boolean $z3;

        r0 := @this: androidx.paging.DataSource$Factory$map$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.DataSource$Factory$map$1: androidx.arch.core.util.Function $function>;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r10;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = r6;

        r8 = r4;

        r9 = interfaceinvoke r3.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r7);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $r11 = (java.util.List) r4;

        return $r11;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.DataSource$Factory$map$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.DataSource$Factory$map$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.DataSource$Factory$map$1: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.DataSource$Factory$map$2
<androidx.paging.DataSource$Factory$map$2: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource$Factory$map$2 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.DataSource$Factory$map$2;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.DataSource$Factory$map$2: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.DataSource$Factory$map$2 r0;
        java.util.List r1, $r8;
        java.lang.Iterable $r2;
        kotlin.jvm.functions.Function1 r3;
        java.util.Collection r4;
        java.util.Iterator r5;
        java.lang.Object r6, $r9;
        java.util.ArrayList $r7;
        int $i0;
        boolean $z2;

        r0 := @this: androidx.paging.DataSource$Factory$map$2;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.DataSource$Factory$map$2: kotlin.jvm.functions.Function1 $function>;

        $r7 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r7;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r9 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r8 = (java.util.List) r4;

        return $r8;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.DataSource$Factory$map$2 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.DataSource$Factory$map$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.DataSource$Factory$map$2: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.DataSource$Factory$mapByPage$1
<androidx.paging.DataSource$Factory$mapByPage$1: androidx.paging.DataSource$Factory this$0>
<androidx.paging.DataSource$Factory$mapByPage$1: androidx.arch.core.util.Function $function>
    void <init>(androidx.paging.DataSource$Factory, androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource$Factory$mapByPage$1 r0;
        androidx.paging.DataSource$Factory $r1;
        androidx.arch.core.util.Function $r2;

        r0 := @this: androidx.paging.DataSource$Factory$mapByPage$1;

        $r1 := @parameter0: androidx.paging.DataSource$Factory;

        $r2 := @parameter1: androidx.arch.core.util.Function;

        r0.<androidx.paging.DataSource$Factory$mapByPage$1: androidx.paging.DataSource$Factory this$0> = $r1;

        r0.<androidx.paging.DataSource$Factory$mapByPage$1: androidx.arch.core.util.Function $function> = $r2;

        specialinvoke r0.<androidx.paging.DataSource$Factory: void <init>()>();

        return;
    }

    public androidx.paging.DataSource create()
    {
        androidx.paging.DataSource$Factory$mapByPage$1 r0;
        androidx.paging.DataSource$Factory $r1;
        androidx.paging.DataSource $r2, $r4;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.DataSource$Factory$mapByPage$1;

        $r1 = r0.<androidx.paging.DataSource$Factory$mapByPage$1: androidx.paging.DataSource$Factory this$0>;

        $r2 = virtualinvoke $r1.<androidx.paging.DataSource$Factory: androidx.paging.DataSource create()>();

        $r3 = r0.<androidx.paging.DataSource$Factory$mapByPage$1: androidx.arch.core.util.Function $function>;

        $r4 = virtualinvoke $r2.<androidx.paging.DataSource: androidx.paging.DataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

androidx.paging.DataSource$Factory$mapByPage$2
<androidx.paging.DataSource$Factory$mapByPage$2: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource$Factory$mapByPage$2 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.DataSource$Factory$mapByPage$2;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.DataSource$Factory$mapByPage$2: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.DataSource$Factory$mapByPage$2 r0;
        java.util.List r1, $r4;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.paging.DataSource$Factory$mapByPage$2;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.paging.DataSource$Factory$mapByPage$2: kotlin.jvm.functions.Function1 $function>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.DataSource$Factory$mapByPage$2 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.DataSource$Factory$mapByPage$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.DataSource$Factory$mapByPage$2: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.DataSource$Factory
    public void <init>()
    {
        androidx.paging.DataSource$Factory r0;

        r0 := @this: androidx.paging.DataSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.paging.DataSource$Factory: androidx.paging.DataSource create()>
    public androidx.paging.DataSource$Factory map(androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource$Factory r0, $r4;
        androidx.arch.core.util.Function r1, $r3;
        androidx.paging.DataSource$Factory$map$1 $r2;

        r0 := @this: androidx.paging.DataSource$Factory;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$Factory$map$1;

        specialinvoke $r2.<androidx.paging.DataSource$Factory$map$1: void <init>(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.DataSource$Factory: androidx.paging.DataSource$Factory mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public androidx.paging.DataSource$Factory map(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource$Factory r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource$Factory$map$2 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.DataSource$Factory;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$Factory$map$2;

        specialinvoke $r2.<androidx.paging.DataSource$Factory$map$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.DataSource$Factory: androidx.paging.DataSource$Factory mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public androidx.paging.DataSource$Factory mapByPage(androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource$Factory r0, $r3;
        androidx.arch.core.util.Function r1;
        androidx.paging.DataSource$Factory$mapByPage$1 $r2;

        r0 := @this: androidx.paging.DataSource$Factory;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$Factory$mapByPage$1;

        specialinvoke $r2.<androidx.paging.DataSource$Factory$mapByPage$1: void <init>(androidx.paging.DataSource$Factory,androidx.arch.core.util.Function)>(r0, r1);

        $r3 = (androidx.paging.DataSource$Factory) $r2;

        return $r3;
    }

    public androidx.paging.DataSource$Factory mapByPage(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource$Factory r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource$Factory$mapByPage$2 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.DataSource$Factory;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.DataSource$Factory$mapByPage$2;

        specialinvoke $r2.<androidx.paging.DataSource$Factory$mapByPage$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.DataSource$Factory: androidx.paging.DataSource$Factory mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public final kotlin.jvm.functions.Function0 asPagingSourceFactory(kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.paging.DataSource$Factory r0;
        kotlinx.coroutines.CoroutineDispatcher r1;
        androidx.paging.SuspendingPagingSourceFactory $r2;
        androidx.paging.DataSource$Factory$asPagingSourceFactory$1 $r3;
        kotlin.jvm.functions.Function0 $r4, $r5;

        r0 := @this: androidx.paging.DataSource$Factory;

        r1 := @parameter0: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fetchDispatcher");

        $r2 = new androidx.paging.SuspendingPagingSourceFactory;

        $r3 = new androidx.paging.DataSource$Factory$asPagingSourceFactory$1;

        specialinvoke $r3.<androidx.paging.DataSource$Factory$asPagingSourceFactory$1: void <init>(kotlinx.coroutines.CoroutineDispatcher,androidx.paging.DataSource$Factory)>(r1, r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        specialinvoke $r2.<androidx.paging.SuspendingPagingSourceFactory: void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0)>(r1, $r4);

        $r5 = (kotlin.jvm.functions.Function0) $r2;

        return $r5;
    }

    public static kotlin.jvm.functions.Function0 asPagingSourceFactory$default(androidx.paging.DataSource$Factory, kotlinx.coroutines.CoroutineDispatcher, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        int i0, $i1;
        java.lang.Object r1;
        kotlin.jvm.functions.Function0 $r2;
        java.lang.UnsupportedOperationException $r3;
        kotlinx.coroutines.CoroutineDispatcher r4;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        r4 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        if r1 == null goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: asPagingSourceFactory");

        throw $r3;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

     label2:
        $r2 = virtualinvoke r0.<androidx.paging.DataSource$Factory: kotlin.jvm.functions.Function0 asPagingSourceFactory(kotlinx.coroutines.CoroutineDispatcher)>(r4);

        return $r2;
    }

    public final kotlin.jvm.functions.Function0 asPagingSourceFactory()
    {
        androidx.paging.DataSource$Factory r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.paging.DataSource$Factory;

        $r1 = staticinvoke <androidx.paging.DataSource$Factory: kotlin.jvm.functions.Function0 asPagingSourceFactory$default(androidx.paging.DataSource$Factory,kotlinx.coroutines.CoroutineDispatcher,int,java.lang.Object)>(r0, null, 1, null);

        return $r1;
    }

androidx.paging.DataSource$invalidateCallbackTracker$1
<androidx.paging.DataSource$invalidateCallbackTracker$1: androidx.paging.DataSource$invalidateCallbackTracker$1 INSTANCE>
    void <init>()
    {
        androidx.paging.DataSource$invalidateCallbackTracker$1 r0;

        r0 := @this: androidx.paging.DataSource$invalidateCallbackTracker$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.DataSource$InvalidatedCallback)
    {
        androidx.paging.DataSource$invalidateCallbackTracker$1 r0;
        androidx.paging.DataSource$InvalidatedCallback r1;

        r0 := @this: androidx.paging.DataSource$invalidateCallbackTracker$1;

        r1 := @parameter0: androidx.paging.DataSource$InvalidatedCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        interfaceinvoke r1.<androidx.paging.DataSource$InvalidatedCallback: void onInvalidated()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.DataSource$invalidateCallbackTracker$1 r0;
        java.lang.Object r1;
        androidx.paging.DataSource$InvalidatedCallback $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.DataSource$invalidateCallbackTracker$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.DataSource$InvalidatedCallback) r1;

        virtualinvoke r0.<androidx.paging.DataSource$invalidateCallbackTracker$1: void invoke(androidx.paging.DataSource$InvalidatedCallback)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.paging.DataSource$invalidateCallbackTracker$1 $r0;

        $r0 = new androidx.paging.DataSource$invalidateCallbackTracker$1;

        specialinvoke $r0.<androidx.paging.DataSource$invalidateCallbackTracker$1: void <init>()>();

        <androidx.paging.DataSource$invalidateCallbackTracker$1: androidx.paging.DataSource$invalidateCallbackTracker$1 INSTANCE> = $r0;

        return;
    }

androidx.paging.DataSource$invalidateCallbackTracker$2
<androidx.paging.DataSource$invalidateCallbackTracker$2: androidx.paging.DataSource this$0>
    void <init>(androidx.paging.DataSource)
    {
        androidx.paging.DataSource$invalidateCallbackTracker$2 r0;
        androidx.paging.DataSource $r1;

        r0 := @this: androidx.paging.DataSource$invalidateCallbackTracker$2;

        $r1 := @parameter0: androidx.paging.DataSource;

        r0.<androidx.paging.DataSource$invalidateCallbackTracker$2: androidx.paging.DataSource this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Boolean invoke()
    {
        androidx.paging.DataSource$invalidateCallbackTracker$2 r0;
        androidx.paging.DataSource $r1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @this: androidx.paging.DataSource$invalidateCallbackTracker$2;

        $r1 = r0.<androidx.paging.DataSource$invalidateCallbackTracker$2: androidx.paging.DataSource this$0>;

        $z0 = virtualinvoke $r1.<androidx.paging.DataSource: boolean isInvalid()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.DataSource$invalidateCallbackTracker$2 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.paging.DataSource$invalidateCallbackTracker$2;

        $r1 = virtualinvoke r0.<androidx.paging.DataSource$invalidateCallbackTracker$2: java.lang.Boolean invoke()>();

        return $r1;
    }

androidx.paging.DataSource$InvalidatedCallback
<androidx.paging.DataSource$InvalidatedCallback: void onInvalidated()>
androidx.paging.DataSource$KeyType
<androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType POSITIONAL>
<androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType PAGE_KEYED>
<androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType ITEM_KEYED>
<androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.paging.DataSource$KeyType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.paging.DataSource$KeyType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.paging.DataSource$KeyType[] values()
    {
        androidx.paging.DataSource$KeyType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.paging.DataSource$KeyType[]) $r1;

        return $r2;
    }

    public static androidx.paging.DataSource$KeyType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.paging.DataSource$KeyType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/paging/DataSource$KeyType;", r0);

        $r2 = (androidx.paging.DataSource$KeyType) $r1;

        return $r2;
    }

    private static final androidx.paging.DataSource$KeyType[] $values()
    {
        androidx.paging.DataSource$KeyType[] r0;
        androidx.paging.DataSource$KeyType $r1, $r2, $r3;

        r0 = newarray (androidx.paging.DataSource$KeyType)[3];

        $r1 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType POSITIONAL>;

        r0[0] = $r1;

        $r2 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType PAGE_KEYED>;

        r0[1] = $r2;

        $r3 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType ITEM_KEYED>;

        r0[2] = $r3;

        return r0;
    }

    static void <clinit>()
    {
        androidx.paging.DataSource$KeyType $r0, $r1, $r2;
        androidx.paging.DataSource$KeyType[] $r3;

        $r0 = new androidx.paging.DataSource$KeyType;

        specialinvoke $r0.<androidx.paging.DataSource$KeyType: void <init>(java.lang.String,int)>("POSITIONAL", 0);

        <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType POSITIONAL> = $r0;

        $r1 = new androidx.paging.DataSource$KeyType;

        specialinvoke $r1.<androidx.paging.DataSource$KeyType: void <init>(java.lang.String,int)>("PAGE_KEYED", 1);

        <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType PAGE_KEYED> = $r1;

        $r2 = new androidx.paging.DataSource$KeyType;

        specialinvoke $r2.<androidx.paging.DataSource$KeyType: void <init>(java.lang.String,int)>("ITEM_KEYED", 2);

        <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType ITEM_KEYED> = $r2;

        $r3 = staticinvoke <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType[] $values()>();

        <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType[] $VALUES> = $r3;

        return;
    }

androidx.paging.DataSource$map$1
<androidx.paging.DataSource$map$1: androidx.arch.core.util.Function $function>
    void <init>(androidx.arch.core.util.Function)
    {
        androidx.paging.DataSource$map$1 r0;
        androidx.arch.core.util.Function $r1;

        r0 := @this: androidx.paging.DataSource$map$1;

        $r1 := @parameter0: androidx.arch.core.util.Function;

        r0.<androidx.paging.DataSource$map$1: androidx.arch.core.util.Function $function> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.util.List invoke(java.util.List)
    {
        androidx.paging.DataSource$map$1 r0;
        java.util.List r1, $r11;
        java.lang.Iterable $r2;
        androidx.arch.core.util.Function r3;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, r7, r9;
        java.util.ArrayList $r10;
        int $i0;
        boolean $z3;

        r0 := @this: androidx.paging.DataSource$map$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.DataSource$map$1: androidx.arch.core.util.Function $function>;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r10;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = r6;

        r8 = r4;

        r9 = interfaceinvoke r3.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r7);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $r11 = (java.util.List) r4;

        return $r11;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.DataSource$map$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.DataSource$map$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.DataSource$map$1: java.util.List invoke(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.DataSource$map$2
<androidx.paging.DataSource$map$2: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource$map$2 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.DataSource$map$2;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.DataSource$map$2: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.DataSource$map$2 r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.paging.DataSource$map$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.paging.DataSource$map$2: kotlin.jvm.functions.Function1 $function>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return $r3;
    }

androidx.paging.DataSource$mapByPage$1
<androidx.paging.DataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.DataSource$mapByPage$1 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.DataSource$mapByPage$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.DataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.DataSource$mapByPage$1 r0;
        java.util.List r1, $r4;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.paging.DataSource$mapByPage$1;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.paging.DataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.DataSource$mapByPage$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.DataSource$mapByPage$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.DataSource$mapByPage$1: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.DataSource$Params
<androidx.paging.DataSource$Params: androidx.paging.LoadType type>
<androidx.paging.DataSource$Params: java.lang.Object key>
<androidx.paging.DataSource$Params: int initialLoadSize>
<androidx.paging.DataSource$Params: boolean placeholdersEnabled>
<androidx.paging.DataSource$Params: int pageSize>
    public void <init>(androidx.paging.LoadType, java.lang.Object, int, boolean, int)
    {
        androidx.paging.DataSource$Params r0;
        androidx.paging.LoadType r1, $r3, $r4;
        java.lang.Object r2, $r5;
        int i0, i1;
        boolean z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.paging.DataSource$Params;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.DataSource$Params: androidx.paging.LoadType type> = r1;

        r0.<androidx.paging.DataSource$Params: java.lang.Object key> = r2;

        r0.<androidx.paging.DataSource$Params: int initialLoadSize> = i0;

        r0.<androidx.paging.DataSource$Params: boolean placeholdersEnabled> = z0;

        r0.<androidx.paging.DataSource$Params: int pageSize> = i1;

        $r4 = r0.<androidx.paging.DataSource$Params: androidx.paging.LoadType type>;

        $r3 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if $r4 == $r3 goto label1;

        $r5 = r0.<androidx.paging.DataSource$Params: java.lang.Object key>;

        if $r5 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key must be non-null for prepend/append");

        throw $r6;

     label1:
        return;
    }

    public final androidx.paging.LoadType getType$paging_common()
    {
        androidx.paging.DataSource$Params r0;
        androidx.paging.LoadType $r1;

        r0 := @this: androidx.paging.DataSource$Params;

        $r1 = r0.<androidx.paging.DataSource$Params: androidx.paging.LoadType type>;

        return $r1;
    }

    public final java.lang.Object getKey()
    {
        androidx.paging.DataSource$Params r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.DataSource$Params;

        $r1 = r0.<androidx.paging.DataSource$Params: java.lang.Object key>;

        return $r1;
    }

    public final int getInitialLoadSize()
    {
        androidx.paging.DataSource$Params r0;
        int $i0;

        r0 := @this: androidx.paging.DataSource$Params;

        $i0 = r0.<androidx.paging.DataSource$Params: int initialLoadSize>;

        return $i0;
    }

    public final boolean getPlaceholdersEnabled()
    {
        androidx.paging.DataSource$Params r0;
        boolean $z0;

        r0 := @this: androidx.paging.DataSource$Params;

        $z0 = r0.<androidx.paging.DataSource$Params: boolean placeholdersEnabled>;

        return $z0;
    }

    public final int getPageSize()
    {
        androidx.paging.DataSource$Params r0;
        int $i0;

        r0 := @this: androidx.paging.DataSource$Params;

        $i0 = r0.<androidx.paging.DataSource$Params: int pageSize>;

        return $i0;
    }

