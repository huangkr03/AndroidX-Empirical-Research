kotlin.collections.CollectionsKt__IterablesKt
    public void <init>()
    {
        kotlin.collections.CollectionsKt__IterablesKt $r0;

        $r0 := @this: kotlin.collections.CollectionsKt__IterablesKt;

        specialinvoke $r0.<kotlin.collections.CollectionsKt__CollectionsKt: void <init>()>();

        return;
    }

    private static final java.lang.Iterable Iterable(kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 $r0;
        kotlin.collections.CollectionsKt__IterablesKt$Iterable$1 $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "iterator");

        $r1 = new kotlin.collections.CollectionsKt__IterablesKt$Iterable$1;

        specialinvoke $r1.<kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: void <init>(kotlin.jvm.functions.Function0)>($r0);

        return $r1;
    }

    public static final int collectionSizeOrDefault(java.lang.Iterable, int)
    {
        int $i0;
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;

        $r0 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

     label1:
        return $i0;
    }

    public static final java.lang.Integer collectionSizeOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        int $i0;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;

     label1:
        return null;
    }

    public static final java.util.List flatten(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.ArrayList $r1, r4;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.Collection r5;
        java.util.List r6;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r4 = new java.util.ArrayList;

        $r1 = r4;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (java.lang.Iterable) $r3;

        r5 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r5, $r0);

        goto label1;

     label2:
        r6 = (java.util.List) $r1;

        return r6;
    }

    public static final kotlin.Pair unzip(java.lang.Iterable)
    {
        java.util.ArrayList $r0, $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        kotlin.Pair $r5;

        $r2 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $r5;
    }

