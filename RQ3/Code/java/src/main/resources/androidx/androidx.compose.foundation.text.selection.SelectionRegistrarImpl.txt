androidx.compose.foundation.text.selection.SelectionRegistrarImpl
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List _selectables>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.concurrent.atomic.AtomicLong incrementId>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onPositionChangeCallback>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function3 onSelectionUpdateStartCallback>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectionUpdateSelectAll>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function5 onSelectionUpdateCallback>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function0 onSelectionUpdateEndCallback>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectableChangeCallback>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 afterSelectableUnsubscribe>
<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: androidx.compose.runtime.MutableState subselections$delegate>
    public void <init>()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        java.util.ArrayList $r1;
        java.util.List $r2;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4, $r6;
        java.util.concurrent.atomic.AtomicLong $r5;
        androidx.compose.runtime.MutableState $r7;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = (java.util.List) $r1;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List _selectables> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(1L);

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.concurrent.atomic.AtomicLong incrementId> = $r5;

        $r6 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r6, null, 2, null);

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: androidx.compose.runtime.MutableState subselections$delegate> = $r7;

        return;
    }

    public final boolean getSorted$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $z0 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted>;

        return $z0;
    }

    public final void setSorted$foundation_release(boolean)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted> = z0;

        return;
    }

    public final java.util.List getSelectables$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List _selectables>;

        return $r1;
    }

    public final java.util.Map getSelectableMap$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function1 getOnPositionChangeCallback$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onPositionChangeCallback>;

        return $r1;
    }

    public final void setOnPositionChangeCallback$foundation_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onPositionChangeCallback> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function3 getOnSelectionUpdateStartCallback$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function3 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function3 onSelectionUpdateStartCallback>;

        return $r1;
    }

    public final void setOnSelectionUpdateStartCallback$foundation_release(kotlin.jvm.functions.Function3)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function3 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function3;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function3 onSelectionUpdateStartCallback> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnSelectionUpdateSelectAll$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectionUpdateSelectAll>;

        return $r1;
    }

    public final void setOnSelectionUpdateSelectAll$foundation_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectionUpdateSelectAll> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function5 getOnSelectionUpdateCallback$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function5 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function5 onSelectionUpdateCallback>;

        return $r1;
    }

    public final void setOnSelectionUpdateCallback$foundation_release(kotlin.jvm.functions.Function5)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function5 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function5;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function5 onSelectionUpdateCallback> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnSelectionUpdateEndCallback$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function0 onSelectionUpdateEndCallback>;

        return $r1;
    }

    public final void setOnSelectionUpdateEndCallback$foundation_release(kotlin.jvm.functions.Function0)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function0 onSelectionUpdateEndCallback> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnSelectableChangeCallback$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectableChangeCallback>;

        return $r1;
    }

    public final void setOnSelectableChangeCallback$foundation_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectableChangeCallback> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getAfterSelectableUnsubscribe$foundation_release()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 afterSelectableUnsubscribe>;

        return $r1;
    }

    public final void setAfterSelectableUnsubscribe$foundation_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 afterSelectableUnsubscribe> = r1;

        return;
    }

    public java.util.Map getSubselections()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.util.Map $r4;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r2 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: androidx.compose.runtime.MutableState subselections$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.util.Map) $r3;

        return $r4;
    }

    public void setSubselections(java.util.Map)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        java.util.Map r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r2 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: androidx.compose.runtime.MutableState subselections$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public androidx.compose.foundation.text.selection.Selectable subscribe(androidx.compose.foundation.text.selection.Selectable)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        androidx.compose.foundation.text.selection.Selectable r1;
        long $l0, $l2, $l3, $l4;
        byte $b1;
        java.util.Map $r2, $r4;
        java.lang.Long $r3, $r5;
        boolean $z0, $z2, $z4;
        java.util.List $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r16;
        java.lang.IllegalArgumentException $r12, $r17;
        java.lang.String $r13, $r18, $r19, $r20;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: androidx.compose.foundation.text.selection.Selectable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selectable");

        $l0 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The selectable contains an invalid id: ");

        $l4 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label3:
        $r2 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap>;

        $l2 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        if $z4 != 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Another selectable with the id: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".selectableId has already subscribed.");

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label6:
        $r4 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap>;

        $l3 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $r7 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List _selectables>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted> = 0;

        return r1;
    }

    public void unsubscribe(androidx.compose.foundation.text.selection.Selectable)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        androidx.compose.foundation.text.selection.Selectable r1;
        java.util.Map $r2, $r5;
        long $l0, $l1, $l2;
        java.lang.Long $r3, $r6, $r9;
        boolean $z0;
        java.util.List $r4;
        kotlin.jvm.functions.Function1 $r8;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: androidx.compose.foundation.text.selection.Selectable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selectable");

        $r2 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap>;

        $l0 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List _selectables>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.Map _selectableMap>;

        $l1 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        $r8 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 afterSelectableUnsubscribe>;

        if $r8 == null goto label2;

        $l2 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r8.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r9);

        goto label2;

     label2:
        return;
    }

    public long nextSelectableId()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        java.util.concurrent.atomic.AtomicLong $r1, $r2;
        byte $b0;
        long l1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.concurrent.atomic.AtomicLong incrementId>;

        l1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

     label1:
        $b0 = l1 cmp 0L;

        if $b0 != 0 goto label2;

        $r2 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.concurrent.atomic.AtomicLong incrementId>;

        l1 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        goto label1;

     label2:
        return l1;
    }

    public final java.util.List sort(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        boolean $z0;
        java.util.List $r2, $r3;
        java.util.Comparator $r4;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "containerLayoutCoordinates");

        $z0 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted>;

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List _selectables>;

        $r4 = dynamicinvoke "compare" <java.util.Comparator (androidx.compose.ui.layout.LayoutCoordinates)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.compose.foundation.text.selection.SelectionRegistrarImpl: int sort$lambda-2(androidx.compose.ui.layout.LayoutCoordinates,androidx.compose.foundation.text.selection.Selectable,androidx.compose.foundation.text.selection.Selectable)>, methodtype: int __METHODTYPE__(androidx.compose.foundation.text.selection.Selectable,androidx.compose.foundation.text.selection.Selectable));

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r3, $r4);

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted> = 1;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: java.util.List getSelectables$foundation_release()>();

        return $r2;
    }

    public void notifyPositionChange(long)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        long l0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Long $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        l0 := @parameter0: long;

        r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: boolean sorted> = 0;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onPositionChangeCallback>;

        if $r1 == null goto label1;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        goto label1;

     label1:
        return;
    }

    public void notifySelectionUpdateStart-d-4ec7I(androidx.compose.ui.layout.LayoutCoordinates, long, androidx.compose.foundation.text.selection.SelectionAdjustment)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        long l0;
        androidx.compose.foundation.text.selection.SelectionAdjustment r2;
        kotlin.jvm.functions.Function3 $r3;
        androidx.compose.ui.geometry.Offset $r4;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.foundation.text.selection.SelectionAdjustment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutCoordinates");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "adjustment");

        $r3 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function3 onSelectionUpdateStartCallback>;

        if $r3 == null goto label1;

        $r4 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>(l0);

        interfaceinvoke $r3.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r4, r2);

        goto label1;

     label1:
        return;
    }

    public void notifySelectionUpdateSelectAll(long)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        long l0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Long $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectionUpdateSelectAll>;

        if $r1 == null goto label1;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        goto label1;

     label1:
        return;
    }

    public boolean notifySelectionUpdate-5iVPX68(androidx.compose.ui.layout.LayoutCoordinates, long, long, boolean, androidx.compose.foundation.text.selection.SelectionAdjustment)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        long l0, l1;
        boolean z0, $z1;
        androidx.compose.foundation.text.selection.SelectionAdjustment r2;
        kotlin.jvm.functions.Function5 $r3;
        androidx.compose.ui.geometry.Offset $r4, $r5;
        java.lang.Boolean $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.compose.foundation.text.selection.SelectionAdjustment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutCoordinates");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "adjustment");

        $r3 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function5 onSelectionUpdateCallback>;

        if $r3 == null goto label1;

        $r4 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>(l0);

        $r5 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>(l1);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r7 = interfaceinvoke $r3.<kotlin.jvm.functions.Function5: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r4, $r5, $r6, r2);

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        goto label2;

     label1:
        $z1 = 1;

     label2:
        return $z1;
    }

    public void notifySelectionUpdateEnd()
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function0 onSelectionUpdateEndCallback>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label1;

     label1:
        return;
    }

    public void notifySelectableChange(long)
    {
        androidx.compose.foundation.text.selection.SelectionRegistrarImpl r0;
        long l0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Long $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionRegistrarImpl;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.text.selection.SelectionRegistrarImpl: kotlin.jvm.functions.Function1 onSelectableChangeCallback>;

        if $r1 == null goto label1;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        goto label1;

     label1:
        return;
    }

    private static final int sort$lambda-2(androidx.compose.ui.layout.LayoutCoordinates, androidx.compose.foundation.text.selection.Selectable, androidx.compose.foundation.text.selection.Selectable)
    {
        androidx.compose.ui.layout.LayoutCoordinates $r0, r3, r4;
        androidx.compose.foundation.text.selection.Selectable r1, r2;
        long l0, l1, $l3, $l4, $l5, $l6;
        androidx.compose.ui.geometry.Offset$Companion $r5, $r6, $r15, $r16;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b2;
        java.lang.Float $r7, $r9, $r11, $r13;
        java.lang.Comparable $r8, $r10, $r12, $r14;
        boolean $z0;
        int $i7;

        $r0 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        r1 := @parameter1: androidx.compose.foundation.text.selection.Selectable;

        r2 := @parameter2: androidx.compose.foundation.text.selection.Selectable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$containerLayoutCoordinates");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "a");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "b");

        r3 = interfaceinvoke r1.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        r4 = interfaceinvoke r2.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        if r3 == null goto label1;

        $r16 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l4 = virtualinvoke $r16.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        $l5 = interfaceinvoke $r0.<androidx.compose.ui.layout.LayoutCoordinates: long localPositionOf-R5De75A(androidx.compose.ui.layout.LayoutCoordinates,long)>(r3, $l4);

        goto label2;

     label1:
        $r5 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l5 = virtualinvoke $r5.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

     label2:
        l0 = $l5;

        if r4 == null goto label3;

        $r15 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l3 = virtualinvoke $r15.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        $l6 = interfaceinvoke $r0.<androidx.compose.ui.layout.LayoutCoordinates: long localPositionOf-R5De75A(androidx.compose.ui.layout.LayoutCoordinates,long)>(r4, $l3);

        goto label4;

     label3:
        $r6 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l6 = virtualinvoke $r6.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

     label4:
        l1 = $l6;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $b2 = $f0 cmpg $f1;

        if $b2 != 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        if $z0 == 0 goto label7;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r12 = (java.lang.Comparable) $r11;

        $f5 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r14 = (java.lang.Comparable) $r13;

        $i7 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>($r12, $r14);

        goto label8;

     label7:
        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r8 = (java.lang.Comparable) $r7;

        $f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r10 = (java.lang.Comparable) $r9;

        $i7 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>($r8, $r10);

     label8:
        return $i7;
    }

