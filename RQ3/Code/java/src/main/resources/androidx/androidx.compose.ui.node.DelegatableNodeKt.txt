androidx.compose.ui.node.DelegatableNodeKt
    public static final androidx.compose.ui.Modifier$Node localChild(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.compose.ui.Modifier$Node r1, $r2, $r3, r4;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        if $r3 != null goto label1;

        return null;

     label1:
        r1 = $r3;

        $i1 = virtualinvoke r1.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 != 0 goto label2;

        return null;

     label2:
        r4 = r1;

     label3:
        if r4 == null goto label5;

        $i3 = virtualinvoke r4.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label4;

        return r4;

     label4:
        r4 = virtualinvoke r4.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label3;

     label5:
        return null;
    }

    public static final androidx.compose.ui.Modifier$Node localParent(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2;
        androidx.compose.ui.Modifier$Node $r1, r2;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r2 = virtualinvoke $r1.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

     label1:
        if r2 == null goto label3;

        $i1 = virtualinvoke r2.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label2;

        return r2;

     label2:
        r2 = virtualinvoke r2.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label1;

     label3:
        return null;
    }

    public static final void visitAncestors(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.Modifier$Node r2, $r3, $r4, r12, $r14;
        boolean $z1;
        androidx.compose.ui.node.NodeChain $r5, $r6;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, r11;
        androidx.compose.ui.node.LayoutNode r13;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z1 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z1 != 0 goto label1;

        r11 = "Check failed.";

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label1:
        $r4 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r12 = virtualinvoke $r4.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        r13 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r0);

     label2:
        if r13 == null goto label8;

        $r5 = virtualinvoke r13.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        r2 = virtualinvoke $r5.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

        $i1 = virtualinvoke r2.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label5;

     label3:
        if r12 == null goto label5;

        $i3 = virtualinvoke r12.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label4;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r12);

     label4:
        r12 = virtualinvoke r12.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label3;

     label5:
        r13 = virtualinvoke r13.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        if r13 == null goto label6;

        $r6 = virtualinvoke r13.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        if $r6 == null goto label6;

        $r14 = virtualinvoke $r6.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        goto label7;

     label6:
        $r14 = null;

     label7:
        r12 = $r14;

        goto label2;

     label8:
        return;
    }

    public static final androidx.compose.ui.Modifier$Node nearestAncestor(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.compose.ui.Modifier$Node r1, $r2, $r3, r10, $r12;
        boolean $z0;
        androidx.compose.ui.node.NodeChain $r4, $r5;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r9;
        androidx.compose.ui.node.LayoutNode r11;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z0 = virtualinvoke $r2.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z0 != 0 goto label1;

        r9 = "Check failed.";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r10 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        r11 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r0);

     label2:
        if r11 == null goto label8;

        $r4 = virtualinvoke r11.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        r1 = virtualinvoke $r4.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

        $i1 = virtualinvoke r1.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label5;

     label3:
        if r10 == null goto label5;

        $i3 = virtualinvoke r10.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label4;

        return r10;

     label4:
        r10 = virtualinvoke r10.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label3;

     label5:
        r11 = virtualinvoke r11.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        if r11 == null goto label6;

        $r5 = virtualinvoke r11.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        if $r5 == null goto label6;

        $r12 = virtualinvoke $r5.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        goto label7;

     label6:
        $r12 = null;

     label7:
        r10 = $r12;

        goto label2;

     label8:
        return null;
    }

    public static final void visitSubtree(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.node.NestedVectorStack r2, $r5;
        androidx.compose.ui.Modifier$Node $r3, $r4, r13, $r15;
        boolean $z1, $z2;
        androidx.compose.runtime.collection.MutableVector $r6;
        java.lang.Object $r7;
        androidx.compose.ui.node.NodeChain $r9;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, r12;
        androidx.compose.ui.node.LayoutNode r14, $r16;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z1 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z1 != 0 goto label01;

        r12 = "Check failed.";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label01:
        $r4 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r13 = virtualinvoke $r4.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        r14 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r0);

        $r5 = new androidx.compose.ui.node.NestedVectorStack;

        specialinvoke $r5.<androidx.compose.ui.node.NestedVectorStack: void <init>()>();

        r2 = $r5;

     label02:
        if r14 == null goto label10;

        $r15 = r13;

        if r13 != null goto label03;

        $r9 = virtualinvoke r14.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r15 = virtualinvoke $r9.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

     label03:
        r13 = $r15;

        $i1 = virtualinvoke r13.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label07;

     label04:
        if r13 == null goto label06;

        $i3 = virtualinvoke r13.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label05;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r13);

     label05:
        r13 = virtualinvoke r13.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label04;

     label06:
        r13 = null;

     label07:
        $r6 = virtualinvoke r14.<androidx.compose.ui.node.LayoutNode: androidx.compose.runtime.collection.MutableVector get_children$ui_release()>();

        virtualinvoke r2.<androidx.compose.ui.node.NestedVectorStack: void push(androidx.compose.runtime.collection.MutableVector)>($r6);

        $z2 = virtualinvoke r2.<androidx.compose.ui.node.NestedVectorStack: boolean isNotEmpty()>();

        if $z2 == 0 goto label08;

        $r7 = virtualinvoke r2.<androidx.compose.ui.node.NestedVectorStack: java.lang.Object pop()>();

        $r16 = (androidx.compose.ui.node.LayoutNode) $r7;

        goto label09;

     label08:
        $r16 = null;

     label09:
        r14 = $r16;

        goto label02;

     label10:
        return;
    }

    private static final void addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector, androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.runtime.collection.MutableVector $r0, r2;
        androidx.compose.ui.Modifier$Node r1, $r10;
        int i0, i1;
        java.lang.Object[] r3, $r7;
        androidx.compose.ui.node.LayoutNode r4, $r6;
        androidx.compose.ui.node.DelegatableNode $r5;
        java.lang.Object $r8;
        androidx.compose.ui.node.NodeChain $r9;

        $r0 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter1: androidx.compose.ui.Modifier$Node;

        $r5 = (androidx.compose.ui.node.DelegatableNode) r1;

        $r6 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r5);

        r2 = virtualinvoke $r6.<androidx.compose.ui.node.LayoutNode: androidx.compose.runtime.collection.MutableVector get_children$ui_release()>();

        i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = i0 - 1;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r7;

     label1:
        $r8 = r3[i1];

        r4 = (androidx.compose.ui.node.LayoutNode) $r8;

        $r9 = virtualinvoke r4.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r10 = virtualinvoke $r9.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

        virtualinvoke $r0.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r10);

        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label2:
        return;
    }

    public static final void visitChildren(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r2, $r4;
        androidx.compose.ui.Modifier$Node $r3, $r6, $r9, $r13, r14, $r15;
        boolean $z2, $z6;
        androidx.compose.ui.Modifier$Node[] $r5;
        java.lang.Object $r7;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, $r12;
        byte b7;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z2 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z2 != 0 goto label1;

        $r12 = "Check failed.";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label1:
        b7 = 16;

        $r4 = new androidx.compose.runtime.collection.MutableVector;

        $r5 = newarray (androidx.compose.ui.Modifier$Node)[b7];

        specialinvoke $r4.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r5, 0);

        r2 = $r4;

        $r6 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r13 = virtualinvoke $r6.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        if $r13 != null goto label2;

        $r9 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r2, $r9);

        goto label3;

     label2:
        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r13);

     label3:
        $z6 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z6 == 0 goto label7;

        $i1 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i2 = $i1 - 1;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i2);

        r14 = (androidx.compose.ui.Modifier$Node) $r7;

        $i3 = virtualinvoke r14.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 != 0 goto label4;

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r2, r14);

        goto label3;

     label4:
        $r15 = r14;

     label5:
        if $r15 == null goto label3;

        $i5 = virtualinvoke $r15.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i6 = $i5 & i0;

        if $i6 == 0 goto label6;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        goto label3;

     label6:
        $r15 = virtualinvoke $r15.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label5;

     label7:
        return;
    }

    public static final void visitSubtreeIf(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r2, $r4;
        boolean z1, $z2, $z6;
        androidx.compose.ui.Modifier$Node $r3, $r6, $r10, $r14, r15, $r16;
        androidx.compose.ui.Modifier$Node[] $r5;
        java.lang.Object $r7, $r8;
        java.lang.Boolean $r9;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12, $r13;
        byte b7;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z2 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z2 != 0 goto label1;

        $r13 = "Check failed.";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label1:
        b7 = 16;

        $r4 = new androidx.compose.runtime.collection.MutableVector;

        $r5 = newarray (androidx.compose.ui.Modifier$Node)[b7];

        specialinvoke $r4.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r5, 0);

        r2 = $r4;

        $r6 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r14 = virtualinvoke $r6.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        if $r14 != null goto label2;

        $r10 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r2, $r10);

        goto label3;

     label2:
        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r14);

     label3:
        $z6 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z6 == 0 goto label7;

        $i1 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i2 = $i1 - 1;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i2);

        r15 = (androidx.compose.ui.Modifier$Node) $r7;

        $i3 = virtualinvoke r15.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label6;

        $r16 = r15;

     label4:
        if $r16 == null goto label6;

        $i5 = virtualinvoke $r16.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i6 = $i5 & i0;

        if $i6 == 0 goto label5;

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r16);

        $r9 = (java.lang.Boolean) $r8;

        z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if z1 == 0 goto label3;

     label5:
        $r16 = virtualinvoke $r16.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label4;

     label6:
        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r2, r15);

        goto label3;

     label7:
        return;
    }

    public static final void visitLocalChildren(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.Modifier$Node r2, $r3, r8;
        boolean $z1;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, r7;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z1 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z1 != 0 goto label1;

        r7 = "Check failed.";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        r2 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $i1 = virtualinvoke r2.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 != 0 goto label2;

        return;

     label2:
        r8 = virtualinvoke r2.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

     label3:
        if r8 == null goto label5;

        $i3 = virtualinvoke r8.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label4;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r8);

     label4:
        r8 = virtualinvoke r8.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label3;

     label5:
        return;
    }

    public static final void visitLocalParents(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2;
        kotlin.jvm.functions.Function1 r1;
        java.lang.String r2, $r7;
        androidx.compose.ui.Modifier$Node $r3, $r4, r8;
        boolean $z1;
        java.lang.IllegalStateException $r6;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z1 = virtualinvoke $r3.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z1 != 0 goto label1;

        r2 = "Check failed.";

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        $r4 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r8 = virtualinvoke $r4.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

     label2:
        if r8 == null goto label4;

        $i1 = virtualinvoke r8.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label3;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r8);

     label3:
        r8 = virtualinvoke r8.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label2;

     label4:
        return;
    }

    public static final void visitLocalChildren-6rFNWt0(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.Modifier$Node r3, r4, $r5, r10;
        boolean $z3, $z4;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r9;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$visitLocalChildren");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = i0;

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z3 = virtualinvoke $r5.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z3 != 0 goto label1;

        r9 = "Check failed.";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        r3 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $i2 = virtualinvoke r3.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i3 = $i2 & i1;

        if $i3 == 0 goto label4;

        r10 = virtualinvoke r3.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

     label2:
        if r10 == null goto label4;

        $i4 = virtualinvoke r10.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label3;

        r4 = (androidx.compose.ui.Modifier$Node) r10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z4 = r4 instanceof java.lang.Object;

        if $z4 == 0 goto label3;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

     label3:
        r10 = virtualinvoke r10.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label2;

     label4:
        return;
    }

    public static final void visitLocalParents-6rFNWt0(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, i1, $i2, $i3;
        kotlin.jvm.functions.Function1 r1;
        java.lang.String r3, $r9;
        androidx.compose.ui.Modifier$Node r4, $r5, $r6, r10;
        boolean $z3, $z4;
        java.lang.IllegalStateException $r8;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$visitLocalParents");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = i0;

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z3 = virtualinvoke $r5.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z3 != 0 goto label1;

        r3 = "Check failed.";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        $r6 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r10 = virtualinvoke $r6.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

     label2:
        if r10 == null goto label4;

        $i2 = virtualinvoke r10.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i3 = $i2 & i1;

        if $i3 == 0 goto label3;

        r4 = (androidx.compose.ui.Modifier$Node) r10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z4 = r4 instanceof java.lang.Object;

        if $z4 == 0 goto label3;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

     label3:
        r10 = virtualinvoke r10.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label2;

     label4:
        return;
    }

    public static final java.lang.Object localParent-64DMado(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0;
        androidx.compose.ui.Modifier$Node $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$localParent");

        $r1 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.Modifier$Node localParent(androidx.compose.ui.node.DelegatableNode,int)>($r0, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(2, "T");

        $r2 = (java.lang.Object) $r1;

        return $r2;
    }

    public static final java.lang.Object localChild-64DMado(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0;
        androidx.compose.ui.Modifier$Node $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$localChild");

        $r1 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.Modifier$Node localChild(androidx.compose.ui.node.DelegatableNode,int)>($r0, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(2, "T");

        $r2 = (java.lang.Object) $r1;

        return $r2;
    }

    public static final void visitAncestors-6rFNWt0(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.Modifier$Node r3, r4, $r5, $r6, r14, $r16;
        boolean $z3, $z4;
        androidx.compose.ui.node.NodeChain $r7, $r8;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12, r13;
        androidx.compose.ui.node.LayoutNode r15;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$visitAncestors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = i0;

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z3 = virtualinvoke $r5.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z3 != 0 goto label1;

        r13 = "Check failed.";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label1:
        $r6 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r14 = virtualinvoke $r6.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        r15 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r0);

     label2:
        if r15 == null goto label8;

        $r7 = virtualinvoke r15.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        r3 = virtualinvoke $r7.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

        $i2 = virtualinvoke r3.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i3 = $i2 & i1;

        if $i3 == 0 goto label5;

     label3:
        if r14 == null goto label5;

        $i4 = virtualinvoke r14.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label4;

        r4 = (androidx.compose.ui.Modifier$Node) r14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z4 = r4 instanceof java.lang.Object;

        if $z4 == 0 goto label4;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

     label4:
        r14 = virtualinvoke r14.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label3;

     label5:
        r15 = virtualinvoke r15.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        if r15 == null goto label6;

        $r8 = virtualinvoke r15.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        if $r8 == null goto label6;

        $r16 = virtualinvoke $r8.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        goto label7;

     label6:
        $r16 = null;

     label7:
        r14 = $r16;

        goto label2;

     label8:
        return;
    }

    public static final java.lang.Object nearestAncestor-64DMado(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0;
        androidx.compose.ui.Modifier$Node $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$nearestAncestor");

        $r1 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.Modifier$Node nearestAncestor(androidx.compose.ui.node.DelegatableNode,int)>($r0, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(2, "T");

        $r2 = (java.lang.Object) $r1;

        return $r2;
    }

    public static final void visitSubtree-6rFNWt0(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.node.NestedVectorStack r3, $r7;
        androidx.compose.ui.Modifier$Node r4, $r5, $r6, r15, $r17;
        boolean $z3, $z4, $z5;
        androidx.compose.runtime.collection.MutableVector $r8;
        java.lang.Object $r9;
        androidx.compose.ui.node.NodeChain $r11;
        java.lang.IllegalStateException $r12;
        java.lang.String $r13, r14;
        androidx.compose.ui.node.LayoutNode r16, $r18;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$visitSubtree");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = i0;

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z3 = virtualinvoke $r5.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z3 != 0 goto label01;

        r14 = "Check failed.";

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label01:
        $r6 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r15 = virtualinvoke $r6.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        r16 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r0);

        $r7 = new androidx.compose.ui.node.NestedVectorStack;

        specialinvoke $r7.<androidx.compose.ui.node.NestedVectorStack: void <init>()>();

        r3 = $r7;

     label02:
        if r16 == null goto label10;

        $r17 = r15;

        if r15 != null goto label03;

        $r11 = virtualinvoke r16.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r17 = virtualinvoke $r11.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

     label03:
        r15 = $r17;

        $i2 = virtualinvoke r15.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i3 = $i2 & i1;

        if $i3 == 0 goto label07;

     label04:
        if r15 == null goto label06;

        $i4 = virtualinvoke r15.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label05;

        r4 = (androidx.compose.ui.Modifier$Node) r15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z5 = r4 instanceof java.lang.Object;

        if $z5 == 0 goto label05;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

     label05:
        r15 = virtualinvoke r15.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label04;

     label06:
        r15 = null;

     label07:
        $r8 = virtualinvoke r16.<androidx.compose.ui.node.LayoutNode: androidx.compose.runtime.collection.MutableVector get_children$ui_release()>();

        virtualinvoke r3.<androidx.compose.ui.node.NestedVectorStack: void push(androidx.compose.runtime.collection.MutableVector)>($r8);

        $z4 = virtualinvoke r3.<androidx.compose.ui.node.NestedVectorStack: boolean isNotEmpty()>();

        if $z4 == 0 goto label08;

        $r9 = virtualinvoke r3.<androidx.compose.ui.node.NestedVectorStack: java.lang.Object pop()>();

        $r18 = (androidx.compose.ui.node.LayoutNode) $r9;

        goto label09;

     label08:
        $r18 = null;

     label09:
        r16 = $r18;

        goto label02;

     label10:
        return;
    }

    public static final void visitChildren-6rFNWt0(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r3, $r6;
        androidx.compose.ui.Modifier$Node r4, $r5, $r8, $r11, $r15, r16, $r17;
        boolean $z4, $z6, $z9;
        androidx.compose.ui.Modifier$Node[] $r7;
        java.lang.Object $r9;
        java.lang.IllegalStateException $r12;
        java.lang.String $r13, $r14;
        byte b8;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$visitChildren");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = i0;

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z4 = virtualinvoke $r5.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z4 != 0 goto label1;

        $r14 = "Check failed.";

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label1:
        b8 = 16;

        $r6 = new androidx.compose.runtime.collection.MutableVector;

        $r7 = newarray (androidx.compose.ui.Modifier$Node)[b8];

        specialinvoke $r6.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r7, 0);

        r3 = $r6;

        $r8 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r15 = virtualinvoke $r8.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        if $r15 != null goto label2;

        $r11 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r3, $r11);

        goto label3;

     label2:
        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r15);

     label3:
        $z9 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z9 == 0 goto label8;

        $i2 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i3 = $i2 - 1;

        $r9 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i3);

        r16 = (androidx.compose.ui.Modifier$Node) $r9;

        $i4 = virtualinvoke r16.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 != 0 goto label4;

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r3, r16);

        goto label3;

     label4:
        $r17 = r16;

     label5:
        if $r17 == null goto label3;

        $i6 = virtualinvoke $r17.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i7 = $i6 & i1;

        if $i7 == 0 goto label7;

        r4 = (androidx.compose.ui.Modifier$Node) $r17;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z6 = r4 instanceof java.lang.Object;

        if $z6 == 0 goto label6;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

     label6:
        goto label3;

     label7:
        $r17 = virtualinvoke $r17.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label5;

     label8:
        return;
    }

    public static final void visitSubtreeIf-6rFNWt0(androidx.compose.ui.node.DelegatableNode, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r3, $r6;
        androidx.compose.ui.Modifier$Node r4, $r5, $r8, $r12, $r16, r17, $r18;
        boolean z3, $z4, $z6, $z9, $z10;
        androidx.compose.ui.Modifier$Node[] $r7;
        java.lang.Object $r9, $r10;
        java.lang.Boolean $r11;
        java.lang.IllegalStateException $r13;
        java.lang.String $r14, $r15;
        byte b8;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$visitSubtreeIf");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = i0;

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z4 = virtualinvoke $r5.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z4 != 0 goto label1;

        $r15 = "Check failed.";

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label1:
        b8 = 16;

        $r6 = new androidx.compose.runtime.collection.MutableVector;

        $r7 = newarray (androidx.compose.ui.Modifier$Node)[b8];

        specialinvoke $r6.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r7, 0);

        r3 = $r6;

        $r8 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r16 = virtualinvoke $r8.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        if $r16 != null goto label2;

        $r12 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r3, $r12);

        goto label3;

     label2:
        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r16);

     label3:
        $z9 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z9 == 0 goto label9;

        $i2 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i3 = $i2 - 1;

        $r9 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i3);

        r17 = (androidx.compose.ui.Modifier$Node) $r9;

        $i4 = virtualinvoke r17.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label8;

        $r18 = r17;

     label4:
        if $r18 == null goto label8;

        $i6 = virtualinvoke $r18.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i7 = $i6 & i1;

        if $i7 == 0 goto label7;

        r4 = (androidx.compose.ui.Modifier$Node) $r18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z6 = r4 instanceof java.lang.Object;

        if $z6 == 0 goto label5;

        $r10 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        $r11 = (java.lang.Boolean) $r10;

        $z10 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        goto label6;

     label5:
        $z10 = 1;

     label6:
        z3 = $z10;

        if z3 == 0 goto label3;

     label7:
        $r18 = virtualinvoke $r18.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label4;

     label8:
        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r3, r17);

        goto label3;

     label9:
        return;
    }

    public static final boolean has-64DMado(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0, $i1, $i2;
        androidx.compose.ui.Modifier$Node $r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$has");

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $i1 = virtualinvoke $r1.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final androidx.compose.ui.node.NodeCoordinator requireCoordinator-64DMado(androidx.compose.ui.node.DelegatableNode, int)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        int i0;
        androidx.compose.ui.node.NodeCoordinator r1, $r3, $r5;
        androidx.compose.ui.Modifier$Node $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$requireCoordinator");

        $r2 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator getCoordinator$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        r1 = $r3;

        $r4 = virtualinvoke r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.Modifier$Node getTail()>();

        if $r4 == $r0 goto label1;

        $r5 = r1;

        goto label3;

     label1:
        $z0 = staticinvoke <androidx.compose.ui.node.NodeKindKt: boolean getIncludeSelfInTraversal-H91voCI(int)>(i0);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        goto label3;

     label2:
        $r5 = r1;

     label3:
        return $r5;
    }

    public static final androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        androidx.compose.ui.Modifier$Node $r1;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.node.LayoutNode $r3;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r2 = virtualinvoke $r1.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator getCoordinator$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        return $r3;
    }

    public static final androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)
    {
        androidx.compose.ui.node.DelegatableNode $r0;
        androidx.compose.ui.node.LayoutNode $r1;
        androidx.compose.ui.node.Owner $r2;

        $r0 := @parameter0: androidx.compose.ui.node.DelegatableNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r0);

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        return $r2;
    }

    public static final void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector, androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.runtime.collection.MutableVector $r0;
        androidx.compose.ui.Modifier$Node r1;

        $r0 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter1: androidx.compose.ui.Modifier$Node;

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>($r0, r1);

        return;
    }

