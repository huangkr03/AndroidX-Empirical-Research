androidx.camera.camera2.internal.Camera2UseCaseConfigFactory
<androidx.camera.camera2.internal.Camera2UseCaseConfigFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager>
    public void <init>(android.content.Context)
    {
        androidx.camera.camera2.internal.Camera2UseCaseConfigFactory r0;
        android.content.Context r1;
        androidx.camera.camera2.internal.DisplayInfoManager $r2;

        r0 := @this: androidx.camera.camera2.internal.Camera2UseCaseConfigFactory;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.camera.camera2.internal.DisplayInfoManager: androidx.camera.camera2.internal.DisplayInfoManager getInstance(android.content.Context)>(r1);

        r0.<androidx.camera.camera2.internal.Camera2UseCaseConfigFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager> = $r2;

        return;
    }

    public androidx.camera.core.impl.Config getConfig(androidx.camera.core.impl.UseCaseConfigFactory$CaptureType, int)
    {
        androidx.camera.camera2.internal.Camera2UseCaseConfigFactory r0;
        androidx.camera.core.impl.UseCaseConfigFactory$CaptureType r1, $r15, $r20, $r32, $r35;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.camera.core.impl.MutableOptionsBundle r2;
        androidx.camera.core.impl.SessionConfig$Builder r3, $r5;
        androidx.camera.core.impl.CaptureConfig$Builder r4, $r12;
        int[] $r6, $r13;
        androidx.camera.core.impl.Config$Option $r8, $r11, $r14, $r18, $r22, $r25, $r33;
        androidx.camera.core.impl.SessionConfig $r9;
        androidx.camera.camera2.internal.Camera2SessionOptionUnpacker $r10;
        androidx.camera.camera2.internal.DisplayInfoManager $r16, $r24;
        android.view.Display $r17;
        java.lang.Integer $r19;
        androidx.camera.core.impl.OptionsBundle $r21;
        java.lang.Boolean $r23;
        android.util.Size $r26;
        byte $b6, $b7;
        androidx.camera.core.impl.CaptureConfig $r34;
        androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker $r36;

        r0 := @this: androidx.camera.camera2.internal.Camera2UseCaseConfigFactory;

        r1 := @parameter0: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType;

        i0 := @parameter1: int;

        r2 = staticinvoke <androidx.camera.core.impl.MutableOptionsBundle: androidx.camera.core.impl.MutableOptionsBundle create()>();

        $r5 = new androidx.camera.core.impl.SessionConfig$Builder;

        specialinvoke $r5.<androidx.camera.core.impl.SessionConfig$Builder: void <init>()>();

        r3 = $r5;

        $r6 = <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>;

        $i2 = virtualinvoke r1.<androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: int ordinal()>();

        $i3 = $r6[$i2];

        tableswitch($i3)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label04;
            case 4: goto label05;
            default: goto label06;
        };

     label01:
        if i0 != 2 goto label02;

        $b6 = 5;

        goto label03;

     label02:
        $b6 = 1;

     label03:
        virtualinvoke r3.<androidx.camera.core.impl.SessionConfig$Builder: androidx.camera.core.impl.SessionConfig$Builder setTemplateType(int)>($b6);

        goto label06;

     label04:
        virtualinvoke r3.<androidx.camera.core.impl.SessionConfig$Builder: androidx.camera.core.impl.SessionConfig$Builder setTemplateType(int)>(1);

        goto label06;

     label05:
        virtualinvoke r3.<androidx.camera.core.impl.SessionConfig$Builder: androidx.camera.core.impl.SessionConfig$Builder setTemplateType(int)>(3);

     label06:
        $r32 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType PREVIEW>;

        if r1 != $r32 goto label07;

        staticinvoke <androidx.camera.camera2.internal.compat.workaround.PreviewPixelHDRnet: void setHDRnet(androidx.camera.core.impl.SessionConfig$Builder)>(r3);

     label07:
        $r8 = <androidx.camera.core.impl.UseCaseConfig: androidx.camera.core.impl.Config$Option OPTION_DEFAULT_SESSION_CONFIG>;

        $r9 = virtualinvoke r3.<androidx.camera.core.impl.SessionConfig$Builder: androidx.camera.core.impl.SessionConfig build()>();

        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r8, $r9);

        $r11 = <androidx.camera.core.impl.UseCaseConfig: androidx.camera.core.impl.Config$Option OPTION_SESSION_CONFIG_UNPACKER>;

        $r10 = <androidx.camera.camera2.internal.Camera2SessionOptionUnpacker: androidx.camera.camera2.internal.Camera2SessionOptionUnpacker INSTANCE>;

        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r11, $r10);

        $r12 = new androidx.camera.core.impl.CaptureConfig$Builder;

        specialinvoke $r12.<androidx.camera.core.impl.CaptureConfig$Builder: void <init>()>();

        r4 = $r12;

        $r13 = <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>;

        $i4 = virtualinvoke r1.<androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: int ordinal()>();

        $i5 = $r13[$i4];

        tableswitch($i5)
        {
            case 1: goto label08;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label12;
            default: goto label13;
        };

     label08:
        if i0 != 2 goto label09;

        $b7 = 5;

        goto label10;

     label09:
        $b7 = 2;

     label10:
        virtualinvoke r4.<androidx.camera.core.impl.CaptureConfig$Builder: void setTemplateType(int)>($b7);

        goto label13;

     label11:
        virtualinvoke r4.<androidx.camera.core.impl.CaptureConfig$Builder: void setTemplateType(int)>(1);

        goto label13;

     label12:
        virtualinvoke r4.<androidx.camera.core.impl.CaptureConfig$Builder: void setTemplateType(int)>(3);

     label13:
        $r33 = <androidx.camera.core.impl.UseCaseConfig: androidx.camera.core.impl.Config$Option OPTION_DEFAULT_CAPTURE_CONFIG>;

        $r34 = virtualinvoke r4.<androidx.camera.core.impl.CaptureConfig$Builder: androidx.camera.core.impl.CaptureConfig build()>();

        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r33, $r34);

        $r14 = <androidx.camera.core.impl.UseCaseConfig: androidx.camera.core.impl.Config$Option OPTION_CAPTURE_CONFIG_UNPACKER>;

        $r35 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType IMAGE_CAPTURE>;

        if r1 != $r35 goto label14;

        $r36 = <androidx.camera.camera2.internal.ImageCaptureOptionUnpacker: androidx.camera.camera2.internal.ImageCaptureOptionUnpacker INSTANCE>;

        goto label15;

     label14:
        $r36 = <androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker: androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker INSTANCE>;

     label15:
        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r14, $r36);

        $r15 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType PREVIEW>;

        if r1 != $r15 goto label16;

        $r25 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_MAX_RESOLUTION>;

        $r24 = r0.<androidx.camera.camera2.internal.Camera2UseCaseConfigFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager>;

        $r26 = virtualinvoke $r24.<androidx.camera.camera2.internal.DisplayInfoManager: android.util.Size getPreviewSize()>();

        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r25, $r26);

     label16:
        $r16 = r0.<androidx.camera.camera2.internal.Camera2UseCaseConfigFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager>;

        $r17 = virtualinvoke $r16.<androidx.camera.camera2.internal.DisplayInfoManager: android.view.Display getMaxSizeDisplay()>();

        i1 = virtualinvoke $r17.<android.view.Display: int getRotation()>();

        $r18 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ROTATION>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r18, $r19);

        $r20 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType VIDEO_CAPTURE>;

        if r1 != $r20 goto label17;

        $r22 = <androidx.camera.core.impl.UseCaseConfig: androidx.camera.core.impl.Config$Option OPTION_ZSL_DISABLED>;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r22, $r23);

     label17:
        $r21 = staticinvoke <androidx.camera.core.impl.OptionsBundle: androidx.camera.core.impl.OptionsBundle 'from'(androidx.camera.core.impl.Config)>(r2);

        return $r21;
    }

androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1
<androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>
    static void <clinit>()
    {
        androidx.camera.core.impl.UseCaseConfigFactory$CaptureType[] $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r3, $r5, $r7, $r9;
        androidx.camera.core.impl.UseCaseConfigFactory$CaptureType $r2, $r4, $r6, $r8;
        java.lang.Throwable $r10, $r11, $r12, $r13, r14, r15, r16, r17;

        $r0 = staticinvoke <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType> = $r1;

     label01:
        $r3 = <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>;

        $r2 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType IMAGE_CAPTURE>;

        $i1 = virtualinvoke $r2.<androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        r14 = $r10;

     label04:
        $r5 = <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>;

        $r4 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType PREVIEW>;

        $i2 = virtualinvoke $r4.<androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        r15 = $r11;

     label07:
        $r7 = <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>;

        $r6 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType IMAGE_ANALYSIS>;

        $i3 = virtualinvoke $r6.<androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        r16 = $r13;

     label10:
        $r9 = <androidx.camera.camera2.internal.Camera2UseCaseConfigFactory$1: int[] $SwitchMap$androidx$camera$core$impl$UseCaseConfigFactory$CaptureType>;

        $r8 = <androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType VIDEO_CAPTURE>;

        $i4 = virtualinvoke $r8.<androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;

        r17 = $r12;

     label13:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
    }

