androidx.test.espresso.matcher.LayoutMatchers
    public static org.hamcrest.Matcher hasEllipsizedText()
    {
        androidx.test.espresso.matcher.LayoutMatchers$1 r0, r1;
        org.hamcrest.Matcher r2;

        r1 = new androidx.test.espresso.matcher.LayoutMatchers$1;

        r0 = r1;

        specialinvoke r1.<androidx.test.espresso.matcher.LayoutMatchers$1: void <init>(java.lang.Class)>(class "Landroid/widget/TextView;");

        r2 = (org.hamcrest.Matcher) r0;

        return r2;
    }

    public static org.hamcrest.Matcher hasMultilineText()
    {
        androidx.test.espresso.matcher.LayoutMatchers$2 r0, r1;
        org.hamcrest.Matcher r2;

        r1 = new androidx.test.espresso.matcher.LayoutMatchers$2;

        r0 = r1;

        specialinvoke r1.<androidx.test.espresso.matcher.LayoutMatchers$2: void <init>(java.lang.Class)>(class "Landroid/widget/TextView;");

        r2 = (org.hamcrest.Matcher) r0;

        return r2;
    }

    private void <init>()
    {
        androidx.test.espresso.matcher.LayoutMatchers r0;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.matcher.LayoutMatchers$1
    void <init>(java.lang.Class)
    {
        androidx.test.espresso.matcher.LayoutMatchers$1 r0;
        java.lang.Class r1;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers$1;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>(java.lang.Class)>(r1);

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.LayoutMatchers$1 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers$1;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has ellipsized text");

        return;
    }

    public boolean matchesSafely(android.view.View)
    {
        android.widget.TextView $r0;
        int $i0, $i1, i2;
        androidx.test.espresso.matcher.LayoutMatchers$1 r1;
        android.view.View r2;
        android.text.Layout r3;
        boolean z0;

        r1 := @this: androidx.test.espresso.matcher.LayoutMatchers$1;

        r2 := @parameter0: android.view.View;

        $r0 = (android.widget.TextView) r2;

        r3 = virtualinvoke $r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if r3 == null goto label3;

        i2 = virtualinvoke r3.<android.text.Layout: int getLineCount()>();

        if i2 <= 0 goto label2;

        $i0 = i2 + -1;

        $i1 = virtualinvoke r3.<android.text.Layout: int getEllipsisCount(int)>($i0);

        if $i1 <= 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.matcher.LayoutMatchers$1 r0;
        java.lang.Object r1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.matcher.LayoutMatchers$1: boolean matchesSafely(android.view.View)>($r2);

        return $z0;
    }

androidx.test.espresso.matcher.LayoutMatchers$2
    void <init>(java.lang.Class)
    {
        androidx.test.espresso.matcher.LayoutMatchers$2 r0;
        java.lang.Class r1;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers$2;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>(java.lang.Class)>(r1);

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.LayoutMatchers$2 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers$2;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has more than one line of text");

        return;
    }

    public boolean matchesSafely(android.view.View)
    {
        android.view.View r0;
        android.widget.TextView $r1;
        int $i0;
        androidx.test.espresso.matcher.LayoutMatchers$2 r2;
        boolean z0;

        r2 := @this: androidx.test.espresso.matcher.LayoutMatchers$2;

        r0 := @parameter0: android.view.View;

        $r1 = (android.widget.TextView) r0;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getLineCount()>();

        if $i0 <= 1 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.matcher.LayoutMatchers$2 r0;
        java.lang.Object r1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.matcher.LayoutMatchers$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.matcher.LayoutMatchers$2: boolean matchesSafely(android.view.View)>($r2);

        return $z0;
    }

