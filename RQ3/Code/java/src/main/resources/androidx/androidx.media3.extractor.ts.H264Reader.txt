androidx.media3.extractor.ts.H264Reader
<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.SeiReader seiReader>
<androidx.media3.extractor.ts.H264Reader: boolean allowNonIdrKeyframes>
<androidx.media3.extractor.ts.H264Reader: boolean detectAccessUnits>
<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>
<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>
<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>
<androidx.media3.extractor.ts.H264Reader: long totalBytesWritten>
<androidx.media3.extractor.ts.H264Reader: boolean[] prefixFlags>
<androidx.media3.extractor.ts.H264Reader: java.lang.String formatId>
<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.TrackOutput output>
<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>
<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat>
<androidx.media3.extractor.ts.H264Reader: long pesTimeUs>
<androidx.media3.extractor.ts.H264Reader: boolean randomAccessIndicator>
<androidx.media3.extractor.ts.H264Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>
    public void <init>(androidx.media3.extractor.ts.SeiReader, boolean, boolean)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        androidx.media3.extractor.ts.SeiReader r1;
        boolean z0, z1;
        boolean[] $r2;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r3, $r4, $r5;
        androidx.media3.common.util.ParsableByteArray $r6;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        r1 := @parameter0: androidx.media3.extractor.ts.SeiReader;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.SeiReader seiReader> = r1;

        r0.<androidx.media3.extractor.ts.H264Reader: boolean allowNonIdrKeyframes> = z0;

        r0.<androidx.media3.extractor.ts.H264Reader: boolean detectAccessUnits> = z1;

        $r2 = newarray (boolean)[3];

        r0.<androidx.media3.extractor.ts.H264Reader: boolean[] prefixFlags> = $r2;

        $r3 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(7, 128);

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps> = $r3;

        $r4 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(8, 128);

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps> = $r4;

        $r5 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(6, 128);

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei> = $r5;

        r0.<androidx.media3.extractor.ts.H264Reader: long pesTimeUs> = -9223372036854775807L;

        $r6 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r6.<androidx.media3.common.util.ParsableByteArray: void <init>()>();

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.common.util.ParsableByteArray seiWrapper> = $r6;

        return;
    }

    public void seek()
    {
        androidx.media3.extractor.ts.H264Reader r0;
        boolean[] $r1;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r2, $r3, $r4;
        androidx.media3.extractor.ts.H264Reader$SampleReader $r5, $r6;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        r0.<androidx.media3.extractor.ts.H264Reader: long totalBytesWritten> = 0L;

        r0.<androidx.media3.extractor.ts.H264Reader: boolean randomAccessIndicator> = 0;

        r0.<androidx.media3.extractor.ts.H264Reader: long pesTimeUs> = -9223372036854775807L;

        $r1 = r0.<androidx.media3.extractor.ts.H264Reader: boolean[] prefixFlags>;

        staticinvoke <androidx.media3.extractor.NalUnitUtil: void clearPrefixFlags(boolean[])>($r1);

        $r2 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r4 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        virtualinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r5 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        if $r5 == null goto label1;

        $r6 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r6.<androidx.media3.extractor.ts.H264Reader$SampleReader: void reset()>();

     label1:
        return;
    }

    public void createTracks(androidx.media3.extractor.ExtractorOutput, androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator r2;
        java.lang.String $r3;
        int $i0;
        androidx.media3.extractor.TrackOutput $r4, $r6;
        androidx.media3.extractor.ts.H264Reader$SampleReader $r5;
        boolean $z0, $z1;
        androidx.media3.extractor.ts.SeiReader $r7;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r2 := @parameter1: androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator;

        virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: void generateNewId()>();

        $r3 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String getFormatId()>();

        r0.<androidx.media3.extractor.ts.H264Reader: java.lang.String formatId> = $r3;

        $i0 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: int getTrackId()>();

        $r4 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>($i0, 2);

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.TrackOutput output> = $r4;

        $r5 = new androidx.media3.extractor.ts.H264Reader$SampleReader;

        $r6 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.TrackOutput output>;

        $z1 = r0.<androidx.media3.extractor.ts.H264Reader: boolean allowNonIdrKeyframes>;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader: boolean detectAccessUnits>;

        specialinvoke $r5.<androidx.media3.extractor.ts.H264Reader$SampleReader: void <init>(androidx.media3.extractor.TrackOutput,boolean,boolean)>($r6, $z1, $z0);

        r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader> = $r5;

        $r7 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.SeiReader seiReader>;

        virtualinvoke $r7.<androidx.media3.extractor.ts.SeiReader: void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)>(r1, r2);

        return;
    }

    public void packetStarted(long, int)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        long l0;
        int i1, $i3;
        byte $b2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $b2 = l0 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        r0.<androidx.media3.extractor.ts.H264Reader: long pesTimeUs> = l0;

     label1:
        $z0 = r0.<androidx.media3.extractor.ts.H264Reader: boolean randomAccessIndicator>;

        $i3 = i1 & 2;

        if $i3 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $z1 = $z0 | $z2;

        r0.<androidx.media3.extractor.ts.H264Reader: boolean randomAccessIndicator> = $z1;

        return;
    }

    public void consume(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, i1, i2, i3, i4, $i7, $i10, i17, $i18;
        byte[] r2;
        long l5, $l6, $l8, $l9, $l11, $l12, $l13, $l14;
        androidx.media3.extractor.TrackOutput $r3;
        boolean[] $r4;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader: void assertTracksCreated()>();

        i17 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        r2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $l6 = r0.<androidx.media3.extractor.ts.H264Reader: long totalBytesWritten>;

        $i7 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $l8 = (long) $i7;

        $l9 = $l6 + $l8;

        r0.<androidx.media3.extractor.ts.H264Reader: long totalBytesWritten> = $l9;

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.TrackOutput output>;

        $i10 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        interfaceinvoke $r3.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r1, $i10);

     label1:
        $r4 = r0.<androidx.media3.extractor.ts.H264Reader: boolean[] prefixFlags>;

        i1 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int findNalUnit(byte[],int,int,boolean[])>(r2, i17, i0, $r4);

        if i1 != i0 goto label2;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader: void nalUnitData(byte[],int,int)>(r2, i17, i0);

        return;

     label2:
        i2 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int getNalUnitType(byte[],int)>(r2, i1);

        i3 = i1 - i17;

        if i3 <= 0 goto label3;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader: void nalUnitData(byte[],int,int)>(r2, i17, i1);

     label3:
        i4 = i0 - i1;

        $l12 = r0.<androidx.media3.extractor.ts.H264Reader: long totalBytesWritten>;

        $l11 = (long) i4;

        l5 = $l12 - $l11;

        if i3 >= 0 goto label4;

        $i18 = neg i3;

        goto label5;

     label4:
        $i18 = 0;

     label5:
        $l13 = r0.<androidx.media3.extractor.ts.H264Reader: long pesTimeUs>;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader: void endNalUnit(long,int,int,long)>(l5, i4, $i18, $l13);

        $l14 = r0.<androidx.media3.extractor.ts.H264Reader: long pesTimeUs>;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader: void startNalUnit(long,int,long)>(l5, i2, $l14);

        i17 = i1 + 3;

        goto label1;
    }

    public void packetFinished()
    {
        androidx.media3.extractor.ts.H264Reader r0;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        return;
    }

    private void startNalUnit(long, int, long)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        long l0, l2;
        int i1;
        boolean $z0, $z1;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r1, $r2, $r4;
        androidx.media3.extractor.ts.H264Reader$SampleReader $r3, $r5;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat>;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        $z1 = virtualinvoke $r3.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean needsSpsPps()>();

        if $z1 == 0 goto label2;

     label1:
        $r1 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r1.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i1);

        $r2 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i1);

     label2:
        $r4 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        virtualinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i1);

        $r5 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r5.<androidx.media3.extractor.ts.H264Reader$SampleReader: void startNalUnit(long,int,long)>(l0, i1, l2);

        return;
    }

    private void nalUnitData(byte[], int, int)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        byte[] r1;
        int i0, i1;
        boolean $z0, $z1;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r2, $r3, $r5;
        androidx.media3.extractor.ts.H264Reader$SampleReader $r4, $r6;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat>;

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        $z1 = virtualinvoke $r4.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean needsSpsPps()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

     label2:
        $r5 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        virtualinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        $r6 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r6.<androidx.media3.extractor.ts.H264Reader$SampleReader: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        return;
    }

    private void endNalUnit(long, int, int, long)
    {
        androidx.media3.extractor.ts.H264Reader r0;
        long l0, l3;
        int i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        androidx.media3.extractor.NalUnitUtil$SpsData r1, r62;
        androidx.media3.extractor.NalUnitUtil$PpsData r2, r63;
        java.lang.String r3, $r47;
        boolean $z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z12, $z13, z14;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r18, $r19, $r22, $r23, $r24, $r27, $r28, $r29, $r31, $r32, $r35, $r36, $r39, $r40, $r42, $r43, $r58, $r59, $r64;
        androidx.media3.extractor.ts.H264Reader$SampleReader $r8, $r21, $r26, $r56, $r57, $r60;
        byte[] $r11, $r13, $r20, $r25, $r33, $r34, $r37, $r38, $r41, $r44;
        androidx.media3.common.util.ParsableByteArray $r14, $r15, $r16;
        androidx.media3.extractor.ts.SeiReader $r17;
        java.util.ArrayList $r30, r61;
        androidx.media3.common.Format$Builder $r45, $r48, $r49, $r50, $r51, $r52, $r53, $r54;
        androidx.media3.extractor.TrackOutput $r46;
        float $f0;
        androidx.media3.common.Format $r55;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat>;

        if $z0 == 0 goto label1;

        $r60 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        $z12 = virtualinvoke $r60.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean needsSpsPps()>();

        if $z12 == 0 goto label4;

     label1:
        $r4 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        $r5 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        $z3 = r0.<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat>;

        if $z3 != 0 goto label2;

        $r28 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $z8 = virtualinvoke $r28.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z8 == 0 goto label4;

        $r29 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $z9 = virtualinvoke $r29.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z9 == 0 goto label4;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r61 = $r30;

        $r31 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $r33 = $r31.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r32 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $i7 = $r32.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $r34 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r33, $i7);

        interfaceinvoke r61.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $r37 = $r35.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r36 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $i8 = $r36.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $r38 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r37, $i8);

        interfaceinvoke r61.<java.util.List: boolean add(java.lang.Object)>($r38);

        $r39 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $r41 = $r39.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r40 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $i9 = $r40.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        r1 = staticinvoke <androidx.media3.extractor.NalUnitUtil: androidx.media3.extractor.NalUnitUtil$SpsData parseSpsNalUnit(byte[],int,int)>($r41, 3, $i9);

        $r42 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $r44 = $r42.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r43 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $i10 = $r43.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        r2 = staticinvoke <androidx.media3.extractor.NalUnitUtil: androidx.media3.extractor.NalUnitUtil$PpsData parsePpsNalUnit(byte[],int,int)>($r44, 3, $i10);

        $i13 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: int profileIdc>;

        $i12 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: int constraintsFlagsAndReservedZero2Bits>;

        $i11 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: int levelIdc>;

        r3 = staticinvoke <androidx.media3.common.util.CodecSpecificDataUtil: java.lang.String buildAvcCodecString(int,int,int)>($i13, $i12, $i11);

        $r46 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.TrackOutput output>;

        $r45 = new androidx.media3.common.Format$Builder;

        specialinvoke $r45.<androidx.media3.common.Format$Builder: void <init>()>();

        $r47 = r0.<androidx.media3.extractor.ts.H264Reader: java.lang.String formatId>;

        $r48 = virtualinvoke $r45.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("video/avc");

        $r50 = virtualinvoke $r49.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r3);

        $i14 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: int width>;

        $r51 = virtualinvoke $r50.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i14);

        $i15 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: int height>;

        $r52 = virtualinvoke $r51.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i15);

        $f0 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: float pixelWidthHeightRatio>;

        $r53 = virtualinvoke $r52.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPixelWidthHeightRatio(float)>($f0);

        $r54 = virtualinvoke $r53.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>(r61);

        $r55 = virtualinvoke $r54.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke $r46.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r55);

        r0.<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat> = 1;

        $r56 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r56.<androidx.media3.extractor.ts.H264Reader$SampleReader: void putSps(androidx.media3.extractor.NalUnitUtil$SpsData)>(r1);

        $r57 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r57.<androidx.media3.extractor.ts.H264Reader$SampleReader: void putPps(androidx.media3.extractor.NalUnitUtil$PpsData)>(r2);

        $r58 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r58.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r59 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r59.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        goto label4;

     label2:
        $r6 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $z4 = virtualinvoke $r6.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z4 == 0 goto label3;

        $r23 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $r25 = $r23.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r24 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $i6 = $r24.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        r62 = staticinvoke <androidx.media3.extractor.NalUnitUtil: androidx.media3.extractor.NalUnitUtil$SpsData parseSpsNalUnit(byte[],int,int)>($r25, 3, $i6);

        $r26 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r26.<androidx.media3.extractor.ts.H264Reader$SampleReader: void putSps(androidx.media3.extractor.NalUnitUtil$SpsData)>(r62);

        $r27 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r27.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        goto label4;

     label3:
        $r7 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $z5 = virtualinvoke $r7.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z5 == 0 goto label4;

        $r18 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $r20 = $r18.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r19 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $i5 = $r19.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        r63 = staticinvoke <androidx.media3.extractor.NalUnitUtil: androidx.media3.extractor.NalUnitUtil$PpsData parsePpsNalUnit(byte[],int,int)>($r20, 3, $i5);

        $r21 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        virtualinvoke $r21.<androidx.media3.extractor.ts.H264Reader$SampleReader: void putPps(androidx.media3.extractor.NalUnitUtil$PpsData)>(r63);

        $r22 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r22.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

     label4:
        $r64 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        $z13 = virtualinvoke $r64.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        if $z13 == 0 goto label5;

        $r9 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        $r11 = $r9.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r10 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        $i4 = $r10.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        i16 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int unescapeStream(byte[],int)>($r11, $i4);

        $r14 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        $r12 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sei>;

        $r13 = $r12.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        virtualinvoke $r14.<androidx.media3.common.util.ParsableByteArray: void reset(byte[],int)>($r13, i16);

        $r15 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        virtualinvoke $r15.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(4);

        $r17 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.SeiReader seiReader>;

        $r16 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        virtualinvoke $r17.<androidx.media3.extractor.ts.SeiReader: void consume(long,androidx.media3.common.util.ParsableByteArray)>(l3, $r16);

     label5:
        $r8 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        $z7 = r0.<androidx.media3.extractor.ts.H264Reader: boolean hasOutputFormat>;

        $z6 = r0.<androidx.media3.extractor.ts.H264Reader: boolean randomAccessIndicator>;

        z14 = virtualinvoke $r8.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean endNalUnit(long,int,boolean,boolean)>(l0, i1, $z7, $z6);

        if z14 == 0 goto label6;

        r0.<androidx.media3.extractor.ts.H264Reader: boolean randomAccessIndicator> = 0;

     label6:
        return;
    }

    private void assertTracksCreated()
    {
        androidx.media3.extractor.ts.H264Reader r0;
        androidx.media3.extractor.TrackOutput $r1;
        androidx.media3.extractor.ts.H264Reader$SampleReader $r3;

        r0 := @this: androidx.media3.extractor.ts.H264Reader;

        $r1 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.TrackOutput output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader: androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader>;

        staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        return;
    }

androidx.media3.extractor.ts.H264Reader$1
androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int SLICE_TYPE_I>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int SLICE_TYPE_ALL_I>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isComplete>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean hasSliceType>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: androidx.media3.extractor.NalUnitUtil$SpsData spsData>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int sliceType>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int frameNum>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picParameterSetId>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean fieldPicFlag>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlagPresent>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlag>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean idrPicFlag>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int idrPicId>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picOrderCntLsb>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCntBottom>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt0>
<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt1>
    private void <init>()
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void clear()
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean hasSliceType> = 0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isComplete> = 0;

        return;
    }

    public void setSliceType(int)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0;
        int i0;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        i0 := @parameter0: int;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int sliceType> = i0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean hasSliceType> = 1;

        return;
    }

    public void setAll(androidx.media3.extractor.NalUnitUtil$SpsData, int, int, int, int, boolean, boolean, boolean, boolean, int, int, int, int, int)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0;
        androidx.media3.extractor.NalUnitUtil$SpsData r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        boolean z0, z1, z2, z3;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        r1 := @parameter0: androidx.media3.extractor.NalUnitUtil$SpsData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        i6 := @parameter11: int;

        i7 := @parameter12: int;

        i8 := @parameter13: int;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: androidx.media3.extractor.NalUnitUtil$SpsData spsData> = r1;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc> = i0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int sliceType> = i1;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int frameNum> = i2;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picParameterSetId> = i3;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean fieldPicFlag> = z0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlagPresent> = z1;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlag> = z2;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean idrPicFlag> = z3;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int idrPicId> = i4;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picOrderCntLsb> = i5;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCntBottom> = i6;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt0> = i7;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt1> = i8;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isComplete> = 1;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean hasSliceType> = 1;

        return;
    }

    public boolean isISlice()
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean hasSliceType>;

        if $z0 == 0 goto label2;

        $i0 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int sliceType>;

        if $i0 == 7 goto label1;

        $i1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int sliceType>;

        if $i1 != 2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isFirstVclNalUnitOfPicture(androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0, r1;
        androidx.media3.extractor.NalUnitUtil$SpsData r2, r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Object $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        r1 := @parameter0: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isComplete>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isComplete>;

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $r4 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: androidx.media3.extractor.NalUnitUtil$SpsData spsData>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r4);

        r2 = (androidx.media3.extractor.NalUnitUtil$SpsData) $r5;

        $r6 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: androidx.media3.extractor.NalUnitUtil$SpsData spsData>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r6);

        r3 = (androidx.media3.extractor.NalUnitUtil$SpsData) $r7;

        $i1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int frameNum>;

        $i0 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int frameNum>;

        if $i1 != $i0 goto label7;

        $i3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picParameterSetId>;

        $i2 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picParameterSetId>;

        if $i3 != $i2 goto label7;

        $z3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean fieldPicFlag>;

        $z2 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean fieldPicFlag>;

        if $z3 != $z2 goto label7;

        $z4 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlagPresent>;

        if $z4 == 0 goto label3;

        $z6 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlagPresent>;

        if $z6 == 0 goto label3;

        $z8 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlag>;

        $z7 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlag>;

        if $z8 != $z7 goto label7;

     label3:
        $i19 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc>;

        $i20 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc>;

        if $i19 == $i20 goto label4;

        $i17 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc>;

        if $i17 == 0 goto label7;

        $i18 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc>;

        if $i18 == 0 goto label7;

     label4:
        $i4 = r2.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCountType>;

        if $i4 != 0 goto label5;

        $i12 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCountType>;

        if $i12 != 0 goto label5;

        $i14 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picOrderCntLsb>;

        $i13 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picOrderCntLsb>;

        if $i14 != $i13 goto label7;

        $i16 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCntBottom>;

        $i15 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCntBottom>;

        if $i16 != $i15 goto label7;

     label5:
        $i21 = r2.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCountType>;

        if $i21 != 1 goto label6;

        $i7 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCountType>;

        if $i7 != 1 goto label6;

        $i9 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt0>;

        $i8 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt0>;

        if $i9 != $i8 goto label7;

        $i11 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt1>;

        $i10 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt1>;

        if $i11 != $i10 goto label7;

     label6:
        $z9 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean idrPicFlag>;

        $z10 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean idrPicFlag>;

        if $z9 != $z10 goto label7;

        $z5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean idrPicFlag>;

        if $z5 == 0 goto label8;

        $i6 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int idrPicId>;

        $i5 = r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int idrPicId>;

        if $i6 == $i5 goto label8;

     label7:
        $z11 = 1;

        goto label9;

     label8:
        $z11 = 0;

     label9:
        return $z11;
    }

    void <init>(androidx.media3.extractor.ts.H264Reader$1)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0;
        androidx.media3.extractor.ts.H264Reader$1 r1;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        r1 := @parameter0: androidx.media3.extractor.ts.H264Reader$1;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void <init>()>();

        return;
    }

    static boolean access$100(androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData, androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0, r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        r1 := @parameter1: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        $z0 = specialinvoke r0.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isFirstVclNalUnitOfPicture(androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData)>(r1);

        return $z0;
    }

androidx.media3.extractor.ts.H264Reader$SampleReader
<androidx.media3.extractor.ts.H264Reader$SampleReader: int DEFAULT_BUFFER_SIZE>
<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.TrackOutput output>
<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean allowNonIdrKeyframes>
<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits>
<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray sps>
<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray pps>
<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>
<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer>
<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength>
<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>
<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitStartPosition>
<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling>
<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitTimeUs>
<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader>
<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>
<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean readingSample>
<androidx.media3.extractor.ts.H264Reader$SampleReader: long samplePosition>
<androidx.media3.extractor.ts.H264Reader$SampleReader: long sampleTimeUs>
<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe>
    public void <init>(androidx.media3.extractor.TrackOutput, boolean, boolean)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        androidx.media3.extractor.TrackOutput r1;
        boolean z0, z1;
        android.util.SparseArray $r2, $r3;
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData $r4, $r5;
        byte[] $r6, $r8;
        androidx.media3.extractor.ParsableNalUnitBitArray $r7;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        r1 := @parameter0: androidx.media3.extractor.TrackOutput;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.TrackOutput output> = r1;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean allowNonIdrKeyframes> = z0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits> = z1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray sps> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray pps> = $r3;

        $r4 = new androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        specialinvoke $r4.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void <init>(androidx.media3.extractor.ts.H264Reader$1)>(null);

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader> = $r4;

        $r5 = new androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData;

        specialinvoke $r5.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void <init>(androidx.media3.extractor.ts.H264Reader$1)>(null);

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader> = $r5;

        $r6 = newarray (byte)[128];

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer> = $r6;

        $r7 = new androidx.media3.extractor.ParsableNalUnitBitArray;

        $r8 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer>;

        specialinvoke $r7.<androidx.media3.extractor.ParsableNalUnitBitArray: void <init>(byte[],int,int)>($r8, 0, 0);

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray> = $r7;

        virtualinvoke r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: void reset()>();

        return;
    }

    public boolean needsSpsPps()
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits>;

        return $z0;
    }

    public void putSps(androidx.media3.extractor.NalUnitUtil$SpsData)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        androidx.media3.extractor.NalUnitUtil$SpsData r1;
        int $i0;
        android.util.SparseArray $r2;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        r1 := @parameter0: androidx.media3.extractor.NalUnitUtil$SpsData;

        $r2 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray sps>;

        $i0 = r1.<androidx.media3.extractor.NalUnitUtil$SpsData: int seqParameterSetId>;

        virtualinvoke $r2.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, r1);

        return;
    }

    public void putPps(androidx.media3.extractor.NalUnitUtil$PpsData)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        androidx.media3.extractor.NalUnitUtil$PpsData r1;
        int $i0;
        android.util.SparseArray $r2;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        r1 := @parameter0: androidx.media3.extractor.NalUnitUtil$PpsData;

        $r2 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray pps>;

        $i0 = r1.<androidx.media3.extractor.NalUnitUtil$PpsData: int picParameterSetId>;

        virtualinvoke $r2.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, r1);

        return;
    }

    public void reset()
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData $r1;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling> = 0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean readingSample> = 0;

        $r1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        virtualinvoke $r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void clear()>();

        return;
    }

    public void startNalUnit(long, int, long)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        long l0, l2;
        int i1, $i3, $i4, $i5, $i6;
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType> = i1;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitTimeUs> = l2;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitStartPosition> = l0;

        $z0 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean allowNonIdrKeyframes>;

        if $z0 == 0 goto label1;

        $i6 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i6 == 1 goto label2;

     label1:
        $z1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits>;

        if $z1 == 0 goto label3;

        $i3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i3 == 5 goto label2;

        $i4 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i4 == 1 goto label2;

        $i5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i5 != 2 goto label3;

     label2:
        r1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader>;

        $r2 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader> = $r2;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader> = r1;

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        virtualinvoke $r3.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void clear()>();

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength> = 0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling> = 1;

     label3:
        return;
    }

    public void appendToNalUnit(byte[], int, int)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        byte[] r1, $r4, $r5, $r6, $r42, $r43;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31;
        androidx.media3.extractor.NalUnitUtil$PpsData r2;
        androidx.media3.extractor.NalUnitUtil$SpsData r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z21, z22, z23, $z24;
        androidx.media3.extractor.ParsableNalUnitBitArray $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        android.util.SparseArray $r18, $r19, $r21;
        java.lang.Object $r20, $r22;
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData $r41, $r45;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling>;

        if $z1 != 0 goto label01;

        return;

     label01:
        i2 = i1 - i0;

        $r4 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer>;

        $i9 = lengthof $r4;

        $i7 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength>;

        $i8 = $i7 + i2;

        if $i9 >= $i8 goto label02;

        $r42 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer>;

        $i23 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength>;

        $i24 = $i23 + i2;

        $i25 = $i24 * 2;

        $r43 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r42, $i25);

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer> = $r43;

     label02:
        $r5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer>;

        $i10 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, $i10, i2);

        $i11 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength>;

        $i12 = $i11 + i2;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength> = $i12;

        $r7 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $r6 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: byte[] buffer>;

        $i13 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int bufferLength>;

        virtualinvoke $r7.<androidx.media3.extractor.ParsableNalUnitBitArray: void reset(byte[],int,int)>($r6, 0, $i13);

        $r8 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z2 = virtualinvoke $r8.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>(8);

        if $z2 != 0 goto label03;

        return;

     label03:
        $r9 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        virtualinvoke $r9.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        $r10 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i3 = virtualinvoke $r10.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(2);

        $r11 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        virtualinvoke $r11.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(5);

        $r12 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z3 = virtualinvoke $r12.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z3 != 0 goto label04;

        return;

     label04:
        $r13 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        virtualinvoke $r13.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        $r14 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z4 = virtualinvoke $r14.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z4 != 0 goto label05;

        return;

     label05:
        $r15 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i4 = virtualinvoke $r15.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        $z5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits>;

        if $z5 != 0 goto label06;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling> = 0;

        $r41 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        virtualinvoke $r41.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void setSliceType(int)>(i4);

        return;

     label06:
        $r16 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z6 = virtualinvoke $r16.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z6 != 0 goto label07;

        return;

     label07:
        $r17 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i5 = virtualinvoke $r17.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        $r18 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray pps>;

        $i15 = virtualinvoke $r18.<android.util.SparseArray: int indexOfKey(int)>(i5);

        if $i15 >= 0 goto label08;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling> = 0;

        return;

     label08:
        $r19 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray pps>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>(i5);

        r2 = (androidx.media3.extractor.NalUnitUtil$PpsData) $r20;

        $r21 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: android.util.SparseArray sps>;

        $i16 = r2.<androidx.media3.extractor.NalUnitUtil$PpsData: int seqParameterSetId>;

        $r22 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object get(int)>($i16);

        r3 = (androidx.media3.extractor.NalUnitUtil$SpsData) $r22;

        $z7 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: boolean separateColorPlaneFlag>;

        if $z7 == 0 goto label10;

        $r39 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z20 = virtualinvoke $r39.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>(2);

        if $z20 != 0 goto label09;

        return;

     label09:
        $r40 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        virtualinvoke $r40.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(2);

     label10:
        $r23 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $i17 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int frameNumLength>;

        $z8 = virtualinvoke $r23.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>($i17);

        if $z8 != 0 goto label11;

        return;

     label11:
        z21 = 0;

        z22 = 0;

        z23 = 0;

        $r24 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $i18 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int frameNumLength>;

        i6 = virtualinvoke $r24.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>($i18);

        $z9 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: boolean frameMbsOnlyFlag>;

        if $z9 != 0 goto label14;

        $r35 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z18 = virtualinvoke $r35.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>(1);

        if $z18 != 0 goto label12;

        return;

     label12:
        $r36 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        z21 = virtualinvoke $r36.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if z21 == 0 goto label14;

        $r37 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z19 = virtualinvoke $r37.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>(1);

        if $z19 != 0 goto label13;

        return;

     label13:
        $r38 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        z23 = virtualinvoke $r38.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        z22 = 1;

     label14:
        $i26 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i26 != 5 goto label15;

        $z24 = 1;

        goto label16;

     label15:
        $z24 = 0;

     label16:
        z0 = $z24;

        i27 = 0;

        if z0 == 0 goto label18;

        $r33 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z17 = virtualinvoke $r33.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z17 != 0 goto label17;

        return;

     label17:
        $r34 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i27 = virtualinvoke $r34.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

     label18:
        i28 = 0;

        i29 = 0;

        i30 = 0;

        i31 = 0;

        $i19 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCountType>;

        if $i19 != 0 goto label21;

        $r29 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $i21 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCntLsbLength>;

        $z14 = virtualinvoke $r29.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>($i21);

        if $z14 != 0 goto label19;

        return;

     label19:
        $r30 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $i22 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCntLsbLength>;

        i28 = virtualinvoke $r30.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>($i22);

        $z15 = r2.<androidx.media3.extractor.NalUnitUtil$PpsData: boolean bottomFieldPicOrderInFramePresentFlag>;

        if $z15 == 0 goto label24;

        if z21 != 0 goto label24;

        $r31 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z16 = virtualinvoke $r31.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z16 != 0 goto label20;

        return;

     label20:
        $r32 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i29 = virtualinvoke $r32.<androidx.media3.extractor.ParsableNalUnitBitArray: int readSignedExpGolombCodedInt()>();

        goto label24;

     label21:
        $i20 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int picOrderCountType>;

        if $i20 != 1 goto label24;

        $z10 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: boolean deltaPicOrderAlwaysZeroFlag>;

        if $z10 != 0 goto label24;

        $r25 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z11 = virtualinvoke $r25.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z11 != 0 goto label22;

        return;

     label22:
        $r26 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i30 = virtualinvoke $r26.<androidx.media3.extractor.ParsableNalUnitBitArray: int readSignedExpGolombCodedInt()>();

        $z12 = r2.<androidx.media3.extractor.NalUnitUtil$PpsData: boolean bottomFieldPicOrderInFramePresentFlag>;

        if $z12 == 0 goto label24;

        if z21 != 0 goto label24;

        $r27 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        $z13 = virtualinvoke $r27.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()>();

        if $z13 != 0 goto label23;

        return;

     label23:
        $r28 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ParsableNalUnitBitArray bitArray>;

        i31 = virtualinvoke $r28.<androidx.media3.extractor.ParsableNalUnitBitArray: int readSignedExpGolombCodedInt()>();

     label24:
        $r45 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        virtualinvoke $r45.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void setAll(androidx.media3.extractor.NalUnitUtil$SpsData,int,int,int,int,boolean,boolean,boolean,boolean,int,int,int,int,int)>(r3, i3, i4, i6, i5, z21, z22, z23, z0, i27, i28, i29, i30, i31);

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean isFilling> = 0;

        return;
    }

    public boolean endNalUnit(long, int, boolean, boolean)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        long l0, $l5, $l6, $l9, $l10;
        int i1, $i2, $i3, $i4, $i7, i8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10, $z11;
        androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData $r1, $r2, $r3;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i2 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i2 == 9 goto label1;

        $z3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits>;

        if $z3 == 0 goto label3;

        $r3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        $r2 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader>;

        $z4 = staticinvoke <androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean access$100(androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData,androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData)>($r3, $r2);

        if $z4 == 0 goto label3;

     label1:
        if z0 == 0 goto label2;

        $z2 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean readingSample>;

        if $z2 == 0 goto label2;

        $l5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitStartPosition>;

        $l6 = l0 - $l5;

        i8 = (int) $l6;

        $i7 = i1 + i8;

        specialinvoke r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: void outputSample(int)>($i7);

     label2:
        $l9 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitStartPosition>;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long samplePosition> = $l9;

        $l10 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitTimeUs>;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long sampleTimeUs> = $l10;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe> = 0;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean readingSample> = 1;

     label3:
        $z5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean allowNonIdrKeyframes>;

        if $z5 == 0 goto label4;

        $r1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader>;

        $z6 = virtualinvoke $r1.<androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isISlice()>();

        goto label5;

     label4:
        $z6 = z1;

     label5:
        z7 = $z6;

        $z8 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe>;

        $i3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i3 == 5 goto label6;

        if z7 == 0 goto label7;

        $i4 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: int nalUnitType>;

        if $i4 != 1 goto label7;

     label6:
        $z9 = 1;

        goto label8;

     label7:
        $z9 = 0;

     label8:
        $z10 = $z8 | $z9;

        r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe> = $z10;

        $z11 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe>;

        return $z11;
    }

    private void outputSample(int)
    {
        androidx.media3.extractor.ts.H264Reader$SampleReader r0;
        int i0, i2;
        byte b1, $b4, $b9;
        long $l3, $l5, $l6, $l7, $l8;
        boolean $z0;
        androidx.media3.extractor.TrackOutput $r1;

        r0 := @this: androidx.media3.extractor.ts.H264Reader$SampleReader;

        i0 := @parameter0: int;

        $l3 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long sampleTimeUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 != 0 goto label1;

        return;

     label1:
        $z0 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe>;

        if $z0 == 0 goto label2;

        $b9 = 1;

        goto label3;

     label2:
        $b9 = 0;

     label3:
        b1 = $b9;

        $l6 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long nalUnitStartPosition>;

        $l5 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long samplePosition>;

        $l7 = $l6 - $l5;

        i2 = (int) $l7;

        $r1 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: androidx.media3.extractor.TrackOutput output>;

        $l8 = r0.<androidx.media3.extractor.ts.H264Reader$SampleReader: long sampleTimeUs>;

        interfaceinvoke $r1.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l8, b1, i2, i0, null);

        return;
    }

