androidx.media3.extractor.avi.AviExtractor
<androidx.media3.extractor.avi.AviExtractor: java.lang.String TAG>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_RIFF>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_AVI_>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_LIST>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_avih>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_hdrl>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_strl>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_movi>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_idx1>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_JUNK>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_strf>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_strn>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_strh>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_auds>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_txts>
<androidx.media3.extractor.avi.AviExtractor: int FOURCC_vids>
<androidx.media3.extractor.avi.AviExtractor: int STATE_SKIPPING_TO_HDRL>
<androidx.media3.extractor.avi.AviExtractor: int STATE_READING_HDRL_HEADER>
<androidx.media3.extractor.avi.AviExtractor: int STATE_READING_HDRL_BODY>
<androidx.media3.extractor.avi.AviExtractor: int STATE_FINDING_MOVI_HEADER>
<androidx.media3.extractor.avi.AviExtractor: int STATE_FINDING_IDX1_HEADER>
<androidx.media3.extractor.avi.AviExtractor: int STATE_READING_IDX1_BODY>
<androidx.media3.extractor.avi.AviExtractor: int STATE_READING_SAMPLES>
<androidx.media3.extractor.avi.AviExtractor: int AVIIF_KEYFRAME>
<androidx.media3.extractor.avi.AviExtractor: long RELOAD_MINIMUM_SEEK_DISTANCE>
<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>
<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>
<androidx.media3.extractor.avi.AviExtractor: int state>
<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>
<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviMainHeaderChunk aviHeader>
<androidx.media3.extractor.avi.AviExtractor: long durationUs>
<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders>
<androidx.media3.extractor.avi.AviExtractor: long pendingReposition>
<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader currentChunkReader>
<androidx.media3.extractor.avi.AviExtractor: int hdrlSize>
<androidx.media3.extractor.avi.AviExtractor: long moviStart>
<androidx.media3.extractor.avi.AviExtractor: long moviEnd>
<androidx.media3.extractor.avi.AviExtractor: int idx1BodySize>
<androidx.media3.extractor.avi.AviExtractor: boolean seekMapHasBeenOutput>
    public void <init>()
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.common.util.ParsableByteArray $r1;
        androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder $r2;
        androidx.media3.extractor.DummyExtractorOutput $r3;
        androidx.media3.extractor.avi.ChunkReader[] $r4;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r1.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(12);

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch> = $r1;

        $r2 = new androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder;

        specialinvoke $r2.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: void <init>(androidx.media3.extractor.avi.AviExtractor$1)>(null);

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder> = $r2;

        $r3 = new androidx.media3.extractor.DummyExtractorOutput;

        specialinvoke $r3.<androidx.media3.extractor.DummyExtractorOutput: void <init>()>();

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput> = $r3;

        $r4 = newarray (androidx.media3.extractor.avi.ChunkReader)[0];

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders> = $r4;

        r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart> = -1L;

        r0.<androidx.media3.extractor.avi.AviExtractor: long moviEnd> = -1L;

        r0.<androidx.media3.extractor.avi.AviExtractor: int hdrlSize> = -1;

        r0.<androidx.media3.extractor.avi.AviExtractor: long durationUs> = -9223372036854775807L;

        return;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 0;

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput> = r1;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = -1L;

        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5, $r6, $r7;
        byte[] $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r2 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r3, 0, 12);

        $r4 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r5 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i0 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        if $i0 == 1179011410 goto label1;

        return 0;

     label1:
        $r6 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(4);

        $r7 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i1 = virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        if $i1 != 541677121 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i14, $i15, $i17, $i22, $i35, $i36, $i37, $i38;
        androidx.media3.common.util.ParsableByteArray r3, r4, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r17, $r29, $r31, $r32, r45, r47;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r6, $r8, $r13, $r28, $r30;
        long $l8, $l9, $l10, $l11, $l12, $l16, $l18, $l19, $l20, $l21, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l34;
        byte $b13, $b33;
        androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder $r16, $r18, $r19, $r20, $r21, $r33, $r34, $r35, $r38;
        androidx.media3.extractor.avi.AviMainHeaderChunk $r22, $r24;
        java.lang.Object $r23;
        androidx.media3.extractor.ExtractorOutput $r26;
        java.lang.StringBuilder $r37, $r39, r44;
        java.lang.String $r40;
        androidx.media3.common.ParserException $r41, $r42;
        androidx.media3.extractor.SeekMap$Unseekable r46;
        java.lang.AssertionError r48;
        java.lang.Throwable r49, r50;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        $z0 = specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: boolean resolvePendingReposition(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder)>(r1, r2);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $i4 = r0.<androidx.media3.extractor.avi.AviExtractor: int state>;

        tableswitch($i4)
        {
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label15;
            case 5: goto label18;
            case 6: goto label19;
            default: goto label20;
        };

     label02:
        $z3 = virtualinvoke r0.<androidx.media3.extractor.avi.AviExtractor: boolean sniff(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z3 == 0 goto label03;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(12);

        goto label04;

     label03:
        $r42 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("AVI Header List not found", null);

        r49 = (java.lang.Throwable) $r42;

        throw r49;

     label04:
        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 1;

        return 0;

     label05:
        $r29 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r30 = virtualinvoke $r29.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void readFully(byte[],int,int)>($r30, 0, 12);

        $r31 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r31.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r33 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $r32 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r33.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: void populateWithListHeaderFrom(androidx.media3.common.util.ParsableByteArray)>($r32);

        $r34 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i36 = $r34.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int listType>;

        if $i36 == 1819436136 goto label06;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hdrl expected, found: ");

        $r38 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i38 = $r38.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int listType>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>($r40, null);

        r50 = (java.lang.Throwable) $r41;

        throw r50;

     label06:
        $r35 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i37 = $r35.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int size>;

        r0.<androidx.media3.extractor.avi.AviExtractor: int hdrlSize> = $i37;

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 2;

        return 0;

     label07:
        $i35 = r0.<androidx.media3.extractor.avi.AviExtractor: int hdrlSize>;

        i0 = $i35 - 4;

        r45 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke r45.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(i0);

        r3 = r45;

        $r28 = virtualinvoke r3.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void readFully(byte[],int,int)>($r28, 0, i0);

        specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: void parseHdrlBody(androidx.media3.common.util.ParsableByteArray)>(r3);

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 3;

        return 0;

     label08:
        $l12 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        $b13 = $l12 cmp -1L;

        if $b13 == 0 goto label09;

        $l31 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l32 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        $b33 = $l31 cmp $l32;

        if $b33 == 0 goto label09;

        $l34 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l34;

        return 0;

     label09:
        $r12 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r13 = virtualinvoke $r12.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r13, 0, 12);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        $r14 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r14.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r16 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $r15 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r16.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: void populateFrom(androidx.media3.common.util.ParsableByteArray)>($r15);

        $r17 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i1 = virtualinvoke $r17.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        $r18 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i14 = $r18.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int chunkType>;

        if $i14 != 1179011410 goto label10;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(12);

        return 0;

     label10:
        $r19 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i15 = $r19.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int chunkType>;

        if $i15 != 1414744396 goto label11;

        if i1 == 1769369453 goto label12;

     label11:
        $l16 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r20 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i17 = $r20.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int size>;

        $l18 = (long) $i17;

        $l19 = $l16 + $l18;

        $l20 = $l19 + 8L;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l20;

        return 0;

     label12:
        $l21 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart> = $l21;

        $l24 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        $r21 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder>;

        $i22 = $r21.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int size>;

        $l23 = (long) $i22;

        $l25 = $l24 + $l23;

        $l26 = $l25 + 8L;

        r0.<androidx.media3.extractor.avi.AviExtractor: long moviEnd> = $l26;

        $z1 = r0.<androidx.media3.extractor.avi.AviExtractor: boolean seekMapHasBeenOutput>;

        if $z1 != 0 goto label14;

        $r22 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviMainHeaderChunk aviHeader>;

        $r23 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r22);

        $r24 = (androidx.media3.extractor.avi.AviMainHeaderChunk) $r23;

        $z2 = virtualinvoke $r24.<androidx.media3.extractor.avi.AviMainHeaderChunk: boolean hasIndex()>();

        if $z2 == 0 goto label13;

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 4;

        $l30 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviEnd>;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l30;

        return 0;

     label13:
        $r26 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        r46 = new androidx.media3.extractor.SeekMap$Unseekable;

        $l29 = r0.<androidx.media3.extractor.avi.AviExtractor: long durationUs>;

        specialinvoke r46.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>($l29);

        interfaceinvoke $r26.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>(r46);

        r0.<androidx.media3.extractor.avi.AviExtractor: boolean seekMapHasBeenOutput> = 1;

     label14:
        $l27 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l28 = $l27 + 12L;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l28;

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 6;

        return 0;

     label15:
        $r7 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r8 = virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void readFully(byte[],int,int)>($r8, 0, 8);

        $r9 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r10 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i2 = virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        $r11 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i3 = virtualinvoke $r11.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        if i2 != 829973609 goto label16;

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 5;

        r0.<androidx.media3.extractor.avi.AviExtractor: int idx1BodySize> = i3;

        goto label17;

     label16:
        $l9 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l10 = (long) i3;

        $l11 = $l9 + $l10;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l11;

     label17:
        return 0;

     label18:
        r47 = new androidx.media3.common.util.ParsableByteArray;

        $i6 = r0.<androidx.media3.extractor.avi.AviExtractor: int idx1BodySize>;

        specialinvoke r47.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>($i6);

        r4 = r47;

        $r6 = virtualinvoke r4.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i7 = r0.<androidx.media3.extractor.avi.AviExtractor: int idx1BodySize>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void readFully(byte[],int,int)>($r6, 0, $i7);

        specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: void parseIdx1Body(androidx.media3.common.util.ParsableByteArray)>(r4);

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 6;

        $l8 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l8;

        return 0;

     label19:
        $i5 = specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: int readMoviChunks(androidx.media3.extractor.ExtractorInput)>(r1);

        return $i5;

     label20:
        r48 = new java.lang.AssertionError;

        specialinvoke r48.<java.lang.AssertionError: void <init>()>();

        throw r48;
    }

    public void seek(long, long)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        long l0, l1;
        androidx.media3.extractor.avi.ChunkReader[] r1, $r3;
        int i2, $i4, i5;
        androidx.media3.extractor.avi.ChunkReader r2;
        byte $b3;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = -1L;

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader currentChunkReader> = null;

        r1 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders>;

        i2 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i2 goto label2;

        r2 = r1[i5];

        virtualinvoke r2.<androidx.media3.extractor.avi.ChunkReader: void seekToPosition(long)>(l0);

        i5 = i5 + 1;

        goto label1;

     label2:
        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label5;

        $r3 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders>;

        $i4 = lengthof $r3;

        if $i4 != 0 goto label3;

        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 0;

        goto label4;

     label3:
        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 3;

     label4:
        return;

     label5:
        r0.<androidx.media3.extractor.avi.AviExtractor: int state> = 6;

        return;
    }

    public void release()
    {
        androidx.media3.extractor.avi.AviExtractor r0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        return;
    }

    private boolean resolvePendingReposition(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        long l0, $l1, $l3, $l5, $l6, $l7, $l9, $l10;
        byte $b2, $b4, $b8;
        int $i11;
        boolean z0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        z0 = 0;

        $l1 = r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label3;

        l0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l3 = r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition>;

        $b4 = $l3 cmp l0;

        if $b4 < 0 goto label1;

        $l7 = r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition>;

        $l6 = l0 + 262144L;

        $b8 = $l7 cmp $l6;

        if $b8 <= 0 goto label2;

     label1:
        $l5 = r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition>;

        r2.<androidx.media3.extractor.PositionHolder: long position> = $l5;

        z0 = 1;

        goto label3;

     label2:
        $l9 = r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition>;

        $l10 = $l9 - l0;

        $i11 = (int) $l10;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i11);

     label3:
        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = -1L;

        return z0;
    }

    private void parseHdrlBody(androidx.media3.common.util.ParsableByteArray) throws java.io.IOException
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.common.util.ParsableByteArray r1;
        androidx.media3.extractor.avi.ListChunk r2, r7;
        androidx.media3.extractor.avi.AviMainHeaderChunk r3;
        java.util.ArrayList r4, r24;
        com.google.common.collect.UnmodifiableIterator r5;
        androidx.media3.extractor.avi.AviChunk r6, $r9;
        androidx.media3.extractor.avi.ChunkReader r8;
        int $i0, $i1, $i2, $i6, $i7, $i8, i9;
        long $l3, $l4, $l5;
        com.google.common.collect.ImmutableList $r11;
        boolean $z0;
        androidx.media3.extractor.avi.ChunkReader[] $r12, $r14;
        java.lang.Object[] $r13;
        androidx.media3.extractor.ExtractorOutput $r15;
        java.lang.Object $r16;
        androidx.media3.common.ParserException $r17, $r22;
        java.lang.StringBuilder $r19, $r20, r23;
        java.lang.String $r21;
        java.lang.Throwable r25, r26;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        r2 = staticinvoke <androidx.media3.extractor.avi.ListChunk: androidx.media3.extractor.avi.ListChunk parseFrom(int,androidx.media3.common.util.ParsableByteArray)>(1819436136, r1);

        $i0 = virtualinvoke r2.<androidx.media3.extractor.avi.ListChunk: int getType()>();

        if $i0 == 1819436136 goto label1;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header list type ");

        $i8 = virtualinvoke r2.<androidx.media3.extractor.avi.ListChunk: int getType()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>($r21, null);

        r25 = (java.lang.Throwable) $r22;

        throw r25;

     label1:
        $r9 = virtualinvoke r2.<androidx.media3.extractor.avi.ListChunk: androidx.media3.extractor.avi.AviChunk getChild(java.lang.Class)>(class "Landroidx/media3/extractor/avi/AviMainHeaderChunk;");

        r3 = (androidx.media3.extractor.avi.AviMainHeaderChunk) $r9;

        if r3 != null goto label2;

        $r17 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("AviHeader not found", null);

        r26 = (java.lang.Throwable) $r17;

        throw r26;

     label2:
        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.AviMainHeaderChunk aviHeader> = r3;

        $i1 = r3.<androidx.media3.extractor.avi.AviMainHeaderChunk: int totalFrames>;

        $l4 = (long) $i1;

        $i2 = r3.<androidx.media3.extractor.avi.AviMainHeaderChunk: int frameDurationUs>;

        $l3 = (long) $i2;

        $l5 = $l4 * $l3;

        r0.<androidx.media3.extractor.avi.AviExtractor: long durationUs> = $l5;

        r24 = new java.util.ArrayList;

        specialinvoke r24.<java.util.ArrayList: void <init>()>();

        r4 = r24;

        i9 = 0;

        $r11 = r2.<androidx.media3.extractor.avi.ListChunk: com.google.common.collect.ImmutableList children>;

        r5 = virtualinvoke $r11.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.media3.extractor.avi.AviChunk) $r16;

        $i6 = interfaceinvoke r6.<androidx.media3.extractor.avi.AviChunk: int getType()>();

        if $i6 != 1819440243 goto label4;

        r7 = (androidx.media3.extractor.avi.ListChunk) r6;

        $i7 = i9;

        i9 = i9 + 1;

        r8 = specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader processStreamList(androidx.media3.extractor.avi.ListChunk,int)>(r7, $i7);

        if r8 == null goto label4;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label4:
        goto label3;

     label5:
        $r12 = newarray (androidx.media3.extractor.avi.ChunkReader)[0];

        $r13 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (androidx.media3.extractor.avi.ChunkReader[]) $r13;

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders> = $r14;

        $r15 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        interfaceinvoke $r15.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        return;
    }

    private void parseIdx1Body(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.common.util.ParsableByteArray r1;
        long l0, $l1, $l3, l9;
        androidx.media3.extractor.avi.ChunkReader r2, r3;
        androidx.media3.extractor.avi.AviExtractor$AviSeekMap $r4;
        androidx.media3.extractor.ExtractorOutput $r5;
        int $i2, $i5, $i6, i7, i8, i10, i11;
        androidx.media3.extractor.avi.ChunkReader[] r6;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        l0 = specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: long peekSeekOffset(androidx.media3.common.util.ParsableByteArray)>(r1);

     label1:
        $i6 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i6 < 16 goto label4;

        i7 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        i8 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        $i2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        $l3 = (long) $i2;

        l9 = $l3 + l0;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        r3 = specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader getChunkReader(int)>(i7);

        if r3 != null goto label2;

        goto label1;

     label2:
        $i5 = i8 & 16;

        if $i5 != 16 goto label3;

        virtualinvoke r3.<androidx.media3.extractor.avi.ChunkReader: void appendKeyFrameToIndex(long)>(l9);

     label3:
        virtualinvoke r3.<androidx.media3.extractor.avi.ChunkReader: void incrementIndexChunkCount()>();

        goto label1;

     label4:
        r6 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders>;

        i10 = lengthof r6;

        i11 = 0;

     label5:
        if i11 >= i10 goto label6;

        r2 = r6[i11];

        virtualinvoke r2.<androidx.media3.extractor.avi.ChunkReader: void compactIndex()>();

        i11 = i11 + 1;

        goto label5;

     label6:
        r0.<androidx.media3.extractor.avi.AviExtractor: boolean seekMapHasBeenOutput> = 1;

        $r5 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r4 = new androidx.media3.extractor.avi.AviExtractor$AviSeekMap;

        $l1 = r0.<androidx.media3.extractor.avi.AviExtractor: long durationUs>;

        specialinvoke $r4.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: void <init>(androidx.media3.extractor.avi.AviExtractor,long)>(r0, $l1);

        interfaceinvoke $r5.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r4);

        return;
    }

    private long peekSeekOffset(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, i1, $i3;
        long l2, $l4, $l5, $l7, $l8;
        byte $b6;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        $i3 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i3 >= 16 goto label1;

        return 0L;

     label1:
        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(8);

        i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        $l5 = (long) i1;

        $l4 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        $b6 = $l5 cmp $l4;

        if $b6 <= 0 goto label2;

        $l8 = 0L;

        goto label3;

     label2:
        $l7 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviStart>;

        $l8 = $l7 + 8L;

     label3:
        l2 = $l8;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i0);

        return l2;
    }

    private androidx.media3.extractor.avi.ChunkReader getChunkReader(int)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        int i0, i1, i2;
        androidx.media3.extractor.avi.ChunkReader[] r1;
        androidx.media3.extractor.avi.ChunkReader r2;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        i0 := @parameter0: int;

        r1 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r2 = r1[i2];

        $z0 = virtualinvoke r2.<androidx.media3.extractor.avi.ChunkReader: boolean handlesChunkId(int)>(i0);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private int readMoviChunks(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, i11, i13;
        androidx.media3.extractor.avi.ChunkReader r2, $r3, $r12;
        long $l1, $l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10;
        byte $b3, $b12;
        androidx.media3.common.util.ParsableByteArray $r4, $r6, $r7, $r8, $r9, $r10;
        byte[] $r5;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $l1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l2 = r0.<androidx.media3.extractor.avi.AviExtractor: long moviEnd>;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        return -1;

     label1:
        $r3 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader currentChunkReader>;

        if $r3 == null goto label2;

        $r12 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader currentChunkReader>;

        $z0 = virtualinvoke $r12.<androidx.media3.extractor.avi.ChunkReader: boolean onChunkData(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z0 == 0 goto label8;

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader currentChunkReader> = null;

        goto label8;

     label2:
        staticinvoke <androidx.media3.extractor.avi.AviExtractor: void alignInputToEvenPosition(androidx.media3.extractor.ExtractorInput)>(r1);

        $r4 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r5 = virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r5, 0, 12);

        $r6 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r7 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i0 = virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        if i0 != 1414744396 goto label5;

        $r9 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(8);

        $r10 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i11 = virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        if i11 != 1769369453 goto label3;

        $b12 = 12;

        goto label4;

     label3:
        $b12 = 8;

     label4:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($b12);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        return 0;

     label5:
        $r8 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i13 = virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        if i0 != 1263424842 goto label6;

        $l7 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l8 = (long) i13;

        $l9 = $l7 + $l8;

        $l10 = $l9 + 8L;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l10;

        return 0;

     label6:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(8);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        r2 = specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader getChunkReader(int)>(i0);

        if r2 != null goto label7;

        $l4 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l5 = (long) i13;

        $l6 = $l4 + $l5;

        r0.<androidx.media3.extractor.avi.AviExtractor: long pendingReposition> = $l6;

        return 0;

     label7:
        virtualinvoke r2.<androidx.media3.extractor.avi.ChunkReader: void onChunkStart(int)>(i13);

        r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader currentChunkReader> = r2;

     label8:
        return 0;
    }

    private androidx.media3.extractor.avi.ChunkReader processStreamList(androidx.media3.extractor.avi.ListChunk, int)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.avi.ListChunk r1;
        int i0, i2, i3, $i4;
        androidx.media3.extractor.avi.AviStreamHeaderChunk r2;
        androidx.media3.extractor.avi.StreamFormatChunk r3;
        long l1;
        androidx.media3.common.Format r4, $r15;
        androidx.media3.common.Format$Builder r5;
        androidx.media3.extractor.avi.StreamNameChunk r6;
        androidx.media3.extractor.TrackOutput r7;
        androidx.media3.extractor.avi.ChunkReader r8, $r16;
        androidx.media3.extractor.avi.AviChunk $r9, $r10, $r12;
        java.lang.String $r13, $r17;
        androidx.media3.extractor.ExtractorOutput $r14;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor;

        r1 := @parameter0: androidx.media3.extractor.avi.ListChunk;

        i0 := @parameter1: int;

        $r9 = virtualinvoke r1.<androidx.media3.extractor.avi.ListChunk: androidx.media3.extractor.avi.AviChunk getChild(java.lang.Class)>(class "Landroidx/media3/extractor/avi/AviStreamHeaderChunk;");

        r2 = (androidx.media3.extractor.avi.AviStreamHeaderChunk) $r9;

        $r10 = virtualinvoke r1.<androidx.media3.extractor.avi.ListChunk: androidx.media3.extractor.avi.AviChunk getChild(java.lang.Class)>(class "Landroidx/media3/extractor/avi/StreamFormatChunk;");

        r3 = (androidx.media3.extractor.avi.StreamFormatChunk) $r10;

        if r2 != null goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("AviExtractor", "Missing Stream Header");

        return null;

     label1:
        if r3 != null goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("AviExtractor", "Missing Stream Format");

        return null;

     label2:
        l1 = virtualinvoke r2.<androidx.media3.extractor.avi.AviStreamHeaderChunk: long getDurationUs()>();

        r4 = r3.<androidx.media3.extractor.avi.StreamFormatChunk: androidx.media3.common.Format format>;

        r5 = virtualinvoke r4.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        virtualinvoke r5.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(int)>(i0);

        i2 = r2.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int suggestedBufferSize>;

        if i2 == 0 goto label3;

        virtualinvoke r5.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMaxInputSize(int)>(i2);

     label3:
        $r12 = virtualinvoke r1.<androidx.media3.extractor.avi.ListChunk: androidx.media3.extractor.avi.AviChunk getChild(java.lang.Class)>(class "Landroidx/media3/extractor/avi/StreamNameChunk;");

        r6 = (androidx.media3.extractor.avi.StreamNameChunk) $r12;

        if r6 == null goto label4;

        $r17 = r6.<androidx.media3.extractor.avi.StreamNameChunk: java.lang.String name>;

        virtualinvoke r5.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>($r17);

     label4:
        $r13 = r4.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        i3 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r13);

        if i3 == 1 goto label5;

        if i3 != 2 goto label6;

     label5:
        $r14 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        r7 = interfaceinvoke $r14.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(i0, i3);

        $r15 = virtualinvoke r5.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke r7.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r15);

        $r16 = new androidx.media3.extractor.avi.ChunkReader;

        $i4 = r2.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int length>;

        specialinvoke $r16.<androidx.media3.extractor.avi.ChunkReader: void <init>(int,int,long,int,androidx.media3.extractor.TrackOutput)>(i0, i3, l1, $i4, r7);

        r8 = $r16;

        r0.<androidx.media3.extractor.avi.AviExtractor: long durationUs> = l1;

        return r8;

     label6:
        return null;
    }

    private static void alignInputToEvenPosition(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ExtractorInput r0;
        long $l0, $l1;
        byte $b2;

        r0 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $l0 = interfaceinvoke r0.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l1 = $l0 & 1L;

        $b2 = $l1 cmp 1L;

        if $b2 != 0 goto label1;

        interfaceinvoke r0.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(1);

     label1:
        return;
    }

    static androidx.media3.extractor.avi.ChunkReader[] access$100(androidx.media3.extractor.avi.AviExtractor)
    {
        androidx.media3.extractor.avi.AviExtractor r0;
        androidx.media3.extractor.avi.ChunkReader[] $r1;

        r0 := @parameter0: androidx.media3.extractor.avi.AviExtractor;

        $r1 = r0.<androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] chunkReaders>;

        return $r1;
    }

androidx.media3.extractor.avi.AviExtractor$1
androidx.media3.extractor.avi.AviExtractor$AviSeekMap
<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: long durationUs>
<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: androidx.media3.extractor.avi.AviExtractor this$0>
    public void <init>(androidx.media3.extractor.avi.AviExtractor, long)
    {
        androidx.media3.extractor.avi.AviExtractor$AviSeekMap r0;
        androidx.media3.extractor.avi.AviExtractor r1;
        long l0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$AviSeekMap;

        r1 := @parameter0: androidx.media3.extractor.avi.AviExtractor;

        l0 := @parameter1: long;

        r0.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: androidx.media3.extractor.avi.AviExtractor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: long durationUs> = l0;

        return;
    }

    public boolean isSeekable()
    {
        androidx.media3.extractor.avi.AviExtractor$AviSeekMap r0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$AviSeekMap;

        return 1;
    }

    public long getDurationUs()
    {
        androidx.media3.extractor.avi.AviExtractor$AviSeekMap r0;
        long $l0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$AviSeekMap;

        $l0 = r0.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: long durationUs>;

        return $l0;
    }

    public androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long)
    {
        androidx.media3.extractor.avi.AviExtractor$AviSeekMap r0;
        long l0, $l2, $l3;
        androidx.media3.extractor.SeekMap$SeekPoints r1, r12;
        androidx.media3.extractor.avi.AviExtractor $r2, $r5, $r7;
        androidx.media3.extractor.avi.ChunkReader[] $r3, $r6, $r8;
        androidx.media3.extractor.avi.ChunkReader $r4, $r9;
        int $i1, i5;
        androidx.media3.extractor.SeekPoint $r10, $r11;
        byte $b4;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$AviSeekMap;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: androidx.media3.extractor.avi.AviExtractor this$0>;

        $r3 = staticinvoke <androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] access$100(androidx.media3.extractor.avi.AviExtractor)>($r2);

        $r4 = $r3[0];

        r12 = virtualinvoke $r4.<androidx.media3.extractor.avi.ChunkReader: androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long)>(l0);

        i5 = 1;

     label1:
        $r5 = r0.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: androidx.media3.extractor.avi.AviExtractor this$0>;

        $r6 = staticinvoke <androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] access$100(androidx.media3.extractor.avi.AviExtractor)>($r5);

        $i1 = lengthof $r6;

        if i5 >= $i1 goto label3;

        $r7 = r0.<androidx.media3.extractor.avi.AviExtractor$AviSeekMap: androidx.media3.extractor.avi.AviExtractor this$0>;

        $r8 = staticinvoke <androidx.media3.extractor.avi.AviExtractor: androidx.media3.extractor.avi.ChunkReader[] access$100(androidx.media3.extractor.avi.AviExtractor)>($r7);

        $r9 = $r8[i5];

        r1 = virtualinvoke $r9.<androidx.media3.extractor.avi.ChunkReader: androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long)>(l0);

        $r10 = r1.<androidx.media3.extractor.SeekMap$SeekPoints: androidx.media3.extractor.SeekPoint first>;

        $l3 = $r10.<androidx.media3.extractor.SeekPoint: long position>;

        $r11 = r12.<androidx.media3.extractor.SeekMap$SeekPoints: androidx.media3.extractor.SeekPoint first>;

        $l2 = $r11.<androidx.media3.extractor.SeekPoint: long position>;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label2;

        r12 = r1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return r12;
    }

androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder
<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int chunkType>
<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int size>
<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int listType>
    private void <init>()
    {
        androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder r0;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void populateWithListHeaderFrom(androidx.media3.common.util.ParsableByteArray) throws androidx.media3.common.ParserException
    {
        androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, r7;
        java.lang.String $r5;
        androidx.media3.common.ParserException $r6;
        java.lang.Throwable r8;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        virtualinvoke r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: void populateFrom(androidx.media3.common.util.ParsableByteArray)>(r1);

        $i0 = r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int chunkType>;

        if $i0 == 1414744396 goto label1;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST expected, found: ");

        $i2 = r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int chunkType>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>($r5, null);

        r8 = (java.lang.Throwable) $r6;

        throw r8;

     label1:
        $i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int listType> = $i1;

        return;
    }

    public void populateFrom(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int $i0, $i1;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        $i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int chunkType> = $i0;

        $i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int size> = $i1;

        r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: int listType> = 0;

        return;
    }

    void <init>(androidx.media3.extractor.avi.AviExtractor$1)
    {
        androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder r0;
        androidx.media3.extractor.avi.AviExtractor$1 r1;

        r0 := @this: androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder;

        r1 := @parameter0: androidx.media3.extractor.avi.AviExtractor$1;

        specialinvoke r0.<androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder: void <init>()>();

        return;
    }

