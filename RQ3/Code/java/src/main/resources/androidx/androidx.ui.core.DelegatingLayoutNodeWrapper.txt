androidx.ui.core.DelegatingLayoutNodeWrapper
<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrapped>
<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.Modifier$Element modifier>
<androidx.ui.core.DelegatingLayoutNodeWrapper: boolean _isAttached>
    public void <init>(androidx.ui.core.LayoutNodeWrapper, androidx.ui.core.Modifier$Element)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper r1, $r4, $r5;
        androidx.ui.core.Modifier$Element r2;
        androidx.ui.core.LayoutNode $r3;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.LayoutNodeWrapper;

        r2 := @parameter1: androidx.ui.core.Modifier$Element;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "wrapped");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "modifier");

        $r3 = virtualinvoke r1.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        specialinvoke r0.<androidx.ui.core.LayoutNodeWrapper: void <init>(androidx.ui.core.LayoutNode)>($r3);

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrapped> = r1;

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.Modifier$Element modifier> = r2;

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: boolean _isAttached> = 1;

        $r4 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r5 = (androidx.ui.core.LayoutNodeWrapper) r0;

        virtualinvoke $r4.<androidx.ui.core.LayoutNodeWrapper: void setWrappedBy$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)>($r5);

        return;
    }

    public androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrapped>;

        return $r1;
    }

    public final androidx.ui.core.Modifier$Element getModifier()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.Modifier$Element $r1;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.Modifier$Element modifier>;

        return $r1;
    }

    public java.util.Set getProvidedAlignmentLines()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        java.util.Set $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: java.util.Set getProvidedAlignmentLines()>();

        return $r2;
    }

    public boolean isAttached()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        boolean $z0, $z1, $z2;
        androidx.ui.core.LayoutNode $r1;
        androidx.ui.core.ComponentNode $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $z0 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: boolean _isAttached>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r2 = (androidx.ui.core.ComponentNode) $r1;

        $z1 = staticinvoke <androidx.ui.core.ComponentNodesKt: boolean isAttached(androidx.ui.core.ComponentNode)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public androidx.ui.core.MeasureScope getMeasureScope()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        androidx.ui.core.MeasureScope $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope getMeasureScope()>();

        return $r2;
    }

    public void draw(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.graphics.Canvas r1, r3;
        androidx.ui.core.LayoutNodeWrapper r2, $r4;
        long l0, l1, $l2, $l4;
        float f0, $f1, $f2, f3;
        int $i3, $i5, $i6, $i7;
        androidx.ui.unit.IntPxPosition r5, $r6;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r2 = (androidx.ui.core.LayoutNodeWrapper) r0;

        r5 = virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        l0 = virtualinvoke r5.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l2 = l0 >> 32;

        $i6 = (int) $l2;

        $i3 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i6);

        f0 = (float) $i3;

        $r6 = virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        l1 = virtualinvoke $r6.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l4 = l1 & 4294967295L;

        $i7 = (int) $l4;

        $i5 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i7);

        f3 = (float) $i5;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>(f0, f3);

        r3 = r1;

        $r4 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        virtualinvoke $r4.<androidx.ui.core.LayoutNodeWrapper: void draw(androidx.ui.graphics.Canvas)>(r1);

        $f2 = neg f0;

        $f1 = neg f3;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>($f2, $f1);

        return;
    }

    public boolean hitTest(androidx.ui.unit.PxPosition, java.util.List)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.unit.PxPosition r1;
        java.util.List r2;
        boolean $z0, $z1;
        androidx.ui.core.LayoutNodeWrapper $r3;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointerPositionRelativeToScreen");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "hitPointerInputFilters");

        $z0 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: boolean isGlobalPointerInBounds(androidx.ui.unit.PxPosition)>(r1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $z1 = virtualinvoke $r3.<androidx.ui.core.LayoutNodeWrapper: boolean hitTest(androidx.ui.unit.PxPosition,java.util.List)>(r1, r2);

        return $z1;

     label1:
        return 0;
    }

    public androidx.ui.unit.IntPx get(androidx.ui.core.AlignmentLine)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.AlignmentLine r1;
        int i0, $i4, $i5, $i9, $i11, i14, $i15, i17, $i18;
        long l1, l2, l3, $l6, $l7, $l8, $l10, l12, l13, l16;
        androidx.ui.core.LayoutNodeWrapper r2, $r4;
        androidx.ui.unit.PxPosition r3, $r5, $r10;
        float $f0, f1, f2, $f3, $f4, f5, $f6, $f7, f8;
        boolean $z0, $z1, $z2, z7, z11, z17;
        androidx.ui.unit.IntPx$Companion $r6, $r7;
        androidx.ui.unit.IntPx $r8, r9, $r12;
        kotlin.jvm.internal.FloatCompanionObject r11, r13;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "line");

        $r4 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        r9 = virtualinvoke $r4.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPx get(androidx.ui.core.AlignmentLine)>(r1);

        if r9 != null goto label1;

        $r8 = (androidx.ui.unit.IntPx) null;

        return $r8;

     label1:
        i0 = virtualinvoke r9.<androidx.ui.unit.IntPx: int unbox-impl()>();

        $f0 = (float) i0;

        f1 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f0);

        r2 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        f2 = f1;

        z7 = 0;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l12 = (long) $i4;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l1 = (long) $i5;

        $l7 = l12 << 32;

        $l6 = l1 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r5 = new androidx.ui.unit.PxPosition;

        specialinvoke $r5.<androidx.ui.unit.PxPosition: void <init>(long)>(l3);

        r3 = $r5;

        $r10 = virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)>(r3);

        $z0 = r1 instanceof androidx.ui.core.HorizontalAlignmentLine;

        if $z0 == 0 goto label4;

        l13 = virtualinvoke $r10.<androidx.ui.unit.PxPosition: long getValue()>();

        r11 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l10 = l13 & 4294967295L;

        i14 = (int) $l10;

        z11 = 0;

        $f3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i14);

        $f4 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        f5 = $f4;

        $z2 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f5);

        if $z2 == 0 goto label2;

        $r7 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i15 = virtualinvoke $r7.<androidx.ui.unit.IntPx$Companion: int getInfinity()>();

        goto label3;

     label2:
        $i11 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f4);

        $i15 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i11);

     label3:
        $r12 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i15);

        goto label7;

     label4:
        l16 = virtualinvoke $r10.<androidx.ui.unit.PxPosition: long getValue()>();

        r13 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l8 = l16 & 4294967295L;

        i17 = (int) $l8;

        z17 = 0;

        $f6 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i17);

        $f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f6);

        f8 = $f7;

        $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f8);

        if $z1 == 0 goto label5;

        $r6 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i18 = virtualinvoke $r6.<androidx.ui.unit.IntPx$Companion: int getInfinity()>();

        goto label6;

     label5:
        $i9 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f7);

        $i18 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i9);

     label6:
        $r12 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i18);

     label7:
        return $r12;
    }

    protected void place(androidx.ui.unit.IntPxPosition)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.unit.IntPxPosition r1;
        androidx.ui.core.InnerPlacementScope r2, r5;
        boolean z0, z1;
        int i0, $i2, i3;
        androidx.ui.unit.IntPxSize r4;
        long l1, $l4;
        androidx.ui.core.MeasureScope $r6, $r9;
        androidx.ui.core.LayoutDirection $r7, $r10;
        androidx.ui.core.MeasureScope$MeasureResult $r8;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.IntPxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void setPosition$ui_platform_release(androidx.ui.unit.IntPxPosition)>(r1);

        r2 = <androidx.ui.core.InnerPlacementScope: androidx.ui.core.InnerPlacementScope INSTANCE>;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.MeasureScope getMeasureScope()>();

        $r7 = virtualinvoke $r6.<androidx.ui.core.MeasureScope: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        virtualinvoke r2.<androidx.ui.core.InnerPlacementScope: void setParentLayoutDirection(androidx.ui.core.LayoutDirection)>($r7);

        i0 = virtualinvoke r2.<androidx.ui.core.InnerPlacementScope: int getParentWidth()>();

        r4 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        r5 = r2;

        l1 = virtualinvoke r4.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l4 = l1 >> 32;

        $i2 = (int) $l4;

        i3 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i2);

        virtualinvoke r5.<androidx.ui.core.InnerPlacementScope: void setParentWidth-gshw56o(int)>(i3);

        $r8 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        $r9 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.MeasureScope getMeasureScope()>();

        $r10 = virtualinvoke $r9.<androidx.ui.core.MeasureScope: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        interfaceinvoke $r8.<androidx.ui.core.MeasureScope$MeasureResult: void placeChildren(androidx.ui.core.LayoutDirection)>($r10);

        virtualinvoke r2.<androidx.ui.core.InnerPlacementScope: void setParentWidth-gshw56o(int)>(i0);

        return;
    }

    public androidx.ui.core.Placeable performMeasure(androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.Constraints r1;
        androidx.ui.core.LayoutDirection r2;
        androidx.ui.core.Placeable r3, $r7;
        androidx.ui.core.LayoutNodeWrapper $r4;
        androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1 $r5;
        androidx.ui.core.MeasureScope$MeasureResult $r6;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.Constraints;

        r2 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        $r4 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        r3 = virtualinvoke $r4.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Placeable measure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r1, r2);

        $r5 = new androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1;

        specialinvoke $r5.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: void <init>(androidx.ui.core.DelegatingLayoutNodeWrapper,androidx.ui.core.Placeable)>(r0, r3);

        $r6 = (androidx.ui.core.MeasureScope$MeasureResult) $r5;

        virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void setMeasureResult$ui_platform_release(androidx.ui.core.MeasureScope$MeasureResult)>($r6);

        $r7 = (androidx.ui.core.Placeable) r0;

        return $r7;
    }

    public androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappingThisWrapper()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper r1;
        androidx.ui.core.focus.ModifiedFocusNode $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if r1 != null goto label1;

        $r2 = (androidx.ui.core.focus.ModifiedFocusNode) null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappingThisWrapper()>();

     label2:
        return $r2;
    }

    public androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappedByThisWrapper()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        androidx.ui.core.focus.ModifiedFocusNode $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappedByThisWrapper()>();

        return $r2;
    }

    public androidx.ui.core.focus.ModifiedFocusNode findLastFocusWrapper()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        androidx.ui.core.focus.ModifiedFocusNode r2, r3;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r2 = (androidx.ui.core.focus.ModifiedFocusNode) null;

        r3 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappedByThisWrapper()>();

     label1:
        if r3 == null goto label2;

        r2 = r3;

        $r1 = virtualinvoke r3.<androidx.ui.core.focus.ModifiedFocusNode: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        r3 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappedByThisWrapper()>();

        goto label1;

     label2:
        return r2;
    }

    public int minIntrinsicWidth-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int minIntrinsicWidth-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public int maxIntrinsicWidth-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int maxIntrinsicWidth-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public int minIntrinsicHeight-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int minIntrinsicHeight-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public int maxIntrinsicHeight-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int maxIntrinsicHeight-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public java.lang.Object getParentData()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: java.lang.Object getParentData()>();

        return $r2;
    }

    public void detach()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper r0;
        androidx.ui.core.LayoutNodeWrapper $r1;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper;

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: boolean _isAttached> = 0;

        $r1 = virtualinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: void detach()>();

        return;
    }

androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1
<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: int width>
<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: int height>
<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: java.util.Map alignmentLines>
<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.DelegatingLayoutNodeWrapper $this>
<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.Placeable $placeable>
    void <init>(androidx.ui.core.DelegatingLayoutNodeWrapper, androidx.ui.core.Placeable)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1 r0;
        androidx.ui.core.DelegatingLayoutNodeWrapper $r1, $r3, $r6;
        androidx.ui.core.Placeable $r2;
        androidx.ui.core.LayoutNodeWrapper $r4, $r7;
        androidx.ui.core.MeasureScope$MeasureResult $r5, $r8;
        int $i0, $i1;
        java.util.Map $r9;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1;

        $r1 := @parameter0: androidx.ui.core.DelegatingLayoutNodeWrapper;

        $r2 := @parameter1: androidx.ui.core.Placeable;

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.DelegatingLayoutNodeWrapper $this> = $r1;

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.Placeable $placeable> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.DelegatingLayoutNodeWrapper $this>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r5 = virtualinvoke $r4.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        $i0 = interfaceinvoke $r5.<androidx.ui.core.MeasureScope$MeasureResult: int getWidth()>();

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: int width> = $i0;

        $r6 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.DelegatingLayoutNodeWrapper $this>;

        $r7 = virtualinvoke $r6.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r8 = virtualinvoke $r7.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        $i1 = interfaceinvoke $r8.<androidx.ui.core.MeasureScope$MeasureResult: int getHeight()>();

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: int height> = $i1;

        $r9 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: java.util.Map alignmentLines> = $r9;

        return;
    }

    public int getWidth()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1 r0;
        int $i0;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1;

        $i0 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: int width>;

        return $i0;
    }

    public int getHeight()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1 r0;
        int $i0;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1;

        $i0 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: int height>;

        return $i0;
    }

    public java.util.Map getAlignmentLines()
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1 r0;
        java.util.Map $r1;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1;

        $r1 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: java.util.Map alignmentLines>;

        return $r1;
    }

    public void placeChildren(androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1 r0;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.InnerPlacementScope r2, r7;
        androidx.ui.core.Placeable r3, r6;
        androidx.ui.core.DelegatingLayoutNodeWrapper r4;
        boolean z0, z1;
        androidx.ui.unit.IntPxPosition r5, r8, $r9, r10;
        long l0, l1, l3, l4, $l5, $l7, $l9, $l10, $l11, $l12;
        int i2, $i6, $i8, $i13, i14, $i15, $i16;

        r0 := @this: androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1;

        r1 := @parameter0: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        r2 = <androidx.ui.core.InnerPlacementScope: androidx.ui.core.InnerPlacementScope INSTANCE>;

        r3 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.Placeable $placeable>;

        r4 = r0.<androidx.ui.core.DelegatingLayoutNodeWrapper$performMeasure$1: androidx.ui.core.DelegatingLayoutNodeWrapper $this>;

        z0 = 0;

        z1 = 0;

        r5 = virtualinvoke r4.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.unit.IntPxPosition getApparentToRealOffset()>();

        r6 = r3;

        r7 = r2;

        r10 = r5;

        l0 = virtualinvoke r10.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l5 = l0 >> 32;

        $i13 = (int) $l5;

        $i6 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i13);

        i14 = staticinvoke <androidx.ui.unit.IntPx: int unaryMinus-impl(int)>($i6);

        l1 = virtualinvoke r5.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l7 = l1 & 4294967295L;

        $i15 = (int) $l7;

        $i8 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i15);

        i2 = i14;

        $i16 = staticinvoke <androidx.ui.unit.IntPx: int unaryMinus-impl(int)>($i8);

        $l9 = (long) i2;

        $l12 = $l9 << 32;

        $l10 = (long) $i16;

        $l11 = $l10 & 4294967295L;

        l3 = $l12 | $l11;

        l4 = l3;

        $r9 = new androidx.ui.unit.IntPxPosition;

        specialinvoke $r9.<androidx.ui.unit.IntPxPosition: void <init>(long)>(l4);

        r8 = $r9;

        virtualinvoke r7.<androidx.ui.core.InnerPlacementScope: void placeAbsolute(androidx.ui.core.Placeable,androidx.ui.unit.IntPxPosition)>(r6, r8);

        return;
    }

