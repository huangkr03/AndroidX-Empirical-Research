androidx.media3.session.MediaLibrarySessionImpl
<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>
<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>
<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions>
    public void <init>(androidx.media3.session.MediaLibraryService$MediaLibrarySession, android.content.Context, java.lang.String, androidx.media3.common.Player, android.app.PendingIntent, androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback, android.os.Bundle, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession r1;
        android.content.Context r2;
        java.lang.String r3;
        androidx.media3.common.Player r4;
        android.app.PendingIntent r5;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback r6;
        android.os.Bundle r7;
        androidx.media3.session.BitmapLoader r8;
        androidx.collection.ArrayMap $r9;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaLibraryService$MediaLibrarySession;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.media3.common.Player;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback;

        r7 := @parameter6: android.os.Bundle;

        r8 := @parameter7: androidx.media3.session.BitmapLoader;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void <init>(androidx.media3.session.MediaSession,android.content.Context,java.lang.String,androidx.media3.common.Player,android.app.PendingIntent,androidx.media3.session.MediaSession$Callback,android.os.Bundle,androidx.media3.session.BitmapLoader)>(r1, r2, r3, r4, r5, r6, r7, r8);

        r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance> = r1;

        r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback> = r6;

        $r9 = new androidx.collection.ArrayMap;

        specialinvoke $r9.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions> = $r9;

        return;
    }

    public java.util.List getConnectedControllers()
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.util.List r1;
        androidx.media3.session.MediaLibraryServiceLegacyStub r2;
        androidx.media3.session.ConnectedControllersManager $r3;
        com.google.common.collect.ImmutableList $r4;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl: java.util.List getConnectedControllers()>();

        r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<androidx.media3.session.MediaLibraryServiceLegacyStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $r4 = virtualinvoke $r3.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r4);

     label1:
        return r1;
    }

    public boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaLibraryServiceLegacyStub r2;
        boolean $z0, $z1, $z2;
        androidx.media3.session.ConnectedControllersManager $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<androidx.media3.session.MediaLibraryServiceLegacyStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $z1 = virtualinvoke $r3.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void notifyChildrenChanged(java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.String r1;
        int i0;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.MediaLibrarySessionImpl,java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r0, r1, i0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$notifyChildrenChanged$0(java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r3);

        return;
    }

    public void notifyChildrenChanged(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r4;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r4 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.MediaLibrarySessionImpl,java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r0, r2, i0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$notifyChildrenChanged$1(java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r4);

        return;
    }

    public void notifySearchResultChanged(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r4;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r4 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r2, i0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$notifySearchResultChanged$2(java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r4);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture onGetLibraryRootOnHandler(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r4;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r5;
        java.lang.Runnable $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r5 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r4 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        r3 = interfaceinvoke $r5.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onGetLibraryRoot(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaLibraryService$LibraryParams)>($r4, r1, r2);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,com.google.common.util.concurrent.ListenableFuture)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetLibraryRootOnHandler$3(com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r7 = dynamicinvoke "execute" <java.util.concurrent.Executor (androidx.media3.session.MediaLibrarySessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetLibraryRootOnHandler$4(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r6, $r7);

        return r3;
    }

    public com.google.common.util.concurrent.ListenableFuture onGetChildrenOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, int, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r5;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r6;
        java.lang.Runnable $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r6 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r5 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        r4 = interfaceinvoke $r6.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onGetChildren(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>($r5, r1, r2, i0, i1, r3);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,com.google.common.util.concurrent.ListenableFuture,int)>(r0, r4, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetChildrenOnHandler$5(com.google.common.util.concurrent.ListenableFuture,int)>, methodtype: void __METHODTYPE__());

        $r8 = dynamicinvoke "execute" <java.util.concurrent.Executor (androidx.media3.session.MediaLibrarySessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetChildrenOnHandler$6(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r7, $r8);

        return r4;
    }

    public com.google.common.util.concurrent.ListenableFuture onGetItemOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r4;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r5;
        java.lang.Runnable $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r4 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        r3 = interfaceinvoke $r5.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onGetItem(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String)>($r4, r1, r2);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,com.google.common.util.concurrent.ListenableFuture)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetItemOnHandler$7(com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r7 = dynamicinvoke "execute" <java.util.concurrent.Executor (androidx.media3.session.MediaLibrarySessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetItemOnHandler$8(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r6, $r7);

        return r3;
    }

    public com.google.common.util.concurrent.ListenableFuture onSubscribeOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;
        androidx.media3.session.MediaSession$ControllerCb r4, $r6;
        java.lang.Throwable r5, $r20;
        java.lang.Object $r7, $r8, $r10, $r14, r21, r22;
        androidx.collection.ArrayMap $r9, $r18;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r11;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r12;
        com.google.common.util.concurrent.ListenableFuture $r13, r23;
        java.lang.Runnable $r15;
        java.util.concurrent.Executor $r16;
        java.util.HashSet r24;
        java.util.Set r25;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r6 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r6);

        r4 = (androidx.media3.session.MediaSession$ControllerCb) $r7;

        $r8 = r0.<androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object lock>;

        r21 = $r8;

        entermonitor $r8;

     label1:
        $r9 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions>;

        $r10 = virtualinvoke $r9.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r22 = (java.util.Set) $r10;

        if r22 != null goto label2;

        r24 = new java.util.HashSet;

        specialinvoke r24.<java.util.HashSet: void <init>()>();

        r22 = r24;

        $r18 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions>;

        virtualinvoke $r18.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r22);

     label2:
        r25 = (java.util.Set) r22;

        interfaceinvoke r25.<java.util.Set: boolean add(java.lang.Object)>(r2);

        exitmonitor r21;

     label3:
        goto label6;

     label4:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r21;

     label5:
        throw r5;

     label6:
        $r12 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r11 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        $r13 = interfaceinvoke $r12.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onSubscribe(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>($r11, r1, r2, r3);

        $r14 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r13, "onSubscribe must return non-null future");

        r23 = (com.google.common.util.concurrent.ListenableFuture) $r14;

        $r15 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,com.google.common.util.concurrent.ListenableFuture,androidx.media3.session.MediaSession$ControllerCb,java.lang.String)>(r0, r23, r4, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onSubscribeOnHandler$9(com.google.common.util.concurrent.ListenableFuture,androidx.media3.session.MediaSession$ControllerCb,java.lang.String)>, methodtype: void __METHODTYPE__());

        $r16 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r23.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r15, $r16);

        return r23;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.google.common.util.concurrent.ListenableFuture onUnsubscribeOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r4;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r5;
        java.lang.Runnable $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r4 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        r3 = interfaceinvoke $r5.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onUnsubscribe(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String)>($r4, r1, r2);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onUnsubscribeOnHandler$10(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String)>, methodtype: void __METHODTYPE__());

        $r7 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r6, $r7);

        return r3;
    }

    public com.google.common.util.concurrent.ListenableFuture onSearchOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r5;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r6;
        java.lang.Runnable $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r6 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r5 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        r4 = interfaceinvoke $r6.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onSearch(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>($r5, r1, r2, r3);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,com.google.common.util.concurrent.ListenableFuture)>(r0, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onSearchOnHandler$11(com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r8 = dynamicinvoke "execute" <java.util.concurrent.Executor (androidx.media3.session.MediaLibrarySessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onSearchOnHandler$12(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r7, $r8);

        return r4;
    }

    public com.google.common.util.concurrent.ListenableFuture onGetSearchResultOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, int, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession $r5;
        androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback $r6;
        java.lang.Runnable $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r6 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback callback>;

        $r5 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryService$MediaLibrarySession instance>;

        r4 = interfaceinvoke $r6.<androidx.media3.session.MediaLibraryService$MediaLibrarySession$Callback: com.google.common.util.concurrent.ListenableFuture onGetSearchResult(androidx.media3.session.MediaLibraryService$MediaLibrarySession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>($r5, r1, r2, i0, i1, r3);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaLibrarySessionImpl,com.google.common.util.concurrent.ListenableFuture,int)>(r0, r4, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetSearchResultOnHandler$13(com.google.common.util.concurrent.ListenableFuture,int)>, methodtype: void __METHODTYPE__());

        $r8 = dynamicinvoke "execute" <java.util.concurrent.Executor (androidx.media3.session.MediaLibrarySessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaLibrarySessionImpl: void lambda$onGetSearchResultOnHandler$14(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r7, $r8);

        return r4;
    }

    protected androidx.media3.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSessionServiceLegacyStub $r1;
        androidx.media3.session.MediaLibraryServiceLegacyStub $r2;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        $r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub getLegacyBrowserService()>();

        $r2 = (androidx.media3.session.MediaLibraryServiceLegacyStub) $r1;

        return $r2;
    }

    protected androidx.media3.session.MediaSessionServiceLegacyStub createLegacyBrowserService(android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        androidx.media3.session.MediaLibraryServiceLegacyStub r2, $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        $r3 = new androidx.media3.session.MediaLibraryServiceLegacyStub;

        specialinvoke $r3.<androidx.media3.session.MediaLibraryServiceLegacyStub: void <init>(androidx.media3.session.MediaLibrarySessionImpl)>(r0);

        r2 = $r3;

        virtualinvoke r2.<androidx.media3.session.MediaLibraryServiceLegacyStub: void initialize(android.support.v4.media.session.MediaSessionCompat$Token)>(r1);

        return r2;
    }

    protected void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask r1;
        androidx.media3.session.MediaLibraryServiceLegacyStub r2;
        java.lang.Throwable r3, $r5;
        androidx.media3.session.MediaSession$ControllerCb $r4;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl$RemoteControllerTask;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1);

        r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        if r2 == null goto label4;

     label1:
        $r4 = virtualinvoke r2.<androidx.media3.session.MediaLibraryServiceLegacyStub: androidx.media3.session.MediaSession$ControllerCb getBrowserLegacyCbForBroadcast()>();

        interfaceinvoke r1.<androidx.media3.session.MediaSessionImpl$RemoteControllerTask: void run(androidx.media3.session.MediaSession$ControllerCb,int)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", "Exception in using media1 API", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean isSubscribed(androidx.media3.session.MediaSession$ControllerCb, java.lang.String)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        java.lang.String r2;
        java.lang.Object r3, $r6, $r8;
        java.util.Set r4;
        java.lang.Throwable r5, $r9;
        androidx.collection.ArrayMap $r7;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerCb;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object lock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions>;

        $r8 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r8;

        if r4 == null goto label2;

        $z0 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label4;

     label2:
        exitmonitor r3;

     label3:
        return 0;

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return 1;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void maybeUpdateLegacyErrorState(androidx.media3.session.LibraryResult)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.LibraryResult r1;
        androidx.media3.session.PlayerWrapper r2;
        android.support.v4.media.session.MediaSessionCompat r3, $r4;
        int $i0, $i1, $i2, $i3;
        android.support.v4.media.session.PlaybackStateCompat $r5, $r13;
        androidx.media3.session.MediaLibraryService$LibraryParams $r6, $r7, $r11;
        android.os.Bundle $r8, $r12;
        boolean $z0;
        android.content.Context $r9;
        java.lang.String $r10;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.LibraryResult;

        r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $i0 = r1.<androidx.media3.session.LibraryResult: int resultCode>;

        if $i0 != -102 goto label2;

        $r6 = r1.<androidx.media3.session.LibraryResult: androidx.media3.session.MediaLibraryService$LibraryParams params>;

        if $r6 == null goto label2;

        $r7 = r1.<androidx.media3.session.LibraryResult: androidx.media3.session.MediaLibraryService$LibraryParams params>;

        $r8 = $r7.<androidx.media3.session.MediaLibraryService$LibraryParams: android.os.Bundle extras>;

        $z0 = virtualinvoke $r8.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.extras.ERROR_RESOLUTION_ACTION_INTENT");

        if $z0 == 0 goto label2;

        r3 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $i1 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getLegacyStatusCode()>();

        if $i1 == -102 goto label1;

        $r9 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.content.Context getContext()>();

        $i2 = <androidx.media3.session.R$string: int authentication_required>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int)>($i2);

        $r11 = r1.<androidx.media3.session.LibraryResult: androidx.media3.session.MediaLibraryService$LibraryParams params>;

        $r12 = $r11.<androidx.media3.session.MediaLibraryService$LibraryParams: android.os.Bundle extras>;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void setLegacyErrorStatus(int,java.lang.String,android.os.Bundle)>(3, $r10, $r12);

        $r13 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke r3.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r13);

     label1:
        goto label3;

     label2:
        $i3 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getLegacyStatusCode()>();

        if $i3 == 0 goto label3;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void clearLegacyErrorStatus()>();

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r5 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r5);

     label3:
        return;
    }

    private static java.lang.Object tryGetFutureResult(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r0;
        java.lang.Throwable r1, $r3;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.concurrent.Future;

        $z0 = interfaceinvoke r0.<java.util.concurrent.Future: boolean isDone()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

     label1:
        $r2 = interfaceinvoke r0.<java.util.concurrent.Future: java.lang.Object get()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        return null;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private static void verifyResultItems(androidx.media3.session.LibraryResult, int)
    {
        androidx.media3.session.LibraryResult r0;
        int i0, $i1, $i2, $i3;
        java.util.List r1;
        java.lang.Object $r2, $r4;
        com.google.common.collect.ImmutableList $r3;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @parameter0: androidx.media3.session.LibraryResult;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.media3.session.LibraryResult: int resultCode>;

        if $i1 != 0 goto label1;

        $r2 = r0.<androidx.media3.session.LibraryResult: java.lang.Object value>;

        $r3 = (com.google.common.collect.ImmutableList) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r1 = (java.util.List) $r4;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 <= i0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid size=");

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pageSize=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        return;
    }

    private void removeSubscription(androidx.media3.session.MediaSession$ControllerCb, java.lang.String)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        java.lang.String r2;
        java.lang.Object r3, $r6, $r8;
        java.util.Set r4;
        java.lang.Throwable r5, $r11;
        androidx.collection.ArrayMap $r7, $r9;
        boolean $z1;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerCb;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object lock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions>;

        $r8 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r8;

        if r4 == null goto label2;

        interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r9 = r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.collection.ArrayMap subscriptions>;

        virtualinvoke $r9.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected volatile androidx.media3.session.MediaSessionServiceLegacyStub getLegacyBrowserService()
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaLibraryServiceLegacyStub $r1;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: androidx.media3.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        return $r1;
    }

    private void lambda$onGetSearchResultOnHandler$14(java.lang.Runnable)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    private void lambda$onGetSearchResultOnHandler$13(com.google.common.util.concurrent.ListenableFuture, int)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        int i0;
        androidx.media3.session.LibraryResult r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        i0 := @parameter1: int;

        $r3 = staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object tryGetFutureResult(java.util.concurrent.Future)>(r1);

        r2 = (androidx.media3.session.LibraryResult) $r3;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void maybeUpdateLegacyErrorState(androidx.media3.session.LibraryResult)>(r2);

        staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: void verifyResultItems(androidx.media3.session.LibraryResult,int)>(r2, i0);

     label1:
        return;
    }

    private void lambda$onSearchOnHandler$12(java.lang.Runnable)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    private void lambda$onSearchOnHandler$11(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.media3.session.LibraryResult r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r3 = staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object tryGetFutureResult(java.util.concurrent.Future)>(r1);

        r2 = (androidx.media3.session.LibraryResult) $r3;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void maybeUpdateLegacyErrorState(androidx.media3.session.LibraryResult)>(r2);

     label1:
        return;
    }

    private void lambda$onUnsubscribeOnHandler$10(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media3.session.MediaSession$ControllerCb $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.session.MediaSession$ControllerCb) $r4;

        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void removeSubscription(androidx.media3.session.MediaSession$ControllerCb,java.lang.String)>($r5, r2);

        return;
    }

    private void lambda$onSubscribeOnHandler$9(com.google.common.util.concurrent.ListenableFuture, androidx.media3.session.MediaSession$ControllerCb, java.lang.String)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.media3.session.MediaSession$ControllerCb r2;
        java.lang.String r3;
        androidx.media3.session.LibraryResult r4;
        java.lang.Object $r5;
        int $i0;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        r3 := @parameter2: java.lang.String;

        $r5 = staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object tryGetFutureResult(java.util.concurrent.Future)>(r1);

        r4 = (androidx.media3.session.LibraryResult) $r5;

        if r4 == null goto label1;

        $i0 = r4.<androidx.media3.session.LibraryResult: int resultCode>;

        if $i0 == 0 goto label2;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void removeSubscription(androidx.media3.session.MediaSession$ControllerCb,java.lang.String)>(r2, r3);

     label2:
        return;
    }

    private void lambda$onGetItemOnHandler$8(java.lang.Runnable)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    private void lambda$onGetItemOnHandler$7(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.media3.session.LibraryResult r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r3 = staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object tryGetFutureResult(java.util.concurrent.Future)>(r1);

        r2 = (androidx.media3.session.LibraryResult) $r3;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void maybeUpdateLegacyErrorState(androidx.media3.session.LibraryResult)>(r2);

     label1:
        return;
    }

    private void lambda$onGetChildrenOnHandler$6(java.lang.Runnable)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    private void lambda$onGetChildrenOnHandler$5(com.google.common.util.concurrent.ListenableFuture, int)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        int i0;
        androidx.media3.session.LibraryResult r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        i0 := @parameter1: int;

        $r3 = staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object tryGetFutureResult(java.util.concurrent.Future)>(r1);

        r2 = (androidx.media3.session.LibraryResult) $r3;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void maybeUpdateLegacyErrorState(androidx.media3.session.LibraryResult)>(r2);

        staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: void verifyResultItems(androidx.media3.session.LibraryResult,int)>(r2, i0);

     label1:
        return;
    }

    private void lambda$onGetLibraryRootOnHandler$4(java.lang.Runnable)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    private void lambda$onGetLibraryRootOnHandler$3(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.media3.session.LibraryResult r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r3 = staticinvoke <androidx.media3.session.MediaLibrarySessionImpl: java.lang.Object tryGetFutureResult(java.util.concurrent.Future)>(r1);

        r2 = (androidx.media3.session.LibraryResult) $r3;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: void maybeUpdateLegacyErrorState(androidx.media3.session.LibraryResult)>(r2);

     label1:
        return;
    }

    private static void lambda$notifySearchResultChanged$2(java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        java.lang.String r0;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r1;
        androidx.media3.session.MediaSession$ControllerCb r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.MediaLibraryService$LibraryParams;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter4: int;

        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void onSearchResultChanged(int,java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(i1, r0, i0, r1);

        return;
    }

    private void lambda$notifyChildrenChanged$1(java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.String r1;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        androidx.media3.session.MediaSession$ControllerCb r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.MediaLibraryService$LibraryParams;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter4: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: boolean isSubscribed(androidx.media3.session.MediaSession$ControllerCb,java.lang.String)>(r3, r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        interfaceinvoke r3.<androidx.media3.session.MediaSession$ControllerCb: void onChildrenChanged(int,java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(i1, r1, i0, r2);

        return;
    }

    private void lambda$notifyChildrenChanged$0(java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaLibrarySessionImpl r0;
        java.lang.String r1;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        androidx.media3.session.MediaSession$ControllerCb r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaLibrarySessionImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.MediaLibraryService$LibraryParams;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter4: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaLibrarySessionImpl: boolean isSubscribed(androidx.media3.session.MediaSession$ControllerCb,java.lang.String)>(r3, r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r3.<androidx.media3.session.MediaSession$ControllerCb: void onChildrenChanged(int,java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(i1, r1, i0, r2);

     label1:
        return;
    }

