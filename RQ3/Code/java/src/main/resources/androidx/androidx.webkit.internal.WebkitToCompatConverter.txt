androidx.webkit.internal.WebkitToCompatConverter
<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>
    public void <init>(org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface r1;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl> = r1;

        return;
    }

    public androidx.webkit.internal.WebSettingsAdapter convertSettings(android.webkit.WebSettings)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        android.webkit.WebSettings r1;
        androidx.webkit.internal.WebSettingsAdapter $r2;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r3;
        java.lang.reflect.InvocationHandler $r4;
        java.lang.Object $r5;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r6;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: android.webkit.WebSettings;

        $r2 = new androidx.webkit.internal.WebSettingsAdapter;

        $r3 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r4 = interfaceinvoke $r3.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)>(r1);

        $r5 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/WebSettingsBoundaryInterface;", $r4);

        $r6 = (org.chromium.support_lib_boundary.WebSettingsBoundaryInterface) $r5;

        specialinvoke $r2.<androidx.webkit.internal.WebSettingsAdapter: void <init>(org.chromium.support_lib_boundary.WebSettingsBoundaryInterface)>($r6);

        return $r2;
    }

    public androidx.webkit.internal.WebResourceRequestAdapter convertWebResourceRequest(android.webkit.WebResourceRequest)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        android.webkit.WebResourceRequest r1;
        androidx.webkit.internal.WebResourceRequestAdapter $r2;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r3;
        java.lang.reflect.InvocationHandler $r4;
        java.lang.Object $r5;
        org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface $r6;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: android.webkit.WebResourceRequest;

        $r2 = new androidx.webkit.internal.WebResourceRequestAdapter;

        $r3 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r4 = interfaceinvoke $r3.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)>(r1);

        $r5 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/WebResourceRequestBoundaryInterface;", $r4);

        $r6 = (org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface) $r5;

        specialinvoke $r2.<androidx.webkit.internal.WebResourceRequestAdapter: void <init>(org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface)>($r6);

        return $r2;
    }

    public java.lang.reflect.InvocationHandler convertServiceWorkerSettings(android.webkit.ServiceWorkerWebSettings)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        android.webkit.ServiceWorkerWebSettings r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.reflect.InvocationHandler $r3;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)>(r1);

        return $r3;
    }

    public android.webkit.ServiceWorkerWebSettings convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        java.lang.reflect.InvocationHandler r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.Object $r3;
        android.webkit.ServiceWorkerWebSettings $r4;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)>(r1);

        $r4 = (android.webkit.ServiceWorkerWebSettings) $r3;

        return $r4;
    }

    java.lang.reflect.InvocationHandler convertWebResourceError(android.webkit.WebResourceError)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        android.webkit.WebResourceError r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.reflect.InvocationHandler $r3;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: android.webkit.WebResourceError;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)>(r1);

        return $r3;
    }

    android.webkit.WebResourceError convertWebResourceError(java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        java.lang.reflect.InvocationHandler r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.Object $r3;
        android.webkit.WebResourceError $r4;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)>(r1);

        $r4 = (android.webkit.WebResourceError) $r3;

        return $r4;
    }

    java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(android.webkit.SafeBrowsingResponse)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        android.webkit.SafeBrowsingResponse r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.reflect.InvocationHandler $r3;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: android.webkit.SafeBrowsingResponse;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)>(r1);

        return $r3;
    }

    android.webkit.SafeBrowsingResponse convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        java.lang.reflect.InvocationHandler r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.Object $r3;
        android.webkit.SafeBrowsingResponse $r4;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)>(r1);

        $r4 = (android.webkit.SafeBrowsingResponse) $r3;

        return $r4;
    }

    java.lang.reflect.InvocationHandler convertWebMessagePort(android.webkit.WebMessagePort)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        android.webkit.WebMessagePort r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.reflect.InvocationHandler $r3;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: android.webkit.WebMessagePort;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)>(r1);

        return $r3;
    }

    android.webkit.WebMessagePort convertWebMessagePort(java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebkitToCompatConverter r0;
        java.lang.reflect.InvocationHandler r1;
        org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface $r2;
        java.lang.Object $r3;
        android.webkit.WebMessagePort $r4;

        r0 := @this: androidx.webkit.internal.WebkitToCompatConverter;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        $r2 = r0.<androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl>;

        $r3 = interfaceinvoke $r2.<org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)>(r1);

        $r4 = (android.webkit.WebMessagePort) $r3;

        return $r4;
    }

