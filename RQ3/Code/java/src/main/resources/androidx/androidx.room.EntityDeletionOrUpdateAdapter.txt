androidx.room.EntityDeletionOrUpdateAdapter
    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.room.EntityDeletionOrUpdateAdapter r0;
        androidx.room.RoomDatabase r1;

        r0 := @this: androidx.room.EntityDeletionOrUpdateAdapter;

        r1 := @parameter0: androidx.room.RoomDatabase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "database");

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r1);

        return;
    }

<androidx.room.EntityDeletionOrUpdateAdapter: java.lang.String createQuery()>
<androidx.room.EntityDeletionOrUpdateAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
    public final int handle(java.lang.Object)
    {
        androidx.room.EntityDeletionOrUpdateAdapter r0;
        java.lang.Object r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        int i0;
        java.lang.Throwable r3, $r4;

        r0 := @this: androidx.room.EntityDeletionOrUpdateAdapter;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>(r2, r1);

        i0 = interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

     label2:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final int handleMultiple(java.lang.Iterable)
    {
        androidx.room.EntityDeletionOrUpdateAdapter r0;
        java.lang.Iterable r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2;
        int $i0, i1, i2;
        java.lang.Throwable $r6;

        r0 := @this: androidx.room.EntityDeletionOrUpdateAdapter;

        r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "entities");

        r2 = virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        i1 = 0;

        r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>(r2, r5);

        $i0 = interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        i1 = i1 + $i0;

        goto label2;

     label3:
        i2 = i1;

     label4:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label7;

     label5:
        $r6 := @caughtexception;

     label6:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw $r6;

     label7:
        return i2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final int handleMultiple(java.lang.Object[])
    {
        androidx.room.EntityDeletionOrUpdateAdapter r0;
        java.lang.Object[] r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        int i0, $i1, i2, i3, i4;
        java.lang.Object r3, r4;
        java.lang.Throwable $r5;

        r0 := @this: androidx.room.EntityDeletionOrUpdateAdapter;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "entities");

        r2 = virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        i2 = 0;

        i3 = 0;

        i0 = lengthof r1;

     label2:
        if i3 >= i0 goto label3;

        r3 = r1[i3];

        r4 = r3;

        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>(r2, r4);

        $i1 = interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label2;

     label3:
        i4 = i2;

     label4:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label7;

     label5:
        $r5 := @caughtexception;

     label6:
        virtualinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw $r5;

     label7:
        return i4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

