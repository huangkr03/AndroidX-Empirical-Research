kotlin.time.TimeMark
<kotlin.time.TimeMark: long elapsedNow-UwyO8pc()>
<kotlin.time.TimeMark: boolean hasNotPassedNow()>
<kotlin.time.TimeMark: boolean hasPassedNow()>
<kotlin.time.TimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)>
<kotlin.time.TimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)>
kotlin.time.TimeMark$DefaultImpls
    public static boolean hasNotPassedNow(kotlin.time.TimeMark)
    {
        kotlin.time.TimeMark $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: kotlin.time.TimeMark;

        $l0 = interfaceinvoke $r0.<kotlin.time.TimeMark: long elapsedNow-UwyO8pc()>();

        $z0 = staticinvoke <kotlin.time.Duration: boolean isNegative-impl(long)>($l0);

        return $z0;
    }

    public static boolean hasPassedNow(kotlin.time.TimeMark)
    {
        kotlin.time.TimeMark $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: kotlin.time.TimeMark;

        $l0 = interfaceinvoke $r0.<kotlin.time.TimeMark: long elapsedNow-UwyO8pc()>();

        $z0 = staticinvoke <kotlin.time.Duration: boolean isNegative-impl(long)>($l0);

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static kotlin.time.TimeMark minus-LRDsOJo(kotlin.time.TimeMark, long)
    {
        kotlin.time.TimeMark $r0;
        long $l0;

        $r0 := @parameter0: kotlin.time.TimeMark;

        $l0 := @parameter1: long;

        $l0 = staticinvoke <kotlin.time.Duration: long unaryMinus-UwyO8pc(long)>($l0);

        $r0 = interfaceinvoke $r0.<kotlin.time.TimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)>($l0);

        return $r0;
    }

    public static kotlin.time.TimeMark plus-LRDsOJo(kotlin.time.TimeMark, long)
    {
        kotlin.time.TimeMark $r0;
        long $l0;
        kotlin.time.AdjustedTimeMark $r1;

        $r0 := @parameter0: kotlin.time.TimeMark;

        $l0 := @parameter1: long;

        $r1 = new kotlin.time.AdjustedTimeMark;

        specialinvoke $r1.<kotlin.time.AdjustedTimeMark: void <init>(kotlin.time.TimeMark,long,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, $l0, null);

        return $r1;
    }

