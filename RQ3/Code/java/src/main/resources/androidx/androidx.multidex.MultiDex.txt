androidx.multidex.MultiDex
<androidx.multidex.MultiDex: java.lang.String TAG>
<androidx.multidex.MultiDex: java.lang.String OLD_SECONDARY_FOLDER_NAME>
<androidx.multidex.MultiDex: java.lang.String CODE_CACHE_NAME>
<androidx.multidex.MultiDex: java.lang.String CODE_CACHE_SECONDARY_FOLDER_NAME>
<androidx.multidex.MultiDex: int MAX_SUPPORTED_SDK_VERSION>
<androidx.multidex.MultiDex: int MIN_SDK_VERSION>
<androidx.multidex.MultiDex: int VM_WITH_MULTIDEX_VERSION_MAJOR>
<androidx.multidex.MultiDex: int VM_WITH_MULTIDEX_VERSION_MINOR>
<androidx.multidex.MultiDex: java.lang.String NO_KEY_PREFIX>
<androidx.multidex.MultiDex: java.util.Set installedApk>
<androidx.multidex.MultiDex: boolean IS_VM_MULTIDEX_CAPABLE>
    private void <init>()
    {
        androidx.multidex.MultiDex r0;

        r0 := @this: androidx.multidex.MultiDex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void install(android.content.Context)
    {
        android.content.Context r0;
        boolean $z0;
        int $i1, $i4;
        java.io.File $r1, $r3;
        java.lang.String $r2, $r4, $r12, $r17, $r20;
        java.lang.RuntimeException $r5, $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r16, $r18, $r19;
        java.lang.Throwable $r13, r22;
        android.content.pm.ApplicationInfo r21;

        r0 := @parameter0: android.content.Context;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "Installing application");

        $z0 = <androidx.multidex.MultiDex: boolean IS_VM_MULTIDEX_CAPABLE>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "VM has multidex support, MultiDex support library is disabled.");

        return;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 4 goto label2;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex installation failed. SDK ");

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unsupported. Min SDK version is ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label2:
        r21 = staticinvoke <androidx.multidex.MultiDex: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)>(r0);

        if r21 != null goto label4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "No ApplicationInfo available, i.e. running on a test Context: MultiDex support library is disabled.");

     label3:
        return;

     label4:
        $r1 = new java.io.File;

        $r2 = r21.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = new java.io.File;

        $r4 = r21.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r4);

        staticinvoke <androidx.multidex.MultiDex: void doInstallation(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>(r0, $r1, $r3, "secondary-dexes", "", 1);

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

        r22 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "MultiDex installation failure", r22);

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex installation failed (");

        $r17 = virtualinvoke r22.<java.lang.Exception: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label7:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "install done");

        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static void installInstrumentation(android.content.Context, android.content.Context)
    {
        android.content.Context r0, r1;
        android.content.pm.ApplicationInfo r2, r35;
        java.lang.String r3, $r6, $r10, $r12, $r16, $r18, $r26, $r31, $r34;
        java.io.File r4, $r9, $r11, $r17;
        boolean $z0;
        int $i1, $i5;
        java.lang.StringBuilder $r5, $r7, $r8, $r13, $r14, $r15, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r30, $r32, $r33;
        java.lang.RuntimeException $r19, $r28;
        java.lang.Throwable $r27, r36;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Context;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "Installing instrumentation");

        $z0 = <androidx.multidex.MultiDex: boolean IS_VM_MULTIDEX_CAPABLE>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "VM has multidex support, MultiDex support library is disabled.");

        return;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 4 goto label2;

        $r19 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex installation failed. SDK ");

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unsupported. Min SDK version is ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26);

        throw $r19;

     label2:
        r35 = staticinvoke <androidx.multidex.MultiDex: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)>(r0);

        if r35 != null goto label4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "No ApplicationInfo available for instrumentation, i.e. running on a test Context: MultiDex support library is disabled.");

     label3:
        return;

     label4:
        r2 = staticinvoke <androidx.multidex.MultiDex: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)>(r1);

        if r2 != null goto label6;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "No ApplicationInfo available, i.e. running on a test Context: MultiDex support library is disabled.");

     label5:
        return;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.io.File;

        $r10 = r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r10);

        r4 = $r9;

        $r11 = new java.io.File;

        $r12 = r35.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("secondary-dexes");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.multidex.MultiDex: void doInstallation(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>(r1, $r11, r4, $r16, r3, 0);

        $r17 = new java.io.File;

        $r18 = r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18);

        staticinvoke <androidx.multidex.MultiDex: void doInstallation(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>(r1, $r17, r4, "secondary-dexes", "", 0);

     label7:
        goto label9;

     label8:
        $r27 := @caughtexception;

        r36 = $r27;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "MultiDex installation failure", r36);

        $r28 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex installation failed (");

        $r31 = virtualinvoke r36.<java.lang.Exception: java.lang.String getMessage()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label9:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "Installation done");

        return;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    private static void doInstallation(android.content.Context, java.io.File, java.io.File, java.lang.String, java.lang.String, boolean) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException, java.lang.SecurityException, java.lang.ClassNotFoundException, java.lang.InstantiationException
    {
        android.content.Context r0;
        java.io.File r1, r2, r35;
        java.lang.String r3, r4, $r24, $r27;
        boolean z0, $z1;
        java.util.Set r5, $r12, $r13, $r14;
        java.lang.ClassLoader r6;
        androidx.multidex.MultiDexExtractor r7, $r15;
        java.lang.Throwable r8, r9, r10, r11, $r28, $r29, $r30, $r31, $r32, $r33, r34, r36, r39, r40;
        int $i0, $i1;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26;
        java.util.List r37, r38;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        $r12 = <androidx.multidex.MultiDex: java.util.Set installedApk>;

        r5 = $r12;

        entermonitor $r12;

     label01:
        $r13 = <androidx.multidex.MultiDex: java.util.Set installedApk>;

        $z1 = interfaceinvoke $r13.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

        exitmonitor r5;

     label02:
        return;

     label03:
        $r14 = <androidx.multidex.MultiDex: java.util.Set installedApk>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 20 goto label04;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex is not guaranteed to work in SDK version ");

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": SDK version higher than ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(20);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be backed by ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runtime with built-in multidex capabilty but it\'s not the ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("case here: java.vm.version=\"");

        $r24 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.version");

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r27);

     label04:
        r6 = staticinvoke <androidx.multidex.MultiDex: java.lang.ClassLoader getDexClassloader(android.content.Context)>(r0);

        if r6 != null goto label06;

        exitmonitor r5;

     label05:
        return;

     label06:
        staticinvoke <androidx.multidex.MultiDex: void clearOldDexDir(android.content.Context)>(r0);

     label07:
        goto label09;

     label08:
        $r31 := @caughtexception;

        r34 = $r31;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Something went wrong when trying to clear old MultiDex extraction, continuing without cleaning.", r34);

     label09:
        r35 = staticinvoke <androidx.multidex.MultiDex: java.io.File getDexDir(android.content.Context,java.io.File,java.lang.String)>(r0, r2, r3);

        $r15 = new androidx.multidex.MultiDexExtractor;

        specialinvoke $r15.<androidx.multidex.MultiDexExtractor: void <init>(java.io.File,java.io.File)>(r1, r35);

        r7 = $r15;

        r36 = null;

     label10:
        r37 = virtualinvoke r7.<androidx.multidex.MultiDexExtractor: java.util.List load(android.content.Context,java.lang.String,boolean)>(r0, r4, 0);

     label11:
        staticinvoke <androidx.multidex.MultiDex: void installSecondaryDexes(java.lang.ClassLoader,java.io.File,java.util.List)>(r6, r35, r37);

     label12:
        goto label15;

     label13:
        $r33 := @caughtexception;

        r8 = $r33;

        if z0 != 0 goto label14;

        throw r8;

     label14:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failed to install extracted secondary dex files, retrying with forced extraction", r8);

        r38 = virtualinvoke r7.<androidx.multidex.MultiDexExtractor: java.util.List load(android.content.Context,java.lang.String,boolean)>(r0, r4, 1);

        staticinvoke <androidx.multidex.MultiDex: void installSecondaryDexes(java.lang.ClassLoader,java.io.File,java.util.List)>(r6, r35, r38);

     label15:
        virtualinvoke r7.<androidx.multidex.MultiDexExtractor: void close()>();

     label16:
        goto label23;

     label17:
        $r29 := @caughtexception;

        r39 = $r29;

        r36 = r39;

        goto label23;

     label18:
        $r30 := @caughtexception;

        r9 = $r30;

     label19:
        virtualinvoke r7.<androidx.multidex.MultiDexExtractor: void close()>();

     label20:
        goto label22;

     label21:
        $r32 := @caughtexception;

        r10 = $r32;

        r40 = r10;

     label22:
        throw r9;

     label23:
        if r36 == null goto label24;

        throw r36;

     label24:
        exitmonitor r5;

     label25:
        goto label28;

     label26:
        $r28 := @caughtexception;

        r11 = $r28;

        exitmonitor r5;

     label27:
        throw r11;

     label28:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label10 to label15 with label18;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label05 with label26;
        catch java.lang.Throwable from label06 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    private static java.lang.ClassLoader getDexClassloader(android.content.Context)
    {
        android.content.Context r0;
        java.lang.ClassLoader r1;
        java.lang.Throwable r2, $r3;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

     label1:
        r1 = virtualinvoke r0.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failure while trying to obtain Context class loader. Must be running in test mode. Skip patching.", r2);

        return null;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label5;

        $z2 = r1 instanceof dalvik.system.BaseDexClassLoader;

        if $z2 == 0 goto label7;

        return r1;

     label5:
        $z0 = r1 instanceof dalvik.system.DexClassLoader;

        if $z0 != 0 goto label6;

        $z1 = r1 instanceof dalvik.system.PathClassLoader;

        if $z1 == 0 goto label7;

     label6:
        return r1;

     label7:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MultiDex", "Context class loader is null or not dex-capable. Must be running in test mode. Skip patching.");

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private static android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Throwable r1, $r3;
        android.content.pm.ApplicationInfo $r2;

        r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failure while trying to obtain ApplicationInfo from Context. Must be running in test mode. Skip patching.", r1);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    static boolean isVMMultidexCapable(java.lang.String)
    {
        java.lang.String r0, r2, r3, $r7, $r10, $r11, $r15;
        java.util.StringTokenizer r1, $r8;
        int i0, i2;
        java.lang.StringBuilder $r5, $r6, $r13, $r14;
        boolean $z0, $z1, z2, $z3;
        java.lang.Throwable $r9, r12;

        r0 := @parameter0: java.lang.String;

        z2 = 0;

        if r0 == null goto label11;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ".");

        r1 = $r8;

        $z0 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label01;

        $r10 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label02;

     label01:
        $r10 = null;

     label02:
        r2 = $r10;

        $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label03;

        $r11 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label04;

     label03:
        $r11 = null;

     label04:
        r3 = $r11;

        if r2 == null goto label11;

        if r3 == null goto label11;

     label05:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        if i2 > 2 goto label06;

        if i2 != 2 goto label07;

        if i0 < 1 goto label07;

     label06:
        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        z2 = $z3;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

        r12 = $r9;

     label11:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VM with version ");

        $r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        if z2 == 0 goto label12;

        $r15 = " has multidex support";

        goto label13;

     label12:
        $r15 = " does not have multidex support";

     label13:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r7);

        return z2;

        catch java.lang.NumberFormatException from label05 to label09 with label10;
    }

    private static void installSecondaryDexes(java.lang.ClassLoader, java.io.File, java.util.List) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException, java.io.IOException, java.lang.SecurityException, java.lang.ClassNotFoundException, java.lang.InstantiationException
    {
        java.lang.ClassLoader r0;
        java.io.File r1;
        java.util.List r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.util.List;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        staticinvoke <androidx.multidex.MultiDex$V19: void install(java.lang.ClassLoader,java.util.List,java.io.File)>(r0, r2, r1);

        goto label3;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 14 goto label2;

        staticinvoke <androidx.multidex.MultiDex$V14: void install(java.lang.ClassLoader,java.util.List)>(r0, r2);

        goto label3;

     label2:
        staticinvoke <androidx.multidex.MultiDex$V4: void install(java.lang.ClassLoader,java.util.List)>(r0, r2);

     label3:
        return;
    }

    private static java.lang.reflect.Field findField(java.lang.Object, java.lang.String) throws java.lang.NoSuchFieldException
    {
        java.lang.Object r0;
        java.lang.String r1, $r9;
        java.lang.NoSuchFieldException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        java.lang.Class $r7, r12;
        boolean $z0;
        java.lang.Throwable $r11, r14;
        java.lang.reflect.Field r13;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        if r12 == null goto label5;

     label2:
        r13 = virtualinvoke r12.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r1);

        $z0 = virtualinvoke r13.<java.lang.reflect.Field: boolean isAccessible()>();

        if $z0 != 0 goto label3;

        virtualinvoke r13.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label3:
        return r13;

     label4:
        $r11 := @caughtexception;

        r14 = $r11;

        r12 = virtualinvoke r12.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label5:
        $r2 = new java.lang.NoSuchFieldException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in ");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NoSuchFieldException: void <init>(java.lang.String)>($r9);

        throw $r2;

        catch java.lang.NoSuchFieldException from label2 to label3 with label4;
    }

    private static transient java.lang.reflect.Method findMethod(java.lang.Object, java.lang.String, java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Object r0;
        java.lang.String r1, $r13;
        java.lang.Class[] r2;
        java.lang.NoSuchMethodException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r12;
        java.util.List $r8;
        java.lang.Class $r11, r16;
        boolean $z0;
        java.lang.Throwable $r15, r18;
        java.lang.reflect.Method r17;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class[];

        r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        if r16 == null goto label5;

     label2:
        r17 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r1, r2);

        $z0 = virtualinvoke r17.<java.lang.reflect.Method: boolean isAccessible()>();

        if $z0 != 0 goto label3;

        virtualinvoke r17.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label3:
        return r17;

     label4:
        $r15 := @caughtexception;

        r18 = $r15;

        r16 = virtualinvoke r16.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label5:
        $r3 = new java.lang.NoSuchMethodException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with parameters ");

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in ");

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r13);

        throw $r3;

        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
    }

    private static void expandFieldArray(java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.NoSuchFieldException, java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        java.lang.Object r0, $r6, $r10;
        java.lang.String r1;
        java.lang.Object[] r2, r4, r5, $r7, $r11;
        java.lang.reflect.Field r3;
        java.lang.Class $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r3 = staticinvoke <androidx.multidex.MultiDex: java.lang.reflect.Field findField(java.lang.Object,java.lang.String)>(r0, r1);

        $r6 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r7 = (java.lang.Object[]) $r6;

        r4 = (java.lang.Object[]) $r7;

        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Class getComponentType()>();

        $i1 = lengthof r4;

        $i0 = lengthof r2;

        $i2 = $i1 + $i0;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r9, $i2);

        $r11 = (java.lang.Object[]) $r10;

        r5 = (java.lang.Object[]) $r11;

        $i3 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, $i3);

        $i5 = lengthof r4;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r5, $i5, $i4);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r0, r5);

        return;
    }

    private static void clearOldDexDir(android.content.Context) throws java.lang.Exception
    {
        android.content.Context r0;
        java.io.File r1, r4, $r5, $r6;
        java.io.File[] r2, r3;
        int i0, i9;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r33, $r35, $r36, $r38, $r40, $r41, $r43, $r44;
        java.lang.String $r9, $r12, $r15, $r17, $r20, $r22, $r25, $r29, $r32, $r34, $r37, $r39, $r42, $r45;
        long $l4;

        r0 := @parameter0: android.content.Context;

        $r5 = new java.io.File;

        $r6 = virtualinvoke r0.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "secondary-dexes");

        r1 = $r5;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing old secondary dex dir (");

        $r9 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r12);

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if r2 != null goto label1;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to list secondary dex dir content (");

        $r42 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r45);

        return;

     label1:
        r3 = r2;

        i0 = lengthof r3;

        i9 = 0;

     label2:
        if i9 >= i0 goto label5;

        r4 = r3[i9];

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to delete old file ");

        $r25 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ");

        $l4 = virtualinvoke r4.<java.io.File: long length()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r29);

        $z2 = virtualinvoke r4.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label3;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete old file ");

        $r37 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r39);

        goto label4;

     label3:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old file ");

        $r32 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r34);

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        $z1 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete secondary dex dir ");

        $r20 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r22);

        goto label7;

     label6:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old secondary dex dir ");

        $r15 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r17);

     label7:
        return;
    }

    private static java.io.File getDexDir(android.content.Context, java.io.File, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        java.io.File r1, $r3, $r4, $r6, $r7, r8, r10;
        java.lang.String r2;
        java.lang.Throwable $r5, r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "code_cache");

        r8 = $r3;

     label1:
        staticinvoke <androidx.multidex.MultiDex: void mkdirChecked(java.io.File)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r9 = $r5;

        $r6 = new java.io.File;

        $r7 = virtualinvoke r0.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "code_cache");

        r8 = $r6;

        staticinvoke <androidx.multidex.MultiDex: void mkdirChecked(java.io.File)>(r8);

     label4:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r8, r2);

        r10 = $r4;

        staticinvoke <androidx.multidex.MultiDex: void mkdirChecked(java.io.File)>(r10);

        return r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void mkdirChecked(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r21, $r23, $r24, $r26, $r27;
        java.lang.String $r4, $r16, $r20, $r22, $r25, $r28;
        java.io.IOException $r17;

        r0 := @parameter0: java.io.File;

        virtualinvoke r0.<java.io.File: boolean mkdir()>();

        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label3;

        r1 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        if r1 != null goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create dir ");

        $r25 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Parent file is null.");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MultiDex", $r28);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create dir ");

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". parent file is a dir ");

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", a file ");

        $z3 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", exists ");

        $z4 = virtualinvoke r1.<java.io.File: boolean exists()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", readable ");

        $z5 = virtualinvoke r1.<java.io.File: boolean canRead()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", writable ");

        $z6 = virtualinvoke r1.<java.io.File: boolean canWrite()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MultiDex", $r16);

     label2:
        $r17 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory ");

        $r20 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label3:
        return;
    }

    static java.lang.reflect.Field access$000(java.lang.Object, java.lang.String) throws java.lang.NoSuchFieldException
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.reflect.Field $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <androidx.multidex.MultiDex: java.lang.reflect.Field findField(java.lang.Object,java.lang.String)>(r0, r1);

        return $r2;
    }

    static void access$100(java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.NoSuchFieldException, java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        staticinvoke <androidx.multidex.MultiDex: void expandFieldArray(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r1, r2);

        return;
    }

    static java.lang.reflect.Method access$200(java.lang.Object, java.lang.String, java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.Class[] r2;
        java.lang.reflect.Method $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class[];

        $r3 = staticinvoke <androidx.multidex.MultiDex: java.lang.reflect.Method findMethod(java.lang.Object,java.lang.String,java.lang.Class[])>(r0, r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <androidx.multidex.MultiDex: java.util.Set installedApk> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.version");

        $z0 = staticinvoke <androidx.multidex.MultiDex: boolean isVMMultidexCapable(java.lang.String)>($r1);

        <androidx.multidex.MultiDex: boolean IS_VM_MULTIDEX_CAPABLE> = $z0;

        return;
    }

