androidx.ui.core.ViewLayer
<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayer$Companion Companion>
<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView ownerView>
<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayerContainer container>
<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier drawLayerModifier>
<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function1 drawBlock>
<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function0 invalidateParentLayer>
<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver>
<androidx.ui.core.ViewLayer: boolean clipToBounds>
<androidx.ui.core.ViewLayer: android.graphics.Rect clipBoundsCache>
<androidx.ui.core.ViewLayer: boolean isInvalidated>
<androidx.ui.core.ViewLayer: boolean drawnWithZ>
<androidx.ui.core.ViewLayer: long mTransformOrigin>
<androidx.ui.core.ViewLayer: android.view.ViewOutlineProvider OutlineProvider>
<androidx.ui.core.ViewLayer: java.lang.reflect.Method updateDisplayListIfDirtyMethod>
<androidx.ui.core.ViewLayer: java.lang.reflect.Field recreateDisplayList>
<androidx.ui.core.ViewLayer: boolean hasRetrievedMethod>
    public void <init>(androidx.ui.core.AndroidComposeView, androidx.ui.core.ViewLayerContainer, androidx.ui.core.DrawLayerModifier, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.AndroidComposeView r1, $r8;
        androidx.ui.core.ViewLayerContainer r2, $r11;
        androidx.ui.core.DrawLayerModifier r3;
        kotlin.jvm.functions.Function1 r4;
        kotlin.jvm.functions.Function0 r5;
        android.content.Context $r6;
        androidx.ui.core.OutlineResolver $r7;
        androidx.ui.unit.Density $r9;
        androidx.ui.core.TransformOrigin$Companion $r10;
        long $l0;
        int $i1;
        android.view.View $r12;

        r0 := @this: androidx.ui.core.ViewLayer;

        r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r2 := @parameter1: androidx.ui.core.ViewLayerContainer;

        r3 := @parameter2: androidx.ui.core.DrawLayerModifier;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        r5 := @parameter4: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ownerView");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "container");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "drawLayerModifier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "drawBlock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "invalidateParentLayer");

        $r6 = virtualinvoke r1.<androidx.ui.core.AndroidComposeView: android.content.Context getContext()>();

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r6);

        r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView ownerView> = r1;

        r0.<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayerContainer container> = r2;

        r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier drawLayerModifier> = r3;

        r0.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function1 drawBlock> = r4;

        r0.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function0 invalidateParentLayer> = r5;

        $r7 = new androidx.ui.core.OutlineResolver;

        $r8 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r9 = virtualinvoke $r8.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density getDensity()>();

        specialinvoke $r7.<androidx.ui.core.OutlineResolver: void <init>(androidx.ui.unit.Density)>($r9);

        r0.<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver> = $r7;

        $r10 = <androidx.ui.core.TransformOrigin: androidx.ui.core.TransformOrigin$Companion Companion>;

        $l0 = virtualinvoke $r10.<androidx.ui.core.TransformOrigin$Companion: long getCenter()>();

        r0.<androidx.ui.core.ViewLayer: long mTransformOrigin> = $l0;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setWillNotDraw(boolean)>(0);

        $i1 = staticinvoke <android.view.View: int generateViewId()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setId(int)>($i1);

        $r11 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayerContainer getContainer()>();

        $r12 = (android.view.View) r0;

        virtualinvoke $r11.<androidx.ui.core.ViewLayerContainer: void addView(android.view.View)>($r12);

        return;
    }

    public final androidx.ui.core.AndroidComposeView getOwnerView()
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView ownerView>;

        return $r1;
    }

    public final androidx.ui.core.ViewLayerContainer getContainer()
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.ViewLayerContainer $r1;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayerContainer container>;

        return $r1;
    }

    public final androidx.ui.core.DrawLayerModifier getDrawLayerModifier()
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.DrawLayerModifier $r1;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier drawLayerModifier>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function1 getDrawBlock()
    {
        androidx.ui.core.ViewLayer r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function1 drawBlock>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function0 getInvalidateParentLayer()
    {
        androidx.ui.core.ViewLayer r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function0 invalidateParentLayer>;

        return $r1;
    }

    private final androidx.ui.graphics.Path getManualClipPath()
    {
        androidx.ui.core.ViewLayer r0;
        boolean $z0;
        androidx.ui.core.OutlineResolver $r1;
        androidx.ui.graphics.Path $r2;

        r0 := @this: androidx.ui.core.ViewLayer;

        $z0 = virtualinvoke r0.<androidx.ui.core.ViewLayer: boolean getClipToOutline()>();

        if $z0 != 0 goto label1;

        $r2 = (androidx.ui.graphics.Path) null;

        goto label2;

     label1:
        $r1 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.OutlineResolver: androidx.ui.graphics.Path getClipPath()>();

     label2:
        return $r2;
    }

    public long getLayerId()
    {
        androidx.ui.core.ViewLayer r0;
        int $i0;
        long $l1;

        r0 := @this: androidx.ui.core.ViewLayer;

        $i0 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getId()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public void updateLayerProperties()
    {
        androidx.ui.core.ViewLayer r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        androidx.ui.core.DrawLayerModifier $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15;
        long $l0, $l1, $l3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        int $i2, $i4;
        androidx.ui.graphics.Path $r12, $r17;
        androidx.ui.core.OutlineResolver $r14;
        androidx.ui.graphics.Shape $r16;
        byte $b5;
        kotlin.jvm.functions.Function0 $r18;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $l0 = interfaceinvoke $r1.<androidx.ui.core.DrawLayerModifier: long getTransformOrigin()>();

        r0.<androidx.ui.core.ViewLayer: long mTransformOrigin> = $l0;

        $r2 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f0 = interfaceinvoke $r2.<androidx.ui.core.DrawLayerModifier: float getScaleX()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setScaleX(float)>($f0);

        $r3 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f1 = interfaceinvoke $r3.<androidx.ui.core.DrawLayerModifier: float getScaleY()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setScaleY(float)>($f1);

        $r4 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f2 = interfaceinvoke $r4.<androidx.ui.core.DrawLayerModifier: float getAlpha()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setAlpha(float)>($f2);

        $r5 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f3 = interfaceinvoke $r5.<androidx.ui.core.DrawLayerModifier: float getTranslationX()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setTranslationX(float)>($f3);

        $r6 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f4 = interfaceinvoke $r6.<androidx.ui.core.DrawLayerModifier: float getTranslationY()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setTranslationY(float)>($f4);

        $r7 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f5 = interfaceinvoke $r7.<androidx.ui.core.DrawLayerModifier: float getShadowElevation()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setElevation(float)>($f5);

        $r8 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f6 = interfaceinvoke $r8.<androidx.ui.core.DrawLayerModifier: float getRotationZ()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setRotation(float)>($f6);

        $r9 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f7 = interfaceinvoke $r9.<androidx.ui.core.DrawLayerModifier: float getRotationX()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setRotationX(float)>($f7);

        $r10 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f8 = interfaceinvoke $r10.<androidx.ui.core.DrawLayerModifier: float getRotationY()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setRotationY(float)>($f8);

        $r11 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $z3 = interfaceinvoke $r11.<androidx.ui.core.DrawLayerModifier: boolean getClipToBounds()>();

        r0.<androidx.ui.core.ViewLayer: boolean clipToBounds> = $z3;

        $l1 = r0.<androidx.ui.core.ViewLayer: long mTransformOrigin>;

        $f9 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionX-impl(long)>($l1);

        $i2 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getWidth()>();

        $f10 = (float) $i2;

        $f11 = $f9 * $f10;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setPivotX(float)>($f11);

        $l3 = r0.<androidx.ui.core.ViewLayer: long mTransformOrigin>;

        $f12 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionY-impl(long)>($l3);

        $i4 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getHeight()>();

        $f13 = (float) $i4;

        $f14 = $f12 * $f13;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setPivotY(float)>($f14);

        specialinvoke r0.<androidx.ui.core.ViewLayer: void resetClipBounds()>();

        $r12 = specialinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.graphics.Path getManualClipPath()>();

        if $r12 == null goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        $r13 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $z4 = interfaceinvoke $r13.<androidx.ui.core.DrawLayerModifier: boolean getClipToOutline()>();

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setClipToOutline(boolean)>($z4);

        $r14 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r15 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $r16 = interfaceinvoke $r15.<androidx.ui.core.DrawLayerModifier: androidx.ui.graphics.Shape getOutlineShape()>();

        $f15 = virtualinvoke r0.<androidx.ui.core.ViewLayer: float getAlpha()>();

        z1 = virtualinvoke $r14.<androidx.ui.core.OutlineResolver: boolean update(androidx.ui.graphics.Shape,float)>($r16, $f15);

        specialinvoke r0.<androidx.ui.core.ViewLayer: void updateOutlineResolver()>();

        $r17 = specialinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.graphics.Path getManualClipPath()>();

        if $r17 == null goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z2 = $z6;

        if z0 != z2 goto label5;

        if z2 == 0 goto label6;

        if z1 == 0 goto label6;

     label5:
        virtualinvoke r0.<androidx.ui.core.ViewLayer: void invalidate()>();

     label6:
        $z7 = r0.<androidx.ui.core.ViewLayer: boolean drawnWithZ>;

        if $z7 != 0 goto label7;

        $f16 = virtualinvoke r0.<androidx.ui.core.ViewLayer: float getElevation()>();

        $b5 = $f16 cmpl 0.0F;

        if $b5 <= 0 goto label7;

        $r18 = virtualinvoke r0.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function0 getInvalidateParentLayer()>();

        interfaceinvoke $r18.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label7:
        return;
    }

    private final void updateOutlineResolver()
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.OutlineResolver $r1;
        boolean $z0;
        androidx.ui.core.ViewLayer$Companion $r2;
        android.view.ViewOutlineProvider $r4;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $z0 = virtualinvoke $r1.<androidx.ui.core.OutlineResolver: boolean getSupportsNativeOutline()>();

        if $z0 == 0 goto label1;

        $r2 = <androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayer$Companion Companion>;

        $r4 = virtualinvoke $r2.<androidx.ui.core.ViewLayer$Companion: android.view.ViewOutlineProvider getOutlineProvider()>();

        goto label2;

     label1:
        $r4 = (android.view.ViewOutlineProvider) null;

     label2:
        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setOutlineProvider(android.view.ViewOutlineProvider)>($r4);

        return;
    }

    private final void resetClipBounds()
    {
        androidx.ui.core.ViewLayer r0;
        android.graphics.Rect r1, $r2, $r4, $r5;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.ui.core.ViewLayer;

        $z0 = r0.<androidx.ui.core.ViewLayer: boolean clipToBounds>;

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.ui.core.ViewLayer: android.graphics.Rect clipBoundsCache>;

        if $r2 != null goto label1;

        $r4 = new android.graphics.Rect;

        $i2 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getWidth()>();

        $i3 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getHeight()>();

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i2, $i3);

        r0.<androidx.ui.core.ViewLayer: android.graphics.Rect clipBoundsCache> = $r4;

        goto label2;

     label1:
        r1 = r0.<androidx.ui.core.ViewLayer: android.graphics.Rect clipBoundsCache>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        $i0 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getWidth()>();

        $i1 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getHeight()>();

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        $r5 = r0.<androidx.ui.core.ViewLayer: android.graphics.Rect clipBoundsCache>;

        goto label4;

     label3:
        $r5 = (android.graphics.Rect) null;

     label4:
        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setClipBounds(android.graphics.Rect)>($r5);

        return;
    }

    public void resize(androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.unit.IntPxSize r1, r5, r7;
        int i0, $i8, $i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i28, $i30, i31, i32, $i33;
        long l1, l2, l3, l4, l5, $l6, $l7, $l9, $l10, $l11, $l12, $l15, $l16, $l24, l27, l29;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean z1, z2, z6, z9;
        androidx.ui.core.OutlineResolver r2;
        androidx.ui.unit.PxSize r3, $r4;

        r0 := @this: androidx.ui.core.ViewLayer;

        r1 := @parameter0: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        r5 = r1;

        l27 = virtualinvoke r5.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l6 = l27 >> 32;

        $i28 = (int) $l6;

        i0 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i28);

        z6 = 0;

        l29 = virtualinvoke r1.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l7 = l29 & 4294967295L;

        $i30 = (int) $l7;

        i31 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i30);

        $i8 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getWidth()>();

        if i0 != $i8 goto label1;

        $i23 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getHeight()>();

        if i31 == $i23 goto label2;

     label1:
        $l9 = r0.<androidx.ui.core.ViewLayer: long mTransformOrigin>;

        $f2 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionX-impl(long)>($l9);

        $f3 = (float) i0;

        $f4 = $f2 * $f3;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setPivotX(float)>($f4);

        $l10 = r0.<androidx.ui.core.ViewLayer: long mTransformOrigin>;

        $f5 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionY-impl(long)>($l10);

        $f6 = (float) i31;

        $f7 = $f5 * $f6;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void setPivotY(float)>($f7);

        r2 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        z9 = 0;

        r7 = r1;

        $l24 = virtualinvoke r7.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l11 = $l24 >> 32;

        $i25 = (int) $l11;

        i32 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i25);

        l1 = virtualinvoke r1.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l12 = l1 & 4294967295L;

        $i26 = (int) $l12;

        $i33 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i26);

        $f8 = (float) i32;

        $f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        $f9 = (float) $i33;

        $f11 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f9);

        f0 = $f10;

        z1 = 0;

        $i13 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l2 = (long) $i13;

        f1 = $f11;

        z2 = 0;

        $i14 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l3 = (long) $i14;

        $l16 = l2 << 32;

        $l15 = l3 & 4294967295L;

        l4 = $l16 | $l15;

        l5 = l4;

        $r4 = new androidx.ui.unit.PxSize;

        specialinvoke $r4.<androidx.ui.unit.PxSize: void <init>(long)>(l5);

        r3 = $r4;

        virtualinvoke r2.<androidx.ui.core.OutlineResolver: void update(androidx.ui.unit.PxSize)>(r3);

        specialinvoke r0.<androidx.ui.core.ViewLayer: void updateOutlineResolver()>();

        $i17 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getLeft()>();

        $i18 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getTop()>();

        $i19 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getLeft()>();

        $i20 = $i19 + i0;

        $i21 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getTop()>();

        $i22 = $i21 + i31;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void layout(int,int,int,int)>($i17, $i18, $i20, $i22);

        specialinvoke r0.<androidx.ui.core.ViewLayer: void resetClipBounds()>();

     label2:
        return;
    }

    public void move(androidx.ui.unit.IntPxPosition)
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.unit.IntPxPosition r1, r2;
        int i0, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i12, i13;
        long l1, $l2, $l4, l11;
        boolean z4;

        r0 := @this: androidx.ui.core.ViewLayer;

        r1 := @parameter0: androidx.ui.unit.IntPxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        r2 = r1;

        l11 = virtualinvoke r2.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l2 = l11 >> 32;

        $i12 = (int) $l2;

        i0 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i12);

        $i3 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getLeft()>();

        if i0 == $i3 goto label1;

        $i8 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getLeft()>();

        $i9 = i0 - $i8;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void offsetLeftAndRight(int)>($i9);

     label1:
        z4 = 0;

        l1 = virtualinvoke r1.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l4 = l1 & 4294967295L;

        $i10 = (int) $l4;

        i13 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i10);

        $i5 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getTop()>();

        if i13 == $i5 goto label2;

        $i6 = virtualinvoke r0.<androidx.ui.core.ViewLayer: int getTop()>();

        $i7 = i13 - $i6;

        virtualinvoke r0.<androidx.ui.core.ViewLayer: void offsetTopAndBottom(int)>($i7);

     label2:
        return;
    }

    public void drawLayer(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.graphics.Canvas r1;
        float $f0;
        byte $b0;
        boolean $z0, $z1, $z2;
        androidx.ui.core.ViewLayerContainer $r2;
        android.view.View $r3;
        long $l1;

        r0 := @this: androidx.ui.core.ViewLayer;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $f0 = virtualinvoke r0.<androidx.ui.core.ViewLayer: float getElevation()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<androidx.ui.core.ViewLayer: boolean drawnWithZ> = $z2;

        $z0 = r0.<androidx.ui.core.ViewLayer: boolean drawnWithZ>;

        if $z0 == 0 goto label3;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void enableZ()>();

     label3:
        $r2 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayerContainer getContainer()>();

        $r3 = (android.view.View) r0;

        $l1 = virtualinvoke r0.<androidx.ui.core.ViewLayer: long getDrawingTime()>();

        virtualinvoke $r2.<androidx.ui.core.ViewLayerContainer: void drawChild$ui_platform_release(androidx.ui.graphics.Canvas,android.view.View,long)>(r1, $r3, $l1);

        $z1 = r0.<androidx.ui.core.ViewLayer: boolean drawnWithZ>;

        if $z1 == 0 goto label4;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void disableZ()>();

     label4:
        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        androidx.ui.core.ViewLayer r0;
        android.graphics.Canvas r1;
        androidx.ui.graphics.Canvas r2;
        androidx.ui.graphics.Path r3;
        androidx.ui.core.AndroidComposeView $r4;
        androidx.ui.core.ViewLayer$dispatchDraw$1 $r5;
        androidx.ui.core.OwnedLayer $r6;
        kotlin.jvm.functions.Function0 $r7;

        r0 := @this: androidx.ui.core.ViewLayer;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r2 = staticinvoke <androidx.ui.graphics.AndroidCanvasKt: androidx.ui.graphics.Canvas Canvas(android.graphics.Canvas)>(r1);

        r3 = specialinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.graphics.Path getManualClipPath()>();

        if r3 == null goto label1;

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void save()>();

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void clipPath(androidx.ui.graphics.Path)>(r3);

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r6 = (androidx.ui.core.OwnedLayer) r0;

        $r5 = new androidx.ui.core.ViewLayer$dispatchDraw$1;

        specialinvoke $r5.<androidx.ui.core.ViewLayer$dispatchDraw$1: void <init>(androidx.ui.core.ViewLayer,androidx.ui.graphics.Canvas)>(r0, r2);

        $r7 = (kotlin.jvm.functions.Function0) $r5;

        virtualinvoke $r4.<androidx.ui.core.AndroidComposeView: void observeLayerModelReads(androidx.ui.core.OwnedLayer,kotlin.jvm.functions.Function0)>($r6, $r7);

        if r3 == null goto label2;

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void restore()>();

     label2:
        r0.<androidx.ui.core.ViewLayer: boolean isInvalidated> = 0;

        return;
    }

    public void invalidate()
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.AndroidComposeView r1, $r4;
        java.util.Collection r2;
        boolean z0, $z1;
        java.util.List $r3;

        r0 := @this: androidx.ui.core.ViewLayer;

        $z1 = r0.<androidx.ui.core.ViewLayer: boolean isInvalidated>;

        if $z1 != 0 goto label1;

        r0.<androidx.ui.core.ViewLayer: boolean isInvalidated> = 1;

        specialinvoke r0.<android.view.View: void invalidate()>();

        r1 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r3 = virtualinvoke r1.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        r2 = (java.util.Collection) $r3;

        z0 = 0;

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r0);

        $r4 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        virtualinvoke $r4.<androidx.ui.core.AndroidComposeView: void invalidate()>();

     label1:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.ui.core.ViewLayer r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.ui.core.ViewLayer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

    public void destroy()
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.AndroidComposeView r1;
        java.util.Collection r2;
        boolean z0;
        androidx.ui.core.ViewLayerContainer $r3;
        android.view.View $r4;
        java.util.List $r5;

        r0 := @this: androidx.ui.core.ViewLayer;

        $r3 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayerContainer getContainer()>();

        $r4 = (android.view.View) r0;

        virtualinvoke $r3.<androidx.ui.core.ViewLayerContainer: void removeView(android.view.View)>($r4);

        r1 = virtualinvoke r0.<androidx.ui.core.ViewLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r5 = virtualinvoke r1.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        r2 = (java.util.Collection) $r5;

        z0 = 0;

        interfaceinvoke r2.<java.util.Collection: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public void updateDisplayList()
    {
        androidx.ui.core.ViewLayer r0;
        boolean $z0;
        android.view.View $r1;
        androidx.ui.core.ViewLayer$Companion $r2;

        r0 := @this: androidx.ui.core.ViewLayer;

        $z0 = r0.<androidx.ui.core.ViewLayer: boolean isInvalidated>;

        if $z0 == 0 goto label1;

        $r2 = <androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayer$Companion Companion>;

        $r1 = (android.view.View) r0;

        virtualinvoke $r2.<androidx.ui.core.ViewLayer$Companion: void updateDisplayList(android.view.View)>($r1);

        r0.<androidx.ui.core.ViewLayer: boolean isInvalidated> = 0;

     label1:
        return;
    }

    public void forceLayout()
    {
        androidx.ui.core.ViewLayer r0;

        r0 := @this: androidx.ui.core.ViewLayer;

        return;
    }

    public static final android.view.ViewOutlineProvider access$getOutlineProvider$cp$s412854668()
    {
        android.view.ViewOutlineProvider $r0;

        $r0 = <androidx.ui.core.ViewLayer: android.view.ViewOutlineProvider OutlineProvider>;

        return $r0;
    }

    public static final boolean access$getHasRetrievedMethod$cp$s412854668()
    {
        boolean $z0;

        $z0 = <androidx.ui.core.ViewLayer: boolean hasRetrievedMethod>;

        return $z0;
    }

    public static final void access$setHasRetrievedMethod$cp$s412854668(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.ui.core.ViewLayer: boolean hasRetrievedMethod> = z0;

        return;
    }

    public static final void access$setUpdateDisplayListIfDirtyMethod$cp$s412854668(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;

        r0 := @parameter0: java.lang.reflect.Method;

        <androidx.ui.core.ViewLayer: java.lang.reflect.Method updateDisplayListIfDirtyMethod> = r0;

        return;
    }

    public static final void access$setRecreateDisplayList$cp$s412854668(java.lang.reflect.Field)
    {
        java.lang.reflect.Field r0;

        r0 := @parameter0: java.lang.reflect.Field;

        <androidx.ui.core.ViewLayer: java.lang.reflect.Field recreateDisplayList> = r0;

        return;
    }

    public static final java.lang.reflect.Method access$getUpdateDisplayListIfDirtyMethod$cp$s412854668()
    {
        java.lang.reflect.Method $r0;

        $r0 = <androidx.ui.core.ViewLayer: java.lang.reflect.Method updateDisplayListIfDirtyMethod>;

        return $r0;
    }

    public static final java.lang.reflect.Field access$getRecreateDisplayList$cp$s412854668()
    {
        java.lang.reflect.Field $r0;

        $r0 = <androidx.ui.core.ViewLayer: java.lang.reflect.Field recreateDisplayList>;

        return $r0;
    }

    public static final androidx.ui.core.OutlineResolver access$getOutlineResolver$p(androidx.ui.core.ViewLayer)
    {
        androidx.ui.core.ViewLayer r0;
        androidx.ui.core.OutlineResolver $r1;

        r0 := @parameter0: androidx.ui.core.ViewLayer;

        $r1 = r0.<androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        return $r1;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.ViewLayer$Companion $r0;
        androidx.ui.core.ViewLayer$Companion$OutlineProvider$1 $r1;
        android.view.ViewOutlineProvider $r2;

        $r0 = new androidx.ui.core.ViewLayer$Companion;

        specialinvoke $r0.<androidx.ui.core.ViewLayer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.ViewLayer: androidx.ui.core.ViewLayer$Companion Companion> = $r0;

        $r1 = new androidx.ui.core.ViewLayer$Companion$OutlineProvider$1;

        specialinvoke $r1.<androidx.ui.core.ViewLayer$Companion$OutlineProvider$1: void <init>()>();

        $r2 = (android.view.ViewOutlineProvider) $r1;

        <androidx.ui.core.ViewLayer: android.view.ViewOutlineProvider OutlineProvider> = $r2;

        return;
    }

androidx.ui.core.ViewLayer$Companion$OutlineProvider$1
    void <init>()
    {
        androidx.ui.core.ViewLayer$Companion$OutlineProvider$1 r0;

        r0 := @this: androidx.ui.core.ViewLayer$Companion$OutlineProvider$1;

        specialinvoke r0.<android.view.ViewOutlineProvider: void <init>()>();

        return;
    }

    public void getOutline(android.view.View, android.graphics.Outline)
    {
        androidx.ui.core.ViewLayer$Companion$OutlineProvider$1 r0;
        android.view.View r1;
        android.graphics.Outline r2, r3;
        androidx.ui.core.ViewLayer $r4, $r5;
        androidx.ui.core.OutlineResolver $r6;

        r0 := @this: androidx.ui.core.ViewLayer$Companion$OutlineProvider$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Outline;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outline");

        $r4 = (androidx.ui.core.ViewLayer) r1;

        $r5 = (androidx.ui.core.ViewLayer) r1;

        $r6 = staticinvoke <androidx.ui.core.ViewLayer: androidx.ui.core.OutlineResolver access$getOutlineResolver$p(androidx.ui.core.ViewLayer)>($r5);

        r3 = virtualinvoke $r6.<androidx.ui.core.OutlineResolver: android.graphics.Outline getOutline()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        virtualinvoke r2.<android.graphics.Outline: void set(android.graphics.Outline)>(r3);

        return;
    }

androidx.ui.core.ViewLayer$Companion
    private void <init>()
    {
        androidx.ui.core.ViewLayer$Companion r0;

        r0 := @this: androidx.ui.core.ViewLayer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.view.ViewOutlineProvider getOutlineProvider()
    {
        androidx.ui.core.ViewLayer$Companion r0;
        android.view.ViewOutlineProvider $r1;

        r0 := @this: androidx.ui.core.ViewLayer$Companion;

        $r1 = staticinvoke <androidx.ui.core.ViewLayer: android.view.ViewOutlineProvider access$getOutlineProvider$cp$s412854668()>();

        return $r1;
    }

    public final void updateDisplayList(android.view.View)
    {
        androidx.ui.core.ViewLayer$Companion r0;
        android.view.View r1;
        java.lang.Class[] r2, r6, $r9, $r17, r22;
        java.lang.reflect.Method r3, $r13, $r19, r23, r24, r26, r27, r29, r32;
        java.lang.Class r4, $r10, $r11, $r14, $r18, $r20;
        java.lang.Object[] r5, $r7, r25, r28;
        byte b0;
        boolean $z0;
        int $i1;
        java.lang.Object $r12, $r15;
        java.lang.reflect.Field $r16, $r21, r30, r31;

        r0 := @this: androidx.ui.core.ViewLayer$Companion;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $z0 = staticinvoke <androidx.ui.core.ViewLayer: boolean access$getHasRetrievedMethod$cp$s412854668()>();

        if $z0 != 0 goto label06;

        staticinvoke <androidx.ui.core.ViewLayer: void access$setHasRetrievedMethod$cp$s412854668(boolean)>(1);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 28 goto label01;

        $r18 = class "Landroid/view/View;";

        $r17 = newarray (java.lang.Class)[0];

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("updateDisplayListIfDirty", $r17);

        staticinvoke <androidx.ui.core.ViewLayer: void access$setUpdateDisplayListIfDirtyMethod$cp$s412854668(java.lang.reflect.Method)>($r19);

        $r20 = class "Landroid/view/View;";

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mRecreateDisplayList");

        staticinvoke <androidx.ui.core.ViewLayer: void access$setRecreateDisplayList$cp$s412854668(java.lang.reflect.Field)>($r21);

        goto label02;

     label01:
        $r10 = class "Ljava/lang/Class;";

        r22 = newarray (java.lang.Class)[2];

        r22[0] = class "Ljava/lang/String;";

        $r9 = newarray (java.lang.Class)[0];

        $r11 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        r22[1] = $r11;

        r23 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getDeclaredMethod", r22);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r23, "Class::class.java.getDeclaredMethod(\n                        \"getDeclaredMethod\",\n                        String::class.java,\n                        arrayOf<Class<*>>()::class.java\n                    )");

        r24 = r23;

        r25 = newarray (java.lang.Object)[2];

        r25[0] = "updateDisplayListIfDirty";

        b0 = 1;

        r5 = r25;

        r4 = class "Landroid/view/View;";

        r3 = r24;

        r6 = newarray (java.lang.Class)[0];

        r5[b0] = r6;

        $r12 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, r25);

        $r13 = (java.lang.reflect.Method) $r12;

        staticinvoke <androidx.ui.core.ViewLayer: void access$setUpdateDisplayListIfDirtyMethod$cp$s412854668(java.lang.reflect.Method)>($r13);

        $r14 = class "Ljava/lang/Class;";

        r2 = newarray (java.lang.Class)[1];

        r2[0] = class "Ljava/lang/String;";

        r26 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getDeclaredField", r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r26, "Class::class.java.getDeclaredMethod(\n                        \"getDeclaredField\",\n                        String::class.java\n                    )");

        r27 = r26;

        r28 = newarray (java.lang.Object)[1];

        r28[0] = "mRecreateDisplayList";

        $r15 = virtualinvoke r27.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(class "Landroid/view/View;", r28);

        $r16 = (java.lang.reflect.Field) $r15;

        staticinvoke <androidx.ui.core.ViewLayer: void access$setRecreateDisplayList$cp$s412854668(java.lang.reflect.Field)>($r16);

     label02:
        r29 = staticinvoke <androidx.ui.core.ViewLayer: java.lang.reflect.Method access$getUpdateDisplayListIfDirtyMethod$cp$s412854668()>();

        if r29 != null goto label03;

        goto label04;

     label03:
        virtualinvoke r29.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label04:
        r30 = staticinvoke <androidx.ui.core.ViewLayer: java.lang.reflect.Field access$getRecreateDisplayList$cp$s412854668()>();

        if r30 != null goto label05;

        goto label06;

     label05:
        virtualinvoke r30.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label06:
        r31 = staticinvoke <androidx.ui.core.ViewLayer: java.lang.reflect.Field access$getRecreateDisplayList$cp$s412854668()>();

        if r31 != null goto label07;

        goto label08;

     label07:
        virtualinvoke r31.<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>(r1, 1);

     label08:
        r32 = staticinvoke <androidx.ui.core.ViewLayer: java.lang.reflect.Method access$getUpdateDisplayListIfDirtyMethod$cp$s412854668()>();

        if r32 != null goto label09;

        goto label10;

     label09:
        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke r32.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r7);

     label10:
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.ViewLayer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.ViewLayer$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.ViewLayer$Companion: void <init>()>();

        return;
    }

androidx.ui.core.ViewLayer$dispatchDraw$1$1
<androidx.ui.core.ViewLayer$dispatchDraw$1$1: androidx.ui.core.ViewLayer $this>
<androidx.ui.core.ViewLayer$dispatchDraw$1$1: androidx.ui.graphics.Canvas $this$1>
    void <init>(androidx.ui.core.ViewLayer, androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.ViewLayer$dispatchDraw$1$1 r0;
        androidx.ui.core.ViewLayer $r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.ViewLayer$dispatchDraw$1$1;

        $r1 := @parameter0: androidx.ui.core.ViewLayer;

        $r2 := @parameter1: androidx.ui.graphics.Canvas;

        r0.<androidx.ui.core.ViewLayer$dispatchDraw$1$1: androidx.ui.core.ViewLayer $this> = $r1;

        r0.<androidx.ui.core.ViewLayer$dispatchDraw$1$1: androidx.ui.graphics.Canvas $this$1> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.ViewLayer$dispatchDraw$1$1 r0;
        androidx.ui.core.ViewLayer $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.ViewLayer$dispatchDraw$1$1;

        $r1 = r0.<androidx.ui.core.ViewLayer$dispatchDraw$1$1: androidx.ui.core.ViewLayer $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function1 getDrawBlock()>();

        $r3 = r0.<androidx.ui.core.ViewLayer$dispatchDraw$1$1: androidx.ui.graphics.Canvas $this$1>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ViewLayer$dispatchDraw$1$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.ViewLayer$dispatchDraw$1$1;

        virtualinvoke r0.<androidx.ui.core.ViewLayer$dispatchDraw$1$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.ViewLayer$dispatchDraw$1
<androidx.ui.core.ViewLayer$dispatchDraw$1: androidx.ui.core.ViewLayer $this>
<androidx.ui.core.ViewLayer$dispatchDraw$1: androidx.ui.graphics.Canvas $uiCanvas>
    void <init>(androidx.ui.core.ViewLayer, androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.ViewLayer$dispatchDraw$1 r0;
        androidx.ui.core.ViewLayer $r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.ViewLayer$dispatchDraw$1;

        $r1 := @parameter0: androidx.ui.core.ViewLayer;

        $r2 := @parameter1: androidx.ui.graphics.Canvas;

        r0.<androidx.ui.core.ViewLayer$dispatchDraw$1: androidx.ui.core.ViewLayer $this> = $r1;

        r0.<androidx.ui.core.ViewLayer$dispatchDraw$1: androidx.ui.graphics.Canvas $uiCanvas> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.ViewLayer$dispatchDraw$1 r0;
        androidx.ui.core.ViewLayer $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.ViewLayer$dispatchDraw$1;

        $r1 = r0.<androidx.ui.core.ViewLayer$dispatchDraw$1: androidx.ui.core.ViewLayer $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.ViewLayer: kotlin.jvm.functions.Function1 getDrawBlock()>();

        $r3 = r0.<androidx.ui.core.ViewLayer$dispatchDraw$1: androidx.ui.graphics.Canvas $uiCanvas>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ViewLayer$dispatchDraw$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.ViewLayer$dispatchDraw$1;

        virtualinvoke r0.<androidx.ui.core.ViewLayer$dispatchDraw$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

