androidx.wear.watchface.client.WatchFaceControlClientImpl
<androidx.wear.watchface.client.WatchFaceControlClientImpl: android.content.Context context>
<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>
<androidx.wear.watchface.client.WatchFaceControlClientImpl: android.content.ServiceConnection serviceConnection>
<androidx.wear.watchface.client.WatchFaceControlClientImpl: boolean closed>
    public void <init>(android.content.Context, androidx.wear.watchface.control.IWatchFaceControlService, android.content.ServiceConnection)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        android.content.Context r1;
        androidx.wear.watchface.control.IWatchFaceControlService r2;
        android.content.ServiceConnection r3;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.wear.watchface.control.IWatchFaceControlService;

        r3 := @parameter2: android.content.ServiceConnection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "service");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "serviceConnection");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: android.content.Context context> = r1;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service> = r2;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: android.content.ServiceConnection serviceConnection> = r3;

        return;
    }

    public androidx.wear.watchface.client.InteractiveWatchFaceClientImpl getInteractiveWatchFaceClientInstance(java.lang.String)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        java.lang.String r1;
        androidx.wear.watchface.control.IInteractiveWatchFace r2, r3, r4;
        boolean z0, z1;
        androidx.wear.watchface.control.IWatchFaceControlService $r5;
        androidx.wear.watchface.client.InteractiveWatchFaceClientImpl $r6;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "instanceId");

        $r5 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        r2 = interfaceinvoke $r5.<androidx.wear.watchface.control.IWatchFaceControlService: androidx.wear.watchface.control.IInteractiveWatchFace getInteractiveWatchFaceInstance(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        $r6 = new androidx.wear.watchface.client.InteractiveWatchFaceClientImpl;

        specialinvoke $r6.<androidx.wear.watchface.client.InteractiveWatchFaceClientImpl: void <init>(androidx.wear.watchface.control.IInteractiveWatchFace)>(r4);

     label2:
        return $r6;
    }

    public androidx.wear.watchface.client.HeadlessWatchFaceClient createHeadlessWatchFaceClient(android.content.ComponentName, androidx.wear.watchface.client.DeviceConfig, int, int)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        android.content.ComponentName r1;
        androidx.wear.watchface.client.DeviceConfig r2;
        int i0, i1;
        java.io.Closeable r3;
        boolean z0, z2, z3, z5;
        androidx.wear.watchface.control.IHeadlessWatchFace r4, r5, r6;
        androidx.wear.watchface.client.HeadlessWatchFaceClient r7;
        androidx.wear.utility.TraceEvent $r8, r15;
        androidx.wear.watchface.control.data.HeadlessWatchFaceInstanceParams $r9;
        androidx.wear.watchface.control.IWatchFaceControlService $r10;
        androidx.wear.watchface.data.DeviceConfig $r11;
        java.lang.Throwable $r12, $r13, r14, r17, r18, r19;
        androidx.wear.watchface.client.HeadlessWatchFaceClientImpl $r16;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: androidx.wear.watchface.client.DeviceConfig;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "watchFaceName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "deviceConfig");

        $r8 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r8.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceControlClientImpl.createHeadlessWatchFaceClient");

        r3 = (java.io.Closeable) $r8;

        z0 = 0;

        z5 = 0;

        r14 = (java.lang.Throwable) null;

     label1:
        r15 = (androidx.wear.utility.TraceEvent) r3;

        specialinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: void requireNotClosed()>();

        $r10 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        $r9 = new androidx.wear.watchface.control.data.HeadlessWatchFaceInstanceParams;

        $r11 = virtualinvoke r2.<androidx.wear.watchface.client.DeviceConfig: androidx.wear.watchface.data.DeviceConfig asWireDeviceConfig()>();

        specialinvoke $r9.<androidx.wear.watchface.control.data.HeadlessWatchFaceInstanceParams: void <init>(android.content.ComponentName,androidx.wear.watchface.data.DeviceConfig,int,int)>(r1, $r11, i0, i1);

        r4 = interfaceinvoke $r10.<androidx.wear.watchface.control.IWatchFaceControlService: androidx.wear.watchface.control.IHeadlessWatchFace createHeadlessWatchFaceInstance(androidx.wear.watchface.control.data.HeadlessWatchFaceInstanceParams)>($r9);

        if r4 != null goto label2;

        $r16 = null;

        goto label3;

     label2:
        r5 = r4;

        z2 = 0;

        z3 = 0;

        r6 = r5;

        $r16 = new androidx.wear.watchface.client.HeadlessWatchFaceClientImpl;

        specialinvoke $r16.<androidx.wear.watchface.client.HeadlessWatchFaceClientImpl: void <init>(androidx.wear.watchface.control.IHeadlessWatchFace)>(r6);

     label3:
        r7 = (androidx.wear.watchface.client.HeadlessWatchFaceClient) $r16;

     label4:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r14);

        return r7;

     label5:
        $r12 := @caughtexception;

        r17 = $r12;

        r18 = r17;

        throw r17;

     label6:
        $r13 := @caughtexception;

        r19 = $r13;

     label7:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r18);

        throw r19;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.lang.Object getOrCreateInteractiveWatchFaceClient(java.lang.String, androidx.wear.watchface.client.DeviceConfig, androidx.wear.watchface.client.WatchUiState, androidx.wear.watchface.style.UserStyleData, java.util.Map, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        java.lang.String r1, r15, r24, $r49;
        androidx.wear.watchface.client.DeviceConfig r2;
        androidx.wear.watchface.client.WatchUiState r3;
        androidx.wear.watchface.style.UserStyleData r4;
        java.util.Map r5, $r46, r56, r60;
        kotlin.coroutines.Continuation $r6, r9, $r27, r47;
        androidx.wear.utility.AsyncTraceEvent r7, $r25;
        boolean z0, z1, $z4, $z5, $z6, z9, z12, $z13, z16, z17, z18;
        kotlin.coroutines.SafeContinuation r8, $r26;
        android.os.IBinder$DeathRecipient r10;
        android.os.IBinder r11;
        androidx.wear.watchface.style.data.UserStyleWireFormat r12, r21, $r53, r54, $r55;
        androidx.wear.watchface.data.WatchUiState r13, r22, $r51;
        androidx.wear.watchface.data.DeviceConfig r14, r23, $r50;
        androidx.wear.watchface.control.IWatchFaceControlService r16, $r29, $r48;
        java.util.Map$Entry r17, r62;
        androidx.wear.watchface.data.IdAndComplicationDataWireFormat r18, $r40;
        androidx.wear.watchface.control.IInteractiveWatchFace r19, r65;
        java.util.List r20, $r57, r64;
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1 $r28;
        long $l0, $l1;
        int $i2, $i3, $i4;
        java.util.ArrayList $r30;
        java.util.Set $r31;
        androidx.wear.watchface.control.data.WallpaperInteractiveWatchFaceInstanceParams $r32;
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2 $r33;
        androidx.wear.watchface.control.IPendingInteractiveWatchFace $r34;
        androidx.wear.watchface.client.InteractiveWatchFaceClientImpl $r35, r66;
        java.lang.Object $r36, $r37, $r38, $r39, $r41, $r43;
        java.lang.Number $r42;
        androidx.wear.complications.data.ComplicationData $r44;
        android.support.wearable.complications.ComplicationData $r45;
        java.util.Collection r59, r63;
        java.util.Iterator r61;
        kotlin.Result$Companion r67;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.wear.watchface.client.DeviceConfig;

        r3 := @parameter2: androidx.wear.watchface.client.WatchUiState;

        r4 := @parameter3: androidx.wear.watchface.style.UserStyleData;

        r5 := @parameter4: java.util.Map;

        $r6 := @parameter5: kotlin.coroutines.Continuation;

        specialinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: void requireNotClosed()>();

        $r25 = new androidx.wear.utility.AsyncTraceEvent;

        specialinvoke $r25.<androidx.wear.utility.AsyncTraceEvent: void <init>(java.lang.String)>("WatchFaceControlClientImpl.getOrCreateWallpaperServiceBackedInteractiveWatchFaceClientAsync");

        r7 = $r25;

        z0 = 0;

        z9 = 0;

        r47 = $r6;

        z1 = 0;

        $r26 = new kotlin.coroutines.SafeContinuation;

        $r27 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r47);

        specialinvoke $r26.<kotlin.coroutines.SafeContinuation: void <init>(kotlin.coroutines.Continuation)>($r27);

        r8 = $r26;

        r9 = (kotlin.coroutines.Continuation) r8;

        $r28 = new androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1;

        specialinvoke $r28.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1: void <init>(kotlin.coroutines.Continuation)>(r9);

        r10 = (android.os.IBinder$DeathRecipient) $r28;

        $r29 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        r11 = interfaceinvoke $r29.<androidx.wear.watchface.control.IWatchFaceControlService: android.os.IBinder asBinder()>();

        interfaceinvoke r11.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r10, 0);

        $r48 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        $r49 = r1;

        $r50 = new androidx.wear.watchface.data.DeviceConfig;

        $z4 = virtualinvoke r2.<androidx.wear.watchface.client.DeviceConfig: boolean hasLowBitAmbient()>();

        $z5 = virtualinvoke r2.<androidx.wear.watchface.client.DeviceConfig: boolean hasBurnInProtection()>();

        $l0 = virtualinvoke r2.<androidx.wear.watchface.client.DeviceConfig: long getAnalogPreviewReferenceTimeMillis()>();

        $l1 = virtualinvoke r2.<androidx.wear.watchface.client.DeviceConfig: long getDigitalPreviewReferenceTimeMillis()>();

        specialinvoke $r50.<androidx.wear.watchface.data.DeviceConfig: void <init>(boolean,boolean,long,long)>($z4, $z5, $l0, $l1);

        $r51 = new androidx.wear.watchface.data.WatchUiState;

        $z6 = virtualinvoke r3.<androidx.wear.watchface.client.WatchUiState: boolean inAmbientMode()>();

        $i2 = virtualinvoke r3.<androidx.wear.watchface.client.WatchUiState: int getInterruptionFilter()>();

        specialinvoke $r51.<androidx.wear.watchface.data.WatchUiState: void <init>(boolean,int)>($z6, $i2);

        if r4 != null goto label01;

        $r53 = null;

        goto label02;

     label01:
        $r53 = virtualinvoke r4.<androidx.wear.watchface.style.UserStyleData: androidx.wear.watchface.style.data.UserStyleWireFormat toWireFormat()>();

     label02:
        r54 = $r53;

        if r54 != null goto label03;

        $r55 = new androidx.wear.watchface.style.data.UserStyleWireFormat;

        $r46 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        specialinvoke $r55.<androidx.wear.watchface.style.data.UserStyleWireFormat: void <init>(java.util.Map)>($r46);

        goto label04;

     label03:
        $r55 = r54;

     label04:
        r56 = r5;

        if r56 != null goto label05;

        $r57 = null;

        goto label08;

     label05:
        r12 = $r55;

        r13 = $r51;

        r14 = $r50;

        r15 = r1;

        r16 = $r48;

        $r30 = new java.util.ArrayList;

        $i3 = interfaceinvoke r56.<java.util.Map: int size()>();

        specialinvoke $r30.<java.util.ArrayList: void <init>(int)>($i3);

        r59 = (java.util.Collection) $r30;

        r60 = r56;

        z12 = 0;

        $r31 = interfaceinvoke r60.<java.util.Map: java.util.Set entrySet()>();

        r61 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z13 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label07;

        $r39 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r62 = (java.util.Map$Entry) $r39;

        r17 = r62;

        r63 = r59;

        $r40 = new androidx.wear.watchface.data.IdAndComplicationDataWireFormat;

        $r41 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r42 = (java.lang.Number) $r41;

        $i4 = virtualinvoke $r42.<java.lang.Number: int intValue()>();

        $r43 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r44 = (androidx.wear.complications.data.ComplicationData) $r43;

        $r45 = virtualinvoke $r44.<androidx.wear.complications.data.ComplicationData: android.support.wearable.complications.ComplicationData asWireComplicationData()>();

        specialinvoke $r40.<androidx.wear.watchface.data.IdAndComplicationDataWireFormat: void <init>(int,android.support.wearable.complications.ComplicationData)>($i4, $r45);

        r18 = $r40;

        interfaceinvoke r63.<java.util.Collection: boolean add(java.lang.Object)>(r18);

        goto label06;

     label07:
        r64 = (java.util.List) r59;

        $r48 = r16;

        $r49 = r15;

        $r50 = r14;

        $r51 = r13;

        $r55 = r12;

        $r57 = r64;

     label08:
        r20 = $r57;

        r21 = $r55;

        r22 = $r51;

        r23 = $r50;

        r24 = $r49;

        $r32 = new androidx.wear.watchface.control.data.WallpaperInteractiveWatchFaceInstanceParams;

        specialinvoke $r32.<androidx.wear.watchface.control.data.WallpaperInteractiveWatchFaceInstanceParams: void <init>(java.lang.String,androidx.wear.watchface.data.DeviceConfig,androidx.wear.watchface.data.WatchUiState,androidx.wear.watchface.style.data.UserStyleWireFormat,java.util.List)>(r24, r23, r22, r21, r20);

        $r33 = new androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2;

        specialinvoke $r33.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: void <init>(android.os.IBinder,android.os.IBinder$DeathRecipient,androidx.wear.utility.AsyncTraceEvent,kotlin.coroutines.Continuation)>(r11, r10, r7, r9);

        $r34 = (androidx.wear.watchface.control.IPendingInteractiveWatchFace) $r33;

        r19 = interfaceinvoke $r48.<androidx.wear.watchface.control.IWatchFaceControlService: androidx.wear.watchface.control.IInteractiveWatchFace getOrCreateInteractiveWatchFace(androidx.wear.watchface.control.data.WallpaperInteractiveWatchFaceInstanceParams,androidx.wear.watchface.control.IPendingInteractiveWatchFace)>($r32, $r34);

        if r19 != null goto label09;

        goto label10;

     label09:
        r65 = r19;

        z16 = 0;

        interfaceinvoke r11.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r10, 0);

        virtualinvoke r7.<androidx.wear.utility.AsyncTraceEvent: void close()>();

        $r35 = new androidx.wear.watchface.client.InteractiveWatchFaceClientImpl;

        specialinvoke $r35.<androidx.wear.watchface.client.InteractiveWatchFaceClientImpl: void <init>(androidx.wear.watchface.control.IInteractiveWatchFace)>(r65);

        r66 = $r35;

        z17 = 0;

        r67 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z18 = 0;

        $r36 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r66);

        interfaceinvoke r9.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r36);

     label10:
        $r37 = virtualinvoke r8.<kotlin.coroutines.SafeContinuation: java.lang.Object getOrThrow()>();

        $r38 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r37 != $r38 goto label11;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r6);

     label11:
        return $r37;
    }

    public androidx.wear.watchface.client.EditorServiceClient getEditorServiceClient()
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        java.io.Closeable r1;
        boolean z0, z2;
        androidx.wear.watchface.editor.IEditorService r2;
        androidx.wear.watchface.client.EditorServiceClient r3;
        androidx.wear.utility.TraceEvent $r4, r10;
        androidx.wear.watchface.client.EditorServiceClientImpl $r5;
        androidx.wear.watchface.control.IWatchFaceControlService $r6;
        java.lang.Throwable $r7, $r8, r9, r11, r12, r13;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        $r4 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r4.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceControlClientImpl.getEditorServiceClient");

        r1 = (java.io.Closeable) $r4;

        z0 = 0;

        z2 = 0;

        r9 = (java.lang.Throwable) null;

     label1:
        r10 = (androidx.wear.utility.TraceEvent) r1;

        specialinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: void requireNotClosed()>();

        $r5 = new androidx.wear.watchface.client.EditorServiceClientImpl;

        $r6 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        r2 = interfaceinvoke $r6.<androidx.wear.watchface.control.IWatchFaceControlService: androidx.wear.watchface.editor.IEditorService getEditorService()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "service.editorService");

        specialinvoke $r5.<androidx.wear.watchface.client.EditorServiceClientImpl: void <init>(androidx.wear.watchface.editor.IEditorService)>(r2);

        r3 = (androidx.wear.watchface.client.EditorServiceClient) $r5;

     label2:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r9);

        return r3;

     label3:
        $r7 := @caughtexception;

        r11 = $r7;

        r12 = r11;

        throw r11;

     label4:
        $r8 := @caughtexception;

        r13 = $r8;

     label5:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r12);

        throw r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.Map getDefaultComplicationDataSourcePoliciesAndType(android.content.ComponentName)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        android.content.ComponentName r1;
        java.io.Closeable r2;
        boolean z0, $z3, z4, z9;
        java.lang.Object r3, $r12, $r15, r36, r52, r54;
        java.util.Map$Entry r4, r53;
        androidx.wear.utility.TraceEvent $r5, r31;
        androidx.wear.watchface.control.IWatchFaceControlService $r6, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10;
        androidx.wear.watchface.client.DeviceConfig $r7;
        androidx.wear.watchface.client.HeadlessWatchFaceClient $r8;
        java.util.LinkedHashMap $r9, $r21;
        java.util.Set $r10;
        androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType $r11, $r22, r45, r56;
        androidx.wear.watchface.client.ComplicationSlotState $r13, $r16;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r14, $r23;
        androidx.wear.complications.data.ComplicationType $r17, $r25;
        androidx.wear.watchface.control.data.DefaultProviderPoliciesParams $r19;
        androidx.wear.complications.data.ComplicationType$Companion $r24;
        java.lang.Throwable $r27, $r28, $r29, r30, r58, r60, r61, r62;
        androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat[] $r32;
        java.lang.Object[] $r33;
        java.util.Map r34, r38, r42, $r46, $r48, r49, r55, r59;
        androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat r37, r40;
        java.lang.Integer r39, r41;
        java.util.List $r43, $r44;
        java.lang.Iterable $r50;
        java.util.Iterator r51;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "watchFaceName");

        $r5 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r5.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceControlClientImpl.getDefaultProviderPolicies");

        r2 = (java.io.Closeable) $r5;

        z0 = 0;

        z4 = 0;

        r30 = (java.lang.Throwable) null;

     label01:
        r31 = (androidx.wear.utility.TraceEvent) r2;

        specialinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: void requireNotClosed()>();

        $r6 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        $i0 = interfaceinvoke $r6.<androidx.wear.watchface.control.IWatchFaceControlService: int getApiVersion()>();

        if $i0 < 2 goto label06;

        $r20 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.control.IWatchFaceControlService service>;

        $r19 = new androidx.wear.watchface.control.data.DefaultProviderPoliciesParams;

        specialinvoke $r19.<androidx.wear.watchface.control.data.DefaultProviderPoliciesParams: void <init>(android.content.ComponentName)>(r1);

        $r32 = interfaceinvoke $r20.<androidx.wear.watchface.control.IWatchFaceControlService: androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat[] getDefaultProviderPolicies(androidx.wear.watchface.control.data.DefaultProviderPoliciesParams)>($r19);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "service.getDefaultProvid\u2026iesParams(watchFaceName))");

        $r33 = (java.lang.Object[]) $r32;

        $i3 = lengthof $r33;

        $i4 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i3);

        i8 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i4, 16);

        $r21 = new java.util.LinkedHashMap;

        specialinvoke $r21.<java.util.LinkedHashMap: void <init>(int)>(i8);

        r34 = (java.util.Map) $r21;

        $i9 = lengthof $r33;

        i10 = 0;

     label02:
        if i10 >= $i9 goto label05;

        r36 = $r33[i10];

        r37 = (androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat) r36;

        r38 = r34;

        $i5 = virtualinvoke r37.<androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat: int getId()>();

        r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r40 = (androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat) r36;

        r41 = r39;

        r42 = r38;

        $r22 = new androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        $r23 = new androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        $r43 = virtualinvoke r40.<androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat: java.util.List getDefaultProvidersToTry()>();

        if $r43 != null goto label03;

        $r44 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label04;

     label03:
        $r44 = $r43;

     label04:
        $i6 = virtualinvoke r40.<androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat: int getFallbackSystemProvider()>();

        specialinvoke $r23.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: void <init>(java.util.List,int)>($r44, $i6);

        $r24 = <androidx.wear.complications.data.ComplicationType: androidx.wear.complications.data.ComplicationType$Companion Companion>;

        $i7 = virtualinvoke r40.<androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat: int getDefaultProviderType()>();

        $r25 = virtualinvoke $r24.<androidx.wear.complications.data.ComplicationType$Companion: androidx.wear.complications.data.ComplicationType fromWireType(int)>($i7);

        specialinvoke $r22.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: void <init>(androidx.wear.complications.DefaultComplicationDataSourcePolicy,androidx.wear.complications.data.ComplicationType)>($r23, $r25);

        r45 = $r22;

        interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r45);

        i10 = i10 + 1;

        goto label02;

     label05:
        $r46 = r34;

        goto label13;

     label06:
        $r7 = new androidx.wear.watchface.client.DeviceConfig;

        specialinvoke $r7.<androidx.wear.watchface.client.DeviceConfig: void <init>(boolean,boolean,long,long)>(0, 0, 0L, 0L);

        $r8 = virtualinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.client.HeadlessWatchFaceClient createHeadlessWatchFaceClient(android.content.ComponentName,androidx.wear.watchface.client.DeviceConfig,int,int)>(r1, $r7, 1, 1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r8);

     label07:
        $r48 = interfaceinvoke $r8.<androidx.wear.watchface.client.HeadlessWatchFaceClient: java.util.Map getComplicationSlotsState()>();

        z9 = 0;

        $r9 = new java.util.LinkedHashMap;

        $i1 = interfaceinvoke $r48.<java.util.Map: int size()>();

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(int)>($i2);

        r49 = (java.util.Map) $r9;

        $r10 = interfaceinvoke $r48.<java.util.Map: java.util.Set entrySet()>();

        $r50 = (java.lang.Iterable) $r10;

        r51 = interfaceinvoke $r50.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        r52 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.util.Map$Entry) r52;

        r3 = interfaceinvoke r53.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.util.Map$Entry) r52;

        r54 = r3;

        r55 = r49;

        $r11 = new androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (androidx.wear.watchface.client.ComplicationSlotState) $r12;

        $r14 = virtualinvoke $r13.<androidx.wear.watchface.client.ComplicationSlotState: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $r15 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (androidx.wear.watchface.client.ComplicationSlotState) $r15;

        $r17 = virtualinvoke $r16.<androidx.wear.watchface.client.ComplicationSlotState: androidx.wear.complications.data.ComplicationType getDefaultDataSourceType()>();

        specialinvoke $r11.<androidx.wear.watchface.client.DefaultComplicationDataSourcePolicyAndType: void <init>(androidx.wear.complications.DefaultComplicationDataSourcePolicy,androidx.wear.complications.data.ComplicationType)>($r14, $r17);

        r56 = $r11;

        interfaceinvoke r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, r56);

        goto label08;

     label09:
        interfaceinvoke $r8.<androidx.wear.watchface.client.HeadlessWatchFaceClient: void close()>();

        goto label12;

     label10:
        $r27 := @caughtexception;

        r58 = $r27;

     label11:
        interfaceinvoke $r8.<androidx.wear.watchface.client.HeadlessWatchFaceClient: void close()>();

        throw r58;

     label12:
        $r46 = r49;

     label13:
        r59 = $r46;

     label14:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r30);

        goto label18;

     label15:
        $r28 := @caughtexception;

        r60 = $r28;

        r61 = r60;

        throw r60;

     label16:
        $r29 := @caughtexception;

        r62 = $r29;

     label17:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r61);

        throw r62;

     label18:
        return r59;

        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private final void requireNotClosed()
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        boolean z0, z1, $z3, $z4, z5;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        $z3 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: boolean closed>;

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        z1 = 0;

        z5 = 0;

        if z0 != 0 goto label3;

        r4 = "WatchFaceControlClient method called after close";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label3:
        return;
    }

    public void close()
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        java.io.Closeable r1;
        boolean z0, z2;
        androidx.wear.utility.TraceEvent $r2, r8;
        android.content.ServiceConnection $r3;
        android.content.Context $r4;
        java.lang.Throwable $r5, $r6, r7, r10, r11, r12;
        kotlin.Unit r9;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        $r2 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r2.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceControlClientImpl.close");

        r1 = (java.io.Closeable) $r2;

        z0 = 0;

        z2 = 0;

        r7 = (java.lang.Throwable) null;

     label1:
        r8 = (androidx.wear.utility.TraceEvent) r1;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: boolean closed> = 1;

        $r4 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: android.content.Context context>;

        $r3 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: android.content.ServiceConnection serviceConnection>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r3);

        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r7);

        goto label6;

     label3:
        $r6 := @caughtexception;

        r10 = $r6;

        r11 = r10;

        throw r10;

     label4:
        $r5 := @caughtexception;

        r12 = $r5;

     label5:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r11);

        throw r12;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public volatile androidx.wear.watchface.client.InteractiveWatchFaceClient getInteractiveWatchFaceClientInstance(java.lang.String)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl r0;
        java.lang.String r1;
        androidx.wear.watchface.client.InteractiveWatchFaceClientImpl $r2;
        androidx.wear.watchface.client.InteractiveWatchFaceClient $r3;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl: androidx.wear.watchface.client.InteractiveWatchFaceClientImpl getInteractiveWatchFaceClientInstance(java.lang.String)>(r1);

        $r3 = (androidx.wear.watchface.client.InteractiveWatchFaceClient) $r2;

        return $r3;
    }

androidx.wear.watchface.client.WatchFaceControlClientImpl$Companion
    private void <init>()
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$Companion r0;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$Companion: void <init>()>();

        return;
    }

androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2
<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder $serviceBinder>
<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder$DeathRecipient $deathObserver>
<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: androidx.wear.utility.AsyncTraceEvent $traceEvent>
<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: kotlin.coroutines.Continuation $continuation>
    void <init>(android.os.IBinder, android.os.IBinder$DeathRecipient, androidx.wear.utility.AsyncTraceEvent, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2 r0;
        android.os.IBinder $r1;
        android.os.IBinder$DeathRecipient $r2;
        androidx.wear.utility.AsyncTraceEvent $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.os.IBinder$DeathRecipient;

        $r3 := @parameter2: androidx.wear.utility.AsyncTraceEvent;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder $serviceBinder> = $r1;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder$DeathRecipient $deathObserver> = $r2;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: androidx.wear.utility.AsyncTraceEvent $traceEvent> = $r3;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: kotlin.coroutines.Continuation $continuation> = $r4;

        specialinvoke r0.<androidx.wear.watchface.control.IPendingInteractiveWatchFace$Stub: void <init>()>();

        return;
    }

    public int getApiVersion()
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2 r0;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2;

        return 1;
    }

    public void onInteractiveWatchFaceCreated(androidx.wear.watchface.control.IInteractiveWatchFace)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2 r0;
        androidx.wear.watchface.control.IInteractiveWatchFace r1;
        kotlin.coroutines.Continuation r2;
        androidx.wear.watchface.client.InteractiveWatchFaceClientImpl r3, $r8;
        boolean z0, z1;
        kotlin.Result$Companion r4;
        android.os.IBinder$DeathRecipient $r5;
        android.os.IBinder $r6;
        androidx.wear.utility.AsyncTraceEvent $r7;
        java.lang.Object $r9;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2;

        r1 := @parameter0: androidx.wear.watchface.control.IInteractiveWatchFace;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "iInteractiveWatchFace");

        $r6 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder $serviceBinder>;

        $r5 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder$DeathRecipient $deathObserver>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        $r7 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: androidx.wear.utility.AsyncTraceEvent $traceEvent>;

        virtualinvoke $r7.<androidx.wear.utility.AsyncTraceEvent: void close()>();

        r2 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: kotlin.coroutines.Continuation $continuation>;

        $r8 = new androidx.wear.watchface.client.InteractiveWatchFaceClientImpl;

        specialinvoke $r8.<androidx.wear.watchface.client.InteractiveWatchFaceClientImpl: void <init>(androidx.wear.watchface.control.IInteractiveWatchFace)>(r1);

        r3 = $r8;

        z0 = 0;

        r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r3);

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

        return;
    }

    public void onInteractiveWatchFaceCrashed(androidx.wear.watchface.control.data.CrashInfoParcel)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2 r0;
        androidx.wear.watchface.control.data.CrashInfoParcel r1;
        kotlin.coroutines.Continuation r2;
        java.lang.Throwable r3;
        boolean z0, z1;
        kotlin.Result$Companion r4;
        android.os.IBinder$DeathRecipient $r5;
        android.os.IBinder $r6;
        androidx.wear.utility.AsyncTraceEvent $r7;
        androidx.wear.watchface.client.WatchFaceControlClient$ServiceStartFailureException $r8;
        java.lang.String $r9;
        java.lang.Object $r10, $r11;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2;

        r1 := @parameter0: androidx.wear.watchface.control.data.CrashInfoParcel;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "exception");

        $r6 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder $serviceBinder>;

        $r5 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: android.os.IBinder$DeathRecipient $deathObserver>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        $r7 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: androidx.wear.utility.AsyncTraceEvent $traceEvent>;

        virtualinvoke $r7.<androidx.wear.utility.AsyncTraceEvent: void close()>();

        r2 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$2: kotlin.coroutines.Continuation $continuation>;

        $r8 = new androidx.wear.watchface.client.WatchFaceControlClient$ServiceStartFailureException;

        $r9 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Watchface crashed during init: ", r1);

        specialinvoke $r8.<androidx.wear.watchface.client.WatchFaceControlClient$ServiceStartFailureException: void <init>(java.lang.String)>($r9);

        r3 = (java.lang.Throwable) $r8;

        z0 = 0;

        r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r10 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>(r3);

        $r11 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r10);

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r11);

        return;
    }

androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1
<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1: kotlin.coroutines.Continuation $continuation>
    void <init>(kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1 r0;
        kotlin.coroutines.Continuation $r1;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1: kotlin.coroutines.Continuation $continuation> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void binderDied()
    {
        androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1 r0;
        kotlin.coroutines.Continuation r1;
        java.lang.Throwable r2;
        boolean z0, z1;
        kotlin.Result$Companion r3;
        androidx.wear.watchface.client.WatchFaceControlClient$ServiceStartFailureException $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1;

        r1 = r0.<androidx.wear.watchface.client.WatchFaceControlClientImpl$getOrCreateInteractiveWatchFaceClient$2$deathObserver$1: kotlin.coroutines.Continuation $continuation>;

        $r4 = new androidx.wear.watchface.client.WatchFaceControlClient$ServiceStartFailureException;

        specialinvoke $r4.<androidx.wear.watchface.client.WatchFaceControlClient$ServiceStartFailureException: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r2 = (java.lang.Throwable) $r4;

        z0 = 0;

        r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r5 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>(r2);

        $r6 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r5);

        interfaceinvoke r1.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r6);

        return;
    }

