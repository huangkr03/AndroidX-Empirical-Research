androidx.test.espresso.action.ViewActions
<androidx.test.espresso.action.ViewActions: float EDGE_FUZZ_FACTOR>
<androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>
    public static androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)
    {
        androidx.test.espresso.ViewAction r0;
        androidx.test.espresso.action.ViewActions$1 r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @parameter0: androidx.test.espresso.ViewAction;

        $r2 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        r1 = new androidx.test.espresso.action.ViewActions$1;

        specialinvoke r1.<androidx.test.espresso.action.ViewActions$1: void <init>(androidx.test.espresso.ViewAction)>(r0);

        return r1;
    }

    public static androidx.test.espresso.ViewAction clearText()
    {
        androidx.test.espresso.action.ReplaceTextAction r0;
        androidx.test.espresso.ViewAction $r1;

        r0 = new androidx.test.espresso.action.ReplaceTextAction;

        specialinvoke r0.<androidx.test.espresso.action.ReplaceTextAction: void <init>(java.lang.String)>("");

        $r1 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r1;
    }

    public static androidx.test.espresso.ViewAction click()
    {
        androidx.test.espresso.action.GeneralClickAction r0;
        androidx.test.espresso.action.Press $r1;
        androidx.test.espresso.action.GeneralLocation $r2;
        androidx.test.espresso.action.Tap $r3;
        androidx.test.espresso.ViewAction $r4;

        r0 = new androidx.test.espresso.action.GeneralClickAction;

        $r3 = <androidx.test.espresso.action.Tap: androidx.test.espresso.action.Tap SINGLE>;

        $r2 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation VISIBLE_CENTER>;

        $r1 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralClickAction: void <init>(androidx.test.espresso.action.Tapper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, 0, 1);

        $r4 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r4;
    }

    public static androidx.test.espresso.ViewAction click(androidx.test.espresso.ViewAction)
    {
        androidx.test.espresso.ViewAction r0, $r6;
        androidx.test.espresso.action.GeneralClickAction r1;
        androidx.test.espresso.action.Press $r3;
        androidx.test.espresso.action.GeneralLocation $r4;
        androidx.test.espresso.action.Tap $r5;

        r0 := @parameter0: androidx.test.espresso.ViewAction;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r1 = new androidx.test.espresso.action.GeneralClickAction;

        $r5 = <androidx.test.espresso.action.Tap: androidx.test.espresso.action.Tap SINGLE>;

        $r4 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER>;

        $r3 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r1.<androidx.test.espresso.action.GeneralClickAction: void <init>(androidx.test.espresso.action.Tapper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber,int,int,androidx.test.espresso.ViewAction)>($r5, $r4, $r3, 0, 1, r0);

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r1);

        return $r6;
    }

    public static androidx.test.espresso.ViewAction click(int, int)
    {
        int i0, $i1, i2;
        androidx.test.espresso.action.GeneralClickAction r0;
        androidx.test.espresso.action.Press $r1;
        androidx.test.espresso.action.GeneralLocation $r2;
        androidx.test.espresso.action.Tap $r3;
        androidx.test.espresso.ViewAction $r4;
        java.lang.UnsupportedOperationException r5;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 14 goto label1;

        r5 = new java.lang.UnsupportedOperationException;

        specialinvoke r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r5;

     label1:
        r0 = new androidx.test.espresso.action.GeneralClickAction;

        $r3 = <androidx.test.espresso.action.Tap: androidx.test.espresso.action.Tap SINGLE>;

        $r2 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation VISIBLE_CENTER>;

        $r1 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralClickAction: void <init>(androidx.test.espresso.action.Tapper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, i2, i0);

        $r4 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r4;
    }

    public static androidx.test.espresso.ViewAction closeSoftKeyboard()
    {
        androidx.test.espresso.action.CloseKeyboardAction r0;
        androidx.test.espresso.ViewAction $r1;

        r0 = new androidx.test.espresso.action.CloseKeyboardAction;

        specialinvoke r0.<androidx.test.espresso.action.CloseKeyboardAction: void <init>()>();

        $r1 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r1;
    }

    public static androidx.test.espresso.ViewAction doubleClick()
    {
        androidx.test.espresso.action.GeneralClickAction r0;
        androidx.test.espresso.action.Press $r1;
        androidx.test.espresso.action.GeneralLocation $r2;
        androidx.test.espresso.action.Tap $r3;
        androidx.test.espresso.ViewAction $r4;

        r0 = new androidx.test.espresso.action.GeneralClickAction;

        $r3 = <androidx.test.espresso.action.Tap: androidx.test.espresso.action.Tap DOUBLE>;

        $r2 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER>;

        $r1 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralClickAction: void <init>(androidx.test.espresso.action.Tapper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, 0, 1);

        $r4 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r4;
    }

    public static androidx.test.espresso.ViewAction longClick()
    {
        androidx.test.espresso.action.GeneralClickAction r0;
        androidx.test.espresso.action.Press $r1;
        androidx.test.espresso.action.GeneralLocation $r2;
        androidx.test.espresso.action.Tap $r3;
        androidx.test.espresso.ViewAction $r4;

        r0 = new androidx.test.espresso.action.GeneralClickAction;

        $r3 = <androidx.test.espresso.action.Tap: androidx.test.espresso.action.Tap LONG>;

        $r2 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER>;

        $r1 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralClickAction: void <init>(androidx.test.espresso.action.Tapper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, 0, 1);

        $r4 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r4;
    }

    public static androidx.test.espresso.ViewAction openLink(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.action.OpenLinkAction r2;
        androidx.test.espresso.ViewAction $r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = new androidx.test.espresso.action.OpenLinkAction;

        specialinvoke r2.<androidx.test.espresso.action.OpenLinkAction: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        $r5 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r2);

        return $r5;
    }

    public static androidx.test.espresso.ViewAction openLinkWithText(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction openLinkWithText(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static androidx.test.espresso.ViewAction openLinkWithText(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Landroid/net/Uri;");

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction openLink(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.ViewAction openLinkWithUri(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.ViewAction $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction openLinkWithUri(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static androidx.test.espresso.ViewAction openLinkWithUri(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction openLink(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r1, r0);

        return $r2;
    }

    public static androidx.test.espresso.ViewAction pressBack()
    {
        androidx.test.espresso.action.PressBackAction r0;
        androidx.test.espresso.ViewAction $r1;

        r0 = new androidx.test.espresso.action.PressBackAction;

        specialinvoke r0.<androidx.test.espresso.action.PressBackAction: void <init>(boolean)>(1);

        $r1 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r1;
    }

    public static androidx.test.espresso.ViewAction pressBackUnconditionally()
    {
        androidx.test.espresso.action.PressBackAction r0;
        androidx.test.espresso.ViewAction $r1;

        r0 = new androidx.test.espresso.action.PressBackAction;

        specialinvoke r0.<androidx.test.espresso.action.PressBackAction: void <init>(boolean)>(0);

        $r1 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r1;
    }

    public static androidx.test.espresso.ViewAction pressImeActionButton()
    {
        androidx.test.espresso.action.EditorAction r0;
        androidx.test.espresso.ViewAction $r1;

        r0 = new androidx.test.espresso.action.EditorAction;

        specialinvoke r0.<androidx.test.espresso.action.EditorAction: void <init>()>();

        $r1 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r1;
    }

    public static androidx.test.espresso.ViewAction pressKey(int)
    {
        int i0;
        androidx.test.espresso.action.KeyEventAction r0;
        androidx.test.espresso.action.EspressoKey$Builder r1, $r2;
        androidx.test.espresso.action.EspressoKey $r3;
        androidx.test.espresso.ViewAction $r4;

        i0 := @parameter0: int;

        r0 = new androidx.test.espresso.action.KeyEventAction;

        r1 = new androidx.test.espresso.action.EspressoKey$Builder;

        specialinvoke r1.<androidx.test.espresso.action.EspressoKey$Builder: void <init>()>();

        $r2 = virtualinvoke r1.<androidx.test.espresso.action.EspressoKey$Builder: androidx.test.espresso.action.EspressoKey$Builder withKeyCode(int)>(i0);

        $r3 = virtualinvoke $r2.<androidx.test.espresso.action.EspressoKey$Builder: androidx.test.espresso.action.EspressoKey build()>();

        specialinvoke r0.<androidx.test.espresso.action.KeyEventAction: void <init>(androidx.test.espresso.action.EspressoKey)>($r3);

        $r4 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r4;
    }

    public static androidx.test.espresso.ViewAction pressKey(androidx.test.espresso.action.EspressoKey)
    {
        androidx.test.espresso.action.EspressoKey r0;
        androidx.test.espresso.action.KeyEventAction r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: androidx.test.espresso.action.EspressoKey;

        r1 = new androidx.test.espresso.action.KeyEventAction;

        specialinvoke r1.<androidx.test.espresso.action.KeyEventAction: void <init>(androidx.test.espresso.action.EspressoKey)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r1);

        return $r2;
    }

    public static androidx.test.espresso.ViewAction pressMenuKey()
    {
        androidx.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction pressKey(int)>(82);

        return $r0;
    }

    public static androidx.test.espresso.ViewAction repeatedlyUntil(androidx.test.espresso.ViewAction, org.hamcrest.Matcher, int)
    {
        androidx.test.espresso.ViewAction r0, $r5;
        org.hamcrest.Matcher r1;
        int i0;
        androidx.test.espresso.action.RepeatActionUntilViewState r2;

        r0 := @parameter0: androidx.test.espresso.ViewAction;

        r1 := @parameter1: org.hamcrest.Matcher;

        i0 := @parameter2: int;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = new androidx.test.espresso.action.RepeatActionUntilViewState;

        specialinvoke r2.<androidx.test.espresso.action.RepeatActionUntilViewState: void <init>(androidx.test.espresso.ViewAction,org.hamcrest.Matcher,int)>(r0, r1, i0);

        $r5 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r2);

        return $r5;
    }

    public static androidx.test.espresso.ViewAction replaceText(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.espresso.action.ReplaceTextAction r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        r1 = new androidx.test.espresso.action.ReplaceTextAction;

        specialinvoke r1.<androidx.test.espresso.action.ReplaceTextAction: void <init>(java.lang.String)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r1);

        return $r2;
    }

    public static androidx.test.espresso.ViewAction scrollTo()
    {
        androidx.test.espresso.action.ScrollToAction r0;
        androidx.test.espresso.ViewAction $r1;

        r0 = new androidx.test.espresso.action.ScrollToAction;

        specialinvoke r0.<androidx.test.espresso.action.ScrollToAction: void <init>()>();

        $r1 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r1;
    }

    public static androidx.test.espresso.ViewAction slowSwipeLeft()
    {
        androidx.test.espresso.action.GeneralSwipeAction r0;
        androidx.test.espresso.action.GeneralLocation $r1, $r5;
        androidx.test.espresso.action.Swipe $r2;
        androidx.test.espresso.action.CoordinatesProvider $r3;
        androidx.test.espresso.action.Press $r4;
        androidx.test.espresso.ViewAction $r6;

        r0 = new androidx.test.espresso.action.GeneralSwipeAction;

        $r2 = <androidx.test.espresso.action.Swipe: androidx.test.espresso.action.Swipe SLOW>;

        $r1 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER_RIGHT>;

        $r3 = staticinvoke <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.CoordinatesProvider translate(androidx.test.espresso.action.CoordinatesProvider,float,float)>($r1, -0.083F, 0.0F);

        $r5 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER_LEFT>;

        $r4 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralSwipeAction: void <init>(androidx.test.espresso.action.Swiper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r6;
    }

    public static androidx.test.espresso.ViewAction swipeDown()
    {
        androidx.test.espresso.action.GeneralSwipeAction r0;
        androidx.test.espresso.action.GeneralLocation $r1, $r5;
        androidx.test.espresso.action.Swipe $r2;
        androidx.test.espresso.action.CoordinatesProvider $r3;
        androidx.test.espresso.action.Press $r4;
        androidx.test.espresso.ViewAction $r6;

        r0 = new androidx.test.espresso.action.GeneralSwipeAction;

        $r2 = <androidx.test.espresso.action.Swipe: androidx.test.espresso.action.Swipe FAST>;

        $r1 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation TOP_CENTER>;

        $r3 = staticinvoke <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.CoordinatesProvider translate(androidx.test.espresso.action.CoordinatesProvider,float,float)>($r1, 0.0F, 0.083F);

        $r5 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation BOTTOM_CENTER>;

        $r4 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralSwipeAction: void <init>(androidx.test.espresso.action.Swiper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r6;
    }

    public static androidx.test.espresso.ViewAction swipeLeft()
    {
        androidx.test.espresso.action.GeneralSwipeAction r0;
        androidx.test.espresso.action.GeneralLocation $r1, $r5;
        androidx.test.espresso.action.Swipe $r2;
        androidx.test.espresso.action.CoordinatesProvider $r3;
        androidx.test.espresso.action.Press $r4;
        androidx.test.espresso.ViewAction $r6;

        r0 = new androidx.test.espresso.action.GeneralSwipeAction;

        $r2 = <androidx.test.espresso.action.Swipe: androidx.test.espresso.action.Swipe FAST>;

        $r1 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER_RIGHT>;

        $r3 = staticinvoke <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.CoordinatesProvider translate(androidx.test.espresso.action.CoordinatesProvider,float,float)>($r1, -0.083F, 0.0F);

        $r5 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER_LEFT>;

        $r4 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralSwipeAction: void <init>(androidx.test.espresso.action.Swiper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r6;
    }

    public static androidx.test.espresso.ViewAction swipeRight()
    {
        androidx.test.espresso.action.GeneralSwipeAction r0;
        androidx.test.espresso.action.GeneralLocation $r1, $r5;
        androidx.test.espresso.action.Swipe $r2;
        androidx.test.espresso.action.CoordinatesProvider $r3;
        androidx.test.espresso.action.Press $r4;
        androidx.test.espresso.ViewAction $r6;

        r0 = new androidx.test.espresso.action.GeneralSwipeAction;

        $r2 = <androidx.test.espresso.action.Swipe: androidx.test.espresso.action.Swipe FAST>;

        $r1 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER_LEFT>;

        $r3 = staticinvoke <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.CoordinatesProvider translate(androidx.test.espresso.action.CoordinatesProvider,float,float)>($r1, 0.083F, 0.0F);

        $r5 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation CENTER_RIGHT>;

        $r4 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralSwipeAction: void <init>(androidx.test.espresso.action.Swiper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r6;
    }

    public static androidx.test.espresso.ViewAction swipeUp()
    {
        androidx.test.espresso.action.GeneralSwipeAction r0;
        androidx.test.espresso.action.GeneralLocation $r1, $r5;
        androidx.test.espresso.action.Swipe $r2;
        androidx.test.espresso.action.CoordinatesProvider $r3;
        androidx.test.espresso.action.Press $r4;
        androidx.test.espresso.ViewAction $r6;

        r0 = new androidx.test.espresso.action.GeneralSwipeAction;

        $r2 = <androidx.test.espresso.action.Swipe: androidx.test.espresso.action.Swipe FAST>;

        $r1 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation BOTTOM_CENTER>;

        $r3 = staticinvoke <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.CoordinatesProvider translate(androidx.test.espresso.action.CoordinatesProvider,float,float)>($r1, 0.0F, -0.083F);

        $r5 = <androidx.test.espresso.action.GeneralLocation: androidx.test.espresso.action.GeneralLocation TOP_CENTER>;

        $r4 = <androidx.test.espresso.action.Press: androidx.test.espresso.action.Press FINGER>;

        specialinvoke r0.<androidx.test.espresso.action.GeneralSwipeAction: void <init>(androidx.test.espresso.action.Swiper,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.CoordinatesProvider,androidx.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r0);

        return $r6;
    }

    public static androidx.test.espresso.ViewAction typeText(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.espresso.action.TypeTextAction r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        r1 = new androidx.test.espresso.action.TypeTextAction;

        specialinvoke r1.<androidx.test.espresso.action.TypeTextAction: void <init>(java.lang.String)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r1);

        return $r2;
    }

    public static androidx.test.espresso.ViewAction typeTextIntoFocusedView(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.espresso.action.TypeTextAction r1;
        androidx.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        r1 = new androidx.test.espresso.action.TypeTextAction;

        specialinvoke r1.<androidx.test.espresso.action.TypeTextAction: void <init>(java.lang.String,boolean)>(r0, 0);

        $r2 = staticinvoke <androidx.test.espresso.action.ViewActions: androidx.test.espresso.ViewAction actionWithAssertions(androidx.test.espresso.ViewAction)>(r1);

        return $r2;
    }

    static volatile java.util.Set '-$$Nest$sfgetglobalAssertions'()
    {
        java.util.Set $r0;

        $r0 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.concurrent.CopyOnWriteArraySet r0, r1;
        java.util.Set r2;

        r1 = new java.util.concurrent.CopyOnWriteArraySet;

        r0 = r1;

        specialinvoke r1.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r2 = (java.util.Set) r0;

        <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions> = r2;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.action.ViewActions r0;

        r0 := @this: androidx.test.espresso.action.ViewActions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addGlobalAssertion(java.lang.String, androidx.test.espresso.ViewAssertion)
    {
        java.lang.String r0;
        android.util.Pair r1;
        java.util.Set $r4, $r5;
        boolean $z0, z2;
        androidx.test.espresso.ViewAssertion r6;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: androidx.test.espresso.ViewAssertion;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        r1 = new android.util.Pair;

        specialinvoke r1.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r6);

        $r4 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        z2 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>(z2, "ViewAssertion with name %s is already in the global assertions!", r0);

        $r5 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;

     label2:
        z2 = 0;

        goto label1;
    }

    public static void clearGlobalAssertions()
    {
        java.util.Set $r0;

        $r0 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        interfaceinvoke $r0.<java.util.Set: void clear()>();

        return;
    }

    public static void removeGlobalAssertion(androidx.test.espresso.ViewAssertion)
    {
        androidx.test.espresso.ViewAssertion r0;
        java.util.Iterator r1;
        android.util.Pair r2;
        java.util.Set $r3, $r6;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1, z2, $z3;

        r0 := @parameter0: androidx.test.espresso.ViewAssertion;

        $r3 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        z2 = 0;

     label1:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r4;

        if r0 == null goto label1;

        $r5 = r2.<android.util.Pair: java.lang.Object second>;

        $z0 = interfaceinvoke r0.<androidx.test.espresso.ViewAssertion: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        if z2 != 0 goto label2;

        $r6 = <androidx.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

     label2:
        z2 = 1;

        goto label1;

     label3:
        z2 = 0;

        goto label1;

     label4:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, "ViewAssertion was not in global assertions!");

        return;
    }

androidx.test.espresso.action.ViewActions$1
<androidx.test.espresso.action.ViewActions$1: androidx.test.espresso.ViewAction val$viewAction>
    public java.lang.String getDescription()
    {
        androidx.test.espresso.action.ViewActions$1 r0;
        java.lang.StringBuilder r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        androidx.test.espresso.ViewAction $r5;
        java.lang.String $r6, $r8, $r12;
        java.lang.Object $r9, $r11;
        android.util.Pair $r10;

        r0 := @this: androidx.test.espresso.action.ViewActions$1;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Running view assertions[");

        $r3 = staticinvoke <androidx.test.espresso.action.ViewActions: java.util.Set '-$$Nest$sfgetglobalAssertions'()>();

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.util.Pair) $r9;

        $r11 = $r10.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.String) $r11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and then running: ");

        $r5 = r0.<androidx.test.espresso.action.ViewActions$1: androidx.test.espresso.ViewAction val$viewAction>;

        $r6 = interfaceinvoke $r5.<androidx.test.espresso.ViewAction: java.lang.String getDescription()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        androidx.test.espresso.action.ViewActions$1 r0;
        androidx.test.espresso.ViewAction $r1;
        org.hamcrest.Matcher $r2;

        r0 := @this: androidx.test.espresso.action.ViewActions$1;

        $r1 = r0.<androidx.test.espresso.action.ViewActions$1: androidx.test.espresso.ViewAction val$viewAction>;

        $r2 = interfaceinvoke $r1.<androidx.test.espresso.ViewAction: org.hamcrest.Matcher getConstraints()>();

        return $r2;
    }

    void <init>(androidx.test.espresso.ViewAction)
    {
        androidx.test.espresso.action.ViewActions$1 r0;
        androidx.test.espresso.ViewAction r1;

        r0 := @this: androidx.test.espresso.action.ViewActions$1;

        r1 := @parameter0: androidx.test.espresso.ViewAction;

        r0.<androidx.test.espresso.action.ViewActions$1: androidx.test.espresso.ViewAction val$viewAction> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void perform(androidx.test.espresso.UiController, android.view.View)
    {
        androidx.test.espresso.action.ViewActions$1 r0;
        androidx.test.espresso.UiController r1;
        android.view.View r2;
        java.util.Iterator r3;
        android.util.Pair r4;
        java.lang.StringBuilder r5, $r9, $r10;
        java.util.Set $r6;
        boolean $z0;
        androidx.test.espresso.ViewAction $r7;
        java.lang.Object $r8, $r12, r14;
        java.lang.String $r11, r15;
        androidx.test.espresso.ViewAssertion $r13;

        r0 := @this: androidx.test.espresso.action.ViewActions$1;

        r1 := @parameter0: androidx.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        $r6 = staticinvoke <androidx.test.espresso.action.ViewActions: java.util.Set '-$$Nest$sfgetglobalAssertions'()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r8;

        r14 = r4.<android.util.Pair: java.lang.Object first>;

        r15 = (java.lang.String) r14;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asserting ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewAssertion", $r11);

        $r12 = r4.<android.util.Pair: java.lang.Object second>;

        $r13 = (androidx.test.espresso.ViewAssertion) $r12;

        interfaceinvoke $r13.<androidx.test.espresso.ViewAssertion: void check(android.view.View,androidx.test.espresso.NoMatchingViewException)>(r2, null);

        goto label1;

     label2:
        $r7 = r0.<androidx.test.espresso.action.ViewActions$1: androidx.test.espresso.ViewAction val$viewAction>;

        interfaceinvoke $r7.<androidx.test.espresso.ViewAction: void perform(androidx.test.espresso.UiController,android.view.View)>(r1, r2);

        return;
    }

