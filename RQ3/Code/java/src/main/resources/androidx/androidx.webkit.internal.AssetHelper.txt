androidx.webkit.internal.AssetHelper
<androidx.webkit.internal.AssetHelper: java.lang.String DEFAULT_MIME_TYPE>
<androidx.webkit.internal.AssetHelper: android.content.Context mContext>
    public void <init>(android.content.Context)
    {
        androidx.webkit.internal.AssetHelper r0;
        android.content.Context r1;

        r0 := @this: androidx.webkit.internal.AssetHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.internal.AssetHelper: android.content.Context mContext> = r1;

        return;
    }

    private static java.io.InputStream handleSvgzStream(java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.InputStream r1, r4;
        boolean $z0;
        java.lang.Object $r2;
        java.util.zip.GZIPInputStream r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.InputStream;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".svgz");

        if $z0 == 0 goto label1;

        r3 = new java.util.zip.GZIPInputStream;

        $r2 = r3;

        specialinvoke r3.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r1);

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r4 = (java.io.InputStream) $r2;

        return r4;
    }

    private static java.lang.String removeLeadingSlash(java.lang.String)
    {
        int $i0;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 47 goto label1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        return r0;
    }

    private int getFieldId(java.lang.String, java.lang.String)
    {
        androidx.webkit.internal.AssetHelper r0;
        java.lang.String r1, r2, r3;
        int i0;
        android.content.Context $r4, $r5;
        android.content.res.Resources $r6;

        r0 := @this: androidx.webkit.internal.AssetHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<androidx.webkit.internal.AssetHelper: android.content.Context mContext>;

        r3 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = r0.<androidx.webkit.internal.AssetHelper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r6.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r2, r1, r3);

        return i0;
    }

    private int getValueType(int)
    {
        androidx.webkit.internal.AssetHelper r0;
        int i0, $i1;
        android.util.TypedValue r1, $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;

        r0 := @this: androidx.webkit.internal.AssetHelper;

        i0 := @parameter0: int;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.webkit.internal.AssetHelper: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r1, 1);

        $i1 = r1.<android.util.TypedValue: int type>;

        return $i1;
    }

    public java.io.InputStream openResource(java.lang.String) throws android.content.res.Resources$NotFoundException, java.io.IOException
    {
        androidx.webkit.internal.AssetHelper r0;
        java.lang.String[] r1;
        java.lang.String r2, $r10, $r15, r16, r17, r18;
        int i0, i1, i2, $i3;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        java.io.InputStream $r5, $r6;
        java.io.IOException $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: androidx.webkit.internal.AssetHelper;

        r16 := @parameter0: java.lang.String;

        r17 = staticinvoke <androidx.webkit.internal.AssetHelper: java.lang.String removeLeadingSlash(java.lang.String)>(r16);

        r1 = virtualinvoke r17.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $i3 = lengthof r1;

        if $i3 == 2 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect resource path: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        r2 = r1[0];

        r18 = r1[1];

        i0 = virtualinvoke r18.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 == -1 goto label2;

        r18 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        i1 = specialinvoke r0.<androidx.webkit.internal.AssetHelper: int getFieldId(java.lang.String,java.lang.String)>(r2, r18);

        i2 = specialinvoke r0.<androidx.webkit.internal.AssetHelper: int getValueType(int)>(i1);

        if i2 == 3 goto label3;

        $r7 = new java.io.IOException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r17;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Expected %s resource to be of TYPE_STRING but was %d", $r8);

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label3:
        $r3 = r0.<androidx.webkit.internal.AssetHelper: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i1);

        $r6 = staticinvoke <androidx.webkit.internal.AssetHelper: java.io.InputStream handleSvgzStream(java.lang.String,java.io.InputStream)>(r17, $r5);

        return $r6;
    }

    public java.io.InputStream openAsset(java.lang.String) throws java.io.IOException
    {
        androidx.webkit.internal.AssetHelper r0;
        android.content.res.AssetManager r1;
        android.content.Context $r2;
        java.io.InputStream $r3, $r4;
        java.lang.String r5, r6;

        r0 := @this: androidx.webkit.internal.AssetHelper;

        r5 := @parameter0: java.lang.String;

        r6 = staticinvoke <androidx.webkit.internal.AssetHelper: java.lang.String removeLeadingSlash(java.lang.String)>(r5);

        $r2 = r0.<androidx.webkit.internal.AssetHelper: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = virtualinvoke r1.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>(r6, 2);

        $r4 = staticinvoke <androidx.webkit.internal.AssetHelper: java.io.InputStream handleSvgzStream(java.lang.String,java.io.InputStream)>(r6, $r3);

        return $r4;
    }

    public static java.io.InputStream openFile(java.io.File) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.io.File r0;
        java.io.FileInputStream r1, $r2;
        java.lang.String $r3;
        java.io.InputStream $r4;

        r0 := @parameter0: java.io.File;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r1 = $r2;

        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r4 = staticinvoke <androidx.webkit.internal.AssetHelper: java.io.InputStream handleSvgzStream(java.lang.String,java.io.InputStream)>($r3, r1);

        return $r4;
    }

    public static java.io.File getCanonicalFileIfChild(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.io.File r0, $r4, $r5;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <androidx.webkit.internal.AssetHelper: java.lang.String getCanonicalDirPath(java.io.File)>(r0);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, r1);

        r3 = virtualinvoke $r4.<java.io.File: java.lang.String getCanonicalPath()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r3);

        return $r5;

     label1:
        return null;
    }

    public static java.lang.String getCanonicalDirPath(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r4;

        r0 := @parameter0: java.io.File;

        r4 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r4;
    }

    public static java.io.File getDataDir(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        java.io.File $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r3 = staticinvoke <androidx.webkit.internal.ApiHelperForN: java.io.File getDataDir(android.content.Context)>(r0);

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File getParentFile()>();

        return $r2;
    }

    public static java.lang.String guessMimeType(java.lang.String)
    {
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>(r0);

        if r1 != null goto label1;

        $r2 = "text/plain";

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

