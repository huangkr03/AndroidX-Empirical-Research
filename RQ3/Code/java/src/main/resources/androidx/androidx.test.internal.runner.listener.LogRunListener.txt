androidx.test.internal.runner.listener.LogRunListener
<androidx.test.internal.runner.listener.LogRunListener: java.lang.String TAG>
    public void <init>()
    {
        androidx.test.internal.runner.listener.LogRunListener r0;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        specialinvoke r0.<org.junit.runner.notification.RunListener: void <init>()>();

        return;
    }

    public void testAssumptionFailure(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.notification.Failure r1;
        java.lang.String r2, $r7, $r8;
        org.junit.runner.Description $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r3 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        r2 = virtualinvoke $r3.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assumption failed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", $r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", "----- begin exception -----");

        $r8 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", $r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", "----- end exception -----");

        return;
    }

    public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.notification.Failure r1;
        java.lang.String r2, $r7, $r8;
        org.junit.runner.Description $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r3 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        r2 = virtualinvoke $r3.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", $r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", "----- begin exception -----");

        $r8 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", $r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TestRunner", "----- end exception -----");

        return;
    }

    public void testFinished(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.Description r1;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TestRunner", $r6);

        return;
    }

    public void testIgnored(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.Description r1;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignored: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TestRunner", $r6);

        return;
    }

    public void testRunFinished(org.junit.runner.Result) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.Result r1;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.Result;

        $r2 = newarray (java.lang.Object)[3];

        $i0 = virtualinvoke r1.<org.junit.runner.Result: int getRunCount()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $i1 = virtualinvoke r1.<org.junit.runner.Result: int getFailureCount()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[1] = $r4;

        $i2 = virtualinvoke r1.<org.junit.runner.Result: int getIgnoreCount()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("run finished: %d tests, %d failed, %d ignored", $r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TestRunner", $r6);

        return;
    }

    public void testRunStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.Description r1;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = newarray (java.lang.Object)[1];

        $i0 = virtualinvoke r1.<org.junit.runner.Description: int testCount()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("run started: %d tests", $r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TestRunner", $r4);

        return;
    }

    public void testStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.LogRunListener r0;
        org.junit.runner.Description r1;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.test.internal.runner.listener.LogRunListener;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("started: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TestRunner", $r6);

        return;
    }

