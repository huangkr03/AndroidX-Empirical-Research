androidx.graphics.surface.SurfaceControlWrapper
<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>
    public void <init>(android.view.Surface, java.lang.String)
    {
        androidx.graphics.surface.SurfaceControlWrapper r0;
        android.view.Surface r1;
        java.lang.String r2;
        androidx.graphics.surface.JniBindings$Companion $r3;
        long $l0, $l1;
        byte $b2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surface");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "debugName");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = virtualinvoke $r3.<androidx.graphics.surface.JniBindings$Companion: long nCreateFromSurface(android.view.Surface,java.lang.String)>(r1, r2);

        r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl> = $l0;

        $l1 = r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        return;
    }

    public final boolean isValid()
    {
        androidx.graphics.surface.SurfaceControlWrapper r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.graphics.surface.SurfaceControlWrapper r0, $r2, $r3;
        java.lang.Object r1;
        boolean $z0, $z3, $z4, $z5, $z6;
        long $l0, $l1;
        byte $b2;
        java.lang.Class $r5;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if r1 == null goto label4;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        goto label5;

     label4:
        $r5 = null;

     label5:
        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, class "Landroidx/graphics/surface/SurfaceControlWrapper;");

        if $z4 != 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        $z6 = $z3 | $z5;

        if $z6 == 0 goto label8;

        return 0;

     label8:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r1, "null cannot be cast to non-null type androidx.graphics.surface.SurfaceControlWrapper");

        $r2 = (androidx.graphics.surface.SurfaceControlWrapper) r1;

        $r3 = (androidx.graphics.surface.SurfaceControlWrapper) r1;

        $l1 = $r3.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label9;

        return 1;

     label9:
        return 0;
    }

    public int hashCode()
    {
        androidx.graphics.surface.SurfaceControlWrapper r0;
        long $l0;
        int $i1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        $i1 = staticinvoke <java.lang.Long: int hashCode(long)>($l0);

        return $i1;
    }

    public final void release()
    {
        androidx.graphics.surface.SurfaceControlWrapper r0;
        long $l0, $l2;
        byte $b1;
        androidx.graphics.surface.JniBindings$Companion $r1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r1 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l2 = r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        virtualinvoke $r1.<androidx.graphics.surface.JniBindings$Companion: void nRelease(long)>($l2);

        r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl> = 0L;

     label1:
        return;
    }

    protected final void finalize()
    {
        androidx.graphics.surface.SurfaceControlWrapper r0;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper;

        virtualinvoke r0.<androidx.graphics.surface.SurfaceControlWrapper: void release()>();

        return;
    }

    public static final long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)
    {
        androidx.graphics.surface.SurfaceControlWrapper $r0;
        long $l0;

        $r0 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        $l0 = $r0.<androidx.graphics.surface.SurfaceControlWrapper: long mNativeSurfaceControl>;

        return $l0;
    }

androidx.graphics.surface.SurfaceControlWrapper$Builder
<androidx.graphics.surface.SurfaceControlWrapper$Builder: android.view.Surface mSurface>
<androidx.graphics.surface.SurfaceControlWrapper$Builder: java.lang.String mDebugName>
    public void <init>()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Builder r0;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Builder setParent(android.view.Surface)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Builder r0;
        android.view.Surface r1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Builder;

        r1 := @parameter0: android.view.Surface;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surface");

        r0.<androidx.graphics.surface.SurfaceControlWrapper$Builder: android.view.Surface mSurface> = r1;

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Builder setDebugName(java.lang.String)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "debugName");

        r0.<androidx.graphics.surface.SurfaceControlWrapper$Builder: java.lang.String mDebugName> = r1;

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper build()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Builder r0;
        androidx.graphics.surface.SurfaceControlWrapper $r1;
        android.view.Surface $r2;
        java.lang.String $r3;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Builder;

        $r1 = new androidx.graphics.surface.SurfaceControlWrapper;

        $r2 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Builder: android.view.Surface mSurface>;

        if $r2 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("mSurface");

        $r2 = null;

     label1:
        $r3 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Builder: java.lang.String mDebugName>;

        if $r3 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("mDebugName");

        $r3 = null;

     label2:
        specialinvoke $r1.<androidx.graphics.surface.SurfaceControlWrapper: void <init>(android.view.Surface,java.lang.String)>($r2, $r3);

        return $r1;
    }

androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1
<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: java.util.concurrent.Executor $executor>
<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener $listener>
    void <init>(java.util.concurrent.Executor, androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1 r0;
        java.util.concurrent.Executor $r1;
        androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener $r2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener;

        r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: java.util.concurrent.Executor $executor> = $r1;

        r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener $listener> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onTransactionCommitted()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1 r0;
        androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener $r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1;

        $r2 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: java.util.concurrent.Executor $executor>;

        $r1 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener $listener>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)>($r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: void onTransactionCommitted$lambda$0(androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    private static final void onTransactionCommitted$lambda$0(androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)
    {
        androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener $r0;

        $r0 := @parameter0: androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$listener");

        interfaceinvoke $r0.<androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener: void onTransactionCommitted()>();

        return;
    }

androidx.graphics.surface.SurfaceControlWrapper$Transaction
<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>
    public void <init>()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.JniBindings$Companion $r1;
        long $l0, $l1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = virtualinvoke $r1.<androidx.graphics.surface.JniBindings$Companion: long nTransactionCreate()>();

        r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction> = $l0;

        $l1 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public final void commit()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        long $l0;
        androidx.graphics.surface.JniBindings$Companion $r1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        $r1 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        virtualinvoke $r1.<androidx.graphics.surface.JniBindings$Companion: void nTransactionApply(long)>($l0);

        return;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction addTransactionCompletedListener$graphics_core_release(androidx.graphics.surface.SurfaceControlCompat$TransactionCompletedListener)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlCompat$TransactionCompletedListener r1;
        long $l0;
        androidx.graphics.surface.JniBindings$Companion $r2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlCompat$TransactionCompletedListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nTransactionSetOnComplete(long,androidx.graphics.surface.SurfaceControlCompat$TransactionCompletedListener)>($l0, r1);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction addTransactionCommittedListener(java.util.concurrent.Executor, androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        java.util.concurrent.Executor r1;
        androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener r2, r5;
        long $l0;
        androidx.graphics.surface.JniBindings$Companion $r3;
        androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1 $r4;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "listener");

        r5 = r2;

        if r1 == null goto label1;

        $r4 = new androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1;

        specialinvoke $r4.<androidx.graphics.surface.SurfaceControlWrapper$Transaction$addTransactionCommittedListener$1: void <init>(java.util.concurrent.Executor,androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)>(r1, r2);

        r5 = (androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener) $r4;

     label1:
        $r3 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        virtualinvoke $r3.<androidx.graphics.surface.JniBindings$Companion: void nTransactionSetOnCommit(long,androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)>($l0, r5);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setBuffer(androidx.graphics.surface.SurfaceControlWrapper, android.hardware.HardwareBuffer, androidx.hardware.SyncFence)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        android.hardware.HardwareBuffer r2;
        androidx.hardware.SyncFence r3;
        androidx.graphics.surface.JniBindings$Companion $r4;
        long $l0, $l1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        r2 := @parameter1: android.hardware.HardwareBuffer;

        r3 := @parameter2: androidx.hardware.SyncFence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "hardwareBuffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "syncFence");

        $r4 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r4.<androidx.graphics.surface.JniBindings$Companion: void nSetBuffer(long,long,android.hardware.HardwareBuffer,androidx.hardware.SyncFence)>($l0, $l1, r2, r3);

        return r0;
    }

    public static androidx.graphics.surface.SurfaceControlWrapper$Transaction setBuffer$default(androidx.graphics.surface.SurfaceControlWrapper$Transaction, androidx.graphics.surface.SurfaceControlWrapper, android.hardware.HardwareBuffer, androidx.hardware.SyncFence, int, java.lang.Object)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0, $r4;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        android.hardware.HardwareBuffer r2;
        int i0, $i1;
        java.lang.Object r3;
        androidx.hardware.SyncFence $r5, r6;

        r0 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter1: androidx.graphics.surface.SurfaceControlWrapper;

        r2 := @parameter2: android.hardware.HardwareBuffer;

        r6 := @parameter3: androidx.hardware.SyncFence;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r5 = new androidx.hardware.SyncFence;

        specialinvoke $r5.<androidx.hardware.SyncFence: void <init>(int)>(-1);

        r6 = $r5;

     label1:
        $r4 = virtualinvoke r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: androidx.graphics.surface.SurfaceControlWrapper$Transaction setBuffer(androidx.graphics.surface.SurfaceControlWrapper,android.hardware.HardwareBuffer,androidx.hardware.SyncFence)>(r1, r2, r6);

        return $r4;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setVisibility(androidx.graphics.surface.SurfaceControlWrapper, boolean)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        boolean z0;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l0, $l1;
        byte $b2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetVisibility(long,long,byte)>($l0, $l1, $b2);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setLayer(androidx.graphics.surface.SurfaceControlWrapper, int)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        int i0;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l1, $l2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l1 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l2 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetZOrder(long,long,int)>($l1, $l2, i0);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setDamageRegion(androidx.graphics.surface.SurfaceControlWrapper, android.graphics.Region)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        android.graphics.Region r2;
        androidx.graphics.surface.JniBindings$Companion $r3;
        long $l0, $l1;
        android.graphics.Rect $r4;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        r2 := @parameter1: android.graphics.Region;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r3 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<android.graphics.Region: android.graphics.Rect getBounds()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        virtualinvoke $r3.<androidx.graphics.surface.JniBindings$Companion: void nSetDamageRegion(long,long,android.graphics.Rect)>($l0, $l1, $r4);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction reparent(androidx.graphics.surface.SurfaceControlWrapper, androidx.graphics.surface.SurfaceControlWrapper)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1, r2;
        androidx.graphics.surface.JniBindings$Companion $r3;
        long $l0, $l1, $l2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        r2 := @parameter1: androidx.graphics.surface.SurfaceControlWrapper;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r3 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        if r2 == null goto label1;

        $l2 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r2);

        goto label2;

     label1:
        $l2 = 0L;

     label2:
        virtualinvoke $r3.<androidx.graphics.surface.JniBindings$Companion: void nTransactionReparent(long,long,long)>($l0, $l1, $l2);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setDesiredPresentTime(long)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        long l0, $l1;
        androidx.graphics.surface.JniBindings$Companion $r1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        l0 := @parameter0: long;

        $r1 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l1 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        virtualinvoke $r1.<androidx.graphics.surface.JniBindings$Companion: void nSetDesiredPresentTime(long,long)>($l1, l0);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setOpaque(androidx.graphics.surface.SurfaceControlWrapper, boolean)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        boolean z0;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l0, $l1;
        byte $b2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        if z0 == 0 goto label1;

        $b2 = 2;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetBufferTransparency(long,long,byte)>($l0, $l1, $b2);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setAlpha(androidx.graphics.surface.SurfaceControlWrapper, float)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        float f0;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r2;
        androidx.graphics.surface.JniBindings$Companion $r3;
        long $l2, $l3;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Alpha value must be between 0.0 and 1.0.");

        throw $r2;

     label2:
        $r3 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l2 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l3 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r3.<androidx.graphics.surface.JniBindings$Companion: void nSetBufferAlpha(long,long,float)>($l2, $l3, f0);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setCrop(androidx.graphics.surface.SurfaceControlWrapper, android.graphics.Rect)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        android.graphics.Rect r2;
        androidx.graphics.surface.JniBindings$Companion $r3, $r4;
        long $l0, $l1, $l6, $l7;
        int $i2, $i3, $i4, $i5, $i8, $i9;
        java.lang.IllegalArgumentException $r5;
        boolean $z1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        r2 := @parameter1: android.graphics.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        if r2 == null goto label1;

        $i8 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        if $i8 < 0 goto label2;

        $i9 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        if $i9 < 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width and height must be non-negative");

        throw $r5;

     label4:
        if r2 != null goto label5;

        $r4 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l6 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l7 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r4.<androidx.graphics.surface.JniBindings$Companion: void nSetCrop(long,long,int,int,int,int)>($l6, $l7, 0, 0, 0, 0);

        goto label6;

     label5:
        $r3 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        $i5 = r2.<android.graphics.Rect: int left>;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i3 = r2.<android.graphics.Rect: int right>;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<androidx.graphics.surface.JniBindings$Companion: void nSetCrop(long,long,int,int,int,int)>($l0, $l1, $i5, $i4, $i3, $i2);

     label6:
        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setPosition(androidx.graphics.surface.SurfaceControlWrapper, float, float)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        float f0, f1;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l0, $l1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetPosition(long,long,float,float)>($l0, $l1, f0, f1);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setScale(androidx.graphics.surface.SurfaceControlWrapper, float, float)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        float f0, f1;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l0, $l1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l1 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetScale(long,long,float,float)>($l0, $l1, f0, f1);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setBufferTransform(androidx.graphics.surface.SurfaceControlWrapper, int)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        int i0;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l1, $l2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l1 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l2 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetBufferTransform(long,long,int)>($l1, $l2, i0);

        return r0;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setGeometry(androidx.graphics.surface.SurfaceControlWrapper, int, int, int, int, int)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        int i0, i1, i2, i3, i4;
        androidx.graphics.surface.JniBindings$Companion $r2;
        long $l5, $l6;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        $r2 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l5 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $l6 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper: long access$getMNativeSurfaceControl$p(androidx.graphics.surface.SurfaceControlWrapper)>(r1);

        virtualinvoke $r2.<androidx.graphics.surface.JniBindings$Companion: void nSetGeometry(long,long,int,int,int,int,int)>($l5, $l6, i0, i1, i2, i3, i4);

        return r0;
    }

    public final void close()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;
        long $l0, $l2;
        byte $b1;
        androidx.graphics.surface.JniBindings$Companion $r1;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        $l0 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r1 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        $l2 = r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction>;

        virtualinvoke $r1.<androidx.graphics.surface.JniBindings$Companion: void nTransactionDelete(long)>($l2);

        r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: long mNativeSurfaceTransaction> = 0L;

     label1:
        return;
    }

    public final void finalize()
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        virtualinvoke r0.<androidx.graphics.surface.SurfaceControlWrapper$Transaction: void close()>();

        return;
    }

    public final androidx.graphics.surface.SurfaceControlWrapper$Transaction setBuffer(androidx.graphics.surface.SurfaceControlWrapper, android.hardware.HardwareBuffer)
    {
        androidx.graphics.surface.SurfaceControlWrapper$Transaction r0, $r3;
        androidx.graphics.surface.SurfaceControlWrapper r1;
        android.hardware.HardwareBuffer r2;

        r0 := @this: androidx.graphics.surface.SurfaceControlWrapper$Transaction;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlWrapper;

        r2 := @parameter1: android.hardware.HardwareBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceControl");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "hardwareBuffer");

        $r3 = staticinvoke <androidx.graphics.surface.SurfaceControlWrapper$Transaction: androidx.graphics.surface.SurfaceControlWrapper$Transaction setBuffer$default(androidx.graphics.surface.SurfaceControlWrapper$Transaction,androidx.graphics.surface.SurfaceControlWrapper,android.hardware.HardwareBuffer,androidx.hardware.SyncFence,int,java.lang.Object)>(r0, r1, r2, null, 4, null);

        return $r3;
    }

