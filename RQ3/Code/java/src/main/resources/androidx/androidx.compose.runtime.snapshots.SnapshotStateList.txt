androidx.compose.runtime.snapshots.SnapshotStateList
<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord firstStateRecord>
    public void <init>()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r2;
        androidx.compose.runtime.snapshots.StateRecord $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord;

        $r2 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList persistentListOf()>();

        specialinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r1;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord firstStateRecord> = $r3;

        return;
    }

    public androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.StateRecord $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord firstStateRecord>;

        return $r1;
    }

    public void prependStateRecord(androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.StateRecord r1, $r2, $r4;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        virtualinvoke r1.<androidx.compose.runtime.snapshots.StateRecord: void setNext$runtime_release(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) r1;

        $r4 = (androidx.compose.runtime.snapshots.StateRecord) $r3;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord firstStateRecord> = $r4;

        return;
    }

    public final int getModification$runtime_release()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r4, $r6;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r3, $r5;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 = r0;

        $r4 = virtualinvoke r1.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r4;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $i0 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        return $i0;
    }

    public final androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.StateRecord $r1, $r4, $r5;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r2, $r6;
        androidx.compose.runtime.snapshots.StateObject $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r2 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r1;

        $r4 = (androidx.compose.runtime.snapshots.StateRecord) $r2;

        $r3 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject)>($r4, $r3);

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r5;

        return $r6;
    }

    public static void getReadable$runtime_release$annotations()
    {
        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $i0 = interfaceinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $z0 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.util.Collection r1;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $z0 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        int i0;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: java.lang.Object get(int)>(i0);

        return $r3;
    }

    public int indexOf(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r3;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $i0 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $z0 = interfaceinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.util.ListIterator $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: java.util.ListIterator listIterator()>();

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public int lastIndexOf(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r3;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $i0 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        androidx.compose.runtime.snapshots.StateListIterator $r1;
        java.util.ListIterator $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = new androidx.compose.runtime.snapshots.StateListIterator;

        specialinvoke $r1.<androidx.compose.runtime.snapshots.StateListIterator: void <init>(androidx.compose.runtime.snapshots.SnapshotStateList,int)>(r0, 0);

        $r2 = (java.util.ListIterator) $r1;

        return $r2;
    }

    public java.util.ListIterator listIterator(int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        int i0;
        androidx.compose.runtime.snapshots.StateListIterator $r1;
        java.util.ListIterator $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        $r1 = new androidx.compose.runtime.snapshots.StateListIterator;

        specialinvoke $r1.<androidx.compose.runtime.snapshots.StateListIterator: void <init>(androidx.compose.runtime.snapshots.SnapshotStateList,int)>(r0, i0);

        $r2 = (java.util.ListIterator) $r1;

        return $r2;
    }

    public java.util.List subList(int, int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        int i0, i1, $i2;
        java.lang.String r1, $r5;
        androidx.compose.runtime.snapshots.SubList $r2;
        java.util.List $r3;
        java.lang.IllegalArgumentException $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if 0 > i0 goto label2;

        if i0 > i1 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: int size()>();

        if i1 > $i2 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        if $z1 != 0 goto label6;

        r1 = "Failed requirement.";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label6:
        $r2 = new androidx.compose.runtime.snapshots.SubList;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.SubList: void <init>(androidx.compose.runtime.snapshots.SnapshotStateList,int,int)>(r0, i0, i1);

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public boolean add(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, $r3, r21;
        java.lang.Object r1, r4, r19, $r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5, $r7, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r9, $r13, $r15, $r30;
        boolean $z0, z1, $z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r25, r33;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r23, r26, r27;
        kotlin.Unit r24;
        androidx.compose.runtime.snapshots.Snapshot $r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0;

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList) r2;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r19;

     label02:
        r21 = $r3;

        $r6 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r17 := @caughtexception;

        r25 = $r17;

     label05:
        exitmonitor r19;

        throw r25;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        r26 = r23;

        r27 = interfaceinvoke r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList add(java.lang.Object)>(r1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, r23);

        if $z0 == 0 goto label07;

        z1 = 0;

        goto label20;

     label07:
        $r28 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r28;

     label08:
        $r9 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r31;

        entermonitor r4;

     label09:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r32 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r12, $r32);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r13;

        $i1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label10;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r27);

        i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        z3 = $z2;

     label12:
        exitmonitor r4;

        goto label15;

     label13:
        $r16 := @caughtexception;

        r33 = $r16;

     label14:
        exitmonitor r4;

        throw r33;

     label15:
        z4 = z3;

        $r14 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r32, $r14);

     label16:
        exitmonitor $r28;

        goto label19;

     label17:
        $r18 := @caughtexception;

     label18:
        exitmonitor $r28;

        throw $r18;

     label19:
        if z4 == 0 goto label01;

        z1 = 1;

        goto label20;

     label20:
        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void add(int, java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, r3, $r4, r22;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r1, r5, r20, $r29, r32;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r6, $r8, $r11, r23;
        androidx.compose.runtime.snapshots.StateRecord $r7, $r9, $r10, $r14, $r16, $r31;
        boolean $z0, $z1, z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r12;
        androidx.compose.runtime.snapshots.StateObject $r13, $r15;
        java.lang.Throwable $r17, $r18, $r19, r26, r34, r35;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r24, r27, r28;
        kotlin.Unit r25;
        androidx.compose.runtime.snapshots.Snapshot $r33;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0;

        r3 = r2;

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateList) r3;

     label01:
        r20 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r20;

     label02:
        r22 = $r4;

        $r7 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r8 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r7;

        $r16 = (androidx.compose.runtime.snapshots.StateRecord) $r8;

        $r9 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r16);

        r23 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        i4 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r24 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r25 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r20;

        goto label06;

     label04:
        $r17 := @caughtexception;

        r26 = $r17;

     label05:
        exitmonitor r20;

        throw r26;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r24);

        r27 = r24;

        r28 = interfaceinvoke r27.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList add(int,java.lang.Object)>(i0, r1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r28, r24);

        if $z0 == 0 goto label07;

        goto label20;

     label07:
        $r29 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r29;

     label08:
        $r10 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r11 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r10;

        $r31 = (androidx.compose.runtime.snapshots.StateRecord) $r11;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r32 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r5 = r32;

        entermonitor r5;

     label09:
        $r12 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r33 = virtualinvoke $r12.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r13 = (androidx.compose.runtime.snapshots.StateObject) $r4;

        $r14 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r31, $r13, $r33);

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r14;

        $i2 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i2 != i4 goto label10;

        virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r28);

        i1 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i3 = i1 + 1;

        virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i3);

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        z2 = $z1;

     label12:
        exitmonitor r5;

        goto label15;

     label13:
        $r19 := @caughtexception;

        r34 = $r19;

     label14:
        exitmonitor r5;

        throw r34;

     label15:
        z3 = z2;

        $r15 = (androidx.compose.runtime.snapshots.StateObject) $r4;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r33, $r15);

        z4 = z3;

     label16:
        exitmonitor $r29;

        goto label19;

     label17:
        $r18 := @caughtexception;

        r35 = $r18;

     label18:
        exitmonitor $r29;

        throw r35;

     label19:
        if z4 == 0 goto label01;

        goto label20;

     label20:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean addAll(int, java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        int i0;
        java.util.Collection r1;
        androidx.compose.runtime.snapshots.SnapshotStateList$addAll$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = new androidx.compose.runtime.snapshots.SnapshotStateList$addAll$1;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList$addAll$1: void <init>(int,java.util.Collection)>(i0, r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $z0 = specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean mutateBoolean(kotlin.jvm.functions.Function1)>($r3);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, $r3, r21;
        java.util.Collection r1;
        java.lang.Object r4, r19, $r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5, $r7, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r9, $r13, $r15, $r30;
        boolean $z0, z1, $z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r25, r33;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r23, r26, r27;
        kotlin.Unit r24;
        androidx.compose.runtime.snapshots.Snapshot $r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        r2 = r0;

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList) r2;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r19;

     label02:
        r21 = $r3;

        $r6 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r17 := @caughtexception;

        r25 = $r17;

     label05:
        exitmonitor r19;

        throw r25;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        r26 = r23;

        r27 = interfaceinvoke r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList addAll(java.util.Collection)>(r1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, r23);

        if $z0 == 0 goto label07;

        z1 = 0;

        goto label20;

     label07:
        $r28 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r28;

     label08:
        $r9 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r31;

        entermonitor r4;

     label09:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r32 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r12, $r32);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r13;

        $i1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label10;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r27);

        i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        z3 = $z2;

     label12:
        exitmonitor r4;

        goto label15;

     label13:
        $r16 := @caughtexception;

        r33 = $r16;

     label14:
        exitmonitor r4;

        throw r33;

     label15:
        z4 = z3;

        $r14 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r32, $r14);

     label16:
        exitmonitor $r28;

        goto label19;

     label17:
        $r18 := @caughtexception;

     label18:
        exitmonitor $r28;

        throw $r18;

     label19:
        if z4 == 0 goto label01;

        z1 = 1;

        goto label20;

     label20:
        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void clear()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r3;
        java.lang.Object r1, r2, r5, r15;
        androidx.compose.runtime.snapshots.StateRecord $r4, $r6, $r10;
        int i0, $i1;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r7, $r17;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r8;
        androidx.compose.runtime.snapshots.StateObject $r9, $r12;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r11;
        java.lang.Throwable $r13, $r14;
        androidx.compose.runtime.snapshots.Snapshot r16;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r2 = r1;

        entermonitor r2;

     label01:
        r3 = r0;

        $r6 = virtualinvoke r3.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r4 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r15 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r5 = r15;

        entermonitor r5;

     label02:
        $r8 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r16 = virtualinvoke $r8.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r9 = (androidx.compose.runtime.snapshots.StateObject) r3;

        $r10 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r4, $r9, r16);

        $r17 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r10;

        $r11 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList persistentListOf()>();

        virtualinvoke $r17.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>($r11);

        i0 = virtualinvoke $r17.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i1 = i0 + 1;

        virtualinvoke $r17.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i1);

     label03:
        exitmonitor r5;

        goto label06;

     label04:
        $r13 := @caughtexception;

     label05:
        exitmonitor r5;

        throw $r13;

     label06:
        $r12 = (androidx.compose.runtime.snapshots.StateObject) r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r16, $r12);

     label07:
        exitmonitor r2;

        goto label10;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor r2;

        throw $r14;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, $r3, r21;
        java.lang.Object r1, r4, r19, $r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5, $r7, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r9, $r13, $r15, $r30;
        boolean $z0, z1, $z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r25, r33;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r23, r26, r27;
        kotlin.Unit r24;
        androidx.compose.runtime.snapshots.Snapshot $r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0;

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList) r2;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r19;

     label02:
        r21 = $r3;

        $r6 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r17 := @caughtexception;

        r25 = $r17;

     label05:
        exitmonitor r19;

        throw r25;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        r26 = r23;

        r27 = interfaceinvoke r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList remove(java.lang.Object)>(r1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, r23);

        if $z0 == 0 goto label07;

        z1 = 0;

        goto label20;

     label07:
        $r28 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r28;

     label08:
        $r9 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r31;

        entermonitor r4;

     label09:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r32 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r12, $r32);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r13;

        $i1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label10;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r27);

        i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        z3 = $z2;

     label12:
        exitmonitor r4;

        goto label15;

     label13:
        $r18 := @caughtexception;

        r33 = $r18;

     label14:
        exitmonitor r4;

        throw r33;

     label15:
        z4 = z3;

        $r14 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r32, $r14);

     label16:
        exitmonitor $r28;

        goto label19;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor $r28;

        throw $r16;

     label19:
        if z4 == 0 goto label01;

        z1 = 1;

        goto label20;

     label20:
        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, $r3, r21;
        java.util.Collection r1;
        java.lang.Object r4, r19, $r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5, $r7, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r9, $r13, $r15, $r30;
        boolean $z0, z1, $z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r25, r33;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r23, r26, r27;
        kotlin.Unit r24;
        androidx.compose.runtime.snapshots.Snapshot $r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        r2 = r0;

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList) r2;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r19;

     label02:
        r21 = $r3;

        $r6 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r17 := @caughtexception;

        r25 = $r17;

     label05:
        exitmonitor r19;

        throw r25;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        r26 = r23;

        r27 = interfaceinvoke r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList removeAll(java.util.Collection)>(r1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, r23);

        if $z0 == 0 goto label07;

        z1 = 0;

        goto label20;

     label07:
        $r28 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r28;

     label08:
        $r9 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r31;

        entermonitor r4;

     label09:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r32 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r12, $r32);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r13;

        $i1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label10;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r27);

        i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        z3 = $z2;

     label12:
        exitmonitor r4;

        goto label15;

     label13:
        $r16 := @caughtexception;

        r33 = $r16;

     label14:
        exitmonitor r4;

        throw r33;

     label15:
        z4 = z3;

        $r14 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r32, $r14);

     label16:
        exitmonitor $r28;

        goto label19;

     label17:
        $r18 := @caughtexception;

     label18:
        exitmonitor $r28;

        throw $r18;

     label19:
        if z4 == 0 goto label01;

        z1 = 1;

        goto label20;

     label20:
        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public java.lang.Object removeAt(int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, r3, $r4, r22;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r1, r5, r20, $r29, r32;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r6, $r8, $r11, r23;
        androidx.compose.runtime.snapshots.StateRecord $r7, $r9, $r10, $r14, $r16, $r31;
        boolean $z0, $z1, z2, z3;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r12;
        androidx.compose.runtime.snapshots.StateObject $r13, $r15;
        java.lang.Throwable $r17, $r18, $r19, r26, r34;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r24, r27, r28;
        kotlin.Unit r25;
        androidx.compose.runtime.snapshots.Snapshot $r33;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: java.lang.Object get(int)>(i0);

        r2 = r0;

        r3 = r2;

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateList) r3;

     label01:
        r20 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r20;

     label02:
        r22 = $r4;

        $r7 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r8 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r7;

        $r16 = (androidx.compose.runtime.snapshots.StateRecord) $r8;

        $r9 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r16);

        r23 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        i4 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r24 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r25 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r20;

        goto label06;

     label04:
        $r18 := @caughtexception;

        r26 = $r18;

     label05:
        exitmonitor r20;

        throw r26;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r24);

        r27 = r24;

        r28 = interfaceinvoke r27.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList removeAt(int)>(i0);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r28, r24);

        if $z0 == 0 goto label07;

        goto label20;

     label07:
        $r29 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r29;

     label08:
        $r10 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r11 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r10;

        $r31 = (androidx.compose.runtime.snapshots.StateRecord) $r11;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r32 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r5 = r32;

        entermonitor r5;

     label09:
        $r12 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r33 = virtualinvoke $r12.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r13 = (androidx.compose.runtime.snapshots.StateObject) $r4;

        $r14 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r31, $r13, $r33);

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r14;

        $i2 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i2 != i4 goto label10;

        virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r28);

        i1 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i3 = i1 + 1;

        virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i3);

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        z2 = $z1;

     label12:
        exitmonitor r5;

        goto label15;

     label13:
        $r17 := @caughtexception;

        r34 = $r17;

     label14:
        exitmonitor r5;

        throw r34;

     label15:
        z3 = z2;

        $r15 = (androidx.compose.runtime.snapshots.StateObject) $r4;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r33, $r15);

     label16:
        exitmonitor $r29;

        goto label19;

     label17:
        $r19 := @caughtexception;

     label18:
        exitmonitor $r29;

        throw $r19;

     label19:
        if z3 == 0 goto label01;

        goto label20;

     label20:
        return r1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.util.Collection r1;
        androidx.compose.runtime.snapshots.SnapshotStateList$retainAll$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = new androidx.compose.runtime.snapshots.SnapshotStateList$retainAll$1;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList$retainAll$1: void <init>(java.util.Collection)>(r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $z0 = specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean mutateBoolean(kotlin.jvm.functions.Function1)>($r3);

        return $z0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r3, r4, $r5, r23;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r1, r2, r6, r21, $r30, r33;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r7, $r9, $r12, r24;
        androidx.compose.runtime.snapshots.StateRecord $r8, $r10, $r11, $r15, $r17, $r32;
        boolean $z0, $z1, z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r13;
        androidx.compose.runtime.snapshots.StateObject $r14, $r16;
        java.lang.Throwable $r18, $r19, $r20, r27, r35, r36;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r25, r28, r29;
        kotlin.Unit r26;
        androidx.compose.runtime.snapshots.Snapshot $r34;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: java.lang.Object get(int)>(i0);

        r3 = r0;

        r4 = r3;

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList) r4;

     label01:
        r21 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r21;

     label02:
        r23 = $r5;

        $r8 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r9 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        $r17 = (androidx.compose.runtime.snapshots.StateRecord) $r9;

        $r10 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r17);

        r24 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r10;

        i4 = virtualinvoke r24.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r25 = virtualinvoke r24.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r26 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r21;

        goto label06;

     label04:
        $r18 := @caughtexception;

        r27 = $r18;

     label05:
        exitmonitor r21;

        throw r27;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r25);

        r28 = r25;

        r29 = interfaceinvoke r28.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList set(int,java.lang.Object)>(i0, r1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r29, r25);

        if $z0 == 0 goto label07;

        goto label20;

     label07:
        $r30 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r30;

     label08:
        $r11 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r12 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r11;

        $r32 = (androidx.compose.runtime.snapshots.StateRecord) $r12;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r33 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r6 = r33;

        entermonitor r6;

     label09:
        $r13 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r34 = virtualinvoke $r13.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r14 = (androidx.compose.runtime.snapshots.StateObject) $r5;

        $r15 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r32, $r14, $r34);

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r15;

        $i2 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i2 != i4 goto label10;

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r29);

        i1 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i3 = i1 + 1;

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i3);

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        z2 = $z1;

     label12:
        exitmonitor r6;

        goto label15;

     label13:
        $r20 := @caughtexception;

        r35 = $r20;

     label14:
        exitmonitor r6;

        throw r35;

     label15:
        z3 = z2;

        $r16 = (androidx.compose.runtime.snapshots.StateObject) $r5;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r34, $r16);

        z4 = z3;

     label16:
        exitmonitor $r30;

        goto label19;

     label17:
        $r19 := @caughtexception;

        r36 = $r19;

     label18:
        exitmonitor $r30;

        throw r36;

     label19:
        if z4 == 0 goto label01;

        goto label20;

     label20:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public final void removeRange(int, int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r1, r20;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.Object r2, r18, r19, r29, r30, r33;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r3, $r5, $r9, r21;
        androidx.compose.runtime.snapshots.StateRecord $r4, $r6, $r8, $r12, $r14, $r32;
        java.util.List $r7, r26;
        boolean $z0, $z1, z2, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r10;
        androidx.compose.runtime.snapshots.StateObject $r11, $r13;
        java.lang.Throwable $r15, $r16, $r17, r35, r36;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r22, $r28;
        kotlin.Unit $r23, r27;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder r25;
        androidx.compose.runtime.snapshots.Snapshot r34;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0;

     label01:
        r18 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r19 = r18;

        entermonitor r19;

     label02:
        r20 = r1;

        $r4 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r4;

        $r14 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r14);

        r21 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        i5 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r22 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r16 := @caughtexception;

     label05:
        exitmonitor r19;

        throw $r16;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        r25 = interfaceinvoke r22.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder builder()>();

        r26 = (java.util.List) r25;

        $r7 = interfaceinvoke r26.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        interfaceinvoke $r7.<java.util.List: void clear()>();

        r27 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r28 = interfaceinvoke r25.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, r22);

        if $z0 != 0 goto label19;

        r29 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r30 = r29;

        entermonitor r30;

     label07:
        $r8 = virtualinvoke r1.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r9 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        $r32 = (androidx.compose.runtime.snapshots.StateRecord) $r9;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r33 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r2 = r33;

        entermonitor r2;

     label08:
        $r10 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r34 = virtualinvoke $r10.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r11 = (androidx.compose.runtime.snapshots.StateObject) r1;

        $r12 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r32, $r11, r34);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r12;

        $i3 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i3 != i5 goto label09;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>($r28);

        i2 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i4 = i2 + 1;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i4);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        exitmonitor r2;

        goto label14;

     label12:
        $r17 := @caughtexception;

        r35 = $r17;

     label13:
        exitmonitor r2;

        throw r35;

     label14:
        $r13 = (androidx.compose.runtime.snapshots.StateObject) r1;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r34, $r13);

        z4 = z2;

     label15:
        exitmonitor r30;

        goto label18;

     label16:
        $r15 := @caughtexception;

        r36 = $r15;

     label17:
        exitmonitor r30;

        throw r36;

     label18:
        if z4 == 0 goto label01;

     label19:
        goto label20;

     label20:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public final int retainAllInRange$runtime_release(java.util.Collection, int, int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, r22;
        java.util.Collection r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8;
        java.util.List r3, $r9;
        java.lang.Object r4, r20, r21, r30, r31, r34;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5, $r7, $r11, r23;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r10, $r14, $r16, $r33;
        boolean $z0, $z1, z2, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r12;
        androidx.compose.runtime.snapshots.StateObject $r13, $r15;
        java.lang.Throwable $r17, $r18, $r19, r36, r37;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r24, $r29;
        kotlin.Unit $r25, r28;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder r27;
        androidx.compose.runtime.snapshots.Snapshot r35;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.util.Collection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: int size()>();

        r2 = r0;

     label01:
        r20 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r21 = r20;

        entermonitor r21;

     label02:
        r22 = r2;

        $r6 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r16 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r16);

        r23 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        i8 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r24 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $r25 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r21;

        goto label06;

     label04:
        $r18 := @caughtexception;

     label05:
        exitmonitor r21;

        throw $r18;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r24);

        r27 = interfaceinvoke r24.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder builder()>();

        r3 = (java.util.List) r27;

        $r9 = interfaceinvoke r3.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        interfaceinvoke $r9.<java.util.List: boolean retainAll(java.util.Collection)>(r1);

        r28 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r29 = interfaceinvoke r27.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r29, r24);

        if $z0 != 0 goto label19;

        r30 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r31 = r30;

        entermonitor r31;

     label07:
        $r10 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r11 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r10;

        $r33 = (androidx.compose.runtime.snapshots.StateRecord) $r11;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r34 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r34;

        entermonitor r4;

     label08:
        $r12 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r35 = virtualinvoke $r12.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r13 = (androidx.compose.runtime.snapshots.StateObject) r2;

        $r14 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r33, $r13, r35);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r14;

        $i6 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i6 != i8 goto label09;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>($r29);

        i3 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i7 = i3 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i7);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        exitmonitor r4;

        goto label14;

     label12:
        $r19 := @caughtexception;

        r36 = $r19;

     label13:
        exitmonitor r4;

        throw r36;

     label14:
        $r15 = (androidx.compose.runtime.snapshots.StateObject) r2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r35, $r15);

        z4 = z2;

     label15:
        exitmonitor r31;

        goto label18;

     label16:
        $r17 := @caughtexception;

        r37 = $r17;

     label17:
        exitmonitor r31;

        throw r37;

     label18:
        if z4 == 0 goto label01;

     label19:
        goto label20;

     label20:
        $i4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: int size()>();

        $i5 = i2 - $i4;

        return $i5;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public final java.util.List getDebuggerDisplayValue()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r4, $r6;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r7;
        java.util.List $r8;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 = r0;

        $r4 = virtualinvoke r1.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r4;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r7 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $r8 = (java.util.List) $r7;

        return $r8;
    }

    public static void getDebuggerDisplayValue$annotations()
    {
        return;
    }

    private final java.lang.Object writable(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r4, $r8;
        java.lang.Object r3, r11, r13;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r6;
        androidx.compose.runtime.snapshots.StateObject $r7, $r9;
        java.lang.Throwable $r10, r14;
        androidx.compose.runtime.snapshots.Snapshot r12;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r4;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r11 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r11;

        entermonitor r3;

     label1:
        $r6 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r12 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r7 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r2, $r7, r12);

        r13 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r10 := @caughtexception;

        r14 = $r10;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r14;

     label5:
        $r9 = (androidx.compose.runtime.snapshots.StateObject) r0;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r12, $r9);

        return r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.lang.Object withCurrent(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r3, $r5;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r3;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r4;

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        return $r6;
    }

    private final boolean mutateBoolean(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, r21;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r3, r19, r20, r27, r29, r30, r33;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r4, $r6, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r5, $r7, $r9, $r13, $r15, $r32;
        boolean $z0, $z1, $z2, z3, z5;
        java.lang.Boolean $r8;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r35, r36;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r23, $r28;
        kotlin.Unit $r24;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder r26;
        androidx.compose.runtime.snapshots.Snapshot r34;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = r0;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r20 = r19;

        entermonitor r20;

     label02:
        r21 = r2;

        $r5 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r5;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r6;

        $r7 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r7;

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r20;

        goto label06;

     label04:
        $r17 := @caughtexception;

     label05:
        exitmonitor r20;

        throw $r17;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        r26 = interfaceinvoke r23.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder builder()>();

        r27 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r26);

        $r28 = interfaceinvoke r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, r23);

        if $z0 != 0 goto label19;

        r29 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r30 = r29;

        entermonitor r30;

     label07:
        $r9 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        $r32 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r33 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r33;

        entermonitor r3;

     label08:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r34 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) r2;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r32, $r12, r34);

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r13;

        $i1 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label09;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>($r28);

        i0 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z3 = $z2;

     label11:
        exitmonitor r3;

        goto label14;

     label12:
        $r16 := @caughtexception;

        r35 = $r16;

     label13:
        exitmonitor r3;

        throw r35;

     label14:
        $r14 = (androidx.compose.runtime.snapshots.StateObject) r2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r34, $r14);

        z5 = z3;

     label15:
        exitmonitor r30;

        goto label18;

     label16:
        $r18 := @caughtexception;

        r36 = $r18;

     label17:
        exitmonitor r30;

        throw r36;

     label18:
        if z5 == 0 goto label01;

     label19:
        goto label20;

     label20:
        $r8 = (java.lang.Boolean) r27;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private final java.lang.Object mutate(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r19;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2, r17, r18, r25, r27, r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r3, $r5, $r8, r20;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r4, $r6, $r7, $r11, $r13, $r30;
        boolean $z0, $z1, z2, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r9;
        androidx.compose.runtime.snapshots.StateObject $r10, $r12;
        java.lang.Throwable $r14, $r15, $r16, r33, r34;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r21, $r26;
        kotlin.Unit $r22;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder r24;
        androidx.compose.runtime.snapshots.Snapshot r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

     label01:
        r17 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r18 = r17;

        entermonitor r18;

     label02:
        r19 = r0;

        $r4 = virtualinvoke r19.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r4;

        $r13 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r13);

        r20 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        i3 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r21 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        $r22 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r18;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label06;

     label04:
        $r14 := @caughtexception;

     label05:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r18;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r14;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r21);

        r24 = interfaceinvoke r21.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder builder()>();

        r25 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r24);

        $r26 = interfaceinvoke r24.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r26, r21);

        if $z0 != 0 goto label19;

        r27 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        r28 = r27;

        entermonitor r28;

     label07:
        $r7 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r8 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r7;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r8;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r2 = r31;

        entermonitor r2;

     label08:
        $r9 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r32 = virtualinvoke $r9.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r10 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r11 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r10, r32);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r11;

        $i1 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label09;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>($r26);

        i0 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label14;

     label12:
        $r15 := @caughtexception;

        r33 = $r15;

     label13:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r33;

     label14:
        $r12 = (androidx.compose.runtime.snapshots.StateObject) r0;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r32, $r12);

        z4 = z2;

     label15:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r28;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label18;

     label16:
        $r16 := @caughtexception;

        r34 = $r16;

     label17:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r28;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r34;

     label18:
        if z4 == 0 goto label01;

     label19:
        goto label20;

     label20:
        return r25;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private final void update(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, r2, $r3, r22;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r4, $r9, r20, $r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r5, $r7, $r11, r23;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r10, $r14, $r16, $r30;
        boolean $z0, $z1, z2, z3, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r12;
        androidx.compose.runtime.snapshots.StateObject $r13, $r15;
        java.lang.Throwable $r17, $r18, $r19, r26, r33, r34;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r24, r27;
        kotlin.Unit r25;
        androidx.compose.runtime.snapshots.Snapshot $r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = r0;

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateList) r2;

     label01:
        r20 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r20;

     label02:
        r22 = $r3;

        $r6 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r6;

        $r16 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r16);

        r23 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r8;

        i3 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r24 = virtualinvoke r23.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r25 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r20;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label06;

     label04:
        $r17 := @caughtexception;

        r26 = $r17;

     label05:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r20;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r26;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r24);

        $r9 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r24);

        r27 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList) $r9;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, r24);

        if $z0 == 0 goto label07;

        goto label20;

     label07:
        $r28 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r28;

     label08:
        $r10 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r11 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r10;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r11;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r31;

        entermonitor r4;

     label09:
        $r12 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r32 = virtualinvoke $r12.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r13 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        $r14 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r13, $r32);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r14;

        $i1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label10;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r27);

        i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        z2 = $z1;

     label12:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r4;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label15;

     label13:
        $r19 := @caughtexception;

        r33 = $r19;

     label14:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r4;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r33;

     label15:
        z3 = z2;

        $r15 = (androidx.compose.runtime.snapshots.StateObject) $r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r32, $r15);

        z4 = z3;

     label16:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor $r28;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label19;

     label17:
        $r18 := @caughtexception;

        r34 = $r18;

     label18:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor $r28;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r34;

     label19:
        if z4 == 0 goto label01;

        goto label20;

     label20:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private final boolean conditionalUpdate(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0, $r2, r21;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r3, $r8, r19, $r27, r30;
        androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord $r4, $r6, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r5, $r7, $r9, $r13, $r15, $r29;
        boolean $z0, z1, $z2, z3, z4, z5;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r25, r32, r33;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList r23, r26;
        kotlin.Unit r24;
        androidx.compose.runtime.snapshots.Snapshot $r31;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = (androidx.compose.runtime.snapshots.SnapshotStateList) r0;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor r19;

     label02:
        r21 = $r2;

        $r5 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r5;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r6;

        $r7 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r7;

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList getList$runtime_release()>();

        r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r19;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label06;

     label04:
        $r18 := @caughtexception;

        r25 = $r18;

     label05:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r19;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r25;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r23);

        r26 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList) $r8;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r26, r23);

        if $z0 == 0 goto label07;

        z1 = 0;

        goto label20;

     label07:
        $r27 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateListKt: java.lang.Object access$getSync$p()>();

        entermonitor $r27;

     label08:
        $r9 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateList.StateListStateRecord<T of androidx.compose.runtime.snapshots.SnapshotStateList>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r9;

        $r29 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r30 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r30;

        entermonitor r3;

     label09:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r31 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) $r2;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r29, $r12, $r31);

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord) $r13;

        $i1 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label10;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setList$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList)>(r26);

        i0 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateList$StateListStateRecord: void setModification$runtime_release(int)>($i2);

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        z3 = $z2;

     label12:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label15;

     label13:
        $r16 := @caughtexception;

        r32 = $r16;

     label14:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r32;

     label15:
        z4 = z3;

        $r14 = (androidx.compose.runtime.snapshots.StateObject) $r2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>($r31, $r14);

        z5 = z4;

     label16:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor $r27;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label19;

     label17:
        $r17 := @caughtexception;

        r33 = $r17;

     label18:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor $r27;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r33;

     label19:
        if z5 == 0 goto label01;

        z1 = 1;

        goto label20;

     label20:
        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public final volatile int size()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: int getSize()>();

        return $i0;
    }

    public final volatile java.lang.Object remove(int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateList: java.lang.Object removeAt(int)>(i0);

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = (java.util.Collection) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateList;

        $r1 = (java.util.Collection) r0;

        $r2 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

