androidx.test.espresso.matcher.CursorMatchers
<androidx.test.espresso.matcher.CursorMatchers: int COLUMN_NOT_FOUND>
<androidx.test.espresso.matcher.CursorMatchers: int MULTIPLE_COLUMNS_FOUND>
<androidx.test.espresso.matcher.CursorMatchers: int USE_COLUMN_PICKER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever BLOB_MATCHER_APPLIER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever LONG_MATCHER_APPLIER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever SHORT_MATCHER_APPLIER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever INT_MATCHER_APPLIER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever FLOAT_MATCHER_APPLIER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever DOUBLE_MATCHER_APPLIER>
<androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever STRING_MATCHER_APPLIER>
    static volatile int '-$$Nest$smfindColumnIndex'(org.hamcrest.Matcher, android.database.Cursor)
    {
        org.hamcrest.Matcher r0;
        android.database.Cursor r1;
        int $i0;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: android.database.Cursor;

        $i0 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: int findColumnIndex(org.hamcrest.Matcher,android.database.Cursor)>(r0, r1);

        return $i0;
    }

    private static int findColumnIndex(org.hamcrest.Matcher, android.database.Cursor)
    {
        java.lang.String[] r0;
        int $i0, i1, i2, i3;
        java.lang.String $r1;
        boolean $z0;
        org.hamcrest.Matcher r2;
        android.database.Cursor r3;

        r2 := @parameter0: org.hamcrest.Matcher;

        r3 := @parameter1: android.database.Cursor;

        r0 = interfaceinvoke r3.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        i1 = -1;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label5;

        $r1 = r0[i2];

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        if i1 != -1 goto label3;

        i1 = i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        i3 = -2;

     label4:
        return i3;

     label5:
        i3 = i1;

        goto label4;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever BLOB_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(int, byte[])
    {
        int i0;
        byte[] r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(java.lang.String, byte[])
    {
        java.lang.String r0;
        byte[] r1;
        org.hamcrest.Matcher $r2, $r3;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever BLOB_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(int, double)
    {
        int i0;
        double d0;
        java.lang.Double $r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever DOUBLE_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(java.lang.String, double)
    {
        java.lang.String r0;
        double d0;
        java.lang.Double $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever DOUBLE_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(int, float)
    {
        int i0;
        float f0;
        java.lang.Float $r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r0 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever FLOAT_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(java.lang.String, float)
    {
        java.lang.String r0;
        float f0;
        java.lang.Float $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever FLOAT_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(int, int)
    {
        int i0, i1;
        java.lang.Integer $r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever INT_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        java.lang.Integer $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever INT_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(int, long)
    {
        int i0;
        long l1;
        java.lang.Long $r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever LONG_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(java.lang.String, long)
    {
        java.lang.String r0;
        long l0;
        java.lang.Long $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever LONG_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever SHORT_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(int, short)
    {
        int i0;
        short s1;
        java.lang.Short $r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        s1 := @parameter1: short;

        $r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s1);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(java.lang.String, short)
    {
        java.lang.String r0;
        short s0;
        java.lang.Short $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever SHORT_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        org.hamcrest.Matcher $r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever STRING_MATCHER_APPLIER>;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(i0, r0, $r2, null);

        return r1;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.hamcrest.Matcher $r2, $r3;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever STRING_MATCHER_APPLIER>;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever,androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)>(r0, r1, $r3, null);

        return r2;
    }

    static void <clinit>()
    {
        androidx.test.espresso.matcher.CursorMatchers$1 r0;
        androidx.test.espresso.matcher.CursorMatchers$2 r1;
        androidx.test.espresso.matcher.CursorMatchers$3 r2;
        androidx.test.espresso.matcher.CursorMatchers$4 r3;
        androidx.test.espresso.matcher.CursorMatchers$5 r4;
        androidx.test.espresso.matcher.CursorMatchers$6 r5;
        androidx.test.espresso.matcher.CursorMatchers$7 r6;

        r0 = new androidx.test.espresso.matcher.CursorMatchers$1;

        specialinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$1: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever BLOB_MATCHER_APPLIER> = r0;

        r1 = new androidx.test.espresso.matcher.CursorMatchers$2;

        specialinvoke r1.<androidx.test.espresso.matcher.CursorMatchers$2: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever LONG_MATCHER_APPLIER> = r1;

        r2 = new androidx.test.espresso.matcher.CursorMatchers$3;

        specialinvoke r2.<androidx.test.espresso.matcher.CursorMatchers$3: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever SHORT_MATCHER_APPLIER> = r2;

        r3 = new androidx.test.espresso.matcher.CursorMatchers$4;

        specialinvoke r3.<androidx.test.espresso.matcher.CursorMatchers$4: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever INT_MATCHER_APPLIER> = r3;

        r4 = new androidx.test.espresso.matcher.CursorMatchers$5;

        specialinvoke r4.<androidx.test.espresso.matcher.CursorMatchers$5: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever FLOAT_MATCHER_APPLIER> = r4;

        r5 = new androidx.test.espresso.matcher.CursorMatchers$6;

        specialinvoke r5.<androidx.test.espresso.matcher.CursorMatchers$6: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever DOUBLE_MATCHER_APPLIER> = r5;

        r6 = new androidx.test.espresso.matcher.CursorMatchers$7;

        specialinvoke r6.<androidx.test.espresso.matcher.CursorMatchers$7: void <init>()>();

        <androidx.test.espresso.matcher.CursorMatchers: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever STRING_MATCHER_APPLIER> = r6;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$1
    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$1 r0;
        android.database.Cursor r1;
        int i0;
        byte[] $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$1;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$1: byte[] getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$1 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$1 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$1;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Blob");

        return;
    }

    public byte[] getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$1 r0;
        android.database.Cursor r1;
        int i0;
        byte[] $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$1;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(i0);

        return $r2;
    }

androidx.test.espresso.matcher.CursorMatchers$2
    public java.lang.Long getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$2 r0;
        android.database.Cursor r1;
        int i0;
        long $l1;
        java.lang.Long $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$2;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $l1 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(i0);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;
    }

    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$2 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.Long $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$2;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$2: java.lang.Long getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$2 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$2 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$2;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Long");

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$3
    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$3 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.Short $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$3;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$3: java.lang.Short getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    public java.lang.Short getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$3 r0;
        android.database.Cursor r1;
        int i0;
        short $s1;
        java.lang.Short $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$3;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $s1 = interfaceinvoke r1.<android.database.Cursor: short getShort(int)>(i0);

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$3 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$3 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$3;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Short");

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$4
    public java.lang.Integer getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$4 r0;
        android.database.Cursor r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$4;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$4 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.Integer $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$4;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$4: java.lang.Integer getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$4 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$4 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$4;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Int");

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$5
    public java.lang.Float getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$5 r0;
        android.database.Cursor r1;
        int i0;
        float $f0;
        java.lang.Float $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$5;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $f0 = interfaceinvoke r1.<android.database.Cursor: float getFloat(int)>(i0);

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$5 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.Float $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$5;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$5: java.lang.Float getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$5 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$5 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$5;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Float");

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$6
    public java.lang.Double getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$6 r0;
        android.database.Cursor r1;
        int i0;
        double $d0;
        java.lang.Double $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$6;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $d0 = interfaceinvoke r1.<android.database.Cursor: double getDouble(int)>(i0);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$6 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.Double $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$6;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$6: java.lang.Double getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$6 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$6 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$6;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Double");

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$7
    public volatile java.lang.Object getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$7 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$7;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$7: java.lang.String getData(android.database.Cursor,int)>(r1, i0);

        return $r2;
    }

    public java.lang.String getData(android.database.Cursor, int)
    {
        androidx.test.espresso.matcher.CursorMatchers$7 r0;
        android.database.Cursor r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$7;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        return $r2;
    }

    void <init>()
    {
        androidx.test.espresso.matcher.CursorMatchers$7 r0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$7 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$7;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with String");

        return;
    }

androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever
<androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever: java.lang.Object getData(android.database.Cursor,int)>
androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA
androidx.test.espresso.matcher.CursorMatchers$CursorMatcher
<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>
<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>
<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>
<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever cursorDataRetriever>
<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns>
    public androidx.test.espresso.matcher.CursorMatchers$CursorMatcher withStrictColumnChecks(boolean)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        z0 := @parameter0: boolean;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns> = z0;

        return r0;
    }

    private void <init>(int, org.hamcrest.Matcher, androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        int i0;
        org.hamcrest.Matcher r1, $r4;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever r2, $r6;
        java.lang.Object $r3, $r5;
        boolean z0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        i0 := @parameter0: int;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever;

        specialinvoke r0.<androidx.test.espresso.matcher.BoundedMatcher: void <init>(java.lang.Class)>(class "Landroid/database/Cursor;");

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns> = 0;

        if i0 < 0 goto label2;

        z0 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>(z0);

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex> = i0;

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.hamcrest.Matcher) $r3;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher> = $r4;

        $r5 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever) $r5;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever cursorDataRetriever> = $r6;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher> = null;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        org.hamcrest.Matcher r1, r2, $r5, $r7;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever r3, $r9;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever;

        specialinvoke r0.<androidx.test.espresso.matcher.BoundedMatcher: void <init>(java.lang.Class)>(class "Landroid/database/Cursor;");

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns> = 0;

        $r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (org.hamcrest.Matcher) $r4;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher> = $r5;

        $r6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (org.hamcrest.Matcher) $r6;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher> = $r7;

        $r8 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever) $r8;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever cursorDataRetriever> = $r9;

        r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex> = -3;

        return;
    }

    void <init>(int, org.hamcrest.Matcher, androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever, androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        int i0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA r3;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        i0 := @parameter0: int;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever;

        r3 := @parameter3: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA;

        specialinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever)>(i0, r1, r2);

        return;
    }

    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever, androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        org.hamcrest.Matcher r1, r2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever r3;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA r4;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever;

        r4 := @parameter3: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher-IA;

        specialinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever)>(r1, r2, r3);

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        org.hamcrest.Description r1, $r8, $r10, $r11;
        int i0, $i1;
        java.lang.StringBuilder r2, $r4, $r5, r15;
        java.lang.String $r6;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r9;
        org.hamcrest.Matcher $r12, $r14;
        org.hamcrest.SelfDescribing r16;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("an instance of android.database.Cursor and Rows with column: ");

        $i1 = r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>;

        if $i1 >= 0 goto label2;

        $r14 = r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        interfaceinvoke $r14.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

     label1:
        $r8 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" ");

        $r9 = r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever cursorDataRetriever>;

        $r10 = interfaceinvoke $r8.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r9);

        $r11 = interfaceinvoke $r10.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" matching ");

        $r12 = r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>;

        r16 = (org.hamcrest.SelfDescribing) $r12;

        interfaceinvoke $r11.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>(r16);

        return;

     label2:
        i0 = r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>;

        r15 = new java.lang.StringBuilder;

        r2 = r15;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r6);

        goto label1;
    }

    public boolean matchesSafely(android.database.Cursor)
    {
        org.hamcrest.StringDescription r0, r34;
        boolean z0, $z1, $z2;
        androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever $r1;
        org.hamcrest.Matcher $r2, $r7, $r8, $r13, $r20;
        org.hamcrest.Description $r3, $r5, $r9, $r11, $r12, $r16, $r18, $r19, $r23, $r25;
        java.lang.Integer $r4, $r24;
        java.lang.String[] $r10, $r17;
        java.lang.String $r15, $r27;
        java.lang.Throwable $r22, r32;
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r28;
        android.database.Cursor r29;
        int i0;
        java.lang.IllegalArgumentException r30, r33, r35, r36;
        java.lang.Object r31;
        org.hamcrest.SelfDescribing r37, r38;

        r28 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r29 := @parameter0: android.database.Cursor;

        i0 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>;

        r34 = new org.hamcrest.StringDescription;

        r0 = r34;

        specialinvoke r34.<org.hamcrest.StringDescription: void <init>()>();

        if i0 >= 0 goto label4;

        $r8 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        i0 = staticinvoke <androidx.test.espresso.matcher.CursorMatchers: int '-$$Nest$smfindColumnIndex'(org.hamcrest.Matcher,android.database.Cursor)>($r8, r29);

        if i0 >= 0 goto label4;

        if i0 != -2 goto label3;

        $r16 = virtualinvoke r0.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("Multiple columns in ");

        $r17 = interfaceinvoke r29.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r18 = interfaceinvoke $r16.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r17);

        $r19 = interfaceinvoke $r18.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" match ");

        $r20 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        r37 = (org.hamcrest.SelfDescribing) $r20;

        interfaceinvoke $r19.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>(r37);

     label1:
        $z1 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns>;

        if $z1 == 0 goto label2;

        r35 = new java.lang.IllegalArgumentException;

        r30 = r35;

        $r15 = virtualinvoke r0.<org.hamcrest.StringDescription: java.lang.String toString()>();

        specialinvoke r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw r30;

     label2:
        return 0;

     label3:
        $r9 = virtualinvoke r0.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("Couldn\'t find column in ");

        $r10 = interfaceinvoke r29.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r11 = interfaceinvoke $r9.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r10);

        $r12 = interfaceinvoke $r11.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" matching ");

        $r13 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        r38 = (org.hamcrest.SelfDescribing) $r13;

        interfaceinvoke $r12.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>(r38);

        goto label1;

     label4:
        $r1 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever cursorDataRetriever>;

        r31 = interfaceinvoke $r1.<androidx.test.espresso.matcher.CursorMatchers$CursorDataRetriever: java.lang.Object getData(android.database.Cursor,int)>(r29, i0);

        $r2 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>;

        z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r31);

     label5:
        if z0 != 0 goto label7;

     label6:
        $r3 = virtualinvoke r0.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("value at column ");

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r4);

        interfaceinvoke $r5.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" ");

        $r7 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>;

        interfaceinvoke $r7.<org.hamcrest.Matcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>(r31, r0);

     label7:
        return z0;

     label8:
        $r22 := @caughtexception;

        r32 = $r22;

        $r23 = virtualinvoke r0.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("Column index ");

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r25 = interfaceinvoke $r23.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r24);

        interfaceinvoke $r25.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" is invalid");

        $z2 = r28.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns>;

        if $z2 == 0 goto label9;

        r36 = new java.lang.IllegalArgumentException;

        r33 = r36;

        $r27 = virtualinvoke r0.<org.hamcrest.StringDescription: java.lang.String toString()>();

        specialinvoke r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r27, r32);

        throw r33;

     label9:
        return 0;

        catch android.database.CursorIndexOutOfBoundsException from label4 to label5 with label8;
        catch android.database.CursorIndexOutOfBoundsException from label6 to label7 with label8;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        java.lang.Object r1;
        android.database.Cursor $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean matchesSafely(android.database.Cursor)>($r2);

        return $z0;
    }

