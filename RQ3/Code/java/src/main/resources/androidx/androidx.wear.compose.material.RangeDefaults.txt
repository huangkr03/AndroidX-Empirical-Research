androidx.wear.compose.material.RangeDefaults
<androidx.wear.compose.material.RangeDefaults: androidx.wear.compose.material.RangeDefaults INSTANCE>
    private void <init>()
    {
        androidx.wear.compose.material.RangeDefaults r0;

        r0 := @this: androidx.wear.compose.material.RangeDefaults;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final float calculateCurrentStepValue(int, int, kotlin.ranges.ClosedFloatingPointRange)
    {
        androidx.wear.compose.material.RangeDefaults r0;
        int i0, i1, $i2;
        kotlin.ranges.ClosedFloatingPointRange r1;
        java.lang.Comparable $r2, $r4, $r7, $r8;
        java.lang.Number $r3, $r5, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.Float $r6;

        r0 := @this: androidx.wear.compose.material.RangeDefaults;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: kotlin.ranges.ClosedFloatingPointRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "valueRange");

        $r2 = interfaceinvoke r1.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = interfaceinvoke r1.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r5 = (java.lang.Number) $r4;

        $f1 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $f3 = (float) i0;

        $i2 = i1 + 1;

        $f2 = (float) $i2;

        $f4 = $f3 / $f2;

        $f5 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: float lerp(float,float,float)>($f0, $f1, $f4);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r7 = (java.lang.Comparable) $r6;

        $r8 = staticinvoke <kotlin.ranges.RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange)>($r7, r1);

        $r9 = (java.lang.Number) $r8;

        $f6 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        return $f6;
    }

    public final int snapValueToStep(float, kotlin.ranges.ClosedFloatingPointRange, int)
    {
        androidx.wear.compose.material.RangeDefaults r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        kotlin.ranges.ClosedFloatingPointRange r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Comparable $r2, $r4, $r6;
        java.lang.Number $r3, $r5, $r7;

        r0 := @this: androidx.wear.compose.material.RangeDefaults;

        f0 := @parameter0: float;

        r1 := @parameter1: kotlin.ranges.ClosedFloatingPointRange;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "valueRange");

        $r2 = interfaceinvoke r1.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f2 = f0 - $f1;

        $r4 = interfaceinvoke r1.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r5 = (java.lang.Number) $r4;

        $f3 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $r6 = interfaceinvoke r1.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r7 = (java.lang.Number) $r6;

        $f4 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $f5 = $f3 - $f4;

        $f7 = $f2 / $f5;

        $i1 = i0 + 1;

        $f6 = (float) $i1;

        $f8 = $f7 * $f6;

        $i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f8);

        $i3 = i0 + 1;

        $i4 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i2, 0, $i3);

        return $i4;
    }

    static void <clinit>()
    {
        androidx.wear.compose.material.RangeDefaults $r0;

        $r0 = new androidx.wear.compose.material.RangeDefaults;

        specialinvoke $r0.<androidx.wear.compose.material.RangeDefaults: void <init>()>();

        <androidx.wear.compose.material.RangeDefaults: androidx.wear.compose.material.RangeDefaults INSTANCE> = $r0;

        return;
    }

