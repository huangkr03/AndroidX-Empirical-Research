androidx.compose.Recomposer
<androidx.compose.Recomposer: androidx.compose.Recomposer$Companion Companion>
<androidx.compose.Recomposer: java.util.Set invalidComposers>
<androidx.compose.Recomposer: kotlin.coroutines.Continuation invalidComposersAwaiter>
<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>
<androidx.compose.Recomposer: java.util.concurrent.atomic.AtomicReference applyingScope>
<androidx.compose.Recomposer: androidx.compose.BroadcastFrameClock broadcastFrameClock>
<androidx.compose.Recomposer: androidx.compose.Recomposer mainRecomposer>
    public void <init>()
    {
        androidx.compose.Recomposer r0, r1;
        boolean z0;
        java.util.Set r2;
        java.util.LinkedHashSet $r3;
        androidx.compose.Latch $r4;
        java.util.concurrent.atomic.AtomicReference $r5;
        androidx.compose.BroadcastFrameClock $r6;
        androidx.compose.Recomposer$broadcastFrameClock$1 $r7;
        kotlin.jvm.functions.Function0 $r8;

        r0 := @this: androidx.compose.Recomposer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = r0;

        z0 = 0;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r3;

        r1.<androidx.compose.Recomposer: java.util.Set invalidComposers> = r2;

        $r4 = new androidx.compose.Latch;

        specialinvoke $r4.<androidx.compose.Latch: void <init>()>();

        r0.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r0.<androidx.compose.Recomposer: java.util.concurrent.atomic.AtomicReference applyingScope> = $r5;

        $r6 = new androidx.compose.BroadcastFrameClock;

        $r7 = new androidx.compose.Recomposer$broadcastFrameClock$1;

        specialinvoke $r7.<androidx.compose.Recomposer$broadcastFrameClock$1: void <init>(androidx.compose.Recomposer)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        specialinvoke $r6.<androidx.compose.BroadcastFrameClock: void <init>(kotlin.jvm.functions.Function0)>($r8);

        r0.<androidx.compose.Recomposer: androidx.compose.BroadcastFrameClock broadcastFrameClock> = $r6;

        return;
    }

    public final androidx.compose.CompositionFrameClock getFrameClock()
    {
        androidx.compose.Recomposer r0;
        androidx.compose.BroadcastFrameClock $r1;
        androidx.compose.CompositionFrameClock $r2;

        r0 := @this: androidx.compose.Recomposer;

        $r1 = r0.<androidx.compose.Recomposer: androidx.compose.BroadcastFrameClock broadcastFrameClock>;

        $r2 = (androidx.compose.CompositionFrameClock) $r1;

        return $r2;
    }

    public final java.lang.Object runRecomposeAndApplyChanges(androidx.compose.CompositionFrameClock, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r11, r24;
        java.lang.String r1, $r8;
        boolean z0, $z1;
        java.lang.Object $r2, r3, $r5, $r6, $r13;
        java.lang.Throwable $r9;
        kotlin.jvm.functions.Function2 $r12;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.Recomposer r15, r19;
        androidx.compose.CompositionFrameClock r16, r18;
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$1 $r17, r20;
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$2 r21;
        java.lang.IllegalStateException r22, r23;

        r15 := @this: androidx.compose.Recomposer;

        r16 := @parameter0: androidx.compose.CompositionFrameClock;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $z1 = $r0 instanceof androidx.compose.Recomposer$runRecomposeAndApplyChanges$1;

        if $z1 == 0 goto label1;

        $r17 = (androidx.compose.Recomposer$runRecomposeAndApplyChanges$1) $r0;

        $i0 = $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label>;

        $i3 = $i2 - -2147483648;

        $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label> = $i3;

        goto label2;

     label1:
        r20 = new androidx.compose.Recomposer$runRecomposeAndApplyChanges$1;

        specialinvoke r20.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: void <init>(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r15, $r0);

        $r17 = r20;

     label2:
        $r2 = $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r21 = new androidx.compose.Recomposer$runRecomposeAndApplyChanges$2;

        $r11 = (kotlin.coroutines.Continuation) null;

        specialinvoke r21.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: void <init>(androidx.compose.Recomposer,androidx.compose.CompositionFrameClock,kotlin.coroutines.Continuation)>(r15, r16, $r11);

        $r12 = (kotlin.jvm.functions.Function2) r21;

        $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object L$0> = r15;

        $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object L$1> = r16;

        $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label> = 1;

        r24 = (kotlin.coroutines.Continuation) $r17;

        $r13 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r12, r24);

        if $r13 != r3 goto label5;

        return r3;

     label4:
        $r5 = $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object L$1>;

        r18 = (androidx.compose.CompositionFrameClock) $r5;

        $r6 = $r17.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object L$0>;

        r19 = (androidx.compose.Recomposer) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label5:
        r1 = "this function never returns";

        z0 = 0;

        r22 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) r22;

        throw $r9;

     label6:
        r23 = new java.lang.IllegalStateException;

        specialinvoke r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r23;
    }

    public final java.lang.Object recomposeAndApplyChanges(kotlinx.coroutines.CoroutineScope, androidx.compose.CompositionFrameClock, long, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, r1, r4, $r18, $r22, r71, r72, r73;
        kotlin.Unit r2, r6, $r14, $r21, $r28;
        boolean z2, z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z13, $z17, z18, z19, z23, z24, z25;
        kotlin.Result$Companion r3;
        java.lang.Object r5, $r7, r8, $r10, $r11, $r12, $r13, $r20, $r29, $r30, $r31, $r32, $r59, $r62;
        byte $b0, $b1;
        java.util.Set $r15, $r19, r51, r57;
        androidx.compose.BroadcastFrameClock $r16;
        androidx.compose.Latch $r23, $r27, $r35, $r43;
        kotlin.jvm.functions.Function1 $r25, $r61;
        java.util.concurrent.atomic.AtomicReference $r26, $r34, $r42;
        java.lang.String $r37, r50;
        java.lang.Throwable $r38, $r40, $r41, $r44, r54, r58, r63;
        int $i2, $i3, $i4, $i5, $i7;
        androidx.compose.Recomposer r45;
        kotlinx.coroutines.CoroutineScope r46;
        androidx.compose.CompositionFrameClock r47;
        long l6, l8, l9;
        androidx.compose.Recomposer$recomposeAndApplyChanges$1 $r48, r64;
        java.util.List r49;
        java.util.Collection r52;
        java.lang.Boolean r53;
        kotlinx.coroutines.CancellableContinuationImpl r55, r67;
        kotlinx.coroutines.CancellableContinuation $r56;
        java.util.ArrayList r65;
        java.lang.IllegalStateException r66, r70;
        androidx.compose.Recomposer$recomposeAndApplyChanges$2$2 r68;
        androidx.compose.Recomposer$recomposeAndApplyChanges$3 r69;

        r45 := @this: androidx.compose.Recomposer;

        r46 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r47 := @parameter1: androidx.compose.CompositionFrameClock;

        l6 := @parameter2: long;

        $r0 := @parameter3: kotlin.coroutines.Continuation;

        $z4 = $r0 instanceof androidx.compose.Recomposer$recomposeAndApplyChanges$1;

        if $z4 == 0 goto label01;

        $r48 = (androidx.compose.Recomposer$recomposeAndApplyChanges$1) $r0;

        $i2 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label01;

        $i4 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label>;

        $i5 = $i4 - -2147483648;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label> = $i5;

        goto label02;

     label01:
        r64 = new androidx.compose.Recomposer$recomposeAndApplyChanges$1;

        specialinvoke r64.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: void <init>(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r45, $r0);

        $r48 = r64;

     label02:
        $r7 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object result>;

        r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i7 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label>;

        tableswitch($i7)
        {
            case 0: goto label03;
            case 1: goto label24;
            case 2: goto label29;
            default: goto label36;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r7);

        l8 = l6;

        z9 = 0;

        r65 = new java.util.ArrayList;

        specialinvoke r65.<java.util.ArrayList: void <init>()>();

        r49 = (java.util.List) r65;

        $r34 = r45.<androidx.compose.Recomposer: java.util.concurrent.atomic.AtomicReference applyingScope>;

        $z8 = virtualinvoke $r34.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, r46);

        if $z8 != 0 goto label04;

        r50 = "already recomposing and applying changes";

        z10 = 0;

        r66 = new java.lang.IllegalStateException;

        $r37 = virtualinvoke r50.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r66.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r37);

        $r38 = (java.lang.Throwable) r66;

        throw $r38;

     label04:
        $r35 = r45.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        virtualinvoke $r35.<androidx.compose.Latch: void closeLatch()>();

     label05:
        $b0 = l6 cmp 9223372036854775807L;

        if $b0 == 0 goto label06;

        l9 = l8;

        l8 = l9 + -1L;

        $b1 = l9 cmp 0L;

        if $b1 <= 0 goto label32;

     label06:
        r51 = r45.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        z13 = 0;

        entermonitor r51;

     label07:
        $r15 = r45.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        r52 = (java.util.Collection) $r15;

        $z5 = interfaceinvoke r52.<java.util.Collection: boolean isEmpty()>();

        if $z5 != 0 goto label08;

        $z17 = 1;

        goto label09;

     label08:
        $z17 = 0;

     label09:
        r53 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>($z17);

     label10:
        exitmonitor r51;

        goto label13;

     label11:
        $r44 := @caughtexception;

        r54 = $r44;

     label12:
        exitmonitor r51;

        throw r54;

     label13:
        z18 = virtualinvoke r53.<java.lang.Boolean: boolean booleanValue()>();

        if z18 != 0 goto label27;

        $r16 = r45.<androidx.compose.Recomposer: androidx.compose.BroadcastFrameClock broadcastFrameClock>;

        $z6 = virtualinvoke $r16.<androidx.compose.BroadcastFrameClock: boolean getHasAwaiters()>();

        if $z6 != 0 goto label27;

        z19 = 0;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$0> = r45;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$1> = r46;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$2> = r47;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$0> = l6;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$1> = l8;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$3> = r49;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: boolean Z$0> = z18;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label> = 1;

        r67 = new kotlinx.coroutines.CancellableContinuationImpl;

        r71 = (kotlin.coroutines.Continuation) $r48;

        $r18 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r71);

        specialinvoke r67.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r18, 1);

        r55 = r67;

        virtualinvoke r55.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        $r56 = (kotlinx.coroutines.CancellableContinuation) r55;

        r57 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>(r45);

        z23 = 0;

        z24 = 0;

        entermonitor r57;

     label14:
        $r19 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>(r45);

        $z7 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>();

        if $z7 == 0 goto label15;

        $r22 = (kotlin.coroutines.Continuation) $r56;

        staticinvoke <androidx.compose.Recomposer: void access$setInvalidComposersAwaiter$p(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r45, $r22);

        $r23 = staticinvoke <androidx.compose.Recomposer: androidx.compose.Latch access$getIdlingLatch$p(androidx.compose.Recomposer)>(r45);

        virtualinvoke $r23.<androidx.compose.Latch: void openLatch()>();

        goto label17;

     label15:
        r1 = (kotlin.coroutines.Continuation) $r56;

        r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        z2 = 0;

        r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        r4 = r1;

        z3 = 0;

        r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r2);

        interfaceinvoke r4.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r5);

     label16:
        exitmonitor r57;

        goto label22;

     label17:
        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label18:
        exitmonitor r57;

        goto label21;

     label19:
        $r40 := @caughtexception;

        r58 = $r40;

     label20:
        exitmonitor r57;

        throw r58;

     label21:
        r68 = new androidx.compose.Recomposer$recomposeAndApplyChanges$2$2;

        specialinvoke r68.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: void <init>(androidx.compose.Recomposer,kotlinx.coroutines.CancellableContinuation)>(r45, $r56);

        $r25 = (kotlin.jvm.functions.Function1) r68;

        interfaceinvoke $r56.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r25);

     label22:
        $r59 = virtualinvoke r55.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r20 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r59 != $r20 goto label23;

        r72 = (kotlin.coroutines.Continuation) $r48;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>(r72);

     label23:
        if $r59 != r8 goto label26;

        return r8;

     label24:
        z18 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: boolean Z$0>;

        $r29 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$3>;

        r49 = (java.util.List) $r29;

        l8 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$1>;

        l6 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$0>;

        $r30 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$2>;

        r47 = (androidx.compose.CompositionFrameClock) $r30;

        $r31 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$1>;

        r46 = (kotlinx.coroutines.CoroutineScope) $r31;

        $r32 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$0>;

        r45 = (androidx.compose.Recomposer) $r32;

     label25:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r7);

        $r59 = $r7;

     label26:
        $r21 = (kotlin.Unit) $r59;

     label27:
        r69 = new androidx.compose.Recomposer$recomposeAndApplyChanges$3;

        specialinvoke r69.<androidx.compose.Recomposer$recomposeAndApplyChanges$3: void <init>(androidx.compose.Recomposer,java.util.List)>(r45, r49);

        $r61 = (kotlin.jvm.functions.Function1) r69;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$0> = r45;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$1> = r46;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$2> = r47;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$0> = l6;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$1> = l8;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$3> = r49;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: boolean Z$0> = z18;

        $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label> = 2;

        r73 = (kotlin.coroutines.Continuation) $r48;

        $r62 = interfaceinvoke r47.<androidx.compose.CompositionFrameClock: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r61, r73);

     label28:
        if $r62 != r8 goto label31;

        return r8;

     label29:
        z25 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: boolean Z$0>;

        $r10 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$3>;

        r49 = (java.util.List) $r10;

        l8 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$1>;

        l6 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$0>;

        $r11 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$2>;

        r47 = (androidx.compose.CompositionFrameClock) $r11;

        $r12 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$1>;

        r46 = (kotlinx.coroutines.CoroutineScope) $r12;

        $r13 = $r48.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$0>;

        r45 = (androidx.compose.Recomposer) $r13;

     label30:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r7);

        $r62 = $r7;

     label31:
        $r14 = (kotlin.Unit) $r62;

        goto label05;

     label32:
        $r26 = r45.<androidx.compose.Recomposer: java.util.concurrent.atomic.AtomicReference applyingScope>;

        virtualinvoke $r26.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r27 = r45.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        virtualinvoke $r27.<androidx.compose.Latch: void openLatch()>();

        goto label35;

     label33:
        $r41 := @caughtexception;

        r63 = $r41;

     label34:
        $r42 = r45.<androidx.compose.Recomposer: java.util.concurrent.atomic.AtomicReference applyingScope>;

        virtualinvoke $r42.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r43 = r45.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        virtualinvoke $r43.<androidx.compose.Latch: void openLatch()>();

        throw r63;

     label35:
        $r28 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r28;

     label36:
        r70 = new java.lang.IllegalStateException;

        specialinvoke r70.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r70;

        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label04 to label23 with label33;
        catch java.lang.Throwable from label25 to label28 with label33;
        catch java.lang.Throwable from label30 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    public final kotlinx.coroutines.Job launchEffect$compose_runtime_release(kotlin.jvm.functions.Function2)
    {
        androidx.compose.Recomposer r0;
        kotlin.jvm.functions.Function2 r1, $r8;
        kotlinx.coroutines.Job r2, $r13;
        boolean z0;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        androidx.compose.Recomposer$launchEffect$1 $r5;
        kotlin.coroutines.Continuation $r6;
        kotlinx.coroutines.CoroutineStart $r7;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, r14;
        java.lang.Throwable $r11;
        kotlinx.coroutines.CoroutineScope r12;

        r0 := @this: androidx.compose.Recomposer;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = r0.<androidx.compose.Recomposer: java.util.concurrent.atomic.AtomicReference applyingScope>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r12 = (kotlinx.coroutines.CoroutineScope) $r4;

        if r12 != null goto label1;

        $r13 = (kotlinx.coroutines.Job) null;

        goto label2;

     label1:
        $r7 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED>;

        $r5 = new androidx.compose.Recomposer$launchEffect$1;

        $r6 = (kotlin.coroutines.Continuation) null;

        specialinvoke $r5.<androidx.compose.Recomposer$launchEffect$1: void <init>(kotlin.jvm.functions.Function2,androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r1, r0, $r6);

        $r8 = (kotlin.jvm.functions.Function2) $r5;

        $r13 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r12, null, $r7, $r8, 1, null);

     label2:
        r2 = $r13;

        if r2 != null goto label3;

        r14 = "apply scope missing; runRecomposeAndApplyChanges must be running";

        z0 = 0;

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label3:
        return r2;
    }

    public final void composeInitial$compose_runtime_release(kotlin.jvm.functions.Function3, androidx.compose.Composer)
    {
        androidx.compose.Recomposer r0;
        kotlin.jvm.functions.Function3 r1;
        androidx.compose.Composer r2, r3;
        boolean z0, z2, z6, z7;
        java.lang.String r4;
        java.lang.Throwable r5, $r11, $r12, $r13, $r15, $r16, r19, r21, r22, r23;
        androidx.compose.Trace $r6, $r8, $r14;
        androidx.compose.OpaqueKey $r7;
        androidx.compose.FrameManager $r9, $r10, r17;
        kotlin.Unit r18, r20;

        r0 := @this: androidx.compose.Recomposer;

        r1 := @parameter0: kotlin.jvm.functions.Function3;

        r2 := @parameter1: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "composer");

        z0 = virtualinvoke r2.<androidx.compose.Composer: boolean isComposing$compose_runtime_release()>();

        r3 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.Composer getCurrentComposerInternal()>();

     label01:
        virtualinvoke r2.<androidx.compose.Composer: void setComposing$compose_runtime_release(boolean)>(1);

        staticinvoke <androidx.compose.ComposerKt: void setCurrentComposerInternal(androidx.compose.Composer)>(r2);

        r17 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        z2 = virtualinvoke r17.<androidx.compose.FrameManager: boolean getComposing$compose_runtime_release()>();

        virtualinvoke r17.<androidx.compose.FrameManager: void setComposing$compose_runtime_release(boolean)>(1);

     label02:
        r4 = "Compose:recompose";

        $r6 = <androidx.compose.Trace: androidx.compose.Trace INSTANCE>;

        virtualinvoke $r6.<androidx.compose.Trace: void beginSection(java.lang.String)>(r4);

     label03:
        z6 = 0;

     label04:
        virtualinvoke r2.<androidx.compose.Composer: void startRoot$compose_runtime_release()>();

        $r7 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.OpaqueKey getInvocation()>();

        virtualinvoke r2.<androidx.compose.Composer: void startGroup$compose_runtime_release(int,java.lang.Object)>(200, $r7);

        staticinvoke <androidx.compose.ComposerKt: void invokeComposable(androidx.compose.Composer,kotlin.jvm.functions.Function3)>(r2, r1);

        virtualinvoke r2.<androidx.compose.Composer: void endGroup$compose_runtime_release()>();

        virtualinvoke r2.<androidx.compose.Composer: void endRoot$compose_runtime_release()>();

        z7 = 1;

     label05:
        goto label09;

     label06:
        $r15 := @caughtexception;

        r5 = $r15;

     label07:
        if z6 != 0 goto label08;

        virtualinvoke r2.<androidx.compose.Composer: void abortRoot$compose_runtime_release()>();

     label08:
        throw r5;

     label09:
        r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label10:
        $r8 = <androidx.compose.Trace: androidx.compose.Trace INSTANCE>;

        virtualinvoke $r8.<androidx.compose.Trace: void endSection()>();

        goto label13;

     label11:
        $r13 := @caughtexception;

        r19 = $r13;

     label12:
        $r14 = <androidx.compose.Trace: androidx.compose.Trace INSTANCE>;

        virtualinvoke $r14.<androidx.compose.Trace: void endSection()>();

        throw r19;

     label13:
        r20 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label14:
        virtualinvoke r17.<androidx.compose.FrameManager: void setComposing$compose_runtime_release(boolean)>(z2);

        goto label17;

     label15:
        $r16 := @caughtexception;

        r21 = $r16;

     label16:
        virtualinvoke r17.<androidx.compose.FrameManager: void setComposing$compose_runtime_release(boolean)>(z2);

        throw r21;

     label17:
        virtualinvoke r2.<androidx.compose.Composer: void setComposing$compose_runtime_release(boolean)>(z0);

        goto label20;

     label18:
        $r12 := @caughtexception;

        r22 = $r12;

     label19:
        virtualinvoke r2.<androidx.compose.Composer: void setComposing$compose_runtime_release(boolean)>(z0);

        throw r22;

     label20:
        if z0 != 0 goto label21;

        $r10 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        virtualinvoke $r10.<androidx.compose.FrameManager: void nextFrame()>();

     label21:
        virtualinvoke r2.<androidx.compose.Composer: void applyChanges()>();

        if z0 != 0 goto label22;

        $r9 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        virtualinvoke $r9.<androidx.compose.FrameManager: void nextFrame()>();

     label22:
        staticinvoke <androidx.compose.ComposerKt: void setCurrentComposerInternal(androidx.compose.Composer)>(r3);

        goto label25;

     label23:
        $r11 := @caughtexception;

        r23 = $r11;

     label24:
        staticinvoke <androidx.compose.ComposerKt: void setCurrentComposerInternal(androidx.compose.Composer)>(r3);

        throw r23;

     label25:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label02 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label01 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private final boolean performRecompose(androidx.compose.Composer)
    {
        androidx.compose.Recomposer r0;
        androidx.compose.Composer r1, r2;
        boolean z0, z2, $z3, $z5;
        java.lang.Throwable $r3, $r4, r7;
        androidx.compose.FrameManager r5;

        r0 := @this: androidx.compose.Recomposer;

        r1 := @parameter0: androidx.compose.Composer;

        $z3 = virtualinvoke r1.<androidx.compose.Composer: boolean isComposing$compose_runtime_release()>();

        if $z3 == 0 goto label01;

        return 0;

     label01:
        r2 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.Composer getCurrentComposerInternal()>();

     label02:
        staticinvoke <androidx.compose.ComposerKt: void setCurrentComposerInternal(androidx.compose.Composer)>(r1);

        virtualinvoke r1.<androidx.compose.Composer: void setComposing$compose_runtime_release(boolean)>(1);

        r5 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        z2 = virtualinvoke r5.<androidx.compose.FrameManager: boolean getComposing$compose_runtime_release()>();

        virtualinvoke r5.<androidx.compose.FrameManager: void setComposing$compose_runtime_release(boolean)>(1);

     label03:
        $z5 = virtualinvoke r1.<androidx.compose.Composer: boolean recompose()>();

     label04:
        virtualinvoke r5.<androidx.compose.FrameManager: void setComposing$compose_runtime_release(boolean)>(z2);

        goto label07;

     label05:
        $r3 := @caughtexception;

     label06:
        virtualinvoke r5.<androidx.compose.FrameManager: void setComposing$compose_runtime_release(boolean)>(z2);

        throw $r3;

     label07:
        z0 = $z5;

        virtualinvoke r1.<androidx.compose.Composer: void applyChanges()>();

     label08:
        virtualinvoke r1.<androidx.compose.Composer: void setComposing$compose_runtime_release(boolean)>(0);

        staticinvoke <androidx.compose.ComposerKt: void setCurrentComposerInternal(androidx.compose.Composer)>(r2);

        goto label11;

     label09:
        $r4 := @caughtexception;

        r7 = $r4;

     label10:
        virtualinvoke r1.<androidx.compose.Composer: void setComposing$compose_runtime_release(boolean)>(0);

        staticinvoke <androidx.compose.ComposerKt: void setCurrentComposerInternal(androidx.compose.Composer)>(r2);

        throw r7;

     label11:
        return z0;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final boolean hasPendingChanges()
    {
        androidx.compose.Recomposer r0;
        java.util.Set r1, $r4;
        boolean z1, z4, z5, $z6, $z7, z8, $z9, $z10;
        java.util.Collection r2;
        androidx.compose.Latch $r3;
        java.lang.Throwable $r5, r6;

        r0 := @this: androidx.compose.Recomposer;

        $r3 = r0.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        $z6 = virtualinvoke $r3.<androidx.compose.Latch: boolean isOpen()>();

        if $z6 == 0 goto label08;

        r1 = r0.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        z1 = 0;

        z8 = 0;

        entermonitor r1;

     label01:
        $r4 = r0.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        r2 = (java.util.Collection) $r4;

        z4 = 0;

        $z7 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z7 != 0 goto label02;

        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z5 = $z9;

     label04:
        exitmonitor r1;

        goto label07;

     label05:
        $r5 := @caughtexception;

        r6 = $r5;

     label06:
        exitmonitor r1;

        throw r6;

     label07:
        if z5 == 0 goto label09;

     label08:
        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        return $z10;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public final void scheduleRecompose$compose_runtime_release(androidx.compose.Composer)
    {
        androidx.compose.Recomposer r0;
        androidx.compose.Composer r1;
        java.util.Set r2, $r12;
        boolean z1, z4, z5, z7, z8, z10;
        kotlin.coroutines.Continuation r3, r4, r5, r6, r9, $r13;
        kotlin.Unit r7, r11, $r16;
        kotlin.Result$Companion r8;
        java.lang.Object r10;
        androidx.compose.Latch $r14;
        java.lang.Throwable $r15, r17;

        r0 := @this: androidx.compose.Recomposer;

        r1 := @parameter0: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composer");

        r2 = r0.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        z1 = 0;

        z10 = 0;

        entermonitor r2;

     label1:
        $r12 = r0.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r1);

        r3 = r0.<androidx.compose.Recomposer: kotlin.coroutines.Continuation invalidComposersAwaiter>;

        if r3 != null goto label2;

        $r16 = null;

        goto label3;

     label2:
        r4 = r3;

        z4 = 0;

        z5 = 0;

        r5 = r4;

        $r13 = (kotlin.coroutines.Continuation) null;

        r0.<androidx.compose.Recomposer: kotlin.coroutines.Continuation invalidComposersAwaiter> = $r13;

        $r14 = r0.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        virtualinvoke $r14.<androidx.compose.Latch: void closeLatch()>();

        r6 = r5;

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        z7 = 0;

        r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        r9 = r6;

        z8 = 0;

        r10 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r7);

        interfaceinvoke r9.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r10);

        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        r11 = $r16;

     label4:
        exitmonitor r2;

        goto label7;

     label5:
        $r15 := @caughtexception;

        r17 = $r15;

     label6:
        exitmonitor r2;

        throw r17;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final java.lang.Object awaitIdle(kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer r0;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.Latch $r2;
        java.lang.Object $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.Recomposer;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = r0.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        $r3 = virtualinvoke $r2.<androidx.compose.Latch: java.lang.Object await(kotlin.coroutines.Continuation)>($r1);

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r3 != $r4 goto label1;

        return $r3;

     label1:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

    public static final java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)
    {
        androidx.compose.Recomposer r0;
        java.util.Set $r1;

        r0 := @parameter0: androidx.compose.Recomposer;

        $r1 = r0.<androidx.compose.Recomposer: java.util.Set invalidComposers>;

        return $r1;
    }

    public static final androidx.compose.BroadcastFrameClock access$getBroadcastFrameClock$p(androidx.compose.Recomposer)
    {
        androidx.compose.Recomposer r0;
        androidx.compose.BroadcastFrameClock $r1;

        r0 := @parameter0: androidx.compose.Recomposer;

        $r1 = r0.<androidx.compose.Recomposer: androidx.compose.BroadcastFrameClock broadcastFrameClock>;

        return $r1;
    }

    public static final boolean access$performRecompose(androidx.compose.Recomposer, androidx.compose.Composer)
    {
        androidx.compose.Recomposer $r0;
        androidx.compose.Composer r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.Recomposer;

        r1 := @parameter1: androidx.compose.Composer;

        $z0 = specialinvoke $r0.<androidx.compose.Recomposer: boolean performRecompose(androidx.compose.Composer)>(r1);

        return $z0;
    }

    public static final androidx.compose.Recomposer access$getMainRecomposer$cp$s-1697855373()
    {
        androidx.compose.Recomposer $r0;

        $r0 = <androidx.compose.Recomposer: androidx.compose.Recomposer mainRecomposer>;

        return $r0;
    }

    public static final void access$setMainRecomposer$cp$s-1697855373(androidx.compose.Recomposer)
    {
        androidx.compose.Recomposer r0;

        r0 := @parameter0: androidx.compose.Recomposer;

        <androidx.compose.Recomposer: androidx.compose.Recomposer mainRecomposer> = r0;

        return;
    }

    public static final void access$setInvalidComposersAwaiter$p(androidx.compose.Recomposer, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer r0;
        kotlin.coroutines.Continuation r1;

        r0 := @parameter0: androidx.compose.Recomposer;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.Recomposer: kotlin.coroutines.Continuation invalidComposersAwaiter> = r1;

        return;
    }

    public static final androidx.compose.Latch access$getIdlingLatch$p(androidx.compose.Recomposer)
    {
        androidx.compose.Recomposer r0;
        androidx.compose.Latch $r1;

        r0 := @parameter0: androidx.compose.Recomposer;

        $r1 = r0.<androidx.compose.Recomposer: androidx.compose.Latch idlingLatch>;

        return $r1;
    }

    public static final kotlin.coroutines.Continuation access$getInvalidComposersAwaiter$p(androidx.compose.Recomposer)
    {
        androidx.compose.Recomposer r0;
        kotlin.coroutines.Continuation $r1;

        r0 := @parameter0: androidx.compose.Recomposer;

        $r1 = r0.<androidx.compose.Recomposer: kotlin.coroutines.Continuation invalidComposersAwaiter>;

        return $r1;
    }

    public static final void <clinit>()
    {
        androidx.compose.Recomposer$Companion $r0;

        $r0 = new androidx.compose.Recomposer$Companion;

        specialinvoke $r0.<androidx.compose.Recomposer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.Recomposer: androidx.compose.Recomposer$Companion Companion> = $r0;

        return;
    }

androidx.compose.Recomposer$awaitIdle$1
<androidx.compose.Recomposer$awaitIdle$1: java.lang.Object result>
<androidx.compose.Recomposer$awaitIdle$1: androidx.compose.Recomposer this$0>
<androidx.compose.Recomposer$awaitIdle$1: int label>
    public void <init>(androidx.compose.Recomposer, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$awaitIdle$1 r0;
        androidx.compose.Recomposer r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.Recomposer$awaitIdle$1;

        r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.Recomposer$awaitIdle$1: androidx.compose.Recomposer this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$awaitIdle$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.Recomposer $r3;

        r0 := @this: androidx.compose.Recomposer$awaitIdle$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.Recomposer$awaitIdle$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.Recomposer$awaitIdle$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.Recomposer$awaitIdle$1: int label> = $i1;

        $r3 = r0.<androidx.compose.Recomposer$awaitIdle$1: androidx.compose.Recomposer this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer: java.lang.Object awaitIdle(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.compose.Recomposer$broadcastFrameClock$1
<androidx.compose.Recomposer$broadcastFrameClock$1: androidx.compose.Recomposer $this>
    void <init>(androidx.compose.Recomposer)
    {
        androidx.compose.Recomposer$broadcastFrameClock$1 r0;
        androidx.compose.Recomposer $r1;

        r0 := @this: androidx.compose.Recomposer$broadcastFrameClock$1;

        $r1 := @parameter0: androidx.compose.Recomposer;

        r0.<androidx.compose.Recomposer$broadcastFrameClock$1: androidx.compose.Recomposer $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.Recomposer$broadcastFrameClock$1 r0;
        java.util.Set r1;
        androidx.compose.Recomposer r2, $r12;
        boolean z1, z4, z5, z7, z8, z9;
        kotlin.coroutines.Continuation r3, r4, r5, r6, r9, $r13;
        kotlin.Unit r7, r11, $r16;
        kotlin.Result$Companion r8;
        java.lang.Object r10;
        androidx.compose.Latch $r14;
        java.lang.Throwable $r15, r17;

        r0 := @this: androidx.compose.Recomposer$broadcastFrameClock$1;

        $r12 = r0.<androidx.compose.Recomposer$broadcastFrameClock$1: androidx.compose.Recomposer $this>;

        r1 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>($r12);

        r2 = r0.<androidx.compose.Recomposer$broadcastFrameClock$1: androidx.compose.Recomposer $this>;

        z1 = 0;

        z9 = 0;

        entermonitor r1;

     label1:
        r3 = staticinvoke <androidx.compose.Recomposer: kotlin.coroutines.Continuation access$getInvalidComposersAwaiter$p(androidx.compose.Recomposer)>(r2);

        if r3 != null goto label2;

        $r16 = null;

        goto label3;

     label2:
        r4 = r3;

        z4 = 0;

        z5 = 0;

        r5 = r4;

        $r13 = (kotlin.coroutines.Continuation) null;

        staticinvoke <androidx.compose.Recomposer: void access$setInvalidComposersAwaiter$p(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r2, $r13);

        $r14 = staticinvoke <androidx.compose.Recomposer: androidx.compose.Latch access$getIdlingLatch$p(androidx.compose.Recomposer)>(r2);

        virtualinvoke $r14.<androidx.compose.Latch: void closeLatch()>();

        r6 = r5;

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        z7 = 0;

        r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        r9 = r6;

        z8 = 0;

        r10 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r7);

        interfaceinvoke r9.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r10);

        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        r11 = $r16;

     label4:
        exitmonitor r1;

        goto label7;

     label5:
        $r15 := @caughtexception;

        r17 = $r15;

     label6:
        exitmonitor r1;

        throw r17;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.Recomposer$broadcastFrameClock$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.Recomposer$broadcastFrameClock$1;

        virtualinvoke r0.<androidx.compose.Recomposer$broadcastFrameClock$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.Recomposer$Companion$current$2$1$1
<androidx.compose.Recomposer$Companion$current$2$1$1: int label>
<androidx.compose.Recomposer$Companion$current$2$1$1: kotlinx.coroutines.CoroutineScope p$>
<androidx.compose.Recomposer$Companion$current$2$1$1: androidx.compose.Recomposer $it>
    public void <init>(androidx.compose.Recomposer, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$Companion$current$2$1$1 r0;
        androidx.compose.Recomposer $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.Recomposer$Companion$current$2$1$1;

        $r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        r0.<androidx.compose.Recomposer$Companion$current$2$1$1: androidx.compose.Recomposer $it> = $r1;

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$Companion$current$2$1$1 r0;
        java.lang.Object $r1, r2, $r7;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.Recomposer $r4;
        androidx.compose.CompositionFrameClock $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.compose.Recomposer$Companion$current$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.Recomposer$Companion$current$2$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.Recomposer$Companion$current$2$1$1: androidx.compose.Recomposer $it>;

        $r5 = staticinvoke <androidx.compose.ActualAndroidKt: androidx.compose.CompositionFrameClock mainThreadCompositionFrameClock()>();

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.Recomposer$Companion$current$2$1$1: int label> = 1;

        $r7 = virtualinvoke $r4.<androidx.compose.Recomposer: java.lang.Object runRecomposeAndApplyChanges(androidx.compose.CompositionFrameClock,kotlin.coroutines.Continuation)>($r5, $r6);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$Companion$current$2$1$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.compose.Recomposer $r5;
        kotlinx.coroutines.CoroutineScope $r6;

        r0 := @this: androidx.compose.Recomposer$Companion$current$2$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.Recomposer$Companion$current$2$1$1;

        $r5 = r0.<androidx.compose.Recomposer$Companion$current$2$1$1: androidx.compose.Recomposer $it>;

        specialinvoke $r4.<androidx.compose.Recomposer$Companion$current$2$1$1: void <init>(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        $r6 = (kotlinx.coroutines.CoroutineScope) r1;

        r3.<androidx.compose.Recomposer$Companion$current$2$1$1: kotlinx.coroutines.CoroutineScope p$> = $r6;

        $r7 = (kotlin.coroutines.Continuation) r3;

        return $r7;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.Recomposer$Companion$current$2$1$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.Recomposer$Companion$current$2$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlin.coroutines.Continuation) r2;

        r3 = virtualinvoke r0.<androidx.compose.Recomposer$Companion$current$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r4);

        $r6 = (androidx.compose.Recomposer$Companion$current$2$1$1) r3;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.Recomposer$Companion$current$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.compose.Recomposer$Companion
    private void <init>()
    {
        androidx.compose.Recomposer$Companion r0;

        r0 := @this: androidx.compose.Recomposer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean hasPendingChanges()
    {
        androidx.compose.Recomposer$Companion r0;
        androidx.compose.Recomposer $r1;
        boolean $z0;

        r0 := @this: androidx.compose.Recomposer$Companion;

        $r1 = virtualinvoke r0.<androidx.compose.Recomposer$Companion: androidx.compose.Recomposer current()>();

        $z0 = virtualinvoke $r1.<androidx.compose.Recomposer: boolean hasPendingChanges()>();

        return $z0;
    }

    public final androidx.compose.Recomposer current()
    {
        androidx.compose.Recomposer$Companion r0, $r1, r20;
        kotlinx.coroutines.CoroutineScope r2;
        androidx.compose.Recomposer r3, r4, $r9, r19, $r21;
        boolean z1, z2, z4, z5, z6, z8;
        kotlinx.coroutines.NonCancellable $r5;
        kotlinx.coroutines.CoroutineDispatcher $r6;
        kotlin.coroutines.CoroutineContext $r7, $r8;
        androidx.compose.Recomposer$Companion$current$2$1$1 $r10;
        kotlin.coroutines.Continuation $r11;
        kotlinx.coroutines.CoroutineStart $r12;
        kotlin.jvm.functions.Function2 $r13;
        java.lang.IllegalArgumentException $r15;
        java.lang.String $r16, r18;
        java.lang.Throwable $r17;

        r0 := @this: androidx.compose.Recomposer$Companion;

        z4 = staticinvoke <androidx.compose.ActualAndroidKt: boolean isMainThread()>();

        z5 = 0;

        z6 = 0;

        if z4 != 0 goto label1;

        r18 = "No Recomposer for this Thread";

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        $r17 = (java.lang.Throwable) $r15;

        throw $r17;

     label1:
        r19 = staticinvoke <androidx.compose.Recomposer: androidx.compose.Recomposer access$getMainRecomposer$cp$s-1697855373()>();

        if r19 != null goto label2;

        r20 = r0;

        z8 = 0;

        $r1 = (androidx.compose.Recomposer$Companion) r20;

        $r5 = <kotlinx.coroutines.NonCancellable: kotlinx.coroutines.NonCancellable INSTANCE>;

        $r6 = staticinvoke <androidx.compose.ActualAndroidKt: kotlinx.coroutines.CoroutineDispatcher mainThreadCompositionDispatcher()>();

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = virtualinvoke $r5.<kotlinx.coroutines.NonCancellable: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        r2 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r8);

        $r9 = new androidx.compose.Recomposer;

        specialinvoke $r9.<androidx.compose.Recomposer: void <init>()>();

        r3 = $r9;

        z1 = 0;

        z2 = 0;

        r4 = r3;

        staticinvoke <androidx.compose.Recomposer: void access$setMainRecomposer$cp$s-1697855373(androidx.compose.Recomposer)>(r4);

        $r12 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED>;

        $r10 = new androidx.compose.Recomposer$Companion$current$2$1$1;

        $r11 = (kotlin.coroutines.Continuation) null;

        specialinvoke $r10.<androidx.compose.Recomposer$Companion$current$2$1$1: void <init>(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r4, $r11);

        $r13 = (kotlin.jvm.functions.Function2) $r10;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r2, null, $r12, $r13, 1, null);

        $r21 = r3;

        goto label3;

     label2:
        $r21 = r19;

     label3:
        return $r21;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.Recomposer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.compose.Recomposer$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.Recomposer$Companion: void <init>()>();

        return;
    }

androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: java.lang.Object result>
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: androidx.compose.Recomposer$CompositionCoroutineScopeImpl this$0>
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: int label>
    public void <init>(androidx.compose.Recomposer$CompositionCoroutineScopeImpl, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1 r0;
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1;

        r1 := @parameter0: androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: androidx.compose.Recomposer$CompositionCoroutineScopeImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl $r3;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: int label> = $i1;

        $r3 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$awaitFrameNanos$1: androidx.compose.Recomposer$CompositionCoroutineScopeImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: java.lang.Object awaitFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: java.lang.Object result>
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: androidx.compose.Recomposer$CompositionCoroutineScopeImpl this$0>
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: int label>
    public void <init>(androidx.compose.Recomposer$CompositionCoroutineScopeImpl, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1 r0;
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1;

        r1 := @parameter0: androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: androidx.compose.Recomposer$CompositionCoroutineScopeImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl $r3;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: int label> = $i1;

        $r3 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl$withFrameNanos$1: androidx.compose.Recomposer$CompositionCoroutineScopeImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.compose.Recomposer$CompositionCoroutineScopeImpl
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>
<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: androidx.compose.CompositionFrameClock CompositionCoroutineScopeImpl$CompositionFrameClock$delegate>
    public void <init>(kotlin.coroutines.CoroutineContext, androidx.compose.CompositionFrameClock)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl r0;
        kotlin.coroutines.CoroutineContext r1;
        androidx.compose.CompositionFrameClock r2;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        r2 := @parameter1: androidx.compose.CompositionFrameClock;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coroutineContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "frameClock");

        specialinvoke r0.<androidx.compose.CompositionCoroutineScope: void <init>()>();

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext> = r1;

        r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: androidx.compose.CompositionFrameClock CompositionCoroutineScopeImpl$CompositionFrameClock$delegate> = r2;

        return;
    }

    public kotlin.coroutines.CoroutineContext getCoroutineContext()
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl r0;
        kotlin.coroutines.CoroutineContext $r1;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        $r1 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>;

        return $r1;
    }

    public java.lang.Object awaitFrameNanos(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.CompositionFrameClock $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: androidx.compose.CompositionFrameClock CompositionCoroutineScopeImpl$CompositionFrameClock$delegate>;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        $r4 = interfaceinvoke $r3.<androidx.compose.CompositionFrameClock: java.lang.Object awaitFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r1, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        return $r4;
    }

    public java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.CompositionFrameClock $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: androidx.compose.CompositionFrameClock CompositionCoroutineScopeImpl$CompositionFrameClock$delegate>;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        $r4 = interfaceinvoke $r3.<androidx.compose.CompositionFrameClock: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r1, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        return $r4;
    }

androidx.compose.Recomposer$launchEffect$1
<androidx.compose.Recomposer$launchEffect$1: int label>
<androidx.compose.Recomposer$launchEffect$1: kotlinx.coroutines.CoroutineScope p$>
<androidx.compose.Recomposer$launchEffect$1: kotlin.jvm.functions.Function2 $block>
<androidx.compose.Recomposer$launchEffect$1: androidx.compose.Recomposer $this>
    public void <init>(kotlin.jvm.functions.Function2, androidx.compose.Recomposer, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$launchEffect$1 r0;
        kotlin.jvm.functions.Function2 $r1;
        androidx.compose.Recomposer $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.Recomposer$launchEffect$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        $r2 := @parameter1: androidx.compose.Recomposer;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        r0.<androidx.compose.Recomposer$launchEffect$1: kotlin.jvm.functions.Function2 $block> = $r1;

        r0.<androidx.compose.Recomposer$launchEffect$1: androidx.compose.Recomposer $this> = $r2;

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$launchEffect$1 r0;
        java.lang.Object $r1, r2, $r10;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.Recomposer$CompositionCoroutineScopeImpl $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        kotlin.jvm.functions.Function2 $r6;
        kotlin.coroutines.CoroutineContext $r7;
        androidx.compose.Recomposer $r8;
        androidx.compose.CompositionFrameClock $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.compose.Recomposer$launchEffect$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.Recomposer$launchEffect$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = r0.<androidx.compose.Recomposer$launchEffect$1: kotlin.jvm.functions.Function2 $block>;

        $r4 = new androidx.compose.Recomposer$CompositionCoroutineScopeImpl;

        $r5 = r0.<androidx.compose.Recomposer$launchEffect$1: kotlinx.coroutines.CoroutineScope p$>;

        $r7 = interfaceinvoke $r5.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r8 = r0.<androidx.compose.Recomposer$launchEffect$1: androidx.compose.Recomposer $this>;

        $r9 = virtualinvoke $r8.<androidx.compose.Recomposer: androidx.compose.CompositionFrameClock getFrameClock()>();

        specialinvoke $r4.<androidx.compose.Recomposer$CompositionCoroutineScopeImpl: void <init>(kotlin.coroutines.CoroutineContext,androidx.compose.CompositionFrameClock)>($r7, $r9);

        r0.<androidx.compose.Recomposer$launchEffect$1: int label> = 1;

        $r10 = interfaceinvoke $r6.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, r0);

        if $r10 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$launchEffect$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        androidx.compose.Recomposer $r5;
        kotlin.jvm.functions.Function2 $r6;
        kotlinx.coroutines.CoroutineScope $r7;

        r0 := @this: androidx.compose.Recomposer$launchEffect$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.Recomposer$launchEffect$1;

        $r6 = r0.<androidx.compose.Recomposer$launchEffect$1: kotlin.jvm.functions.Function2 $block>;

        $r5 = r0.<androidx.compose.Recomposer$launchEffect$1: androidx.compose.Recomposer $this>;

        specialinvoke $r4.<androidx.compose.Recomposer$launchEffect$1: void <init>(kotlin.jvm.functions.Function2,androidx.compose.Recomposer,kotlin.coroutines.Continuation)>($r6, $r5, $r2);

        r3 = $r4;

        $r7 = (kotlinx.coroutines.CoroutineScope) r1;

        r3.<androidx.compose.Recomposer$launchEffect$1: kotlinx.coroutines.CoroutineScope p$> = $r7;

        $r8 = (kotlin.coroutines.Continuation) r3;

        return $r8;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.Recomposer$launchEffect$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.Recomposer$launchEffect$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlin.coroutines.Continuation) r2;

        r3 = virtualinvoke r0.<androidx.compose.Recomposer$launchEffect$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r4);

        $r6 = (androidx.compose.Recomposer$launchEffect$1) r3;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.Recomposer$launchEffect$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.compose.Recomposer$recomposeAndApplyChanges$1
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object result>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: androidx.compose.Recomposer this$0>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$0>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$1>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$2>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object L$3>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$0>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: long J$1>
<androidx.compose.Recomposer$recomposeAndApplyChanges$1: boolean Z$0>
    public void <init>(androidx.compose.Recomposer, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$1 r0;
        androidx.compose.Recomposer r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$1;

        r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: androidx.compose.Recomposer this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.Recomposer $r3;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: int label> = $i1;

        $r3 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$1: androidx.compose.Recomposer this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer: java.lang.Object recomposeAndApplyChanges(kotlinx.coroutines.CoroutineScope,androidx.compose.CompositionFrameClock,long,kotlin.coroutines.Continuation)>(null, null, 0L, $r2);

        return $r4;
    }

androidx.compose.Recomposer$recomposeAndApplyChanges$2$2
<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: androidx.compose.Recomposer $this>
<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: kotlinx.coroutines.CancellableContinuation $co>
    void <init>(androidx.compose.Recomposer, kotlinx.coroutines.CancellableContinuation)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$2$2 r0;
        androidx.compose.Recomposer $r1;
        kotlinx.coroutines.CancellableContinuation $r2;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$2$2;

        $r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: androidx.compose.Recomposer $this> = $r1;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: kotlinx.coroutines.CancellableContinuation $co> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$2$2 r0;
        java.lang.Throwable r1, $r9, r10;
        java.util.Set r2;
        androidx.compose.Recomposer r3, $r6;
        kotlinx.coroutines.CancellableContinuation r4;
        boolean z1, z4;
        kotlin.Unit r5;
        kotlin.coroutines.Continuation $r7, $r8;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$2$2;

        r1 := @parameter0: java.lang.Throwable;

        $r6 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: androidx.compose.Recomposer $this>;

        r2 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>($r6);

        r3 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: androidx.compose.Recomposer $this>;

        r4 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: kotlinx.coroutines.CancellableContinuation $co>;

        z1 = 0;

        z4 = 0;

        entermonitor r2;

     label1:
        $r7 = staticinvoke <androidx.compose.Recomposer: kotlin.coroutines.Continuation access$getInvalidComposersAwaiter$p(androidx.compose.Recomposer)>(r3);

        if $r7 != r4 goto label2;

        $r8 = (kotlin.coroutines.Continuation) null;

        staticinvoke <androidx.compose.Recomposer: void access$setInvalidComposersAwaiter$p(androidx.compose.Recomposer,kotlin.coroutines.Continuation)>(r3, $r8);

     label2:
        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r9 := @caughtexception;

        r10 = $r9;

     label5:
        exitmonitor r2;

        throw r10;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$2$2 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$2$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$2$2: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.Recomposer$recomposeAndApplyChanges$3
<androidx.compose.Recomposer$recomposeAndApplyChanges$3: androidx.compose.Recomposer $this>
<androidx.compose.Recomposer$recomposeAndApplyChanges$3: java.util.List $toRecompose>
    void <init>(androidx.compose.Recomposer, java.util.List)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$3 r0;
        androidx.compose.Recomposer $r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$3;

        $r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: java.util.List;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$3: androidx.compose.Recomposer $this> = $r1;

        r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$3: java.util.List $toRecompose> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(long)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$3 r0;
        long l0;
        java.lang.String r1;
        androidx.compose.Recomposer r2;
        java.util.List r3;
        kotlin.Unit r4, r21;
        androidx.compose.Trace $r5, $r15, $r22;
        androidx.compose.BroadcastFrameClock $r6;
        androidx.compose.FrameManager $r7, $r8, $r20;
        java.util.Set $r9, $r11, r17;
        java.util.Collection $r10, r19;
        boolean $z5, z8, z9, $z11;
        java.lang.Object $r12;
        androidx.compose.Composer $r13;
        java.lang.Throwable $r14, $r16, r18, r23;
        int i1, $i2, i3, i4;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$3;

        l0 := @parameter0: long;

        r1 = "recomposeFrame";

        r2 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$3: androidx.compose.Recomposer $this>;

        r3 = r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$3: java.util.List $toRecompose>;

        $r5 = <androidx.compose.Trace: androidx.compose.Trace INSTANCE>;

        virtualinvoke $r5.<androidx.compose.Trace: void beginSection(java.lang.String)>(r1);

     label01:
        $r6 = staticinvoke <androidx.compose.Recomposer: androidx.compose.BroadcastFrameClock access$getBroadcastFrameClock$p(androidx.compose.Recomposer)>(r2);

        virtualinvoke $r6.<androidx.compose.BroadcastFrameClock: void sendFrame(long)>(l0);

        $r7 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        virtualinvoke $r7.<androidx.compose.FrameManager: void nextFrame()>();

        $r8 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        virtualinvoke $r8.<androidx.compose.FrameManager: void synchronize$compose_runtime_release()>();

        r17 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>(r2);

        z8 = 0;

        z9 = 0;

        entermonitor r17;

     label02:
        $r9 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>(r2);

        $r10 = (java.util.Collection) $r9;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        $r11 = staticinvoke <androidx.compose.Recomposer: java.util.Set access$getInvalidComposers$p(androidx.compose.Recomposer)>(r2);

        interfaceinvoke $r11.<java.util.Set: void clear()>();

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r17;

        goto label06;

     label04:
        $r16 := @caughtexception;

        r18 = $r16;

     label05:
        exitmonitor r17;

        throw r18;

     label06:
        r19 = (java.util.Collection) r3;

        $z5 = interfaceinvoke r19.<java.util.Collection: boolean isEmpty()>();

        if $z5 != 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        if $z11 == 0 goto label11;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $i2 = 0;

        i3 = i1 + -1;

        if i1 == -2147483648 goto label10;

        if 0 > i3 goto label10;

     label09:
        i4 = $i2;

        $i2 = $i2 + 1;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i4);

        $r13 = (androidx.compose.Composer) $r12;

        staticinvoke <androidx.compose.Recomposer: boolean access$performRecompose(androidx.compose.Recomposer,androidx.compose.Composer)>(r2, $r13);

        if $i2 <= i3 goto label09;

     label10:
        interfaceinvoke r3.<java.util.List: void clear()>();

     label11:
        $r20 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        virtualinvoke $r20.<androidx.compose.FrameManager: void nextFrame()>();

        r21 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label12:
        $r22 = <androidx.compose.Trace: androidx.compose.Trace INSTANCE>;

        virtualinvoke $r22.<androidx.compose.Trace: void endSection()>();

        goto label15;

     label13:
        $r14 := @caughtexception;

        r23 = $r14;

     label14:
        $r15 = <androidx.compose.Trace: androidx.compose.Trace INSTANCE>;

        virtualinvoke $r15.<androidx.compose.Trace: void endSection()>();

        throw r23;

     label15:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.Recomposer$recomposeAndApplyChanges$3 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        long $l0;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.Recomposer$recomposeAndApplyChanges$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $l0 = virtualinvoke $r2.<java.lang.Number: long longValue()>();

        virtualinvoke r0.<androidx.compose.Recomposer$recomposeAndApplyChanges$3: void invoke(long)>($l0);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.Recomposer$runRecomposeAndApplyChanges$1
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object result>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: androidx.compose.Recomposer this$0>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object L$0>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object L$1>
    public void <init>(androidx.compose.Recomposer, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$1 r0;
        androidx.compose.Recomposer r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.Recomposer$runRecomposeAndApplyChanges$1;

        r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: androidx.compose.Recomposer this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.Recomposer $r3;

        r0 := @this: androidx.compose.Recomposer$runRecomposeAndApplyChanges$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: int label> = $i1;

        $r3 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$1: androidx.compose.Recomposer this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer: java.lang.Object runRecomposeAndApplyChanges(androidx.compose.CompositionFrameClock,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.compose.Recomposer$runRecomposeAndApplyChanges$2
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: int label>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: kotlinx.coroutines.CoroutineScope p$>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.Recomposer $this>
<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.CompositionFrameClock $frameClock>
    public void <init>(androidx.compose.Recomposer, androidx.compose.CompositionFrameClock, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$2 r0;
        androidx.compose.Recomposer $r1;
        androidx.compose.CompositionFrameClock $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.Recomposer$runRecomposeAndApplyChanges$2;

        $r1 := @parameter0: androidx.compose.Recomposer;

        $r2 := @parameter1: androidx.compose.CompositionFrameClock;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.Recomposer $this> = $r1;

        r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.CompositionFrameClock $frameClock> = $r2;

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$2 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.Recomposer $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        androidx.compose.CompositionFrameClock $r6;
        kotlin.coroutines.Continuation $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.compose.Recomposer$runRecomposeAndApplyChanges$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.Recomposer $this>;

        $r5 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: kotlinx.coroutines.CoroutineScope p$>;

        $r6 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.CompositionFrameClock $frameClock>;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: int label> = 1;

        $r8 = virtualinvoke $r4.<androidx.compose.Recomposer: java.lang.Object recomposeAndApplyChanges(kotlinx.coroutines.CoroutineScope,androidx.compose.CompositionFrameClock,long,kotlin.coroutines.Continuation)>($r5, $r6, 9223372036854775807L, $r7);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        androidx.compose.CompositionFrameClock $r5;
        androidx.compose.Recomposer $r6;
        kotlinx.coroutines.CoroutineScope $r7;

        r0 := @this: androidx.compose.Recomposer$runRecomposeAndApplyChanges$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.Recomposer$runRecomposeAndApplyChanges$2;

        $r6 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.Recomposer $this>;

        $r5 = r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: androidx.compose.CompositionFrameClock $frameClock>;

        specialinvoke $r4.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: void <init>(androidx.compose.Recomposer,androidx.compose.CompositionFrameClock,kotlin.coroutines.Continuation)>($r6, $r5, $r2);

        r3 = $r4;

        $r7 = (kotlinx.coroutines.CoroutineScope) r1;

        r3.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: kotlinx.coroutines.CoroutineScope p$> = $r7;

        $r8 = (kotlin.coroutines.Continuation) r3;

        return $r8;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.Recomposer$runRecomposeAndApplyChanges$2 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.Recomposer$runRecomposeAndApplyChanges$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlin.coroutines.Continuation) r2;

        r3 = virtualinvoke r0.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r4);

        $r6 = (androidx.compose.Recomposer$runRecomposeAndApplyChanges$2) r3;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.Recomposer$runRecomposeAndApplyChanges$2: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

