androidx.media3.transformer.MssimCalculator
<androidx.media3.transformer.MssimCalculator: int PIXEL_MAX_VALUE>
<androidx.media3.transformer.MssimCalculator: double K1>
<androidx.media3.transformer.MssimCalculator: double K2>
<androidx.media3.transformer.MssimCalculator: double C1>
<androidx.media3.transformer.MssimCalculator: double C2>
<androidx.media3.transformer.MssimCalculator: int WINDOW_SIZE>
    private void <init>()
    {
        androidx.media3.transformer.MssimCalculator r0;

        r0 := @this: androidx.media3.transformer.MssimCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double calculate(byte[], byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1;
        double $d0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $d0 = staticinvoke <androidx.media3.transformer.MssimCalculator: double calculate(byte[],byte[],int,int,boolean)>(r0, r1, i0, i1, 1);

        return $d0;
    }

    public static double calculate(byte[], byte[], int, int, boolean)
    {
        byte[] r0, r1;
        int i0, i1, i2, i3, i4, i5, i7, i9, i10;
        boolean z0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, d8;
        double[] r2;
        byte $b8;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        d8 = 0.0;

        i7 = 0;

        if z0 == 0 goto label1;

        $b8 = 2;

        goto label2;

     label1:
        $b8 = 1;

     label2:
        i2 = 8 * $b8;

        i9 = 0;

     label3:
        if i9 >= i1 goto label6;

        i3 = staticinvoke <androidx.media3.transformer.MssimCalculator: int computeWindowSize(int,int)>(i9, i1);

        i10 = 0;

     label4:
        if i10 >= i0 goto label5;

        i7 = i7 + 1;

        i4 = staticinvoke <androidx.media3.transformer.MssimCalculator: int computeWindowSize(int,int)>(i10, i0);

        i5 = staticinvoke <androidx.media3.transformer.MssimCalculator: int get1dIndex(int,int,int,int)>(i10, i9, i0, 0);

        d0 = staticinvoke <androidx.media3.transformer.MssimCalculator: double getMean(byte[],int,int,int,int)>(r0, i5, i0, i4, i3);

        d1 = staticinvoke <androidx.media3.transformer.MssimCalculator: double getMean(byte[],int,int,int,int)>(r1, i5, i0, i4, i3);

        r2 = staticinvoke <androidx.media3.transformer.MssimCalculator: double[] getVariancesAndCovariance(byte[],byte[],double,double,int,int,int,int)>(r0, r1, d0, d1, i5, i0, i4, i3);

        d2 = r2[0];

        d3 = r2[1];

        d4 = r2[2];

        $d7 = staticinvoke <androidx.media3.transformer.MssimCalculator: double getWindowSsim(double,double,double,double,double)>(d0, d1, d2, d3, d4);

        d8 = d8 + $d7;

        i10 = i10 + i2;

        goto label4;

     label5:
        i9 = i9 + i2;

        goto label3;

     label6:
        if i7 != 0 goto label7;

        return 1.0;

     label7:
        $d5 = (double) i7;

        $d6 = d8 / $d5;

        return $d6;
    }

    private static int computeWindowSize(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + 8;

        if $i2 > i1 goto label1;

        return 8;

     label1:
        $i3 = i1 - i0;

        return $i3;
    }

    private static double getWindowSsim(double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        $d7 = 2.0 * d0;

        $d9 = $d7 * d1;

        $d8 = <androidx.media3.transformer.MssimCalculator: double C1>;

        $d13 = $d9 + $d8;

        $d11 = 2.0 * d4;

        $d10 = <androidx.media3.transformer.MssimCalculator: double C2>;

        $d12 = $d11 + $d10;

        d5 = $d13 * $d12;

        $d15 = d0 * d0;

        $d14 = d1 * d1;

        $d17 = $d15 + $d14;

        $d16 = <androidx.media3.transformer.MssimCalculator: double C1>;

        $d21 = $d17 + $d16;

        $d19 = d2 + d3;

        $d18 = <androidx.media3.transformer.MssimCalculator: double C2>;

        $d20 = $d19 + $d18;

        d6 = $d21 * $d20;

        $d22 = d5 / d6;

        return $d22;
    }

    private static double getMean(byte[], int, int, int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, $i4, $i5, i8, i9;
        double $d0, $d1, $d2, d3;
        byte $b6;
        short $s7;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        d3 = 0.0;

        i8 = 0;

     label1:
        if i8 >= i3 goto label4;

        i9 = 0;

     label2:
        if i9 >= i2 goto label3;

        $i5 = staticinvoke <androidx.media3.transformer.MssimCalculator: int get1dIndex(int,int,int,int)>(i9, i8, i1, i0);

        $b6 = r0[$i5];

        $s7 = $b6 & 255;

        $d2 = (double) $s7;

        d3 = d3 + $d2;

        i9 = i9 + 1;

        goto label2;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        $i4 = i2 * i3;

        $d0 = (double) $i4;

        $d1 = d3 / $d0;

        return $d1;
    }

    private static double[] getVariancesAndCovariance(byte[], byte[], double, double, int, int, int, int)
    {
        byte[] r0, r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17;
        int i0, i1, i2, i3, i4, $i5, i10, i11, i12;
        double[] $r2;
        byte $b6, $b8;
        short $s7, $s9;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        d15 = 0.0;

        d16 = 0.0;

        d17 = 0.0;

        i10 = 0;

     label1:
        if i10 >= i3 goto label4;

        i11 = 0;

     label2:
        if i11 >= i2 goto label3;

        i4 = staticinvoke <androidx.media3.transformer.MssimCalculator: int get1dIndex(int,int,int,int)>(i11, i10, i1, i0);

        $b6 = r0[i4];

        $s7 = $b6 & 255;

        $d10 = (double) $s7;

        d2 = $d10 - d0;

        $b8 = r1[i4];

        $s9 = $b8 & 255;

        $d11 = (double) $s9;

        d3 = $d11 - d1;

        $d12 = d2 * d2;

        d15 = d15 + $d12;

        $d13 = d3 * d3;

        d16 = d16 + $d13;

        $d14 = d2 * d3;

        d17 = d17 + $d14;

        i11 = i11 + 1;

        goto label2;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        $i5 = i2 * i3;

        i12 = $i5 - 1;

        $r2 = newarray (double)[3];

        $d4 = (double) i12;

        $d5 = d15 / $d4;

        $r2[0] = $d5;

        $d6 = (double) i12;

        $d7 = d16 / $d6;

        $r2[1] = $d7;

        $d8 = (double) i12;

        $d9 = d17 / $d8;

        $r2[2] = $d9;

        return $r2;
    }

    private static int get1dIndex(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = i1 * i2;

        $i5 = i0 + $i4;

        $i6 = $i5 + i3;

        return $i6;
    }

    static void <clinit>()
    {
        double $d0, $d1;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.5500000000000003, 2.0);

        <androidx.media3.transformer.MssimCalculator: double C1> = $d0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(7.6499999999999995, 2.0);

        <androidx.media3.transformer.MssimCalculator: double C2> = $d1;

        return;
    }

