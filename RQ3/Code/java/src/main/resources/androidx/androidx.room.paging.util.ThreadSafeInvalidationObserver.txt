androidx.room.paging.util.ThreadSafeInvalidationObserver
<androidx.room.paging.util.ThreadSafeInvalidationObserver: kotlin.jvm.functions.Function0 onInvalidated>
<androidx.room.paging.util.ThreadSafeInvalidationObserver: java.util.concurrent.atomic.AtomicBoolean registered>
    public void <init>(java.lang.String[], kotlin.jvm.functions.Function0)
    {
        androidx.room.paging.util.ThreadSafeInvalidationObserver r0;
        java.lang.String[] r1;
        kotlin.jvm.functions.Function0 r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;

        r0 := @this: androidx.room.paging.util.ThreadSafeInvalidationObserver;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onInvalidated");

        specialinvoke r0.<androidx.room.InvalidationTracker$Observer: void <init>(java.lang.String[])>(r1);

        r0.<androidx.room.paging.util.ThreadSafeInvalidationObserver: kotlin.jvm.functions.Function0 onInvalidated> = r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<androidx.room.paging.util.ThreadSafeInvalidationObserver: java.util.concurrent.atomic.AtomicBoolean registered> = $r3;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnInvalidated()
    {
        androidx.room.paging.util.ThreadSafeInvalidationObserver r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.room.paging.util.ThreadSafeInvalidationObserver;

        $r1 = r0.<androidx.room.paging.util.ThreadSafeInvalidationObserver: kotlin.jvm.functions.Function0 onInvalidated>;

        return $r1;
    }

    public void onInvalidated(java.util.Set)
    {
        androidx.room.paging.util.ThreadSafeInvalidationObserver r0;
        java.util.Set r1;
        kotlin.jvm.functions.Function0 $r2;

        r0 := @this: androidx.room.paging.util.ThreadSafeInvalidationObserver;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tables");

        $r2 = r0.<androidx.room.paging.util.ThreadSafeInvalidationObserver: kotlin.jvm.functions.Function0 onInvalidated>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

    public final void registerIfNecessary(androidx.room.RoomDatabase)
    {
        androidx.room.paging.util.ThreadSafeInvalidationObserver r0;
        androidx.room.RoomDatabase r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        androidx.room.InvalidationTracker $r3;
        androidx.room.InvalidationTracker$Observer $r4;

        r0 := @this: androidx.room.paging.util.ThreadSafeInvalidationObserver;

        r1 := @parameter0: androidx.room.RoomDatabase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "db");

        $r2 = r0.<androidx.room.paging.util.ThreadSafeInvalidationObserver: java.util.concurrent.atomic.AtomicBoolean registered>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r4 = (androidx.room.InvalidationTracker$Observer) r0;

        virtualinvoke $r3.<androidx.room.InvalidationTracker: void addWeakObserver(androidx.room.InvalidationTracker$Observer)>($r4);

     label1:
        return;
    }

