androidx.constraintlayout.core.motion.key.MotionKeyCycle
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String TAG>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String NAME>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String WAVE_PERIOD>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String WAVE_OFFSET>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String WAVE_PHASE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String WAVE_SHAPE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_SIN_WAVE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_SQUARE_WAVE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_TRIANGLE_WAVE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_SAW_WAVE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_REVERSE_SAW_WAVE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_COS_WAVE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int SHAPE_BOUNCE>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mTransitionEasing>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mCurveFit>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mCustomWaveShape>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mProgress>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mAlpha>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mElevation>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotation>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTransitionPathRotate>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationX>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationY>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleX>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleY>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationX>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationY>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationZ>
<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int KEY_TYPE>
    public void <init>()
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mTransitionEasing> = null;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mCurveFit> = 0;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape> = -1;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mCustomWaveShape> = null;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase> = 0.0F;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mProgress> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mAlpha> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mElevation> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotation> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTransitionPathRotate> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationX> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationY> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleX> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleY> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationX> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationY> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationZ> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mType> = 4;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.util.HashMap mCustom> = $r1;

        return;
    }

    public void getAttributeNames(java.util.HashSet)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.util.HashSet r1;
        java.util.Iterator r2;
        java.lang.String r3, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.HashMap $r4, $r5;
        int $i0;
        java.util.Set $r6;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        r1 := @parameter0: java.util.HashSet;

        $f0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mAlpha>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label01;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("alpha");

     label01:
        $f1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mElevation>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 != 0 goto label02;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("elevation");

     label02:
        $f2 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotation>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z2 != 0 goto label03;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("rotationZ");

     label03:
        $f3 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationX>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z3 != 0 goto label04;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("rotationX");

     label04:
        $f4 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationY>;

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f4);

        if $z4 != 0 goto label05;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("rotationY");

     label05:
        $f5 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleX>;

        $z5 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f5);

        if $z5 != 0 goto label06;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("scaleX");

     label06:
        $f6 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleY>;

        $z6 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f6);

        if $z6 != 0 goto label07;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("scaleY");

     label07:
        $f7 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTransitionPathRotate>;

        $z7 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f7);

        if $z7 != 0 goto label08;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("pathRotate");

     label08:
        $f8 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationX>;

        $z8 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f8);

        if $z8 != 0 goto label09;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("translationX");

     label09:
        $f9 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationY>;

        $z9 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f9);

        if $z9 != 0 goto label10;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("translationY");

     label10:
        $f10 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationZ>;

        $z10 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f10);

        if $z10 != 0 goto label11;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("translationZ");

     label11:
        $r4 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.util.HashMap mCustom>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label13;

        $r5 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.util.HashMap mCustom>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z11 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label13;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CUSTOM,");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

        goto label12;

     label13:
        return;
    }

    public void addValues(java.util.HashMap)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.util.HashMap r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        r1 := @parameter0: java.util.HashMap;

        return;
    }

    public boolean setValue(int, int)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        int i0, i1;
        boolean z0, $z1;
        float $f0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        lookupswitch(i0)
        {
            case 401: goto label1;
            case 421: goto label2;
            default: goto label3;
        };

     label1:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mCurveFit> = i1;

        return 1;

     label2:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape> = i1;

        return 1;

     label3:
        $f0 = (float) i1;

        z0 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: boolean setValue(int,float)>(i0, $f0);

        if z0 == 0 goto label4;

        return 1;

     label4:
        $z1 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,int)>(i0, i1);

        return $z1;
    }

    public boolean setValue(int, java.lang.String)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        lookupswitch(i0)
        {
            case 420: goto label1;
            case 422: goto label2;
            default: goto label3;
        };

     label1:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mTransitionEasing> = r1;

        return 1;

     label2:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mCustomWaveShape> = r1;

        return 1;

     label3:
        $z0 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    public boolean setValue(int, float)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        int i0;
        float f0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        lookupswitch(i0)
        {
            case 304: goto label02;
            case 305: goto label03;
            case 306: goto label04;
            case 307: goto label05;
            case 308: goto label06;
            case 309: goto label07;
            case 310: goto label08;
            case 311: goto label09;
            case 312: goto label10;
            case 315: goto label11;
            case 403: goto label01;
            case 416: goto label12;
            case 423: goto label13;
            case 424: goto label14;
            case 425: goto label15;
            default: goto label16;
        };

     label01:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mAlpha> = f0;

        goto label17;

     label02:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationX> = f0;

        goto label17;

     label03:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationY> = f0;

        goto label17;

     label04:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationZ> = f0;

        goto label17;

     label05:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mElevation> = f0;

        goto label17;

     label06:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationX> = f0;

        goto label17;

     label07:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationY> = f0;

        goto label17;

     label08:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotation> = f0;

        goto label17;

     label09:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleX> = f0;

        goto label17;

     label10:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleY> = f0;

        goto label17;

     label11:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mProgress> = f0;

        goto label17;

     label12:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTransitionPathRotate> = f0;

        goto label17;

     label13:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod> = f0;

        goto label17;

     label14:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset> = f0;

        goto label17;

     label15:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase> = f0;

        goto label17;

     label16:
        $z0 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,float)>(i0, f0);

        return $z0;

     label17:
        return 1;
    }

    public float getValue(java.lang.String)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        byte b1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1249320806: goto label04;
            case -1249320805: goto label05;
            case -1249320804: goto label03;
            case -1225497657: goto label09;
            case -1225497656: goto label10;
            case -1225497655: goto label11;
            case -1019779949: goto label12;
            case -1001078227: goto label14;
            case -908189618: goto label07;
            case -908189617: goto label08;
            case -4379043: goto label02;
            case 92909918: goto label01;
            case 106629499: goto label13;
            case 803192288: goto label06;
            default: goto label15;
        };

     label01:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z2 == 0 goto label15;

        b1 = 0;

        goto label15;

     label02:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("elevation");

        if $z3 == 0 goto label15;

        b1 = 1;

        goto label15;

     label03:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rotationZ");

        if $z11 == 0 goto label15;

        b1 = 2;

        goto label15;

     label04:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rotationX");

        if $z13 == 0 goto label15;

        b1 = 3;

        goto label15;

     label05:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rotationY");

        if $z12 == 0 goto label15;

        b1 = 4;

        goto label15;

     label06:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pathRotate");

        if $z0 == 0 goto label15;

        b1 = 5;

        goto label15;

     label07:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("scaleX");

        if $z5 == 0 goto label15;

        b1 = 6;

        goto label15;

     label08:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("scaleY");

        if $z4 == 0 goto label15;

        b1 = 7;

        goto label15;

     label09:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("translationX");

        if $z10 == 0 goto label15;

        b1 = 8;

        goto label15;

     label10:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("translationY");

        if $z9 == 0 goto label15;

        b1 = 9;

        goto label15;

     label11:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("translationZ");

        if $z8 == 0 goto label15;

        b1 = 10;

        goto label15;

     label12:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("offset");

        if $z7 == 0 goto label15;

        b1 = 11;

        goto label15;

     label13:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("phase");

        if $z1 == 0 goto label15;

        b1 = 12;

        goto label15;

     label14:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("progress");

        if $z6 == 0 goto label15;

        b1 = 13;

     label15:
        tableswitch(b1)
        {
            case 0: goto label16;
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label19;
            case 4: goto label20;
            case 5: goto label21;
            case 6: goto label22;
            case 7: goto label23;
            case 8: goto label24;
            case 9: goto label25;
            case 10: goto label26;
            case 11: goto label27;
            case 12: goto label28;
            case 13: goto label29;
            default: goto label30;
        };

     label16:
        $f13 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mAlpha>;

        return $f13;

     label17:
        $f12 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mElevation>;

        return $f12;

     label18:
        $f11 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotation>;

        return $f11;

     label19:
        $f10 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationX>;

        return $f10;

     label20:
        $f9 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotationY>;

        return $f9;

     label21:
        $f8 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTransitionPathRotate>;

        return $f8;

     label22:
        $f7 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleX>;

        return $f7;

     label23:
        $f6 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mScaleY>;

        return $f6;

     label24:
        $f5 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationX>;

        return $f5;

     label25:
        $f4 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationY>;

        return $f4;

     label26:
        $f3 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mTranslationZ>;

        return $f3;

     label27:
        $f2 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset>;

        return $f2;

     label28:
        $f1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase>;

        return $f1;

     label29:
        $f0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mProgress>;

        return $f0;

     label30:
        return #NaNF;
    }

    public androidx.constraintlayout.core.motion.key.MotionKey clone()
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        return null;
    }

    public int getId(java.lang.String)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        byte b1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1581616630: goto label21;
            case -1310311125: goto label16;
            case -1249320806: goto label07;
            case -1249320805: goto label08;
            case -1249320804: goto label09;
            case -1225497657: goto label04;
            case -1225497656: goto label05;
            case -1225497655: goto label06;
            case -1019779949: goto label20;
            case -1001078227: goto label14;
            case -991726143: goto label17;
            case -987906986: goto label12;
            case -987906985: goto label13;
            case -908189618: goto label10;
            case -908189617: goto label11;
            case 92909918: goto label03;
            case 106629499: goto label19;
            case 579057826: goto label01;
            case 803192288: goto label15;
            case 1532805160: goto label18;
            case 1941332754: goto label02;
            default: goto label22;
        };

     label01:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("curveFit");

        if $z3 == 0 goto label22;

        b1 = 0;

        goto label22;

     label02:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("visibility");

        if $z0 == 0 goto label22;

        b1 = 1;

        goto label22;

     label03:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z5 == 0 goto label22;

        b1 = 2;

        goto label22;

     label04:
        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("translationX");

        if $z15 == 0 goto label22;

        b1 = 3;

        goto label22;

     label05:
        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("translationY");

        if $z14 == 0 goto label22;

        b1 = 4;

        goto label22;

     label06:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("translationZ");

        if $z13 == 0 goto label22;

        b1 = 5;

        goto label22;

     label07:
        $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rotationX");

        if $z18 == 0 goto label22;

        b1 = 6;

        goto label22;

     label08:
        $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rotationY");

        if $z17 == 0 goto label22;

        b1 = 7;

        goto label22;

     label09:
        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rotationZ");

        if $z16 == 0 goto label22;

        b1 = 8;

        goto label22;

     label10:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("scaleX");

        if $z7 == 0 goto label22;

        b1 = 9;

        goto label22;

     label11:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("scaleY");

        if $z6 == 0 goto label22;

        b1 = 10;

        goto label22;

     label12:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pivotX");

        if $z9 == 0 goto label22;

        b1 = 11;

        goto label22;

     label13:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pivotY");

        if $z8 == 0 goto label22;

        b1 = 12;

        goto label22;

     label14:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("progress");

        if $z11 == 0 goto label22;

        b1 = 13;

        goto label22;

     label15:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pathRotate");

        if $z2 == 0 goto label22;

        b1 = 14;

        goto label22;

     label16:
        $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("easing");

        if $z19 == 0 goto label22;

        b1 = 15;

        goto label22;

     label17:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("period");

        if $z10 == 0 goto label22;

        b1 = 16;

        goto label22;

     label18:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("waveShape");

        if $z1 == 0 goto label22;

        b1 = 17;

        goto label22;

     label19:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("phase");

        if $z4 == 0 goto label22;

        b1 = 18;

        goto label22;

     label20:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("offset");

        if $z12 == 0 goto label22;

        b1 = 19;

        goto label22;

     label21:
        $z20 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("customWave");

        if $z20 == 0 goto label22;

        b1 = 20;

     label22:
        tableswitch(b1)
        {
            case 0: goto label23;
            case 1: goto label24;
            case 2: goto label25;
            case 3: goto label26;
            case 4: goto label27;
            case 5: goto label28;
            case 6: goto label29;
            case 7: goto label30;
            case 8: goto label31;
            case 9: goto label32;
            case 10: goto label33;
            case 11: goto label34;
            case 12: goto label35;
            case 13: goto label36;
            case 14: goto label37;
            case 15: goto label38;
            case 16: goto label39;
            case 17: goto label40;
            case 18: goto label41;
            case 19: goto label42;
            case 20: goto label43;
            default: goto label44;
        };

     label23:
        return 401;

     label24:
        return 402;

     label25:
        return 403;

     label26:
        return 304;

     label27:
        return 305;

     label28:
        return 306;

     label29:
        return 308;

     label30:
        return 309;

     label31:
        return 310;

     label32:
        return 311;

     label33:
        return 312;

     label34:
        return 313;

     label35:
        return 314;

     label36:
        return 315;

     label37:
        return 416;

     label38:
        return 420;

     label39:
        return 423;

     label40:
        return 421;

     label41:
        return 425;

     label42:
        return 424;

     label43:
        return 422;

     label44:
        return -1;
    }

    public void addCycleValues(java.util.HashMap)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.util.HashMap r1, $r10;
        java.util.Iterator r2;
        java.lang.String r3, $r8, $r9, $r13, r14;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r4, r16;
        java.util.Set $r5;
        java.lang.Object $r6, $r7, $r11, $r12;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.constraintlayout.core.motion.CustomVariable r15;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        r1 := @parameter0: java.util.HashMap;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r6;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CUSTOM");

        if $z0 == 0 goto label4;

        $r9 = "CUSTOM";

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i3 = $i2 + 1;

        r14 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i3);

        $r10 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.util.HashMap mCustom>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r14);

        r15 = (androidx.constraintlayout.core.motion.CustomVariable) $r11;

        if r15 == null goto label1;

        $i4 = virtualinvoke r15.<androidx.constraintlayout.core.motion.CustomVariable: int getType()>();

        if $i4 == 901 goto label2;

        goto label1;

     label2:
        $r12 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) $r12;

        if r4 != null goto label3;

        goto label1;

     label3:
        $i5 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mFramePosition>;

        $i6 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape>;

        $r13 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mCustomWaveShape>;

        $f3 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod>;

        $f4 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset>;

        $f5 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase>;

        $f6 = virtualinvoke r15.<androidx.constraintlayout.core.motion.CustomVariable: float getValueToInterpolate()>();

        virtualinvoke r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: void setPoint(int,int,java.lang.String,int,float,float,float,float,java.lang.Object)>($i5, $i6, $r13, -1, $f3, $f4, $f5, $f6, r15);

        goto label1;

     label4:
        f7 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float getValue(java.lang.String)>(r3);

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f7);

        if $z1 == 0 goto label5;

        goto label1;

     label5:
        $r7 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r16 = (androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) $r7;

        if r16 != null goto label6;

        goto label1;

     label6:
        $i1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mFramePosition>;

        $i0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape>;

        $r8 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: java.lang.String mCustomWaveShape>;

        $f2 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod>;

        $f1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset>;

        $f0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase>;

        virtualinvoke r16.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: void setPoint(int,int,java.lang.String,int,float,float,float,float)>($i1, $i0, $r8, -1, $f2, $f1, $f0, f7);

        goto label1;

     label7:
        return;
    }

    public void dump()
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.io.PrintStream $r2;
        int $i0;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r14;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MotionKeyCycle{mWaveShape=");

        $i0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mWavePeriod=");

        $f0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mWaveOffset=");

        $f1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mWavePhase=");

        $f2 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRotation=");

        $f3 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mRotation>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r14);

        return;
    }

    public void printAttributes()
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        java.util.HashSet r1, $r3;
        java.lang.String[] r2, $r20;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r23, $r25, $r26, $r28;
        int $i1, $i2, $i3, i4;
        java.lang.String $r8, $r19, $r22, $r24, $r27, $r29;
        float $f0, $f1, $f2, $f3;
        java.lang.Object[] $r21;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r1 = $r3;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: void getAttributeNames(java.util.HashSet)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ------------- ");

        $i1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mFramePosition>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -------------");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.constraintlayout.core.motion.utils.Utils: void log(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MotionKeyCycle{Shape=");

        $i2 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: int mWaveShape>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Period=");

        $f0 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePeriod>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Offset=");

        $f1 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWaveOffset>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Phase=");

        $f2 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float mWavePhase>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.constraintlayout.core.motion.utils.Utils: void log(java.lang.String)>($r19);

        $r20 = newarray (java.lang.String)[0];

        $r21 = virtualinvoke r1.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        r2 = (java.lang.String[]) $r21;

        i4 = 0;

     label1:
        $i3 = lengthof r2;

        if i4 >= $i3 goto label2;

        $r22 = r2[i4];

        staticinvoke <androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType: int getId(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = r2[i4];

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r27 = r2[i4];

        $f3 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: float getValue(java.lang.String)>($r27);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.constraintlayout.core.motion.utils.Utils: void log(java.lang.String)>($r29);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        androidx.constraintlayout.core.motion.key.MotionKeyCycle r0;
        androidx.constraintlayout.core.motion.key.MotionKey $r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyCycle;

        $r1 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyCycle: androidx.constraintlayout.core.motion.key.MotionKey clone()>();

        return $r1;
    }

