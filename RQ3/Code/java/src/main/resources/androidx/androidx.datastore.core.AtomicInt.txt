androidx.datastore.core.AtomicInt
<androidx.datastore.core.AtomicInt: java.util.concurrent.atomic.AtomicInteger delegate>
    public void <init>(int)
    {
        androidx.datastore.core.AtomicInt r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: androidx.datastore.core.AtomicInt;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(i0);

        r0.<androidx.datastore.core.AtomicInt: java.util.concurrent.atomic.AtomicInteger delegate> = $r1;

        return;
    }

    public void <init>(int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.core.AtomicInt r0;
        int i0, $i1, i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.datastore.core.AtomicInt;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        specialinvoke r0.<androidx.datastore.core.AtomicInt: void <init>(int)>(i2);

        return;
    }

    public final int getAndIncrement()
    {
        androidx.datastore.core.AtomicInt r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: androidx.datastore.core.AtomicInt;

        $r1 = r0.<androidx.datastore.core.AtomicInt: java.util.concurrent.atomic.AtomicInteger delegate>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        return $i0;
    }

    public final int decrementAndGet()
    {
        androidx.datastore.core.AtomicInt r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: androidx.datastore.core.AtomicInt;

        $r1 = r0.<androidx.datastore.core.AtomicInt: java.util.concurrent.atomic.AtomicInteger delegate>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        return $i0;
    }

    public final int get()
    {
        androidx.datastore.core.AtomicInt r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: androidx.datastore.core.AtomicInt;

        $r1 = r0.<androidx.datastore.core.AtomicInt: java.util.concurrent.atomic.AtomicInteger delegate>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public final int incrementAndGet()
    {
        androidx.datastore.core.AtomicInt r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: androidx.datastore.core.AtomicInt;

        $r1 = r0.<androidx.datastore.core.AtomicInt: java.util.concurrent.atomic.AtomicInteger delegate>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return $i0;
    }

