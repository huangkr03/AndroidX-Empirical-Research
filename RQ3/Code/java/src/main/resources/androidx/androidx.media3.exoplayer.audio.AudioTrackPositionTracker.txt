androidx.media3.exoplayer.audio.AudioTrackPositionTracker
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int PLAYSTATE_STOPPED>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int PLAYSTATE_PAUSED>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int PLAYSTATE_PLAYING>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long MAX_AUDIO_TIMESTAMP_OFFSET_US>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long MAX_LATENCY_US>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long MODE_SWITCH_SMOOTHING_DURATION_US>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long RAW_PLAYBACK_HEAD_POSITION_UPDATE_INTERVAL_MS>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long FORCE_RESET_WORKAROUND_TIMEOUT_MS>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int MAX_PLAYHEAD_OFFSET_COUNT>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int MIN_PLAYHEAD_OFFSET_SAMPLE_INTERVAL_US>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int MIN_LATENCY_SAMPLE_INTERVAL_US>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long[] playheadOffsets>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputPcmFrameSize>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int bufferSize>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputSampleRate>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long bufferSizeUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean notifiedPositionIncreasing>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPlayheadSampleTimeUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: java.lang.reflect.Method getLatencyMethod>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasData>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean isOutputPcm>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastLatencySampleTimeUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastRawPlaybackHeadPositionSampleTimeMs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadWrapCount>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long passthroughWorkaroundPauseOffset>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int nextPlayheadOffsetIndex>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopTimestampUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopPlaybackHeadPosition>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long endPlaybackHeadPosition>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPositionUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastSystemTimeUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean lastSampleUsedGetTimestampMode>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModePositionUs>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModeSystemTimeUs>
    public void <init>(androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener r1, $r4;
        java.lang.Throwable r2, $r8;
        java.lang.Object $r3;
        int $i0;
        java.lang.Class[] $r5;
        java.lang.Class $r6;
        java.lang.reflect.Method $r7;
        long[] $r9;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        r1 := @parameter0: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener) $r3;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener> = $r4;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 18 goto label4;

     label1:
        $r6 = class "Landroid/media/AudioTrack;";

        $r5 = (java.lang.Class[]) null;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getLatency", $r5);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: java.lang.reflect.Method getLatencyMethod> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        $r9 = newarray (long)[10];

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long[] playheadOffsets> = $r9;

        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public void setAudioTrack(android.media.AudioTrack, boolean, int, int, int)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        android.media.AudioTrack r1;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, i2, $i3, $i4;
        androidx.media3.exoplayer.audio.AudioTimestampPoller $r2;
        long $l5, $l6;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        r1 := @parameter0: android.media.AudioTrack;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack> = r1;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputPcmFrameSize> = i1;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int bufferSize> = i2;

        $r2 = new androidx.media3.exoplayer.audio.AudioTimestampPoller;

        specialinvoke $r2.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void <init>(android.media.AudioTrack)>(r1);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller> = $r2;

        $i3 = virtualinvoke r1.<android.media.AudioTrack: int getSampleRate()>();

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputSampleRate> = $i3;

        if z0 == 0 goto label1;

        $z1 = staticinvoke <androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds(int)>(i0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds> = $z2;

        $z3 = staticinvoke <androidx.media3.common.util.Util: boolean isEncodingLinearPcm(int)>(i0);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean isOutputPcm> = $z3;

        $z4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean isOutputPcm>;

        if $z4 == 0 goto label3;

        $i4 = i2 / i1;

        $l5 = (long) $i4;

        $l6 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long framesToDurationUs(long)>($l5);

        goto label4;

     label3:
        $l6 = -9223372036854775807L;

     label4:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long bufferSizeUs> = $l6;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadWrapCount> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long passthroughWorkaroundPauseOffset> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasData> = 0;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopTimestampUs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastLatencySampleTimeUs> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed> = 1.0F;

        return;
    }

    public void setAudioTrackPlaybackSpeed(float)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        float f0;
        androidx.media3.exoplayer.audio.AudioTimestampPoller $r1, $r2;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        f0 := @parameter0: float;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed> = f0;

        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>;

        virtualinvoke $r2.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void reset()>();

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void resetSyncParams()>();

        return;
    }

    public long getCurrentPositionUs(boolean)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        boolean z0, z1, $z2, $z3;
        long l0, l1, $l3, $l5, $l6, $l7, $l9, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, l25, l26, l27, l28, l29, l30, l31, l32, l33, l34, l35, l36;
        androidx.media3.exoplayer.audio.AudioTimestampPoller r1, $r5;
        android.media.AudioTrack $r2, $r4;
        java.lang.Object $r3, $r6;
        int $i2, $i4;
        float $f0, $f1, $f2, $f3;
        byte $b8, $b10;
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener $r7;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (android.media.AudioTrack) $r3;

        $i2 = virtualinvoke $r4.<android.media.AudioTrack: int getPlayState()>();

        if $i2 != 3 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void maybeSampleSyncParams()>();

     label1:
        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        l0 = $l3 / 1000L;

        $r5 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r1 = (androidx.media3.exoplayer.audio.AudioTimestampPoller) $r6;

        z1 = virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: boolean hasAdvancingTimestamp()>();

        if z1 == 0 goto label2;

        l25 = virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: long getTimestampPositionFrames()>();

        l26 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long framesToDurationUs(long)>(l25);

        $l24 = virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: long getTimestampSystemTimeUs()>();

        l27 = l0 - $l24;

        $f3 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>;

        l28 = staticinvoke <androidx.media3.common.util.Util: long getMediaDurationForPlayoutDuration(long,float)>(l27, $f3);

        l29 = l26 + l28;

        goto label5;

     label2:
        $i4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount>;

        if $i4 != 0 goto label3;

        l29 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPositionUs()>();

        goto label4;

     label3:
        $l5 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs>;

        $l6 = l0 + $l5;

        $f0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>;

        l29 = staticinvoke <androidx.media3.common.util.Util: long getMediaDurationForPlayoutDuration(long,float)>($l6, $f0);

     label4:
        if z0 != 0 goto label5;

        $l22 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs>;

        $l23 = l29 - $l22;

        l29 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l23);

     label5:
        $z3 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean lastSampleUsedGetTimestampMode>;

        if $z3 == z1 goto label6;

        $l20 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastSystemTimeUs>;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModeSystemTimeUs> = $l20;

        $l21 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPositionUs>;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModePositionUs> = $l21;

     label6:
        $l7 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModeSystemTimeUs>;

        l30 = l0 - $l7;

        $b8 = l30 cmp 1000000L;

        if $b8 >= 0 goto label7;

        $l15 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModePositionUs>;

        $f2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>;

        $l16 = staticinvoke <androidx.media3.common.util.Util: long getMediaDurationForPlayoutDuration(long,float)>(l30, $f2);

        l31 = $l15 + $l16;

        $l17 = l30 * 1000L;

        l32 = $l17 / 1000000L;

        l33 = l29 * l32;

        $l18 = 1000L - l32;

        $l19 = $l18 * l31;

        l34 = l33 + $l19;

        l29 = l34 / 1000L;

     label7:
        $z2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean notifiedPositionIncreasing>;

        if $z2 != 0 goto label8;

        $l9 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPositionUs>;

        $b10 = l29 cmp $l9;

        if $b10 <= 0 goto label8;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean notifiedPositionIncreasing> = 1;

        $l11 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPositionUs>;

        $l12 = l29 - $l11;

        l35 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l12);

        $f1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>;

        l36 = staticinvoke <androidx.media3.common.util.Util: long getPlayoutDurationForMediaDuration(long,float)>(l35, $f1);

        $l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l14 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l36);

        l1 = $l13 - $l14;

        $r7 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onPositionAdvancing(long)>(l1);

     label8:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastSystemTimeUs> = l0;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPositionUs> = l29;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean lastSampleUsedGetTimestampMode> = z1;

        return l29;
    }

    public void start()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        androidx.media3.exoplayer.audio.AudioTimestampPoller $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.audio.AudioTimestampPoller) $r2;

        virtualinvoke $r3.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void reset()>();

        return;
    }

    public boolean isPlaying()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        android.media.AudioTrack $r1, $r3;
        java.lang.Object $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (android.media.AudioTrack) $r2;

        $i0 = virtualinvoke $r3.<android.media.AudioTrack: int getPlayState()>();

        if $i0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean mayHandleBuffer(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l2, $l4, $l5;
        int i1, $i3;
        boolean z0, $z1, $z2, $z3;
        android.media.AudioTrack $r1, $r3;
        java.lang.Object $r2;
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener $r4;
        byte $b6;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (android.media.AudioTrack) $r2;

        i1 = virtualinvoke $r3.<android.media.AudioTrack: int getPlayState()>();

        $z1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds>;

        if $z1 == 0 goto label2;

        if i1 != 2 goto label1;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasData> = 0;

        return 0;

     label1:
        if i1 != 1 goto label2;

        $l5 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()>();

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label2;

        return 0;

     label2:
        z0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasData>;

        $z3 = virtualinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasPendingData(long)>(l0);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasData> = $z3;

        if z0 == 0 goto label3;

        $z2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean hasData>;

        if $z2 != 0 goto label3;

        if i1 == 1 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener>;

        $i3 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int bufferSize>;

        $l2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long bufferSizeUs>;

        $l4 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l2);

        interfaceinvoke $r4.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onUnderrun(int,long)>($i3, $l4);

     label3:
        return 1;
    }

    public int getAvailableBufferSize(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l2, $l4, $l5, $l6;
        int i1, $i3, $i7, $i8;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $l2 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()>();

        $i3 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputPcmFrameSize>;

        $l4 = (long) $i3;

        $l5 = $l2 * $l4;

        $l6 = l0 - $l5;

        i1 = (int) $l6;

        $i7 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int bufferSize>;

        $i8 = $i7 - i1;

        return $i8;
    }

    public boolean isStalled(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l1, $l4, $l5, $l6;
        byte $b2, $b3, $b7;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label1;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs>;

        $l6 = $l4 - $l5;

        $b7 = $l6 cmp 200L;

        if $b7 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void handleEndOfStream(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l1, $l2, $l3;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $l1 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()>();

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopPlaybackHeadPosition> = $l1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2 * 1000L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopTimestampUs> = $l3;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long endPlaybackHeadPosition> = l0;

        return;
    }

    public boolean hasPendingData(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l1;
        byte $b2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $l1 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()>();

        $b2 = l0 cmp $l1;

        if $b2 > 0 goto label1;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean forceHasPendingData()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean pause()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long $l0;
        byte $b1;
        androidx.media3.exoplayer.audio.AudioTimestampPoller $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void resetSyncParams()>();

        $l0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopTimestampUs>;

        $b1 = $l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.audio.AudioTimestampPoller) $r2;

        virtualinvoke $r3.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void reset()>();

        return 1;

     label1:
        return 0;
    }

    public void reset()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void resetSyncParams()>();

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack> = null;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller> = null;

        return;
    }

    private void maybeSampleSyncParams()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, l1, $l2, $l3, $l4, $l8, $l9, $l15, $l16, $l17, $l18, $l19;
        byte $b5, $b6;
        boolean $z0;
        float $f0;
        long[] $r1, $r2;
        int $i7, $i10, $i11, $i12, $i13, $i14, $i20, $i21, i22, $i23;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        l0 = $l2 / 1000L;

        $l3 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPlayheadSampleTimeUs>;

        $l4 = l0 - $l3;

        $b5 = $l4 cmp 30000L;

        if $b5 < 0 goto label4;

        l1 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPositionUs()>();

        $b6 = l1 cmp 0L;

        if $b6 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long[] playheadOffsets>;

        $i7 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int nextPlayheadOffsetIndex>;

        $f0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>;

        $l8 = staticinvoke <androidx.media3.common.util.Util: long getPlayoutDurationForMediaDuration(long,float)>(l1, $f0);

        $l9 = $l8 - l0;

        $r1[$i7] = $l9;

        $i10 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int nextPlayheadOffsetIndex>;

        $i11 = $i10 + 1;

        $i12 = $i11 % 10;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int nextPlayheadOffsetIndex> = $i12;

        $i13 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount>;

        if $i13 >= 10 goto label2;

        $i20 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount>;

        $i21 = $i20 + 1;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount> = $i21;

     label2:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPlayheadSampleTimeUs> = l0;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs> = 0L;

        i22 = 0;

     label3:
        $i23 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount>;

        if i22 >= $i23 goto label4;

        $l18 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs>;

        $r2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long[] playheadOffsets>;

        $l16 = $r2[i22];

        $i14 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount>;

        $l15 = (long) $i14;

        $l17 = $l16 / $l15;

        $l19 = $l18 + $l17;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs> = $l19;

        i22 = i22 + 1;

        goto label3;

     label4:
        $z0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds>;

        if $z0 == 0 goto label5;

        return;

     label5:
        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void maybePollAndCheckTimestamp(long)>(l0);

        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void maybeUpdateLatency(long)>(l0);

        return;
    }

    private void maybePollAndCheckTimestamp(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, l1, l2, l3, $l4, $l5, $l7, $l8, $l9;
        androidx.media3.exoplayer.audio.AudioTimestampPoller r1, $r2;
        java.lang.Object $r3;
        boolean $z0;
        byte $b6, $b10;
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r1 = (androidx.media3.exoplayer.audio.AudioTimestampPoller) $r3;

        $z0 = virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: boolean maybePollTimestamp(long)>(l0);

        if $z0 != 0 goto label1;

        return;

     label1:
        l1 = virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: long getTimestampSystemTimeUs()>();

        l2 = virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: long getTimestampPositionFrames()>();

        l3 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPositionUs()>();

        $l4 = l1 - l0;

        $l5 = staticinvoke <java.lang.Math: long abs(long)>($l4);

        $b6 = $l5 cmp 5000000L;

        if $b6 <= 0 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onSystemTimeUsMismatch(long,long,long,long)>(l2, l1, l0, l3);

        virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void rejectTimestamp()>();

        goto label4;

     label2:
        $l7 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long framesToDurationUs(long)>(l2);

        $l8 = $l7 - l3;

        $l9 = staticinvoke <java.lang.Math: long abs(long)>($l8);

        $b10 = $l9 cmp 5000000L;

        if $b10 <= 0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onPositionFramesMismatch(long,long,long,long)>(l2, l1, l0, l3);

        virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void rejectTimestamp()>();

        goto label4;

     label3:
        virtualinvoke r1.<androidx.media3.exoplayer.audio.AudioTimestampPoller: void acceptTimestamp()>();

     label4:
        return;
    }

    private void maybeUpdateLatency(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l1, $l2, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13;
        java.lang.Throwable r1, $r12;
        boolean $z0;
        java.lang.reflect.Method $r2, $r4;
        byte $b3, $b12;
        android.media.AudioTrack $r3;
        java.lang.Object $r5, $r7, $r9;
        java.lang.Object[] $r6;
        java.lang.Integer $r8, $r10;
        int $i4;
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener $r11;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $z0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean isOutputPcm>;

        if $z0 == 0 goto label5;

        $r2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: java.lang.reflect.Method getLatencyMethod>;

        if $r2 == null goto label5;

        $l1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastLatencySampleTimeUs>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 500000L;

        if $b3 < 0 goto label5;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: java.lang.reflect.Method getLatencyMethod>;

        $r3 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r6);

        $r8 = (java.lang.Integer) $r7;

        $r9 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r8);

        $r10 = (java.lang.Integer) $r9;

        $i4 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $l5 = (long) $i4;

        $l7 = $l5 * 1000L;

        $l6 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long bufferSizeUs>;

        $l8 = $l7 - $l6;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs> = $l8;

        $l9 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs>;

        $l10 = staticinvoke <java.lang.Math: long max(long,long)>($l9, 0L);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs> = $l10;

        $l11 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs>;

        $b12 = $l11 cmp 5000000L;

        if $b12 <= 0 goto label2;

        $r11 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener>;

        $l13 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs>;

        interfaceinvoke $r11.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onInvalidLatency(long)>($l13);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long latencyUs> = 0L;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r1 = $r12;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: java.lang.reflect.Method getLatencyMethod> = null;

     label4:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastLatencySampleTimeUs> = l0;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private long framesToDurationUs(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l2, $l3, $l4;
        int $i1;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $l3 = l0 * 1000000L;

        $i1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputSampleRate>;

        $l2 = (long) $i1;

        $l4 = $l3 / $l2;

        return $l4;
    }

    private void resetSyncParams()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int playheadOffsetCount> = 0;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int nextPlayheadOffsetIndex> = 0;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastPlayheadSampleTimeUs> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastSystemTimeUs> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long previousModeSystemTimeUs> = 0L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean notifiedPositionIncreasing> = 0;

        return;
    }

    private boolean forceHasPendingData()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        boolean $z0, $z1;
        android.media.AudioTrack $r1, $r3;
        java.lang.Object $r2;
        int $i0;
        long $l1;
        byte $b2;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        $z0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (android.media.AudioTrack) $r2;

        $i0 = virtualinvoke $r3.<android.media.AudioTrack: int getPlayState()>();

        if $i0 != 2 goto label1;

        $l1 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static boolean needsPassthroughWorkarounds(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 23 goto label2;

        if i0 == 5 goto label1;

        if i0 != 6 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private long getPlaybackHeadPositionUs()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long $l0, $l1;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        $l0 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()>();

        $l1 = specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long framesToDurationUs(long)>($l0);

        return $l1;
    }

    private long getPlaybackHeadPosition()
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, l1, l2, l3, $l4, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21;
        byte $b5, $b8;
        float $f0;
        int $i15;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopTimestampUs>;

        $b5 = $l4 cmp -9223372036854775807L;

        if $b5 == 0 goto label1;

        $l14 = l0 * 1000L;

        $l13 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopTimestampUs>;

        l1 = $l14 - $l13;

        $f0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: float audioTrackPlaybackSpeed>;

        l2 = staticinvoke <androidx.media3.common.util.Util: long getMediaDurationForPlayoutDuration(long,float)>(l1, $f0);

        $i15 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: int outputSampleRate>;

        $l16 = (long) $i15;

        $l17 = l2 * $l16;

        l3 = $l17 / 1000000L;

        $l20 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long endPlaybackHeadPosition>;

        $l18 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long stopPlaybackHeadPosition>;

        $l19 = $l18 + l3;

        $l21 = staticinvoke <java.lang.Math: long min(long,long)>($l20, $l19);

        return $l21;

     label1:
        $l6 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastRawPlaybackHeadPositionSampleTimeMs>;

        $l7 = l0 - $l6;

        $b8 = $l7 cmp 5L;

        if $b8 < 0 goto label2;

        specialinvoke r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: void updateRawPlaybackHeadPosition(long)>(l0);

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long lastRawPlaybackHeadPositionSampleTimeMs> = l0;

     label2:
        $l11 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition>;

        $l9 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadWrapCount>;

        $l10 = $l9 << 32;

        $l12 = $l11 + $l10;

        return $l12;
    }

    private void updateRawPlaybackHeadPosition(long)
    {
        androidx.media3.exoplayer.audio.AudioTrackPositionTracker r0;
        long l0, $l3, $l4, $l5, $l7, $l9, $l12, l13, $l14, $l16;
        android.media.AudioTrack r1, $r2;
        int i1, $i2, $i15;
        java.lang.Object $r3;
        boolean $z0;
        byte $b6, $b8, $b10, $b11, $b17;

        r0 := @this: androidx.media3.exoplayer.audio.AudioTrackPositionTracker;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r1 = (android.media.AudioTrack) $r3;

        i1 = virtualinvoke r1.<android.media.AudioTrack: int getPlayState()>();

        if i1 != 1 goto label1;

        return;

     label1:
        $i2 = virtualinvoke r1.<android.media.AudioTrack: int getPlaybackHeadPosition()>();

        $l3 = (long) $i2;

        l13 = 4294967295L & $l3;

        $z0 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds>;

        if $z0 == 0 goto label3;

        if i1 != 2 goto label2;

        $b11 = l13 cmp 0L;

        if $b11 != 0 goto label2;

        $l12 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition>;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long passthroughWorkaroundPauseOffset> = $l12;

     label2:
        $l14 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long passthroughWorkaroundPauseOffset>;

        l13 = l13 + $l14;

     label3:
        $i15 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i15 > 29 goto label6;

        $b6 = l13 cmp 0L;

        if $b6 != 0 goto label5;

        $l7 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition>;

        $b8 = $l7 cmp 0L;

        if $b8 <= 0 goto label5;

        if i1 != 3 goto label5;

        $l9 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs>;

        $b10 = $l9 cmp -9223372036854775807L;

        if $b10 != 0 goto label4;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs> = l0;

     label4:
        return;

     label5:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs> = -9223372036854775807L;

     label6:
        $l16 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition>;

        $b17 = $l16 cmp l13;

        if $b17 <= 0 goto label7;

        $l4 = r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadWrapCount>;

        $l5 = $l4 + 1L;

        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadWrapCount> = $l5;

     label7:
        r0.<androidx.media3.exoplayer.audio.AudioTrackPositionTracker: long rawPlaybackHeadPosition> = l13;

        return;
    }

androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onPositionAdvancing(long)>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onPositionFramesMismatch(long,long,long,long)>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onSystemTimeUsMismatch(long,long,long,long)>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onInvalidLatency(long)>
<androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener: void onUnderrun(int,long)>
