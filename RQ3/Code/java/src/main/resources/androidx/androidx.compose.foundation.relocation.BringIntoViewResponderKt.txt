androidx.compose.foundation.relocation.BringIntoViewResponderKt
    public static final androidx.compose.ui.Modifier bringIntoViewResponder(androidx.compose.ui.Modifier, androidx.compose.foundation.relocation.BringIntoViewResponder)
    {
        androidx.compose.ui.Modifier $r0, $r4;
        androidx.compose.foundation.relocation.BringIntoViewResponder r1;
        boolean $z1;
        androidx.compose.foundation.relocation.BringIntoViewResponderKt$bringIntoViewResponder$2 $r2;
        kotlin.jvm.functions.Function3 $r3;
        androidx.compose.foundation.relocation.BringIntoViewResponderKt$bringIntoViewResponder$$inlined$debugInspectorInfo$1 $r5;
        kotlin.jvm.functions.Function1 $r7;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.foundation.relocation.BringIntoViewResponder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "responder");

        $z1 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: boolean isDebugInspectorInfoEnabled()>();

        if $z1 == 0 goto label1;

        $r5 = new androidx.compose.foundation.relocation.BringIntoViewResponderKt$bringIntoViewResponder$$inlined$debugInspectorInfo$1;

        specialinvoke $r5.<androidx.compose.foundation.relocation.BringIntoViewResponderKt$bringIntoViewResponder$$inlined$debugInspectorInfo$1: void <init>(androidx.compose.foundation.relocation.BringIntoViewResponder)>(r1);

        $r7 = (kotlin.jvm.functions.Function1) $r5;

        goto label2;

     label1:
        $r7 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: kotlin.jvm.functions.Function1 getNoInspectorInfo()>();

     label2:
        $r2 = new androidx.compose.foundation.relocation.BringIntoViewResponderKt$bringIntoViewResponder$2;

        specialinvoke $r2.<androidx.compose.foundation.relocation.BringIntoViewResponderKt$bringIntoViewResponder$2: void <init>(androidx.compose.foundation.relocation.BringIntoViewResponder)>(r1);

        $r3 = (kotlin.jvm.functions.Function3) $r2;

        $r4 = staticinvoke <androidx.compose.ui.ComposedModifierKt: androidx.compose.ui.Modifier composed(androidx.compose.ui.Modifier,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3)>($r0, $r7, $r3);

        return $r4;
    }

    private static final androidx.compose.ui.geometry.Rect localRectOf(androidx.compose.ui.layout.LayoutCoordinates, androidx.compose.ui.layout.LayoutCoordinates, androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.layout.LayoutCoordinates $r0, r1;
        androidx.compose.ui.geometry.Rect r2, r3, $r4;
        long $l0;

        $r0 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        r1 := @parameter1: androidx.compose.ui.layout.LayoutCoordinates;

        r2 := @parameter2: androidx.compose.ui.geometry.Rect;

        r3 = interfaceinvoke $r0.<androidx.compose.ui.layout.LayoutCoordinates: androidx.compose.ui.geometry.Rect localBoundingBoxOf(androidx.compose.ui.layout.LayoutCoordinates,boolean)>(r1, 0);

        $l0 = virtualinvoke r3.<androidx.compose.ui.geometry.Rect: long getTopLeft-F1C5BW0()>();

        $r4 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect translate-k-4lQ0M(long)>($l0);

        return $r4;
    }

    private static final boolean completelyOverlaps(androidx.compose.ui.geometry.Rect, androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.geometry.Rect $r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b0, $b1, $b2, $b3;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.geometry.Rect;

        r1 := @parameter1: androidx.compose.ui.geometry.Rect;

        $f0 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $b0 = $f0 cmpg $f1;

        if $b0 > 0 goto label1;

        $f2 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $b1 = $f2 cmpg $f3;

        if $b1 > 0 goto label1;

        $f4 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $b2 = $f4 cmpl $f5;

        if $b2 < 0 goto label1;

        $f6 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $b3 = $f6 cmpl $f7;

        if $b3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final androidx.compose.ui.geometry.Rect access$localRectOf(androidx.compose.ui.layout.LayoutCoordinates, androidx.compose.ui.layout.LayoutCoordinates, androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.layout.LayoutCoordinates $r0, r1;
        androidx.compose.ui.geometry.Rect r2, $r3;

        $r0 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        r1 := @parameter1: androidx.compose.ui.layout.LayoutCoordinates;

        r2 := @parameter2: androidx.compose.ui.geometry.Rect;

        $r3 = staticinvoke <androidx.compose.foundation.relocation.BringIntoViewResponderKt: androidx.compose.ui.geometry.Rect localRectOf(androidx.compose.ui.layout.LayoutCoordinates,androidx.compose.ui.layout.LayoutCoordinates,androidx.compose.ui.geometry.Rect)>($r0, r1, r2);

        return $r3;
    }

    public static final boolean access$completelyOverlaps(androidx.compose.ui.geometry.Rect, androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.geometry.Rect $r0, r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.geometry.Rect;

        r1 := @parameter1: androidx.compose.ui.geometry.Rect;

        $z0 = staticinvoke <androidx.compose.foundation.relocation.BringIntoViewResponderKt: boolean completelyOverlaps(androidx.compose.ui.geometry.Rect,androidx.compose.ui.geometry.Rect)>($r0, r1);

        return $z0;
    }

