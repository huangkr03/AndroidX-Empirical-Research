androidx.media3.datasource.cache.CachedContentIndex
<androidx.media3.datasource.cache.CachedContentIndex: java.lang.String FILE_NAME_ATOMIC>
<androidx.media3.datasource.cache.CachedContentIndex: int INCREMENTAL_METADATA_READ_LENGTH>
<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>
<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>
<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray removedIds>
<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray newIds>
<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>
<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>
    public static boolean isIndexFile(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("cached_content_index.exi");

        return $z0;
    }

    public static void delete(androidx.media3.database.DatabaseProvider, long) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.database.DatabaseProvider r0;
        long l0;

        r0 := @parameter0: androidx.media3.database.DatabaseProvider;

        l0 := @parameter1: long;

        staticinvoke <androidx.media3.datasource.cache.CachedContentIndex$DatabaseStorage: void delete(androidx.media3.database.DatabaseProvider,long)>(r0, l0);

        return;
    }

    public void <init>(androidx.media3.database.DatabaseProvider)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        androidx.media3.database.DatabaseProvider r1;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: androidx.media3.database.DatabaseProvider;

        specialinvoke r0.<androidx.media3.datasource.cache.CachedContentIndex: void <init>(androidx.media3.database.DatabaseProvider,java.io.File,byte[],boolean,boolean)>(r1, null, null, 0, 0);

        return;
    }

    public void <init>(androidx.media3.database.DatabaseProvider, java.io.File, byte[], boolean, boolean)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        androidx.media3.database.DatabaseProvider r1;
        java.io.File r2, $r12;
        byte[] r3;
        boolean z0, z1, $z2;
        androidx.media3.datasource.cache.CachedContentIndex$DatabaseStorage r4, $r13;
        androidx.media3.datasource.cache.CachedContentIndex$LegacyStorage r5, $r14;
        java.util.HashMap $r6;
        android.util.SparseArray $r7;
        android.util.SparseBooleanArray $r8, $r9;
        java.lang.Object $r10;
        androidx.media3.datasource.cache.CachedContentIndex$Storage $r11;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: androidx.media3.database.DatabaseProvider;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label01;

        if r2 == null goto label02;

     label01:
        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey> = $r7;

        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray removedIds> = $r8;

        $r9 = new android.util.SparseBooleanArray;

        specialinvoke $r9.<android.util.SparseBooleanArray: void <init>()>();

        r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray newIds> = $r9;

        if r1 == null goto label04;

        $r13 = new androidx.media3.datasource.cache.CachedContentIndex$DatabaseStorage;

        specialinvoke $r13.<androidx.media3.datasource.cache.CachedContentIndex$DatabaseStorage: void <init>(androidx.media3.database.DatabaseProvider)>(r1);

        goto label05;

     label04:
        $r13 = null;

     label05:
        r4 = $r13;

        if r2 == null goto label06;

        $r14 = new androidx.media3.datasource.cache.CachedContentIndex$LegacyStorage;

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "cached_content_index.exi");

        specialinvoke $r14.<androidx.media3.datasource.cache.CachedContentIndex$LegacyStorage: void <init>(java.io.File,byte[],boolean)>($r12, r3, z0);

        goto label07;

     label06:
        $r14 = null;

     label07:
        r5 = $r14;

        if r4 == null goto label08;

        if r5 == null goto label09;

        if z1 == 0 goto label09;

     label08:
        $r10 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>(r5);

        $r11 = (androidx.media3.datasource.cache.CachedContentIndex$Storage) $r10;

        r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage> = $r11;

        r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage> = r4;

        goto label10;

     label09:
        r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage> = r4;

        r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage> = r5;

     label10:
        return;
    }

    public void initialize(long) throws java.io.IOException
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        long l0;
        androidx.media3.datasource.cache.CachedContentIndex$Storage $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r11, $r12, $r13, $r16;
        boolean $z0, $z1;
        android.util.SparseArray $r7, $r15;
        java.util.HashMap $r8, $r10, $r14;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        interfaceinvoke $r1.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void initialize(long)>(l0);

        $r2 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        if $r2 == null goto label1;

        $r12 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        interfaceinvoke $r12.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void initialize(long)>(l0);

     label1:
        $r3 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        $z0 = interfaceinvoke $r3.<androidx.media3.datasource.cache.CachedContentIndex$Storage: boolean exists()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        $z1 = interfaceinvoke $r6.<androidx.media3.datasource.cache.CachedContentIndex$Storage: boolean exists()>();

        if $z1 == 0 goto label2;

        $r9 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        $r8 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r7 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        interfaceinvoke $r9.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void load(java.util.HashMap,android.util.SparseArray)>($r8, $r7);

        $r11 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        $r10 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        interfaceinvoke $r11.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void storeFully(java.util.HashMap)>($r10);

        goto label3;

     label2:
        $r13 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        $r14 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r15 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        interfaceinvoke $r13.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void load(java.util.HashMap,android.util.SparseArray)>($r14, $r15);

     label3:
        $r16 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        if $r16 == null goto label4;

        $r4 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage>;

        interfaceinvoke $r4.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void delete()>();

        r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage previousStorage> = null;

     label4:
        return;
    }

    public void store() throws java.io.IOException
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        int i0, $i1, i2;
        java.util.HashMap $r1;
        androidx.media3.datasource.cache.CachedContentIndex$Storage $r2;
        android.util.SparseBooleanArray $r3, $r4, $r5, $r6;
        android.util.SparseArray $r7;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        $r2 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        $r1 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        interfaceinvoke $r2.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void storeIncremental(java.util.HashMap)>($r1);

        $r3 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray removedIds>;

        i0 = virtualinvoke $r3.<android.util.SparseBooleanArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r7 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        $r6 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray removedIds>;

        $i1 = virtualinvoke $r6.<android.util.SparseBooleanArray: int keyAt(int)>(i2);

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray removedIds>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void clear()>();

        $r5 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray newIds>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void clear()>();

        return;
    }

    public androidx.media3.datasource.cache.CachedContent getOrAdd(java.lang.String)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        androidx.media3.datasource.cache.CachedContent r2, $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.datasource.cache.CachedContent) $r4;

        if r2 != null goto label1;

        $r5 = specialinvoke r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContent addNew(java.lang.String)>(r1);

        goto label2;

     label1:
        $r5 = r2;

     label2:
        return $r5;
    }

    public androidx.media3.datasource.cache.CachedContent get(java.lang.String)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        androidx.media3.datasource.cache.CachedContent $r4;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.media3.datasource.cache.CachedContent) $r3;

        return $r4;
    }

    public java.util.Collection getAll()
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.util.HashMap $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        $r1 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public int assignIdForKey(java.lang.String)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        androidx.media3.datasource.cache.CachedContent $r2;
        int $i0;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContent getOrAdd(java.lang.String)>(r1);

        $i0 = $r2.<androidx.media3.datasource.cache.CachedContent: int id>;

        return $i0;
    }

    public java.lang.String getKeyForId(int)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void maybeRemove(java.lang.String)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        androidx.media3.datasource.cache.CachedContent r2;
        int i0;
        boolean z0, $z1, $z2;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4;
        android.util.SparseBooleanArray $r7, $r10, $r12;
        androidx.media3.datasource.cache.CachedContentIndex$Storage $r8;
        android.util.SparseArray $r9, $r11;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.media3.datasource.cache.CachedContent) $r4;

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<androidx.media3.datasource.cache.CachedContent: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r2.<androidx.media3.datasource.cache.CachedContent: boolean isFullyUnlocked()>();

        if $z2 == 0 goto label2;

        $r5 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        i0 = r2.<androidx.media3.datasource.cache.CachedContent: int id>;

        $r7 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray newIds>;

        z0 = virtualinvoke $r7.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        $r8 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        interfaceinvoke $r8.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void onRemove(androidx.media3.datasource.cache.CachedContent,boolean)>(r2, z0);

        if z0 == 0 goto label1;

        $r11 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>(i0);

        $r12 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray newIds>;

        virtualinvoke $r12.<android.util.SparseBooleanArray: void delete(int)>(i0);

        goto label2;

     label1:
        $r9 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        $r10 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray removedIds>;

        virtualinvoke $r10.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

     label2:
        return;
    }

    public void removeEmpty()
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        com.google.common.collect.UnmodifiableIterator r1;
        java.lang.String r2;
        java.util.HashMap $r3;
        java.util.Set $r4;
        com.google.common.collect.ImmutableSet $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        $r3 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        $r5 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r4);

        r1 = virtualinvoke $r5.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r6;

        virtualinvoke r0.<androidx.media3.datasource.cache.CachedContentIndex: void maybeRemove(java.lang.String)>(r2);

        goto label1;

     label2:
        return;
    }

    public java.util.Set getKeys()
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        $r1 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        return $r2;
    }

    public void applyContentMetadataMutations(java.lang.String, androidx.media3.datasource.cache.ContentMetadataMutations)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        androidx.media3.datasource.cache.ContentMetadataMutations r2;
        androidx.media3.datasource.cache.CachedContent r3;
        boolean $z0;
        androidx.media3.datasource.cache.CachedContentIndex$Storage $r4;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.cache.ContentMetadataMutations;

        r3 = virtualinvoke r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContent getOrAdd(java.lang.String)>(r1);

        $z0 = virtualinvoke r3.<androidx.media3.datasource.cache.CachedContent: boolean applyMetadataMutations(androidx.media3.datasource.cache.ContentMetadataMutations)>(r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        interfaceinvoke $r4.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void onUpdate(androidx.media3.datasource.cache.CachedContent)>(r3);

     label1:
        return;
    }

    public androidx.media3.datasource.cache.ContentMetadata getContentMetadata(java.lang.String)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        androidx.media3.datasource.cache.CachedContent r2;
        androidx.media3.datasource.cache.DefaultContentMetadata $r3;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContent get(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<androidx.media3.datasource.cache.CachedContent: androidx.media3.datasource.cache.DefaultContentMetadata getMetadata()>();

        goto label2;

     label1:
        $r3 = <androidx.media3.datasource.cache.DefaultContentMetadata: androidx.media3.datasource.cache.DefaultContentMetadata EMPTY>;

     label2:
        return $r3;
    }

    private androidx.media3.datasource.cache.CachedContent addNew(java.lang.String)
    {
        androidx.media3.datasource.cache.CachedContentIndex r0;
        java.lang.String r1;
        int i0;
        androidx.media3.datasource.cache.CachedContent r2, $r4;
        android.util.SparseArray $r3, $r7;
        java.util.HashMap $r5;
        android.util.SparseBooleanArray $r8;
        androidx.media3.datasource.cache.CachedContentIndex$Storage $r9;

        r0 := @this: androidx.media3.datasource.cache.CachedContentIndex;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        i0 = staticinvoke <androidx.media3.datasource.cache.CachedContentIndex: int getNewId(android.util.SparseArray)>($r3);

        $r4 = new androidx.media3.datasource.cache.CachedContent;

        specialinvoke $r4.<androidx.media3.datasource.cache.CachedContent: void <init>(int,java.lang.String)>(i0, r1);

        r2 = $r4;

        $r5 = r0.<androidx.media3.datasource.cache.CachedContentIndex: java.util.HashMap keyToContent>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r7 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseArray idToKey>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        $r8 = r0.<androidx.media3.datasource.cache.CachedContentIndex: android.util.SparseBooleanArray newIds>;

        virtualinvoke $r8.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r9 = r0.<androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.CachedContentIndex$Storage storage>;

        interfaceinvoke $r9.<androidx.media3.datasource.cache.CachedContentIndex$Storage: void onUpdate(androidx.media3.datasource.cache.CachedContent)>(r2);

        return r2;
    }

    private static javax.crypto.Cipher getCipher() throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException
    {
        java.lang.Throwable r0, $r3;
        int $i0;
        javax.crypto.Cipher $r1, $r2;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 != 18 goto label4;

     label1:
        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>("AES/CBC/PKCS5PADDING", "BC");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

     label4:
        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5PADDING");

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static int getNewId(android.util.SparseArray)
    {
        android.util.SparseArray r0;
        int i0, $i1, $i2, $i3, $i4, i5;

        r0 := @parameter0: android.util.SparseArray;

        i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if i0 != 0 goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $i1 = i0 - 1;

        $i2 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>($i1);

        $i4 = $i2 + 1;

     label2:
        i5 = $i4;

        if i5 >= 0 goto label5;

        i5 = 0;

     label3:
        if i5 >= i0 goto label5;

        $i3 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i5);

        if i5 == $i3 goto label4;

        goto label5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return i5;
    }

    private static androidx.media3.datasource.cache.DefaultContentMetadata readContentMetadata(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2, $i3, i4, i5, i6;
        java.util.HashMap r1, r12;
        java.lang.String r2, $r10;
        java.lang.StringBuilder $r8, $r9, r13;
        byte[] r11;
        java.io.IOException r14;
        androidx.media3.datasource.cache.DefaultContentMetadata r15;
        java.lang.Throwable r16;

        r0 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        r12 = new java.util.HashMap;

        specialinvoke r12.<java.util.HashMap: void <init>()>();

        r1 = r12;

        i4 = 0;

     label1:
        if i4 >= i0 goto label5;

        r2 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        i1 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        if i1 >= 0 goto label2;

        r14 = new java.io.IOException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value size: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.io.IOException: void <init>(java.lang.String)>($r10);

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label2:
        i5 = 0;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i1, 10485760);

        r11 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

     label3:
        if i5 == i1 goto label4;

        $i2 = i5 + i6;

        r11 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r11, $i2);

        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[],int,int)>(r11, i5, i6);

        i5 = i5 + i6;

        $i3 = i1 - i5;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 10485760);

        goto label3;

     label4:
        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r11);

        i4 = i4 + 1;

        goto label1;

     label5:
        r15 = new androidx.media3.datasource.cache.DefaultContentMetadata;

        specialinvoke r15.<androidx.media3.datasource.cache.DefaultContentMetadata: void <init>(java.util.Map)>(r1);

        return r15;
    }

    private static void writeContentMetadata(androidx.media3.datasource.cache.DefaultContentMetadata, java.io.DataOutputStream) throws java.io.IOException
    {
        androidx.media3.datasource.cache.DefaultContentMetadata r0;
        java.io.DataOutputStream r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        byte[] r5;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @parameter0: androidx.media3.datasource.cache.DefaultContentMetadata;

        r1 := @parameter1: java.io.DataOutputStream;

        r2 = virtualinvoke r0.<androidx.media3.datasource.cache.DefaultContentMetadata: java.util.Set entrySet()>();

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r8);

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (byte[]) $r9;

        $i1 = lengthof r5;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        virtualinvoke r1.<java.io.DataOutputStream: void write(byte[])>(r5);

        goto label1;

     label2:
        return;
    }

    static javax.crypto.Cipher access$000() throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException
    {
        javax.crypto.Cipher $r0;

        $r0 = staticinvoke <androidx.media3.datasource.cache.CachedContentIndex: javax.crypto.Cipher getCipher()>();

        return $r0;
    }

    static androidx.media3.datasource.cache.DefaultContentMetadata access$100(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        androidx.media3.datasource.cache.DefaultContentMetadata $r1;

        r0 := @parameter0: java.io.DataInputStream;

        $r1 = staticinvoke <androidx.media3.datasource.cache.CachedContentIndex: androidx.media3.datasource.cache.DefaultContentMetadata readContentMetadata(java.io.DataInputStream)>(r0);

        return $r1;
    }

    static void access$200(androidx.media3.datasource.cache.DefaultContentMetadata, java.io.DataOutputStream) throws java.io.IOException
    {
        androidx.media3.datasource.cache.DefaultContentMetadata r0;
        java.io.DataOutputStream r1;

        r0 := @parameter0: androidx.media3.datasource.cache.DefaultContentMetadata;

        r1 := @parameter1: java.io.DataOutputStream;

        staticinvoke <androidx.media3.datasource.cache.CachedContentIndex: void writeContentMetadata(androidx.media3.datasource.cache.DefaultContentMetadata,java.io.DataOutputStream)>(r0, r1);

        return;
    }

