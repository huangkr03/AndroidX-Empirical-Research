androidx.media3.exoplayer.source.MergingMediaPeriod
<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>
<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.IdentityHashMap streamPeriodIndices>
<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>
<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>
<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.HashMap childTrackGroupByMergedTrackGroup>
<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback>
<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>
<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>
<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader>
    public transient void <init>(androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory, long[], androidx.media3.exoplayer.source.MediaPeriod[])
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r1;
        long[] r2;
        androidx.media3.exoplayer.source.MediaPeriod[] r3, $r9, $r12;
        java.util.ArrayList $r4;
        java.util.HashMap $r5;
        androidx.media3.exoplayer.source.SequenceableLoader[] $r6;
        androidx.media3.exoplayer.source.SequenceableLoader $r7;
        java.util.IdentityHashMap $r8;
        int $i0, i4;
        long $l1, $l3;
        byte $b2;
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod $r10;
        androidx.media3.exoplayer.source.MediaPeriod $r11;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        r2 := @parameter1: long[];

        r3 := @parameter2: androidx.media3.exoplayer.source.MediaPeriod[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = r1;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods> = r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.HashMap childTrackGroupByMergedTrackGroup> = $r5;

        $r6 = newarray (androidx.media3.exoplayer.source.SequenceableLoader)[0];

        $r7 = interfaceinvoke r1.<androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory: androidx.media3.exoplayer.source.SequenceableLoader createCompositeSequenceableLoader(androidx.media3.exoplayer.source.SequenceableLoader[])>($r6);

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader> = $r7;

        $r8 = new java.util.IdentityHashMap;

        specialinvoke $r8.<java.util.IdentityHashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.IdentityHashMap streamPeriodIndices> = $r8;

        $r9 = newarray (androidx.media3.exoplayer.source.MediaPeriod)[0];

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods> = $r9;

        i4 = 0;

     label1:
        $i0 = lengthof r3;

        if i4 >= $i0 goto label3;

        $l1 = r2[i4];

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label2;

        $r12 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r10 = new androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r11 = r3[i4];

        $l3 = r2[i4];

        specialinvoke $r10.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: void <init>(androidx.media3.exoplayer.source.MediaPeriod,long)>($r11, $l3);

        $r12[i4] = $r10;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod getChildPeriod(int)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        int i0;
        androidx.media3.exoplayer.source.MediaPeriod[] $r1, $r3, $r4;
        androidx.media3.exoplayer.source.MediaPeriod $r2, $r5, $r7;
        boolean $z0;
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod $r6;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r2 = $r1[i0];

        $z0 = $r2 instanceof androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r5 = $r4[i0];

        $r6 = (androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod) $r5;

        $r7 = staticinvoke <androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod access$000(androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod)>($r6);

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r7 = $r3[i0];

     label2:
        return $r7;
    }

    public void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback, long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod$Callback r1;
        long l0;
        androidx.media3.exoplayer.source.MediaPeriod[] r2, $r4;
        int i1, i2;
        androidx.media3.exoplayer.source.MediaPeriod r3;
        java.util.ArrayList $r5;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod$Callback;

        l0 := @parameter1: long;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback> = r1;

        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r5, $r4);

        r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r3 = r2[i2];

        interfaceinvoke r3.<androidx.media3.exoplayer.source.MediaPeriod: void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long)>(r0, l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void maybeThrowPrepareError() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod[] r1;
        int i0, i1;
        androidx.media3.exoplayer.source.MediaPeriod r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaPeriod: void maybeThrowPrepareError()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.TrackGroupArray $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.source.TrackGroupArray) $r2;

        return $r3;
    }

    public long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[], boolean[], androidx.media3.exoplayer.source.SampleStream[], boolean[], long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r1, r55;
        boolean[] r2, r4;
        androidx.media3.exoplayer.source.SampleStream[] r3, r53, r54;
        int[] r5, r6;
        java.util.ArrayList r7, $r11;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r8, $r32, $r44, $r45;
        androidx.media3.exoplayer.source.SampleStream r9, $r24, $r25, $r27, $r40, $r41, $r56;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i20, $i21, i22, i23, i25, $i26;
        java.util.IdentityHashMap $r10, $r28, $r42;
        androidx.media3.exoplayer.source.MediaPeriod[] $r12, $r13, $r14, $r16, $r17, $r20, $r22;
        java.lang.Object[] $r15;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r18;
        androidx.media3.exoplayer.source.SequenceableLoader $r19;
        androidx.media3.exoplayer.source.MediaPeriod $r21, $r23;
        byte $b10;
        java.lang.Object $r26, $r33, $r35, $r37, $r43;
        java.lang.Integer $r29, $r50, r51;
        java.lang.IllegalStateException $r31;
        java.util.HashMap $r34;
        androidx.media3.common.TrackGroup $r36, r52, r57, r58;
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection $r38;
        java.lang.String $r46, $r47, $r48;
        long l19, l24;
        boolean z1, $z2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection[];

        r2 := @parameter1: boolean[];

        r3 := @parameter2: androidx.media3.exoplayer.source.SampleStream[];

        r4 := @parameter3: boolean[];

        l19 := @parameter4: long;

        $i0 = lengthof r1;

        r5 = newarray (int)[$i0];

        $i1 = lengthof r1;

        r6 = newarray (int)[$i1];

        i20 = 0;

     label01:
        $i2 = lengthof r1;

        if i20 >= $i2 goto label08;

        $r40 = r3[i20];

        if $r40 != null goto label02;

        $r50 = null;

        goto label03;

     label02:
        $r42 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.IdentityHashMap streamPeriodIndices>;

        $r41 = r3[i20];

        $r43 = virtualinvoke $r42.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r41);

        $r50 = (java.lang.Integer) $r43;

     label03:
        r51 = $r50;

        $i18 = i20;

        if r51 != null goto label04;

        $i21 = -1;

        goto label05;

     label04:
        $i21 = virtualinvoke r51.<java.lang.Integer: int intValue()>();

     label05:
        r5[$i18] = $i21;

        $r44 = r1[i20];

        if $r44 == null goto label06;

        $r45 = r1[i20];

        r52 = interfaceinvoke $r45.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.TrackGroup getTrackGroup()>();

        $r47 = r52.<androidx.media3.common.TrackGroup: java.lang.String id>;

        $r46 = r52.<androidx.media3.common.TrackGroup: java.lang.String id>;

        $i16 = virtualinvoke $r46.<java.lang.String: int indexOf(java.lang.String)>(":");

        $r48 = virtualinvoke $r47.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r48);

        r6[i20] = $i17;

        goto label07;

     label06:
        r6[i20] = -1;

     label07:
        i20 = i20 + 1;

        goto label01;

     label08:
        $r10 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.IdentityHashMap streamPeriodIndices>;

        virtualinvoke $r10.<java.util.IdentityHashMap: void clear()>();

        $i3 = lengthof r1;

        r53 = newarray (androidx.media3.exoplayer.source.SampleStream)[$i3];

        $i4 = lengthof r1;

        r54 = newarray (androidx.media3.exoplayer.source.SampleStream)[$i4];

        $i5 = lengthof r1;

        r55 = newarray (androidx.media3.exoplayer.trackselection.ExoTrackSelection)[$i5];

        $r11 = new java.util.ArrayList;

        $r12 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $i6 = lengthof $r12;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i6);

        r7 = $r11;

        i22 = 0;

     label09:
        $r13 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $i7 = lengthof $r13;

        if i22 >= $i7 goto label25;

        i23 = 0;

     label10:
        $i9 = lengthof r1;

        if i23 >= $i9 goto label15;

        $i15 = i23;

        $i13 = r5[i23];

        if $i13 != i22 goto label11;

        $r56 = r3[i23];

        goto label12;

     label11:
        $r56 = null;

     label12:
        r54[$i15] = $r56;

        $i14 = r6[i23];

        if $i14 != i22 goto label13;

        $r32 = r1[i23];

        $r33 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r32);

        r8 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection) $r33;

        r57 = interfaceinvoke r8.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.TrackGroup getTrackGroup()>();

        $r34 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.HashMap childTrackGroupByMergedTrackGroup>;

        $r35 = virtualinvoke $r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r57);

        $r36 = (androidx.media3.common.TrackGroup) $r35;

        $r37 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r36);

        r58 = (androidx.media3.common.TrackGroup) $r37;

        $r38 = new androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        specialinvoke $r38.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: void <init>(androidx.media3.exoplayer.trackselection.ExoTrackSelection,androidx.media3.common.TrackGroup)>(r8, r58);

        r55[i23] = $r38;

        goto label14;

     label13:
        r55[i23] = null;

     label14:
        i23 = i23 + 1;

        goto label10;

     label15:
        $r20 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r21 = $r20[i22];

        l24 = interfaceinvoke $r21.<androidx.media3.exoplayer.source.MediaPeriod: long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long)>(r55, r2, r54, r4, l19);

        if i22 != 0 goto label16;

        l19 = l24;

        goto label17;

     label16:
        $b10 = l24 cmp l19;

        if $b10 == 0 goto label17;

        $r31 = new java.lang.IllegalStateException;

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Children enabled at different positions.");

        throw $r31;

     label17:
        z1 = 0;

        i25 = 0;

     label18:
        $i26 = lengthof r1;

        if i25 >= $i26 goto label23;

        $i11 = r6[i25];

        if $i11 != i22 goto label19;

        $r25 = r54[i25];

        $r26 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r25);

        r9 = (androidx.media3.exoplayer.source.SampleStream) $r26;

        $r27 = r54[i25];

        r53[i25] = $r27;

        z1 = 1;

        $r28 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.IdentityHashMap streamPeriodIndices>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        virtualinvoke $r28.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r29);

        goto label22;

     label19:
        $i12 = r5[i25];

        if $i12 != i22 goto label22;

        $r24 = r54[i25];

        if $r24 != null goto label20;

        $z2 = 1;

        goto label21;

     label20:
        $z2 = 0;

     label21:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

     label22:
        i25 = i25 + 1;

        goto label18;

     label23:
        if z1 == 0 goto label24;

        $r22 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r23 = $r22[i22];

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label24:
        i22 = i22 + 1;

        goto label09;

     label25:
        $i8 = lengthof r53;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r53, 0, r3, 0, $i8);

        $r14 = newarray (androidx.media3.exoplayer.source.MediaPeriod)[0];

        $r15 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (androidx.media3.exoplayer.source.MediaPeriod[]) $r15;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods> = $r16;

        $r18 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $r17 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        $r19 = interfaceinvoke $r18.<androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory: androidx.media3.exoplayer.source.SequenceableLoader createCompositeSequenceableLoader(androidx.media3.exoplayer.source.SequenceableLoader[])>($r17);

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader> = $r19;

        return l19;
    }

    public void discardBuffer(long, boolean)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        long l0;
        boolean z0;
        androidx.media3.exoplayer.source.MediaPeriod[] r1;
        int i1, i2;
        androidx.media3.exoplayer.source.MediaPeriod r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r2 = r1[i2];

        interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaPeriod: void discardBuffer(long,boolean)>(l0, z0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void reevaluateBuffer(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        long l0;
        androidx.media3.exoplayer.source.SequenceableLoader $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.SequenceableLoader: void reevaluateBuffer(long)>(l0);

        return;
    }

    public boolean continueLoading(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        long l0;
        int i1, i2;
        java.util.ArrayList $r1, $r3, $r4;
        boolean $z0, $z1;
        androidx.media3.exoplayer.source.SequenceableLoader $r2;
        java.lang.Object $r5;
        androidx.media3.exoplayer.source.MediaPeriod $r6;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6 = (androidx.media3.exoplayer.source.MediaPeriod) $r5;

        interfaceinvoke $r6.<androidx.media3.exoplayer.source.MediaPeriod: boolean continueLoading(long)>(l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return 0;

     label3:
        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader>;

        $z1 = interfaceinvoke $r2.<androidx.media3.exoplayer.source.SequenceableLoader: boolean continueLoading(long)>(l0);

        return $z1;
    }

    public boolean isLoading()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.SequenceableLoader $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader>;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.SequenceableLoader: boolean isLoading()>();

        return $z0;
    }

    public long getNextLoadPositionUs()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.SequenceableLoader $r1;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader>;

        $l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.SequenceableLoader: long getNextLoadPositionUs()>();

        return $l0;
    }

    public long readDiscontinuity()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod[] r1, r3;
        int i0, i2, i12, i13;
        androidx.media3.exoplayer.source.MediaPeriod r2, r4;
        long l1, $l5, $l9, l11;
        byte $b3, $b4, $b6, $b7, $b8, $b10;
        java.lang.IllegalStateException $r5, $r6, $r7;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        l11 = -9223372036854775807L;

        r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        i0 = lengthof r1;

        i12 = 0;

     label1:
        if i12 >= i0 goto label9;

        r2 = r1[i12];

        l1 = interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaPeriod: long readDiscontinuity()>();

        $b3 = l1 cmp -9223372036854775807L;

        if $b3 == 0 goto label7;

        $b7 = l11 cmp -9223372036854775807L;

        if $b7 != 0 goto label6;

        l11 = l1;

        r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        i2 = lengthof r3;

        i13 = 0;

     label2:
        if i13 >= i2 goto label5;

        r4 = r3[i13];

        if r4 != r2 goto label3;

        goto label5;

     label3:
        $l9 = interfaceinvoke r4.<androidx.media3.exoplayer.source.MediaPeriod: long seekToUs(long)>(l11);

        $b10 = $l9 cmp l11;

        if $b10 == 0 goto label4;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected child seekToUs result.");

        throw $r7;

     label4:
        i13 = i13 + 1;

        goto label2;

     label5:
        goto label8;

     label6:
        $b8 = l1 cmp l11;

        if $b8 == 0 goto label8;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Conflicting discontinuities.");

        throw $r6;

     label7:
        $b4 = l11 cmp -9223372036854775807L;

        if $b4 == 0 goto label8;

        $l5 = interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaPeriod: long seekToUs(long)>(l11);

        $b6 = $l5 cmp l11;

        if $b6 == 0 goto label8;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected child seekToUs result.");

        throw $r5;

     label8:
        i12 = i12 + 1;

        goto label1;

     label9:
        return l11;
    }

    public long getBufferedPositionUs()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.SequenceableLoader $r1;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader>;

        $l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.SequenceableLoader: long getBufferedPositionUs()>();

        return $l0;
    }

    public long seekToUs(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod[] $r1, $r3, $r4;
        androidx.media3.exoplayer.source.MediaPeriod $r2, $r5;
        int $i0, i5;
        long $l1, l3, l4;
        byte $b2;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        l3 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        $r2 = $r1[0];

        l4 = interfaceinvoke $r2.<androidx.media3.exoplayer.source.MediaPeriod: long seekToUs(long)>(l3);

        i5 = 1;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        $i0 = lengthof $r3;

        if i5 >= $i0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        $r5 = $r4[i5];

        $l1 = interfaceinvoke $r5.<androidx.media3.exoplayer.source.MediaPeriod: long seekToUs(long)>(l4);

        $b2 = $l1 cmp l4;

        if $b2 == 0 goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected child seekToUs result.");

        throw $r6;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return l4;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        long l0, $l2;
        androidx.media3.exoplayer.SeekParameters r1;
        androidx.media3.exoplayer.source.MediaPeriod r2, $r6;
        androidx.media3.exoplayer.source.MediaPeriod[] $r3, $r4, $r5;
        int $i1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        $i1 = lengthof $r3;

        if $i1 <= 0 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods>;

        $r6 = $r5[0];

        goto label2;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r6 = $r4[0];

     label2:
        r2 = $r6;

        $l2 = interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaPeriod: long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters)>(l0, r1);

        return $l2;
    }

    public void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod r1, $r12, r23;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        androidx.media3.common.TrackGroup r2, r3;
        java.util.ArrayList $r4, $r5;
        boolean $z1;
        androidx.media3.exoplayer.source.MediaPeriod[] $r6, $r11, r22;
        androidx.media3.exoplayer.source.TrackGroupArray $r7, $r21, r25;
        androidx.media3.exoplayer.source.MediaPeriod$Callback $r8, $r10;
        java.lang.Object $r9;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;
        java.lang.String $r16, $r18;
        java.util.HashMap $r19;
        androidx.media3.common.TrackGroup[] r24;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.ArrayList childrenPendingPreparation>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        i4 = 0;

        r22 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        i5 = lengthof r22;

        i6 = 0;

     label2:
        if i6 >= i5 goto label3;

        r23 = r22[i6];

        $r21 = interfaceinvoke r23.<androidx.media3.exoplayer.source.MediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()>();

        $i3 = $r21.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        i4 = i4 + $i3;

        i6 = i6 + 1;

        goto label2;

     label3:
        r24 = newarray (androidx.media3.common.TrackGroup)[i4];

        i7 = 0;

        i8 = 0;

     label4:
        $r6 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $i1 = lengthof $r6;

        if i8 >= $i1 goto label7;

        $r11 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod[] periods>;

        $r12 = $r11[i8];

        r25 = interfaceinvoke $r12.<androidx.media3.exoplayer.source.MediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()>();

        i0 = r25.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        i9 = 0;

     label5:
        if i9 >= i0 goto label6;

        r2 = virtualinvoke r25.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i9);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r16 = r2.<androidx.media3.common.TrackGroup: java.lang.String id>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke r2.<androidx.media3.common.TrackGroup: androidx.media3.common.TrackGroup copyWithId(java.lang.String)>($r18);

        $r19 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: java.util.HashMap childTrackGroupByMergedTrackGroup>;

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

        $i2 = i7;

        i7 = i7 + 1;

        r24[$i2] = r3;

        i9 = i9 + 1;

        goto label5;

     label6:
        i8 = i8 + 1;

        goto label4;

     label7:
        $r7 = new androidx.media3.exoplayer.source.TrackGroupArray;

        specialinvoke $r7.<androidx.media3.exoplayer.source.TrackGroupArray: void <init>(androidx.media3.common.TrackGroup[])>(r24);

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroups> = $r7;

        $r8 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback>;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (androidx.media3.exoplayer.source.MediaPeriod$Callback) $r9;

        interfaceinvoke $r10.<androidx.media3.exoplayer.source.MediaPeriod$Callback: void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)>(r0);

        return;
    }

    public void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.source.MediaPeriod$Callback $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.exoplayer.source.MediaPeriod$Callback) $r3;

        interfaceinvoke $r4.<androidx.media3.exoplayer.source.MediaPeriod$Callback: void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)>(r0);

        return;
    }

    public volatile void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod r0;
        androidx.media3.exoplayer.source.SequenceableLoader r1;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.SequenceableLoader;

        $r2 = (androidx.media3.exoplayer.source.MediaPeriod) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.source.MergingMediaPeriod: void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod)>($r2);

        return;
    }

androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection
<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>
<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.common.TrackGroup trackGroup>
    public void <init>(androidx.media3.exoplayer.trackselection.ExoTrackSelection, androidx.media3.common.TrackGroup)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r1;
        androidx.media3.common.TrackGroup r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection;

        r2 := @parameter1: androidx.media3.common.TrackGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection> = r1;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.common.TrackGroup trackGroup> = r2;

        return;
    }

    public int getType()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getType()>();

        return $i0;
    }

    public androidx.media3.common.TrackGroup getTrackGroup()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.common.TrackGroup $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.common.TrackGroup trackGroup>;

        return $r1;
    }

    public int length()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        return $i0;
    }

    public androidx.media3.common.Format getFormat(int)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        int i0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        androidx.media3.common.Format $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getFormat(int)>(i0);

        return $r2;
    }

    public int getIndexInTrackGroup(int)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        int i0, $i1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i1 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>(i0);

        return $i1;
    }

    public int indexOf(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.common.Format r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i0 = interfaceinvoke $r2.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int indexOf(androidx.media3.common.Format)>(r1);

        return $i0;
    }

    public int indexOf(int)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        int i0, $i1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i1 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int indexOf(int)>(i0);

        return $i1;
    }

    public void enable()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void enable()>();

        return;
    }

    public void disable()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void disable()>();

        return;
    }

    public androidx.media3.common.Format getSelectedFormat()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        androidx.media3.common.Format $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getSelectedFormat()>();

        return $r2;
    }

    public int getSelectedIndexInTrackGroup()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndexInTrackGroup()>();

        return $i0;
    }

    public int getSelectedIndex()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndex()>();

        return $i0;
    }

    public int getSelectionReason()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectionReason()>();

        return $i0;
    }

    public java.lang.Object getSelectionData()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: java.lang.Object getSelectionData()>();

        return $r2;
    }

    public void onPlaybackSpeed(float)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        float f0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void onPlaybackSpeed(float)>(f0);

        return;
    }

    public void onDiscontinuity()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void onDiscontinuity()>();

        return;
    }

    public void onRebuffer()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void onRebuffer()>();

        return;
    }

    public void onPlayWhenReadyChanged(boolean)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        boolean z0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void onPlayWhenReadyChanged(boolean)>(z0);

        return;
    }

    public void updateSelectedTrack(long, long, long, java.util.List, androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        long l0, l1, l2;
        java.util.List r1;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r2;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: java.util.List;

        r2 := @parameter4: androidx.media3.exoplayer.source.chunk.MediaChunkIterator[];

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])>(l0, l1, l2, r1, r2);

        return;
    }

    public int evaluateQueueSize(long, java.util.List)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        long l0;
        java.util.List r1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r2;
        int $i1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i1 = interfaceinvoke $r2.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int evaluateQueueSize(long,java.util.List)>(l0, r1);

        return $i1;
    }

    public boolean shouldCancelChunkLoad(long, androidx.media3.exoplayer.source.chunk.Chunk, java.util.List)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        long l0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        java.util.List r2;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.source.chunk.Chunk;

        r2 := @parameter2: java.util.List;

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z0 = interfaceinvoke $r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean shouldCancelChunkLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List)>(l0, r1, r2);

        return $z0;
    }

    public boolean blacklist(int, long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        int i0;
        long l1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean blacklist(int,long)>(i0, l1);

        return $z0;
    }

    public boolean isBlacklisted(int, long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        int i0;
        long l1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean isBlacklisted(int,long)>(i0, l1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3, $r4;
        androidx.media3.common.TrackGroup $r5, $r6;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection) r1;

        $r4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r3 = r2.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.common.TrackGroup trackGroup>;

        $r5 = r2.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.common.TrackGroup trackGroup>;

        $z2 = virtualinvoke $r6.<androidx.media3.common.TrackGroup: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int hashCode()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection r0;
        androidx.media3.common.TrackGroup $r1;
        int $i0, $i1, $i2, $i3, i5, i6;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r2;
        byte b4;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection;

        b4 = 17;

        $i0 = 31 * b4;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.common.TrackGroup trackGroup>;

        $i1 = virtualinvoke $r1.<androidx.media3.common.TrackGroup: int hashCode()>();

        i5 = $i0 + $i1;

        $i2 = 31 * i5;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod
<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>
<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>
<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback>
    public void <init>(androidx.media3.exoplayer.source.MediaPeriod, long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod> = r1;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs> = l0;

        return;
    }

    public void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback, long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod$Callback r1;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod$Callback;

        l0 := @parameter1: long;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback> = r1;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l2 = l0 - $l1;

        interfaceinvoke $r2.<androidx.media3.exoplayer.source.MediaPeriod: void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long)>(r0, $l2);

        return;
    }

    public void maybeThrowPrepareError() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: void maybeThrowPrepareError()>();

        return;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        androidx.media3.exoplayer.source.TrackGroupArray $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()>();

        return $r2;
    }

    public java.util.List getStreamKeys(java.util.List)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        java.util.List r1, $r3;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $r3 = interfaceinvoke $r2.<androidx.media3.exoplayer.source.MediaPeriod: java.util.List getStreamKeys(java.util.List)>(r1);

        return $r3;
    }

    public long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[], boolean[], androidx.media3.exoplayer.source.SampleStream[], boolean[], long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r1;
        boolean[] r2, r4;
        androidx.media3.exoplayer.source.SampleStream[] r3, r5;
        long l0, $l3, $l4, $l6, $l7, $l8, l11;
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r6, $r10, $r12;
        androidx.media3.exoplayer.source.SampleStream r7, $r9, $r11, $r13, $r14, $r16;
        int $i1, $i2, $i5, $i9, i10, i12;
        androidx.media3.exoplayer.source.MediaPeriod $r8;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection[];

        r2 := @parameter1: boolean[];

        r3 := @parameter2: androidx.media3.exoplayer.source.SampleStream[];

        r4 := @parameter3: boolean[];

        l0 := @parameter4: long;

        $i1 = lengthof r3;

        r5 = newarray (androidx.media3.exoplayer.source.SampleStream)[$i1];

        i10 = 0;

     label1:
        $i2 = lengthof r3;

        if i10 >= $i2 goto label4;

        $r14 = r3[i10];

        r6 = (androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream) $r14;

        $i9 = i10;

        if r6 == null goto label2;

        $r16 = virtualinvoke r6.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream getChildStream()>();

        goto label3;

     label2:
        $r16 = null;

     label3:
        r5[$i9] = $r16;

        i10 = i10 + 1;

        goto label1;

     label4:
        $r8 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l4 = l0 - $l3;

        l11 = interfaceinvoke $r8.<androidx.media3.exoplayer.source.MediaPeriod: long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long)>(r1, r2, r5, r4, $l4);

        i12 = 0;

     label5:
        $i5 = lengthof r3;

        if i12 >= $i5 goto label9;

        r7 = r5[i12];

        if r7 != null goto label6;

        r3[i12] = null;

        goto label8;

     label6:
        $r9 = r3[i12];

        if $r9 == null goto label7;

        $r11 = r3[i12];

        $r12 = (androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream) $r11;

        $r13 = virtualinvoke $r12.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream getChildStream()>();

        if $r13 == r7 goto label8;

     label7:
        $r10 = new androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        $l8 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        specialinvoke $r10.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: void <init>(androidx.media3.exoplayer.source.SampleStream,long)>(r7, $l8);

        r3[i12] = $r10;

     label8:
        i12 = i12 + 1;

        goto label5;

     label9:
        $l6 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l7 = l11 + $l6;

        return $l7;
    }

    public void discardBuffer(long, boolean)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l1, $l2;
        boolean z0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l2 = l0 - $l1;

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: void discardBuffer(long,boolean)>($l2, z0);

        return;
    }

    public long readDiscontinuity()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l2, $l3;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        byte $b1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: long readDiscontinuity()>();

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        $l3 = -9223372036854775807L;

        goto label2;

     label1:
        $l2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l3 = l0 + $l2;

     label2:
        return $l3;
    }

    public long seekToUs(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l1, $l2, $l3, $l4, $l5;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l2 = l0 - $l1;

        $l3 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: long seekToUs(long)>($l2);

        $l4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l5 = $l3 + $l4;

        return $l5;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l1, $l2, $l3, $l4, $l5;
        androidx.media3.exoplayer.SeekParameters r1;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l2 = l0 - $l1;

        $l3 = interfaceinvoke $r2.<androidx.media3.exoplayer.source.MediaPeriod: long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters)>($l2, r1);

        $l4 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l5 = $l3 + $l4;

        return $l5;
    }

    public long getBufferedPositionUs()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l2, $l3;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        byte $b1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: long getBufferedPositionUs()>();

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label1;

        $l3 = -9223372036854775808L;

        goto label2;

     label1:
        $l2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l3 = l0 + $l2;

     label2:
        return $l3;
    }

    public long getNextLoadPositionUs()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l2, $l3;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        byte $b1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: long getNextLoadPositionUs()>();

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label1;

        $l3 = -9223372036854775808L;

        goto label2;

     label1:
        $l2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l3 = l0 + $l2;

     label2:
        return $l3;
    }

    public boolean continueLoading(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l2 = l0 - $l1;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: boolean continueLoading(long)>($l2);

        return $z0;
    }

    public boolean isLoading()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: boolean isLoading()>();

        return $z0;
    }

    public void reevaluateBuffer(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: long timeOffsetUs>;

        $l2 = l0 - $l1;

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: void reevaluateBuffer(long)>($l2);

        return;
    }

    public void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.source.MediaPeriod$Callback $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.exoplayer.source.MediaPeriod$Callback) $r3;

        interfaceinvoke $r4.<androidx.media3.exoplayer.source.MediaPeriod$Callback: void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)>(r0);

        return;
    }

    public void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.source.MediaPeriod$Callback $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback callback>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.exoplayer.source.MediaPeriod$Callback) $r3;

        interfaceinvoke $r4.<androidx.media3.exoplayer.source.MediaPeriod$Callback: void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)>(r0);

        return;
    }

    public volatile void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.SequenceableLoader r1;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.SequenceableLoader;

        $r2 = (androidx.media3.exoplayer.source.MediaPeriod) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod)>($r2);

        return;
    }

    static androidx.media3.exoplayer.source.MediaPeriod access$000(androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @parameter0: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        return $r1;
    }

androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream
<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream>
<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: long timeOffsetUs>
    public void <init>(androidx.media3.exoplayer.source.SampleStream, long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r0;
        androidx.media3.exoplayer.source.SampleStream r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        r1 := @parameter0: androidx.media3.exoplayer.source.SampleStream;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream> = r1;

        r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: long timeOffsetUs> = l0;

        return;
    }

    public androidx.media3.exoplayer.source.SampleStream getChildStream()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r0;
        androidx.media3.exoplayer.source.SampleStream $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream>;

        return $r1;
    }

    public boolean isReady()
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r0;
        androidx.media3.exoplayer.source.SampleStream $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream>;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.SampleStream: boolean isReady()>();

        return $z0;
    }

    public void maybeThrowError() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r0;
        androidx.media3.exoplayer.source.SampleStream $r1;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.SampleStream: void maybeThrowError()>();

        return;
    }

    public int readData(androidx.media3.exoplayer.FormatHolder, androidx.media3.decoder.DecoderInputBuffer, int)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r0;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.decoder.DecoderInputBuffer r2;
        int i0, i1;
        androidx.media3.exoplayer.source.SampleStream $r3;
        long $l2, $l3, $l4, $l5;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        r1 := @parameter0: androidx.media3.exoplayer.FormatHolder;

        r2 := @parameter1: androidx.media3.decoder.DecoderInputBuffer;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream>;

        i1 = interfaceinvoke $r3.<androidx.media3.exoplayer.source.SampleStream: int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int)>(r1, r2, i0);

        if i1 != -4 goto label1;

        $l3 = r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        $l2 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: long timeOffsetUs>;

        $l4 = $l3 + $l2;

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l4);

        r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs> = $l5;

     label1:
        return i1;
    }

    public int skipData(long)
    {
        androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream r0;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.SampleStream $r1;
        int $i3;

        r0 := @this: androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: androidx.media3.exoplayer.source.SampleStream sampleStream>;

        $l1 = r0.<androidx.media3.exoplayer.source.MergingMediaPeriod$TimeOffsetSampleStream: long timeOffsetUs>;

        $l2 = l0 - $l1;

        $i3 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.SampleStream: int skipData(long)>($l2);

        return $i3;
    }

