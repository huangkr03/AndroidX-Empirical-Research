androidx.compose.ui.Modifier
<androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion>
<androidx.compose.ui.Modifier: java.lang.Object foldIn(java.lang.Object,kotlin.jvm.functions.Function2)>
<androidx.compose.ui.Modifier: java.lang.Object foldOut(java.lang.Object,kotlin.jvm.functions.Function2)>
<androidx.compose.ui.Modifier: boolean any(kotlin.jvm.functions.Function1)>
<androidx.compose.ui.Modifier: boolean all(kotlin.jvm.functions.Function1)>
    public androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier)
    {
        androidx.compose.ui.Modifier r0, r1, $r4;
        androidx.compose.ui.Modifier$Companion $r2;
        androidx.compose.ui.CombinedModifier $r3;

        r0 := @this: androidx.compose.ui.Modifier;

        r1 := @parameter0: androidx.compose.ui.Modifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion>;

        if r1 != $r2 goto label1;

        $r4 = r0;

        goto label2;

     label1:
        $r3 = new androidx.compose.ui.CombinedModifier;

        specialinvoke $r3.<androidx.compose.ui.CombinedModifier: void <init>(androidx.compose.ui.Modifier,androidx.compose.ui.Modifier)>(r0, r1);

        $r4 = (androidx.compose.ui.Modifier) $r3;

     label2:
        return $r4;
    }

    public static androidx.compose.ui.Modifier access$then$jd(androidx.compose.ui.Modifier, androidx.compose.ui.Modifier)
    {
        androidx.compose.ui.Modifier $r0, r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.ui.Modifier;

        $r2 = specialinvoke $r0.<androidx.compose.ui.Modifier: androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.compose.ui.Modifier$Companion $r0;

        $r0 = <androidx.compose.ui.Modifier$Companion: androidx.compose.ui.Modifier$Companion $$INSTANCE>;

        <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion> = $r0;

        return;
    }

androidx.compose.ui.Modifier$Companion
<androidx.compose.ui.Modifier$Companion: androidx.compose.ui.Modifier$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.compose.ui.Modifier$Companion r0;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Companion r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        return r1;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Companion r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        return r1;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Companion r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        return 0;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Companion r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        return 1;
    }

    public androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier)
    {
        androidx.compose.ui.Modifier$Companion r0;
        androidx.compose.ui.Modifier r1;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        r1 := @parameter0: androidx.compose.ui.Modifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        return r1;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.Modifier$Companion r0;

        r0 := @this: androidx.compose.ui.Modifier$Companion;

        return "Modifier";
    }

    static void <clinit>()
    {
        androidx.compose.ui.Modifier$Companion $r0;

        $r0 = new androidx.compose.ui.Modifier$Companion;

        specialinvoke $r0.<androidx.compose.ui.Modifier$Companion: void <init>()>();

        <androidx.compose.ui.Modifier$Companion: androidx.compose.ui.Modifier$Companion $$INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.Modifier$DefaultImpls
    public static androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier, androidx.compose.ui.Modifier)
    {
        androidx.compose.ui.Modifier $r0, r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.ui.Modifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = staticinvoke <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier access$then$jd(androidx.compose.ui.Modifier,androidx.compose.ui.Modifier)>($r0, r1);

        return $r2;
    }

androidx.compose.ui.Modifier$Element$DefaultImpls
    public static java.lang.Object foldIn(androidx.compose.ui.Modifier$Element, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Element $r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        $r3 = staticinvoke <androidx.compose.ui.Modifier$Element: java.lang.Object access$foldIn$jd(androidx.compose.ui.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>($r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object foldOut(androidx.compose.ui.Modifier$Element, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Element $r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        $r3 = staticinvoke <androidx.compose.ui.Modifier$Element: java.lang.Object access$foldOut$jd(androidx.compose.ui.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>($r0, r1, r2);

        return $r3;
    }

    public static boolean any(androidx.compose.ui.Modifier$Element, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Element $r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $z0 = staticinvoke <androidx.compose.ui.Modifier$Element: boolean access$any$jd(androidx.compose.ui.Modifier$Element,kotlin.jvm.functions.Function1)>($r0, r1);

        return $z0;
    }

    public static boolean all(androidx.compose.ui.Modifier$Element, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Element $r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $z0 = staticinvoke <androidx.compose.ui.Modifier$Element: boolean access$all$jd(androidx.compose.ui.Modifier$Element,kotlin.jvm.functions.Function1)>($r0, r1);

        return $z0;
    }

    public static androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier$Element, androidx.compose.ui.Modifier)
    {
        androidx.compose.ui.Modifier$Element $r0;
        androidx.compose.ui.Modifier r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: androidx.compose.ui.Modifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = staticinvoke <androidx.compose.ui.Modifier$Element: androidx.compose.ui.Modifier access$then$jd(androidx.compose.ui.Modifier$Element,androidx.compose.ui.Modifier)>($r0, r1);

        return $r2;
    }

androidx.compose.ui.Modifier$Element
    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Element r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.ui.Modifier$Element;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        $r3 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, r0);

        return $r3;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Element r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.ui.Modifier$Element;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        $r3 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r3;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Element r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.Modifier$Element;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Element r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.Modifier$Element;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static java.lang.Object access$foldIn$jd(androidx.compose.ui.Modifier$Element, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Element $r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 = specialinvoke $r0.<androidx.compose.ui.Modifier$Element: java.lang.Object foldIn(java.lang.Object,kotlin.jvm.functions.Function2)>(r1, r2);

        return $r3;
    }

    public static java.lang.Object access$foldOut$jd(androidx.compose.ui.Modifier$Element, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier$Element $r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 = specialinvoke $r0.<androidx.compose.ui.Modifier$Element: java.lang.Object foldOut(java.lang.Object,kotlin.jvm.functions.Function2)>(r1, r2);

        return $r3;
    }

    public static boolean access$any$jd(androidx.compose.ui.Modifier$Element, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Element $r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = specialinvoke $r0.<androidx.compose.ui.Modifier$Element: boolean any(kotlin.jvm.functions.Function1)>(r1);

        return $z0;
    }

    public static boolean access$all$jd(androidx.compose.ui.Modifier$Element, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier$Element $r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = specialinvoke $r0.<androidx.compose.ui.Modifier$Element: boolean all(kotlin.jvm.functions.Function1)>(r1);

        return $z0;
    }

    public static androidx.compose.ui.Modifier access$then$jd(androidx.compose.ui.Modifier$Element, androidx.compose.ui.Modifier)
    {
        androidx.compose.ui.Modifier$Element $r0;
        androidx.compose.ui.Modifier r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: androidx.compose.ui.Modifier;

        $r2 = specialinvoke $r0.<androidx.compose.ui.Modifier$Element: androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier)>(r1);

        return $r2;
    }

androidx.compose.ui.Modifier$Node
<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node node>
<androidx.compose.ui.Modifier$Node: int kindSet>
<androidx.compose.ui.Modifier$Node: int aggregateChildKindSet>
<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node parent>
<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node child>
<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator coordinator>
<androidx.compose.ui.Modifier$Node: boolean isAttached>
<androidx.compose.ui.Modifier$Node: int $stable>
    public void <init>()
    {
        androidx.compose.ui.Modifier$Node r0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node node> = r0;

        return;
    }

    public final androidx.compose.ui.Modifier$Node getNode()
    {
        androidx.compose.ui.Modifier$Node r0, $r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $r1 = r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node node>;

        return $r1;
    }

    public static void getNode$annotations()
    {
        return;
    }

    public final int getKindSet$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0;
        int $i0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $i0 = r0.<androidx.compose.ui.Modifier$Node: int kindSet>;

        return $i0;
    }

    public final void setKindSet$ui_release(int)
    {
        androidx.compose.ui.Modifier$Node r0;
        int i0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        i0 := @parameter0: int;

        r0.<androidx.compose.ui.Modifier$Node: int kindSet> = i0;

        return;
    }

    public final int getAggregateChildKindSet$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0;
        int $i0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $i0 = r0.<androidx.compose.ui.Modifier$Node: int aggregateChildKindSet>;

        return $i0;
    }

    public final void setAggregateChildKindSet$ui_release(int)
    {
        androidx.compose.ui.Modifier$Node r0;
        int i0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        i0 := @parameter0: int;

        r0.<androidx.compose.ui.Modifier$Node: int aggregateChildKindSet> = i0;

        return;
    }

    public final androidx.compose.ui.Modifier$Node getParent$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0, $r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $r1 = r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node parent>;

        return $r1;
    }

    public final void setParent$ui_release(androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.ui.Modifier$Node r0, r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        r1 := @parameter0: androidx.compose.ui.Modifier$Node;

        r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node parent> = r1;

        return;
    }

    public final androidx.compose.ui.Modifier$Node getChild$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0, $r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $r1 = r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node child>;

        return $r1;
    }

    public final void setChild$ui_release(androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.ui.Modifier$Node r0, r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        r1 := @parameter0: androidx.compose.ui.Modifier$Node;

        r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node child> = r1;

        return;
    }

    public final androidx.compose.ui.node.NodeCoordinator getCoordinator$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0;
        androidx.compose.ui.node.NodeCoordinator $r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $r1 = r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator coordinator>;

        return $r1;
    }

    public final boolean isAttached()
    {
        androidx.compose.ui.Modifier$Node r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $z0 = r0.<androidx.compose.ui.Modifier$Node: boolean isAttached>;

        return $z0;
    }

    public void updateCoordinator$ui_release(androidx.compose.ui.node.NodeCoordinator)
    {
        androidx.compose.ui.Modifier$Node r0;
        androidx.compose.ui.node.NodeCoordinator r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        r1 := @parameter0: androidx.compose.ui.node.NodeCoordinator;

        r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator coordinator> = r1;

        return;
    }

    public final boolean isKind-H91voCI$ui_release(int)
    {
        androidx.compose.ui.Modifier$Node r0;
        int i0, $i1, $i2;
        boolean $z1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final void attach$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.node.NodeCoordinator $r1;
        java.lang.IllegalStateException $r2, $r4;
        java.lang.String $r3, $r5, r6, r7;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $z0 = r0.<androidx.compose.ui.Modifier$Node: boolean isAttached>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        r6 = "Check failed.";

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label3:
        $r1 = r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator coordinator>;

        if $r1 == null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        r7 = "Check failed.";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label6:
        r0.<androidx.compose.ui.Modifier$Node: boolean isAttached> = 1;

        virtualinvoke r0.<androidx.compose.ui.Modifier$Node: void onAttach()>();

        return;
    }

    public final void detach$ui_release()
    {
        androidx.compose.ui.Modifier$Node r0;
        boolean $z0, $z1;
        androidx.compose.ui.node.NodeCoordinator $r1;
        java.lang.IllegalStateException $r2, $r4;
        java.lang.String $r3, $r5, r6, r7;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        $z0 = r0.<androidx.compose.ui.Modifier$Node: boolean isAttached>;

        if $z0 != 0 goto label1;

        r6 = "Check failed.";

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator coordinator>;

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        r7 = "Check failed.";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label4:
        virtualinvoke r0.<androidx.compose.ui.Modifier$Node: void onDetach()>();

        r0.<androidx.compose.ui.Modifier$Node: boolean isAttached> = 0;

        return;
    }

    public void onAttach()
    {
        androidx.compose.ui.Modifier$Node r0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        return;
    }

    public void onDetach()
    {
        androidx.compose.ui.Modifier$Node r0;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        return;
    }

    public final void sideEffect(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.Modifier$Node r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.node.DelegatableNode $r2;
        androidx.compose.ui.node.Owner $r3;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "effect");

        $r2 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r3 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r2);

        interfaceinvoke $r3.<androidx.compose.ui.node.Owner: void registerOnEndApplyChangesListener(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public final void setAsDelegateTo$ui_release(androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.ui.Modifier$Node r0, r1;

        r0 := @this: androidx.compose.ui.Modifier$Node;

        r1 := @parameter0: androidx.compose.ui.Modifier$Node;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        r0.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node node> = r1;

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.Modifier$Node: int $stable> = 8;

        return;
    }

