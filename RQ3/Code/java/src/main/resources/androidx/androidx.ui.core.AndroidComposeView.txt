androidx.ui.core.AndroidComposeView
<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion Companion>
<androidx.ui.core.AndroidComposeView: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.core.AndroidComposeView: android.view.View view>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat accessibilityDelegate>
<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density density>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.focus.FocusModifierImpl focusModifier>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode root>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner semanticsOwner>
<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AutofillTree autofillTree>
<androidx.ui.core.AndroidComposeView: java.util.List dirtyLayers>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.Ref ref>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.MotionEventAdapter motionEventAdapter>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.PointerInputEventProcessor pointerInputEventProcessor>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.Constraints constraints>
<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function0 configurationChangeObserver>
<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill>
<androidx.ui.core.AndroidComposeView: long measureIteration>
<androidx.ui.core.AndroidComposeView: boolean duringMeasureLayout>
<androidx.ui.core.AndroidComposeView: java.util.List postponedMeasureRequests>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>
<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingMeasure>
<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayout>
<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayer>
<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayerParams>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher onPositionedDispatcher>
<androidx.ui.core.AndroidComposeView: boolean showLayoutBounds>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>
<androidx.ui.core.AndroidComposeView: kotlin.Lazy androidViewsHandler$delegate>
<androidx.ui.core.AndroidComposeView: kotlin.Lazy viewLayersContainer$delegate>
<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner lifecycleOwner>
<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onLifecycleAvailable>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 viewLifecycleOwner>
<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputServiceAndroid textInputServiceAndroid>
<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputService textInputService>
<androidx.ui.core.AndroidComposeView: androidx.ui.text.font.Font$ResourceLoader fontLoader>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.hapticfeedback.HapticFeedback hapticFeedBack>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.clipboard.ClipboardManager clipboardManager>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate>
<androidx.ui.core.AndroidComposeView: java.lang.Class systemPropertiesClass>
<androidx.ui.core.AndroidComposeView: java.lang.reflect.Method getBooleanMethod>
<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 RootMeasureBlocks>
    public void <init>(android.content.Context, androidx.lifecycle.LifecycleOwner)
    {
        androidx.ui.core.AndroidComposeView r0, r91, r93, r96;
        android.content.Context r1, $r14;
        androidx.lifecycle.LifecycleOwner r2;
        boolean z0, z1, $z3, $z4, $z5, z6, z7;
        androidx.ui.core.LayoutNode r3, $r10, $r26, $r32, $r53, $r81, r90, r92;
        android.content.res.Configuration r4;
        android.view.View $r5, $r56, $r67, $r74, $r87;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat $r6, $r54;
        androidx.ui.unit.Density $r7;
        androidx.ui.core.focus.FocusModifierImpl $r8, $r20;
        androidx.ui.focus.FocusDetailedState $r9;
        androidx.ui.core.AndroidComposeView$Companion $r11;
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 $r12;
        androidx.ui.core.LayoutNode$MeasureBlocks $r13;
        android.content.res.Resources $r15;
        androidx.ui.core.LayoutDirection $r16;
        androidx.ui.core.Modifier$Companion $r17;
        androidx.ui.core.Modifier $r18, $r19, $r21, $r22;
        androidx.ui.core.DepthSortedSet $r23, $r84;
        androidx.ui.core.Owner$Companion $r24, $r52;
        androidx.ui.core.semantics.SemanticsOwner $r25;
        androidx.ui.core.ComponentNode $r27;
        androidx.ui.autofill.AutofillTree $r28, $r88;
        java.util.ArrayList $r29, $r39;
        androidx.ui.core.pointerinput.MotionEventAdapter $r30;
        androidx.ui.core.pointerinput.PointerInputEventProcessor $r31;
        androidx.ui.unit.IntPx$Companion $r33, $r35;
        androidx.ui.core.Constraints$Companion $r34;
        int $i0, $i1, $i2;
        androidx.ui.core.Constraints $r36;
        androidx.ui.core.AndroidComposeView$configurationChangeObserver$1 $r37;
        kotlin.jvm.functions.Function0 $r38, $r59, $r63, $r80, $r85;
        androidx.ui.core.ModelObserver $r40;
        androidx.ui.core.AndroidComposeView$modelObserver$1 $r41;
        kotlin.jvm.functions.Function1 $r42, $r44, $r46, $r48, $r50;
        androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1 $r43;
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1 $r45;
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1 $r47;
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1 $r49;
        androidx.ui.core.OnPositionedDispatcher $r51;
        androidx.core.view.AccessibilityDelegateCompat $r55;
        androidx.ui.core.AndroidComposeView$androidViewsHandler$2 $r57;
        kotlin.LazyThreadSafetyMode $r58, $r62;
        kotlin.Lazy $r60, $r64;
        androidx.ui.core.AndroidComposeView$viewLayersContainer$2 $r61;
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 $r65;
        androidx.ui.input.TextInputServiceAndroid $r66, $r69;
        androidx.ui.input.TextInputService $r68;
        androidx.ui.input.PlatformTextInputService $r70;
        androidx.ui.core.text.AndroidFontResourceLoader $r71;
        androidx.ui.text.font.Font$ResourceLoader $r72;
        androidx.ui.core.hapticfeedback.AndroidHapticFeedback $r73;
        androidx.ui.core.hapticfeedback.HapticFeedback $r75;
        androidx.ui.core.clipboard.AndroidClipboardManager $r76;
        androidx.ui.core.clipboard.ClipboardManager $r77;
        androidx.ui.core.SavedStateDelegate $r78;
        androidx.ui.core.AndroidComposeView$savedStateDelegate$1 $r79;
        androidx.ui.core.AndroidComposeView$consistencyChecker$1 $r82;
        java.util.List $r83, r94, r97;
        androidx.ui.autofill.AndroidAutofill $r95;
        androidx.ui.core.LayoutTreeConsistencyChecker $r98;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        $r5 = (android.view.View) r0;

        r0.<androidx.ui.core.AndroidComposeView: android.view.View view> = $r5;

        $r6 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        specialinvoke $r6.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat accessibilityDelegate> = $r6;

        $r7 = staticinvoke <androidx.ui.unit.DensityKt: androidx.ui.unit.Density Density(android.content.Context)>(r1);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density density> = $r7;

        $r8 = new androidx.ui.core.focus.FocusModifierImpl;

        $r9 = <androidx.ui.focus.FocusDetailedState: androidx.ui.focus.FocusDetailedState Inactive>;

        specialinvoke $r8.<androidx.ui.core.focus.FocusModifierImpl: void <init>(androidx.ui.focus.FocusDetailedState,androidx.ui.core.focus.ModifiedFocusNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r9, null, 2, null);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.focus.FocusModifierImpl focusModifier> = $r8;

        $r10 = new androidx.ui.core.LayoutNode;

        specialinvoke $r10.<androidx.ui.core.LayoutNode: void <init>()>();

        r90 = $r10;

        r91 = r0;

        z0 = 0;

        z1 = 0;

        r3 = r90;

        $r11 = <androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion Companion>;

        $r12 = <androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 RootMeasureBlocks>;

        $r13 = (androidx.ui.core.LayoutNode$MeasureBlocks) $r12;

        virtualinvoke r3.<androidx.ui.core.LayoutNode: void setMeasureBlocks(androidx.ui.core.LayoutNode$MeasureBlocks)>($r13);

        $r14 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = virtualinvoke $r15.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "context.applicationContext.resources.configuration");

        $r16 = staticinvoke <androidx.ui.core.AndroidOwnerKt: androidx.ui.core.LayoutDirection getLocaleLayoutDirection(android.content.res.Configuration)>(r4);

        virtualinvoke r3.<androidx.ui.core.LayoutNode: void setLayoutDirection(androidx.ui.core.LayoutDirection)>($r16);

        $r17 = <androidx.ui.core.Modifier: androidx.ui.core.Modifier$Companion Companion>;

        $r18 = (androidx.ui.core.Modifier) $r17;

        $r19 = staticinvoke <androidx.ui.core.DrawLayerModifierKt: androidx.ui.core.Modifier drawLayer-Z3WMmso$default(androidx.ui.core.Modifier,float,float,float,float,float,float,float,float,float,long,androidx.ui.graphics.Shape,boolean,boolean,int,java.lang.Object)>($r18, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0L, null, 0, 0, 6143, null);

        $r20 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.focus.FocusModifierImpl focusModifier>;

        $r21 = (androidx.ui.core.Modifier) $r20;

        $r22 = interfaceinvoke $r19.<androidx.ui.core.Modifier: androidx.ui.core.Modifier plus(androidx.ui.core.Modifier)>($r21);

        virtualinvoke r3.<androidx.ui.core.LayoutNode: void setModifier(androidx.ui.core.Modifier)>($r22);

        r92 = r90;

        r91.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode root> = r92;

        $r23 = new androidx.ui.core.DepthSortedSet;

        $r24 = <androidx.ui.core.Owner: androidx.ui.core.Owner$Companion Companion>;

        $z3 = virtualinvoke $r24.<androidx.ui.core.Owner$Companion: boolean getEnableExtraAssertions()>();

        specialinvoke $r23.<androidx.ui.core.DepthSortedSet: void <init>(boolean)>($z3);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes> = $r23;

        $r25 = new androidx.ui.core.semantics.SemanticsOwner;

        $r26 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $r27 = (androidx.ui.core.ComponentNode) $r26;

        specialinvoke $r25.<androidx.ui.core.semantics.SemanticsOwner: void <init>(androidx.ui.core.ComponentNode)>($r27);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner semanticsOwner> = $r25;

        $r28 = new androidx.ui.autofill.AutofillTree;

        specialinvoke $r28.<androidx.ui.autofill.AutofillTree: void <init>()>();

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AutofillTree autofillTree> = $r28;

        r93 = r0;

        z6 = 0;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r94 = (java.util.List) $r29;

        r93.<androidx.ui.core.AndroidComposeView: java.util.List dirtyLayers> = r94;

        $r30 = new androidx.ui.core.pointerinput.MotionEventAdapter;

        specialinvoke $r30.<androidx.ui.core.pointerinput.MotionEventAdapter: void <init>()>();

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.MotionEventAdapter motionEventAdapter> = $r30;

        $r31 = new androidx.ui.core.pointerinput.PointerInputEventProcessor;

        $r32 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        specialinvoke $r31.<androidx.ui.core.pointerinput.PointerInputEventProcessor: void <init>(androidx.ui.core.LayoutNode)>($r32);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.PointerInputEventProcessor pointerInputEventProcessor> = $r31;

        $r34 = <androidx.ui.core.Constraints: androidx.ui.core.Constraints$Companion Companion>;

        $r33 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i0 = virtualinvoke $r33.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r35 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i1 = virtualinvoke $r35.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r36 = virtualinvoke $r34.<androidx.ui.core.Constraints$Companion: androidx.ui.core.Constraints fixed-rRMsBxU(int,int)>($i0, $i1);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Constraints constraints> = $r36;

        $r37 = new androidx.ui.core.AndroidComposeView$configurationChangeObserver$1;

        specialinvoke $r37.<androidx.ui.core.AndroidComposeView$configurationChangeObserver$1: void <init>()>();

        $r38 = (kotlin.jvm.functions.Function0) $r37;

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function0 configurationChangeObserver> = $r38;

        $z4 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: boolean autofillSupported()>();

        if $z4 == 0 goto label1;

        $r95 = new androidx.ui.autofill.AndroidAutofill;

        $r87 = (android.view.View) r0;

        $r88 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AutofillTree getAutofillTree()>();

        specialinvoke $r95.<androidx.ui.autofill.AndroidAutofill: void <init>(android.view.View,androidx.ui.autofill.AutofillTree)>($r87, $r88);

        goto label2;

     label1:
        $r95 = (androidx.ui.autofill.AndroidAutofill) null;

     label2:
        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill> = $r95;

        r0.<androidx.ui.core.AndroidComposeView: long measureIteration> = 1L;

        r96 = r0;

        z7 = 0;

        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>()>();

        r97 = (java.util.List) $r39;

        r96.<androidx.ui.core.AndroidComposeView: java.util.List postponedMeasureRequests> = r97;

        $r40 = new androidx.ui.core.ModelObserver;

        $r41 = new androidx.ui.core.AndroidComposeView$modelObserver$1;

        specialinvoke $r41.<androidx.ui.core.AndroidComposeView$modelObserver$1: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        $r42 = (kotlin.jvm.functions.Function1) $r41;

        specialinvoke $r40.<androidx.ui.core.ModelObserver: void <init>(kotlin.jvm.functions.Function1)>($r42);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver> = $r40;

        $r43 = new androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1;

        specialinvoke $r43.<androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        $r44 = (kotlin.jvm.functions.Function1) $r43;

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingMeasure> = $r44;

        $r45 = new androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1;

        specialinvoke $r45.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        $r46 = (kotlin.jvm.functions.Function1) $r45;

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayout> = $r46;

        $r47 = new androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1;

        specialinvoke $r47.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1: void <init>()>();

        $r48 = (kotlin.jvm.functions.Function1) $r47;

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayer> = $r48;

        $r49 = new androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1;

        specialinvoke $r49.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        $r50 = (kotlin.jvm.functions.Function1) $r49;

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayerParams> = $r50;

        $r51 = new androidx.ui.core.OnPositionedDispatcher;

        specialinvoke $r51.<androidx.ui.core.OnPositionedDispatcher: void <init>()>();

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher onPositionedDispatcher> = $r51;

        $r52 = <androidx.ui.core.Owner: androidx.ui.core.Owner$Companion Companion>;

        $z5 = virtualinvoke $r52.<androidx.ui.core.Owner$Companion: boolean getEnableExtraAssertions()>();

        if $z5 == 0 goto label3;

        $r98 = new androidx.ui.core.LayoutTreeConsistencyChecker;

        $r81 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $r82 = new androidx.ui.core.AndroidComposeView$consistencyChecker$1;

        specialinvoke $r82.<androidx.ui.core.AndroidComposeView$consistencyChecker$1: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        $r85 = (kotlin.jvm.functions.Function0) $r82;

        $r84 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>;

        $r83 = r0.<androidx.ui.core.AndroidComposeView: java.util.List postponedMeasureRequests>;

        specialinvoke $r98.<androidx.ui.core.LayoutTreeConsistencyChecker: void <init>(androidx.ui.core.LayoutNode,kotlin.jvm.functions.Function0,androidx.ui.core.DepthSortedSet,java.util.List)>($r81, $r85, $r84, $r83);

        goto label4;

     label3:
        $r98 = (androidx.ui.core.LayoutTreeConsistencyChecker) null;

     label4:
        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker> = $r98;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setFocusable(boolean)>(1);

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 26 goto label5;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setFocusable(int)>(1);

     label5:
        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setClipChildren(boolean)>(0);

        $r53 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        virtualinvoke $r53.<androidx.ui.core.LayoutNode: void setPlaced$ui_platform_release(boolean)>(1);

        $r56 = (android.view.View) r0;

        $r54 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat accessibilityDelegate>;

        $r55 = (androidx.core.view.AccessibilityDelegateCompat) $r54;

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>($r56, $r55);

        $r58 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r57 = new androidx.ui.core.AndroidComposeView$androidViewsHandler$2;

        specialinvoke $r57.<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: void <init>(android.content.Context,androidx.ui.core.AndroidComposeView)>(r1, r0);

        $r59 = (kotlin.jvm.functions.Function0) $r57;

        $r60 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r58, $r59);

        r0.<androidx.ui.core.AndroidComposeView: kotlin.Lazy androidViewsHandler$delegate> = $r60;

        $r62 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r61 = new androidx.ui.core.AndroidComposeView$viewLayersContainer$2;

        specialinvoke $r61.<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: void <init>(android.content.Context,androidx.ui.core.AndroidComposeView)>(r1, r0);

        $r63 = (kotlin.jvm.functions.Function0) $r61;

        $r64 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r62, $r63);

        r0.<androidx.ui.core.AndroidComposeView: kotlin.Lazy viewLayersContainer$delegate> = $r64;

        r0.<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner lifecycleOwner> = r2;

        $r65 = new androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1;

        specialinvoke $r65.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: void <init>()>();

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 viewLifecycleOwner> = $r65;

        $r66 = new androidx.ui.input.TextInputServiceAndroid;

        $r67 = (android.view.View) r0;

        specialinvoke $r66.<androidx.ui.input.TextInputServiceAndroid: void <init>(android.view.View)>($r67);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputServiceAndroid textInputServiceAndroid> = $r66;

        $r68 = new androidx.ui.input.TextInputService;

        $r69 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputServiceAndroid textInputServiceAndroid>;

        $r70 = (androidx.ui.input.PlatformTextInputService) $r69;

        specialinvoke $r68.<androidx.ui.input.TextInputService: void <init>(androidx.ui.input.PlatformTextInputService)>($r70);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputService textInputService> = $r68;

        $r71 = new androidx.ui.core.text.AndroidFontResourceLoader;

        specialinvoke $r71.<androidx.ui.core.text.AndroidFontResourceLoader: void <init>(android.content.Context)>(r1);

        $r72 = (androidx.ui.text.font.Font$ResourceLoader) $r71;

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.text.font.Font$ResourceLoader fontLoader> = $r72;

        $r73 = new androidx.ui.core.hapticfeedback.AndroidHapticFeedback;

        $r74 = (android.view.View) r0;

        specialinvoke $r73.<androidx.ui.core.hapticfeedback.AndroidHapticFeedback: void <init>(android.view.View)>($r74);

        $r75 = (androidx.ui.core.hapticfeedback.HapticFeedback) $r73;

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.hapticfeedback.HapticFeedback hapticFeedBack> = $r75;

        $r76 = new androidx.ui.core.clipboard.AndroidClipboardManager;

        specialinvoke $r76.<androidx.ui.core.clipboard.AndroidClipboardManager: void <init>(android.content.Context)>(r1);

        $r77 = (androidx.ui.core.clipboard.ClipboardManager) $r76;

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.clipboard.ClipboardManager clipboardManager> = $r77;

        $r78 = new androidx.ui.core.SavedStateDelegate;

        $r79 = new androidx.ui.core.AndroidComposeView$savedStateDelegate$1;

        specialinvoke $r79.<androidx.ui.core.AndroidComposeView$savedStateDelegate$1: void <init>(androidx.ui.core.AndroidComposeView)>(r0);

        $r80 = (kotlin.jvm.functions.Function0) $r79;

        specialinvoke $r78.<androidx.ui.core.SavedStateDelegate: void <init>(kotlin.jvm.functions.Function0)>($r80);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate> = $r78;

        return;
    }

    public android.view.View getView()
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.View $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: android.view.View view>;

        return $r1;
    }

    public androidx.ui.unit.Density getDensity()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.unit.Density $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density density>;

        return $r1;
    }

    public androidx.ui.core.LayoutNode getRoot()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode root>;

        return $r1;
    }

    public androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.semantics.SemanticsOwner $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner semanticsOwner>;

        return $r1;
    }

    public androidx.ui.autofill.AutofillTree getAutofillTree()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.autofill.AutofillTree $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AutofillTree autofillTree>;

        return $r1;
    }

    public final java.util.List getDirtyLayers$ui_platform_release()
    {
        androidx.ui.core.AndroidComposeView r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: java.util.List dirtyLayers>;

        return $r1;
    }

    public final androidx.ui.core.Ref getRef()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.Ref $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Ref ref>;

        return $r1;
    }

    public final void setRef(androidx.ui.core.Ref)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.Ref r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.Ref;

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Ref ref> = r1;

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.ui.core.Ref: void setValue(java.lang.Object)>(r0);

     label1:
        return;
    }

    public final androidx.ui.core.Constraints getConstraints()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.Constraints $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Constraints constraints>;

        return $r1;
    }

    public final void setConstraints(androidx.ui.core.Constraints)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.Constraints r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Constraints constraints> = r1;

        return;
    }

    public kotlin.jvm.functions.Function0 getConfigurationChangeObserver()
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function0 configurationChangeObserver>;

        return $r1;
    }

    public void setConfigurationChangeObserver(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function0 configurationChangeObserver> = r1;

        return;
    }

    public androidx.ui.autofill.Autofill getAutofill()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.autofill.AndroidAutofill $r1;
        androidx.ui.autofill.Autofill $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill>;

        $r2 = (androidx.ui.autofill.Autofill) $r1;

        return $r2;
    }

    public long getMeasureIteration()
    {
        androidx.ui.core.AndroidComposeView r0;
        boolean z0, z1, z3;
        long $l0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        z0 = r0.<androidx.ui.core.AndroidComposeView: boolean duringMeasureLayout>;

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        r4 = "measureIteration should be only used during the measure/layout pass";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label1:
        $l0 = r0.<androidx.ui.core.AndroidComposeView: long measureIteration>;

        return $l0;
    }

    public void dispatchWindowFocusChanged(boolean)
    {
        androidx.ui.core.AndroidComposeView r0;
        boolean z0, z1, z2;
        androidx.ui.core.focus.FocusModifierImpl r1, $r5;
        androidx.ui.focus.FocusDetailedState $r3, $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.focus.FocusModifierImpl focusModifier>;

        $r4 = <androidx.ui.focus.FocusDetailedState: androidx.ui.focus.FocusDetailedState Active>;

        virtualinvoke $r5.<androidx.ui.core.focus.FocusModifierImpl: void setFocusDetailedState(androidx.ui.focus.FocusDetailedState)>($r4);

        goto label2;

     label1:
        r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.focus.FocusModifierImpl focusModifier>;

        z1 = 0;

        z2 = 0;

        virtualinvoke r1.<androidx.ui.core.focus.FocusModifierImpl: void requestFocus()>();

        $r3 = <androidx.ui.focus.FocusDetailedState: androidx.ui.focus.FocusDetailedState Inactive>;

        virtualinvoke r1.<androidx.ui.core.focus.FocusModifierImpl: void setFocusDetailedState(androidx.ui.focus.FocusDetailedState)>($r3);

     label2:
        return;
    }

    public final kotlin.jvm.functions.Function1 getOnCommitAffectingLayer$ui_platform_release()
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayer>;

        return $r1;
    }

    public boolean getShowLayoutBounds()
    {
        androidx.ui.core.AndroidComposeView r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $z0 = r0.<androidx.ui.core.AndroidComposeView: boolean showLayoutBounds>;

        return $z0;
    }

    public void setShowLayoutBounds(boolean)
    {
        androidx.ui.core.AndroidComposeView r0;
        boolean z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.AndroidComposeView: boolean showLayoutBounds> = z0;

        return;
    }

    public void pauseModelReadObserveration(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.ui.core.ModelObserver $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        virtualinvoke $r2.<androidx.ui.core.ModelObserver: void pauseObservingReads(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public void onInvalidate(androidx.ui.core.DrawNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.DrawNode r1;
        androidx.ui.core.ComponentNode $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.DrawNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "drawNode");

        $r2 = (androidx.ui.core.ComponentNode) r1;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void invalidate(androidx.ui.core.ComponentNode)>($r2);

        return;
    }

    public void onInvalidate(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.ComponentNode $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $r2 = (androidx.ui.core.ComponentNode) r1;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void invalidate(androidx.ui.core.ComponentNode)>($r2);

        return;
    }

    private final void invalidate(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.ComponentNode r1;
        androidx.ui.core.OwnedLayer r2, $r6;
        androidx.ui.core.LayoutNodeWrapper r3, $r5;
        androidx.ui.core.LayoutNode r4;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        r4 = virtualinvoke r1.<androidx.ui.core.ComponentNode: androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()>();

        if r4 != null goto label1;

        $r5 = (androidx.ui.core.LayoutNodeWrapper) null;

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

     label2:
        r3 = $r5;

        if r3 != null goto label3;

        $r6 = (androidx.ui.core.OwnedLayer) null;

        goto label4;

     label3:
        $r6 = virtualinvoke r3.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.OwnedLayer findLayer()>();

     label4:
        r2 = $r6;

        if r2 != null goto label5;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void invalidate()>();

        goto label6;

     label5:
        interfaceinvoke r2.<androidx.ui.core.OwnedLayer: void invalidate()>();

     label6:
        return;
    }

    public void onRequestMeasure(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode r1, $r7, r13, r14, r15, r18, $r19;
        java.lang.String r2, $r10;
        androidx.ui.core.ComponentNode $r3;
        androidx.ui.core.Owner$Companion $r5;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11;
        java.util.List $r8, $r9;
        java.lang.Throwable $r11, r21;
        androidx.ui.core.LayoutTreeConsistencyChecker r12, r16, r17;
        kotlin.Unit r20;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        r2 = "AndroidOwner:onRequestMeasure";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r2);

     label01:
        $r3 = (androidx.ui.core.ComponentNode) r1;

        staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r3);

        $r5 = <androidx.ui.core.Owner: androidx.ui.core.Owner$Companion Companion>;

        $z2 = virtualinvoke $r5.<androidx.ui.core.Owner$Companion: boolean getEnableExtraAssertions()>();

        if $z2 == 0 goto label02;

        $r10 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("onRequestMeasure on ", r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidOwner", $r10);

     label02:
        $z3 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z3 == 0 goto label04;

     label03:
        staticinvoke <android.os.Trace: void endSection()>();

        return;

     label04:
        $z4 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z4 == 0 goto label06;

     label05:
        staticinvoke <android.os.Trace: void endSection()>();

        return;

     label06:
        $z5 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean isLayingOut()>();

        if $z5 == 0 goto label09;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void markRemeasureRequested(androidx.ui.core.LayoutNode)>(r1);

        $r9 = r0.<androidx.ui.core.AndroidComposeView: java.util.List postponedMeasureRequests>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1);

        r12 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        if r12 != null goto label07;

        goto label08;

     label07:
        virtualinvoke r12.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label08:
        staticinvoke <android.os.Trace: void endSection()>();

        return;

     label09:
        r13 = r1;

     label10:
        $z6 = virtualinvoke r13.<androidx.ui.core.LayoutNode: boolean getAffectsParentSize()>();

        if $z6 == 0 goto label19;

        $r7 = virtualinvoke r13.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if $r7 == null goto label19;

        r14 = virtualinvoke r13.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r14);

        r15 = r14;

        $z7 = virtualinvoke r15.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z7 != 0 goto label11;

        $z10 = virtualinvoke r15.<androidx.ui.core.LayoutNode: boolean isLayingOut()>();

        if $z10 == 0 goto label15;

     label11:
        $z8 = virtualinvoke r13.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z8 != 0 goto label12;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void markRemeasureRequested(androidx.ui.core.LayoutNode)>(r13);

        $r8 = r0.<androidx.ui.core.AndroidComposeView: java.util.List postponedMeasureRequests>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r13);

     label12:
        r16 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        if r16 != null goto label13;

        goto label14;

     label13:
        virtualinvoke r16.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label14:
        staticinvoke <android.os.Trace: void endSection()>();

        return;

     label15:
        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void markRemeasureRequested(androidx.ui.core.LayoutNode)>(r13);

        $z11 = virtualinvoke r15.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z11 == 0 goto label18;

        r17 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        if r17 != null goto label16;

        goto label17;

     label16:
        virtualinvoke r17.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label17:
        staticinvoke <android.os.Trace: void endSection()>();

        return;

     label18:
        r13 = r15;

        goto label10;

     label19:
        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void markRemeasureRequested(androidx.ui.core.LayoutNode)>(r13);

        r18 = virtualinvoke r13.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if r18 != null goto label20;

        $r19 = r13;

        goto label21;

     label20:
        $r19 = r18;

     label21:
        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void requestRelayout(androidx.ui.core.LayoutNode)>($r19);

        r20 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label22:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label25;

     label23:
        $r11 := @caughtexception;

        r21 = $r11;

     label24:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r21;

     label25:
        return;

        catch java.lang.Throwable from label01 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label08 with label23;
        catch java.lang.Throwable from label09 to label14 with label23;
        catch java.lang.Throwable from label15 to label17 with label23;
        catch java.lang.Throwable from label18 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private final void requestRelayout(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode r1, r2, $r5, $r6, $r8, $r9, r11, r12, r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        androidx.ui.core.ComponentNode $r3, $r15;
        androidx.ui.core.Constraints $r7;
        androidx.ui.core.LayoutTreeConsistencyChecker r10, r16;
        androidx.ui.core.DepthSortedSet $r14;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        $z0 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z0 != 0 goto label02;

        $z1 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z1 == 0 goto label01;

        $r9 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        if r1 != $r9 goto label02;

     label01:
        $z2 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean isLayingOut()>();

        if $z2 != 0 goto label02;

        $z3 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z3 == 0 goto label05;

     label02:
        r10 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        if r10 != null goto label03;

        goto label04;

     label03:
        virtualinvoke r10.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label04:
        return;

     label05:
        $r3 = (androidx.ui.core.ComponentNode) r1;

        staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r3);

        r11 = r1;

        $z4 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRequired$ui_platform_release()>();

        if $z4 != 0 goto label07;

        r12 = r1;

     label06:
        if r12 == null goto label11;

        $z12 = virtualinvoke r12.<androidx.ui.core.LayoutNode: boolean getDirtyAlignmentLines$ui_platform_release()>();

        if $z12 != 0 goto label11;

        virtualinvoke r12.<androidx.ui.core.LayoutNode: void setDirtyAlignmentLines$ui_platform_release(boolean)>(1);

        r12 = virtualinvoke r12.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        goto label06;

     label07:
        r13 = r1;

     label08:
        $r5 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getAlignmentLinesQueryOwner$ui_platform_release()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r13, $r5);

        if $z5 != 0 goto label10;

        $z8 = virtualinvoke r13.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z8 != 0 goto label10;

        $z9 = virtualinvoke r13.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z9 != 0 goto label10;

        $z10 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean isLayingOut()>();

        if $z10 != 0 goto label10;

        $z11 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z11 != 0 goto label10;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void markRelayoutRequested(androidx.ui.core.LayoutNode)>(r13);

        virtualinvoke r13.<androidx.ui.core.LayoutNode: void setDirtyAlignmentLines$ui_platform_release(boolean)>(1);

        $r8 = virtualinvoke r13.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if $r8 != null goto label09;

        goto label10;

     label09:
        r2 = virtualinvoke r13.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        r13 = r2;

        goto label08;

     label10:
        virtualinvoke r13.<androidx.ui.core.LayoutNode: void setDirtyAlignmentLines$ui_platform_release(boolean)>(1);

        r11 = r13;

     label11:
        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void markRelayoutRequested(androidx.ui.core.LayoutNode)>(r11);

        $r14 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>;

        $r15 = (androidx.ui.core.ComponentNode) r11;

        virtualinvoke $r14.<androidx.ui.core.DepthSortedSet: void add(androidx.ui.core.ComponentNode)>($r15);

        $z13 = r0.<androidx.ui.core.AndroidComposeView: boolean duringMeasureLayout>;

        if $z13 != 0 goto label14;

        $r6 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r11, $r6);

        if $z6 != 0 goto label12;

        $r7 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Constraints getConstraints()>();

        $z7 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean isZero(androidx.ui.core.Constraints)>($r7);

        if $z7 == 0 goto label13;

     label12:
        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void requestLayout()>();

        goto label14;

     label13:
        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void onInvalidate(androidx.ui.core.LayoutNode)>(r11);

     label14:
        r16 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        if r16 != null goto label15;

        goto label16;

     label15:
        virtualinvoke r16.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label16:
        return;
    }

    private final void markRemeasureRequested(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        virtualinvoke $r1.<androidx.ui.core.LayoutNode: void setNeedsRemeasure$ui_platform_release(boolean)>(1);

        $z0 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<androidx.ui.core.LayoutNode: void setNeedsRelayout$ui_platform_release(boolean)>(0);

     label1:
        return;
    }

    private final void markRelayoutRequested(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        $z0 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<androidx.ui.core.LayoutNode: void setNeedsRelayout$ui_platform_release(boolean)>(1);

     label1:
        return;
    }

    public void onAttach(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.ComponentNode r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        return;
    }

    public void onDetach(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.ComponentNode r1, r2, $r5;
        boolean $z0;
        androidx.ui.core.ModelObserver $r3;
        androidx.ui.core.LayoutNode $r4;
        androidx.ui.core.DepthSortedSet $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        r2 = r1;

        $z0 = r2 instanceof androidx.ui.core.LayoutNode;

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>;

        $r4 = (androidx.ui.core.LayoutNode) r1;

        $r5 = (androidx.ui.core.ComponentNode) $r4;

        virtualinvoke $r6.<androidx.ui.core.DepthSortedSet: void remove(androidx.ui.core.ComponentNode)>($r5);

     label1:
        $r3 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        virtualinvoke $r3.<androidx.ui.core.ModelObserver: void clear(java.lang.Object)>(r1);

        return;
    }

    private final androidx.ui.core.AndroidViewsHandler getAndroidViewsHandler()
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r2;
        boolean z0;
        kotlin.reflect.KProperty[] $r3;
        java.lang.Object $r4;
        androidx.ui.core.AndroidViewsHandler $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 = r0.<androidx.ui.core.AndroidComposeView: kotlin.Lazy androidViewsHandler$delegate>;

        $r3 = <androidx.ui.core.AndroidComposeView: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r3[0];

        z0 = 0;

        $r4 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r5 = (androidx.ui.core.AndroidViewsHandler) $r4;

        return $r5;
    }

    private final androidx.ui.core.ViewLayerContainer getViewLayersContainer()
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r2;
        boolean z0;
        kotlin.reflect.KProperty[] $r3;
        java.lang.Object $r4;
        androidx.ui.core.ViewLayerContainer $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 = r0.<androidx.ui.core.AndroidComposeView: kotlin.Lazy viewLayersContainer$delegate>;

        $r3 = <androidx.ui.core.AndroidComposeView: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r3[1];

        z0 = 0;

        $r4 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r5 = (androidx.ui.core.ViewLayerContainer) $r4;

        return $r5;
    }

    public void addAndroidView(android.view.View, androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.View r1;
        androidx.ui.core.LayoutNode r2;
        java.util.Map r3;
        boolean z0;
        androidx.ui.core.AndroidViewsHandler $r4, $r5;
        java.util.HashMap $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutNode");

        $r4 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidViewsHandler getAndroidViewsHandler()>();

        virtualinvoke $r4.<androidx.ui.core.AndroidViewsHandler: void addView(android.view.View)>(r1);

        $r5 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidViewsHandler getAndroidViewsHandler()>();

        $r6 = virtualinvoke $r5.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap getLayoutNode()>();

        r3 = (java.util.Map) $r6;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void removeAndroidView(android.view.View)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.View r1;
        androidx.ui.core.AndroidViewsHandler $r2, $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        androidx.ui.core.LayoutNode $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $r2 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidViewsHandler getAndroidViewsHandler()>();

        virtualinvoke $r2.<androidx.ui.core.AndroidViewsHandler: void removeView(android.view.View)>(r1);

        $r3 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidViewsHandler getAndroidViewsHandler()>();

        $r4 = virtualinvoke $r3.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap getLayoutNode()>();

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r6 = (androidx.ui.core.LayoutNode) $r5;

        return;
    }

    public void measureAndLayout()
    {
        androidx.ui.core.AndroidComposeView r0;
        java.lang.String r1, $r14, r25;
        androidx.ui.core.LayoutNode r2, r3, $r5;
        long l0, $l1;
        boolean $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z15, $z16, z18, $z21, $z22;
        androidx.ui.core.OnPositionedDispatcher $r4, $r9;
        java.util.List $r6, $r7, $r27;
        androidx.ui.core.ComponentNode $r8, r23;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r13;
        java.lang.Throwable $r15, $r19, r34;
        androidx.ui.core.Constraints $r16;
        androidx.ui.core.LayoutDirection $r17;
        androidx.ui.core.DepthSortedSet r20, r21, r22;
        androidx.ui.core.LayoutTreeConsistencyChecker $r26, r32;
        java.util.Collection $r28;
        java.lang.Iterable $r29;
        java.util.Iterator r30;
        java.lang.Object $r31;
        kotlin.Unit r33;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 = "AndroidOwner:measureAndLayout";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r1);

     label01:
        r20 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>;

        $z5 = virtualinvoke r20.<androidx.ui.core.DepthSortedSet: boolean isEmpty()>();

        if $z5 != 0 goto label02;

        $z13 = 1;

        goto label03;

     label02:
        $z13 = 0;

     label03:
        if $z13 == 0 goto label21;

        r0.<androidx.ui.core.AndroidComposeView: boolean duringMeasureLayout> = 1;

        r21 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>;

     label04:
        r22 = r21;

        $z6 = virtualinvoke r22.<androidx.ui.core.DepthSortedSet: boolean isEmpty()>();

        if $z6 != 0 goto label05;

        $z15 = 1;

        goto label06;

     label05:
        $z15 = 0;

     label06:
        if $z15 == 0 goto label19;

        r23 = virtualinvoke r21.<androidx.ui.core.DepthSortedSet: androidx.ui.core.ComponentNode pop()>();

        r2 = (androidx.ui.core.LayoutNode) r23;

        l0 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: long getMeasureIteration()>();

        $l1 = l0 + 1L;

        staticinvoke <androidx.ui.core.AndroidComposeView: void access$setMeasureIteration$p(androidx.ui.core.AndroidComposeView,long)>(r0, $l1);

        $r5 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        if r2 != $r5 goto label07;

        $r16 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.Constraints getConstraints()>();

        $r17 = virtualinvoke r2.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        virtualinvoke r2.<androidx.ui.core.LayoutNode: androidx.ui.core.Placeable measure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>($r16, $r17);

     label07:
        $z7 = virtualinvoke r2.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z7 != 0 goto label08;

        $z16 = 1;

        goto label09;

     label08:
        $z16 = 0;

     label09:
        z18 = 0;

        if $z16 != 0 goto label10;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shouldn\'t require remeasure. relayoutNodes consists of the top nodes of the affected subtrees");

        r25 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke r25.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label10:
        $z8 = virtualinvoke r2.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z8 == 0 goto label12;

        virtualinvoke r2.<androidx.ui.core.LayoutNode: void layout()>();

        $r9 = staticinvoke <androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher access$getOnPositionedDispatcher$p(androidx.ui.core.AndroidComposeView)>(r0);

        virtualinvoke $r9.<androidx.ui.core.OnPositionedDispatcher: void onNodePositioned(androidx.ui.core.LayoutNode)>(r2);

        $r26 = staticinvoke <androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker access$getConsistencyChecker$p(androidx.ui.core.AndroidComposeView)>(r0);

        if $r26 != null goto label11;

        goto label12;

     label11:
        virtualinvoke $r26.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label12:
        $r27 = staticinvoke <androidx.ui.core.AndroidComposeView: java.util.List access$getPostponedMeasureRequests$p(androidx.ui.core.AndroidComposeView)>(r0);

        $r28 = (java.util.Collection) $r27;

        $z21 = interfaceinvoke $r28.<java.util.Collection: boolean isEmpty()>();

        if $z21 != 0 goto label13;

        $z22 = 1;

        goto label14;

     label13:
        $z22 = 0;

     label14:
        if $z22 == 0 goto label18;

        $r6 = staticinvoke <androidx.ui.core.AndroidComposeView: java.util.List access$getPostponedMeasureRequests$p(androidx.ui.core.AndroidComposeView)>(r0);

        $r29 = (java.lang.Iterable) $r6;

        r30 = interfaceinvoke $r29.<java.lang.Iterable: java.util.Iterator iterator()>();

     label15:
        $z9 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label17;

        $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.ui.core.LayoutNode) $r31;

        $r8 = (androidx.ui.core.ComponentNode) r3;

        $z10 = staticinvoke <androidx.ui.core.ComponentNodesKt: boolean isAttached(androidx.ui.core.ComponentNode)>($r8);

        if $z10 == 0 goto label16;

        $z11 = virtualinvoke r3.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z11 == 0 goto label16;

        virtualinvoke r3.<androidx.ui.core.LayoutNode: void setNeedsRemeasure$ui_platform_release(boolean)>(0);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void onRequestMeasure(androidx.ui.core.LayoutNode)>(r3);

     label16:
        goto label15;

     label17:
        $r7 = staticinvoke <androidx.ui.core.AndroidComposeView: java.util.List access$getPostponedMeasureRequests$p(androidx.ui.core.AndroidComposeView)>(r0);

        interfaceinvoke $r7.<java.util.List: void clear()>();

     label18:
        goto label04;

     label19:
        r0.<androidx.ui.core.AndroidComposeView: boolean duringMeasureLayout> = 0;

        $r4 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher onPositionedDispatcher>;

        virtualinvoke $r4.<androidx.ui.core.OnPositionedDispatcher: void dispatch()>();

        r32 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        if r32 != null goto label20;

        goto label21;

     label20:
        virtualinvoke r32.<androidx.ui.core.LayoutTreeConsistencyChecker: void assertConsistent()>();

     label21:
        r33 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label22:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label25;

     label23:
        $r19 := @caughtexception;

        r34 = $r19;

     label24:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r34;

     label25:
        return;

        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    protected void onMeasure(int, int)
    {
        androidx.ui.core.AndroidComposeView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1;
        androidx.ui.core.ConstraintRange r2, r3;
        androidx.ui.core.OnPositionedDispatcher r4;
        androidx.ui.core.SavedStateDelegate $r5;
        androidx.ui.core.Constraints $r6;
        androidx.ui.core.DepthSortedSet $r7;
        androidx.ui.core.LayoutNode $r8, $r10, $r11;
        androidx.ui.core.ComponentNode $r9;
        java.lang.Throwable $r12, r14;
        kotlin.Unit r13;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate>;

        virtualinvoke $r5.<androidx.ui.core.SavedStateDelegate: void stopWaitingForStateRestoration()>();

        r1 = "AndroidOwner:onMeasure";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r1);

     label1:
        r2 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ConstraintRange convertMeasureSpec(int)>(i0);

        r3 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ConstraintRange convertMeasureSpec(int)>(i1);

        $r6 = new androidx.ui.core.Constraints;

        $i2 = virtualinvoke r2.<androidx.ui.core.ConstraintRange: int getMin()>();

        $i3 = virtualinvoke r2.<androidx.ui.core.ConstraintRange: int getMax()>();

        $i4 = virtualinvoke r3.<androidx.ui.core.ConstraintRange: int getMin()>();

        $i5 = virtualinvoke r3.<androidx.ui.core.ConstraintRange: int getMax()>();

        specialinvoke $r6.<androidx.ui.core.Constraints: void <init>(int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i2, $i3, $i4, $i5, null);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setConstraints(androidx.ui.core.Constraints)>($r6);

        $r7 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.DepthSortedSet relayoutNodes>;

        $r8 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $r9 = (androidx.ui.core.ComponentNode) $r8;

        virtualinvoke $r7.<androidx.ui.core.DepthSortedSet: void add(androidx.ui.core.ComponentNode)>($r9);

        r4 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher onPositionedDispatcher>;

        virtualinvoke r4.<androidx.ui.core.OnPositionedDispatcher: void setDispatchingEnabled(boolean)>(0);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void measureAndLayout()>();

        virtualinvoke r4.<androidx.ui.core.OnPositionedDispatcher: void setDispatchingEnabled(boolean)>(1);

        $r10 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $i6 = virtualinvoke $r10.<androidx.ui.core.LayoutNode: int getWidth()>();

        $r11 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $i7 = virtualinvoke $r11.<androidx.ui.core.LayoutNode: int getHeight()>();

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setMeasuredDimension(int,int)>($i6, $i7);

        r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label5;

     label3:
        $r12 := @caughtexception;

        r14 = $r12;

     label4:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r14;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void observeLayoutModelReads(androidx.ui.core.LayoutNode, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode r1;
        kotlin.jvm.functions.Function0 r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.ui.core.ModelObserver $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        $r4 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        $r3 = r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayout>;

        virtualinvoke $r4.<androidx.ui.core.ModelObserver: void observeReads(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r1, $r3, r2);

        return;
    }

    public void observeMeasureModelReads(androidx.ui.core.LayoutNode, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutNode r1;
        kotlin.jvm.functions.Function0 r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.ui.core.ModelObserver $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        $r4 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        $r3 = r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingMeasure>;

        virtualinvoke $r4.<androidx.ui.core.ModelObserver: void observeReads(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r1, $r3, r2);

        return;
    }

    public final void observeLayerModelReads(androidx.ui.core.OwnedLayer, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.OwnedLayer r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.ui.core.ModelObserver $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.OwnedLayer;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        $r3 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        $r4 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 getOnCommitAffectingLayer$ui_platform_release()>();

        virtualinvoke $r3.<androidx.ui.core.ModelObserver: void observeReads(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r1, $r4, r2);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.ui.core.AndroidComposeView r0;
        boolean z0;
        int i0, i1, i2, i3;
        androidx.ui.core.OnPositionedDispatcher $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher onPositionedDispatcher>;

        virtualinvoke $r1.<androidx.ui.core.OnPositionedDispatcher: void dispatch()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.graphics.Canvas r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        return;
    }

    public void callDraw(androidx.ui.graphics.Canvas, androidx.ui.core.ComponentNode, androidx.ui.unit.PxSize)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ComponentNode r2, r5, $r6, r42;
        androidx.ui.unit.PxSize r3;
        java.lang.String r4, $r15, $r21, r40, r41;
        boolean z2, z3, $z5, $z6, $z7, $z8, $z9, $z10, z12, $z14, z15, z16, z17, $z19, z20, z21, z22, z24;
        androidx.ui.core.LayoutNode $r7, $r8, $r9, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r17, $r18, $r19;
        java.lang.IllegalArgumentException $r14, $r20;
        java.lang.Throwable $r16, $r22, $r32, r44;
        androidx.ui.core.DrawNode $r23, $r24, $r30, $r39;
        androidx.ui.unit.Density $r25, $r27, $r31;
        androidx.ui.core.AndroidComposeView$DrawScopeImpl $r29, r35;
        kotlin.jvm.functions.Function3 r33, r37, r38;
        java.lang.Object r34;
        int i0, $i1, i2, $i3;
        kotlin.Unit r43;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        r2 := @parameter1: androidx.ui.core.ComponentNode;

        r3 := @parameter2: androidx.ui.unit.PxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "parentSize");

        r4 = "AndroidOwner:callDraw";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r4);

     label01:
        r5 = r2;

        $z5 = r5 instanceof androidx.ui.core.DrawNode;

        if $z5 == 0 goto label06;

        $r23 = (androidx.ui.core.DrawNode) r2;

        r33 = virtualinvoke $r23.<androidx.ui.core.DrawNode: kotlin.jvm.functions.Function3 getOnPaintWithChildren()>();

        if r33 == null goto label04;

        r34 = virtualinvoke r2.<androidx.ui.core.ComponentNode: java.lang.Object getOwnerData()>();

        if r34 != null goto label02;

        $r29 = new androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r30 = (androidx.ui.core.DrawNode) r2;

        $r31 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density getDensity()>();

        specialinvoke $r29.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void <init>(androidx.ui.core.AndroidComposeView,androidx.ui.core.DrawNode,androidx.ui.graphics.Canvas,androidx.ui.unit.PxSize,androidx.ui.unit.Density)>(r0, $r30, r1, r3, $r31);

        r35 = $r29;

        virtualinvoke r2.<androidx.ui.core.ComponentNode: void setOwnerData(java.lang.Object)>(r35);

        goto label03;

     label02:
        r35 = (androidx.ui.core.AndroidComposeView$DrawScopeImpl) r34;

        virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void setChildDrawn$ui_platform_release(boolean)>(0);

        virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void setCanvas(androidx.ui.graphics.Canvas)>(r1);

        virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void setSize(androidx.ui.unit.PxSize)>(r3);

        $r27 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density getDensity()>();

        virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void setCurrentDensity(androidx.ui.unit.Density)>($r27);

     label03:
        interfaceinvoke r33.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r35, r1, r3);

        $z10 = virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: boolean getChildDrawn$ui_platform_release()>();

        if $z10 != 0 goto label05;

        z12 = 0;

        z2 = 0;

        z3 = 0;

        virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: float getDensity()>();

        virtualinvoke r35.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void drawContent()>();

        goto label05;

     label04:
        $r24 = (androidx.ui.core.DrawNode) r2;

        r37 = virtualinvoke $r24.<androidx.ui.core.DrawNode: kotlin.jvm.functions.Function3 getOnPaint()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r37);

        r38 = r37;

        $r25 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density getDensity()>();

        interfaceinvoke r38.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r25, r1, r3);

     label05:
        $r39 = (androidx.ui.core.DrawNode) r2;

        virtualinvoke $r39.<androidx.ui.core.DrawNode: void setNeedsPaint(boolean)>(0);

        goto label15;

     label06:
        $z6 = r5 instanceof androidx.ui.core.LayoutNode;

        if $z6 == 0 goto label13;

        $r7 = (androidx.ui.core.LayoutNode) r2;

        $z7 = virtualinvoke $r7.<androidx.ui.core.LayoutNode: boolean isPlaced()>();

        if $z7 == 0 goto label15;

        $r8 = (androidx.ui.core.LayoutNode) r2;

        $z8 = virtualinvoke $r8.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z8 != 0 goto label07;

        $z14 = 1;

        goto label08;

     label07:
        $z14 = 0;

     label08:
        z15 = $z14;

        z16 = 0;

        z17 = 0;

        if z15 != 0 goto label09;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not measured, draw requested");

        r40 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        $r22 = (java.lang.Throwable) $r20;

        throw $r22;

     label09:
        $r9 = (androidx.ui.core.LayoutNode) r2;

        $z9 = virtualinvoke $r9.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z9 != 0 goto label10;

        $z19 = 1;

        goto label11;

     label10:
        $z19 = 0;

     label11:
        z20 = $z19;

        z21 = 0;

        z22 = 0;

        if z20 != 0 goto label12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not laid out, draw requested");

        r41 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke r41.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label12:
        $r10 = (androidx.ui.core.LayoutNode) r2;

        virtualinvoke $r10.<androidx.ui.core.LayoutNode: void draw(androidx.ui.graphics.Canvas)>(r1);

        goto label15;

     label13:
        r42 = r2;

        z24 = 0;

        i0 = virtualinvoke r42.<androidx.ui.core.ComponentNode: int getCount()>();

        $i1 = 0;

        i2 = i0 + -1;

        if i0 == -2147483648 goto label15;

        if 0 > i2 goto label15;

     label14:
        $i3 = $i1;

        $i1 = $i1 + 1;

        $r6 = virtualinvoke r42.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>($i3);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void callDraw(androidx.ui.graphics.Canvas,androidx.ui.core.ComponentNode,androidx.ui.unit.PxSize)>(r1, $r6, r3);

        if $i1 <= i2 goto label14;

     label15:
        r43 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label16:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label19;

     label17:
        $r32 := @caughtexception;

        r44 = $r32;

     label18:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r44;

     label19:
        return;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public androidx.ui.core.OwnedLayer createLayer(androidx.ui.core.DrawLayerModifier, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.DrawLayerModifier r1;
        kotlin.jvm.functions.Function1 r2;
        kotlin.jvm.functions.Function0 r3;
        androidx.ui.core.OwnedLayer r4, $r8;
        int $i0;
        androidx.ui.core.ViewLayer $r5;
        androidx.ui.core.ViewLayerContainer $r6;
        boolean $z0;
        androidx.ui.core.RenderNodeLayer $r7;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.DrawLayerModifier;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "drawLayerModifier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "drawBlock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "invalidateParentLayer");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 28 goto label1;

        $z0 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: boolean isInEditMode()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = new androidx.ui.core.ViewLayer;

        $r6 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ViewLayerContainer getViewLayersContainer()>();

        specialinvoke $r5.<androidx.ui.core.ViewLayer: void <init>(androidx.ui.core.AndroidComposeView,androidx.ui.core.ViewLayerContainer,androidx.ui.core.DrawLayerModifier,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r0, $r6, r1, r2, r3);

        $r8 = (androidx.ui.core.OwnedLayer) $r5;

        goto label3;

     label2:
        $r7 = new androidx.ui.core.RenderNodeLayer;

        specialinvoke $r7.<androidx.ui.core.RenderNodeLayer: void <init>(androidx.ui.core.AndroidComposeView,androidx.ui.core.DrawLayerModifier,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r0, r1, r2, r3);

        $r8 = (androidx.ui.core.OwnedLayer) $r7;

     label3:
        r4 = $r8;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView: void updateLayerProperties(androidx.ui.core.OwnedLayer)>(r4);

        return r4;
    }

    private final void updateLayerProperties(androidx.ui.core.OwnedLayer)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.OwnedLayer r1;
        androidx.ui.core.AndroidComposeView$updateLayerProperties$1 $r2;
        androidx.ui.core.ModelObserver $r3;
        kotlin.jvm.functions.Function1 $r4;
        kotlin.jvm.functions.Function0 $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: androidx.ui.core.OwnedLayer;

        $r3 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        $r4 = r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onCommitAffectingLayerParams>;

        $r2 = new androidx.ui.core.AndroidComposeView$updateLayerProperties$1;

        specialinvoke $r2.<androidx.ui.core.AndroidComposeView$updateLayerProperties$1: void <init>(androidx.ui.core.OwnedLayer)>(r1);

        $r5 = (kotlin.jvm.functions.Function0) $r2;

        virtualinvoke $r3.<androidx.ui.core.ModelObserver: void observeReads(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r1, $r4, $r5);

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.graphics.Canvas r1;
        androidx.ui.graphics.Canvas r2;
        int i0, i1, i2, i3;
        androidx.ui.core.OwnedLayer r3;
        androidx.ui.core.LayoutNode $r4;
        java.util.List $r5, $r6, $r7, $r10;
        boolean $z0, z1, $z2;
        java.lang.Object $r8;
        java.util.Collection r9;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void measureAndLayout()>();

        r2 = staticinvoke <androidx.ui.graphics.AndroidCanvasKt: androidx.ui.graphics.Canvas Canvas(android.graphics.Canvas)>(r1);

        $r4 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        virtualinvoke $r4.<androidx.ui.core.LayoutNode: void draw(androidx.ui.graphics.Canvas)>(r2);

        $r5 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        r9 = (java.util.Collection) $r5;

        z1 = 0;

        $z0 = interfaceinvoke r9.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label5;

        $r6 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        i3 = 0;

        i0 = i2 + -1;

        if i2 == -2147483648 goto label4;

        if i3 > i0 goto label4;

     label3:
        i1 = i3;

        i3 = i3 + 1;

        $r7 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (androidx.ui.core.OwnedLayer) $r8;

        interfaceinvoke r3.<androidx.ui.core.OwnedLayer: void updateDisplayList()>();

        if i3 <= i0 goto label3;

     label4:
        $r10 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        interfaceinvoke $r10.<java.util.List: void clear()>();

     label5:
        return;
    }

    public androidx.lifecycle.LifecycleOwner getLifecycleOwner()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.lifecycle.LifecycleOwner $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner lifecycleOwner>;

        return $r1;
    }

    public void setOnLifecycleOwnerAvailable(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.jvm.functions.Function1 r1;
        boolean z0, z1, $z3, z4;
        androidx.lifecycle.LifecycleOwner $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r2 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        if $r2 != null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label3;

        r6 = "LifecycleOwner is already available";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label3:
        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onLifecycleAvailable> = r1;

        return;
    }

    protected void onAttachedToWindow()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.autofill.AndroidAutofill r1;
        androidx.ui.core.AndroidComposeView$Companion $r2;
        boolean $z0, $z1;
        androidx.ui.core.ModelObserver $r3;
        kotlin.jvm.functions.Function1 $r5, $r17;
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 $r6, $r10;
        androidx.lifecycle.LifecycleRegistry $r7;
        androidx.lifecycle.Lifecycle$State $r8;
        android.view.View $r9;
        androidx.ui.core.LayoutNode $r12;
        androidx.ui.core.Owner $r13;
        androidx.lifecycle.LifecycleOwner $r14, $r15, $r16, $r18;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        $r2 = <androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion Companion>;

        $z0 = staticinvoke <androidx.ui.core.AndroidComposeView$Companion: boolean access$getIsShowingLayoutBounds(androidx.ui.core.AndroidComposeView$Companion)>($r2);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void setShowLayoutBounds(boolean)>($z0);

        $r3 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        virtualinvoke $r3.<androidx.ui.core.ModelObserver: void enableModelUpdatesObserving(boolean)>(1);

        $z1 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: boolean autofillSupported()>();

        if $z1 == 0 goto label2;

        r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill>;

        if r1 != null goto label1;

        goto label2;

     label1:
        staticinvoke <androidx.ui.autofill.AndroidAutofillDebugUtilsKt: void registerCallback(androidx.ui.autofill.AndroidAutofill)>(r1);

     label2:
        $r12 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        $r13 = (androidx.ui.core.Owner) r0;

        virtualinvoke $r12.<androidx.ui.core.LayoutNode: void attach(androidx.ui.core.Owner)>($r13);

        $r14 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        if $r14 != null goto label5;

        $r9 = (android.view.View) r0;

        $r15 = staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: androidx.lifecycle.LifecycleOwner get(android.view.View)>($r9);

        if $r15 != null goto label3;

        $r10 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 viewLifecycleOwner>;

        $r16 = (androidx.lifecycle.LifecycleOwner) $r10;

        goto label4;

     label3:
        $r16 = $r15;

     label4:
        r0.<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner lifecycleOwner> = $r16;

     label5:
        $r17 = r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onLifecycleAvailable>;

        if $r17 != null goto label6;

        goto label7;

     label6:
        $r18 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r18);

        interfaceinvoke $r17.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r18);

     label7:
        $r5 = (kotlin.jvm.functions.Function1) null;

        r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function1 onLifecycleAvailable> = $r5;

        $r6 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 viewLifecycleOwner>;

        $r7 = virtualinvoke $r6.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        $r8 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        virtualinvoke $r7.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>($r8);

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.autofill.AndroidAutofill r1;
        androidx.ui.core.ModelObserver $r2;
        boolean $z2;
        androidx.ui.core.LayoutNode $r3;
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 $r4;
        androidx.lifecycle.LifecycleRegistry $r5;
        androidx.lifecycle.Lifecycle$State $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.ModelObserver modelObserver>;

        virtualinvoke $r2.<androidx.ui.core.ModelObserver: void enableModelUpdatesObserving(boolean)>(0);

        $z2 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: boolean autofillSupported()>();

        if $z2 == 0 goto label2;

        r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill>;

        if r1 != null goto label1;

        goto label2;

     label1:
        staticinvoke <androidx.ui.autofill.AndroidAutofillDebugUtilsKt: void unregisterCallback(androidx.ui.autofill.AndroidAutofill)>(r1);

     label2:
        $r3 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutNode getRoot()>();

        virtualinvoke $r3.<androidx.ui.core.LayoutNode: void detach()>();

        $r4 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 viewLifecycleOwner>;

        $r5 = virtualinvoke $r4.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        virtualinvoke $r5.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>($r6);

        return;
    }

    public void onProvideAutofillVirtualStructure(android.view.ViewStructure, int)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.ViewStructure r1;
        int i0;
        androidx.ui.autofill.AndroidAutofill r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.view.ViewStructure;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: boolean autofillSupported()>();

        if $z0 == 0 goto label2;

        if r1 == null goto label2;

        r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill>;

        if r2 != null goto label1;

        goto label2;

     label1:
        staticinvoke <androidx.ui.autofill.AndroidAutofillKt: void populateViewStructure(androidx.ui.autofill.AndroidAutofill,android.view.ViewStructure)>(r2, r1);

     label2:
        return;
    }

    public void autofill(android.util.SparseArray)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.util.SparseArray r1;
        androidx.ui.autofill.AndroidAutofill r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.util.SparseArray;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "values");

        $z0 = specialinvoke r0.<androidx.ui.core.AndroidComposeView: boolean autofillSupported()>();

        if $z0 == 0 goto label2;

        r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.autofill.AndroidAutofill _autofill>;

        if r2 != null goto label1;

        goto label2;

     label1:
        staticinvoke <androidx.ui.autofill.AndroidAutofillKt: void performAutofill(androidx.ui.autofill.AndroidAutofill,android.util.SparseArray)>(r2, r1);

     label2:
        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.MotionEvent r1;
        androidx.ui.core.pointerinput.ProcessResult r2, $r10, r11;
        java.lang.String r3;
        androidx.ui.core.pointerinput.PointerInputEvent r4;
        androidx.ui.core.pointerinput.MotionEventAdapter $r5;
        androidx.ui.core.pointerinput.PointerInputEventProcessor $r6, $r8;
        boolean $z2, $z3;
        android.view.ViewParent $r7;
        java.lang.Throwable $r9, r12;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "motionEvent");

        r3 = "AndroidOwner:onTouch";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r3);

     label1:
        $r5 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.MotionEventAdapter motionEventAdapter>;

        r4 = virtualinvoke $r5.<androidx.ui.core.pointerinput.MotionEventAdapter: androidx.ui.core.pointerinput.PointerInputEvent processMotionEvent$ui_platform_release(android.view.MotionEvent)>(r1);

        if r4 == null goto label2;

        $r8 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.PointerInputEventProcessor pointerInputEventProcessor>;

        $r10 = virtualinvoke $r8.<androidx.ui.core.pointerinput.PointerInputEventProcessor: androidx.ui.core.pointerinput.ProcessResult process(androidx.ui.core.pointerinput.PointerInputEvent)>(r4);

        goto label3;

     label2:
        $r6 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.pointerinput.PointerInputEventProcessor pointerInputEventProcessor>;

        virtualinvoke $r6.<androidx.ui.core.pointerinput.PointerInputEventProcessor: void processCancel()>();

        $r10 = staticinvoke <androidx.ui.core.pointerinput.PointerInputEventProcessorKt: androidx.ui.core.pointerinput.ProcessResult ProcessResult(boolean,boolean)>(0, 0);

     label3:
        r11 = $r10;

     label4:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

        r12 = $r9;

     label6:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r12;

     label7:
        r2 = r11;

        $z2 = virtualinvoke r2.<androidx.ui.core.pointerinput.ProcessResult: boolean getAnyMovementConsumed()>();

        if $z2 == 0 goto label8;

        $r7 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: android.view.ViewParent getParent()>();

        interfaceinvoke $r7.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label8:
        $z3 = virtualinvoke r2.<androidx.ui.core.pointerinput.ProcessResult: boolean getDispatchedToAPointerInputModifier()>();

        return $z3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final androidx.ui.core.ConstraintRange convertMeasureSpec(int)
    {
        androidx.ui.core.AndroidComposeView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        androidx.ui.unit.IntPx$Companion $r1, $r2, $r4;
        androidx.ui.core.ConstraintRange $r3, $r6;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i2 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i4);

        i3 = i1;

        lookupswitch(i3)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            case 1073741824: goto label1;
            default: goto label4;
        };

     label1:
        $r6 = new androidx.ui.core.ConstraintRange;

        specialinvoke $r6.<androidx.ui.core.ConstraintRange: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i2, i2, null);

        goto label5;

     label2:
        $r6 = new androidx.ui.core.ConstraintRange;

        $r1 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i5 = virtualinvoke $r1.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r2 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i6 = virtualinvoke $r2.<androidx.ui.unit.IntPx$Companion: int getInfinity()>();

        specialinvoke $r6.<androidx.ui.core.ConstraintRange: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i5, $i6, null);

        goto label5;

     label3:
        $r3 = new androidx.ui.core.ConstraintRange;

        $r6 = $r3;

        $r4 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i7 = virtualinvoke $r4.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        specialinvoke $r3.<androidx.ui.core.ConstraintRange: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i7, i2, null);

        goto label5;

     label4:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label5:
        return $r6;
    }

    public androidx.ui.input.TextInputService getTextInputService()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.input.TextInputService $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputService textInputService>;

        return $r1;
    }

    public androidx.ui.text.font.Font$ResourceLoader getFontLoader()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.text.font.Font$ResourceLoader $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.text.font.Font$ResourceLoader fontLoader>;

        return $r1;
    }

    public androidx.ui.core.hapticfeedback.HapticFeedback getHapticFeedBack()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.hapticfeedback.HapticFeedback $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.hapticfeedback.HapticFeedback hapticFeedBack>;

        return $r1;
    }

    public androidx.ui.core.clipboard.ClipboardManager getClipboardManager()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.clipboard.ClipboardManager $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.clipboard.ClipboardManager clipboardManager>;

        return $r1;
    }

    public boolean onCheckIsTextEditor()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.input.TextInputServiceAndroid $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputServiceAndroid textInputServiceAndroid>;

        $z0 = virtualinvoke $r1.<androidx.ui.input.TextInputServiceAndroid: boolean isEditorFocused()>();

        return $z0;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.inputmethod.EditorInfo r1;
        androidx.ui.input.TextInputServiceAndroid $r2;
        android.view.inputmethod.InputConnection $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outAttrs");

        $r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.input.TextInputServiceAndroid textInputServiceAndroid>;

        $r3 = virtualinvoke $r2.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputConnection createInputConnection(android.view.inputmethod.EditorInfo)>(r1);

        return $r3;
    }

    public androidx.ui.unit.IntPxPosition calculatePosition()
    {
        androidx.ui.core.AndroidComposeView r0;
        int[] r1, $r3;
        int i0, i1, $i8, $i9, $i10;
        long l2, l3, $l4, $l5, $l6, $l7;
        androidx.ui.unit.IntPxPosition $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r3 = newarray (int)[2];

        $r3[0] = 0;

        $r3[1] = 0;

        r1 = $r3;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void getLocationOnScreen(int[])>(r1);

        $i8 = r1[0];

        $i9 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i8);

        $i10 = r1[1];

        i0 = $i9;

        i1 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i10);

        $l4 = (long) i0;

        $l7 = $l4 << 32;

        $l5 = (long) i1;

        $l6 = $l5 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r2 = new androidx.ui.unit.IntPxPosition;

        specialinvoke $r2.<androidx.ui.unit.IntPxPosition: void <init>(long)>(l3);

        return $r2;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.content.res.Configuration r1;
        android.content.Context r2;
        androidx.ui.unit.Density $r3;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        r2 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "context");

        $r3 = staticinvoke <androidx.ui.unit.DensityKt: androidx.ui.unit.Density Density(android.content.Context)>(r2);

        r0.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density density> = $r3;

        $r4 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView: kotlin.jvm.functions.Function0 getConfigurationChangeObserver()>();

        interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

    public androidx.ui.savedinstancestate.UiSavedStateRegistry getSavedStateRegistry()
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.SavedStateDelegate $r1;
        androidx.ui.savedinstancestate.UiSavedStateRegistry $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.SavedStateDelegate: androidx.ui.savedinstancestate.UiSavedStateRegistry getSavedStateRegistry()>();

        return $r2;
    }

    public void setOnSavedStateRegistryAvailable(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.AndroidComposeView r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.core.SavedStateDelegate $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate>;

        virtualinvoke $r2.<androidx.ui.core.SavedStateDelegate: void setOnSaveRegistryAvailable(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    protected void dispatchSaveInstanceState(android.util.SparseArray)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.util.SparseArray r1;
        android.os.Parcelable r2, r3, r4;
        androidx.ui.core.SavedStateDelegate $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.util.SparseArray;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "container");

        r4 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        r3 = r4;

        r2 = r3;

        $r5 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate>;

        virtualinvoke $r5.<androidx.ui.core.SavedStateDelegate: void dispatchSaveInstanceState(android.util.SparseArray,android.os.Parcelable)>(r1, r2);

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.util.SparseArray r1;
        android.os.Parcelable r2;
        androidx.ui.core.SavedStateDelegate $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.util.SparseArray;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "container");

        $r3 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.SavedStateDelegate savedStateDelegate>;

        r2 = virtualinvoke $r3.<androidx.ui.core.SavedStateDelegate: android.os.Parcelable dispatchRestoreInstanceState(android.util.SparseArray)>(r1);

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView: void onRestoreInstanceState(android.os.Parcelable)>(r2);

        return;
    }

    private final boolean autofillSupported()
    {
        androidx.ui.core.AndroidComposeView r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        androidx.ui.core.AndroidComposeView r0;
        android.view.MotionEvent r1;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat $r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $r2 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat accessibilityDelegate>;

        $z0 = virtualinvoke $r2.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public static final java.lang.Class access$getSystemPropertiesClass$cp$s-1473828472()
    {
        java.lang.Class $r0;

        $r0 = <androidx.ui.core.AndroidComposeView: java.lang.Class systemPropertiesClass>;

        return $r0;
    }

    public static final void access$setSystemPropertiesClass$cp$s-1473828472(java.lang.Class)
    {
        java.lang.Class r0;

        r0 := @parameter0: java.lang.Class;

        <androidx.ui.core.AndroidComposeView: java.lang.Class systemPropertiesClass> = r0;

        return;
    }

    public static final void access$setGetBooleanMethod$cp$s-1473828472(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;

        r0 := @parameter0: java.lang.reflect.Method;

        <androidx.ui.core.AndroidComposeView: java.lang.reflect.Method getBooleanMethod> = r0;

        return;
    }

    public static final java.lang.reflect.Method access$getGetBooleanMethod$cp$s-1473828472()
    {
        java.lang.reflect.Method $r0;

        $r0 = <androidx.ui.core.AndroidComposeView: java.lang.reflect.Method getBooleanMethod>;

        return $r0;
    }

    public static final void access$setMeasureIteration$p(androidx.ui.core.AndroidComposeView, long)
    {
        androidx.ui.core.AndroidComposeView r0;
        long l0;

        r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        l0 := @parameter1: long;

        r0.<androidx.ui.core.AndroidComposeView: long measureIteration> = l0;

        return;
    }

    public static final androidx.ui.core.OnPositionedDispatcher access$getOnPositionedDispatcher$p(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.OnPositionedDispatcher $r1;

        r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.OnPositionedDispatcher onPositionedDispatcher>;

        return $r1;
    }

    public static final androidx.ui.core.LayoutTreeConsistencyChecker access$getConsistencyChecker$p(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView r0;
        androidx.ui.core.LayoutTreeConsistencyChecker $r1;

        r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: androidx.ui.core.LayoutTreeConsistencyChecker consistencyChecker>;

        return $r1;
    }

    public static final java.util.List access$getPostponedMeasureRequests$p(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        $r1 = r0.<androidx.ui.core.AndroidComposeView: java.util.List postponedMeasureRequests>;

        return $r1;
    }

    public static final void access$requestRelayout(androidx.ui.core.AndroidComposeView, androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView $r0;
        androidx.ui.core.LayoutNode r1;

        $r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        r1 := @parameter1: androidx.ui.core.LayoutNode;

        specialinvoke $r0.<androidx.ui.core.AndroidComposeView: void requestRelayout(androidx.ui.core.LayoutNode)>(r1);

        return;
    }

    public static final void access$updateLayerProperties(androidx.ui.core.AndroidComposeView, androidx.ui.core.OwnedLayer)
    {
        androidx.ui.core.AndroidComposeView $r0;
        androidx.ui.core.OwnedLayer r1;

        $r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        r1 := @parameter1: androidx.ui.core.OwnedLayer;

        specialinvoke $r0.<androidx.ui.core.AndroidComposeView: void updateLayerProperties(androidx.ui.core.OwnedLayer)>(r1);

        return;
    }

    public static final boolean access$getDuringMeasureLayout$p(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView r0;
        boolean $z0;

        r0 := @parameter0: androidx.ui.core.AndroidComposeView;

        $z0 = r0.<androidx.ui.core.AndroidComposeView: boolean duringMeasureLayout>;

        return $z0;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        androidx.ui.core.AndroidComposeView$Companion $r1;
        kotlin.jvm.internal.PropertyReference1Impl $r2, $r8;
        kotlin.reflect.KClass $r3, $r9;
        kotlin.reflect.KDeclarationContainer $r4, $r10;
        kotlin.jvm.internal.PropertyReference1 $r5, $r11;
        kotlin.reflect.KProperty1 $r6, $r12;
        kotlin.reflect.KProperty $r7, $r13;
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 $r14;

        $r1 = new androidx.ui.core.AndroidComposeView$Companion;

        specialinvoke $r1.<androidx.ui.core.AndroidComposeView$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion Companion> = $r1;

        r0 = newarray (kotlin.reflect.KProperty)[2];

        $r2 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r3 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/core/AndroidComposeView;");

        $r4 = (kotlin.reflect.KDeclarationContainer) $r3;

        specialinvoke $r2.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r4, "androidViewsHandler", "getAndroidViewsHandler()Landroidx/ui/core/AndroidViewsHandler;");

        $r5 = (kotlin.jvm.internal.PropertyReference1) $r2;

        $r6 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r5);

        $r7 = (kotlin.reflect.KProperty) $r6;

        r0[0] = $r7;

        $r8 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r9 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/core/AndroidComposeView;");

        $r10 = (kotlin.reflect.KDeclarationContainer) $r9;

        specialinvoke $r8.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r10, "viewLayersContainer", "getViewLayersContainer()Landroidx/ui/core/ViewLayerContainer;");

        $r11 = (kotlin.jvm.internal.PropertyReference1) $r8;

        $r12 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r11);

        $r13 = (kotlin.reflect.KProperty) $r12;

        r0[1] = $r13;

        <androidx.ui.core.AndroidComposeView: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        $r14 = new androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        specialinvoke $r14.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1: void <init>()>();

        <androidx.ui.core.AndroidComposeView: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 RootMeasureBlocks> = $r14;

        return;
    }

androidx.ui.core.AndroidComposeView$androidViewsHandler$2
<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: android.content.Context $context>
<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: androidx.ui.core.AndroidComposeView $this>
    void <init>(android.content.Context, androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$androidViewsHandler$2 r0;
        android.content.Context $r1;
        androidx.ui.core.AndroidComposeView $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$androidViewsHandler$2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: android.content.Context $context> = $r1;

        r0.<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: androidx.ui.core.AndroidComposeView $this> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.ui.core.AndroidViewsHandler invoke()
    {
        androidx.ui.core.AndroidComposeView$androidViewsHandler$2 r0;
        androidx.ui.core.AndroidViewsHandler r1, r3, $r4;
        androidx.ui.core.AndroidComposeView r2;
        boolean z0, z1;
        android.content.Context $r5;
        android.view.View $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView$androidViewsHandler$2;

        $r4 = new androidx.ui.core.AndroidViewsHandler;

        $r5 = r0.<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: android.content.Context $context>;

        specialinvoke $r4.<androidx.ui.core.AndroidViewsHandler: void <init>(android.content.Context)>($r5);

        r1 = $r4;

        r2 = r0.<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: androidx.ui.core.AndroidComposeView $this>;

        z0 = 0;

        z1 = 0;

        r3 = r1;

        $r6 = (android.view.View) r3;

        virtualinvoke r2.<androidx.ui.core.AndroidComposeView: void addView(android.view.View)>($r6);

        return r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.AndroidComposeView$androidViewsHandler$2 r0;
        androidx.ui.core.AndroidViewsHandler $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$androidViewsHandler$2;

        $r1 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$androidViewsHandler$2: androidx.ui.core.AndroidViewsHandler invoke()>();

        return $r1;
    }

androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1
    void <init>()
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1 r0;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.Placeable$PlacementScope)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1 r0;
        androidx.ui.core.Placeable$PlacementScope r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1;

        r1 := @parameter0: androidx.ui.core.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1 r0;
        java.lang.Object r1;
        androidx.ui.core.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1: void invoke(androidx.ui.core.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2
<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2: androidx.ui.core.Placeable $placeable>
    void <init>(androidx.ui.core.Placeable)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2 r0;
        androidx.ui.core.Placeable $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2: androidx.ui.core.Placeable $placeable> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.Placeable$PlacementScope)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2 r0;
        androidx.ui.core.Placeable$PlacementScope r1;
        androidx.ui.unit.IntPx$Companion $r2, $r4;
        androidx.ui.core.Placeable $r3;
        int $i0, $i1;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2;

        r1 := @parameter0: androidx.ui.core.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2: androidx.ui.core.Placeable $placeable>;

        $r2 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i0 = virtualinvoke $r2.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r4 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i1 = virtualinvoke $r4.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        virtualinvoke r1.<androidx.ui.core.Placeable$PlacementScope: void place-sXe7h04(androidx.ui.core.Placeable,int,int)>($r3, $i0, $i1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2 r0;
        java.lang.Object r1;
        androidx.ui.core.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2: void invoke(androidx.ui.core.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4
<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4: java.util.List $placeables>
    void <init>(java.util.List)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4 r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4;

        $r1 := @parameter0: java.util.List;

        r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4: java.util.List $placeables> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.Placeable$PlacementScope)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4 r0;
        androidx.ui.core.Placeable$PlacementScope r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.ui.core.Placeable r5;
        java.util.List $r6;
        boolean $z2;
        androidx.ui.unit.IntPx$Companion $r7, $r8;
        int $i0, $i1;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4;

        r1 := @parameter0: androidx.ui.core.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        $r6 = r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4: java.util.List $placeables>;

        $r2 = (java.lang.Iterable) $r6;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.core.Placeable) r4;

        $r7 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i0 = virtualinvoke $r7.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r8 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i1 = virtualinvoke $r8.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        virtualinvoke r1.<androidx.ui.core.Placeable$PlacementScope: void place-sXe7h04(androidx.ui.core.Placeable,int,int)>(r5, $i0, $i1);

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4 r0;
        java.lang.Object r1;
        androidx.ui.core.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4: void invoke(androidx.ui.core.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1
    void <init>()
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.ui.core.MeasureScope$MeasureResult measure(androidx.ui.core.MeasureScope, java.util.List, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.MeasureScope r1;
        java.util.List r2, r57;
        androidx.ui.core.Constraints r3;
        androidx.ui.core.LayoutDirection r4;
        java.util.Collection r5, r53;
        androidx.ui.core.Placeable r6, r51, r63;
        boolean $z0, $z1, $z2, z7, z8, z10, z12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, $i17, i18, i19, i20, i21;
        java.util.ArrayList $r7;
        kotlin.jvm.internal.Ref$ObjectRef $r8, $r9, $r12, $r14, $r15, $r18, $r21, $r25, $r32, $r38, r64, r65;
        java.lang.Object $r10, $r16, $r20, $r22, $r24, $r26, $r30, $r31, $r33, $r36, $r37, $r39, $r42, r55, r62;
        androidx.ui.unit.IntPx$Companion $r11, $r17, $r46, $r47;
        androidx.ui.unit.IntPx $r13, $r19, $r23, $r27, $r34, $r35, $r40, $r41;
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4 $r28;
        kotlin.jvm.functions.Function1 $r29, $r45, $r49;
        androidx.ui.core.Measurable $r43, r56;
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2 $r44;
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1 $r48;
        androidx.ui.core.MeasureScope$MeasureResult $r50;
        java.lang.Iterable $r52, $r60;
        java.util.Iterator r54, $r61;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.MeasureScope;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.ui.core.Constraints;

        r4 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "measureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "layoutDirection");

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r46 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i10 = virtualinvoke $r46.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r47 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i11 = virtualinvoke $r47.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r48 = new androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1;

        specialinvoke $r48.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$1: void <init>()>();

        $r49 = (kotlin.jvm.functions.Function1) $r48;

        $r50 = staticinvoke <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout-Ocy6_kE$default(androidx.ui.core.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r1, $i10, $i11, null, $r49, 4, null);

        goto label7;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r42 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r43 = (androidx.ui.core.Measurable) $r42;

        r51 = interfaceinvoke $r43.<androidx.ui.core.Measurable: androidx.ui.core.Placeable measure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r3, r4);

        $i8 = virtualinvoke r51.<androidx.ui.core.Placeable: int getWidth()>();

        $i9 = virtualinvoke r51.<androidx.ui.core.Placeable: int getHeight()>();

        $r44 = new androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2;

        specialinvoke $r44.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$2: void <init>(androidx.ui.core.Placeable)>(r51);

        $r45 = (kotlin.jvm.functions.Function1) $r44;

        $r50 = staticinvoke <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout-Ocy6_kE$default(androidx.ui.core.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r1, $i8, $i9, null, $r45, 4, null);

        goto label7;

     label2:
        $r52 = (java.lang.Iterable) r2;

        $r7 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r52, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        r53 = (java.util.Collection) $r7;

        r54 = interfaceinvoke $r52.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r55 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r56 = (androidx.ui.core.Measurable) r55;

        r5 = r53;

        r6 = interfaceinvoke r56.<androidx.ui.core.Measurable: androidx.ui.core.Placeable measure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r3, r4);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        goto label3;

     label4:
        r57 = (java.util.List) r53;

        $r8 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r8.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r9 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r9.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r9;

        $r10 = $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r12 = (kotlin.jvm.internal.Ref$ObjectRef) $r10;

        $r11 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i2 = virtualinvoke $r11.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r13 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i2);

        $r12.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r13;

        $r14 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r14.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r15 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r15.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r14.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r15;

        $r16 = $r14.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r18 = (kotlin.jvm.internal.Ref$ObjectRef) $r16;

        $r17 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i3 = virtualinvoke $r17.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r19 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i3);

        $r18.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r19;

        $r60 = (java.lang.Iterable) r57;

        z7 = 0;

        $r61 = interfaceinvoke $r60.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r61.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();

        r63 = (androidx.ui.core.Placeable) r62;

        z8 = 0;

        $r30 = $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $i12 = virtualinvoke r63.<androidx.ui.core.Placeable: int getWidth()>();

        $r31 = $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r32 = (kotlin.jvm.internal.Ref$ObjectRef) $r31;

        $r33 = $r32.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r34 = (androidx.ui.unit.IntPx) $r33;

        i13 = virtualinvoke $r34.<androidx.ui.unit.IntPx: int unbox-impl()>();

        r64 = (kotlin.jvm.internal.Ref$ObjectRef) $r30;

        i14 = $i12;

        i15 = i13;

        z10 = 0;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i14, i15);

        i16 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i6);

        $r35 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>(i16);

        r64.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r35;

        $r36 = $r14.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $i17 = virtualinvoke r63.<androidx.ui.core.Placeable: int getHeight()>();

        $r37 = $r14.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r38 = (kotlin.jvm.internal.Ref$ObjectRef) $r37;

        $r39 = $r38.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r40 = (androidx.ui.unit.IntPx) $r39;

        i18 = virtualinvoke $r40.<androidx.ui.unit.IntPx: int unbox-impl()>();

        r65 = (kotlin.jvm.internal.Ref$ObjectRef) $r36;

        i19 = $i17;

        i20 = i18;

        z12 = 0;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i19, i20);

        i21 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i7);

        $r41 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>(i21);

        r65.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r41;

        goto label5;

     label6:
        $r20 = $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r21 = (kotlin.jvm.internal.Ref$ObjectRef) $r20;

        $r22 = $r21.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r23 = (androidx.ui.unit.IntPx) $r22;

        $i4 = virtualinvoke $r23.<androidx.ui.unit.IntPx: int unbox-impl()>();

        $r24 = $r14.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r25 = (kotlin.jvm.internal.Ref$ObjectRef) $r24;

        $r26 = $r25.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r27 = (androidx.ui.unit.IntPx) $r26;

        $i5 = virtualinvoke $r27.<androidx.ui.unit.IntPx: int unbox-impl()>();

        $r28 = new androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4;

        specialinvoke $r28.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1$measure$4: void <init>(java.util.List)>(r57);

        $r29 = (kotlin.jvm.functions.Function1) $r28;

        $r50 = staticinvoke <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout-Ocy6_kE$default(androidx.ui.core.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r1, $i4, $i5, null, $r29, 4, null);

     label7:
        return $r50;
    }

    public java.lang.Void minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = "Undefined intrinsics block and it is required";

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public java.lang.Void minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = "Undefined intrinsics block and it is required";

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public java.lang.Void maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = "Undefined intrinsics block and it is required";

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public java.lang.Void maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = "Undefined intrinsics block and it is required";

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public volatile int minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1: java.lang.Void minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

    public volatile int minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1: java.lang.Void minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

    public volatile int maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1: java.lang.Void maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

    public volatile int maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1 r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$Companion$RootMeasureBlocks$1: java.lang.Void maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

androidx.ui.core.AndroidComposeView$Companion
    private void <init>()
    {
        androidx.ui.core.AndroidComposeView$Companion r0;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final boolean getIsShowingLayoutBounds()
    {
        androidx.ui.core.AndroidComposeView$Companion r0;
        java.lang.reflect.Method r1, $r9;
        java.lang.Object[] r2;
        java.lang.Class $r3, $r5, $r6, r8;
        java.lang.Boolean $r4, $r13, r14;
        boolean $z0, $z1;
        java.lang.Throwable $r7, r15;
        java.lang.Class[] r10;
        java.lang.Object $r11, r12;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion;

     label01:
        $r3 = staticinvoke <androidx.ui.core.AndroidComposeView: java.lang.Class access$getSystemPropertiesClass$cp$s-1473828472()>();

        if $r3 != null goto label04;

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

        staticinvoke <androidx.ui.core.AndroidComposeView: void access$setSystemPropertiesClass$cp$s-1473828472(java.lang.Class)>($r5);

        r8 = staticinvoke <androidx.ui.core.AndroidComposeView: java.lang.Class access$getSystemPropertiesClass$cp$s-1473828472()>();

        if r8 != null goto label02;

        $r9 = (java.lang.reflect.Method) null;

        goto label03;

     label02:
        r10 = newarray (java.lang.Class)[2];

        r10[0] = class "Ljava/lang/String;";

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        r10[1] = $r6;

        $r9 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getBoolean", r10);

     label03:
        staticinvoke <androidx.ui.core.AndroidComposeView: void access$setGetBooleanMethod$cp$s-1473828472(java.lang.reflect.Method)>($r9);

     label04:
        r1 = staticinvoke <androidx.ui.core.AndroidComposeView: java.lang.reflect.Method access$getGetBooleanMethod$cp$s-1473828472()>();

        if r1 != null goto label05;

        $r11 = null;

        goto label06;

     label05:
        r2 = newarray (java.lang.Object)[2];

        r2[0] = "debug.layout";

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r2[1] = $r4;

        $r11 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r2);

     label06:
        r12 = $r11;

        $z0 = r12 instanceof java.lang.Boolean;

        if $z0 == 0 goto label07;

        $r13 = (java.lang.Boolean) r12;

        goto label08;

     label07:
        $r13 = null;

     label08:
        r14 = $r13;

        if r14 != null goto label09;

        $z1 = 0;

        goto label10;

     label09:
        $z1 = virtualinvoke r14.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        return $z1;

     label11:
        $r7 := @caughtexception;

        r15 = $r7;

        return 0;

        catch java.lang.Exception from label01 to label11 with label11;
    }

    public static final boolean access$getIsShowingLayoutBounds(androidx.ui.core.AndroidComposeView$Companion)
    {
        androidx.ui.core.AndroidComposeView$Companion $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.ui.core.AndroidComposeView$Companion;

        $z0 = specialinvoke $r0.<androidx.ui.core.AndroidComposeView$Companion: boolean getIsShowingLayoutBounds()>();

        return $z0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.AndroidComposeView$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.AndroidComposeView$Companion: void <init>()>();

        return;
    }

androidx.ui.core.AndroidComposeView$configurationChangeObserver$1
    void <init>()
    {
        androidx.ui.core.AndroidComposeView$configurationChangeObserver$1 r0;

        r0 := @this: androidx.ui.core.AndroidComposeView$configurationChangeObserver$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.AndroidComposeView$configurationChangeObserver$1 r0;

        r0 := @this: androidx.ui.core.AndroidComposeView$configurationChangeObserver$1;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.AndroidComposeView$configurationChangeObserver$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$configurationChangeObserver$1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$configurationChangeObserver$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.AndroidComposeView$consistencyChecker$1
<androidx.ui.core.AndroidComposeView$consistencyChecker$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$consistencyChecker$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$consistencyChecker$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$consistencyChecker$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final boolean invoke()
    {
        androidx.ui.core.AndroidComposeView$consistencyChecker$1 r0;
        androidx.ui.core.AndroidComposeView $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView$consistencyChecker$1;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$consistencyChecker$1: androidx.ui.core.AndroidComposeView $this>;

        $z0 = staticinvoke <androidx.ui.core.AndroidComposeView: boolean access$getDuringMeasureLayout$p(androidx.ui.core.AndroidComposeView)>($r1);

        return $z0;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.AndroidComposeView$consistencyChecker$1 r0;
        boolean $z0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$consistencyChecker$1;

        $z0 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$consistencyChecker$1: boolean invoke()>();

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r1;
    }

androidx.ui.core.AndroidComposeView$DrawScopeImpl
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.DrawNode drawNode>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas canvas>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.PxSize size>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density currentDensity>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: boolean childDrawn>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.LayoutDirection layoutDirection>
<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.AndroidComposeView this$0>
    public void <init>(androidx.ui.core.AndroidComposeView, androidx.ui.core.DrawNode, androidx.ui.graphics.Canvas, androidx.ui.unit.PxSize, androidx.ui.unit.Density)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.core.AndroidComposeView r1;
        androidx.ui.core.DrawNode r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.unit.PxSize r4;
        androidx.ui.unit.Density r5;
        androidx.ui.core.LayoutDirection $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r2 := @parameter1: androidx.ui.core.DrawNode;

        r3 := @parameter2: androidx.ui.graphics.Canvas;

        r4 := @parameter3: androidx.ui.unit.PxSize;

        r5 := @parameter4: androidx.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "drawNode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "currentDensity");

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.AndroidComposeView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.DrawNode drawNode> = r2;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas canvas> = r3;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.PxSize size> = r4;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density currentDensity> = r5;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate> = r3;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate> = r5;

        $r6 = <androidx.ui.core.LayoutDirection: androidx.ui.core.LayoutDirection Ltr>;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.LayoutDirection layoutDirection> = $r6;

        return;
    }

    public final androidx.ui.graphics.Canvas getCanvas()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas canvas>;

        return $r1;
    }

    public final void setCanvas(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas canvas> = r1;

        return;
    }

    public androidx.ui.unit.PxSize getSize()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.PxSize $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.PxSize size>;

        return $r1;
    }

    public void setSize(androidx.ui.unit.PxSize)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.PxSize r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.unit.PxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.PxSize size> = r1;

        return;
    }

    public final androidx.ui.unit.Density getCurrentDensity()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Density $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density currentDensity>;

        return $r1;
    }

    public final void setCurrentDensity(androidx.ui.unit.Density)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density currentDensity> = r1;

        return;
    }

    public void clipPath(androidx.ui.graphics.Path)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Path r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Path;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r2.<androidx.ui.graphics.Canvas: void clipPath(androidx.ui.graphics.Path)>(r1);

        return;
    }

    public void clipRRect(androidx.ui.geometry.RRect)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.RRect r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.RRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rrect");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r2.<androidx.ui.graphics.Canvas: void clipRRect(androidx.ui.geometry.RRect)>(r1);

        return;
    }

    public void clipRect(androidx.ui.geometry.Rect, androidx.ui.graphics.ClipOp)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.ClipOp r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.ClipOp;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clipOp");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void clipRect(androidx.ui.geometry.Rect,androidx.ui.graphics.ClipOp)>(r1, r2);

        return;
    }

    public void concat(androidx.ui.graphics.vectormath.Matrix4)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.vectormath.Matrix4 r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.vectormath.Matrix4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matrix4");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r2.<androidx.ui.graphics.Canvas: void concat(androidx.ui.graphics.vectormath.Matrix4)>(r1);

        return;
    }

    public void disableZ()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void disableZ()>();

        return;
    }

    public void drawArc(androidx.ui.geometry.Rect, float, float, boolean, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1;
        boolean z0;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void drawArc(androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>(r1, f0, f1, z0, r2);

        return;
    }

    public void drawArcRad(androidx.ui.geometry.Rect, float, float, boolean, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1;
        boolean z0;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void drawArcRad(androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>(r1, f0, f1, z0, r2);

        return;
    }

    public void drawCircle(androidx.ui.geometry.Offset, float, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Offset r1;
        float f0;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        f0 := @parameter1: float;

        r2 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "center");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void drawCircle(androidx.ui.geometry.Offset,float,androidx.ui.graphics.Paint)>(r1, f0, r2);

        return;
    }

    public void drawImage(androidx.ui.graphics.ImageAsset, androidx.ui.geometry.Offset, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.ImageAsset r1;
        androidx.ui.geometry.Offset r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.ImageAsset;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "topLeftOffset");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r4 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r4.<androidx.ui.graphics.Canvas: void drawImage(androidx.ui.graphics.ImageAsset,androidx.ui.geometry.Offset,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawImageRect(androidx.ui.graphics.ImageAsset, androidx.ui.geometry.Rect, androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.ImageAsset r1;
        androidx.ui.geometry.Rect r2, r3;
        androidx.ui.graphics.Paint r4;
        androidx.ui.graphics.Canvas $r5;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.ImageAsset;

        r2 := @parameter1: androidx.ui.geometry.Rect;

        r3 := @parameter2: androidx.ui.geometry.Rect;

        r4 := @parameter3: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "dst");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "paint");

        $r5 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r5.<androidx.ui.graphics.Canvas: void drawImageRect(androidx.ui.graphics.ImageAsset,androidx.ui.geometry.Rect,androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2, r3, r4);

        return;
    }

    public void drawLine(androidx.ui.geometry.Offset, androidx.ui.geometry.Offset, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Offset r1, r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p1");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "p2");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r4 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r4.<androidx.ui.graphics.Canvas: void drawLine(androidx.ui.geometry.Offset,androidx.ui.geometry.Offset,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawOval(androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void drawOval(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void drawPath(androidx.ui.graphics.Path, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Path r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Path;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void drawPicture(androidx.ui.graphics.Picture)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Picture r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Picture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "picture");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r2.<androidx.ui.graphics.Canvas: void drawPicture(androidx.ui.graphics.Picture)>(r1);

        return;
    }

    public void drawPoints(androidx.ui.graphics.PointMode, java.util.List, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.PointMode r1;
        java.util.List r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.PointMode;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "points");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r4 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r4.<androidx.ui.graphics.Canvas: void drawPoints(androidx.ui.graphics.PointMode,java.util.List,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawRawPoints(androidx.ui.graphics.PointMode, float[], androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.PointMode r1;
        float[] r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.PointMode;

        r2 := @parameter1: float[];

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "points");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r4 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r4.<androidx.ui.graphics.Canvas: void drawRawPoints(androidx.ui.graphics.PointMode,float[],androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawRect(androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void drawRect(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void drawRoundRect(float, float, float, float, float, float, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float f0, f1, f2, f3, f4, f5;
        androidx.ui.graphics.Paint r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        r1 := @parameter6: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r2.<androidx.ui.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,androidx.ui.graphics.Paint)>(f0, f1, f2, f3, f4, f5, r1);

        return;
    }

    public void drawVertices(androidx.ui.graphics.Vertices, androidx.ui.graphics.BlendMode, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Vertices r1;
        androidx.ui.graphics.BlendMode r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas $r4;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Vertices;

        r2 := @parameter1: androidx.ui.graphics.BlendMode;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "vertices");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "blendMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r4 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r4.<androidx.ui.graphics.Canvas: void drawVertices(androidx.ui.graphics.Vertices,androidx.ui.graphics.BlendMode,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void enableZ()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void enableZ()>();

        return;
    }

    public void restore()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void restore()>();

        return;
    }

    public void rotate(float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float f0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void rotate(float)>(f0);

        return;
    }

    public void save()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void save()>();

        return;
    }

    public void saveLayer(androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r3.<androidx.ui.graphics.Canvas: void saveLayer(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void scale(float, float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void scale(float,float)>(f0, f1);

        return;
    }

    public void skew(float, float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void skew(float,float)>(f0, f1);

        return;
    }

    public void skewRad(float, float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void skewRad(float,float)>(f0, f1);

        return;
    }

    public void translate(float, float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        interfaceinvoke $r1.<androidx.ui.graphics.Canvas: void translate(float,float)>(f0, f1);

        return;
    }

    public android.graphics.Canvas getNativeCanvas()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas $r1;
        android.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas DrawScopeImpl$Canvas$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.graphics.Canvas: android.graphics.Canvas getNativeCanvas()>();

        return $r2;
    }

    public androidx.ui.geometry.Rect toRect(androidx.ui.unit.Bounds)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Bounds $r1;
        androidx.ui.unit.Density $r2;
        androidx.ui.geometry.Rect $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Bounds;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r3 = interfaceinvoke $r2.<androidx.ui.unit.Density: androidx.ui.geometry.Rect toRect(androidx.ui.unit.Bounds)>($r1);

        return $r3;
    }

    public int toIntPx(androidx.ui.unit.Dp)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density $r2;
        int $i0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Dp;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $i0 = interfaceinvoke $r2.<androidx.ui.unit.Density: int toIntPx(androidx.ui.unit.Dp)>($r1);

        return $i0;
    }

    public float toPx(androidx.ui.unit.Dp)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density $r2;
        float $f0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Dp;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $f0 = interfaceinvoke $r2.<androidx.ui.unit.Density: float toPx(androidx.ui.unit.Dp)>($r1);

        return $f0;
    }

    public long toSp(androidx.ui.unit.Dp)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density $r2;
        long $l0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Dp;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $l0 = interfaceinvoke $r2.<androidx.ui.unit.Density: long toSp(androidx.ui.unit.Dp)>($r1);

        return $l0;
    }

    public androidx.ui.unit.Dp toDp-gshw56o(int)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        int $i0;
        androidx.ui.unit.Density $r1;
        androidx.ui.unit.Dp $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.unit.Density: androidx.ui.unit.Dp toDp-gshw56o(int)>($i0);

        return $r2;
    }

    public long toSp-gshw56o(int)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        int $i0;
        androidx.ui.unit.Density $r1;
        long $l1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $l1 = interfaceinvoke $r1.<androidx.ui.unit.Density: long toSp-gshw56o(int)>($i0);

        return $l1;
    }

    public androidx.ui.unit.Dp toDp-NgWp0Z8(float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float $f0;
        androidx.ui.unit.Density $r1;
        androidx.ui.unit.Dp $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.unit.Density: androidx.ui.unit.Dp toDp-NgWp0Z8(float)>($f0);

        return $r2;
    }

    public long toSp-NgWp0Z8(float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float $f0;
        androidx.ui.unit.Density $r1;
        long $l0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $l0 = interfaceinvoke $r1.<androidx.ui.unit.Density: long toSp-NgWp0Z8(float)>($f0);

        return $l0;
    }

    public androidx.ui.unit.PxSize toPx-kAYDl8w(long)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        long $l0;
        androidx.ui.unit.Density $r1;
        androidx.ui.unit.PxSize $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.unit.Density: androidx.ui.unit.PxSize toPx-kAYDl8w(long)>($l0);

        return $r2;
    }

    public androidx.ui.unit.Dp toDp-vVlMl6k(long)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        long $l0;
        androidx.ui.unit.Density $r1;
        androidx.ui.unit.Dp $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.unit.Density: androidx.ui.unit.Dp toDp-vVlMl6k(long)>($l0);

        return $r2;
    }

    public int toIntPx-vVlMl6k(long)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        long $l0;
        androidx.ui.unit.Density $r1;
        int $i1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $i1 = interfaceinvoke $r1.<androidx.ui.unit.Density: int toIntPx-vVlMl6k(long)>($l0);

        return $i1;
    }

    public float toPx-vVlMl6k(long)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        long $l0;
        androidx.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $f0 = interfaceinvoke $r1.<androidx.ui.unit.Density: float toPx-vVlMl6k(long)>($l0);

        return $f0;
    }

    public androidx.ui.unit.Dp toDp(float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float $f0;
        androidx.ui.unit.Density $r1;
        androidx.ui.unit.Dp $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.unit.Density: androidx.ui.unit.Dp toDp(float)>($f0);

        return $r2;
    }

    public long toSp(float)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        float $f0;
        androidx.ui.unit.Density $r1;
        long $l0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $l0 = interfaceinvoke $r1.<androidx.ui.unit.Density: long toSp(float)>($f0);

        return $l0;
    }

    public androidx.ui.unit.Dp toDp(int)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        int $i0;
        androidx.ui.unit.Density $r1;
        androidx.ui.unit.Dp $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.ui.unit.Density: androidx.ui.unit.Dp toDp(int)>($i0);

        return $r2;
    }

    public long toSp(int)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        int $i0;
        androidx.ui.unit.Density $r1;
        long $l1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $l1 = interfaceinvoke $r1.<androidx.ui.unit.Density: long toSp(int)>($i0);

        return $l1;
    }

    public float getDensity()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $f0 = interfaceinvoke $r1.<androidx.ui.unit.Density: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.Density DrawScopeImpl$Density$delegate>;

        $f0 = interfaceinvoke $r1.<androidx.ui.unit.Density: float getFontScale()>();

        return $f0;
    }

    public final boolean getChildDrawn$ui_platform_release()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $z0 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: boolean childDrawn>;

        return $z0;
    }

    public final void setChildDrawn$ui_platform_release(boolean)
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        boolean z0;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: boolean childDrawn> = z0;

        return;
    }

    public androidx.ui.core.LayoutDirection getLayoutDirection()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.core.LayoutDirection $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.LayoutDirection layoutDirection>;

        return $r1;
    }

    public void drawContent()
    {
        androidx.ui.core.AndroidComposeView$DrawScopeImpl r0;
        androidx.ui.core.ComponentNode r1, r3;
        androidx.ui.core.AndroidComposeView r2;
        int i0, i1, i2, i3;
        boolean $z2;
        androidx.ui.core.DrawNode $r4;
        androidx.ui.graphics.Canvas $r5;
        androidx.ui.unit.PxSize $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.ui.core.AndroidComposeView$DrawScopeImpl;

        $z2 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: boolean getChildDrawn$ui_platform_release()>();

        if $z2 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call drawContent() twice within Draw element");

        throw $r7;

     label1:
        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: void setChildDrawn$ui_platform_release(boolean)>(1);

        $r4 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.DrawNode drawNode>;

        r1 = (androidx.ui.core.ComponentNode) $r4;

        r2 = r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.core.AndroidComposeView this$0>;

        i0 = virtualinvoke r1.<androidx.ui.core.ComponentNode: int getCount()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label3;

        if i3 > i1 goto label3;

     label2:
        i2 = i3;

        i3 = i3 + 1;

        r3 = virtualinvoke r1.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i2);

        $r5 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.graphics.Canvas getCanvas()>();

        $r6 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$DrawScopeImpl: androidx.ui.unit.PxSize getSize()>();

        virtualinvoke r2.<androidx.ui.core.AndroidComposeView: void callDraw(androidx.ui.graphics.Canvas,androidx.ui.core.ComponentNode,androidx.ui.unit.PxSize)>($r5, r3, $r6);

        if i3 <= i1 goto label2;

     label3:
        return;
    }

androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1
<androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean handleMessage(android.os.Message)
    {
        androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1 r0;
        android.os.Message r1;
        androidx.ui.core.AndroidComposeView $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1;

        r1 := @parameter0: android.os.Message;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$measureAndLayoutHandler$1: androidx.ui.core.AndroidComposeView $this>;

        virtualinvoke $r2.<androidx.ui.core.AndroidComposeView: void measureAndLayout()>();

        return 1;
    }

androidx.ui.core.AndroidComposeView$modelObserver$1
<androidx.ui.core.AndroidComposeView$modelObserver$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$modelObserver$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$modelObserver$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$modelObserver$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.AndroidComposeView$modelObserver$1 r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.ui.core.AndroidComposeView $r2, $r6;
        android.os.Handler $r3, $r7;
        android.os.Looper $r4, $r5;
        androidx.ui.core.AndroidOwnerKt$sam$java_lang_Runnable$0 $r8;
        java.lang.Runnable $r9;

        r0 := @this: androidx.ui.core.AndroidComposeView$modelObserver$1;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "command");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$modelObserver$1: androidx.ui.core.AndroidComposeView $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.AndroidComposeView: android.os.Handler getHandler()>();

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 != $r5 goto label1;

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label2;

     label1:
        $r6 = r0.<androidx.ui.core.AndroidComposeView$modelObserver$1: androidx.ui.core.AndroidComposeView $this>;

        $r7 = virtualinvoke $r6.<androidx.ui.core.AndroidComposeView: android.os.Handler getHandler()>();

        $r8 = new androidx.ui.core.AndroidOwnerKt$sam$java_lang_Runnable$0;

        specialinvoke $r8.<androidx.ui.core.AndroidOwnerKt$sam$java_lang_Runnable$0: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r9 = (java.lang.Runnable) $r8;

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$modelObserver$1 r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$modelObserver$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.jvm.functions.Function0) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$modelObserver$1: void invoke(kotlin.jvm.functions.Function0)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1
    void <init>()
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1 r0;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.OwnedLayer)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1 r0;
        androidx.ui.core.OwnedLayer r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1;

        r1 := @parameter0: androidx.ui.core.OwnedLayer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layer");

        interfaceinvoke r1.<androidx.ui.core.OwnedLayer: void invalidate()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1 r0;
        java.lang.Object r1;
        androidx.ui.core.OwnedLayer $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.OwnedLayer) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayer$1: void invoke(androidx.ui.core.OwnedLayer)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1
<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: androidx.ui.core.AndroidComposeView $this>
<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: androidx.ui.core.OwnedLayer $layer>
    void <init>(androidx.ui.core.AndroidComposeView, androidx.ui.core.OwnedLayer)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1 r0;
        androidx.ui.core.AndroidComposeView $r1;
        androidx.ui.core.OwnedLayer $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        $r2 := @parameter1: androidx.ui.core.OwnedLayer;

        r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: androidx.ui.core.OwnedLayer $layer> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void run()
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1 r0;
        androidx.ui.core.OwnedLayer $r1;
        androidx.ui.core.AndroidComposeView $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1;

        $r2 = r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: androidx.ui.core.AndroidComposeView $this>;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: androidx.ui.core.OwnedLayer $layer>;

        staticinvoke <androidx.ui.core.AndroidComposeView: void access$updateLayerProperties(androidx.ui.core.AndroidComposeView,androidx.ui.core.OwnedLayer)>($r2, $r1);

        return;
    }

androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1
<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.OwnedLayer)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1 r0;
        androidx.ui.core.OwnedLayer r1;
        androidx.ui.core.AndroidComposeView $r2, $r5;
        android.os.Handler $r3;
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1 $r4;
        java.lang.Runnable $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1;

        r1 := @parameter0: androidx.ui.core.OwnedLayer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layer");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1: androidx.ui.core.AndroidComposeView $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.AndroidComposeView: android.os.Handler getHandler()>();

        $r4 = new androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1;

        $r5 = r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1: androidx.ui.core.AndroidComposeView $this>;

        specialinvoke $r4.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1$1: void <init>(androidx.ui.core.AndroidComposeView,androidx.ui.core.OwnedLayer)>($r5, r1);

        $r6 = (java.lang.Runnable) $r4;

        virtualinvoke $r3.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r6);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1 r0;
        java.lang.Object r1;
        androidx.ui.core.OwnedLayer $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.OwnedLayer) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayerParams$1: void invoke(androidx.ui.core.OwnedLayer)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1
<androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1 r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.AndroidComposeView $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1: androidx.ui.core.AndroidComposeView $this>;

        staticinvoke <androidx.ui.core.AndroidComposeView: void access$requestRelayout(androidx.ui.core.AndroidComposeView,androidx.ui.core.LayoutNode)>($r2, r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1 r0;
        java.lang.Object r1;
        androidx.ui.core.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.LayoutNode) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingLayout$1: void invoke(androidx.ui.core.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1
<androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1 r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.AndroidComposeView $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $r2 = r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1: androidx.ui.core.AndroidComposeView $this>;

        virtualinvoke $r2.<androidx.ui.core.AndroidComposeView: void onRequestMeasure(androidx.ui.core.LayoutNode)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1 r0;
        java.lang.Object r1;
        androidx.ui.core.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.LayoutNode) r1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$onCommitAffectingMeasure$1: void invoke(androidx.ui.core.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.AndroidComposeView$onSemanticsChange$1
<androidx.ui.core.AndroidComposeView$onSemanticsChange$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$onSemanticsChange$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$onSemanticsChange$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$onSemanticsChange$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void run()
    {
        androidx.ui.core.AndroidComposeView$onSemanticsChange$1 r0;
        androidx.ui.core.AndroidComposeView $r1, $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$onSemanticsChange$1;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$onSemanticsChange$1: androidx.ui.core.AndroidComposeView $this>;

        staticinvoke <androidx.ui.core.AndroidComposeView: void access$checkForSemanticsChanges(androidx.ui.core.AndroidComposeView)>($r1);

        $r2 = r0.<androidx.ui.core.AndroidComposeView$onSemanticsChange$1: androidx.ui.core.AndroidComposeView $this>;

        staticinvoke <androidx.ui.core.AndroidComposeView: void access$setCheckingForSemanticsChanges$p(androidx.ui.core.AndroidComposeView,boolean)>($r2, 0);

        return;
    }

androidx.ui.core.AndroidComposeView$savedStateDelegate$1
<androidx.ui.core.AndroidComposeView$savedStateDelegate$1: androidx.ui.core.AndroidComposeView $this>
    void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$savedStateDelegate$1 r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$savedStateDelegate$1;

        $r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$savedStateDelegate$1: androidx.ui.core.AndroidComposeView $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final int invoke()
    {
        androidx.ui.core.AndroidComposeView$savedStateDelegate$1 r0;
        java.lang.Integer r1, $r6;
        android.view.View r2, $r5;
        android.view.ViewParent r3;
        androidx.ui.core.AndroidComposeView $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.ui.core.AndroidComposeView$savedStateDelegate$1;

        $r4 = r0.<androidx.ui.core.AndroidComposeView$savedStateDelegate$1: androidx.ui.core.AndroidComposeView $this>;

        r3 = virtualinvoke $r4.<androidx.ui.core.AndroidComposeView: android.view.ViewParent getParent()>();

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r5 = (android.view.View) r3;

        goto label2;

     label1:
        $r5 = null;

     label2:
        r2 = $r5;

        if r2 != null goto label3;

        $r6 = (java.lang.Integer) null;

        goto label4;

     label3:
        $i0 = virtualinvoke r2.<android.view.View: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label4:
        r1 = $r6;

        if r1 != null goto label5;

        $i1 = -1;

        goto label6;

     label5:
        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

     label6:
        return $i1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.AndroidComposeView$savedStateDelegate$1 r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$savedStateDelegate$1;

        $i0 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$savedStateDelegate$1: int invoke()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

androidx.ui.core.AndroidComposeView$SemanticsNodeCopy
<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: androidx.ui.core.semantics.SemanticsConfiguration config>
<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: java.util.Set children>
<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: androidx.ui.core.AndroidComposeView this$0>
    public void <init>(androidx.ui.core.AndroidComposeView, androidx.ui.core.semantics.SemanticsNode)
    {
        androidx.ui.core.AndroidComposeView$SemanticsNodeCopy r0, r5;
        androidx.ui.core.AndroidComposeView r1;
        androidx.ui.core.semantics.SemanticsNode r2, r4;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r3;
        java.util.Set r6, $r10;
        androidx.ui.core.semantics.SemanticsConfiguration $r7;
        java.util.LinkedHashSet $r8;
        java.util.Collection $r9;
        java.lang.Integer $r11;
        java.util.List $r12;

        r0 := @this: androidx.ui.core.AndroidComposeView$SemanticsNodeCopy;

        r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r2 := @parameter1: androidx.ui.core.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "semanticsNode");

        r0.<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: androidx.ui.core.AndroidComposeView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = virtualinvoke r2.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        r0.<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: androidx.ui.core.semantics.SemanticsConfiguration config> = $r7;

        r5 = r0;

        $r8 = new java.util.LinkedHashSet;

        specialinvoke $r8.<java.util.LinkedHashSet: void <init>()>();

        r6 = (java.util.Set) $r8;

        r5.<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: java.util.Set children> = r6;

        $r12 = virtualinvoke r2.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        i4 = 0;

        $r9 = (java.util.Collection) $r12;

        $i2 = interfaceinvoke $r9.<java.util.Collection: int size()>();

        i0 = $i2 + -1;

        if i4 > i0 goto label2;

     label1:
        i1 = i4;

        i4 = i4 + 1;

        r3 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.ui.core.semantics.SemanticsNode) r3;

        $r10 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: java.util.Set getChildren()>();

        $i3 = virtualinvoke r4.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

        if i4 <= i0 goto label1;

     label2:
        return;
    }

    public final androidx.ui.core.semantics.SemanticsConfiguration getConfig()
    {
        androidx.ui.core.AndroidComposeView$SemanticsNodeCopy r0;
        androidx.ui.core.semantics.SemanticsConfiguration $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$SemanticsNodeCopy;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: androidx.ui.core.semantics.SemanticsConfiguration config>;

        return $r1;
    }

    public final java.util.Set getChildren()
    {
        androidx.ui.core.AndroidComposeView$SemanticsNodeCopy r0;
        java.util.Set $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$SemanticsNodeCopy;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$SemanticsNodeCopy: java.util.Set children>;

        return $r1;
    }

androidx.ui.core.AndroidComposeView$updateLayerProperties$1
<androidx.ui.core.AndroidComposeView$updateLayerProperties$1: androidx.ui.core.OwnedLayer $layer>
    void <init>(androidx.ui.core.OwnedLayer)
    {
        androidx.ui.core.AndroidComposeView$updateLayerProperties$1 r0;
        androidx.ui.core.OwnedLayer $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$updateLayerProperties$1;

        $r1 := @parameter0: androidx.ui.core.OwnedLayer;

        r0.<androidx.ui.core.AndroidComposeView$updateLayerProperties$1: androidx.ui.core.OwnedLayer $layer> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.AndroidComposeView$updateLayerProperties$1 r0;
        androidx.ui.core.OwnedLayer $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$updateLayerProperties$1;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$updateLayerProperties$1: androidx.ui.core.OwnedLayer $layer>;

        interfaceinvoke $r1.<androidx.ui.core.OwnedLayer: void updateLayerProperties()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.AndroidComposeView$updateLayerProperties$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$updateLayerProperties$1;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeView$updateLayerProperties$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.AndroidComposeView$viewLayersContainer$2
<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: android.content.Context $context>
<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: androidx.ui.core.AndroidComposeView $this>
    void <init>(android.content.Context, androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeView$viewLayersContainer$2 r0;
        android.content.Context $r1;
        androidx.ui.core.AndroidComposeView $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLayersContainer$2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: androidx.ui.core.AndroidComposeView;

        r0.<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: android.content.Context $context> = $r1;

        r0.<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: androidx.ui.core.AndroidComposeView $this> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.ui.core.ViewLayerContainer invoke()
    {
        androidx.ui.core.AndroidComposeView$viewLayersContainer$2 r0;
        androidx.ui.core.ViewLayerContainer r1, r3, $r4;
        androidx.ui.core.AndroidComposeView r2;
        boolean z0, z1;
        android.content.Context $r5;
        android.view.View $r6;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLayersContainer$2;

        $r4 = new androidx.ui.core.ViewLayerContainer;

        $r5 = r0.<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: android.content.Context $context>;

        specialinvoke $r4.<androidx.ui.core.ViewLayerContainer: void <init>(android.content.Context)>($r5);

        r1 = $r4;

        r2 = r0.<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: androidx.ui.core.AndroidComposeView $this>;

        z0 = 0;

        z1 = 0;

        r3 = r1;

        $r6 = (android.view.View) r3;

        virtualinvoke r2.<androidx.ui.core.AndroidComposeView: void addView(android.view.View)>($r6);

        return r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.AndroidComposeView$viewLayersContainer$2 r0;
        androidx.ui.core.ViewLayerContainer $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLayersContainer$2;

        $r1 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$viewLayersContainer$2: androidx.ui.core.ViewLayerContainer invoke()>();

        return $r1;
    }

androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1
<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry lifecycleRegistry>
    void <init>()
    {
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.LifecycleOwner $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.lifecycle.LifecycleRegistry;

        $r2 = (androidx.lifecycle.LifecycleOwner) r0;

        specialinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r2);

        r0.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry lifecycleRegistry> = $r1;

        return;
    }

    public final androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()
    {
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 r0;
        androidx.lifecycle.LifecycleRegistry $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1;

        $r1 = r0.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry lifecycleRegistry>;

        return $r1;
    }

    public androidx.lifecycle.LifecycleRegistry getLifecycle()
    {
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 r0;
        androidx.lifecycle.LifecycleRegistry $r1;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1;

        $r1 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        return $r1;
    }

    public volatile androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1 r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.Lifecycle $r2;

        r0 := @this: androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1;

        $r1 = virtualinvoke r0.<androidx.ui.core.AndroidComposeView$viewLifecycleOwner$1: androidx.lifecycle.LifecycleRegistry getLifecycle()>();

        $r2 = (androidx.lifecycle.Lifecycle) $r1;

        return $r2;
    }

