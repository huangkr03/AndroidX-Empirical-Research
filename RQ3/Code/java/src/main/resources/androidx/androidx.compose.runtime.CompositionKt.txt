androidx.compose.runtime.CompositionKt
<androidx.compose.runtime.CompositionKt: java.lang.Object PendingApplyNoModifications>
    public static final kotlin.coroutines.CoroutineContext getRecomposeCoroutineContext(androidx.compose.runtime.ControlledComposition)
    {
        androidx.compose.runtime.ControlledComposition $r0;
        boolean $z0;
        kotlin.coroutines.EmptyCoroutineContext $r1;
        androidx.compose.runtime.CompositionImpl $r2;
        kotlin.coroutines.CoroutineContext $r3;

        $r0 := @parameter0: androidx.compose.runtime.ControlledComposition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof androidx.compose.runtime.CompositionImpl;

        if $z0 == 0 goto label1;

        $r2 = (androidx.compose.runtime.CompositionImpl) $r0;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.CompositionImpl: kotlin.coroutines.CoroutineContext getRecomposeContext()>();

        if $r3 != null goto label4;

     label3:
        $r1 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r3 = (kotlin.coroutines.CoroutineContext) $r1;

     label4:
        return $r3;
    }

    public static void getRecomposeCoroutineContext$annotations(androidx.compose.runtime.ControlledComposition)
    {
        androidx.compose.runtime.ControlledComposition r0;

        r0 := @parameter0: androidx.compose.runtime.ControlledComposition;

        return;
    }

    public static final androidx.compose.runtime.Composition Composition(androidx.compose.runtime.Applier, androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.runtime.Applier r0;
        androidx.compose.runtime.CompositionContext r1;
        androidx.compose.runtime.CompositionImpl $r2;
        androidx.compose.runtime.Composition $r3;

        r0 := @parameter0: androidx.compose.runtime.Applier;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "applier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        $r2 = new androidx.compose.runtime.CompositionImpl;

        specialinvoke $r2.<androidx.compose.runtime.CompositionImpl: void <init>(androidx.compose.runtime.CompositionContext,androidx.compose.runtime.Applier,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r0, null, 4, null);

        $r3 = (androidx.compose.runtime.Composition) $r2;

        return $r3;
    }

    public static final androidx.compose.runtime.ControlledComposition ControlledComposition(androidx.compose.runtime.Applier, androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.runtime.Applier r0;
        androidx.compose.runtime.CompositionContext r1;
        androidx.compose.runtime.CompositionImpl $r2;
        androidx.compose.runtime.ControlledComposition $r3;

        r0 := @parameter0: androidx.compose.runtime.Applier;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "applier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        $r2 = new androidx.compose.runtime.CompositionImpl;

        specialinvoke $r2.<androidx.compose.runtime.CompositionImpl: void <init>(androidx.compose.runtime.CompositionContext,androidx.compose.runtime.Applier,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r0, null, 4, null);

        $r3 = (androidx.compose.runtime.ControlledComposition) $r2;

        return $r3;
    }

    public static final androidx.compose.runtime.Composition Composition(androidx.compose.runtime.Applier, androidx.compose.runtime.CompositionContext, kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.runtime.Applier r0;
        androidx.compose.runtime.CompositionContext r1;
        kotlin.coroutines.CoroutineContext r2;
        androidx.compose.runtime.CompositionImpl $r3;
        androidx.compose.runtime.Composition $r4;

        r0 := @parameter0: androidx.compose.runtime.Applier;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        r2 := @parameter2: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "applier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "recomposeCoroutineContext");

        $r3 = new androidx.compose.runtime.CompositionImpl;

        specialinvoke $r3.<androidx.compose.runtime.CompositionImpl: void <init>(androidx.compose.runtime.CompositionContext,androidx.compose.runtime.Applier,kotlin.coroutines.CoroutineContext)>(r1, r0, r2);

        $r4 = (androidx.compose.runtime.Composition) $r3;

        return $r4;
    }

    public static final androidx.compose.runtime.ControlledComposition ControlledComposition(androidx.compose.runtime.Applier, androidx.compose.runtime.CompositionContext, kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.runtime.Applier r0;
        androidx.compose.runtime.CompositionContext r1;
        kotlin.coroutines.CoroutineContext r2;
        androidx.compose.runtime.CompositionImpl $r3;
        androidx.compose.runtime.ControlledComposition $r4;

        r0 := @parameter0: androidx.compose.runtime.Applier;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        r2 := @parameter2: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "applier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "recomposeCoroutineContext");

        $r3 = new androidx.compose.runtime.CompositionImpl;

        specialinvoke $r3.<androidx.compose.runtime.CompositionImpl: void <init>(androidx.compose.runtime.CompositionContext,androidx.compose.runtime.Applier,kotlin.coroutines.CoroutineContext)>(r1, r0, r2);

        $r4 = (androidx.compose.runtime.ControlledComposition) $r3;

        return $r4;
    }

    public static final void simulateHotReload(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.compose.runtime.HotReloader$Companion $r1;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        $r1 = <androidx.compose.runtime.HotReloader: androidx.compose.runtime.HotReloader$Companion Companion>;

        virtualinvoke $r1.<androidx.compose.runtime.HotReloader$Companion: void simulateHotReload$runtime_release(java.lang.Object)>(r0);

        return;
    }

    public static final void invalidateGroupsWithKey(int)
    {
        int i0;
        androidx.compose.runtime.HotReloader$Companion $r0;

        i0 := @parameter0: int;

        $r0 = <androidx.compose.runtime.HotReloader: androidx.compose.runtime.HotReloader$Companion Companion>;

        virtualinvoke $r0.<androidx.compose.runtime.HotReloader$Companion: void invalidateGroupsWithKey$runtime_release(int)>(i0);

        return;
    }

    public static final java.util.List currentCompositionErrors()
    {
        java.lang.Iterable $r0;
        java.util.Collection r1, r5;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.compose.runtime.RecomposerErrorInfo r4;
        androidx.compose.runtime.HotReloader$Companion $r6;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3, $z4;
        java.lang.Exception $r10;
        java.lang.Boolean $r11;
        kotlin.Pair $r12;

        $r6 = <androidx.compose.runtime.HotReloader: androidx.compose.runtime.HotReloader$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.HotReloader$Companion: java.util.List getCurrentErrors$runtime_release()>();

        $r0 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r0, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = (java.util.Collection) $r8;

        r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.runtime.RecomposerErrorInfo) r3;

        r5 = r1;

        $r10 = interfaceinvoke r4.<androidx.compose.runtime.RecomposerErrorInfo: java.lang.Exception getCause()>();

        $z4 = interfaceinvoke r4.<androidx.compose.runtime.RecomposerErrorInfo: boolean getRecoverable()>();

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r12 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r11);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r9 = (java.util.List) r1;

        return $r9;
    }

    public static final void clearCompositionErrors()
    {
        androidx.compose.runtime.HotReloader$Companion $r0;

        $r0 = <androidx.compose.runtime.HotReloader: androidx.compose.runtime.HotReloader$Companion Companion>;

        virtualinvoke $r0.<androidx.compose.runtime.HotReloader$Companion: void clearErrors$runtime_release()>();

        return;
    }

    private static final void addValue(androidx.compose.runtime.collection.IdentityArrayMap, java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityArrayMap $r0, r5;
        java.lang.Object r1, r2, r6, $r9;
        androidx.compose.runtime.collection.IdentityArraySet r3, r4, $r8, $r10;
        kotlin.Unit r7;
        boolean $z1;

        $r0 := @parameter0: androidx.compose.runtime.collection.IdentityArrayMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z1 = virtualinvoke $r0.<androidx.compose.runtime.collection.IdentityArrayMap: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke $r0.<androidx.compose.runtime.collection.IdentityArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (androidx.compose.runtime.collection.IdentityArraySet) $r9;

        if $r10 == null goto label1;

        virtualinvoke $r10.<androidx.compose.runtime.collection.IdentityArraySet: boolean add(java.lang.Object)>(r2);

        goto label3;

     label1:
        goto label3;

     label2:
        $r8 = new androidx.compose.runtime.collection.IdentityArraySet;

        specialinvoke $r8.<androidx.compose.runtime.collection.IdentityArraySet: void <init>()>();

        r3 = $r8;

        r4 = r3;

        r6 = r1;

        r5 = $r0;

        virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: boolean add(java.lang.Object)>(r2);

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        virtualinvoke r5.<androidx.compose.runtime.collection.IdentityArrayMap: void set(java.lang.Object,java.lang.Object)>(r6, r3);

     label3:
        return;
    }

    private static final void removeValueIf(java.util.HashSet, kotlin.jvm.functions.Function1)
    {
        java.util.HashSet $r0;
        kotlin.jvm.functions.Function1 r1;
        java.util.Iterator r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        boolean $z1, $z2;

        $r0 := @parameter0: java.util.HashSet;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r3 = virtualinvoke $r0.<java.util.HashSet: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "iterator()");

        r2 = $r3;

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public static final java.lang.Object access$getPendingApplyNoModifications$p()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.CompositionKt: java.lang.Object PendingApplyNoModifications>;

        return $r0;
    }

    public static final void access$addValue(androidx.compose.runtime.collection.IdentityArrayMap, java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityArrayMap $r0;
        java.lang.Object r1, r2;

        $r0 := @parameter0: androidx.compose.runtime.collection.IdentityArrayMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        staticinvoke <androidx.compose.runtime.CompositionKt: void addValue(androidx.compose.runtime.collection.IdentityArrayMap,java.lang.Object,java.lang.Object)>($r0, r1, r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.compose.runtime.CompositionKt: java.lang.Object PendingApplyNoModifications> = $r0;

        return;
    }

