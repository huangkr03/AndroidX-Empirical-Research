androidx.datastore.core.SimpleActor
<androidx.datastore.core.SimpleActor: kotlinx.coroutines.CoroutineScope scope>
<androidx.datastore.core.SimpleActor: kotlin.jvm.functions.Function2 consumeMessage>
<androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel messageQueue>
<androidx.datastore.core.SimpleActor: androidx.datastore.core.AtomicInt remainingMessages>
    public void <init>(kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2)
    {
        androidx.datastore.core.SimpleActor r0;
        kotlinx.coroutines.CoroutineScope r1, $r7;
        kotlin.jvm.functions.Function1 r2, $r14;
        kotlin.jvm.functions.Function2 r3, r4;
        kotlinx.coroutines.channels.Channel $r5;
        androidx.datastore.core.AtomicInt $r6;
        kotlin.coroutines.CoroutineContext $r8;
        kotlinx.coroutines.Job$Key $r9;
        kotlin.coroutines.CoroutineContext$Key $r10;
        kotlin.coroutines.CoroutineContext$Element $r11;
        kotlinx.coroutines.Job $r12;
        androidx.datastore.core.SimpleActor$1 $r13;

        r0 := @this: androidx.datastore.core.SimpleActor;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        r3 := @parameter2: kotlin.jvm.functions.Function2;

        r4 := @parameter3: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onComplete");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "onUndeliveredElement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "consumeMessage");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.CoroutineScope scope> = r1;

        r0.<androidx.datastore.core.SimpleActor: kotlin.jvm.functions.Function2 consumeMessage> = r4;

        $r5 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(2147483647, null, null, 6, null);

        r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel messageQueue> = $r5;

        $r6 = new androidx.datastore.core.AtomicInt;

        specialinvoke $r6.<androidx.datastore.core.AtomicInt: void <init>(int)>(0);

        r0.<androidx.datastore.core.SimpleActor: androidx.datastore.core.AtomicInt remainingMessages> = $r6;

        $r7 = r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.CoroutineScope scope>;

        $r8 = interfaceinvoke $r7.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r9 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r10 = (kotlin.coroutines.CoroutineContext$Key) $r9;

        $r11 = interfaceinvoke $r8.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r10);

        $r12 = (kotlinx.coroutines.Job) $r11;

        if $r12 == null goto label1;

        $r13 = new androidx.datastore.core.SimpleActor$1;

        specialinvoke $r13.<androidx.datastore.core.SimpleActor$1: void <init>(kotlin.jvm.functions.Function1,androidx.datastore.core.SimpleActor,kotlin.jvm.functions.Function2)>(r2, r0, r3);

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        interfaceinvoke $r12.<kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r14);

        goto label1;

     label1:
        return;
    }

    public final void offer(java.lang.Object)
    {
        androidx.datastore.core.SimpleActor r0;
        java.lang.Object r1, $r2;
        java.lang.Throwable r3, $r13;
        kotlinx.coroutines.channels.Channel $r4;
        boolean $z1, $z2;
        androidx.datastore.core.AtomicInt $r5;
        int $i0;
        androidx.datastore.core.SimpleActor$offer$2 $r6;
        kotlinx.coroutines.CoroutineScope $r7;
        kotlin.jvm.functions.Function2 $r8;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, $r14;
        kotlinx.coroutines.channels.ClosedSendChannelException $r12;

        r0 := @this: androidx.datastore.core.SimpleActor;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel messageQueue>;

        $r2 = interfaceinvoke $r4.<kotlinx.coroutines.channels.Channel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>(r1);

        $z1 = $r2 instanceof kotlinx.coroutines.channels.ChannelResult$Closed;

        if $z1 == 0 goto label2;

        r3 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r2);

        $r13 = r3;

        if r3 != null goto label1;

        $r12 = new kotlinx.coroutines.channels.ClosedSendChannelException;

        specialinvoke $r12.<kotlinx.coroutines.channels.ClosedSendChannelException: void <init>(java.lang.String)>("Channel was closed normally");

        $r13 = (java.lang.Throwable) $r12;

     label1:
        throw $r13;

     label2:
        $z2 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: boolean isSuccess-impl(java.lang.Object)>($r2);

        if $z2 != 0 goto label3;

        $r14 = "Check failed.";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        $r5 = r0.<androidx.datastore.core.SimpleActor: androidx.datastore.core.AtomicInt remainingMessages>;

        $i0 = virtualinvoke $r5.<androidx.datastore.core.AtomicInt: int getAndIncrement()>();

        if $i0 != 0 goto label4;

        $r7 = r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.CoroutineScope scope>;

        $r6 = new androidx.datastore.core.SimpleActor$offer$2;

        specialinvoke $r6.<androidx.datastore.core.SimpleActor$offer$2: void <init>(androidx.datastore.core.SimpleActor,kotlin.coroutines.Continuation)>(r0, null);

        $r8 = (kotlin.jvm.functions.Function2) $r6;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r7, null, null, $r8, 3, null);

     label4:
        return;
    }

    public static final androidx.datastore.core.AtomicInt access$getRemainingMessages$p(androidx.datastore.core.SimpleActor)
    {
        androidx.datastore.core.SimpleActor $r0;
        androidx.datastore.core.AtomicInt $r1;

        $r0 := @parameter0: androidx.datastore.core.SimpleActor;

        $r1 = $r0.<androidx.datastore.core.SimpleActor: androidx.datastore.core.AtomicInt remainingMessages>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.datastore.core.SimpleActor)
    {
        androidx.datastore.core.SimpleActor $r0;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: androidx.datastore.core.SimpleActor;

        $r1 = $r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.CoroutineScope scope>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function2 access$getConsumeMessage$p(androidx.datastore.core.SimpleActor)
    {
        androidx.datastore.core.SimpleActor $r0;
        kotlin.jvm.functions.Function2 $r1;

        $r0 := @parameter0: androidx.datastore.core.SimpleActor;

        $r1 = $r0.<androidx.datastore.core.SimpleActor: kotlin.jvm.functions.Function2 consumeMessage>;

        return $r1;
    }

    public static final kotlinx.coroutines.channels.Channel access$getMessageQueue$p(androidx.datastore.core.SimpleActor)
    {
        androidx.datastore.core.SimpleActor $r0;
        kotlinx.coroutines.channels.Channel $r1;

        $r0 := @parameter0: androidx.datastore.core.SimpleActor;

        $r1 = $r0.<androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel messageQueue>;

        return $r1;
    }

androidx.datastore.core.SimpleActor$1
<androidx.datastore.core.SimpleActor$1: kotlin.jvm.functions.Function1 $onComplete>
<androidx.datastore.core.SimpleActor$1: androidx.datastore.core.SimpleActor this$0>
<androidx.datastore.core.SimpleActor$1: kotlin.jvm.functions.Function2 $onUndeliveredElement>
    void <init>(kotlin.jvm.functions.Function1, androidx.datastore.core.SimpleActor, kotlin.jvm.functions.Function2)
    {
        androidx.datastore.core.SimpleActor$1 r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.datastore.core.SimpleActor $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: androidx.datastore.core.SimpleActor$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: androidx.datastore.core.SimpleActor;

        $r3 := @parameter2: kotlin.jvm.functions.Function2;

        r0.<androidx.datastore.core.SimpleActor$1: kotlin.jvm.functions.Function1 $onComplete> = $r1;

        r0.<androidx.datastore.core.SimpleActor$1: androidx.datastore.core.SimpleActor this$0> = $r2;

        r0.<androidx.datastore.core.SimpleActor$1: kotlin.jvm.functions.Function2 $onUndeliveredElement> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.datastore.core.SimpleActor$1 r0;
        java.lang.Throwable r1;
        java.lang.Object r2, r4, $r11, $r12;
        kotlin.jvm.functions.Function2 r3;
        kotlin.jvm.functions.Function1 $r5;
        androidx.datastore.core.SimpleActor $r7, $r9;
        kotlinx.coroutines.channels.Channel $r8, $r10;
        kotlin.Unit $r14;

        r0 := @this: androidx.datastore.core.SimpleActor$1;

        r1 := @parameter0: java.lang.Throwable;

        $r5 = r0.<androidx.datastore.core.SimpleActor$1: kotlin.jvm.functions.Function1 $onComplete>;

        interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r7 = r0.<androidx.datastore.core.SimpleActor$1: androidx.datastore.core.SimpleActor this$0>;

        $r8 = staticinvoke <androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel access$getMessageQueue$p(androidx.datastore.core.SimpleActor)>($r7);

        interfaceinvoke $r8.<kotlinx.coroutines.channels.Channel: boolean close(java.lang.Throwable)>(r1);

     label1:
        $r9 = r0.<androidx.datastore.core.SimpleActor$1: androidx.datastore.core.SimpleActor this$0>;

        $r10 = staticinvoke <androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel access$getMessageQueue$p(androidx.datastore.core.SimpleActor)>($r9);

        $r11 = interfaceinvoke $r10.<kotlinx.coroutines.channels.Channel: java.lang.Object tryReceive-PtdJZtk()>();

        $r12 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)>($r11);

        if $r12 == null goto label2;

        r2 = $r12;

        r3 = r0.<androidx.datastore.core.SimpleActor$1: kotlin.jvm.functions.Function2 $onUndeliveredElement>;

        r4 = r2;

        interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r4, r1);

        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label3;

     label2:
        $r14 = null;

     label3:
        if $r14 != null goto label4;

        goto label5;

     label4:
        goto label1;

     label5:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.datastore.core.SimpleActor$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.datastore.core.SimpleActor$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.datastore.core.SimpleActor$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.datastore.core.SimpleActor$offer$2
<androidx.datastore.core.SimpleActor$offer$2: java.lang.Object L$0>
<androidx.datastore.core.SimpleActor$offer$2: int label>
<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>
    void <init>(androidx.datastore.core.SimpleActor, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.SimpleActor$offer$2 r0;
        androidx.datastore.core.SimpleActor $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.core.SimpleActor$offer$2;

        $r1 := @parameter0: androidx.datastore.core.SimpleActor;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.core.SimpleActor$offer$2 r0;
        java.lang.Object $r1, r3, $r12, $r14, $r21;
        java.lang.String r2, $r18;
        int $i0, $i1, $i2;
        androidx.datastore.core.SimpleActor $r4, $r6, $r8, $r9, $r15;
        androidx.datastore.core.AtomicInt $r5, $r16;
        kotlinx.coroutines.CoroutineScope $r7;
        kotlinx.coroutines.channels.Channel $r10;
        kotlin.coroutines.Continuation $r11;
        kotlin.Unit $r13;
        java.lang.IllegalStateException $r17, $r19;
        boolean $z0;
        kotlin.jvm.functions.Function2 r20;

        r0 := @this: androidx.datastore.core.SimpleActor$offer$2;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.core.SimpleActor$offer$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label7;
            default: goto label9;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r15 = r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>;

        $r16 = staticinvoke <androidx.datastore.core.SimpleActor: androidx.datastore.core.AtomicInt access$getRemainingMessages$p(androidx.datastore.core.SimpleActor)>($r15);

        $i2 = virtualinvoke $r16.<androidx.datastore.core.AtomicInt: int get()>();

        if $i2 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        r2 = "Check failed.";

        $r17 = new java.lang.IllegalStateException;

        $r18 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label4:
        $r6 = r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>;

        $r7 = staticinvoke <androidx.datastore.core.SimpleActor: kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.datastore.core.SimpleActor)>($r6);

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void ensureActive(kotlinx.coroutines.CoroutineScope)>($r7);

        $r8 = r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>;

        r20 = staticinvoke <androidx.datastore.core.SimpleActor: kotlin.jvm.functions.Function2 access$getConsumeMessage$p(androidx.datastore.core.SimpleActor)>($r8);

        $r9 = r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>;

        $r10 = staticinvoke <androidx.datastore.core.SimpleActor: kotlinx.coroutines.channels.Channel access$getMessageQueue$p(androidx.datastore.core.SimpleActor)>($r9);

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.datastore.core.SimpleActor$offer$2: java.lang.Object L$0> = r20;

        r0.<androidx.datastore.core.SimpleActor$offer$2: int label> = 1;

        $r21 = interfaceinvoke $r10.<kotlinx.coroutines.channels.Channel: java.lang.Object receive(kotlin.coroutines.Continuation)>($r11);

        if $r21 != r3 goto label6;

        return r3;

     label5:
        $r14 = r0.<androidx.datastore.core.SimpleActor$offer$2: java.lang.Object L$0>;

        r20 = (kotlin.jvm.functions.Function2) $r14;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r21 = $r1;

     label6:
        r0.<androidx.datastore.core.SimpleActor$offer$2: java.lang.Object L$0> = null;

        r0.<androidx.datastore.core.SimpleActor$offer$2: int label> = 2;

        $r12 = interfaceinvoke r20.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r21, r0);

        if $r12 != r3 goto label8;

        return r3;

     label7:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label8:
        $r4 = r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>;

        $r5 = staticinvoke <androidx.datastore.core.SimpleActor: androidx.datastore.core.AtomicInt access$getRemainingMessages$p(androidx.datastore.core.SimpleActor)>($r4);

        $i1 = virtualinvoke $r5.<androidx.datastore.core.AtomicInt: int decrementAndGet()>();

        if $i1 != 0 goto label4;

        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;

     label9:
        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r19;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.SimpleActor$offer$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.datastore.core.SimpleActor $r4;

        r0 := @this: androidx.datastore.core.SimpleActor$offer$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.datastore.core.SimpleActor$offer$2;

        $r4 = r0.<androidx.datastore.core.SimpleActor$offer$2: androidx.datastore.core.SimpleActor this$0>;

        specialinvoke $r3.<androidx.datastore.core.SimpleActor$offer$2: void <init>(androidx.datastore.core.SimpleActor,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.SimpleActor$offer$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.datastore.core.SimpleActor$offer$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.datastore.core.SimpleActor$offer$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.datastore.core.SimpleActor$offer$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.core.SimpleActor$offer$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.core.SimpleActor$offer$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.datastore.core.SimpleActor$offer$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.datastore.core.SimpleActor$offer$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

