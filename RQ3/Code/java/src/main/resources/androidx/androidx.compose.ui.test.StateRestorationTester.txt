androidx.compose.ui.test.StateRestorationTester
<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.ComposeUiTest composeTest>
<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry registry>
<androidx.compose.ui.test.StateRestorationTester: int $stable>
    public void <init>(androidx.compose.ui.test.ComposeUiTest)
    {
        androidx.compose.ui.test.StateRestorationTester r0;
        androidx.compose.ui.test.ComposeUiTest r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester;

        r1 := @parameter0: androidx.compose.ui.test.ComposeUiTest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeTest");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.ComposeUiTest composeTest> = r1;

        return;
    }

    public final void setContent(kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.test.StateRestorationTester r0;
        kotlin.jvm.functions.Function2 r1, $r5;
        androidx.compose.ui.test.StateRestorationTester$setContent$1 $r2;
        androidx.compose.ui.test.ComposeUiTest $r3;
        androidx.compose.runtime.internal.ComposableLambda $r4;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composable");

        $r3 = r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.ComposeUiTest composeTest>;

        $r2 = new androidx.compose.ui.test.StateRestorationTester$setContent$1;

        specialinvoke $r2.<androidx.compose.ui.test.StateRestorationTester$setContent$1: void <init>(androidx.compose.ui.test.StateRestorationTester,kotlin.jvm.functions.Function2)>(r0, r1);

        $r4 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: androidx.compose.runtime.internal.ComposableLambda composableLambdaInstance(int,boolean,java.lang.Object)>(-1794916254, 1, $r2);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        interfaceinvoke $r3.<androidx.compose.ui.test.ComposeUiTest: void setContent(kotlin.jvm.functions.Function2)>($r5);

        return;
    }

    public final void emulateSaveAndRestore()
    {
        androidx.compose.ui.test.StateRestorationTester r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r1, $r2;
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1 $r3;
        androidx.compose.ui.test.ComposeUiTest $r4, $r8, $r13;
        kotlin.jvm.functions.Function0 $r5, $r9, $r12;
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2 $r7;
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 $r11;
        java.lang.IllegalStateException $r15;
        java.lang.String $r16, $r17;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester;

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry registry>;

        if $r2 != null goto label1;

        $r17 = "setContent should be called first!";

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label1:
        r1 = $r2;

        $r4 = r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.ComposeUiTest composeTest>;

        $r3 = new androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1;

        specialinvoke $r3.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1: void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)>(r1);

        $r5 = (kotlin.jvm.functions.Function0) $r3;

        interfaceinvoke $r4.<androidx.compose.ui.test.ComposeUiTest: java.lang.Object runOnIdle(kotlin.jvm.functions.Function0)>($r5);

        $r8 = r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.ComposeUiTest composeTest>;

        $r7 = new androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2;

        specialinvoke $r7.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2: void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)>(r1);

        $r9 = (kotlin.jvm.functions.Function0) $r7;

        interfaceinvoke $r8.<androidx.compose.ui.test.ComposeUiTest: java.lang.Object runOnIdle(kotlin.jvm.functions.Function0)>($r9);

        $r13 = r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.ComposeUiTest composeTest>;

        $r11 = <androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 INSTANCE>;

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        interfaceinvoke $r13.<androidx.compose.ui.test.ComposeUiTest: java.lang.Object runOnIdle(kotlin.jvm.functions.Function0)>($r12);

        return;
    }

    private final void InjectRestorationRegistry(kotlin.jvm.functions.Function3, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.test.StateRestorationTester r0;
        kotlin.jvm.functions.Function3 r1;
        int $i0, $i1, $i3, $i5;
        androidx.compose.runtime.saveable.SaveableStateRegistry r2;
        boolean z0, $z4, $z5, $z6, $z7;
        java.lang.Object r3, r5, $r8, $r23, $r26;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r4, $r16, r27;
        androidx.compose.runtime.ProvidableCompositionLocal $r6, $r9;
        androidx.compose.runtime.Composer$Companion $r7;
        androidx.compose.runtime.ProvidedValue $r10;
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1 $r11;
        androidx.compose.runtime.internal.ComposableLambda $r12;
        kotlin.jvm.functions.Function2 $r13, $r15;
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2 $r14;
        java.lang.IllegalArgumentException $r17;
        java.lang.String $r18, $r24;
        androidx.compose.runtime.Composer $r20, $r21;
        byte $b4;
        androidx.compose.runtime.CompositionLocal r22;
        androidx.compose.runtime.ProvidedValue[] $r28;
        androidx.compose.runtime.ScopeUpdateScope $r29;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester;

        r1 := @parameter0: kotlin.jvm.functions.Function3;

        $r20 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        $r21 = interfaceinvoke $r20.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-908654530);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r21, "C(InjectRestorationRegistry)*83@3362L7,87@3594L42,88@3645L210:StateRestorationTester.kt#ruzxor");

        $i3 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $z7 = interfaceinvoke $r21.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        if $z7 == 0 goto label01;

        $b4 = 4;

        goto label02;

     label01:
        $b4 = 2;

     label02:
        $i3 = $i0 | $b4;

     label03:
        $i5 = $i3 & 11;

        if $i5 != 2 goto label04;

        $z6 = interfaceinvoke $r21.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z6 != 0 goto label09;

     label04:
        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label05;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-908654530, $i3, -1, "androidx.compose.ui.test.StateRestorationTester.InjectRestorationRegistry (StateRestorationTester.kt:82)");

     label05:
        $r6 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalSaveableStateRegistry()>();

        r22 = (androidx.compose.runtime.CompositionLocal) $r6;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r21, 2023513938, "C:CompositionLocal.kt#9igjgp");

        $r23 = interfaceinvoke $r21.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r22);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r21);

        if $r23 != null goto label06;

        $r24 = "StateRestorationTester requires composeTestRule.setContent() to provide a SaveableStateRegistry implementation via LocalSaveableStateRegistry";

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label06:
        r2 = (androidx.compose.runtime.saveable.SaveableStateRegistry) $r23;

        interfaceinvoke $r21.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r21, "C(remember):Composables.kt#9igjgp");

        z0 = 0;

        r3 = interfaceinvoke $r21.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r7 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r3 != $r8 goto label07;

        $r16 = new androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        specialinvoke $r16.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)>(r2);

        r4 = $r16;

        interfaceinvoke $r21.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r4);

        $r26 = r4;

        goto label08;

     label07:
        $r26 = r3;

     label08:
        r5 = $r26;

        interfaceinvoke $r21.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r27 = (androidx.compose.ui.test.StateRestorationTester$RestorationRegistry) r5;

        $r28 = newarray (androidx.compose.runtime.ProvidedValue)[1];

        $r9 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalSaveableStateRegistry()>();

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.ProvidableCompositionLocal: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>(r27);

        $r28[0] = $r10;

        $r11 = new androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1;

        specialinvoke $r11.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry,kotlin.jvm.functions.Function3,int)>(r27, r1, $i3);

        $r12 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: androidx.compose.runtime.internal.ComposableLambda composableLambda(androidx.compose.runtime.Composer,int,boolean,java.lang.Object)>($r21, 1669258494, 1, $r11);

        $r13 = (kotlin.jvm.functions.Function2) $r12;

        staticinvoke <androidx.compose.runtime.CompositionLocalKt: void CompositionLocalProvider(androidx.compose.runtime.ProvidedValue[],kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r28, $r13, $r21, 56);

        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z5 == 0 goto label10;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label10;

     label09:
        interfaceinvoke $r21.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label10:
        $r29 = interfaceinvoke $r21.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r29 != null goto label11;

        goto label12;

     label11:
        $r14 = new androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2;

        specialinvoke $r14.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: void <init>(androidx.compose.ui.test.StateRestorationTester,kotlin.jvm.functions.Function3,int)>(r0, r1, $i0);

        $r15 = (kotlin.jvm.functions.Function2) $r14;

        interfaceinvoke $r29.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r15);

     label12:
        return;
    }

    public static final void access$InjectRestorationRegistry(androidx.compose.ui.test.StateRestorationTester, kotlin.jvm.functions.Function3, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.test.StateRestorationTester $r0;
        kotlin.jvm.functions.Function3 r1;
        androidx.compose.runtime.Composer $r2;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.test.StateRestorationTester;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        specialinvoke $r0.<androidx.compose.ui.test.StateRestorationTester: void InjectRestorationRegistry(kotlin.jvm.functions.Function3,androidx.compose.runtime.Composer,int)>(r1, $r2, $i0);

        return;
    }

    public static final void access$setRegistry$p(androidx.compose.ui.test.StateRestorationTester, androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)
    {
        androidx.compose.ui.test.StateRestorationTester $r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r1;

        $r0 := @parameter0: androidx.compose.ui.test.StateRestorationTester;

        r1 := @parameter1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r0.<androidx.compose.ui.test.StateRestorationTester: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry registry> = r1;

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.test.StateRestorationTester: int $stable> = 8;

        return;
    }

androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1
<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $registry>
    void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $registry> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1;

        $r1 = r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $registry>;

        virtualinvoke $r1.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: void saveStateAndDisposeChildren()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1;

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2
<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $registry>
    void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $registry> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2;

        $r1 = r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $registry>;

        virtualinvoke $r1.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: void emitChildrenWithRestoredState()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2;

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$2: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3
<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 r0;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 r0;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3;

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 $r0;

        $r0 = new androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3;

        specialinvoke $r0.<androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3: void <init>()>();

        <androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3: androidx.compose.ui.test.StateRestorationTester$emulateSaveAndRestore$3 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1
<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $restorationRegistry>
<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: kotlin.jvm.functions.Function3 $content>
<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: int $$dirty>
    void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry, kotlin.jvm.functions.Function3, int)
    {
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r1;
        kotlin.jvm.functions.Function3 $r2;
        int $i0;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        $i0 := @parameter2: int;

        r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $restorationRegistry> = $r1;

        r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: kotlin.jvm.functions.Function3 $content> = $r2;

        r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: int $$dirty> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r2, $r4;
        kotlin.jvm.functions.Function3 $r3;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C90@3803L28:StateRestorationTester.kt#ruzxor");

        $i1 = $i0 & 11;

        if $i1 != 2 goto label1;

        $z3 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z3 != 0 goto label4;

     label1:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1669258494, $i0, -1, "androidx.compose.ui.test.StateRestorationTester.InjectRestorationRegistry.<anonymous> (StateRestorationTester.kt:88)");

     label2:
        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $restorationRegistry>;

        $z1 = virtualinvoke $r2.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: boolean getShouldEmitChildren()>();

        if $z1 == 0 goto label3;

        $r3 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: kotlin.jvm.functions.Function3 $content>;

        $r4 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $restorationRegistry>;

        $i2 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: int $$dirty>;

        $i3 = $i2 << 3;

        $i4 = 112 & $i3;

        $i5 = 8 | $i4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r3.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r5);

     label3:
        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label5;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label5;

     label4:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label5:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$1: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2
<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: androidx.compose.ui.test.StateRestorationTester $tmp0_rcvr>
<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: kotlin.jvm.functions.Function3 $content>
<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: int $$changed>
    void <init>(androidx.compose.ui.test.StateRestorationTester, kotlin.jvm.functions.Function3, int)
    {
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2 r0;
        androidx.compose.ui.test.StateRestorationTester $r1;
        kotlin.jvm.functions.Function3 $r2;
        int $i0;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        $i0 := @parameter2: int;

        r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: androidx.compose.ui.test.StateRestorationTester $tmp0_rcvr> = $r1;

        r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: kotlin.jvm.functions.Function3 $content> = $r2;

        r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function3 $r2;
        androidx.compose.ui.test.StateRestorationTester $r3;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r3 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: androidx.compose.ui.test.StateRestorationTester $tmp0_rcvr>;

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: kotlin.jvm.functions.Function3 $content>;

        $i1 = r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: int $$changed>;

        $i2 = $i1 | 1;

        staticinvoke <androidx.compose.ui.test.StateRestorationTester: void access$InjectRestorationRegistry(androidx.compose.ui.test.StateRestorationTester,kotlin.jvm.functions.Function3,androidx.compose.runtime.Composer,int)>($r3, $r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$InjectRestorationRegistry$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1
<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry this$0>
    void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r1;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r2;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry this$0>;

        $r3 = staticinvoke <androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry access$getOriginal$p(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)>($r2);

        $z0 = interfaceinvoke $r3.<androidx.compose.runtime.saveable.SaveableStateRegistry: boolean canBeSaved(java.lang.Object)>(r1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1: java.lang.Boolean invoke(java.lang.Object)>(r1);

        return $r2;
    }

androidx.compose.ui.test.StateRestorationTester$RestorationRegistry
<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry original>
<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.MutableState shouldEmitChildren$delegate>
<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry>
<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: java.util.Map savedMap>
    public void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry r1, $r4;
        java.lang.Boolean $r2;
        androidx.compose.runtime.MutableState $r3;
        java.util.Map $r5;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "original");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry original> = r1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r3 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r2, null, 2, null);

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.MutableState shouldEmitChildren$delegate> = $r3;

        $r4 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry original>;

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry> = $r4;

        $r5 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: java.util.Map savedMap> = $r5;

        return;
    }

    public final boolean getShouldEmitChildren()
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.MutableState shouldEmitChildren$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setShouldEmitChildren(boolean)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.MutableState shouldEmitChildren$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final void saveStateAndDisposeChildren()
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;
        java.util.Map $r2;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r1 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.saveable.SaveableStateRegistry: java.util.Map performSave()>();

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: java.util.Map savedMap> = $r2;

        specialinvoke r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: void setShouldEmitChildren(boolean)>(0);

        return;
    }

    public final void emitChildrenWithRestoredState()
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1 $r1;
        java.util.Map $r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r4;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: java.util.Map savedMap>;

        $r1 = new androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1;

        specialinvoke $r1.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry$emitChildrenWithRestoredState$1: void <init>(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)>(r0);

        $r3 = (kotlin.jvm.functions.Function1) $r1;

        $r4 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.saveable.SaveableStateRegistry SaveableStateRegistry(java.util.Map,kotlin.jvm.functions.Function1)>($r2, $r3);

        r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry> = $r4;

        specialinvoke r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: void setShouldEmitChildren(boolean)>(1);

        return;
    }

    public java.lang.Object consumeRestored(java.lang.String)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        java.lang.String r1;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry>;

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateRegistry: java.lang.Object consumeRestored(java.lang.String)>(r1);

        return $r3;
    }

    public androidx.compose.runtime.saveable.SaveableStateRegistry$Entry registerProvider(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r3;
        androidx.compose.runtime.saveable.SaveableStateRegistry$Entry $r4;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueProvider");

        $r3 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry>;

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.saveable.SaveableStateRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry$Entry registerProvider(java.lang.String,kotlin.jvm.functions.Function0)>(r1, r2);

        return $r4;
    }

    public boolean canBeSaved(java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        java.lang.Object r1;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry>;

        $z0 = interfaceinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateRegistry: boolean canBeSaved(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Map performSave()
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;
        java.util.Map $r2;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r1 = r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry currentRegistry>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.saveable.SaveableStateRegistry: java.util.Map performSave()>();

        return $r2;
    }

    public static final androidx.compose.runtime.saveable.SaveableStateRegistry access$getOriginal$p(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)
    {
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;

        $r0 := @parameter0: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r1 = $r0.<androidx.compose.ui.test.StateRestorationTester$RestorationRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry original>;

        return $r1;
    }

androidx.compose.ui.test.StateRestorationTester$setContent$1$1
<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: androidx.compose.ui.test.StateRestorationTester this$0>
<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: kotlin.jvm.functions.Function2 $composable>
    void <init>(androidx.compose.ui.test.StateRestorationTester, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.test.StateRestorationTester$setContent$1$1 r0;
        androidx.compose.ui.test.StateRestorationTester $r1;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$setContent$1$1;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: androidx.compose.ui.test.StateRestorationTester this$0> = $r1;

        r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: kotlin.jvm.functions.Function2 $composable> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(3);

        return;
    }

    public final void invoke(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.test.StateRestorationTester$setContent$1$1 r0;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry r1;
        androidx.compose.runtime.Composer $r2;
        int $i0;
        boolean $z0, $z1;
        androidx.compose.ui.test.StateRestorationTester $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$setContent$1$1;

        r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester$RestorationRegistry;

        $r2 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "registry");

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C54@2240L12:StateRestorationTester.kt#ruzxor");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1336659746, $i0, -1, "androidx.compose.ui.test.StateRestorationTester.setContent.<anonymous>.<anonymous> (StateRestorationTester.kt:52)");

     label1:
        $r3 = r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: androidx.compose.ui.test.StateRestorationTester this$0>;

        staticinvoke <androidx.compose.ui.test.StateRestorationTester: void access$setRegistry$p(androidx.compose.ui.test.StateRestorationTester,androidx.compose.ui.test.StateRestorationTester$RestorationRegistry)>($r3, r1);

        $r4 = r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: kotlin.jvm.functions.Function2 $composable>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$setContent$1$1 r0;
        java.lang.Object r1, r2, r3;
        java.lang.Number $r4;
        androidx.compose.ui.test.StateRestorationTester$RestorationRegistry $r5;
        androidx.compose.runtime.Composer $r6;
        int $i0;
        kotlin.Unit $r7;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$setContent$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (androidx.compose.ui.test.StateRestorationTester$RestorationRegistry) r1;

        $r6 = (androidx.compose.runtime.Composer) r2;

        $r4 = (java.lang.Number) r3;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: void invoke(androidx.compose.ui.test.StateRestorationTester$RestorationRegistry,androidx.compose.runtime.Composer,int)>($r5, $r6, $i0);

        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

androidx.compose.ui.test.StateRestorationTester$setContent$1
<androidx.compose.ui.test.StateRestorationTester$setContent$1: androidx.compose.ui.test.StateRestorationTester this$0>
<androidx.compose.ui.test.StateRestorationTester$setContent$1: kotlin.jvm.functions.Function2 $composable>
    void <init>(androidx.compose.ui.test.StateRestorationTester, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.test.StateRestorationTester$setContent$1 r0;
        androidx.compose.ui.test.StateRestorationTester $r1;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$setContent$1;

        $r1 := @parameter0: androidx.compose.ui.test.StateRestorationTester;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1: androidx.compose.ui.test.StateRestorationTester this$0> = $r1;

        r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1: kotlin.jvm.functions.Function2 $composable> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.test.StateRestorationTester$setContent$1 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.test.StateRestorationTester$setContent$1$1 $r2;
        kotlin.jvm.functions.Function2 $r3;
        androidx.compose.ui.test.StateRestorationTester $r4, $r5;
        androidx.compose.runtime.internal.ComposableLambda $r6;
        kotlin.jvm.functions.Function3 $r7;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$setContent$1;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C52@2143L123:StateRestorationTester.kt#ruzxor");

        $i1 = $i0 & 11;

        if $i1 != 2 goto label1;

        $z2 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z2 != 0 goto label3;

     label1:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1794916254, $i0, -1, "androidx.compose.ui.test.StateRestorationTester.setContent.<anonymous> (StateRestorationTester.kt:51)");

     label2:
        $r5 = r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1: androidx.compose.ui.test.StateRestorationTester this$0>;

        $r2 = new androidx.compose.ui.test.StateRestorationTester$setContent$1$1;

        $r4 = r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1: androidx.compose.ui.test.StateRestorationTester this$0>;

        $r3 = r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1: kotlin.jvm.functions.Function2 $composable>;

        specialinvoke $r2.<androidx.compose.ui.test.StateRestorationTester$setContent$1$1: void <init>(androidx.compose.ui.test.StateRestorationTester,kotlin.jvm.functions.Function2)>($r4, $r3);

        $r6 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: androidx.compose.runtime.internal.ComposableLambda composableLambda(androidx.compose.runtime.Composer,int,boolean,java.lang.Object)>($r1, -1336659746, 1, $r2);

        $r7 = (kotlin.jvm.functions.Function3) $r6;

        staticinvoke <androidx.compose.ui.test.StateRestorationTester: void access$InjectRestorationRegistry(androidx.compose.ui.test.StateRestorationTester,kotlin.jvm.functions.Function3,androidx.compose.runtime.Composer,int)>($r5, $r7, $r1, 70);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label4;

     label3:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label4:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.StateRestorationTester$setContent$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.test.StateRestorationTester$setContent$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.test.StateRestorationTester$setContent$1: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

