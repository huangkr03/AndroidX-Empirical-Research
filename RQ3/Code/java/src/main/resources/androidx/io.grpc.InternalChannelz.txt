io.grpc.InternalChannelz
<io.grpc.InternalChannelz: boolean $assertionsDisabled>
<io.grpc.InternalChannelz: io.grpc.InternalChannelz INSTANCE>
<io.grpc.InternalChannelz: java.util.logging.Logger log>
<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap otherSockets>
<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap perServerSockets>
<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap rootChannels>
<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap servers>
<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap subchannels>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        io.grpc.InternalChannelz $r3;

        <io.grpc.InternalChannelz: boolean $assertionsDisabled> = 1;

        $r0 = class "Lio/grpc/InternalChannelz;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.InternalChannelz: java.util.logging.Logger log> = $r2;

        $r3 = new io.grpc.InternalChannelz;

        specialinvoke $r3.<io.grpc.InternalChannelz: void <init>()>();

        <io.grpc.InternalChannelz: io.grpc.InternalChannelz INSTANCE> = $r3;

        return;
    }

    public void <init>()
    {
        io.grpc.InternalChannelz $r0;
        java.util.concurrent.ConcurrentSkipListMap $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: io.grpc.InternalChannelz;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentSkipListMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();

        $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap servers> = $r1;

        $r1 = new java.util.concurrent.ConcurrentSkipListMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();

        $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap rootChannels> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap subchannels> = $r2;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap otherSockets> = $r2;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap perServerSockets> = $r2;

        return;
    }

    static java.util.logging.Logger access$400()
    {
        java.util.logging.Logger r0;

        r0 = <io.grpc.InternalChannelz: java.util.logging.Logger log>;

        return r0;
    }

    private static void add(java.util.Map, io.grpc.InternalInstrumented)
    {
        java.util.Map $r0;
        io.grpc.InternalInstrumented $r1;
        io.grpc.InternalLogId $r2;
        long $l0;
        java.lang.Long $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.AssertionError $r5;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: io.grpc.InternalInstrumented;

        $r2 = interfaceinvoke $r1.<io.grpc.InternalInstrumented: io.grpc.InternalLogId getLogId()>();

        $l0 = virtualinvoke $r2.<io.grpc.InternalLogId: long getId()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        $r1 = (io.grpc.InternalInstrumented) $r4;

        $z0 = <io.grpc.InternalChannelz: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r1 != null goto label1;

        return;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        return;
    }

    public static long id(io.grpc.InternalWithLogId)
    {
        io.grpc.InternalWithLogId $r0;
        io.grpc.InternalLogId $r1;
        long $l0;

        $r0 := @parameter0: io.grpc.InternalWithLogId;

        $r1 = interfaceinvoke $r0.<io.grpc.InternalWithLogId: io.grpc.InternalLogId getLogId()>();

        $l0 = virtualinvoke $r1.<io.grpc.InternalLogId: long getId()>();

        return $l0;
    }

    public static io.grpc.InternalChannelz instance()
    {
        io.grpc.InternalChannelz r0;

        r0 = <io.grpc.InternalChannelz: io.grpc.InternalChannelz INSTANCE>;

        return r0;
    }

    private static void remove(java.util.Map, io.grpc.InternalInstrumented)
    {
        java.util.Map $r0;
        io.grpc.InternalInstrumented $r1;
        long $l0;
        java.lang.Long $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.AssertionError $r4;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: io.grpc.InternalInstrumented;

        $l0 = staticinvoke <io.grpc.InternalChannelz: long id(io.grpc.InternalWithLogId)>($r1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        $r1 = (io.grpc.InternalInstrumented) $r3;

        $z0 = <io.grpc.InternalChannelz: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r1 == null goto label1;

        return;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        return;
    }

    public void addClientSocket(io.grpc.InternalInstrumented)
    {
        io.grpc.InternalChannelz $r0;
        io.grpc.InternalInstrumented $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.InternalChannelz;

        $r1 := @parameter0: io.grpc.InternalInstrumented;

        $r2 = $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap otherSockets>;

        r3 = (java.util.Map) $r2;

        staticinvoke <io.grpc.InternalChannelz: void add(java.util.Map,io.grpc.InternalInstrumented)>(r3, $r1);

        return;
    }

    public void addRootChannel(io.grpc.InternalInstrumented)
    {
        io.grpc.InternalChannelz $r0;
        io.grpc.InternalInstrumented $r1;
        java.util.concurrent.ConcurrentNavigableMap $r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.InternalChannelz;

        $r1 := @parameter0: io.grpc.InternalInstrumented;

        $r2 = $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap rootChannels>;

        r3 = (java.util.Map) $r2;

        staticinvoke <io.grpc.InternalChannelz: void add(java.util.Map,io.grpc.InternalInstrumented)>(r3, $r1);

        return;
    }

    public void addSubchannel(io.grpc.InternalInstrumented)
    {
        io.grpc.InternalChannelz $r0;
        io.grpc.InternalInstrumented $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.InternalChannelz;

        $r1 := @parameter0: io.grpc.InternalInstrumented;

        $r2 = $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap subchannels>;

        r3 = (java.util.Map) $r2;

        staticinvoke <io.grpc.InternalChannelz: void add(java.util.Map,io.grpc.InternalInstrumented)>(r3, $r1);

        return;
    }

    public void removeClientSocket(io.grpc.InternalInstrumented)
    {
        io.grpc.InternalChannelz $r0;
        io.grpc.InternalInstrumented $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.InternalChannelz;

        $r1 := @parameter0: io.grpc.InternalInstrumented;

        $r2 = $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap otherSockets>;

        r3 = (java.util.Map) $r2;

        staticinvoke <io.grpc.InternalChannelz: void remove(java.util.Map,io.grpc.InternalInstrumented)>(r3, $r1);

        return;
    }

    public void removeRootChannel(io.grpc.InternalInstrumented)
    {
        io.grpc.InternalChannelz $r0;
        io.grpc.InternalInstrumented $r1;
        java.util.concurrent.ConcurrentNavigableMap $r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.InternalChannelz;

        $r1 := @parameter0: io.grpc.InternalInstrumented;

        $r2 = $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap rootChannels>;

        r3 = (java.util.Map) $r2;

        staticinvoke <io.grpc.InternalChannelz: void remove(java.util.Map,io.grpc.InternalInstrumented)>(r3, $r1);

        return;
    }

    public void removeSubchannel(io.grpc.InternalInstrumented)
    {
        io.grpc.InternalChannelz $r0;
        io.grpc.InternalInstrumented $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.InternalChannelz;

        $r1 := @parameter0: io.grpc.InternalInstrumented;

        $r2 = $r0.<io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap subchannels>;

        r3 = (java.util.Map) $r2;

        staticinvoke <io.grpc.InternalChannelz: void remove(java.util.Map,io.grpc.InternalInstrumented)>(r3, $r1);

        return;
    }

io.grpc.InternalChannelz$1
io.grpc.InternalChannelz$ChannelTrace$Event$Builder
<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId channelRef>
<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.String description>
<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>
<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId subchannelRef>
<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.Long timestampNanos>
    public void <init>()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r0;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public io.grpc.InternalChannelz$ChannelTrace$Event build()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r0;
        java.lang.String $r1;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r2;
        io.grpc.InternalWithLogId $r3, $r4;
        long $l0;
        java.lang.Long $r5;
        boolean $z0;
        io.grpc.InternalChannelz$ChannelTrace$Event $r6;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        $r1 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.String description>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "description");

        $r2 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "severity");

        $r5 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.Long timestampNanos>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "timestampNanos");

        $r3 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId channelRef>;

        if $r3 == null goto label2;

        $r3 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId subchannelRef>;

        if $r3 != null goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "at least one of channelRef and subchannelRef must be null");

        $r6 = new io.grpc.InternalChannelz$ChannelTrace$Event;

        $r1 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.String description>;

        $r2 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        $r5 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.Long timestampNanos>;

        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $r3 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId channelRef>;

        $r4 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId subchannelRef>;

        specialinvoke $r6.<io.grpc.InternalChannelz$ChannelTrace$Event: void <init>(java.lang.String,io.grpc.InternalChannelz$ChannelTrace$Event$Severity,long,io.grpc.InternalWithLogId,io.grpc.InternalWithLogId,io.grpc.InternalChannelz$1)>($r1, $r2, $l0, $r3, $r4, null);

        return $r6;
    }

    public io.grpc.InternalChannelz$ChannelTrace$Event$Builder setDescription(java.lang.String)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r0;
        java.lang.String $r1;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        $r1 := @parameter0: java.lang.String;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.String description> = $r1;

        return $r0;
    }

    public io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSeverity(io.grpc.InternalChannelz$ChannelTrace$Event$Severity)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r0;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r1;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        $r1 := @parameter0: io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity> = $r1;

        return $r0;
    }

    public io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSubchannelRef(io.grpc.InternalWithLogId)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r0;
        io.grpc.InternalWithLogId $r1;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        $r1 := @parameter0: io.grpc.InternalWithLogId;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId subchannelRef> = $r1;

        return $r0;
    }

    public io.grpc.InternalChannelz$ChannelTrace$Event$Builder setTimestampNanos(long)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r0;
        java.lang.Long $r1;
        long $l0;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.Long timestampNanos> = $r1;

        return $r0;
    }

io.grpc.InternalChannelz$ChannelTrace$Event$Severity
<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $VALUES>
<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_ERROR>
<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_INFO>
<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_UNKNOWN>
<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_WARNING>
    private static io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $values()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $r0;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r1;

        $r0 = newarray (io.grpc.InternalChannelz$ChannelTrace$Event$Severity)[4];

        $r1 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_UNKNOWN>;

        $r0[0] = $r1;

        $r1 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_INFO>;

        $r0[1] = $r1;

        $r1 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_WARNING>;

        $r0[2] = $r1;

        $r1 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_ERROR>;

        $r0[3] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $r0;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r1;

        $r1 = new io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        specialinvoke $r1.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: void <init>(java.lang.String,int)>("CT_UNKNOWN", 0);

        <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_UNKNOWN> = $r1;

        $r1 = new io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        specialinvoke $r1.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: void <init>(java.lang.String,int)>("CT_INFO", 1);

        <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_INFO> = $r1;

        $r1 = new io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        specialinvoke $r1.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: void <init>(java.lang.String,int)>("CT_WARNING", 2);

        <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_WARNING> = $r1;

        $r1 = new io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        specialinvoke $r1.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: void <init>(java.lang.String,int)>("CT_ERROR", 3);

        <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_ERROR> = $r1;

        $r0 = staticinvoke <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $values()>();

        <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()
    {
        java.lang.Object $r0;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $r1;

        $r1 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.InternalChannelz$ChannelTrace$Event$Severity[]) $r0;

        return $r1;
    }

io.grpc.InternalChannelz$ChannelTrace$Event
<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef>
<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description>
<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>
<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef>
<io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos>
    private void <init>(java.lang.String, io.grpc.InternalChannelz$ChannelTrace$Event$Severity, long, io.grpc.InternalWithLogId, io.grpc.InternalWithLogId)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event $r0;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r1;
        long $l0;
        io.grpc.InternalWithLogId $r2, $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        $l0 := @parameter2: long;

        $r2 := @parameter3: io.grpc.InternalWithLogId;

        $r3 := @parameter4: io.grpc.InternalWithLogId;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description> = $r5;

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "severity");

        $r1 = (io.grpc.InternalChannelz$ChannelTrace$Event$Severity) $r4;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity> = $r1;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos> = $l0;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef> = $r2;

        $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef> = $r3;

        return;
    }

    void <init>(java.lang.String, io.grpc.InternalChannelz$ChannelTrace$Event$Severity, long, io.grpc.InternalWithLogId, io.grpc.InternalWithLogId, io.grpc.InternalChannelz$1)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event $r0;
        java.lang.String $r1;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r2;
        long $l0;
        io.grpc.InternalWithLogId $r3, $r4;
        io.grpc.InternalChannelz$1 $r5;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: io.grpc.InternalChannelz$ChannelTrace$Event$Severity;

        $l0 := @parameter2: long;

        $r3 := @parameter3: io.grpc.InternalWithLogId;

        $r4 := @parameter4: io.grpc.InternalWithLogId;

        $r5 := @parameter5: io.grpc.InternalChannelz$1;

        specialinvoke $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: void <init>(java.lang.String,io.grpc.InternalChannelz$ChannelTrace$Event$Severity,long,io.grpc.InternalWithLogId,io.grpc.InternalWithLogId)>($r1, $r2, $l0, $r3, $r4);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        io.grpc.InternalChannelz$ChannelTrace$Event $r0, $r2;
        long $l0, $l1;
        java.lang.Object $r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r5, $r6;
        byte $b2;
        io.grpc.InternalWithLogId $r7, $r8;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof io.grpc.InternalChannelz$ChannelTrace$Event;

        $z1 = 0;

        if $z0 == 0 goto label2;

        $r2 = (io.grpc.InternalChannelz$ChannelTrace$Event) $r1;

        $r3 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description>;

        $r4 = $r2.<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label1;

        $r5 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        $r6 = $r2.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label1;

        $l1 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos>;

        $l0 = $r2.<io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $r7 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef>;

        $r8 = $r2.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z0 == 0 goto label1;

        $r7 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef>;

        $r8 = $r2.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label1;

     label1:
        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r3;
        long $l0;
        java.lang.Long $r4;
        io.grpc.InternalWithLogId $r5;
        int $i1;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r1 = newarray (java.lang.Object)[5];

        $r2 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description>;

        $r1[0] = $r2;

        $r3 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        $r1[1] = $r3;

        $l0 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[2] = $r4;

        $r5 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef>;

        $r1[3] = $r5;

        $r5 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef>;

        $r1[4] = $r5;

        $i1 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i1;
    }

    public java.lang.String toString()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        java.lang.String $r2;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r3;
        long $l0;
        io.grpc.InternalWithLogId $r4;

        $r0 := @this: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>($r0);

        $r2 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("description", $r2);

        $r3 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("severity", $r3);

        $l0 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long)>("timestampNanos", $l0);

        $r4 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("channelRef", $r4);

        $r4 = $r0.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("subchannelRef", $r4);

        $r2 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r2;
    }

io.grpc.InternalChannelz$OtherSecurity
io.grpc.InternalChannelz$Security
<io.grpc.InternalChannelz$Security: io.grpc.InternalChannelz$OtherSecurity other>
<io.grpc.InternalChannelz$Security: io.grpc.InternalChannelz$Tls tls>
    public void <init>(io.grpc.InternalChannelz$Tls)
    {
        io.grpc.InternalChannelz$Security $r0;
        java.lang.Object $r1;
        io.grpc.InternalChannelz$Tls $r2;

        $r0 := @this: io.grpc.InternalChannelz$Security;

        $r2 := @parameter0: io.grpc.InternalChannelz$Tls;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (io.grpc.InternalChannelz$Tls) $r1;

        $r0.<io.grpc.InternalChannelz$Security: io.grpc.InternalChannelz$Tls tls> = $r2;

        $r0.<io.grpc.InternalChannelz$Security: io.grpc.InternalChannelz$OtherSecurity other> = null;

        return;
    }

io.grpc.InternalChannelz$Tls
<io.grpc.InternalChannelz$Tls: java.lang.String cipherSuiteStandardName>
<io.grpc.InternalChannelz$Tls: java.security.cert.Certificate localCert>
<io.grpc.InternalChannelz$Tls: java.security.cert.Certificate remoteCert>
    public void <init>(javax.net.ssl.SSLSession)
    {
        io.grpc.InternalChannelz$Tls $r0;
        java.util.logging.Level $r1;
        javax.net.ssl.SSLSession $r2;
        java.lang.String $r3, $r10;
        java.security.cert.Certificate[] $r4;
        java.security.cert.Certificate $r5, $r6;
        java.lang.Throwable $r7;
        java.util.logging.Logger $r8;
        java.lang.Object[] $r9;

        $r0 := @this: io.grpc.InternalChannelz$Tls;

        $r2 := @parameter0: javax.net.ssl.SSLSession;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();

        $r4 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getLocalCertificates()>();

        $r5 = null;

        if $r4 == null goto label1;

        $r6 = $r4[0];

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r4 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label3:
        if $r4 == null goto label4;

        $r5 = $r4[0];

        goto label4;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = staticinvoke <io.grpc.InternalChannelz: java.util.logging.Logger access$400()>();

        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.lang.String getPeerHost()>();

        $r9[0] = $r10;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Peer cert not available for peerHost=%s", $r9);

        virtualinvoke $r8.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "io.grpc.InternalChannelz$Tls", "<init>", $r10, $r7);

     label6:
        $r0.<io.grpc.InternalChannelz$Tls: java.lang.String cipherSuiteStandardName> = $r3;

        $r0.<io.grpc.InternalChannelz$Tls: java.security.cert.Certificate localCert> = $r6;

        $r0.<io.grpc.InternalChannelz$Tls: java.security.cert.Certificate remoteCert> = $r5;

        return;

        catch javax.net.ssl.SSLPeerUnverifiedException from label2 to label3 with label5;
    }

