androidx.paging.CachedPageEventFlow
<androidx.paging.CachedPageEventFlow: androidx.paging.FlattenedPageController pageController>
<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.MutableSharedFlow mutableSharedSrc>
<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.SharedFlow sharedForDownstream>
<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.Job job>
<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.Flow downstreamFlow>
    public void <init>(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.CoroutineScope)
    {
        androidx.paging.CachedPageEventFlow r0, r5;
        kotlinx.coroutines.flow.Flow r1, $r23;
        kotlinx.coroutines.CoroutineScope r2;
        kotlinx.coroutines.Job r3, r4;
        boolean z0, z1;
        kotlin.Unit r6;
        androidx.paging.FlattenedPageController $r7;
        kotlinx.coroutines.channels.BufferOverflow $r8;
        kotlinx.coroutines.flow.MutableSharedFlow $r9, $r10;
        androidx.paging.CachedPageEventFlow$sharedForDownstream$1 $r11;
        kotlinx.coroutines.flow.SharedFlow $r12, $r14;
        kotlin.jvm.functions.Function2 $r13, $r17, $r22;
        androidx.paging.CachedPageEventFlow$job$1 $r15;
        kotlinx.coroutines.CoroutineStart $r16;
        androidx.paging.CachedPageEventFlow$job$2$1 $r18;
        kotlin.jvm.functions.Function1 $r19;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1 $r21;

        r0 := @this: androidx.paging.CachedPageEventFlow;

        r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "src");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new androidx.paging.FlattenedPageController;

        specialinvoke $r7.<androidx.paging.FlattenedPageController: void <init>()>();

        r0.<androidx.paging.CachedPageEventFlow: androidx.paging.FlattenedPageController pageController> = $r7;

        $r8 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        $r9 = staticinvoke <kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow(int,int,kotlinx.coroutines.channels.BufferOverflow)>(1, 2147483647, $r8);

        r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.MutableSharedFlow mutableSharedSrc> = $r9;

        $r10 = r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.MutableSharedFlow mutableSharedSrc>;

        $r12 = (kotlinx.coroutines.flow.SharedFlow) $r10;

        $r11 = new androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        specialinvoke $r11.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: void <init>(androidx.paging.CachedPageEventFlow,kotlin.coroutines.Continuation)>(r0, null);

        $r13 = (kotlin.jvm.functions.Function2) $r11;

        $r14 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)>($r12, $r13);

        r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.SharedFlow sharedForDownstream> = $r14;

        $r16 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY>;

        $r15 = new androidx.paging.CachedPageEventFlow$job$1;

        specialinvoke $r15.<androidx.paging.CachedPageEventFlow$job$1: void <init>(kotlinx.coroutines.flow.Flow,androidx.paging.CachedPageEventFlow,kotlin.coroutines.Continuation)>(r1, r0, null);

        $r17 = (kotlin.jvm.functions.Function2) $r15;

        r3 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r2, null, $r16, $r17, 1, null);

        z0 = 0;

        z1 = 0;

        r4 = r3;

        r5 = r0;

        $r18 = new androidx.paging.CachedPageEventFlow$job$2$1;

        specialinvoke $r18.<androidx.paging.CachedPageEventFlow$job$2$1: void <init>(androidx.paging.CachedPageEventFlow)>(r0);

        $r19 = (kotlin.jvm.functions.Function1) $r18;

        interfaceinvoke r4.<kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r19);

        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r5.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.Job job> = r3;

        $r21 = new androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        specialinvoke $r21.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: void <init>(androidx.paging.CachedPageEventFlow,kotlin.coroutines.Continuation)>(r0, null);

        $r22 = (kotlin.jvm.functions.Function2) $r21;

        $r23 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r22);

        r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.Flow downstreamFlow> = $r23;

        return;
    }

    public final void close()
    {
        androidx.paging.CachedPageEventFlow r0;
        kotlinx.coroutines.Job $r1;

        r0 := @this: androidx.paging.CachedPageEventFlow;

        $r1 = r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.Job job>;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

    public final kotlinx.coroutines.flow.Flow getDownstreamFlow()
    {
        androidx.paging.CachedPageEventFlow r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.CachedPageEventFlow;

        $r1 = r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.Flow downstreamFlow>;

        return $r1;
    }

    public static final androidx.paging.FlattenedPageController access$getPageController$p(androidx.paging.CachedPageEventFlow)
    {
        androidx.paging.CachedPageEventFlow $r0;
        androidx.paging.FlattenedPageController $r1;

        $r0 := @parameter0: androidx.paging.CachedPageEventFlow;

        $r1 = $r0.<androidx.paging.CachedPageEventFlow: androidx.paging.FlattenedPageController pageController>;

        return $r1;
    }

    public static final kotlinx.coroutines.Job access$getJob$p(androidx.paging.CachedPageEventFlow)
    {
        androidx.paging.CachedPageEventFlow $r0;
        kotlinx.coroutines.Job $r1;

        $r0 := @parameter0: androidx.paging.CachedPageEventFlow;

        $r1 = $r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.Job job>;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.MutableSharedFlow access$getMutableSharedSrc$p(androidx.paging.CachedPageEventFlow)
    {
        androidx.paging.CachedPageEventFlow $r0;
        kotlinx.coroutines.flow.MutableSharedFlow $r1;

        $r0 := @parameter0: androidx.paging.CachedPageEventFlow;

        $r1 = $r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.MutableSharedFlow mutableSharedSrc>;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.SharedFlow access$getSharedForDownstream$p(androidx.paging.CachedPageEventFlow)
    {
        androidx.paging.CachedPageEventFlow $r0;
        kotlinx.coroutines.flow.SharedFlow $r1;

        $r0 := @parameter0: androidx.paging.CachedPageEventFlow;

        $r1 = $r0.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.SharedFlow sharedForDownstream>;

        return $r1;
    }

androidx.paging.CachedPageEventFlow$downstreamFlow$1$1
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: int label>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: java.lang.Object L$0>
    void <init>(kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$1 r0;
        kotlin.coroutines.Continuation $r1;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r1);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$1 r0;
        java.lang.Object $r1, $r4;
        kotlin.collections.IndexedValue r2;
        int $i0;
        java.lang.Boolean $r5;
        java.lang.IllegalStateException $r6;
        boolean $z0;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: java.lang.Object L$0>;

        r2 = (kotlin.collections.IndexedValue) $r4;

        if r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r5 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>($z0);

        return $r5;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        specialinvoke $r4.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: void <init>(kotlin.coroutines.Continuation)>($r2);

        r3 = $r4;

        r3.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: java.lang.Object L$0> = r1;

        $r5 = (kotlin.coroutines.Continuation) r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlin.collections.IndexedValue, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$1 r0, $r5;
        kotlin.collections.IndexedValue r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        r1 := @parameter0: kotlin.collections.IndexedValue;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.CachedPageEventFlow$downstreamFlow$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlin.collections.IndexedValue $r4;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlin.collections.IndexedValue) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: java.lang.Object invoke(kotlin.collections.IndexedValue,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 this$0>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1>
    public void <init>(androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1 r0;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1;

        r1 := @parameter0: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 $r3;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label> = $i1;

        $r3 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $maxEventIndex$inlined>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined>
    public void <init>(kotlin.jvm.internal.Ref$IntRef, kotlinx.coroutines.flow.FlowCollector)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 r0;
        kotlin.jvm.internal.Ref$IntRef r1;
        kotlinx.coroutines.flow.FlowCollector r2;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: kotlin.jvm.internal.Ref$IntRef;

        r2 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $maxEventIndex$inlined> = r1;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.Object r0, $r2, r3, $r6, $r7, $r11, $r12;
        kotlin.coroutines.Continuation r1, r4, r20;
        boolean $z0;
        kotlin.jvm.internal.Ref$IntRef $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        kotlinx.coroutines.flow.FlowCollector $r10;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 r14;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1 $r15, r18;
        kotlin.collections.IndexedValue r16;
        kotlin.Unit $r17;
        java.lang.IllegalStateException r19;

        r14 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1;

        if $z0 == 0 goto label1;

        $r15 = (androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1) r1;

        $i3 = $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i4 = $i3 & -2147483648;

        if $i4 == 0 goto label1;

        $i5 = $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i6 = $i5 - -2147483648;

        $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label> = $i6;

        goto label2;

     label1:
        r18 = new androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1;

        specialinvoke r18.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: void <init>(androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1,kotlin.coroutines.Continuation)>(r14, r1);

        $r15 = r18;

     label2:
        $r2 = $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i7 = $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label>;

        tableswitch($i7)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label7;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r4 = (kotlin.coroutines.Continuation) $r15;

        r16 = (kotlin.collections.IndexedValue) r0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r16);

        $i1 = virtualinvoke r16.<kotlin.collections.IndexedValue: int getIndex()>();

        $r9 = r14.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $maxEventIndex$inlined>;

        $i2 = $r9.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i1 <= $i2 goto label6;

        $r10 = r14.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined>;

        $r11 = virtualinvoke r16.<kotlin.collections.IndexedValue: java.lang.Object getValue()>();

        $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0> = r14;

        $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1> = r16;

        $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: int label> = 1;

        r20 = (kotlin.coroutines.Continuation) $r15;

        $r12 = interfaceinvoke $r10.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r11, r20);

        if $r12 != r3 goto label5;

        return r3;

     label4:
        $r6 = $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1>;

        r16 = (kotlin.collections.IndexedValue) $r6;

        $r7 = $r15.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0>;

        r14 = (androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label5:
        $r8 = r14.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $maxEventIndex$inlined>;

        $i0 = virtualinvoke r16.<kotlin.collections.IndexedValue: int getIndex()>();

        $r8.<kotlin.jvm.internal.Ref$IntRef: int element> = $i0;

     label6:
        $r17 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r17;

     label7:
        r19 = new java.lang.IllegalStateException;

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r19;
    }

androidx.paging.CachedPageEventFlow$downstreamFlow$1
<androidx.paging.CachedPageEventFlow$downstreamFlow$1: int label>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1: java.lang.Object L$0>
<androidx.paging.CachedPageEventFlow$downstreamFlow$1: androidx.paging.CachedPageEventFlow this$0>
    void <init>(androidx.paging.CachedPageEventFlow, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1 r0;
        androidx.paging.CachedPageEventFlow $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        $r1 := @parameter0: androidx.paging.CachedPageEventFlow;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: androidx.paging.CachedPageEventFlow this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1 r0;
        java.lang.Object $r1, r5, $r7, $r17;
        kotlinx.coroutines.flow.FlowCollector $r2, $r15;
        kotlin.jvm.internal.Ref$IntRef r3, $r8;
        kotlinx.coroutines.flow.Flow $r4, $r12;
        int $i0;
        kotlin.Unit $r6;
        androidx.paging.CachedPageEventFlow $r9;
        kotlinx.coroutines.flow.SharedFlow $r10;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$1 $r11;
        kotlin.jvm.functions.Function2 $r13;
        androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1 $r14;
        kotlin.coroutines.Continuation $r16;
        java.lang.IllegalStateException $r18;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r8 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r8.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r3 = $r8;

        r3.<kotlin.jvm.internal.Ref$IntRef: int element> = -2147483648;

        $r9 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: androidx.paging.CachedPageEventFlow this$0>;

        $r10 = staticinvoke <androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.SharedFlow access$getSharedForDownstream$p(androidx.paging.CachedPageEventFlow)>($r9);

        $r12 = (kotlinx.coroutines.flow.Flow) $r10;

        $r11 = new androidx.paging.CachedPageEventFlow$downstreamFlow$1$1;

        specialinvoke $r11.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r13 = (kotlin.jvm.functions.Function2) $r11;

        $r4 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r12, $r13);

        $r14 = new androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1;

        specialinvoke $r14.<androidx.paging.CachedPageEventFlow$downstreamFlow$1$invokeSuspend$$inlined$collect$1: void <init>(kotlin.jvm.internal.Ref$IntRef,kotlinx.coroutines.flow.FlowCollector)>(r3, $r2);

        $r15 = (kotlinx.coroutines.flow.FlowCollector) $r14;

        $r16 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: int label> = 1;

        $r17 = interfaceinvoke $r4.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r15, $r16);

        if $r17 != r5 goto label3;

        return r5;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label4:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r18;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.paging.CachedPageEventFlow $r5;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        $r5 = r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: androidx.paging.CachedPageEventFlow this$0>;

        specialinvoke $r4.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: void <init>(androidx.paging.CachedPageEventFlow,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1 r0, $r5;
        kotlinx.coroutines.flow.FlowCollector r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.CachedPageEventFlow$downstreamFlow$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$downstreamFlow$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;

        r0 := @this: androidx.paging.CachedPageEventFlow$downstreamFlow$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$downstreamFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1
<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result>
<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label>
<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 this$0>
<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0>
<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1>
    public void <init>(androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1 r0;
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1;

        r1 := @parameter0: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 $r3;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label> = $i1;

        $r3 = r0.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1
<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1: androidx.paging.CachedPageEventFlow this$0>
    public void <init>(androidx.paging.CachedPageEventFlow)
    {
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 r0;
        androidx.paging.CachedPageEventFlow r1;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: androidx.paging.CachedPageEventFlow;

        r0.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1: androidx.paging.CachedPageEventFlow this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.Object r0, $r2, r3, $r7, $r8, $r11, $r14;
        kotlin.coroutines.Continuation r1, r4, r21, r22;
        boolean $z0;
        kotlin.Unit $r6;
        androidx.paging.CachedPageEventFlow $r9, $r12;
        androidx.paging.FlattenedPageController $r10;
        kotlinx.coroutines.flow.MutableSharedFlow $r13;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 r16;
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1 $r17, r19;
        kotlin.collections.IndexedValue r18;
        java.lang.IllegalStateException r20;

        r16 := @this: androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1;

        if $z0 == 0 goto label1;

        $r17 = (androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1) r1;

        $i0 = $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i3 = $i2 - -2147483648;

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label> = $i3;

        goto label2;

     label1:
        r19 = new androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1;

        specialinvoke r19.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: void <init>(androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1,kotlin.coroutines.Continuation)>(r16, r1);

        $r17 = r19;

     label2:
        $r2 = $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label6;
            default: goto label8;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r4 = (kotlin.coroutines.Continuation) $r17;

        r18 = (kotlin.collections.IndexedValue) r0;

        $r12 = r16.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1: androidx.paging.CachedPageEventFlow this$0>;

        $r13 = staticinvoke <androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.MutableSharedFlow access$getMutableSharedSrc$p(androidx.paging.CachedPageEventFlow)>($r12);

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0> = r16;

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1> = r18;

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label> = 1;

        r21 = (kotlin.coroutines.Continuation) $r17;

        $r14 = interfaceinvoke $r13.<kotlinx.coroutines.flow.MutableSharedFlow: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(r18, r21);

        if $r14 != r3 goto label5;

        return r3;

     label4:
        $r7 = $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1>;

        r18 = (kotlin.collections.IndexedValue) $r7;

        $r8 = $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0>;

        r16 = (androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1) $r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label5:
        $r9 = r16.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1: androidx.paging.CachedPageEventFlow this$0>;

        $r10 = staticinvoke <androidx.paging.CachedPageEventFlow: androidx.paging.FlattenedPageController access$getPageController$p(androidx.paging.CachedPageEventFlow)>($r9);

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$0> = null;

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object L$1> = null;

        $r17.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1$1: int label> = 2;

        r22 = (kotlin.coroutines.Continuation) $r17;

        $r11 = virtualinvoke $r10.<androidx.paging.FlattenedPageController: java.lang.Object record(kotlin.collections.IndexedValue,kotlin.coroutines.Continuation)>(r18, r22);

        if $r11 != r3 goto label7;

        return r3;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label7:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label8:
        r20 = new java.lang.IllegalStateException;

        specialinvoke r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r20;
    }

androidx.paging.CachedPageEventFlow$job$1
<androidx.paging.CachedPageEventFlow$job$1: int label>
<androidx.paging.CachedPageEventFlow$job$1: kotlinx.coroutines.flow.Flow $src>
<androidx.paging.CachedPageEventFlow$job$1: androidx.paging.CachedPageEventFlow this$0>
    void <init>(kotlinx.coroutines.flow.Flow, androidx.paging.CachedPageEventFlow, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$job$1 r0;
        kotlinx.coroutines.flow.Flow $r1;
        androidx.paging.CachedPageEventFlow $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: androidx.paging.CachedPageEventFlow;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.paging.CachedPageEventFlow$job$1: kotlinx.coroutines.flow.Flow $src> = $r1;

        r0.<androidx.paging.CachedPageEventFlow$job$1: androidx.paging.CachedPageEventFlow this$0> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$job$1 r0;
        java.lang.Object $r1, r4, $r10;
        kotlinx.coroutines.flow.Flow $r2, $r6;
        androidx.paging.CachedPageEventFlow r3;
        int $i0;
        kotlin.Unit $r5;
        androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1 $r7;
        kotlinx.coroutines.flow.FlowCollector $r8;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.CachedPageEventFlow$job$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = r0.<androidx.paging.CachedPageEventFlow$job$1: kotlinx.coroutines.flow.Flow $src>;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)>($r6);

        r3 = r0.<androidx.paging.CachedPageEventFlow$job$1: androidx.paging.CachedPageEventFlow this$0>;

        $r7 = new androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1;

        specialinvoke $r7.<androidx.paging.CachedPageEventFlow$job$1$invokeSuspend$$inlined$collect$1: void <init>(androidx.paging.CachedPageEventFlow)>(r3);

        $r8 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.CachedPageEventFlow$job$1: int label> = 1;

        $r10 = interfaceinvoke $r2.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r8, $r9);

        if $r10 != r4 goto label3;

        return r4;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$job$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.paging.CachedPageEventFlow $r4;
        kotlinx.coroutines.flow.Flow $r5;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.CachedPageEventFlow$job$1;

        $r5 = r0.<androidx.paging.CachedPageEventFlow$job$1: kotlinx.coroutines.flow.Flow $src>;

        $r4 = r0.<androidx.paging.CachedPageEventFlow$job$1: androidx.paging.CachedPageEventFlow this$0>;

        specialinvoke $r3.<androidx.paging.CachedPageEventFlow$job$1: void <init>(kotlinx.coroutines.flow.Flow,androidx.paging.CachedPageEventFlow,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$job$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.CachedPageEventFlow$job$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.CachedPageEventFlow$job$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$job$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.CachedPageEventFlow$job$2$1
<androidx.paging.CachedPageEventFlow$job$2$1: androidx.paging.CachedPageEventFlow this$0>
    void <init>(androidx.paging.CachedPageEventFlow)
    {
        androidx.paging.CachedPageEventFlow$job$2$1 r0;
        androidx.paging.CachedPageEventFlow $r1;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$2$1;

        $r1 := @parameter0: androidx.paging.CachedPageEventFlow;

        r0.<androidx.paging.CachedPageEventFlow$job$2$1: androidx.paging.CachedPageEventFlow this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.paging.CachedPageEventFlow$job$2$1 r0;
        java.lang.Throwable r1;
        androidx.paging.CachedPageEventFlow $r2;
        kotlinx.coroutines.flow.MutableSharedFlow $r3;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$2$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.paging.CachedPageEventFlow$job$2$1: androidx.paging.CachedPageEventFlow this$0>;

        $r3 = staticinvoke <androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.MutableSharedFlow access$getMutableSharedSrc$p(androidx.paging.CachedPageEventFlow)>($r2);

        interfaceinvoke $r3.<kotlinx.coroutines.flow.MutableSharedFlow: boolean tryEmit(java.lang.Object)>(null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$job$2$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.CachedPageEventFlow$job$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.paging.CachedPageEventFlow$job$2$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.CachedPageEventFlow$sharedForDownstream$1
<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$1>
<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: int label>
<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0>
<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: androidx.paging.CachedPageEventFlow this$0>
    void <init>(androidx.paging.CachedPageEventFlow, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$sharedForDownstream$1 r0;
        androidx.paging.CachedPageEventFlow $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        $r1 := @parameter0: androidx.paging.CachedPageEventFlow;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: androidx.paging.CachedPageEventFlow this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$sharedForDownstream$1 r0;
        java.lang.Object $r1, r3, r5, $r6, $r7, $r9, $r10, $r13, $r20;
        java.util.List r2;
        kotlin.collections.IndexedValue r4;
        int $i0;
        kotlin.Unit $r8;
        androidx.paging.CachedPageEventFlow $r11, $r14;
        kotlinx.coroutines.Job $r12;
        androidx.paging.FlattenedPageController $r15;
        kotlin.coroutines.Continuation $r16, r23;
        java.lang.Iterable $r17;
        kotlinx.coroutines.flow.FlowCollector $r19;
        java.util.Iterator r21;
        boolean $z2;
        java.lang.IllegalStateException r22;

        r0 := @this: androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label5;
            default: goto label8;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r13 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0>;

        $r19 = (kotlinx.coroutines.flow.FlowCollector) $r13;

        $r14 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: androidx.paging.CachedPageEventFlow this$0>;

        $r15 = staticinvoke <androidx.paging.CachedPageEventFlow: androidx.paging.FlattenedPageController access$getPageController$p(androidx.paging.CachedPageEventFlow)>($r14);

        $r16 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0> = $r19;

        r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: int label> = 1;

        $r20 = virtualinvoke $r15.<androidx.paging.FlattenedPageController: java.lang.Object getStateAsEvents(kotlin.coroutines.Continuation)>($r16);

        if $r20 != r5 goto label3;

        return r5;

     label2:
        $r10 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0>;

        $r19 = (kotlinx.coroutines.flow.FlowCollector) $r10;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r20 = $r1;

     label3:
        r2 = (java.util.List) $r20;

        $r11 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: androidx.paging.CachedPageEventFlow this$0>;

        $r12 = staticinvoke <androidx.paging.CachedPageEventFlow: kotlinx.coroutines.Job access$getJob$p(androidx.paging.CachedPageEventFlow)>($r11);

        interfaceinvoke $r12.<kotlinx.coroutines.Job: boolean start()>();

        $r17 = (java.lang.Iterable) r2;

        r21 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        r3 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.collections.IndexedValue) r3;

        r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0> = $r19;

        r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$1> = r21;

        r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: int label> = 2;

        r23 = (kotlin.coroutines.Continuation) r0;

        $r9 = interfaceinvoke $r19.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(r4, r23);

        if $r9 != r5 goto label6;

        return r5;

     label5:
        $r6 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$1>;

        r21 = (java.util.Iterator) $r6;

        $r7 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0>;

        $r19 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label6:
        goto label4;

     label7:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label8:
        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r22;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$sharedForDownstream$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.paging.CachedPageEventFlow $r5;

        r0 := @this: androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        $r5 = r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: androidx.paging.CachedPageEventFlow this$0>;

        specialinvoke $r4.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: void <init>(androidx.paging.CachedPageEventFlow,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        androidx.paging.CachedPageEventFlow$sharedForDownstream$1 r0, $r5;
        kotlinx.coroutines.flow.FlowCollector r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.CachedPageEventFlow$sharedForDownstream$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.CachedPageEventFlow$sharedForDownstream$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;

        r0 := @this: androidx.paging.CachedPageEventFlow$sharedForDownstream$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.CachedPageEventFlow$sharedForDownstream$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

