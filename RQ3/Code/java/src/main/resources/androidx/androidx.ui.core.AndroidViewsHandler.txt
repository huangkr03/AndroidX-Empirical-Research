androidx.ui.core.AndroidViewsHandler
<androidx.ui.core.AndroidViewsHandler: java.util.HashMap layoutNode>
    public void <init>(android.content.Context)
    {
        androidx.ui.core.AndroidViewsHandler r0, r2;
        android.content.Context r1;
        boolean z0;
        java.util.HashMap r3, $r4;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        r2 = r0;

        z0 = 0;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r3 = $r4;

        r2.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap layoutNode> = r3;

        return;
    }

    public final java.util.HashMap getLayoutNode()
    {
        androidx.ui.core.AndroidViewsHandler r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        $r1 = r0.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap layoutNode>;

        return $r1;
    }

    public void onDescendantInvalidated(android.view.View, android.view.View)
    {
        androidx.ui.core.AndroidViewsHandler r0;
        android.view.View r1, r2;
        androidx.ui.core.LayoutNode r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "target");

        $r4 = virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap getLayoutNode()>();

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.ui.core.LayoutNode) $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        virtualinvoke r3.<androidx.ui.core.LayoutNode: void onInvalidate()>();

        return;
    }

    public android.view.ViewParent invalidateChildInParent(int[], android.graphics.Rect)
    {
        androidx.ui.core.AndroidViewsHandler r0;
        int[] r1;
        android.graphics.Rect r2;
        android.view.ViewParent $r3;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.graphics.Rect;

        $r3 = (android.view.ViewParent) null;

        return $r3;
    }

    protected void onMeasure(int, int)
    {
        androidx.ui.core.AndroidViewsHandler r0;
        int i0, i1;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: void setMeasuredDimension(int,int)>(0, 0);

        return;
    }

    protected void measureChildren(int, int)
    {
        androidx.ui.core.AndroidViewsHandler r0;
        int i0, i1;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.ui.core.AndroidViewsHandler r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        androidx.ui.core.AndroidViewsHandler r0;
        android.view.MotionEvent r1;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        r1 := @parameter0: android.view.MotionEvent;

        return 1;
    }

    public void requestLayout()
    {
        androidx.ui.core.AndroidViewsHandler r0;
        int i0, i1, i2, i3;
        android.view.View r1, $r2;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r3, $r6;
        java.lang.Object $r4, $r7;
        java.lang.Boolean $r5, $r9;
        androidx.ui.core.LayoutNode r8, r10;

        r0 := @this: androidx.ui.core.AndroidViewsHandler;

        $r2 = (android.view.View) r0;

        virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: void cleanupLayoutState(android.view.View)>($r2);

        i0 = virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: int getChildCount()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label5;

        if i3 > i1 goto label5;

     label1:
        i2 = i3;

        i3 = i3 + 1;

        r1 = virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: android.view.View getChildAt(int)>(i2);

        $z0 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap getLayoutNode()>();

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (androidx.ui.core.LayoutNode) $r4;

        if r8 != null goto label2;

        $r9 = (java.lang.Boolean) null;

        goto label3;

     label2:
        $z1 = virtualinvoke r8.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

     label3:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r5);

        if $z2 == 0 goto label4;

        $r6 = virtualinvoke r0.<androidx.ui.core.AndroidViewsHandler: java.util.HashMap getLayoutNode()>();

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (androidx.ui.core.LayoutNode) $r7;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r10);

        virtualinvoke r10.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

     label4:
        if i3 <= i1 goto label1;

     label5:
        return;
    }

