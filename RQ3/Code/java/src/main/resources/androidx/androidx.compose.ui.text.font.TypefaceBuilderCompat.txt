androidx.compose.ui.text.font.TypefaceBuilderCompat
<androidx.compose.ui.text.font.TypefaceBuilderCompat: androidx.compose.ui.text.font.TypefaceBuilderCompat INSTANCE>
    private void <init>()
    {
        androidx.compose.ui.text.font.TypefaceBuilderCompat r0;

        r0 := @this: androidx.compose.ui.text.font.TypefaceBuilderCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.graphics.Typeface createFromAssets(android.content.res.AssetManager, java.lang.String, android.content.Context, androidx.compose.ui.text.font.FontVariation$Settings)
    {
        androidx.compose.ui.text.font.TypefaceBuilderCompat r0;
        android.content.res.AssetManager r1;
        java.lang.String r2;
        android.content.Context r3;
        androidx.compose.ui.text.font.FontVariation$Settings r4;
        android.graphics.Typeface$Builder $r5, $r7;
        android.graphics.fonts.FontVariationAxis[] $r6;
        android.graphics.Typeface $r8;

        r0 := @this: androidx.compose.ui.text.font.TypefaceBuilderCompat;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: androidx.compose.ui.text.font.FontVariation$Settings;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "assetManager");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "variationSettings");

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = new android.graphics.Typeface$Builder;

        specialinvoke $r5.<android.graphics.Typeface$Builder: void <init>(android.content.res.AssetManager,java.lang.String)>(r1, r2);

        $r6 = specialinvoke r0.<androidx.compose.ui.text.font.TypefaceBuilderCompat: android.graphics.fonts.FontVariationAxis[] toVariationSettings(androidx.compose.ui.text.font.FontVariation$Settings,android.content.Context)>(r4, r3);

        $r7 = virtualinvoke $r5.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setFontVariationSettings(android.graphics.fonts.FontVariationAxis[])>($r6);

        $r8 = virtualinvoke $r7.<android.graphics.Typeface$Builder: android.graphics.Typeface build()>();

        return $r8;
    }

    public final android.graphics.Typeface createFromFile(java.io.File, android.content.Context, androidx.compose.ui.text.font.FontVariation$Settings)
    {
        androidx.compose.ui.text.font.TypefaceBuilderCompat r0;
        java.io.File r1;
        android.content.Context r2;
        androidx.compose.ui.text.font.FontVariation$Settings r3;
        android.graphics.Typeface$Builder $r4, $r6;
        android.graphics.fonts.FontVariationAxis[] $r5;
        android.graphics.Typeface $r7;

        r0 := @this: androidx.compose.ui.text.font.TypefaceBuilderCompat;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: androidx.compose.ui.text.font.FontVariation$Settings;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "file");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "variationSettings");

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = new android.graphics.Typeface$Builder;

        specialinvoke $r4.<android.graphics.Typeface$Builder: void <init>(java.io.File)>(r1);

        $r5 = specialinvoke r0.<androidx.compose.ui.text.font.TypefaceBuilderCompat: android.graphics.fonts.FontVariationAxis[] toVariationSettings(androidx.compose.ui.text.font.FontVariation$Settings,android.content.Context)>(r3, r2);

        $r6 = virtualinvoke $r4.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setFontVariationSettings(android.graphics.fonts.FontVariationAxis[])>($r5);

        $r7 = virtualinvoke $r6.<android.graphics.Typeface$Builder: android.graphics.Typeface build()>();

        return $r7;
    }

    public final android.graphics.Typeface createFromFileDescriptor(android.os.ParcelFileDescriptor, android.content.Context, androidx.compose.ui.text.font.FontVariation$Settings)
    {
        androidx.compose.ui.text.font.TypefaceBuilderCompat r0;
        android.os.ParcelFileDescriptor r1;
        android.content.Context r2;
        androidx.compose.ui.text.font.FontVariation$Settings r3;
        android.graphics.Typeface$Builder $r4, $r7;
        java.io.FileDescriptor $r5;
        android.graphics.fonts.FontVariationAxis[] $r6;
        android.graphics.Typeface $r8;

        r0 := @this: androidx.compose.ui.text.font.TypefaceBuilderCompat;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: androidx.compose.ui.text.font.FontVariation$Settings;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fileDescriptor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "variationSettings");

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = new android.graphics.Typeface$Builder;

        $r5 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r4.<android.graphics.Typeface$Builder: void <init>(java.io.FileDescriptor)>($r5);

        $r6 = specialinvoke r0.<androidx.compose.ui.text.font.TypefaceBuilderCompat: android.graphics.fonts.FontVariationAxis[] toVariationSettings(androidx.compose.ui.text.font.FontVariation$Settings,android.content.Context)>(r3, r2);

        $r7 = virtualinvoke $r4.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setFontVariationSettings(android.graphics.fonts.FontVariationAxis[])>($r6);

        $r8 = virtualinvoke $r7.<android.graphics.Typeface$Builder: android.graphics.Typeface build()>();

        return $r8;
    }

    private final android.graphics.fonts.FontVariationAxis[] toVariationSettings(androidx.compose.ui.text.font.FontVariation$Settings, android.content.Context)
    {
        androidx.compose.ui.text.font.TypefaceBuilderCompat r0;
        androidx.compose.ui.text.font.FontVariation$Settings $r1;
        android.content.Context r2;
        androidx.compose.ui.unit.Density r3, $r17;
        int i0, $i1, i2;
        java.lang.Object r5, r6;
        androidx.compose.ui.text.font.FontVariation$Setting r7;
        java.util.Collection r8, r20;
        boolean $z3;
        java.lang.IllegalStateException $r9;
        java.util.ArrayList $r10, r19;
        java.util.List $r11, $r18;
        android.graphics.fonts.FontVariationAxis[] $r12, $r14;
        java.lang.Object[] $r13;
        android.graphics.fonts.FontVariationAxis $r15;
        java.lang.String $r16;
        float $f0;

        r0 := @this: androidx.compose.ui.text.font.TypefaceBuilderCompat;

        $r1 := @parameter0: androidx.compose.ui.text.font.FontVariation$Settings;

        r2 := @parameter1: android.content.Context;

        if r2 == null goto label1;

        $r17 = staticinvoke <androidx.compose.ui.unit.AndroidDensity_androidKt: androidx.compose.ui.unit.Density Density(android.content.Context)>(r2);

        goto label3;

     label1:
        $z3 = virtualinvoke $r1.<androidx.compose.ui.text.font.FontVariation$Settings: boolean getNeedsDensity$ui_text_release()>();

        if $z3 != 0 goto label2;

        $r17 = staticinvoke <androidx.compose.ui.unit.DensityKt: androidx.compose.ui.unit.Density Density(float,float)>(1.0F, 1.0F);

        goto label3;

     label2:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Required density, but not provided");

        throw $r9;

     label3:
        r3 = $r17;

        $r18 = virtualinvoke $r1.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List getSettings()>();

        $r10 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r18.<java.util.List: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i1);

        r19 = $r10;

        i2 = 0;

        i0 = interfaceinvoke $r18.<java.util.List: int size()>();

     label4:
        if i2 >= i0 goto label5;

        r5 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = r5;

        r7 = (androidx.compose.ui.text.font.FontVariation$Setting) r6;

        r8 = (java.util.Collection) r19;

        $r15 = new android.graphics.fonts.FontVariationAxis;

        $r16 = interfaceinvoke r7.<androidx.compose.ui.text.font.FontVariation$Setting: java.lang.String getAxisName()>();

        $f0 = interfaceinvoke r7.<androidx.compose.ui.text.font.FontVariation$Setting: float toVariationValue(androidx.compose.ui.unit.Density)>(r3);

        specialinvoke $r15.<android.graphics.fonts.FontVariationAxis: void <init>(java.lang.String,float)>($r16, $f0);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r15);

        i2 = i2 + 1;

        goto label4;

     label5:
        $r11 = (java.util.List) r19;

        r20 = (java.util.Collection) $r11;

        $r12 = newarray (android.graphics.fonts.FontVariationAxis)[0];

        $r13 = interfaceinvoke r20.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r13, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        $r14 = (android.graphics.fonts.FontVariationAxis[]) $r13;

        return $r14;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.font.TypefaceBuilderCompat $r0;

        $r0 = new androidx.compose.ui.text.font.TypefaceBuilderCompat;

        specialinvoke $r0.<androidx.compose.ui.text.font.TypefaceBuilderCompat: void <init>()>();

        <androidx.compose.ui.text.font.TypefaceBuilderCompat: androidx.compose.ui.text.font.TypefaceBuilderCompat INSTANCE> = $r0;

        return;
    }

