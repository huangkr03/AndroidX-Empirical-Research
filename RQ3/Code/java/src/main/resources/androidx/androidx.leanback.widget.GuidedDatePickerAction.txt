androidx.leanback.widget.GuidedDatePickerAction
<androidx.leanback.widget.GuidedDatePickerAction: java.lang.String mDatePickerFormat>
<androidx.leanback.widget.GuidedDatePickerAction: long mDate>
<androidx.leanback.widget.GuidedDatePickerAction: long mMinDate>
<androidx.leanback.widget.GuidedDatePickerAction: long mMaxDate>
    public void <init>()
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        specialinvoke r0.<androidx.leanback.widget.GuidedAction: void <init>()>();

        r0.<androidx.leanback.widget.GuidedDatePickerAction: long mMinDate> = -9223372036854775808L;

        r0.<androidx.leanback.widget.GuidedDatePickerAction: long mMaxDate> = 9223372036854775807L;

        return;
    }

    public java.lang.String getDatePickerFormat()
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        java.lang.String $r1;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        $r1 = r0.<androidx.leanback.widget.GuidedDatePickerAction: java.lang.String mDatePickerFormat>;

        return $r1;
    }

    public long getDate()
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        long $l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        $l0 = r0.<androidx.leanback.widget.GuidedDatePickerAction: long mDate>;

        return $l0;
    }

    public void setDate(long)
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        long l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        l0 := @parameter0: long;

        r0.<androidx.leanback.widget.GuidedDatePickerAction: long mDate> = l0;

        return;
    }

    public long getMinDate()
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        long $l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        $l0 = r0.<androidx.leanback.widget.GuidedDatePickerAction: long mMinDate>;

        return $l0;
    }

    public long getMaxDate()
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        long $l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        $l0 = r0.<androidx.leanback.widget.GuidedDatePickerAction: long mMaxDate>;

        return $l0;
    }

    public void onSaveInstanceState(android.os.Bundle, java.lang.String)
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        android.os.Bundle r1;
        java.lang.String r2;
        long $l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        $l0 = virtualinvoke r0.<androidx.leanback.widget.GuidedDatePickerAction: long getDate()>();

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>(r2, $l0);

        return;
    }

    public void onRestoreInstanceState(android.os.Bundle, java.lang.String)
    {
        androidx.leanback.widget.GuidedDatePickerAction r0;
        android.os.Bundle r1;
        java.lang.String r2;
        long $l0, $l1;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        $l0 = virtualinvoke r0.<androidx.leanback.widget.GuidedDatePickerAction: long getDate()>();

        $l1 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String,long)>(r2, $l0);

        virtualinvoke r0.<androidx.leanback.widget.GuidedDatePickerAction: void setDate(long)>($l1);

        return;
    }

androidx.leanback.widget.GuidedDatePickerAction$Builder
    public void <init>(android.content.Context)
    {
        androidx.leanback.widget.GuidedDatePickerAction$Builder r0;
        android.content.Context r1;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: void <init>(android.content.Context)>(r1);

        return;
    }

    public androidx.leanback.widget.GuidedDatePickerAction build()
    {
        androidx.leanback.widget.GuidedDatePickerAction$Builder r0;
        androidx.leanback.widget.GuidedDatePickerAction r1, $r2;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$Builder;

        $r2 = new androidx.leanback.widget.GuidedDatePickerAction;

        specialinvoke $r2.<androidx.leanback.widget.GuidedDatePickerAction: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<androidx.leanback.widget.GuidedDatePickerAction$Builder: void applyDatePickerValues(androidx.leanback.widget.GuidedDatePickerAction)>(r1);

        return r1;
    }

androidx.leanback.widget.GuidedDatePickerAction$BuilderBase
<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: java.lang.String mDatePickerFormat>
<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mDate>
<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMinDate>
<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMaxDate>
    public void <init>(android.content.Context)
    {
        androidx.leanback.widget.GuidedDatePickerAction$BuilderBase r0;
        android.content.Context r1;
        java.util.Calendar r2;
        long $l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$BuilderBase;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.leanback.widget.GuidedAction$BuilderBase: void <init>(android.content.Context)>(r1);

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMinDate> = -9223372036854775808L;

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMaxDate> = 9223372036854775807L;

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mDate> = $l0;

        virtualinvoke r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: androidx.leanback.widget.GuidedAction$BuilderBase hasEditableActivatorView(boolean)>(1);

        return;
    }

    public androidx.leanback.widget.GuidedDatePickerAction$BuilderBase datePickerFormat(java.lang.String)
    {
        androidx.leanback.widget.GuidedDatePickerAction$BuilderBase r0;
        java.lang.String r1;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$BuilderBase;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: java.lang.String mDatePickerFormat> = r1;

        return r0;
    }

    public androidx.leanback.widget.GuidedDatePickerAction$BuilderBase date(long)
    {
        androidx.leanback.widget.GuidedDatePickerAction$BuilderBase r0;
        long l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$BuilderBase;

        l0 := @parameter0: long;

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mDate> = l0;

        return r0;
    }

    public androidx.leanback.widget.GuidedDatePickerAction$BuilderBase minDate(long)
    {
        androidx.leanback.widget.GuidedDatePickerAction$BuilderBase r0;
        long l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$BuilderBase;

        l0 := @parameter0: long;

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMinDate> = l0;

        return r0;
    }

    public androidx.leanback.widget.GuidedDatePickerAction$BuilderBase maxDate(long)
    {
        androidx.leanback.widget.GuidedDatePickerAction$BuilderBase r0;
        long l0;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$BuilderBase;

        l0 := @parameter0: long;

        r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMaxDate> = l0;

        return r0;
    }

    protected final void applyDatePickerValues(androidx.leanback.widget.GuidedDatePickerAction)
    {
        androidx.leanback.widget.GuidedDatePickerAction$BuilderBase r0;
        androidx.leanback.widget.GuidedDatePickerAction r1;
        java.lang.String $r2;
        long $l0, $l1, $l2, $l4, $l5;
        byte $b3;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: androidx.leanback.widget.GuidedDatePickerAction$BuilderBase;

        r1 := @parameter0: androidx.leanback.widget.GuidedDatePickerAction;

        specialinvoke r0.<androidx.leanback.widget.GuidedAction$BuilderBase: void applyValues(androidx.leanback.widget.GuidedAction)>(r1);

        $r2 = r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: java.lang.String mDatePickerFormat>;

        r1.<androidx.leanback.widget.GuidedDatePickerAction: java.lang.String mDatePickerFormat> = $r2;

        $l0 = r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mDate>;

        r1.<androidx.leanback.widget.GuidedDatePickerAction: long mDate> = $l0;

        $l2 = r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMinDate>;

        $l1 = r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMaxDate>;

        $b3 = $l2 cmp $l1;

        if $b3 <= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MinDate cannot be larger than MaxDate");

        throw $r3;

     label1:
        $l4 = r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMinDate>;

        r1.<androidx.leanback.widget.GuidedDatePickerAction: long mMinDate> = $l4;

        $l5 = r0.<androidx.leanback.widget.GuidedDatePickerAction$BuilderBase: long mMaxDate>;

        r1.<androidx.leanback.widget.GuidedDatePickerAction: long mMaxDate> = $l5;

        return;
    }

