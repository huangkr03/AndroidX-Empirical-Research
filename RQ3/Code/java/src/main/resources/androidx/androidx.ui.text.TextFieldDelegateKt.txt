androidx.ui.text.TextFieldDelegateKt
<androidx.ui.text.TextFieldDelegateKt: int DEFAULT_COMPOSITION_COLOR>
    private static final int computeLineHeightForEmptyText(androidx.ui.text.TextStyle, androidx.ui.unit.Density, androidx.ui.text.font.Font$ResourceLoader)
    {
        androidx.ui.text.TextStyle r0, r3, $r7;
        androidx.ui.unit.Density r1, r12;
        androidx.ui.text.font.Font$ResourceLoader r2, r5;
        java.util.List r4;
        androidx.ui.text.ParagraphConstraints r6, $r9;
        androidx.ui.text.style.TextDirectionAlgorithm $r8;
        kotlin.jvm.internal.FloatCompanionObject $r10;
        float $f0, $f1;
        androidx.ui.text.Paragraph $r11;
        int $i0;
        boolean z0;

        r0 := @parameter0: androidx.ui.text.TextStyle;

        r1 := @parameter1: androidx.ui.unit.Density;

        r2 := @parameter2: androidx.ui.text.font.Font$ResourceLoader;

        $r7 = new androidx.ui.text.TextStyle;

        $r8 = <androidx.ui.text.style.TextDirectionAlgorithm: androidx.ui.text.style.TextDirectionAlgorithm ContentOrLtr>;

        specialinvoke $r7.<androidx.ui.text.TextStyle: void <init>(long,long,androidx.ui.text.font.FontWeight,androidx.ui.text.font.FontStyle,androidx.ui.text.font.FontSynthesis,androidx.ui.text.font.FontFamily,java.lang.String,long,androidx.ui.text.style.BaselineShift,androidx.ui.text.style.TextGeometricTransform,androidx.ui.intl.LocaleList,long,androidx.ui.text.style.TextDecoration,androidx.ui.graphics.Shadow,androidx.ui.text.style.TextAlign,androidx.ui.text.style.TextDirectionAlgorithm,long,androidx.ui.text.style.TextIndent,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0L, 0L, null, null, null, null, null, 0L, null, null, null, 0L, null, null, null, $r8, 0L, null, 229375, null);

        r3 = virtualinvoke $r7.<androidx.ui.text.TextStyle: androidx.ui.text.TextStyle merge(androidx.ui.text.TextStyle)>(r0);

        z0 = 0;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r12 = r1;

        r5 = r2;

        $r9 = new androidx.ui.text.ParagraphConstraints;

        $r10 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $f0 = virtualinvoke $r10.<kotlin.jvm.internal.FloatCompanionObject: float getPOSITIVE_INFINITY()>();

        specialinvoke $r9.<androidx.ui.text.ParagraphConstraints: void <init>(float)>($f0);

        r6 = $r9;

        $r11 = staticinvoke <androidx.ui.text.ParagraphKt: androidx.ui.text.Paragraph Paragraph$default(java.lang.String,androidx.ui.text.TextStyle,java.util.List,java.util.List,int,boolean,androidx.ui.text.ParagraphConstraints,androidx.ui.unit.Density,androidx.ui.text.font.Font$ResourceLoader,int,java.lang.Object)>("H", r3, r4, null, 1, 0, r6, r12, r5, 8, null);

        $f1 = interfaceinvoke $r11.<androidx.ui.text.Paragraph: float getHeight()>();

        $i0 = staticinvoke <androidx.ui.text.TextFieldDelegateKt: int toIntPx(float)>($f1);

        return $i0;
    }

    private static final int toIntPx(float)
    {
        float $f0, $f1;
        boolean z0;
        double $d0, $d1;
        int $i0;

        $f0 := @parameter0: float;

        z0 = 0;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f1 = (float) $d1;

        $i0 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        return $i0;
    }

    public static final int access$computeLineHeightForEmptyText(androidx.ui.text.TextStyle, androidx.ui.unit.Density, androidx.ui.text.font.Font$ResourceLoader)
    {
        androidx.ui.text.TextStyle r0;
        androidx.ui.unit.Density r1;
        androidx.ui.text.font.Font$ResourceLoader r2;
        int $i0;

        r0 := @parameter0: androidx.ui.text.TextStyle;

        r1 := @parameter1: androidx.ui.unit.Density;

        r2 := @parameter2: androidx.ui.text.font.Font$ResourceLoader;

        $i0 = staticinvoke <androidx.ui.text.TextFieldDelegateKt: int computeLineHeightForEmptyText(androidx.ui.text.TextStyle,androidx.ui.unit.Density,androidx.ui.text.font.Font$ResourceLoader)>(r0, r1, r2);

        return $i0;
    }

