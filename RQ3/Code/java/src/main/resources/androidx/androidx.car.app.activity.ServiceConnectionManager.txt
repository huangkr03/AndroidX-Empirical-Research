androidx.car.app.activity.ServiceConnectionManager
<androidx.car.app.activity.ServiceConnectionManager: java.lang.String ACTION_RENDER>
<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>
<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName>
<androidx.car.app.activity.ServiceConnectionManager: android.content.Context mContext>
<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceDispatcher mServiceDispatcher>
<androidx.car.app.activity.ServiceConnectionManager: int mDisplayId>
<androidx.car.app.activity.ServiceConnectionManager: android.content.Intent mIntent>
<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.ICarAppActivity mICarAppActivity>
<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.HandshakeInfo mHandshakeInfo>
<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService>
<androidx.car.app.activity.ServiceConnectionManager: android.content.ServiceConnection mServiceConnectionImpl>
    public void <init>(android.content.Context, android.content.ComponentName, androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener)
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener r3;
        androidx.car.app.activity.ServiceConnectionManager$1 $r4;
        androidx.car.app.activity.ServiceDispatcher $r5;
        androidx.car.app.activity.ServiceDispatcher$OnBindingListener $r6;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.car.app.activity.ServiceConnectionManager$1;

        specialinvoke $r4.<androidx.car.app.activity.ServiceConnectionManager$1: void <init>(androidx.car.app.activity.ServiceConnectionManager)>(r0);

        r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ServiceConnection mServiceConnectionImpl> = $r4;

        r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.Context mContext> = r1;

        r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener> = r3;

        r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName> = r2;

        $r5 = new androidx.car.app.activity.ServiceDispatcher;

        $r6 = dynamicinvoke "isBound" <androidx.car.app.activity.ServiceDispatcher$OnBindingListener (androidx.car.app.activity.ServiceConnectionManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.car.app.activity.ServiceConnectionManager: boolean isBound()>, methodtype: boolean __METHODTYPE__());

        specialinvoke $r5.<androidx.car.app.activity.ServiceDispatcher: void <init>(androidx.car.app.activity.ErrorHandler,androidx.car.app.activity.ServiceDispatcher$OnBindingListener)>(r3, $r6);

        r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceDispatcher mServiceDispatcher> = $r5;

        return;
    }

    androidx.car.app.activity.ServiceDispatcher getServiceDispatcher()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.activity.ServiceDispatcher $r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r1 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceDispatcher mServiceDispatcher>;

        return $r1;
    }

    android.content.ComponentName getServiceComponentName()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        android.content.ComponentName $r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r1 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName>;

        return $r1;
    }

    android.content.ServiceConnection getServiceConnection()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        android.content.ServiceConnection $r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r1 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ServiceConnection mServiceConnectionImpl>;

        return $r1;
    }

    void setServiceConnection(android.content.ServiceConnection)
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        android.content.ServiceConnection r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        r1 := @parameter0: android.content.ServiceConnection;

        r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ServiceConnection mServiceConnectionImpl> = r1;

        return;
    }

    void setRendererService(androidx.car.app.activity.renderer.IRendererService)
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.activity.renderer.IRendererService r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        r1 := @parameter0: androidx.car.app.activity.renderer.IRendererService;

        r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService> = r1;

        return;
    }

    public androidx.car.app.HandshakeInfo getHandshakeInfo()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.HandshakeInfo $r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r1 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.HandshakeInfo mHandshakeInfo>;

        return $r1;
    }

    boolean isBound()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.activity.renderer.IRendererService $r1;
        boolean $z0;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r1 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void bind(android.content.Intent, androidx.car.app.activity.renderer.ICarAppActivity, int)
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        android.content.Intent r1, r3, $r8, $r11;
        androidx.car.app.activity.renderer.ICarAppActivity r2, $r10;
        int i0, $i1;
        java.util.List r4;
        java.util.Iterator r5;
        android.content.pm.ResolveInfo r6, $r31;
        java.lang.Object $r7, $r9, $r18, $r30;
        boolean $z0, $z1, $z2, $z3;
        android.content.Context $r12, $r39;
        android.content.pm.PackageManager $r13;
        java.lang.StringBuilder $r14, $r24, $r25, $r26, $r33, $r34, $r35, $r40, $r41, $r42, r47;
        java.lang.String $r15, $r21, $r22, $r27, $r36, $r43, r46;
        androidx.car.app.activity.ErrorHandler$ErrorType $r16, $r28, $r44;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener $r17, $r29, $r45;
        java.lang.Object[] $r19;
        android.content.pm.ServiceInfo $r20, $r32;
        android.content.ServiceConnection $r38;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.car.app.activity.renderer.ICarAppActivity;

        i0 := @parameter2: int;

        $r7 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r8 = (android.content.Intent) $r7;

        r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.Intent mIntent> = $r8;

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r10 = (androidx.car.app.activity.renderer.ICarAppActivity) $r9;

        r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.ICarAppActivity mICarAppActivity> = $r10;

        r0.<androidx.car.app.activity.ServiceConnectionManager: int mDisplayId> = i0;

        $z0 = virtualinvoke r0.<androidx.car.app.activity.ServiceConnectionManager: boolean isBound()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.car.app.activity.ServiceConnectionManager: void initializeService()>();

        return;

     label1:
        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.car.template.host.RendererService");

        r3 = $r11;

        $r12 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r4 = virtualinvoke $r13.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 128);

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i1 != 1 goto label3;

        $r30 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r31 = (android.content.pm.ResolveInfo) $r30;

        $r32 = $r31.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r46 = $r32.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating binding to: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarApp.Act", $r36);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r46);

        $r39 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.Context mContext>;

        $r38 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ServiceConnection mServiceConnectionImpl>;

        $z3 = virtualinvoke $r39.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r3, $r38, 4097);

        if $z3 != 0 goto label2;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot bind to the renderer host with intent: ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Act", $r43);

        $r45 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r44 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_INCOMPATIBLE>;

        interfaceinvoke $r45.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r44);

     label2:
        goto label7;

     label3:
        $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No handlers found for intent: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Act", $r27);

        $r29 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r28 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_NOT_FOUND>;

        interfaceinvoke $r29.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r28);

        goto label7;

     label4:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Multiple hosts found, only one is allowed");

        r47 = $r14;

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.ResolveInfo) $r18;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r21 = $r20.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r19[0] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nFound host %s", $r19);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label5;

     label6:
        $r15 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Act", $r15);

        $r17 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r16 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType MULTIPLE_HOSTS>;

        interfaceinvoke $r17.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r16);

     label7:
        return;
    }

    void unbind()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        java.lang.Throwable r1, $r14;
        androidx.car.app.activity.renderer.IRendererService $r2, $r4;
        android.content.ComponentName $r3, $r6, $r9;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r11;
        android.content.ServiceConnection $r12;
        android.content.Context $r13;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r2 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService>;

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService>;

        $r3 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName>;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r6 = (android.content.ComponentName) $r5;

        interfaceinvoke $r4.<androidx.car.app.activity.renderer.IRendererService: void terminate(android.content.ComponentName)>($r6);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r1 = $r14;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding from ");

        $r9 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CarApp.Act", $r11);

        $r13 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.Context mContext>;

        $r12 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ServiceConnection mServiceConnectionImpl>;

        virtualinvoke $r13.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r12);

        r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void initializeService()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.activity.renderer.ICarAppActivity r1, $r5;
        androidx.car.app.activity.renderer.IRendererService r2, $r7;
        android.content.ComponentName r3, $r9;
        java.lang.Boolean r4, $r17;
        java.lang.Object $r6, $r8, $r10, $r14, $r19;
        androidx.car.app.HandshakeInfo $r11, $r15;
        androidx.car.app.activity.ServiceDispatcher $r12, $r16;
        int $i0;
        androidx.car.app.activity.ServiceDispatcher$ReturnCall $r13, $r18;
        java.lang.StringBuilder $r20, $r21, $r22;
        java.lang.String $r23;
        androidx.car.app.activity.ErrorHandler$ErrorType $r24;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener $r25, $r26;
        boolean $z0, $z1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r5 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.ICarAppActivity mICarAppActivity>;

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);

        r1 = (androidx.car.app.activity.renderer.ICarAppActivity) $r6;

        $r7 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService>;

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r7);

        r2 = (androidx.car.app.activity.renderer.IRendererService) $r8;

        $r9 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName>;

        $r10 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r9);

        r3 = (android.content.ComponentName) $r10;

        $r12 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceDispatcher mServiceDispatcher>;

        $r11 = new androidx.car.app.HandshakeInfo;

        $i0 = staticinvoke <androidx.car.app.versioning.CarAppApiLevels: int getOldest()>();

        specialinvoke $r11.<androidx.car.app.HandshakeInfo: void <init>(java.lang.String,int)>("", $i0);

        $r13 = dynamicinvoke "invoke" <androidx.car.app.activity.ServiceDispatcher$ReturnCall (androidx.car.app.activity.renderer.IRendererService,android.content.ComponentName)>(r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.HandshakeInfo lambda$initializeService$0(androidx.car.app.activity.renderer.IRendererService,android.content.ComponentName)>, methodtype: androidx.car.app.HandshakeInfo __METHODTYPE__());

        $r14 = virtualinvoke $r12.<androidx.car.app.activity.ServiceDispatcher: java.lang.Object fetchNoFail(java.lang.String,java.lang.Object,androidx.car.app.activity.ServiceDispatcher$ReturnCall)>("performHandshake", $r11, $r13);

        $r15 = (androidx.car.app.HandshakeInfo) $r14;

        r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.HandshakeInfo mHandshakeInfo> = $r15;

        $r16 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceDispatcher mServiceDispatcher>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r18 = dynamicinvoke "invoke" <androidx.car.app.activity.ServiceDispatcher$ReturnCall (androidx.car.app.activity.ServiceConnectionManager,androidx.car.app.activity.renderer.IRendererService,androidx.car.app.activity.renderer.ICarAppActivity,android.content.ComponentName)>(r0, r2, r1, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.activity.ServiceConnectionManager: java.lang.Boolean lambda$initializeService$1(androidx.car.app.activity.renderer.IRendererService,androidx.car.app.activity.renderer.ICarAppActivity,android.content.ComponentName)>, methodtype: java.lang.Boolean __METHODTYPE__());

        $r19 = virtualinvoke $r16.<androidx.car.app.activity.ServiceDispatcher: java.lang.Object fetch(java.lang.String,java.lang.Object,androidx.car.app.activity.ServiceDispatcher$ReturnCall)>("initialize", $r17, $r18);

        r4 = (java.lang.Boolean) $r19;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

     label1:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create renderer for ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Act", $r23);

        $r25 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r24 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_ERROR>;

        interfaceinvoke $r25.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r24);

        return;

     label2:
        $z1 = specialinvoke r0.<androidx.car.app.activity.ServiceConnectionManager: boolean updateIntent()>();

        if $z1 != 0 goto label3;

        return;

     label3:
        $r26 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        interfaceinvoke $r26.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onConnect()>();

        return;
    }

    private boolean updateIntent()
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        android.content.ComponentName r1, $r5;
        android.content.Intent r2, $r7;
        androidx.car.app.activity.renderer.IRendererService r3;
        java.lang.Boolean r4, $r10;
        java.lang.Object $r6, $r8, $r12;
        androidx.car.app.activity.ServiceDispatcher $r9;
        androidx.car.app.activity.ServiceDispatcher$ReturnCall $r11;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;
        androidx.car.app.activity.ErrorHandler$ErrorType $r17, $r19;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener $r18, $r20;
        boolean $z0;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        $r5 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.ComponentName mServiceComponentName>;

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);

        r1 = (android.content.ComponentName) $r6;

        $r7 = r0.<androidx.car.app.activity.ServiceConnectionManager: android.content.Intent mIntent>;

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r7);

        r2 = (android.content.Intent) $r8;

        r3 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService>;

        if r3 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Act", "Service dispatcher is not connected");

        $r20 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r19 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType CLIENT_SIDE_ERROR>;

        interfaceinvoke $r20.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r19);

        return 0;

     label1:
        $r9 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceDispatcher mServiceDispatcher>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r11 = dynamicinvoke "invoke" <androidx.car.app.activity.ServiceDispatcher$ReturnCall (androidx.car.app.activity.ServiceConnectionManager,androidx.car.app.activity.renderer.IRendererService,android.content.Intent,android.content.ComponentName)>(r0, r3, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.activity.ServiceConnectionManager: java.lang.Boolean lambda$updateIntent$2(androidx.car.app.activity.renderer.IRendererService,android.content.Intent,android.content.ComponentName)>, methodtype: java.lang.Boolean __METHODTYPE__());

        $r12 = virtualinvoke $r9.<androidx.car.app.activity.ServiceDispatcher: java.lang.Object fetch(java.lang.String,java.lang.Object,androidx.car.app.activity.ServiceDispatcher$ReturnCall)>("onNewIntent", $r10, $r11);

        r4 = (java.lang.Boolean) $r12;

        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label3;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renderer cannot handle the intent: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Act", $r16);

        $r18 = r0.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r17 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_ERROR>;

        interfaceinvoke $r18.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r17);

        return 0;

     label3:
        return 1;
    }

    private java.lang.Boolean lambda$updateIntent$2(androidx.car.app.activity.renderer.IRendererService, android.content.Intent, android.content.ComponentName) throws android.os.RemoteException, androidx.car.app.serialization.BundlerException
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.activity.renderer.IRendererService r1;
        android.content.Intent r2;
        android.content.ComponentName r3;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        r1 := @parameter0: androidx.car.app.activity.renderer.IRendererService;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.content.ComponentName;

        $i0 = r0.<androidx.car.app.activity.ServiceConnectionManager: int mDisplayId>;

        $z0 = interfaceinvoke r1.<androidx.car.app.activity.renderer.IRendererService: boolean onNewIntent(android.content.Intent,android.content.ComponentName,int)>(r2, r3, $i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    private java.lang.Boolean lambda$initializeService$1(androidx.car.app.activity.renderer.IRendererService, androidx.car.app.activity.renderer.ICarAppActivity, android.content.ComponentName) throws android.os.RemoteException, androidx.car.app.serialization.BundlerException
    {
        androidx.car.app.activity.ServiceConnectionManager r0;
        androidx.car.app.activity.renderer.IRendererService r1;
        androidx.car.app.activity.renderer.ICarAppActivity r2;
        android.content.ComponentName r3;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager;

        r1 := @parameter0: androidx.car.app.activity.renderer.IRendererService;

        r2 := @parameter1: androidx.car.app.activity.renderer.ICarAppActivity;

        r3 := @parameter2: android.content.ComponentName;

        $i0 = r0.<androidx.car.app.activity.ServiceConnectionManager: int mDisplayId>;

        $z0 = interfaceinvoke r1.<androidx.car.app.activity.renderer.IRendererService: boolean initialize(androidx.car.app.activity.renderer.ICarAppActivity,android.content.ComponentName,int)>(r2, r3, $i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    private static androidx.car.app.HandshakeInfo lambda$initializeService$0(androidx.car.app.activity.renderer.IRendererService, android.content.ComponentName) throws android.os.RemoteException, androidx.car.app.serialization.BundlerException
    {
        androidx.car.app.activity.renderer.IRendererService r0;
        android.content.ComponentName r1;
        int $i0;
        androidx.car.app.serialization.Bundleable $r2;
        java.lang.Object $r3;
        androidx.car.app.HandshakeInfo $r4;

        r0 := @parameter0: androidx.car.app.activity.renderer.IRendererService;

        r1 := @parameter1: android.content.ComponentName;

        $i0 = staticinvoke <androidx.car.app.versioning.CarAppApiLevels: int getLatest()>();

        $r2 = interfaceinvoke r0.<androidx.car.app.activity.renderer.IRendererService: androidx.car.app.serialization.Bundleable performHandshake(android.content.ComponentName,int)>(r1, $i0);

        $r3 = virtualinvoke $r2.<androidx.car.app.serialization.Bundleable: java.lang.Object get()>();

        $r4 = (androidx.car.app.HandshakeInfo) $r3;

        return $r4;
    }

androidx.car.app.activity.ServiceConnectionManager$1
<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0>
    void <init>(androidx.car.app.activity.ServiceConnectionManager)
    {
        androidx.car.app.activity.ServiceConnectionManager$1 r0;
        androidx.car.app.activity.ServiceConnectionManager r1;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager$1;

        r1 := @parameter0: androidx.car.app.activity.ServiceConnectionManager;

        r0.<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.car.app.activity.ServiceConnectionManager$1 r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        androidx.car.app.activity.renderer.IRendererService r3;
        java.lang.Object[] $r6;
        java.lang.String $r7, $r8, $r14;
        androidx.car.app.activity.ServiceConnectionManager $r9, $r10, $r15;
        java.lang.StringBuilder $r11, $r12, $r13;
        androidx.car.app.activity.ErrorHandler$ErrorType $r16;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener $r17;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager$1;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host service %s is connected", $r6);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CarApp.Act", $r8);

        r3 = staticinvoke <androidx.car.app.activity.renderer.IRendererService$Stub: androidx.car.app.activity.renderer.IRendererService asInterface(android.os.IBinder)>(r2);

        if r3 != null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get IRenderService binder from host: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CarApp.Act", $r14);

        $r15 = r0.<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0>;

        $r17 = $r15.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r16 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_INCOMPATIBLE>;

        interfaceinvoke $r17.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r16);

        return;

     label1:
        $r9 = r0.<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0>;

        $r9.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.renderer.IRendererService mRendererService> = r3;

        $r10 = r0.<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0>;

        virtualinvoke $r10.<androidx.car.app.activity.ServiceConnectionManager: void initializeService()>();

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.car.app.activity.ServiceConnectionManager$1 r0;
        android.content.ComponentName r1;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager$1;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host service %s is disconnected", $r3);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CarApp.Act", $r5);

        return;
    }

    public void onBindingDied(android.content.ComponentName)
    {
        androidx.car.app.activity.ServiceConnectionManager$1 r0;
        android.content.ComponentName r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        androidx.car.app.activity.ServiceConnectionManager $r8;
        androidx.car.app.activity.ErrorHandler$ErrorType $r9;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener $r10;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager$1;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host service ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is permanently disconnected");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CarApp.Act", $r7);

        $r8 = r0.<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0>;

        $r10 = $r8.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r9 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_CONNECTION_LOST>;

        interfaceinvoke $r10.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r9);

        return;
    }

    public void onNullBinding(android.content.ComponentName)
    {
        androidx.car.app.activity.ServiceConnectionManager$1 r0;
        android.content.ComponentName r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        androidx.car.app.activity.ServiceConnectionManager $r8;
        androidx.car.app.activity.ErrorHandler$ErrorType $r9;
        androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener $r10;

        r0 := @this: androidx.car.app.activity.ServiceConnectionManager$1;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host service ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rejected the binding request");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CarApp.Act", $r7);

        $r8 = r0.<androidx.car.app.activity.ServiceConnectionManager$1: androidx.car.app.activity.ServiceConnectionManager this$0>;

        $r10 = $r8.<androidx.car.app.activity.ServiceConnectionManager: androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener mListener>;

        $r9 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_INCOMPATIBLE>;

        interfaceinvoke $r10.<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r9);

        return;
    }

androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener
<androidx.car.app.activity.ServiceConnectionManager$ServiceConnectionListener: void onConnect()>
