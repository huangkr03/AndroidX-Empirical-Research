androidx.room.compiler.processing.ksp.KspConstructorElement
<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy enclosingElement$delegate>
<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy parameters$delegate>
<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy executableType$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r2;
        androidx.room.compiler.processing.ksp.KspConstructorElement$enclosingElement$2 $r3;
        kotlin.jvm.functions.Function0 $r4, $r7, $r10;
        kotlin.Lazy $r5, $r8, $r11;
        androidx.room.compiler.processing.ksp.KspConstructorElement$parameters$2 $r6;
        androidx.room.compiler.processing.ksp.KspConstructorElement$executableType$2 $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "declaration");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>(r1, r2);

        $r3 = new androidx.room.compiler.processing.ksp.KspConstructorElement$enclosingElement$2;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspConstructorElement$enclosingElement$2: void <init>(com.google.devtools.ksp.symbol.KSFunctionDeclaration,androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspConstructorElement)>(r2, r1, r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r4);

        r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy enclosingElement$delegate> = $r5;

        $r6 = new androidx.room.compiler.processing.ksp.KspConstructorElement$parameters$2;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspConstructorElement$parameters$2: void <init>(com.google.devtools.ksp.symbol.KSFunctionDeclaration,androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspConstructorElement)>(r2, r1, r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r7);

        r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy parameters$delegate> = $r8;

        $r9 = new androidx.room.compiler.processing.ksp.KspConstructorElement$executableType$2;

        specialinvoke $r9.<androidx.room.compiler.processing.ksp.KspConstructorElement$executableType$2: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspConstructorElement)>(r1, r0);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r10);

        r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy executableType$delegate> = $r11;

        return;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        return "<init>";
    }

    public androidx.room.compiler.processing.ksp.KspTypeElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy enclosingElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspTypeElement) $r2;

        return $r3;
    }

    public java.util.List getParameters()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy parameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XConstructorType getExecutableType()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XConstructorType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: kotlin.Lazy executableType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XConstructorType) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XConstructorType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.XType r1;
        java.lang.String r2, $r8;
        boolean $z0;
        androidx.room.compiler.processing.ksp.KspConstructorType $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r4;
        androidx.room.compiler.processing.ksp.KspType $r5;
        androidx.room.compiler.processing.XConstructorType $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.ksp.KspType;

        if $z0 != 0 goto label1;

        r2 = "Check failed.";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        $r3 = new androidx.room.compiler.processing.ksp.KspConstructorType;

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        $r5 = (androidx.room.compiler.processing.ksp.KspType) r1;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspConstructorType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspConstructorElement,androidx.room.compiler.processing.ksp.KspType)>($r4, r0, $r5);

        $r6 = (androidx.room.compiler.processing.XConstructorType) $r3;

        return $r6;
    }

    public volatile androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.ksp.KspTypeElement $r1;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.ksp.KspTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.ksp.KspMemberContainer) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.ksp.KspTypeElement $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.ksp.KspTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.ksp.KspTypeElement $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.ksp.KspTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XTypeElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.ksp.KspTypeElement $r1;
        androidx.room.compiler.processing.XTypeElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.ksp.KspTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XTypeElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XExecutableType getExecutableType()
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.XConstructorType $r1;
        androidx.room.compiler.processing.XExecutableType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.XConstructorType getExecutableType()>();

        $r2 = (androidx.room.compiler.processing.XExecutableType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XExecutableType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.ksp.KspConstructorElement r0;
        androidx.room.compiler.processing.XType r1;
        androidx.room.compiler.processing.XConstructorType $r2;
        androidx.room.compiler.processing.XExecutableType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorElement: androidx.room.compiler.processing.XConstructorType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r3 = (androidx.room.compiler.processing.XExecutableType) $r2;

        return $r3;
    }

