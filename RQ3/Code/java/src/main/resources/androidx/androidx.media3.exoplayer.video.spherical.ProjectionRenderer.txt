androidx.media3.exoplayer.video.spherical.ProjectionRenderer
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: java.lang.String TAG>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: java.lang.String VERTEX_SHADER>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: java.lang.String FRAGMENT_SHADER>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_WHOLE>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_TOP>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_BOTTOM>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_LEFT>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_RIGHT>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int stereoMode>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData leftMeshData>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData rightMeshData>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int mvpMatrixHandle>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int uTexMatrixHandle>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int positionHandle>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int texCoordsHandle>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int textureHandle>
    void <init>()
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer r0;

        r0 := @this: androidx.media3.exoplayer.video.spherical.ProjectionRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSupported(androidx.media3.exoplayer.video.spherical.Projection)
    {
        androidx.media3.exoplayer.video.spherical.Projection r0;
        androidx.media3.exoplayer.video.spherical.Projection$Mesh r1, r2;
        int $i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh $r3, $r4;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.video.spherical.Projection;

        r1 = r0.<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh leftMesh>;

        r2 = r0.<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh rightMesh>;

        $i0 = virtualinvoke r1.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: int getSubMeshCount()>();

        if $i0 != 1 goto label1;

        $r3 = virtualinvoke r1.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh getSubMesh(int)>(0);

        $i1 = $r3.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int textureId>;

        if $i1 != 0 goto label1;

        $i2 = virtualinvoke r2.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: int getSubMeshCount()>();

        if $i2 != 1 goto label1;

        $r4 = virtualinvoke r2.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh getSubMesh(int)>(0);

        $i3 = $r4.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int textureId>;

        if $i3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setProjection(androidx.media3.exoplayer.video.spherical.Projection)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer r0;
        androidx.media3.exoplayer.video.spherical.Projection r1;
        boolean $z0, $z1;
        int $i0;
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData $r2, $r8;
        androidx.media3.exoplayer.video.spherical.Projection$Mesh $r3, $r5;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh $r4, $r6;

        r0 := @this: androidx.media3.exoplayer.video.spherical.ProjectionRenderer;

        r1 := @parameter0: androidx.media3.exoplayer.video.spherical.Projection;

        $z0 = staticinvoke <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: boolean isSupported(androidx.media3.exoplayer.video.spherical.Projection)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = r1.<androidx.media3.exoplayer.video.spherical.Projection: int stereoMode>;

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int stereoMode> = $i0;

        $r2 = new androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        $r3 = r1.<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh leftMesh>;

        $r4 = virtualinvoke $r3.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh getSubMesh(int)>(0);

        specialinvoke $r2.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: void <init>(androidx.media3.exoplayer.video.spherical.Projection$SubMesh)>($r4);

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData leftMeshData> = $r2;

        $z1 = r1.<androidx.media3.exoplayer.video.spherical.Projection: boolean singleMesh>;

        if $z1 == 0 goto label2;

        $r8 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData leftMeshData>;

        goto label3;

     label2:
        $r8 = new androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        $r5 = r1.<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh rightMesh>;

        $r6 = virtualinvoke $r5.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh getSubMesh(int)>(0);

        specialinvoke $r8.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: void <init>(androidx.media3.exoplayer.video.spherical.Projection$SubMesh)>($r6);

     label3:
        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData rightMeshData> = $r8;

        return;
    }

    public void init()
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer r0;
        java.lang.Throwable r1, $r8;
        androidx.media3.common.util.GlProgram $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.media3.exoplayer.video.spherical.ProjectionRenderer;

     label1:
        $r2 = new androidx.media3.common.util.GlProgram;

        specialinvoke $r2.<androidx.media3.common.util.GlProgram: void <init>(java.lang.String,java.lang.String)>("uniform mat4 uMvpMatrix;\nuniform mat3 uTexMatrix;\nattribute vec4 aPosition;\nattribute vec2 aTexCoords;\nvarying vec2 vTexCoords;\n// Standard transformation.\nvoid main() {\n  gl_Position = uMvpMatrix * aPosition;\n  vTexCoords = (uTexMatrix * vec3(aTexCoords, 1)).xy;\n}\n", "// This is required since the texture data is GL_TEXTURE_EXTERNAL_OES.\n#extension GL_OES_EGL_image_external : require\nprecision mediump float;\n// Standard texture rendering shader.\nuniform samplerExternalOES uTexture;\nvarying vec2 vTexCoords;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoords);\n}\n");

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program> = $r2;

        $r3 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        $i0 = virtualinvoke $r3.<androidx.media3.common.util.GlProgram: int getUniformLocation(java.lang.String)>("uMvpMatrix");

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int mvpMatrixHandle> = $i0;

        $r4 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        $i1 = virtualinvoke $r4.<androidx.media3.common.util.GlProgram: int getUniformLocation(java.lang.String)>("uTexMatrix");

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int uTexMatrixHandle> = $i1;

        $r5 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        $i2 = virtualinvoke $r5.<androidx.media3.common.util.GlProgram: int getAttributeArrayLocationAndEnable(java.lang.String)>("aPosition");

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int positionHandle> = $i2;

        $r6 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        $i3 = virtualinvoke $r6.<androidx.media3.common.util.GlProgram: int getAttributeArrayLocationAndEnable(java.lang.String)>("aTexCoords");

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int texCoordsHandle> = $i3;

        $r7 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        $i4 = virtualinvoke $r7.<androidx.media3.common.util.GlProgram: int getUniformLocation(java.lang.String)>("uTexture");

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int textureHandle> = $i4;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProjectionRenderer", "Failed to initialize the program", r1);

     label4:
        return;

        catch androidx.media3.common.util.GlUtil$GlException from label1 to label2 with label3;
    }

    public void draw(int, float[], boolean)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i11, $i12, $i13;
        float[] r1, $r10, r11, $r12;
        boolean z0;
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData r2, $r9;
        java.nio.FloatBuffer $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8, r13, r14, r15, r16;

        r0 := @this: androidx.media3.exoplayer.video.spherical.ProjectionRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        $r9 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData rightMeshData>;

        goto label02;

     label01:
        $r9 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData leftMeshData>;

     label02:
        r2 = $r9;

        if r2 != null goto label03;

        return;

     label03:
        $i1 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int stereoMode>;

        if $i1 != 1 goto label06;

        if z0 == 0 goto label04;

        $r10 = <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_BOTTOM>;

        goto label05;

     label04:
        $r10 = <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_TOP>;

     label05:
        r11 = $r10;

        goto label10;

     label06:
        $i2 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int stereoMode>;

        if $i2 != 2 goto label09;

        if z0 == 0 goto label07;

        $r12 = <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_RIGHT>;

        goto label08;

     label07:
        $r12 = <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_LEFT>;

     label08:
        r11 = $r12;

        goto label10;

     label09:
        r11 = <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_WHOLE>;

     label10:
        $i11 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int uTexMatrixHandle>;

        staticinvoke <android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>($i11, 1, 0, r11, 0);

        $i12 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int mvpMatrixHandle>;

        staticinvoke <android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>($i12, 1, 0, r1, 0);

        staticinvoke <android.opengl.GLES20: void glActiveTexture(int)>(33984);

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>(36197, i0);

        $i13 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int textureHandle>;

        staticinvoke <android.opengl.GLES20: void glUniform1i(int,int)>($i13, 0);

     label11:
        staticinvoke <androidx.media3.common.util.GlUtil: void checkGlError()>();

     label12:
        goto label14;

     label13:
        $r6 := @caughtexception;

        r13 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProjectionRenderer", "Failed to bind uniforms", r13);

     label14:
        $i3 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int positionHandle>;

        $r3 = staticinvoke <androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer access$000(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)>(r2);

        staticinvoke <android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>($i3, 3, 5126, 0, 12, $r3);

     label15:
        staticinvoke <androidx.media3.common.util.GlUtil: void checkGlError()>();

     label16:
        goto label18;

     label17:
        $r8 := @caughtexception;

        r14 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProjectionRenderer", "Failed to load position data", r14);

     label18:
        $i4 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: int texCoordsHandle>;

        $r4 = staticinvoke <androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer access$100(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)>(r2);

        staticinvoke <android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>($i4, 2, 5126, 0, 8, $r4);

     label19:
        staticinvoke <androidx.media3.common.util.GlUtil: void checkGlError()>();

     label20:
        goto label22;

     label21:
        $r7 := @caughtexception;

        r15 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProjectionRenderer", "Failed to load texture data", r15);

     label22:
        $i5 = staticinvoke <androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int access$200(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)>(r2);

        $i6 = staticinvoke <androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int access$300(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)>(r2);

        staticinvoke <android.opengl.GLES20: void glDrawArrays(int,int,int)>($i5, 0, $i6);

     label23:
        staticinvoke <androidx.media3.common.util.GlUtil: void checkGlError()>();

     label24:
        goto label26;

     label25:
        $r5 := @caughtexception;

        r16 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProjectionRenderer", "Failed to render", r16);

     label26:
        return;

        catch androidx.media3.common.util.GlUtil$GlException from label11 to label12 with label13;
        catch androidx.media3.common.util.GlUtil$GlException from label15 to label16 with label17;
        catch androidx.media3.common.util.GlUtil$GlException from label19 to label20 with label21;
        catch androidx.media3.common.util.GlUtil$GlException from label23 to label24 with label25;
    }

    public void shutdown()
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer r0;
        java.lang.Throwable r1, $r4;
        androidx.media3.common.util.GlProgram $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.video.spherical.ProjectionRenderer;

        $r2 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer: androidx.media3.common.util.GlProgram program>;

        virtualinvoke $r3.<androidx.media3.common.util.GlProgram: void delete()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProjectionRenderer", "Failed to delete the shader program", r1);

     label4:
        return;

        catch androidx.media3.common.util.GlUtil$GlException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        float[] $r0, $r1, $r2, $r3, $r4;

        $r0 = newarray (float)[9];

        $r0[0] = 1.0F;

        $r0[1] = 0.0F;

        $r0[2] = 0.0F;

        $r0[3] = 0.0F;

        $r0[4] = -1.0F;

        $r0[5] = 0.0F;

        $r0[6] = 0.0F;

        $r0[7] = 1.0F;

        $r0[8] = 1.0F;

        <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_WHOLE> = $r0;

        $r1 = newarray (float)[9];

        $r1[0] = 1.0F;

        $r1[1] = 0.0F;

        $r1[2] = 0.0F;

        $r1[3] = 0.0F;

        $r1[4] = -0.5F;

        $r1[5] = 0.0F;

        $r1[6] = 0.0F;

        $r1[7] = 0.5F;

        $r1[8] = 1.0F;

        <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_TOP> = $r1;

        $r2 = newarray (float)[9];

        $r2[0] = 1.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = -0.5F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 1.0F;

        $r2[8] = 1.0F;

        <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_BOTTOM> = $r2;

        $r3 = newarray (float)[9];

        $r3[0] = 0.5F;

        $r3[1] = 0.0F;

        $r3[2] = 0.0F;

        $r3[3] = 0.0F;

        $r3[4] = -1.0F;

        $r3[5] = 0.0F;

        $r3[6] = 0.0F;

        $r3[7] = 1.0F;

        $r3[8] = 1.0F;

        <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_LEFT> = $r3;

        $r4 = newarray (float)[9];

        $r4[0] = 0.5F;

        $r4[1] = 0.0F;

        $r4[2] = 0.0F;

        $r4[3] = 0.0F;

        $r4[4] = -1.0F;

        $r4[5] = 0.0F;

        $r4[6] = 0.5F;

        $r4[7] = 1.0F;

        $r4[8] = 1.0F;

        <androidx.media3.exoplayer.video.spherical.ProjectionRenderer: float[] TEX_MATRIX_RIGHT> = $r4;

        return;
    }

androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int vertexCount>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer vertexBuffer>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer textureBuffer>
<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int drawMode>
    public void <init>(androidx.media3.exoplayer.video.spherical.Projection$SubMesh)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData r0;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh r1;
        int $i0, $i1;
        float[] $r2, $r4;
        java.nio.FloatBuffer $r3, $r5;

        r0 := @this: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        r1 := @parameter0: androidx.media3.exoplayer.video.spherical.Projection$SubMesh;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int getVertexCount()>();

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int vertexCount> = $i0;

        $r2 = r1.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] vertices>;

        $r3 = staticinvoke <androidx.media3.common.util.GlUtil: java.nio.FloatBuffer createBuffer(float[])>($r2);

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer vertexBuffer> = $r3;

        $r4 = r1.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] textureCoords>;

        $r5 = staticinvoke <androidx.media3.common.util.GlUtil: java.nio.FloatBuffer createBuffer(float[])>($r4);

        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer textureBuffer> = $r5;

        $i1 = r1.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int mode>;

        tableswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int drawMode> = 5;

        goto label4;

     label2:
        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int drawMode> = 6;

        goto label4;

     label3:
        r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int drawMode> = 4;

     label4:
        return;
    }

    static java.nio.FloatBuffer access$000(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData r0;
        java.nio.FloatBuffer $r1;

        r0 := @parameter0: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        $r1 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer vertexBuffer>;

        return $r1;
    }

    static java.nio.FloatBuffer access$100(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData r0;
        java.nio.FloatBuffer $r1;

        r0 := @parameter0: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        $r1 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: java.nio.FloatBuffer textureBuffer>;

        return $r1;
    }

    static int access$200(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData r0;
        int $i0;

        r0 := @parameter0: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        $i0 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int drawMode>;

        return $i0;
    }

    static int access$300(androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData)
    {
        androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData r0;
        int $i0;

        r0 := @parameter0: androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData;

        $i0 = r0.<androidx.media3.exoplayer.video.spherical.ProjectionRenderer$MeshData: int vertexCount>;

        return $i0;
    }

