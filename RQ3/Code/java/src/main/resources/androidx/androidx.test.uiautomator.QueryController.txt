androidx.test.uiautomator.QueryController
<androidx.test.uiautomator.QueryController: long QUIET_TIME_TO_BE_CONSIDERED_IDLE_STATE>
<androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>
<androidx.test.uiautomator.QueryController: boolean DEBUG>
<androidx.test.uiautomator.QueryController: boolean VERBOSE>
<androidx.test.uiautomator.QueryController: android.app.Instrumentation mInstrumentation>
<androidx.test.uiautomator.QueryController: java.lang.Object mLock>
<androidx.test.uiautomator.QueryController: java.lang.String mLastActivityName>
<androidx.test.uiautomator.QueryController: int mPatternCounter>
<androidx.test.uiautomator.QueryController: int mPatternIndexer>
<androidx.test.uiautomator.QueryController: int mLogIndent>
<androidx.test.uiautomator.QueryController: int mLogParentIndent>
<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText>
<androidx.test.uiautomator.QueryController: android.app.UiAutomation$OnAccessibilityEventListener mEventListener>
    public void <init>(android.app.Instrumentation)
    {
        androidx.test.uiautomator.QueryController r0;
        android.app.Instrumentation r1;
        java.lang.Object $r2;
        androidx.test.uiautomator.QueryController$1 $r3;
        android.app.UiAutomation $r4;
        android.app.UiAutomation$OnAccessibilityEventListener $r5;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: android.app.Instrumentation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.test.uiautomator.QueryController: java.lang.Object mLock> = $r2;

        r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastActivityName> = null;

        r0.<androidx.test.uiautomator.QueryController: int mPatternCounter> = 0;

        r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer> = 0;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = 0;

        r0.<androidx.test.uiautomator.QueryController: int mLogParentIndent> = 0;

        r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText> = "";

        $r3 = new androidx.test.uiautomator.QueryController$1;

        specialinvoke $r3.<androidx.test.uiautomator.QueryController$1: void <init>(androidx.test.uiautomator.QueryController)>(r0);

        r0.<androidx.test.uiautomator.QueryController: android.app.UiAutomation$OnAccessibilityEventListener mEventListener> = $r3;

        r0.<androidx.test.uiautomator.QueryController: android.app.Instrumentation mInstrumentation> = r1;

        $r4 = staticinvoke <androidx.test.uiautomator.UiDevice: android.app.UiAutomation getUiAutomation(android.app.Instrumentation)>(r1);

        $r5 = r0.<androidx.test.uiautomator.QueryController: android.app.UiAutomation$OnAccessibilityEventListener mEventListener>;

        virtualinvoke $r4.<android.app.UiAutomation: void setOnAccessibilityEventListener(android.app.UiAutomation$OnAccessibilityEventListener)>($r5);

        return;
    }

    public java.lang.String getLastTraversedText()
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.lang.String $r4, $r5;
        int $i0;

        r0 := @this: androidx.test.uiautomator.QueryController;

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: void waitForIdle()>();

        $r3 = r0.<androidx.test.uiautomator.QueryController: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r5 = r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText>;

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void clearLastTraversedText()
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.test.uiautomator.QueryController;

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: void waitForIdle()>();

        $r2 = r0.<androidx.test.uiautomator.QueryController: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText> = "";

        exitmonitor r1;

        goto label1;

     label1:
        return;
    }

    private void initializeNewSearch()
    {
        androidx.test.uiautomator.QueryController r0;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r0.<androidx.test.uiautomator.QueryController: int mPatternCounter> = 0;

        r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer> = 0;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = 0;

        r0.<androidx.test.uiautomator.QueryController: int mLogParentIndent> = 0;

        return;
    }

    public int getPatternCount(androidx.test.uiautomator.UiSelector)
    {
        androidx.test.uiautomator.QueryController r0;
        androidx.test.uiautomator.UiSelector r1;
        int $i0;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(androidx.test.uiautomator.UiSelector,boolean)>(r1, 1);

        $i0 = r0.<androidx.test.uiautomator.QueryController: int mPatternCounter>;

        return $i0;
    }

    public android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(androidx.test.uiautomator.UiSelector)
    {
        androidx.test.uiautomator.QueryController r0;
        androidx.test.uiautomator.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        $r2 = virtualinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(androidx.test.uiautomator.UiSelector,boolean)>(r1, 0);

        return $r2;
    }

    protected android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(androidx.test.uiautomator.UiSelector, boolean)
    {
        androidx.test.uiautomator.QueryController r0;
        androidx.test.uiautomator.UiSelector r1, r3, $r4;
        boolean z0, $z1;
        android.view.accessibility.AccessibilityNodeInfo r2, $r5;
        java.lang.String $r6, $r8, $r11;
        java.lang.StringBuilder $r7, $r9, $r10;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: void waitForIdle()>();

        specialinvoke r0.<androidx.test.uiautomator.QueryController: void initializeNewSearch()>();

        $z1 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r8 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Searching: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r8, $r11);

     label1:
        r2 = virtualinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>();

        if r2 != null goto label2;

        $r6 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, "Cannot proceed when root node is null. Aborted search");

        return null;

     label2:
        $r4 = new androidx.test.uiautomator.UiSelector;

        specialinvoke $r4.<androidx.test.uiautomator.UiSelector: void <init>(androidx.test.uiautomator.UiSelector)>(r1);

        r3 = $r4;

        $r5 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>(r3, r2, z0);

        return $r5;
    }

    android.view.accessibility.AccessibilityNodeInfo getRootNode()
    {
        androidx.test.uiautomator.QueryController r0;
        byte b0;
        android.app.Instrumentation $r1;
        android.app.UiAutomation $r2;
        java.lang.String $r3;
        long l2;
        android.view.accessibility.AccessibilityNodeInfo r4;
        int i3;

        r0 := @this: androidx.test.uiautomator.QueryController;

        b0 = 6;

        l2 = 250L;

        r4 = null;

        i3 = 0;

     label1:
        if i3 >= 6 goto label4;

        $r1 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.app.Instrumentation getInstrumentation()>();

        $r2 = staticinvoke <androidx.test.uiautomator.UiDevice: android.app.UiAutomation getUiAutomation(android.app.Instrumentation)>($r1);

        r4 = virtualinvoke $r2.<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>();

        if r4 == null goto label2;

        return r4;

     label2:
        if i3 >= 5 goto label3;

        $r3 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Got null root node from accessibility - Retrying...");

        staticinvoke <android.os.SystemClock: void sleep(long)>(l2);

        l2 = l2 * 2L;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return r4;
    }

    private android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(androidx.test.uiautomator.UiSelector, android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        androidx.test.uiautomator.QueryController r0;
        androidx.test.uiautomator.UiSelector r1, $r10, $r27, $r28, $r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Object[] $r2, $r17;
        java.lang.String $r3, $r4, $r6, $r9, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r13, $r15, $r21, $r23, $r25;
        int $i3;
        java.lang.Integer $r19;
        android.view.accessibility.AccessibilityNodeInfo r30, r31;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        r30 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: boolean hasContainerSelector()>();

        if $z1 == 0 goto label02;

        $r27 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getContainerSelector()>();

        $z10 = virtualinvoke $r27.<androidx.test.uiautomator.UiSelector: boolean hasContainerSelector()>();

        if $z10 == 0 goto label01;

        $r29 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getContainerSelector()>();

        r31 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r29, r30, 0);

        specialinvoke r0.<androidx.test.uiautomator.QueryController: void initializeNewSearch()>();

        goto label03;

     label01:
        $r28 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getContainerSelector()>();

        r31 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>($r28, r30);

        goto label03;

     label02:
        r31 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>(r1, r30);

     label03:
        if r31 != null goto label05;

        $z9 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z9 == 0 goto label04;

        $r22 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container selector not found: ");

        $r24 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r22, $r26);

     label04:
        return null;

     label05:
        $z2 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: boolean hasPatternSelector()>();

        if $z2 == 0 goto label08;

        $r10 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getPatternSelector()>();

        r31 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo translatePatternSelector(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r10, r31, z0);

        if z0 == 0 goto label06;

        $r18 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r17 = newarray (java.lang.Object)[2];

        $i3 = r0.<androidx.test.uiautomator.QueryController: int mPatternCounter>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r17[0] = $r19;

        $r17[1] = r1;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Counted %d instances of: %s", $r17);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r18, $r20);

        return null;

     label06:
        if r31 != null goto label08;

        $z8 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z8 == 0 goto label07;

        $r12 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern selector not found: ");

        $r14 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r12, $r16);

     label07:
        return null;

     label08:
        $z3 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: boolean hasContainerSelector()>();

        if $z3 != 0 goto label09;

        $z7 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: boolean hasPatternSelector()>();

        if $z7 == 0 goto label11;

     label09:
        $z4 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: boolean hasChildSelector()>();

        if $z4 != 0 goto label10;

        $z6 = virtualinvoke r1.<androidx.test.uiautomator.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label11;

     label10:
        r31 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>(r1, r31);

     label11:
        if r31 != null goto label13;

        $z5 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z5 == 0 goto label12;

        $r6 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object Not Found for selector ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, $r9);

     label12:
        return null;

     label13:
        $r3 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r1;

        $r2[1] = r31;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Matched selector: %s <<==>> [%s]", $r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r4);

        return r31;
    }

    private android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(androidx.test.uiautomator.UiSelector, android.view.accessibility.AccessibilityNodeInfo)
    {
        androidx.test.uiautomator.QueryController r0;
        androidx.test.uiautomator.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo r2, $r3;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        $r3 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int)>(r1, r2, 0);

        return $r3;
    }

    private android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(androidx.test.uiautomator.UiSelector, android.view.accessibility.AccessibilityNodeInfo, int)
    {
        androidx.test.uiautomator.QueryController r0;
        int i0, i1, $i5, $i6, $i8, $i9, i12;
        android.view.accessibility.AccessibilityNodeInfo r1, r2, r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.Object[] $r3, $r7, $r12, $r18;
        java.lang.String $r4, $r5, $r6, $r8, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22;
        java.lang.Integer $r9, $r10;
        androidx.test.uiautomator.UiSelector r23;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r23 := @parameter0: androidx.test.uiautomator.UiSelector;

        r24 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>(r24, i0);

        if $z0 == 0 goto label05;

        $z3 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z3 == 0 goto label01;

        $r19 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r18 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r18[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r18);

        $r22 = specialinvoke r0.<androidx.test.uiautomator.QueryController: java.lang.String formatLog(java.lang.String)>($r21);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r19, $r22);

     label01:
        $z4 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: boolean isLeaf()>();

        if $z4 == 0 goto label02;

        return r24;

     label02:
        $z5 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: boolean hasChildSelector()>();

        if $z5 == 0 goto label03;

        $i8 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        $i9 = $i8 + 1;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = $i9;

        r23 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getChildSelector()>();

        if r23 != null goto label05;

        $r17 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r17, "Error: A child selector without content");

        return null;

     label03:
        $z6 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label05;

        $i5 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        $i6 = $i5 + 1;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = $i6;

        r23 = virtualinvoke r23.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getParentSelector()>();

        if r23 != null goto label04;

        $r16 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r16, "Error: A parent selector without content");

        return null;

     label04:
        r24 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        if r24 != null goto label05;

        return null;

     label05:
        i1 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z7 = 0;

        i12 = 0;

     label06:
        if i12 >= i1 goto label11;

        r1 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i12);

        if r1 != null goto label08;

        $r8 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AccessibilityNodeInfo returned a null child (%d of %d)", $r7);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r11);

        if z7 != 0 goto label07;

        $r13 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r12 = newarray (java.lang.Object)[1];

        $r14 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r12[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parent = %s", $r12);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r13, $r15);

     label07:
        z7 = 1;

        goto label10;

     label08:
        $z1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z1 != 0 goto label09;

        $z2 = <androidx.test.uiautomator.QueryController: boolean VERBOSE>;

        if $z2 == 0 goto label10;

        $r4 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping invisible child: %s", $r3);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, $r6);

        goto label10;

     label09:
        r2 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int)>(r23, r1, i12);

        if r2 == null goto label10;

        return r2;

     label10:
        i12 = i12 + 1;

        goto label06;

     label11:
        return null;
    }

    private android.view.accessibility.AccessibilityNodeInfo translatePatternSelector(androidx.test.uiautomator.UiSelector, android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        androidx.test.uiautomator.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1, $r3;
        boolean z0, $z1;
        java.lang.String $r2, $r4;
        int $i1, $i2, $i3;
        androidx.test.uiautomator.UiSelector r5, r6;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r5 := @parameter0: androidx.test.uiautomator.UiSelector;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r5.<androidx.test.uiautomator.UiSelector: boolean hasPatternSelector()>();

        if $z1 == 0 goto label4;

        if z0 == 0 goto label1;

        r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer> = -1;

        goto label2;

     label1:
        $i1 = virtualinvoke r5.<androidx.test.uiautomator.UiSelector: int getInstance()>();

        r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer> = $i1;

     label2:
        r6 = virtualinvoke r5.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getPatternSelector()>();

        if r6 != null goto label3;

        $r4 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "Pattern portion of the selector is null or not defined");

        return null;

     label3:
        $i2 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        $i3 = $i2 + 1;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = $i3;

        r0.<androidx.test.uiautomator.QueryController: int mLogParentIndent> = $i3;

        $r3 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int,androidx.test.uiautomator.UiSelector)>(r6, r1, 0, r6);

        return $r3;

     label4:
        $r2 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Selector must have a pattern selector defined");

        return null;
    }

    private android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(androidx.test.uiautomator.UiSelector, android.view.accessibility.AccessibilityNodeInfo, int, androidx.test.uiautomator.UiSelector)
    {
        androidx.test.uiautomator.QueryController r0;
        int i0, i1, $i5, $i6, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, i20;
        androidx.test.uiautomator.UiSelector r1, r36;
        android.view.accessibility.AccessibilityNodeInfo r2, r3, r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        java.lang.Object[] $r4, $r8, $r13, $r19, $r24, $r31;
        java.lang.String $r5, $r6, $r7, $r9, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r32, $r33, $r34, $r35;
        java.lang.Integer $r10, $r11;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r36 := @parameter0: androidx.test.uiautomator.UiSelector;

        r37 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter2: int;

        r1 := @parameter3: androidx.test.uiautomator.UiSelector;

        $z0 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>(r37, i0);

        if $z0 == 0 goto label08;

        $z3 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: boolean isLeaf()>();

        if $z3 == 0 goto label04;

        $i12 = r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer>;

        if $i12 != 0 goto label02;

        $z8 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z8 == 0 goto label01;

        $r32 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r31 = newarray (java.lang.Object)[1];

        $r33 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r31[0] = $r33;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r31);

        $r35 = specialinvoke r0.<androidx.test.uiautomator.QueryController: java.lang.String formatLog(java.lang.String)>($r34);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r32, $r35);

     label01:
        return r37;

     label02:
        $z7 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z7 == 0 goto label03;

        $r25 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r24 = newarray (java.lang.Object)[1];

        $r26 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r24[0] = $r26;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r24);

        $r28 = specialinvoke r0.<androidx.test.uiautomator.QueryController: java.lang.String formatLog(java.lang.String)>($r27);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r25, $r28);

     label03:
        $i13 = r0.<androidx.test.uiautomator.QueryController: int mPatternCounter>;

        $i14 = $i13 + 1;

        r0.<androidx.test.uiautomator.QueryController: int mPatternCounter> = $i14;

        $i15 = r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer>;

        $i16 = $i15 - 1;

        r0.<androidx.test.uiautomator.QueryController: int mPatternIndexer> = $i16;

        r36 = r1;

        $i17 = r0.<androidx.test.uiautomator.QueryController: int mLogParentIndent>;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = $i17;

        goto label08;

     label04:
        $z4 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z4 == 0 goto label05;

        $r20 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r19 = newarray (java.lang.Object)[1];

        $r21 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r19[0] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r19);

        $r23 = specialinvoke r0.<androidx.test.uiautomator.QueryController: java.lang.String formatLog(java.lang.String)>($r22);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r20, $r23);

     label05:
        $z5 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: boolean hasChildSelector()>();

        if $z5 == 0 goto label06;

        $i8 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        $i9 = $i8 + 1;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = $i9;

        r36 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getChildSelector()>();

        if r36 != null goto label08;

        $r18 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r18, "Error: A child selector without content");

        return null;

     label06:
        $z6 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label08;

        $i5 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        $i6 = $i5 + 1;

        r0.<androidx.test.uiautomator.QueryController: int mLogIndent> = $i6;

        r36 = virtualinvoke r36.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector getParentSelector()>();

        if r36 != null goto label07;

        $r17 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r17, "Error: A parent selector without content");

        return null;

     label07:
        r37 = virtualinvoke r37.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        if r37 != null goto label08;

        return null;

     label08:
        i1 = virtualinvoke r37.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z9 = 0;

        i20 = 0;

     label09:
        if i20 >= i1 goto label14;

        r2 = virtualinvoke r37.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i20);

        if r2 != null goto label11;

        $r9 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AccessibilityNodeInfo returned a null child (%d of %d)", $r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, $r12);

        if z9 != 0 goto label10;

        $r14 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r13 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r37.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parent = %s", $r13);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r14, $r16);

     label10:
        z9 = 1;

        goto label13;

     label11:
        $z1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z1 != 0 goto label12;

        $z2 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        if $z2 == 0 goto label13;

        $r5 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping invisible child: %s", $r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7);

        goto label13;

     label12:
        r3 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(androidx.test.uiautomator.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int,androidx.test.uiautomator.UiSelector)>(r36, r2, i20, r1);

        if r3 == null goto label13;

        return r3;

     label13:
        i20 = i20 + 1;

        goto label09;

     label14:
        return null;
    }

    public java.lang.String getCurrentActivityName()
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.Object r1, $r2;
        java.lang.String $r3;

        r0 := @this: androidx.test.uiautomator.QueryController;

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: void waitForIdle()>();

        $r2 = r0.<androidx.test.uiautomator.QueryController: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastActivityName>;

        exitmonitor r1;

        return $r3;
    }

    public java.lang.String getCurrentPackageName()
    {
        androidx.test.uiautomator.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.CharSequence $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.uiautomator.QueryController;

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: void waitForIdle()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    public void waitForIdle()
    {
        androidx.test.uiautomator.QueryController r0;
        androidx.test.uiautomator.Configurator $r1;
        long $l0;

        r0 := @this: androidx.test.uiautomator.QueryController;

        $r1 = staticinvoke <androidx.test.uiautomator.Configurator: androidx.test.uiautomator.Configurator getInstance()>();

        $l0 = virtualinvoke $r1.<androidx.test.uiautomator.Configurator: long getWaitForIdleTimeout()>();

        virtualinvoke r0.<androidx.test.uiautomator.QueryController: void waitForIdle(long)>($l0);

        return;
    }

    public void waitForIdle(long)
    {
        androidx.test.uiautomator.QueryController r0;
        long l0;
        java.lang.Throwable r1, $r4;
        android.app.Instrumentation $r2;
        android.app.UiAutomation $r3;
        java.lang.String $r5;

        r0 := @this: androidx.test.uiautomator.QueryController;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<androidx.test.uiautomator.QueryController: android.app.Instrumentation getInstrumentation()>();

        $r3 = staticinvoke <androidx.test.uiautomator.UiDevice: android.app.UiAutomation getUiAutomation(android.app.Instrumentation)>($r2);

        virtualinvoke $r3.<android.app.UiAutomation: void waitForIdle(long,long)>(500L, l0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "Could not detect idle state.");

     label4:
        return;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    private java.lang.String formatLog(java.lang.String)
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.String r1, $r6, $r8, $r11;
        java.lang.StringBuilder r2, $r3;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object[] $r4, $r9;
        java.lang.Integer $r5, $r10;

        r0 := @this: androidx.test.uiautomator.QueryController;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        i4 = 0;

     label1:
        $i0 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        if i4 >= $i0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". . ");

        i4 = i4 + 1;

        goto label1;

     label2:
        $i1 = r0.<androidx.test.uiautomator.QueryController: int mLogIndent>;

        if $i1 <= 0 goto label3;

        $r9 = newarray (java.lang.Object)[2];

        $i3 = r0.<androidx.test.uiautomator.QueryController: int mPatternCounter>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r9[0] = $r10;

        $r9[1] = r1;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(". . [%d]: %s", $r9);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        goto label4;

     label3:
        $r4 = newarray (java.lang.Object)[2];

        $i2 = r0.<androidx.test.uiautomator.QueryController: int mPatternCounter>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[0] = $r5;

        $r4[1] = r1;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(". . [%d]: %s", $r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label4:
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private android.app.Instrumentation getInstrumentation()
    {
        androidx.test.uiautomator.QueryController r0;
        android.app.Instrumentation $r1;

        r0 := @this: androidx.test.uiautomator.QueryController;

        $r1 = r0.<androidx.test.uiautomator.QueryController: android.app.Instrumentation mInstrumentation>;

        return $r1;
    }

    static java.lang.Object access$000(androidx.test.uiautomator.QueryController)
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.Object $r1;

        r0 := @parameter0: androidx.test.uiautomator.QueryController;

        $r1 = r0.<androidx.test.uiautomator.QueryController: java.lang.Object mLock>;

        return $r1;
    }

    static java.lang.String access$102(androidx.test.uiautomator.QueryController, java.lang.String)
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.String r1;

        r0 := @parameter0: androidx.test.uiautomator.QueryController;

        r1 := @parameter1: java.lang.String;

        r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastActivityName> = r1;

        return r1;
    }

    static java.lang.String access$202(androidx.test.uiautomator.QueryController, java.lang.String)
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.String r1;

        r0 := @parameter0: androidx.test.uiautomator.QueryController;

        r1 := @parameter1: java.lang.String;

        r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText> = r1;

        return r1;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <androidx.test.uiautomator.QueryController: boolean DEBUG>;

        return $z0;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        return $r0;
    }

    static java.lang.String access$200(androidx.test.uiautomator.QueryController)
    {
        androidx.test.uiautomator.QueryController r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.uiautomator.QueryController;

        $r1 = r0.<androidx.test.uiautomator.QueryController: java.lang.String mLastTraversedText>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        $r0 = class "Landroidx/test/uiautomator/QueryController;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG> = $r1;

        $r2 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r2, 3);

        <androidx.test.uiautomator.QueryController: boolean DEBUG> = $z0;

        $r3 = <androidx.test.uiautomator.QueryController: java.lang.String LOG_TAG>;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r3, 2);

        <androidx.test.uiautomator.QueryController: boolean VERBOSE> = $z1;

        return;
    }

androidx.test.uiautomator.QueryController$1
<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0>
    void <init>(androidx.test.uiautomator.QueryController)
    {
        androidx.test.uiautomator.QueryController$1 r0;
        androidx.test.uiautomator.QueryController r1;

        r0 := @this: androidx.test.uiautomator.QueryController$1;

        r1 := @parameter0: androidx.test.uiautomator.QueryController;

        r0.<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.test.uiautomator.QueryController$1 r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Object r2, $r5, $r16, $r19, $r26, $r29, $r35;
        java.lang.Throwable r3, $r33;
        androidx.test.uiautomator.QueryController $r4, $r10, $r17, $r27, $r34;
        int $i0, $i2, $i3;
        java.util.List $r6, $r14, $r15, $r18, $r23, $r24, $r25, $r28;
        java.lang.String $r7, $r11, $r13, $r21, $r31;
        java.lang.StringBuilder $r8, $r9, $r12;
        java.lang.CharSequence $r20, $r30;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.QueryController$1;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r4 = r0.<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0>;

        $r5 = staticinvoke <androidx.test.uiautomator.QueryController: java.lang.Object access$000(androidx.test.uiautomator.QueryController)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        lookupswitch($i0)
        {
            case 32: goto label2;
            case 131072: goto label3;
            default: goto label5;
        };

     label2:
        $r23 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        if $r23 == null goto label5;

        $r24 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $i3 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i3 <= 0 goto label5;

        $r25 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(0);

        if $r26 == null goto label5;

        $r27 = r0.<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0>;

        $r28 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(0);

        $r30 = (java.lang.CharSequence) $r29;

        $r31 = interfaceinvoke $r30.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <androidx.test.uiautomator.QueryController: java.lang.String access$102(androidx.test.uiautomator.QueryController,java.lang.String)>($r27, $r31);

        goto label5;

     label3:
        $r6 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        if $r6 == null goto label4;

        $r14 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i2 <= 0 goto label4;

        $r15 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        if $r16 == null goto label4;

        $r17 = r0.<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0>;

        $r18 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(0);

        $r20 = (java.lang.CharSequence) $r19;

        $r21 = interfaceinvoke $r20.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <androidx.test.uiautomator.QueryController: java.lang.String access$202(androidx.test.uiautomator.QueryController,java.lang.String)>($r17, $r21);

     label4:
        $z0 = staticinvoke <androidx.test.uiautomator.QueryController: boolean access$300()>();

        if $z0 == 0 goto label5;

        $r7 = staticinvoke <androidx.test.uiautomator.QueryController: java.lang.String access$400()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Last text selection reported: ");

        $r10 = r0.<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0>;

        $r11 = staticinvoke <androidx.test.uiautomator.QueryController: java.lang.String access$200(androidx.test.uiautomator.QueryController)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r13);

     label5:
        $r34 = r0.<androidx.test.uiautomator.QueryController$1: androidx.test.uiautomator.QueryController this$0>;

        $r35 = staticinvoke <androidx.test.uiautomator.QueryController: java.lang.Object access$000(androidx.test.uiautomator.QueryController)>($r34);

        virtualinvoke $r35.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r33 := @caughtexception;

        r3 = $r33;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

