androidx.media3.exoplayer.rtsp.RtspMediaSource
<androidx.media3.exoplayer.rtsp.RtspMediaSource: long DEFAULT_TIMEOUT_MS>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: java.lang.String userAgent>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: android.net.Uri uri>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: javax.net.SocketFactory socketFactory>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean debugLoggingEnabled>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: long timelineDurationUs>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsSeekable>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsLive>
<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsPlaceholder>
    void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory, java.lang.String, javax.net.SocketFactory, boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        androidx.media3.common.MediaItem r1, $r5;
        androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory r2;
        java.lang.String r3;
        javax.net.SocketFactory r4;
        boolean z0;
        androidx.media3.common.MediaItem$LocalConfiguration $r6, $r8;
        java.lang.Object $r7;
        android.net.Uri $r9;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.net.SocketFactory;

        z0 := @parameter4: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.common.MediaItem mediaItem> = r1;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory> = r2;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: java.lang.String userAgent> = r3;

        $r5 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.common.MediaItem mediaItem>;

        $r6 = $r5.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (androidx.media3.common.MediaItem$LocalConfiguration) $r7;

        $r9 = $r8.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: android.net.Uri uri> = $r9;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: javax.net.SocketFactory socketFactory> = r4;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean debugLoggingEnabled> = z0;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: long timelineDurationUs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsPlaceholder> = 1;

        return;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        androidx.media3.datasource.TransferListener r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        specialinvoke r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: void notifySourceInfoRefreshed()>();

        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.common.MediaItem mediaItem>;

        return $r1;
    }

    public void maybeThrowSourceInfoRefreshError()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        androidx.media3.exoplayer.rtsp.RtspMediaPeriod $r3;
        androidx.media3.exoplayer.rtsp.RtspMediaSource$1 $r4;
        androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory $r5;
        android.net.Uri $r6;
        boolean $z0;
        javax.net.SocketFactory $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r3 = new androidx.media3.exoplayer.rtsp.RtspMediaPeriod;

        $r5 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory>;

        $r6 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: android.net.Uri uri>;

        $r4 = new androidx.media3.exoplayer.rtsp.RtspMediaSource$1;

        specialinvoke $r4.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: void <init>(androidx.media3.exoplayer.rtsp.RtspMediaSource)>(r0);

        $r8 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: java.lang.String userAgent>;

        $r7 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: javax.net.SocketFactory socketFactory>;

        $z0 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean debugLoggingEnabled>;

        specialinvoke $r3.<androidx.media3.exoplayer.rtsp.RtspMediaPeriod: void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory,android.net.Uri,androidx.media3.exoplayer.rtsp.RtspMediaPeriod$Listener,java.lang.String,javax.net.SocketFactory,boolean)>(r2, $r5, $r6, $r4, $r8, $r7, $z0);

        return $r3;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.rtsp.RtspMediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = (androidx.media3.exoplayer.rtsp.RtspMediaPeriod) r1;

        virtualinvoke $r2.<androidx.media3.exoplayer.rtsp.RtspMediaPeriod: void release()>();

        return;
    }

    private void notifySourceInfoRefreshed()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        androidx.media3.common.MediaItem $r2;
        boolean $z0, $z1, $z2;
        long $l0;
        java.lang.Object r4;
        androidx.media3.exoplayer.source.SinglePeriodTimeline r5;
        androidx.media3.exoplayer.rtsp.RtspMediaSource$2 r6;
        androidx.media3.common.Timeline r7, r8;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r5 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $l0 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: long timelineDurationUs>;

        $z1 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsSeekable>;

        $z0 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsLive>;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke r5.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem)>($l0, $z1, 0, $z0, null, $r2);

        r4 = r5;

        $z2 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsPlaceholder>;

        if $z2 == 0 goto label1;

        r6 = new androidx.media3.exoplayer.rtsp.RtspMediaSource$2;

        r7 = (androidx.media3.common.Timeline) r4;

        specialinvoke r6.<androidx.media3.exoplayer.rtsp.RtspMediaSource$2: void <init>(androidx.media3.exoplayer.rtsp.RtspMediaSource,androidx.media3.common.Timeline)>(r0, r7);

        r4 = r6;

     label1:
        r8 = (androidx.media3.common.Timeline) r4;

        virtualinvoke r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>(r8);

        return;
    }

    static long access$002(androidx.media3.exoplayer.rtsp.RtspMediaSource, long)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        long l0;

        r0 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        l0 := @parameter1: long;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: long timelineDurationUs> = l0;

        return l0;
    }

    static boolean access$102(androidx.media3.exoplayer.rtsp.RtspMediaSource, boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        boolean z0;

        r0 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsSeekable> = z0;

        return z0;
    }

    static boolean access$202(androidx.media3.exoplayer.rtsp.RtspMediaSource, boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        boolean z0;

        r0 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsLive> = z0;

        return z0;
    }

    static boolean access$302(androidx.media3.exoplayer.rtsp.RtspMediaSource, boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;
        boolean z0;

        r0 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean timelineIsPlaceholder> = z0;

        return z0;
    }

    static void access$400(androidx.media3.exoplayer.rtsp.RtspMediaSource)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource r0;

        r0 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource: void notifySourceInfoRefreshed()>();

        return;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.exoplayer.rtsp");

        return;
    }

androidx.media3.exoplayer.rtsp.RtspMediaSource$1
<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>
    void <init>(androidx.media3.exoplayer.rtsp.RtspMediaSource)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$1 r0;
        androidx.media3.exoplayer.rtsp.RtspMediaSource r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$1;

        r1 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSourceInfoRefreshed(androidx.media3.exoplayer.rtsp.RtspSessionTiming)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$1 r0;
        androidx.media3.exoplayer.rtsp.RtspSessionTiming r1;
        androidx.media3.exoplayer.rtsp.RtspMediaSource $r2, $r3, $r4, $r5, $r6;
        long $l0, $l1;
        boolean $z0, $z2, $z5;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$1;

        r1 := @parameter0: androidx.media3.exoplayer.rtsp.RtspSessionTiming;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        $l0 = virtualinvoke r1.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long getDurationMs()>();

        $l1 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l0);

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: long access$002(androidx.media3.exoplayer.rtsp.RtspMediaSource,long)>($r2, $l1);

        $r3 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        $z0 = virtualinvoke r1.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: boolean isLive()>();

        if $z0 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean access$102(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean)>($r3, $z5);

        $r4 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        $z2 = virtualinvoke r1.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: boolean isLive()>();

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean access$202(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean)>($r4, $z2);

        $r5 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean access$302(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean)>($r5, 0);

        $r6 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: void access$400(androidx.media3.exoplayer.rtsp.RtspMediaSource)>($r6);

        return;
    }

    public void onSeekingUnsupported()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$1 r0;
        androidx.media3.exoplayer.rtsp.RtspMediaSource $r1, $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$1;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: boolean access$102(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean)>($r1, 0);

        $r2 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$1: androidx.media3.exoplayer.rtsp.RtspMediaSource this$0>;

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMediaSource: void access$400(androidx.media3.exoplayer.rtsp.RtspMediaSource)>($r2);

        return;
    }

androidx.media3.exoplayer.rtsp.RtspMediaSource$2
    void <init>(androidx.media3.exoplayer.rtsp.RtspMediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$2 r0;
        androidx.media3.exoplayer.rtsp.RtspMediaSource r1;
        androidx.media3.common.Timeline r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$2;

        r1 := @parameter0: androidx.media3.exoplayer.rtsp.RtspMediaSource;

        r2 := @parameter1: androidx.media3.common.Timeline;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: void <init>(androidx.media3.common.Timeline)>(r2);

        return;
    }

    public androidx.media3.common.Timeline$Window getWindow(int, androidx.media3.common.Timeline$Window, long)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$2 r0;
        int i0;
        androidx.media3.common.Timeline$Window r1;
        long l1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$2;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long)>(i0, r1, l1);

        r1.<androidx.media3.common.Timeline$Window: boolean isPlaceholder> = 1;

        return r1;
    }

    public androidx.media3.common.Timeline$Period getPeriod(int, androidx.media3.common.Timeline$Period, boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$2 r0;
        int i0;
        androidx.media3.common.Timeline$Period r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$2;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i0, r1, z0);

        r1.<androidx.media3.common.Timeline$Period: boolean isPlaceholder> = 1;

        return r1;
    }

androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory
<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: long timeoutMs>
<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: java.lang.String userAgent>
<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: javax.net.SocketFactory socketFactory>
<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: boolean forceUseRtpTcp>
<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: boolean debugLoggingEnabled>
    public void <init>()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        javax.net.SocketFactory $r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: long timeoutMs> = 8000L;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: java.lang.String userAgent> = "AndroidXMedia3/1.0.0-rc02";

        $r1 = staticinvoke <javax.net.SocketFactory: javax.net.SocketFactory getDefault()>();

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: javax.net.SocketFactory socketFactory> = $r1;

        return;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setForceUseRtpTcp(boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: boolean forceUseRtpTcp> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setUserAgent(java.lang.String)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: java.lang.String userAgent> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setSocketFactory(javax.net.SocketFactory)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        javax.net.SocketFactory r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: javax.net.SocketFactory;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: javax.net.SocketFactory socketFactory> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setDebugLoggingEnabled(boolean)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: boolean debugLoggingEnabled> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setTimeoutMs(long)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        long l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: long timeoutMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        return r0;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        return r0;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        $r1 = newarray (int)[1];

        $r1[0] = 3;

        return $r1;
    }

    public androidx.media3.exoplayer.rtsp.RtspMediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.common.MediaItem$LocalConfiguration $r2;
        boolean $z0, $z1;
        long $l0, $l1;
        javax.net.SocketFactory $r5;
        java.lang.String $r6;
        androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory $r8;
        androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory r9;
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannelFactory r10;
        androidx.media3.exoplayer.rtsp.RtspMediaSource r11;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r11 = new androidx.media3.exoplayer.rtsp.RtspMediaSource;

        $z0 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: boolean forceUseRtpTcp>;

        if $z0 == 0 goto label1;

        r9 = new androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory;

        $r8 = r9;

        $l1 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: long timeoutMs>;

        specialinvoke r9.<androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory: void <init>(long)>($l1);

        goto label2;

     label1:
        r10 = new androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannelFactory;

        $r8 = r10;

        $l0 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: long timeoutMs>;

        specialinvoke r10.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannelFactory: void <init>(long)>($l0);

     label2:
        $r6 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: java.lang.String userAgent>;

        $r5 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: javax.net.SocketFactory socketFactory>;

        $z1 = r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: boolean debugLoggingEnabled>;

        specialinvoke r11.<androidx.media3.exoplayer.rtsp.RtspMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory,java.lang.String,javax.net.SocketFactory,boolean)>(r1, $r8, $r6, $r5, $z1);

        return r11;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.rtsp.RtspMediaSource $r2;
        androidx.media3.exoplayer.source.MediaSource r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: androidx.media3.exoplayer.rtsp.RtspMediaSource createMediaSource(androidx.media3.common.MediaItem)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource) $r2;

        return r3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r2;

        return r3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory: androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r2;

        return r3;
    }

androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException
    public void <init>(java.lang.String)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

