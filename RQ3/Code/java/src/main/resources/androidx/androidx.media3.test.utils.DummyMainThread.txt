androidx.media3.test.utils.DummyMainThread
<androidx.media3.test.utils.DummyMainThread: int TIMEOUT_MS>
<androidx.media3.test.utils.DummyMainThread: android.os.HandlerThread thread>
<androidx.media3.test.utils.DummyMainThread: android.os.Handler handler>
    public void <init>()
    {
        androidx.media3.test.utils.DummyMainThread r0;
        android.os.HandlerThread $r1, $r2, $r4;
        android.os.Handler $r3;
        android.os.Looper $r5;

        r0 := @this: androidx.media3.test.utils.DummyMainThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.HandlerThread;

        specialinvoke $r1.<android.os.HandlerThread: void <init>(java.lang.String)>("DummyMainThread");

        r0.<androidx.media3.test.utils.DummyMainThread: android.os.HandlerThread thread> = $r1;

        $r2 = r0.<androidx.media3.test.utils.DummyMainThread: android.os.HandlerThread thread>;

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r3 = new android.os.Handler;

        $r4 = r0.<androidx.media3.test.utils.DummyMainThread: android.os.HandlerThread thread>;

        $r5 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r0.<androidx.media3.test.utils.DummyMainThread: android.os.Handler handler> = $r3;

        return;
    }

    public void runOnMainThread(java.lang.Runnable)
    {
        androidx.media3.test.utils.DummyMainThread r0;
        java.lang.Runnable r1;

        r0 := @this: androidx.media3.test.utils.DummyMainThread;

        r1 := @parameter0: java.lang.Runnable;

        virtualinvoke r0.<androidx.media3.test.utils.DummyMainThread: void runOnMainThread(int,java.lang.Runnable)>(10000, r1);

        return;
    }

    public void runOnMainThread(int, java.lang.Runnable)
    {
        androidx.media3.test.utils.DummyMainThread r0;
        int i0;
        java.lang.Runnable r1;
        androidx.media3.test.utils.DummyMainThread$TestRunnable $r3;

        r0 := @this: androidx.media3.test.utils.DummyMainThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Runnable;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "run" <androidx.media3.test.utils.DummyMainThread$TestRunnable (java.lang.Runnable)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__());

        virtualinvoke r0.<androidx.media3.test.utils.DummyMainThread: void runTestOnMainThread(int,androidx.media3.test.utils.DummyMainThread$TestRunnable)>(i0, $r3);

        return;
    }

    public void runTestOnMainThread(androidx.media3.test.utils.DummyMainThread$TestRunnable)
    {
        androidx.media3.test.utils.DummyMainThread r0;
        androidx.media3.test.utils.DummyMainThread$TestRunnable r1;

        r0 := @this: androidx.media3.test.utils.DummyMainThread;

        r1 := @parameter0: androidx.media3.test.utils.DummyMainThread$TestRunnable;

        virtualinvoke r0.<androidx.media3.test.utils.DummyMainThread: void runTestOnMainThread(int,androidx.media3.test.utils.DummyMainThread$TestRunnable)>(10000, r1);

        return;
    }

    public void runTestOnMainThread(int, androidx.media3.test.utils.DummyMainThread$TestRunnable)
    {
        androidx.media3.test.utils.DummyMainThread r0;
        int i0;
        androidx.media3.test.utils.DummyMainThread$TestRunnable r1;
        java.util.concurrent.atomic.AtomicReference r2, $r8;
        java.lang.Throwable r3, $r16, $r17, $r18, r19;
        android.os.Looper $r4, $r6;
        android.os.Handler $r5, $r9;
        java.util.concurrent.CountDownLatch $r7, r20;
        java.lang.Runnable $r10;
        java.util.concurrent.TimeUnit $r11;
        long $l1;
        boolean $z1;
        java.lang.Boolean $r12;
        com.google.common.truth.BooleanSubject $r13;
        java.lang.Object $r14, $r15;

        r0 := @this: androidx.media3.test.utils.DummyMainThread;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.test.utils.DummyMainThread$TestRunnable;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = r0.<androidx.media3.test.utils.DummyMainThread: android.os.Handler handler>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        if $r4 != $r6 goto label4;

     label1:
        interfaceinvoke r1.<androidx.media3.test.utils.DummyMainThread$TestRunnable: void run()>();

     label2:
        goto label9;

     label3:
        $r18 := @caughtexception;

        r19 = $r18;

        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>(r19);

        goto label9;

     label4:
        $r7 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r7.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r20 = $r7;

        $r8 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r2 = $r8;

        $r9 = r0.<androidx.media3.test.utils.DummyMainThread: android.os.Handler handler>;

        $r10 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.DummyMainThread$TestRunnable,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>(r1, r2, r20) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.test.utils.DummyMainThread: void lambda$runTestOnMainThread$0(androidx.media3.test.utils.DummyMainThread$TestRunnable,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

     label5:
        $l1 = (long) i0;

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z1 = virtualinvoke r20.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>($l1, $r11);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r13 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r12);

        virtualinvoke $r13.<com.google.common.truth.BooleanSubject: void isTrue()>();

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        r3 = $r17;

        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>(r3);

     label8:
        $r14 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r14 == null goto label9;

        $r15 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r16 = (java.lang.Throwable) $r15;

        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>($r16);

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public void release()
    {
        androidx.media3.test.utils.DummyMainThread r0;
        android.os.HandlerThread $r1;

        r0 := @this: androidx.media3.test.utils.DummyMainThread;

        $r1 = r0.<androidx.media3.test.utils.DummyMainThread: android.os.HandlerThread thread>;

        virtualinvoke $r1.<android.os.HandlerThread: boolean quit()>();

        return;
    }

    private static void lambda$runTestOnMainThread$0(androidx.media3.test.utils.DummyMainThread$TestRunnable, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.CountDownLatch)
    {
        androidx.media3.test.utils.DummyMainThread$TestRunnable r0;
        java.util.concurrent.atomic.AtomicReference r1;
        java.util.concurrent.CountDownLatch r2;
        java.lang.Throwable r3, $r4;

        r0 := @parameter0: androidx.media3.test.utils.DummyMainThread$TestRunnable;

        r1 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        r2 := @parameter2: java.util.concurrent.CountDownLatch;

     label1:
        interfaceinvoke r0.<androidx.media3.test.utils.DummyMainThread$TestRunnable: void run()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r3);

     label4:
        virtualinvoke r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

androidx.media3.test.utils.DummyMainThread$TestRunnable
<androidx.media3.test.utils.DummyMainThread$TestRunnable: void run()>
