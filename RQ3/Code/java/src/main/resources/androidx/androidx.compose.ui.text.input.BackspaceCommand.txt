androidx.compose.ui.text.input.BackspaceCommand
<androidx.compose.ui.text.input.BackspaceCommand: int $stable>
    public void <init>()
    {
        androidx.compose.ui.text.input.BackspaceCommand r0;

        r0 := @this: androidx.compose.ui.text.input.BackspaceCommand;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void applyTo(androidx.compose.ui.text.input.EditingBuffer)
    {
        androidx.compose.ui.text.input.BackspaceCommand r0;
        androidx.compose.ui.text.input.EditingBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;
        java.lang.String $r2;

        r0 := @this: androidx.compose.ui.text.input.BackspaceCommand;

        r1 := @parameter0: androidx.compose.ui.text.input.EditingBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buffer");

        $z0 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: boolean hasComposition$ui_text_release()>();

        if $z0 == 0 goto label1;

        $i6 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getCompositionStart$ui_text_release()>();

        $i7 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getCompositionEnd$ui_text_release()>();

        virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: void delete$ui_text_release(int,int)>($i6, $i7);

        return;

     label1:
        $i1 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getCursor$ui_text_release()>();

        if $i1 != -1 goto label2;

        i8 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getSelectionStart$ui_text_release()>();

        i0 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getSelectionEnd$ui_text_release()>();

        $i5 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getSelectionStart$ui_text_release()>();

        virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: void setCursor$ui_text_release(int)>($i5);

        virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: void delete$ui_text_release(int,int)>(i8, i0);

        return;

     label2:
        $i2 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getCursor$ui_text_release()>();

        if $i2 != 0 goto label3;

        return;

     label3:
        $r2 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: java.lang.String toString()>();

        $i3 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getCursor$ui_text_release()>();

        i9 = staticinvoke <androidx.compose.ui.text.JvmCharHelpers_androidKt: int findPrecedingBreak(java.lang.String,int)>($r2, $i3);

        $i4 = virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: int getCursor$ui_text_release()>();

        virtualinvoke r1.<androidx.compose.ui.text.input.EditingBuffer: void delete$ui_text_release(int,int)>(i9, $i4);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.input.BackspaceCommand r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.input.BackspaceCommand;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.compose.ui.text.input.BackspaceCommand;

        return $z0;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.input.BackspaceCommand r0;
        java.lang.Class $r1;
        kotlin.reflect.KClass $r2;
        int $i0;

        r0 := @this: androidx.compose.ui.text.input.BackspaceCommand;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.input.BackspaceCommand r0;

        r0 := @this: androidx.compose.ui.text.input.BackspaceCommand;

        return "BackspaceCommand()";
    }

    static void <clinit>()
    {
        return;
    }

