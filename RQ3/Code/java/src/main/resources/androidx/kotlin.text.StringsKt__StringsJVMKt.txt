kotlin.text.StringsKt__StringsJVMKt
    public void <init>()
    {
        kotlin.text.StringsKt__StringsJVMKt $r0;

        $r0 := @this: kotlin.text.StringsKt__StringsJVMKt;

        specialinvoke $r0.<kotlin.text.StringsKt__StringNumberConversionsKt: void <init>()>();

        return;
    }

    private static final java.lang.String String(java.lang.StringBuffer)
    {
        java.lang.StringBuffer $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "stringBuffer");

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.StringBuffer)>($r0);

        return $r1;
    }

    private static final java.lang.String String(java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "stringBuilder");

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.StringBuilder)>($r0);

        return $r1;
    }

    private static final java.lang.String String(byte[])
    {
        byte[] $r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "bytes");

        $r2 = new java.lang.String;

        $r1 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r0, $r1);

        return $r2;
    }

    private static final java.lang.String String(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "bytes");

        $r2 = new java.lang.String;

        $r1 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r0, $i0, $i1, $r1);

        return $r2;
    }

    private static final java.lang.String String(byte[], int, int, java.nio.charset.Charset)
    {
        byte[] $r0;
        int $i0, $i1;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "bytes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r0, $i0, $i1, $r1);

        return $r2;
    }

    private static final java.lang.String String(byte[], java.nio.charset.Charset)
    {
        byte[] $r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "bytes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r0, $r1);

        return $r2;
    }

    private static final java.lang.String String(char[])
    {
        char[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "chars");

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r0);

        return $r1;
    }

    private static final java.lang.String String(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "chars");

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    private static final java.lang.String String(int[], int, int)
    {
        int[] $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "codePoints");

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(int[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public static final java.lang.String capitalize(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "getDefault()");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.String capitalize(java.lang.String,java.util.Locale)>($r0, $r1);

        return $r0;
    }

    public static final java.lang.String capitalize(java.lang.String, java.util.Locale)
    {
        java.lang.String $r0, $r3;
        java.util.Locale $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label5;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c1);

        if $z0 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $c2 = staticinvoke <java.lang.Character: char toTitleCase(char)>($c1);

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        if $c2 == $c1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label4;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type java.lang.String");

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "this as java.lang.String).toUpperCase(locale)");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label4:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "StringBuilder().apply(builderAction).toString()");

     label5:
        return $r0;
    }

    private static final int codePointAt(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<java.lang.String: int codePointAt(int)>($i0);

        return $i0;
    }

    private static final int codePointBefore(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<java.lang.String: int codePointBefore(int)>($i0);

        return $i0;
    }

    private static final int codePointCount(java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<java.lang.String: int codePointCount(int,int)>($i0, $i1);

        return $i0;
    }

    public static final int compareTo(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r0);

        return $i0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r0);

        return $i0;
    }

    public static int compareTo$default(java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        int $i0;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $z0 = 0;

     label1:
        $i0 = staticinvoke <kotlin.text.StringsKt: int compareTo(java.lang.String,java.lang.String,boolean)>($r2, $r0, $z0);

        return $i0;
    }

    public static final java.lang.String concatToString(char[])
    {
        char[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r0);

        return $r1;
    }

    public static final java.lang.String concatToString(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r1;
        java.lang.String $r2;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i1 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)>($i0, $i2, $i1);

        $r2 = new java.lang.String;

        $i2 = $i2 - $i0;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r0, $i0, $i2);

        return $r2;
    }

    public static java.lang.String concatToString$default(char[], int, int, int, java.lang.Object)
    {
        java.lang.String $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 := @parameter4: java.lang.Object;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $i0 = 0;

     label1:
        $i2 = $i2 & 2;

        if $i2 == 0 goto label2;

        $i1 = lengthof $r1;

     label2:
        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.String concatToString(char[],int,int)>($r1, $i0, $i1);

        return $r0;
    }

    public static final boolean contentEquals(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence $r0, $r1;
        boolean $z0;
        java.lang.String $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.lang.CharSequence;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        if $r0 == null goto label1;

        $r2 = (java.lang.String) $r1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r0);

        return $z0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean contentEqualsImpl(java.lang.CharSequence,java.lang.CharSequence)>($r1, $r0);

        return $z0;
    }

    public static final boolean contentEquals(java.lang.CharSequence, java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.lang.CharSequence;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean contentEqualsIgnoreCaseImpl(java.lang.CharSequence,java.lang.CharSequence)>($r1, $r0);

        return $z0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence)>($r1, $r0);

        return $z0;
    }

    private static final boolean contentEquals(java.lang.String, java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "charSequence");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r0);

        return $z0;
    }

    private static final boolean contentEquals(java.lang.String, java.lang.StringBuffer)
    {
        java.lang.StringBuffer $r0;
        boolean $z0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.StringBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "stringBuilder");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contentEquals(java.lang.StringBuffer)>($r0);

        return $z0;
    }

    public static final java.lang.String decapitalize(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c1);

        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type java.lang.String");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "this as java.lang.String).toLowerCase()");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r0;
    }

    public static final java.lang.String decapitalize(java.lang.String, java.util.Locale)
    {
        java.lang.String $r0, $r3;
        java.util.Locale $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c1);

        if $z0 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type java.lang.String");

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "this as java.lang.String).toLowerCase(locale)");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r0;
    }

    public static final java.lang.String decodeToString(byte[])
    {
        byte[] $r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new java.lang.String;

        $r1 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r0, $r1);

        return $r2;
    }

    public static final java.lang.String decodeToString(byte[], int, int, boolean)
    {
        int $i0, $i1, $i2;
        byte[] $r0;
        boolean $z0;
        kotlin.collections.AbstractList$Companion $r1;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;
        java.nio.charset.CharsetDecoder $r4;
        java.nio.charset.CodingErrorAction $r5;
        java.nio.ByteBuffer $r6;
        java.nio.CharBuffer $r7;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i0 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)>($i1, $i2, $i0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.String;

        $i2 = $i2 - $i1;

        $r3 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r0, $i1, $i2, $r3);

        return $r2;

     label1:
        $r3 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r4 = virtualinvoke $r4.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r5);

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r4 = virtualinvoke $r4.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r5);

        $i2 = $i2 - $i1;

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r0, $i1, $i2);

        $r7 = virtualinvoke $r4.<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r6);

        $r2 = virtualinvoke $r7.<java.nio.CharBuffer: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "decoder.decode(ByteBuffe\u2026- startIndex)).toString()");

        return $r2;
    }

    public static java.lang.String decodeToString$default(byte[], int, int, boolean, int, java.lang.Object)
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r2;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r2 := @parameter5: java.lang.Object;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $i0 = 0;

     label1:
        $i3 = $i2 & 2;

        if $i3 == 0 goto label2;

        $i1 = lengthof $r1;

     label2:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label3;

        $z0 = 0;

     label3:
        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.String decodeToString(byte[],int,int,boolean)>($r1, $i0, $i1, $z0);

        return $r0;
    }

    public static final byte[] encodeToByteArray(java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).getBytes(charset)");

        return $r0;
    }

    public static final byte[] encodeToByteArray(java.lang.String, int, int, boolean)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.collections.AbstractList$Companion $r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        java.nio.charset.CharsetEncoder $r4;
        java.nio.charset.CodingErrorAction $r5;
        java.nio.CharBuffer $r6;
        java.nio.ByteBuffer $r7;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        if $z0 != 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r0, "null cannot be cast to non-null type java.lang.String");

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "this as java.lang.String).getBytes(charset)");

        return $r3;

     label1:
        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r4 = virtualinvoke $r4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r5);

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r4 = virtualinvoke $r4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r5);

        $r6 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>($r0, $i0, $i1);

        $r7 = virtualinvoke $r4.<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r6);

        $z0 = virtualinvoke $r7.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r7.<java.nio.ByteBuffer: int arrayOffset()>();

        if $i0 != 0 goto label2;

        $i0 = virtualinvoke $r7.<java.nio.ByteBuffer: int remaining()>();

        $r3 = virtualinvoke $r7.<java.nio.ByteBuffer: byte[] array()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $i1 = lengthof $r3;

        if $i0 != $i1 goto label2;

        $r3 = virtualinvoke $r7.<java.nio.ByteBuffer: byte[] array()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "{\n        byteBuffer.array()\n    }");

        return $r3;

     label2:
        $i0 = virtualinvoke $r7.<java.nio.ByteBuffer: int remaining()>();

        $r3 = newarray (byte)[$i0];

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r3);

        return $r3;
    }

    public static byte[] encodeToByteArray$default(java.lang.String, int, int, boolean, int, java.lang.Object)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r1 := @parameter5: java.lang.Object;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $i0 = 0;

     label1:
        $i3 = $i2 & 2;

        if $i3 == 0 goto label2;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label3;

        $z0 = 0;

     label3:
        $r2 = staticinvoke <kotlin.text.StringsKt: byte[] encodeToByteArray(java.lang.String,int,int,boolean)>($r0, $i0, $i1, $z0);

        return $r2;
    }

    public static final boolean endsWith(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "suffix");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r0);

        return $z0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)>($r1, $i0, $r0, 0, $i1, 1);

        return $z0;
    }

    public static boolean endsWith$default(java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $z0 = 0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean endsWith(java.lang.String,java.lang.String,boolean)>($r2, $r0, $z0);

        return $z0;
    }

    public static final boolean equals(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        if $r1 != null goto label2;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        return $z0;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        return $z0;
    }

    public static boolean equals$default(java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $z0 = 0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean equals(java.lang.String,java.lang.String,boolean)>($r2, $r0, $z0);

        return $z0;
    }

    private static final transient java.lang.String format(java.lang.String, java.util.Locale, java.lang.Object[])
    {
        java.lang.String $r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        $r2 := @parameter2: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "args");

        $i0 = lengthof $r2;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, $r0, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "format(locale, this, *args)");

        return $r0;
    }

    private static final transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "args");

        $i0 = lengthof $r1;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r0, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "format(this, *args)");

        return $r0;
    }

    private static final transient java.lang.String format(kotlin.jvm.internal.StringCompanionObject, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        kotlin.jvm.internal.StringCompanionObject $r1;
        java.lang.String $r2;
        int $i0;

        $r1 := @parameter0: kotlin.jvm.internal.StringCompanionObject;

        $r2 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "format");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "args");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r0, $i0);

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "format(format, *args)");

        return $r2;
    }

    private static final transient java.lang.String format(kotlin.jvm.internal.StringCompanionObject, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.internal.StringCompanionObject $r2;
        java.util.Locale $r3;
        int $i0;

        $r2 := @parameter0: kotlin.jvm.internal.StringCompanionObject;

        $r3 := @parameter1: java.util.Locale;

        $r0 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "locale");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "format");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "args");

        $i0 = lengthof $r1;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, $r0, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "format(locale, format, *args)");

        return $r0;
    }

    private static final transient java.lang.String formatNullable(java.lang.String, java.util.Locale, java.lang.Object[])
    {
        java.lang.String $r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        $r2 := @parameter2: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "args");

        $i0 = lengthof $r2;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, $r0, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "format(locale, this, *args)");

        return $r0;
    }

    private static final transient java.lang.String formatNullable(kotlin.jvm.internal.StringCompanionObject, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.internal.StringCompanionObject $r2;
        java.util.Locale $r3;
        int $i0;

        $r2 := @parameter0: kotlin.jvm.internal.StringCompanionObject;

        $r3 := @parameter1: java.util.Locale;

        $r0 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "format");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "args");

        $i0 = lengthof $r1;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, $r0, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "format(locale, format, *args)");

        return $r0;
    }

    public static final java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject)
    {
        kotlin.jvm.internal.StringCompanionObject $r0;
        java.util.Comparator $r1;

        $r0 := @parameter0: kotlin.jvm.internal.StringCompanionObject;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "CASE_INSENSITIVE_ORDER");

        return $r1;
    }

    private static final java.lang.String intern(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String intern()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).intern()");

        return $r0;
    }

    public static final boolean isBlank(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r1;
        java.util.Iterator $r2;
        kotlin.collections.IntIterator $r3;
        char $c1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $z0 = 1;

        if $i0 == 0 goto label5;

        $r1 = staticinvoke <kotlin.text.StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)>($r0);

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = (kotlin.collections.IntIterator) $r2;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $z1 = staticinvoke <kotlin.text.CharsKt: boolean isWhitespace(char)>($c1);

        if $z1 != 0 goto label1;

        $z1 = 0;

        goto label3;

     label2:
        $z1 = 1;

     label3:
        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

        goto label5;

     label5:
        return $z0;
    }

    private static final java.lang.String lowercase(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        return $r0;
    }

    private static final java.lang.String lowercase(java.lang.String, java.util.Locale)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toLowerCase(locale)");

        return $r0;
    }

    private static final int nativeIndexOf(java.lang.String, char, int)
    {
        char $c0;
        int $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>($c0, $i1);

        return $i1;
    }

    private static final int nativeIndexOf(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "str");

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r0, $i0);

        return $i0;
    }

    private static final int nativeLastIndexOf(java.lang.String, char, int)
    {
        char $c0;
        int $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int,int)>($c0, $i1);

        return $i1;
    }

    private static final int nativeLastIndexOf(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "str");

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r0, $i0);

        return $i0;
    }

    private static final int offsetByCodePoints(java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<java.lang.String: int offsetByCodePoints(int,int)>($i0, $i1);

        return $i0;
    }

    public static final boolean regionMatches(java.lang.CharSequence, int, java.lang.CharSequence, int, int, boolean)
    {
        int $i0, $i1, $i2;
        java.lang.CharSequence $r0, $r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.CharSequence;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $z1 = $r1 instanceof java.lang.String;

        if $z1 == 0 goto label1;

        $z1 = $r0 instanceof java.lang.String;

        if $z1 == 0 goto label1;

        $r2 = (java.lang.String) $r1;

        $r3 = (java.lang.String) $r0;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)>($r2, $i0, $r3, $i1, $i2, $z0);

        return $z0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)>($r1, $i0, $r0, $i1, $i2, $z0);

        return $z0;
    }

    public static final boolean regionMatches(java.lang.String, int, java.lang.String, int, int, boolean)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i0, $r0, $i1, $i2);

        return $z0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>($z0, $i0, $r0, $i1, $i2);

        return $z0;
    }

    public static boolean regionMatches$default(java.lang.CharSequence, int, java.lang.CharSequence, int, int, boolean, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.CharSequence;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $i3 := @parameter6: int;

        $r1 := @parameter7: java.lang.Object;

        $i3 = $i3 & 16;

        if $i3 == 0 goto label1;

        $z0 = 0;

        goto label1;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)>($r2, $i0, $r0, $i1, $i2, $z0);

        return $z0;
    }

    public static boolean regionMatches$default(java.lang.String, int, java.lang.String, int, int, boolean, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $i3 := @parameter6: int;

        $r1 := @parameter7: java.lang.Object;

        $i3 = $i3 & 16;

        if $i3 == 0 goto label1;

        $z0 = 0;

        goto label1;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)>($r2, $i0, $r0, $i1, $i2, $z0);

        return $z0;
    }

    public static final java.lang.String repeat(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.String $r4;
        char $c3;
        char[] $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = 0;

        if $i0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label13;

        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label05;
            default: goto label03;
        };

     label03:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        lookupswitch($i2)
        {
            case 0: goto label10;
            case 1: goto label07;
            default: goto label04;
        };

     label04:
        $r1 = new java.lang.StringBuilder;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = $i1 * $i0;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

        goto label11;

     label05:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label06:
        return "";

     label07:
        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r5 = newarray (char)[$i0];

     label08:
        if $i1 >= $i0 goto label09;

        $r5[$i1] = $c3;

        $i1 = $i1 + 1;

        goto label08;

     label09:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        return $r4;

     label10:
        return "";

     label11:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r0);

        goto label11;

     label12:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "{\n                    va\u2026tring()\n                }");

        return $r4;

     label13:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Count \'n\' must be non-negative, but was ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        goto label14;

     label14:
        throw $r6;
    }

    public static final java.lang.String replace(java.lang.String, char, char, boolean)
    {
        char $c0, $c1, $c4, $c5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        int $i2, $i3;

        $r1 := @parameter0: java.lang.String;

        $c1 := @parameter1: char;

        $c0 := @parameter2: char;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>($c1, $c0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this as java.lang.String\u2026replace(oldChar, newChar)");

        return $r1;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i2 = 0;

     label2:
        $i3 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i2 >= $i3 goto label4;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        $c5 = $c4;

        $z1 = staticinvoke <kotlin.text.CharsKt: boolean equals(char,char,boolean)>($c4, $c1, $z0);

        if $z1 == 0 goto label3;

        $c5 = $c0;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "StringBuilder(capacity).\u2026builderAction).toString()");

        return $r1;
    }

    public static final java.lang.String replace(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r3, $r4;
        java.lang.OutOfMemoryError $r5;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "oldValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "newValue");

        $i0 = 0;

        $i1 = staticinvoke <kotlin.text.StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)>($r1, $r2, 0, $z0);

        $i2 = $i1;

        if $i1 >= 0 goto label1;

        return $r1;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 1);

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = $i4 - $i1;

        $i5 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i4 = $i4 + $i5;

        if $i4 < 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i4);

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i0 = $i2 + $i1;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 >= $i4 goto label3;

        $i2 = $i2 + $i3;

        $i4 = staticinvoke <kotlin.text.StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)>($r1, $r2, $i2, $z0);

        $i2 = $i4;

        if $i4 > 0 goto label2;

     label3:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "stringBuilder.append(this, i, length).toString()");

        return $r1;

     label4:
        $r5 = new java.lang.OutOfMemoryError;

        specialinvoke $r5.<java.lang.OutOfMemoryError: void <init>()>();

        goto label5;

     label5:
        throw $r5;
    }

    public static java.lang.String replace$default(java.lang.String, char, char, boolean, int, java.lang.Object)
    {
        char $c0, $c1;
        java.lang.Object $r0;
        java.lang.String $r1;
        boolean $z0;
        int $i2;

        $r1 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $c1 := @parameter2: char;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r0 := @parameter5: java.lang.Object;

        $i2 = $i2 & 4;

        if $i2 == 0 goto label1;

        $z0 = 0;

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace(java.lang.String,char,char,boolean)>($r1, $c0, $c1, $z0);

        return $r1;
    }

    public static java.lang.String replace$default(java.lang.String, java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        int $i0;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.Object;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        $z0 = 0;

     label1:
        $r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean)>($r3, $r0, $r1, $z0);

        return $r3;
    }

    public static final java.lang.String replaceFirst(java.lang.String, char, char, boolean)
    {
        java.lang.String $r0, $r1;
        char $c0, $c1;
        boolean $z0;
        int $i2, $i3;
        java.lang.CharSequence $r2;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $c1 := @parameter2: char;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r0, $c0, 0, $z0, 2, null);

        if $i2 >= 0 goto label1;

        return $r0;

     label1:
        $i3 = $i2 + 1;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        $r2 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence)>($r0, $i2, $i3, $r1);

        $r0 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r0;
    }

    public static final java.lang.String replaceFirst(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0;
        int $i0, $i1;
        java.lang.CharSequence $r3;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "oldValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "newValue");

        $i0 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)>($r1, $r2, 0, $z0, 2, null);

        if $i0 >= 0 goto label1;

        return $r1;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i1 + $i0;

        $r3 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence)>($r1, $i0, $i1, $r0);

        $r1 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String replaceFirst$default(java.lang.String, char, char, boolean, int, java.lang.Object)
    {
        char $c0, $c1;
        java.lang.Object $r0;
        java.lang.String $r1;
        boolean $z0;
        int $i2;

        $r1 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $c1 := @parameter2: char;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r0 := @parameter5: java.lang.Object;

        $i2 = $i2 & 4;

        if $i2 == 0 goto label1;

        $z0 = 0;

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String replaceFirst(java.lang.String,char,char,boolean)>($r1, $c0, $c1, $z0);

        return $r1;
    }

    public static java.lang.String replaceFirst$default(java.lang.String, java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        int $i0;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.Object;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        $z0 = 0;

     label1:
        $r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean)>($r3, $r0, $r1, $z0);

        return $r3;
    }

    public static final java.util.List split(java.lang.CharSequence, java.util.regex.Pattern, int)
    {
        java.lang.CharSequence $r0;
        java.util.regex.Pattern $r1;
        int $i0;
        java.lang.String[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.regex.Pattern;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "regex");

        staticinvoke <kotlin.text.StringsKt: void requireNonNegativeLimit(int)>($i0);

        if $i0 != 0 goto label1;

        $i0 = -1;

     label1:
        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "regex.split(this, if (limit == 0) -1 else limit)");

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static java.util.List split$default(java.lang.CharSequence, java.util.regex.Pattern, int, int, java.lang.Object)
    {
        java.util.regex.Pattern $r0;
        java.lang.Object $r1;
        java.util.List $r2;
        java.lang.CharSequence $r3;
        int $i0, $i1;

        $r3 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.regex.Pattern;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i1 = $i1 & 2;

        if $i1 == 0 goto label1;

        $i0 = 0;

     label1:
        $r2 = staticinvoke <kotlin.text.StringsKt: java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int)>($r3, $r0, $i0);

        return $r2;
    }

    public static final boolean startsWith(java.lang.String, java.lang.String, int, boolean)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String,int)>($r0, $i0);

        return $z0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)>($r1, $i0, $r0, 0, $i1, $z0);

        return $z0;
    }

    public static final boolean startsWith(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        return $z0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)>($r1, 0, $r0, 0, $i0, $z0);

        return $z0;
    }

    public static boolean startsWith$default(java.lang.String, java.lang.String, int, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i1 := @parameter4: int;

        $r1 := @parameter5: java.lang.Object;

        $i1 = $i1 & 4;

        if $i1 == 0 goto label1;

        $z0 = 0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith(java.lang.String,java.lang.String,int,boolean)>($r2, $r0, $i0, $z0);

        return $z0;
    }

    public static boolean startsWith$default(java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $z0 = 0;

     label1:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith(java.lang.String,java.lang.String,boolean)>($r2, $r0, $z0);

        return $z0;
    }

    private static final java.lang.String substring(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        return $r0;
    }

    private static final java.lang.String substring(java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        return $r0;
    }

    private static final byte[] toByteArray(java.lang.String, java.nio.charset.Charset)
    {
        byte[] $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).getBytes(charset)");

        return $r0;
    }

    static byte[] toByteArray$default(java.lang.String, java.nio.charset.Charset, int, java.lang.Object)
    {
        java.lang.Object $r0;
        byte[] $r1;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;
        int $i0;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r3 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "charset");

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this as java.lang.String).getBytes(charset)");

        return $r1;
    }

    private static final char[] toCharArray(java.lang.String)
    {
        char[] $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toCharArray()");

        return $r0;
    }

    public static final char[] toCharArray(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r1;
        char[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        $i2 = $i1 - $i0;

        $r2 = newarray (char)[$i2];

        virtualinvoke $r0.<java.lang.String: void getChars(int,int,char[],int)>($i0, $i1, $r2, 0);

        return $r2;
    }

    private static final char[] toCharArray(java.lang.String, char[], int, int, int)
    {
        java.lang.String $r0;
        char[] $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        virtualinvoke $r0.<java.lang.String: void getChars(int,int,char[],int)>($i1, $i2, $r1, $i0);

        return $r1;
    }

    public static char[] toCharArray$default(java.lang.String, int, int, int, java.lang.Object)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;
        char[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $i0 = 0;

     label1:
        $i2 = $i2 & 2;

        if $i2 == 0 goto label2;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        $r2 = staticinvoke <kotlin.text.StringsKt: char[] toCharArray(java.lang.String,int,int)>($r0, $i0, $i1);

        return $r2;
    }

    static char[] toCharArray$default(java.lang.String, char[], int, int, int, int, java.lang.Object)
    {
        java.lang.String $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: char[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i0 := @parameter4: int;

        $i3 := @parameter5: int;

        $r2 := @parameter6: java.lang.Object;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label1;

        $i1 = 0;

     label1:
        $i4 = $i3 & 4;

        if $i4 == 0 goto label2;

        $i2 = 0;

     label2:
        $i3 = $i3 & 8;

        if $i3 == 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        virtualinvoke $r0.<java.lang.String: void getChars(int,int,char[],int)>($i2, $i0, $r1, $i1);

        return $r1;
    }

    private static final java.lang.String toLowerCase(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toLowerCase()");

        return $r0;
    }

    private static final java.lang.String toLowerCase(java.lang.String, java.util.Locale)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toLowerCase(locale)");

        return $r0;
    }

    private static final java.util.regex.Pattern toPattern(java.lang.String, int)
    {
        java.util.regex.Pattern $r0;
        java.lang.String $r1;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r1, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "compile(this, flags)");

        return $r0;
    }

    static java.util.regex.Pattern toPattern$default(java.lang.String, int, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        int $i0, $i1;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 0;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r2, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "compile(this, flags)");

        return $r1;
    }

    private static final java.lang.String toUpperCase(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toUpperCase()");

        return $r0;
    }

    private static final java.lang.String toUpperCase(java.lang.String, java.util.Locale)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toUpperCase(locale)");

        return $r0;
    }

    private static final java.lang.String uppercase(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toUpperCase(Locale.ROOT)");

        return $r0;
    }

    private static final java.lang.String uppercase(java.lang.String, java.util.Locale)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "locale");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).toUpperCase(locale)");

        return $r0;
    }

