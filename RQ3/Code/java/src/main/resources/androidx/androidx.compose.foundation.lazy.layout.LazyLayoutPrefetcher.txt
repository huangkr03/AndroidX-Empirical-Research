androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion Companion>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.ui.layout.SubcomposeLayoutState subcomposeLayoutState>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory itemContentFactory>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePrecomposeTimeNs>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePremeasureTimeNs>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean prefetchScheduled>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.Choreographer choreographer>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean isActive>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long frameIntervalNs>
    public void <init>(androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState, androidx.compose.ui.layout.SubcomposeLayoutState, androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory, android.view.View)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState r1;
        androidx.compose.ui.layout.SubcomposeLayoutState r2;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory r3;
        android.view.View r4, $r8;
        byte b0;
        androidx.compose.runtime.collection.MutableVector $r5;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest[] $r6;
        android.view.Choreographer $r7;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion $r9;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        r1 := @parameter0: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState;

        r2 := @parameter1: androidx.compose.ui.layout.SubcomposeLayoutState;

        r3 := @parameter2: androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory;

        r4 := @parameter3: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "prefetchState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "subcomposeLayoutState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "itemContentFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "view");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState> = r1;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.ui.layout.SubcomposeLayoutState subcomposeLayoutState> = r2;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory itemContentFactory> = r3;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view> = r4;

        b0 = 16;

        $r5 = new androidx.compose.runtime.collection.MutableVector;

        $r6 = newarray (androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest)[b0];

        specialinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r6, 0);

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests> = $r5;

        $r7 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.Choreographer choreographer> = $r7;

        $r9 = <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion Companion>;

        $r8 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>;

        staticinvoke <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion: void access$calculateFrameIntervalIfNeeded(androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion,android.view.View)>($r9, $r8);

        return;
    }

    public void run()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        long l0, l1, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l15, $l16, $l17, $l18, l22, l23;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r1;
        int i2, $i3, $i13, $i14, i20, $i21, i24, i25;
        androidx.compose.runtime.collection.MutableVector $r2, $r13, $r17, $r25, r26;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z11, $z14;
        android.view.View $r3, $r4;
        java.util.concurrent.TimeUnit $r5;
        android.view.Choreographer$FrameCallback $r6;
        android.view.Choreographer $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9, $r12, r29, $r36, r37;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory $r10, $r20;
        kotlin.jvm.functions.Function0 $r11;
        androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle $r15, $r16, $r22, r35;
        java.lang.IllegalStateException $r18;
        java.lang.String $r19, r28, $r33, r34;
        androidx.compose.ui.layout.SubcomposeLayoutState $r21;
        java.lang.Throwable $r23, $r24, r32, r38;
        byte b19;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r27;
        kotlin.jvm.functions.Function2 r30;
        kotlin.Unit r31;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>;

        $z1 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $z2 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean prefetchScheduled>;

        if $z2 == 0 goto label01;

        $z3 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean isActive>;

        if $z3 == 0 goto label01;

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>;

        $i3 = virtualinvoke $r3.<android.view.View: int getWindowVisibility()>();

        if $i3 == 0 goto label02;

     label01:
        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean prefetchScheduled> = 0;

        return;

     label02:
        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r4 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>;

        $l4 = virtualinvoke $r4.<android.view.View: long getDrawingTime()>();

        l0 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toNanos(long)>($l4);

        $l5 = <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long frameIntervalNs>;

        l1 = l0 + $l5;

        z8 = 0;

     label03:
        $r25 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>;

        $z9 = virtualinvoke $r25.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z9 == 0 goto label27;

        if z8 != 0 goto label27;

        r26 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>;

        b19 = 0;

        $r8 = virtualinvoke r26.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r9 = $r8[b19];

        r1 = (androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest) $r9;

        $r10 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory itemContentFactory>;

        $r11 = virtualinvoke $r10.<androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory: kotlin.jvm.functions.Function0 getItemProvider()>();

        $r12 = interfaceinvoke $r11.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r27 = (androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider) $r12;

        $z4 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean getCanceled()>();

        if $z4 != 0 goto label07;

        i20 = interfaceinvoke r27.<androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider: int getItemCount()>();

        $i21 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: int getIndex()>();

        if 0 > $i21 goto label05;

        if $i21 >= i20 goto label04;

        $z11 = 1;

        goto label06;

     label04:
        $z11 = 0;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        if $z11 != 0 goto label08;

     label07:
        $r13 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>;

        virtualinvoke $r13.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>(0);

        goto label03;

     label08:
        $r15 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle getPrecomposeHandle()>();

        if $r15 != null goto label15;

        r28 = "compose:lazylist:prefetch:compose";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r28);

     label09:
        l22 = staticinvoke <java.lang.System: long nanoTime()>();

        $l12 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePrecomposeTimeNs>;

        $z7 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean enoughTimeLeft(long,long,long)>(l22, l1, $l12);

        if $z7 == 0 goto label10;

        $i13 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: int getIndex()>();

        r29 = interfaceinvoke r27.<androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider: java.lang.Object getKey(int)>($i13);

        $r20 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory itemContentFactory>;

        $i14 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: int getIndex()>();

        r30 = virtualinvoke $r20.<androidx.compose.foundation.lazy.layout.LazyLayoutItemContentFactory: kotlin.jvm.functions.Function2 getContent(int,java.lang.Object)>($i14, r29);

        $r21 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.ui.layout.SubcomposeLayoutState subcomposeLayoutState>;

        $r22 = virtualinvoke $r21.<androidx.compose.ui.layout.SubcomposeLayoutState: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle precompose(java.lang.Object,kotlin.jvm.functions.Function2)>(r29, r30);

        virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: void setPrecomposeHandle(androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle)>($r22);

        $l15 = staticinvoke <java.lang.System: long nanoTime()>();

        $l17 = $l15 - l22;

        $l16 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePrecomposeTimeNs>;

        $l18 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long calculateAverageTime(long,long)>($l17, $l16);

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePrecomposeTimeNs> = $l18;

        goto label11;

     label10:
        z8 = 1;

     label11:
        r31 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label12:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label03;

     label13:
        $r24 := @caughtexception;

        r32 = $r24;

     label14:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r32;

     label15:
        $z5 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean getMeasured()>();

        if $z5 != 0 goto label16;

        $z14 = 1;

        goto label17;

     label16:
        $z14 = 0;

     label17:
        if $z14 != 0 goto label18;

        $r33 = "Check failed.";

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label18:
        r34 = "compose:lazylist:prefetch:measure";

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>(r34);

     label19:
        l23 = staticinvoke <java.lang.System: long nanoTime()>();

        $l6 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePremeasureTimeNs>;

        $z6 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean enoughTimeLeft(long,long,long)>(l23, l1, $l6);

        if $z6 == 0 goto label22;

        $r16 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle getPrecomposeHandle()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r16);

        r35 = $r16;

        i24 = interfaceinvoke r35.<androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle: int getPlaceablesCount()>();

        i25 = 0;

     label20:
        if i25 >= i24 goto label21;

        i2 = i25;

        $l11 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: long getConstraints-msEJaDk()>();

        interfaceinvoke r35.<androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle: void premeasure-0kLqBqw(int,long)>(i2, $l11);

        i25 = i25 + 1;

        goto label20;

     label21:
        $l7 = staticinvoke <java.lang.System: long nanoTime()>();

        $l9 = $l7 - l23;

        $l8 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePremeasureTimeNs>;

        $l10 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long calculateAverageTime(long,long)>($l9, $l8);

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long averagePremeasureTimeNs> = $l10;

        $r17 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>;

        $r36 = virtualinvoke $r17.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>(0);

        goto label23;

     label22:
        z8 = 1;

        $r36 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label23:
        r37 = $r36;

     label24:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label03;

     label25:
        $r23 := @caughtexception;

        r38 = $r23;

     label26:
        staticinvoke <android.os.Trace: void endSection()>();

        throw r38;

     label27:
        if z8 == 0 goto label28;

        $r7 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.Choreographer choreographer>;

        $r6 = (android.view.Choreographer$FrameCallback) r0;

        virtualinvoke $r7.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>($r6);

        goto label29;

     label28:
        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean prefetchScheduled> = 0;

     label29:
        return;

        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label19 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    private final boolean enoughTimeLeft(long, long, long)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        long l0, l1, l2, $l4;
        byte $b3, $b5;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b3 = l0 cmp l1;

        if $b3 > 0 goto label1;

        $l4 = l0 + l2;

        $b5 = $l4 cmp l1;

        if $b5 >= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void doFrame(long)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        long l0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.view.View $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        l0 := @parameter0: long;

        $z0 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean isActive>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>;

        $r1 = (java.lang.Runnable) r0;

        virtualinvoke $r2.<android.view.View: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }

    private final long calculateAverageTime(long, long)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        long l0, l1, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        byte $b2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l9 = l0;

        goto label2;

     label1:
        $l3 = (long) 4;

        $l5 = l1 / $l3;

        $l4 = (long) 3;

        $l8 = $l5 * $l4;

        $l6 = (long) 4;

        $l7 = l0 / $l6;

        $l9 = $l8 + $l7;

     label2:
        return $l9;
    }

    public androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle schedulePrefetch-0kLqBqw(int, long)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        int i0;
        long l1;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r1, $r2;
        androidx.compose.runtime.collection.MutableVector $r3;
        boolean $z1;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle $r4;
        java.lang.Runnable $r5;
        android.view.View $r6;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = new androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        specialinvoke $r2.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: void <init>(int,long,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, l1, null);

        r1 = $r2;

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.runtime.collection.MutableVector prefetchRequests>;

        virtualinvoke $r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r1);

        $z1 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean prefetchScheduled>;

        if $z1 != 0 goto label1;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean prefetchScheduled> = 1;

        $r6 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>;

        $r5 = (java.lang.Runnable) r0;

        virtualinvoke $r6.<android.view.View: boolean post(java.lang.Runnable)>($r5);

     label1:
        $r4 = (androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle) r1;

        return $r4;
    }

    public void onRemembered()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$Prefetcher $r1;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState>;

        $r1 = (androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$Prefetcher) r0;

        virtualinvoke $r2.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState: void setPrefetcher$foundation_release(androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$Prefetcher)>($r1);

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean isActive> = 1;

        return;
    }

    public void onForgotten()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState $r1;
        java.lang.Runnable $r2;
        android.view.View $r3;
        android.view.Choreographer$FrameCallback $r4;
        android.view.Choreographer $r5;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: boolean isActive> = 0;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState>;

        virtualinvoke $r1.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState: void setPrefetcher$foundation_release(androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$Prefetcher)>(null);

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.View view>;

        $r2 = (java.lang.Runnable) r0;

        virtualinvoke $r3.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r5 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: android.view.Choreographer choreographer>;

        $r4 = (android.view.Choreographer$FrameCallback) r0;

        virtualinvoke $r5.<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer$FrameCallback)>($r4);

        return;
    }

    public void onAbandoned()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher r0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher;

        return;
    }

    public static final long access$getFrameIntervalNs$cp()
    {
        long $l0;

        $l0 = <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long frameIntervalNs>;

        return $l0;
    }

    public static final void access$setFrameIntervalNs$cp(long)
    {
        long l0;

        l0 := @parameter0: long;

        <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long frameIntervalNs> = l0;

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion $r0;

        $r0 = new androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion;

        specialinvoke $r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion Companion> = $r0;

        return;
    }

androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion
    private void <init>()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion r0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final void calculateFrameIntervalIfNeeded(android.view.View)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion r0;
        android.view.View r1;
        android.view.Display r2;
        float f0, f1, $f2, $f3;
        long $l0, $l3;
        byte $b1, $b2;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion;

        r1 := @parameter0: android.view.View;

        $l0 = staticinvoke <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: long access$getFrameIntervalNs$cp()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        r2 = virtualinvoke r1.<android.view.View: android.view.Display getDisplay()>();

        f1 = 60.0F;

        $z0 = virtualinvoke r1.<android.view.View: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        if r2 == null goto label1;

        f0 = virtualinvoke r2.<android.view.Display: float getRefreshRate()>();

        $b2 = f0 cmpl 30.0F;

        if $b2 < 0 goto label1;

        f1 = f0;

     label1:
        $f2 = (float) 1000000000;

        $f3 = $f2 / f1;

        $l3 = (long) $f3;

        staticinvoke <androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher: void access$setFrameIntervalNs$cp(long)>($l3);

     label2:
        return;
    }

    public static final void access$calculateFrameIntervalIfNeeded(androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion, android.view.View)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion $r0;
        android.view.View r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion;

        r1 := @parameter1: android.view.View;

        specialinvoke $r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion: void calculateFrameIntervalIfNeeded(android.view.View)>(r1);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$Companion: void <init>()>();

        return;
    }

androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: int index>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: long constraints>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle precomposeHandle>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean canceled>
<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean measured>
    private void <init>(int, long)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        int i0;
        long l1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: int index> = i0;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: long constraints> = l1;

        return;
    }

    public final int getIndex()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        $i0 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: int index>;

        return $i0;
    }

    public final long getConstraints-msEJaDk()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        $l0 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: long constraints>;

        return $l0;
    }

    public final androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle getPrecomposeHandle()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle precomposeHandle>;

        return $r1;
    }

    public final void setPrecomposeHandle(androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        r1 := @parameter0: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle precomposeHandle> = r1;

        return;
    }

    public final boolean getCanceled()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        $z0 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean canceled>;

        return $z0;
    }

    public final void setCanceled(boolean)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean canceled> = z0;

        return;
    }

    public final boolean getMeasured()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        $z0 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean measured>;

        return $z0;
    }

    public final void setMeasured(boolean)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean measured> = z0;

        return;
    }

    public void cancel()
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        boolean $z0;
        androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        $z0 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean canceled>;

        if $z0 != 0 goto label2;

        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: boolean canceled> = 1;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle precomposeHandle>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle: void dispose()>();

        goto label1;

     label1:
        r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: androidx.compose.ui.layout.SubcomposeLayoutState$PrecomposedSlotHandle precomposeHandle> = null;

     label2:
        return;
    }

    public void <init>(int, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest r0;
        int i0;
        long l1;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetcher$PrefetchRequest: void <init>(int,long)>(i0, l1);

        return;
    }

