androidx.media3.extractor.text.ssa.SsaSubtitle
<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cues>
<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>
    public void <init>(java.util.List, java.util.List)
    {
        androidx.media3.extractor.text.ssa.SsaSubtitle r0;
        java.util.List r1, r2;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaSubtitle;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cues> = r1;

        r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs> = r2;

        return;
    }

    public int getNextEventTimeIndex(long)
    {
        androidx.media3.extractor.text.ssa.SsaSubtitle r0;
        long l0;
        int i1, $i2, $i3;
        java.util.List $r1, $r3;
        java.lang.Long $r2;
        java.lang.Comparable r4;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaSubtitle;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r4 = (java.lang.Comparable) $r2;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchCeil(java.util.List,java.lang.Comparable,boolean,boolean)>($r1, r4, 0, 0);

        $r3 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i2 goto label1;

        $i3 = i1;

        goto label2;

     label1:
        $i3 = -1;

     label2:
        return $i3;
    }

    public int getEventTimeCount()
    {
        androidx.media3.extractor.text.ssa.SsaSubtitle r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaSubtitle;

        $r1 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public long getEventTime(int)
    {
        androidx.media3.extractor.text.ssa.SsaSubtitle r0;
        int i0, $i1;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.Long $r4;
        long $l2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaSubtitle;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $r1 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r2 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.Long) $r3;

        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        return $l2;
    }

    public java.util.List getCues(long)
    {
        androidx.media3.extractor.text.ssa.SsaSubtitle r0;
        long l0;
        int i1;
        java.util.List $r1, $r3, $r5, $r6;
        java.lang.Long $r2;
        java.lang.Object $r4;
        java.lang.Comparable r7;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaSubtitle;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cueTimesUs>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r7 = (java.lang.Comparable) $r2;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(java.util.List,java.lang.Comparable,boolean,boolean)>($r1, r7, 1, 0);

        if i1 != -1 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label1:
        $r3 = r0.<androidx.media3.extractor.text.ssa.SsaSubtitle: java.util.List cues>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (java.util.List) $r4;

        return $r5;
    }

