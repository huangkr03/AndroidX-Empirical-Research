androidx.security.identity.SoftwareIdentityCredentialStore
<androidx.security.identity.SoftwareIdentityCredentialStore: java.lang.String TAG>
<androidx.security.identity.SoftwareIdentityCredentialStore: android.content.Context mContext>
<androidx.security.identity.SoftwareIdentityCredentialStore: androidx.security.identity.SimpleIdentityCredentialStoreCapabilities mCapabilities>
    private void <init>(android.content.Context)
    {
        androidx.security.identity.SoftwareIdentityCredentialStore r0;
        android.content.Context r1;

        r0 := @this: androidx.security.identity.SoftwareIdentityCredentialStore;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.security.identity.IdentityCredentialStore: void <init>()>();

        r0.<androidx.security.identity.SoftwareIdentityCredentialStore: android.content.Context mContext> = null;

        r0.<androidx.security.identity.SoftwareIdentityCredentialStore: androidx.security.identity.SimpleIdentityCredentialStoreCapabilities mCapabilities> = null;

        r0.<androidx.security.identity.SoftwareIdentityCredentialStore: android.content.Context mContext> = r1;

        return;
    }

    public static androidx.security.identity.IdentityCredentialStore getInstance(android.content.Context)
    {
        android.content.Context r0;
        androidx.security.identity.SoftwareIdentityCredentialStore $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new androidx.security.identity.SoftwareIdentityCredentialStore;

        specialinvoke $r1.<androidx.security.identity.SoftwareIdentityCredentialStore: void <init>(android.content.Context)>(r0);

        return $r1;
    }

    public static androidx.security.identity.IdentityCredentialStore getDirectAccessInstance(android.content.Context)
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Direct-access IdentityCredential is not supported");

        throw $r1;
    }

    public static boolean isDirectAccessSupported(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        return 0;
    }

    public java.lang.String[] getSupportedDocTypes()
    {
        androidx.security.identity.SoftwareIdentityCredentialStore r0;
        java.util.Set r1;
        java.lang.String[] r2;
        java.util.Iterator r3;
        java.lang.String r4;
        androidx.security.identity.IdentityCredentialStoreCapabilities $r5;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.security.identity.SoftwareIdentityCredentialStore;

        $r5 = virtualinvoke r0.<androidx.security.identity.SoftwareIdentityCredentialStore: androidx.security.identity.IdentityCredentialStoreCapabilities getCapabilities()>();

        r1 = virtualinvoke $r5.<androidx.security.identity.IdentityCredentialStoreCapabilities: java.util.Set getSupportedDocTypes()>();

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        i2 = 0;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $i1 = i2;

        i2 = i2 + 1;

        r2[$i1] = r4;

        goto label1;

     label2:
        return r2;
    }

    public androidx.security.identity.IdentityCredentialStoreCapabilities getCapabilities()
    {
        androidx.security.identity.SoftwareIdentityCredentialStore r0;
        java.util.LinkedHashSet r1, $r4;
        androidx.security.identity.SimpleIdentityCredentialStoreCapabilities $r2, $r3, $r5;

        r0 := @this: androidx.security.identity.SoftwareIdentityCredentialStore;

        $r2 = r0.<androidx.security.identity.SoftwareIdentityCredentialStore: androidx.security.identity.SimpleIdentityCredentialStoreCapabilities mCapabilities>;

        if $r2 != null goto label1;

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <androidx.security.identity.SimpleIdentityCredentialStoreCapabilities: androidx.security.identity.SimpleIdentityCredentialStoreCapabilities getFeatureVersion202101(boolean,boolean,java.util.Set)>(0, 0, r1);

        r0.<androidx.security.identity.SoftwareIdentityCredentialStore: androidx.security.identity.SimpleIdentityCredentialStoreCapabilities mCapabilities> = $r5;

     label1:
        $r3 = r0.<androidx.security.identity.SoftwareIdentityCredentialStore: androidx.security.identity.SimpleIdentityCredentialStoreCapabilities mCapabilities>;

        return $r3;
    }

    public androidx.security.identity.WritableIdentityCredential createCredential(java.lang.String, java.lang.String) throws androidx.security.identity.AlreadyPersonalizedException, androidx.security.identity.DocTypeNotSupportedException
    {
        androidx.security.identity.SoftwareIdentityCredentialStore r0;
        java.lang.String r1, r2;
        androidx.security.identity.SoftwareWritableIdentityCredential $r3;
        android.content.Context $r4;

        r0 := @this: androidx.security.identity.SoftwareIdentityCredentialStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new androidx.security.identity.SoftwareWritableIdentityCredential;

        $r4 = r0.<androidx.security.identity.SoftwareIdentityCredentialStore: android.content.Context mContext>;

        specialinvoke $r3.<androidx.security.identity.SoftwareWritableIdentityCredential: void <init>(android.content.Context,java.lang.String,java.lang.String)>($r4, r1, r2);

        return $r3;
    }

    public androidx.security.identity.IdentityCredential getCredentialByName(java.lang.String, int) throws androidx.security.identity.CipherSuiteNotSupportedException
    {
        androidx.security.identity.SoftwareIdentityCredentialStore r0;
        java.lang.String r1;
        int i0;
        androidx.security.identity.SoftwareIdentityCredential r2, $r3;
        android.content.Context $r4;
        boolean $z0;

        r0 := @this: androidx.security.identity.SoftwareIdentityCredentialStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new androidx.security.identity.SoftwareIdentityCredential;

        $r4 = r0.<androidx.security.identity.SoftwareIdentityCredentialStore: android.content.Context mContext>;

        specialinvoke $r3.<androidx.security.identity.SoftwareIdentityCredential: void <init>(android.content.Context,java.lang.String,int)>($r4, r1, i0);

        r2 = $r3;

        $z0 = virtualinvoke r2.<androidx.security.identity.SoftwareIdentityCredential: boolean loadData()>();

        if $z0 == 0 goto label1;

        return r2;

     label1:
        return null;
    }

    public byte[] deleteCredentialByName(java.lang.String)
    {
        androidx.security.identity.SoftwareIdentityCredentialStore r0;
        java.lang.String r1;
        android.content.Context $r2;
        byte[] $r3;

        r0 := @this: androidx.security.identity.SoftwareIdentityCredentialStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.security.identity.SoftwareIdentityCredentialStore: android.content.Context mContext>;

        $r3 = staticinvoke <androidx.security.identity.SoftwareIdentityCredential: byte[] delete(android.content.Context,java.lang.String)>($r2, r1);

        return $r3;
    }

