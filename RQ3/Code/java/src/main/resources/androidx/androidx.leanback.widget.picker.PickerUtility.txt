androidx.leanback.widget.picker.PickerUtility
<androidx.leanback.widget.picker.PickerUtility: boolean SUPPORTS_BEST_DATE_TIME_PATTERN>
    public static androidx.leanback.widget.picker.PickerUtility$DateConstant getDateConstantInstance(java.util.Locale, android.content.res.Resources)
    {
        java.util.Locale r0;
        android.content.res.Resources r1;
        androidx.leanback.widget.picker.PickerUtility$DateConstant $r2;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: android.content.res.Resources;

        $r2 = new androidx.leanback.widget.picker.PickerUtility$DateConstant;

        specialinvoke $r2.<androidx.leanback.widget.picker.PickerUtility$DateConstant: void <init>(java.util.Locale,android.content.res.Resources)>(r0, r1);

        return $r2;
    }

    public static androidx.leanback.widget.picker.PickerUtility$TimeConstant getTimeConstantInstance(java.util.Locale, android.content.res.Resources)
    {
        java.util.Locale r0;
        android.content.res.Resources r1;
        androidx.leanback.widget.picker.PickerUtility$TimeConstant $r2;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: android.content.res.Resources;

        $r2 = new androidx.leanback.widget.picker.PickerUtility$TimeConstant;

        specialinvoke $r2.<androidx.leanback.widget.picker.PickerUtility$TimeConstant: void <init>(java.util.Locale,android.content.res.Resources)>(r0, r1);

        return $r2;
    }

    public static java.lang.String[] createStringIntArrays(int, int, java.lang.String)
    {
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r0, $r2, $r5;
        java.lang.String[] r1;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $i2 = i1 - i0;

        $i3 = $i2 + 1;

        r1 = newarray (java.lang.String)[$i3];

        i6 = i0;

     label1:
        if i6 > i1 goto label4;

        if r0 == null goto label2;

        $i5 = i6 - i0;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r3);

        r1[$i5] = $r5;

        goto label3;

     label2:
        $i4 = i6 - i0;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i6);

        r1[$i4] = $r2;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        return r1;
    }

    public static java.util.Calendar getCalendarForLocale(java.util.Calendar, java.util.Locale)
    {
        java.util.Calendar r0, r2, $r3;
        java.util.Locale r1;
        long l0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Locale;

        if r0 != null goto label1;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r1);

        return $r3;

     label1:
        l0 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r1);

        virtualinvoke r2.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        return r2;
    }

    private void <init>()
    {
        androidx.leanback.widget.picker.PickerUtility r0;

        r0 := @this: androidx.leanback.widget.picker.PickerUtility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <androidx.leanback.widget.picker.PickerUtility: boolean SUPPORTS_BEST_DATE_TIME_PATTERN> = $z0;

        return;
    }

androidx.leanback.widget.picker.PickerUtility$DateConstant
<androidx.leanback.widget.picker.PickerUtility$DateConstant: java.util.Locale locale>
<androidx.leanback.widget.picker.PickerUtility$DateConstant: java.lang.String[] months>
<androidx.leanback.widget.picker.PickerUtility$DateConstant: java.lang.String[] days>
    void <init>(java.util.Locale, android.content.res.Resources)
    {
        androidx.leanback.widget.picker.PickerUtility$DateConstant r0;
        java.util.Locale r1;
        android.content.res.Resources r2;
        java.text.DateFormatSymbols r3;
        java.util.Calendar r4;
        java.lang.String[] $r5, $r6;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.picker.PickerUtility$DateConstant;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.leanback.widget.picker.PickerUtility$DateConstant: java.util.Locale locale> = r1;

        r3 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(r1);

        $r5 = virtualinvoke r3.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        r0.<androidx.leanback.widget.picker.PickerUtility$DateConstant: java.lang.String[] months> = $r5;

        r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r1);

        $i0 = virtualinvoke r4.<java.util.Calendar: int getMinimum(int)>(5);

        $i1 = virtualinvoke r4.<java.util.Calendar: int getMaximum(int)>(5);

        $r6 = staticinvoke <androidx.leanback.widget.picker.PickerUtility: java.lang.String[] createStringIntArrays(int,int,java.lang.String)>($i0, $i1, "%02d");

        r0.<androidx.leanback.widget.picker.PickerUtility$DateConstant: java.lang.String[] days> = $r6;

        return;
    }

androidx.leanback.widget.picker.PickerUtility$TimeConstant
<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.util.Locale locale>
<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] hours12>
<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] hours24>
<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] minutes>
<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] ampm>
    void <init>(java.util.Locale, android.content.res.Resources)
    {
        androidx.leanback.widget.picker.PickerUtility$TimeConstant r0;
        java.util.Locale r1;
        android.content.res.Resources r2;
        java.text.DateFormatSymbols r3;
        java.lang.String[] $r4, $r5, $r6, $r7;

        r0 := @this: androidx.leanback.widget.picker.PickerUtility$TimeConstant;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.util.Locale locale> = r1;

        r3 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(r1);

        $r4 = staticinvoke <androidx.leanback.widget.picker.PickerUtility: java.lang.String[] createStringIntArrays(int,int,java.lang.String)>(1, 12, "%02d");

        r0.<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] hours12> = $r4;

        $r5 = staticinvoke <androidx.leanback.widget.picker.PickerUtility: java.lang.String[] createStringIntArrays(int,int,java.lang.String)>(0, 23, "%02d");

        r0.<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] hours24> = $r5;

        $r6 = staticinvoke <androidx.leanback.widget.picker.PickerUtility: java.lang.String[] createStringIntArrays(int,int,java.lang.String)>(0, 59, "%02d");

        r0.<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] minutes> = $r6;

        $r7 = virtualinvoke r3.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        r0.<androidx.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] ampm> = $r7;

        return;
    }

