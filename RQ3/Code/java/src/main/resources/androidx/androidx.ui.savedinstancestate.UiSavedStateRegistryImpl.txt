androidx.ui.savedinstancestate.UiSavedStateRegistryImpl
<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved>
<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>
<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>
    public void <init>(java.util.Map, kotlin.jvm.functions.Function1)
    {
        androidx.ui.savedinstancestate.UiSavedStateRegistryImpl r0, $r5, r9, r12;
        java.util.Map r1, r6, $r7, r8, r10, $r11, r13;
        kotlin.jvm.functions.Function1 r2;
        java.util.LinkedHashMap $r3, $r4;
        boolean z0, z1;

        r0 := @this: androidx.ui.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "canBeSaved");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved> = r2;

        $r5 = r0;

        r6 = r1;

        if r6 != null goto label1;

        $r7 = (java.util.Map) null;

        goto label2;

     label1:
        $r7 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>(r6);

     label2:
        r8 = $r7;

        if r8 != null goto label3;

        r9 = r0;

        z0 = 0;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r10 = (java.util.Map) $r4;

        $r5 = r9;

        $r11 = r10;

        goto label4;

     label3:
        $r11 = r8;

     label4:
        $r5.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored> = $r11;

        r12 = r0;

        z1 = 0;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r13 = (java.util.Map) $r3;

        r12.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders> = r13;

        return;
    }

    public boolean canBeSaved(java.lang.Object)
    {
        androidx.ui.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.ui.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved>;

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.lang.Object consumeRestored(java.lang.String)
    {
        androidx.ui.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.ui.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public void registerProvider(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.ui.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.String r1, $r9, $r12, r15, r18;
        kotlin.jvm.functions.Function0 r2;
        boolean $z0, $z1, z2, $z3, z4, z5, z6, z8, $z10, z11, z12, z13, z15;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8, $r11;
        java.lang.Throwable $r10, $r13;
        java.lang.CharSequence r14;
        java.util.Map r16, r17, r19;

        r0 := @this: androidx.ui.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueProvider");

        r14 = (java.lang.CharSequence) r1;

        z2 = 0;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>(r14);

        if $z0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z4 = $z3;

        z5 = 0;

        z6 = 0;

        if z4 != 0 goto label3;

        r15 = "Registered key is empty or blank";

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label3:
        r16 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        z8 = 0;

        r17 = r16;

        $z1 = interfaceinvoke r17.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $z10 = 1;

        goto label5;

     label4:
        $z10 = 0;

     label5:
        z11 = $z10;

        z12 = 0;

        z13 = 0;

        if z11 != 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was already registered. Please call unregister before registering again");

        r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        $r10 = (java.lang.Throwable) $r8;

        throw $r10;

     label6:
        r19 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        z15 = 0;

        interfaceinvoke r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void unregisterProvider(java.lang.String)
    {
        androidx.ui.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.String r1, $r10, r14;
        java.util.Map $r2, r12, r13;
        java.lang.Object $r3;
        kotlin.jvm.functions.Function0 $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.Throwable $r11;
        boolean z0, z2, z3, z4;

        r0 := @this: androidx.ui.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        r12 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        z0 = 0;

        r13 = r12;

        z2 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wasn\'t registered, but unregister requested");

        r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label1:
        $r2 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        return;
    }

    public java.util.Map performSave()
    {
        androidx.ui.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.util.Map r1, r2, $r7, r18;
        boolean z1, z3, $z4, z5, z6, z7, z8, z9, z10;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        java.lang.Object r6, $r9, $r10, $r12;
        java.util.Set $r8;
        kotlin.jvm.functions.Function0 $r11;
        java.lang.IllegalStateException $r14;
        java.lang.String $r15, r17, r19;
        java.lang.Throwable $r16;

        r0 := @this: androidx.ui.savedinstancestate.UiSavedStateRegistryImpl;

        $r7 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>;

        r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>($r7);

        r2 = r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        z1 = 0;

        $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        r5 = r4;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        r6 = interfaceinvoke $r11.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        if r6 == null goto label3;

        z5 = virtualinvoke r0.<androidx.ui.savedinstancestate.UiSavedStateRegistryImpl: boolean canBeSaved(java.lang.Object)>(r6);

        z6 = 0;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        if z5 != 0 goto label2;

        z3 = 0;

        r17 = "Check failed.";

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label2:
        r18 = r1;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r19 = (java.lang.String) $r12;

        z10 = 0;

        interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r6);

     label3:
        goto label1;

     label4:
        return r1;
    }

