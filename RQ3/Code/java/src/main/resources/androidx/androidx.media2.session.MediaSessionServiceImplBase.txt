androidx.media2.session.MediaSessionServiceImplBase
<androidx.media2.session.MediaSessionServiceImplBase: java.lang.String TAG>
<androidx.media2.session.MediaSessionServiceImplBase: boolean DEBUG>
<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>
<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub>
<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService mInstance>
<androidx.media2.session.MediaSessionServiceImplBase: java.util.Map mSessions>
<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaNotificationHandler mNotificationHandler>
    void <init>()
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        java.lang.Object $r1;
        androidx.collection.ArrayMap $r2;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock> = $r1;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.media2.session.MediaSessionServiceImplBase: java.util.Map mSessions> = $r2;

        return;
    }

    public void onCreate(androidx.media2.session.MediaSessionService)
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        androidx.media2.session.MediaSessionService r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub $r5;
        androidx.media2.session.MediaNotificationHandler $r6;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSessionService;

        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService mInstance> = r1;

        $r5 = new androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub;

        specialinvoke $r5.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: void <init>(androidx.media2.session.MediaSessionServiceImplBase)>(r0);

        r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub> = $r5;

        $r6 = new androidx.media2.session.MediaNotificationHandler;

        specialinvoke $r6.<androidx.media2.session.MediaNotificationHandler: void <init>(androidx.media2.session.MediaSessionService)>(r1);

        r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaNotificationHandler mNotificationHandler> = $r6;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        android.content.Intent r1;
        androidx.media2.session.MediaSessionService r2;
        java.lang.String r3;
        androidx.media2.session.MediaSession$ControllerInfo r4;
        androidx.media2.session.MediaSession r5;
        int $i0;
        boolean $z0, $z1;
        android.os.IBinder $r6, $r7;
        byte b3;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService getInstance()>();

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MSS2ImplBase", "Service hasn\'t created before onBind()");

        return null;

     label1:
        r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        b3 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2044151856: goto label2;
            case 1665850838: goto label3;
            default: goto label4;
        };

     label2:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media2.session.MediaSessionService");

        if $z1 == 0 goto label4;

        b3 = 0;

        goto label4;

     label3:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.media.browse.MediaBrowserService");

        if $z0 == 0 goto label4;

        b3 = 1;

     label4:
        lookupswitch(b3)
        {
            case 0: goto label5;
            case 1: goto label6;
            default: goto label8;
        };

     label5:
        $r7 = virtualinvoke r0.<androidx.media2.session.MediaSessionServiceImplBase: android.os.IBinder getServiceBinder()>();

        return $r7;

     label6:
        r4 = staticinvoke <androidx.media2.session.MediaSession$ControllerInfo: androidx.media2.session.MediaSession$ControllerInfo createLegacyControllerInfo()>();

        r5 = virtualinvoke r2.<androidx.media2.session.MediaSessionService: androidx.media2.session.MediaSession onGetSession(androidx.media2.session.MediaSession$ControllerInfo)>(r4);

        if r5 != null goto label7;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Rejecting incoming connection request from legacy media browsers.");

        return null;

     label7:
        virtualinvoke r0.<androidx.media2.session.MediaSessionServiceImplBase: void addSession(androidx.media2.session.MediaSession)>(r5);

        $r6 = virtualinvoke r5.<androidx.media2.session.MediaSession: android.os.IBinder getLegacyBrowerServiceBinder()>();

        return $r6;

     label8:
        return null;
    }

    public void onDestroy()
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub $r4, $r5;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        $r3 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService mInstance> = null;

        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub>;

        virtualinvoke $r5.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: void close()>();

        r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub> = null;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void addSession(androidx.media2.session.MediaSession)
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        androidx.media2.session.MediaSession r1, r2;
        java.lang.Object $r3, $r6, $r10, r15, r17;
        java.util.Map $r4, $r7;
        java.lang.String $r5, $r8;
        androidx.media2.common.SessionPlayer $r11;
        int $i0;
        androidx.media2.session.MediaSession$SessionCallback $r12;
        java.lang.IllegalArgumentException $r13;
        java.lang.Throwable $r14, r16;
        androidx.media2.session.MediaNotificationHandler r18;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession;

        $r3 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r15 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.util.Map mSessions>;

        $r5 = virtualinvoke r1.<androidx.media2.session.MediaSession: java.lang.String getId()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (androidx.media2.session.MediaSession) $r6;

        if r2 == null goto label2;

        if r2 == r1 goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session ID should be unique");

        throw $r13;

     label2:
        $r7 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.util.Map mSessions>;

        $r8 = virtualinvoke r1.<androidx.media2.session.MediaSession: java.lang.String getId()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r1);

        exitmonitor r15;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r16 = $r14;

        exitmonitor r15;

     label5:
        throw r16;

     label6:
        if r2 != null goto label8;

        $r10 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r17 = $r10;

        entermonitor $r10;

        r18 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaNotificationHandler mNotificationHandler>;

        exitmonitor r17;

        goto label7;

     label7:
        $r11 = virtualinvoke r1.<androidx.media2.session.MediaSession: androidx.media2.common.SessionPlayer getPlayer()>();

        $i0 = virtualinvoke $r11.<androidx.media2.common.SessionPlayer: int getPlayerState()>();

        virtualinvoke r18.<androidx.media2.session.MediaNotificationHandler: void onPlayerStateChanged(androidx.media2.session.MediaSession,int)>(r1, $i0);

        $r12 = virtualinvoke r1.<androidx.media2.session.MediaSession: androidx.media2.session.MediaSession$SessionCallback getCallback()>();

        virtualinvoke $r12.<androidx.media2.session.MediaSession$SessionCallback: void setForegroundServiceEventCallback(androidx.media2.session.MediaSession$SessionCallback$ForegroundServiceEventCallback)>(r18);

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void removeSession(androidx.media2.session.MediaSession)
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        androidx.media2.session.MediaSession r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        java.util.Map $r5;
        java.lang.String $r6;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession;

        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.util.Map mSessions>;

        $r6 = virtualinvoke r1.<androidx.media2.session.MediaSession: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        android.content.Intent r1;
        int i0, i1, $i2;
        java.lang.String r2, $r4;
        androidx.media2.session.MediaSessionService r3;
        boolean $z0;
        android.net.Uri $r5;
        android.os.Parcelable $r6;
        android.support.v4.media.session.MediaSessionCompat $r7;
        android.support.v4.media.session.MediaControllerCompat $r8;
        byte b5;
        androidx.media2.session.MediaSession r9;
        androidx.media2.session.MediaSession$ControllerInfo r10;
        android.view.KeyEvent r11;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        if $r4 != null goto label2;

     label1:
        return 1;

     label2:
        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        b5 = -1;

        $i2 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case 1997055314: goto label3;
            default: goto label4;
        };

     label3:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.MEDIA_BUTTON");

        if $z0 == 0 goto label4;

        b5 = 0;

     label4:
        lookupswitch(b5)
        {
            case 0: goto label5;
            default: goto label9;
        };

     label5:
        r3 = virtualinvoke r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService getInstance()>();

        if r3 != null goto label6;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("MSS2ImplBase", "Service hasn\'t created");

     label6:
        $r5 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        r9 = staticinvoke <androidx.media2.session.MediaSession: androidx.media2.session.MediaSession getSession(android.net.Uri)>($r5);

        if r9 != null goto label7;

        r10 = staticinvoke <androidx.media2.session.MediaSession$ControllerInfo: androidx.media2.session.MediaSession$ControllerInfo createLegacyControllerInfo()>();

        r9 = virtualinvoke r3.<androidx.media2.session.MediaSessionService: androidx.media2.session.MediaSession onGetSession(androidx.media2.session.MediaSession$ControllerInfo)>(r10);

     label7:
        if r9 != null goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Rejecting wake-up of the service from media key events.");

        goto label9;

     label8:
        $r6 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.KEY_EVENT");

        r11 = (android.view.KeyEvent) $r6;

        if r11 == null goto label9;

        $r7 = virtualinvoke r9.<androidx.media2.session.MediaSession: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r8 = virtualinvoke $r7.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat getController()>();

        virtualinvoke $r8.<android.support.v4.media.session.MediaControllerCompat: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>(r11);

        goto label9;

     label9:
        return 1;
    }

    public androidx.media2.session.MediaSessionService$MediaNotification onUpdateNotification(androidx.media2.session.MediaSession)
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        androidx.media2.session.MediaSession r1;
        androidx.media2.session.MediaNotificationHandler r2;
        java.lang.Object r3, $r4;
        androidx.media2.session.MediaSessionService$MediaNotification $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession;

        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r2 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaNotificationHandler mNotificationHandler>;

        exitmonitor r3;

        goto label1;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Service hasn\'t created");

        throw $r6;

     label2:
        $r5 = virtualinvoke r2.<androidx.media2.session.MediaNotificationHandler: androidx.media2.session.MediaSessionService$MediaNotification onUpdateNotification(androidx.media2.session.MediaSession)>(r1);

        return $r5;
    }

    public java.util.List getSessions()
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        java.util.ArrayList r1, $r4;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        java.util.Map $r6;
        java.util.Collection $r7;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.util.Map mSessions>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    androidx.media2.session.MediaSessionService getInstance()
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        java.lang.Object r1, $r2;
        androidx.media2.session.MediaSessionService $r3;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        $r2 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService mInstance>;

        exitmonitor r1;

        return $r3;
    }

    android.os.IBinder getServiceBinder()
    {
        androidx.media2.session.MediaSessionServiceImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub $r4, $r5;
        android.os.IBinder $r7;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase;

        $r3 = r0.<androidx.media2.session.MediaSessionServiceImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub mStub>;

        $r7 = virtualinvoke $r5.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        exitmonitor r1;

     label4:
        return $r7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media.MediaSessionManager$RemoteUserInfo val$remoteUserInfo>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.ConnectionRequest val$request>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: boolean val$isTrusted>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: android.os.Bundle val$connectionHints>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: java.lang.String val$packageName>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: int val$pid>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: int val$uid>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub this$0>
    void <init>(androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub, androidx.media.MediaSessionManager$RemoteUserInfo, androidx.media2.session.ConnectionRequest, boolean, android.os.Bundle, androidx.media2.session.IMediaController, java.lang.String, int, int)
    {
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1 r0;
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub r1;
        androidx.media.MediaSessionManager$RemoteUserInfo r2;
        androidx.media2.session.ConnectionRequest r3;
        boolean z0;
        android.os.Bundle r4;
        androidx.media2.session.IMediaController r5;
        java.lang.String r6;
        int i0, i1;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1;

        r1 := @parameter0: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub;

        r2 := @parameter1: androidx.media.MediaSessionManager$RemoteUserInfo;

        r3 := @parameter2: androidx.media2.session.ConnectionRequest;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.os.Bundle;

        r5 := @parameter5: androidx.media2.session.IMediaController;

        r6 := @parameter6: java.lang.String;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub this$0> = r1;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media.MediaSessionManager$RemoteUserInfo val$remoteUserInfo> = r2;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.ConnectionRequest val$request> = r3;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: boolean val$isTrusted> = z0;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: android.os.Bundle val$connectionHints> = r4;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller> = r5;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: java.lang.String val$packageName> = r6;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: int val$pid> = i0;

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: int val$uid> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1 r0;
        androidx.media2.session.MediaSession r1;
        java.lang.Throwable r2, r3, $r27, $r28, $r29, $r30, $r31, $r32, $r33, r36, r38, r40, r41, r42;
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub $r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        androidx.media2.session.MediaSession$ControllerInfo $r7, r39;
        androidx.media2.session.ConnectionRequest $r8, $r15;
        androidx.media.MediaSessionManager$RemoteUserInfo $r9;
        int $i0, $i2, $i3, $i4;
        android.os.Bundle $r10, $r17;
        boolean $z0, z1;
        java.lang.StringBuilder $r11, $r12, $r13, $r20, $r21, $r22;
        java.lang.String $r14, $r18, $r23;
        androidx.media2.session.IMediaController $r16, $r19, $r24, $r25, $r26, $r34;
        androidx.media2.session.MediaSessionServiceImplBase r35;
        androidx.media2.session.MediaSessionService r37;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1;

        z1 = 1;

     label01:
        $r4 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub this$0>;

        $r5 = $r4.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: java.lang.ref.WeakReference mServiceImpl>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r35 = (androidx.media2.session.MediaSessionServiceImplBase) $r6;

        if r35 != null goto label07;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "ServiceImpl isn\'t available");

     label02:
        if z1 == 0 goto label06;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Notifying the controller of its disconnection");

     label03:
        $r26 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>;

        interfaceinvoke $r26.<androidx.media2.session.IMediaController: void onDisconnected(int)>(0);

     label04:
        goto label06;

     label05:
        $r28 := @caughtexception;

        r36 = $r28;

     label06:
        return;

     label07:
        r37 = virtualinvoke r35.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService getInstance()>();

        if r37 != null goto label13;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Service isn\'t available");

     label08:
        if z1 == 0 goto label12;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Notifying the controller of its disconnection");

     label09:
        $r25 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>;

        interfaceinvoke $r25.<androidx.media2.session.IMediaController: void onDisconnected(int)>(0);

     label10:
        goto label12;

     label11:
        $r31 := @caughtexception;

        r38 = $r31;

     label12:
        return;

     label13:
        $r7 = new androidx.media2.session.MediaSession$ControllerInfo;

        $r9 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media.MediaSessionManager$RemoteUserInfo val$remoteUserInfo>;

        $r8 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.ConnectionRequest val$request>;

        $i0 = virtualinvoke $r8.<androidx.media2.session.ConnectionRequest: int getVersion()>();

        $z0 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: boolean val$isTrusted>;

        $r10 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: android.os.Bundle val$connectionHints>;

        specialinvoke $r7.<androidx.media2.session.MediaSession$ControllerInfo: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo,int,boolean,androidx.media2.session.MediaSession$ControllerCb,android.os.Bundle)>($r9, $i0, $z0, null, $r10);

        r39 = $r7;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling incoming connection request from the controller=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", $r14);

     label14:
        r1 = virtualinvoke r37.<androidx.media2.session.MediaSessionService: androidx.media2.session.MediaSession onGetSession(androidx.media2.session.MediaSession$ControllerInfo)>(r39);

        if r1 != null goto label20;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting incoming connection request from the controller=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MSS2ImplBase", $r23);

     label15:
        if z1 == 0 goto label19;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Notifying the controller of its disconnection");

     label16:
        $r24 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>;

        interfaceinvoke $r24.<androidx.media2.session.IMediaController: void onDisconnected(int)>(0);

     label17:
        goto label19;

     label18:
        $r32 := @caughtexception;

        r40 = $r32;

     label19:
        return;

     label20:
        virtualinvoke r37.<androidx.media2.session.MediaSessionService: void addSession(androidx.media2.session.MediaSession)>(r1);

        z1 = 0;

        $r16 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>;

        $r15 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.ConnectionRequest val$request>;

        $i2 = virtualinvoke $r15.<androidx.media2.session.ConnectionRequest: int getVersion()>();

        $r18 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: java.lang.String val$packageName>;

        $i4 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: int val$pid>;

        $i3 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: int val$uid>;

        $r17 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: android.os.Bundle val$connectionHints>;

        virtualinvoke r1.<androidx.media2.session.MediaSession: void handleControllerConnectionFromService(androidx.media2.session.IMediaController,int,java.lang.String,int,int,android.os.Bundle)>($r16, $i2, $r18, $i4, $i3, $r17);

     label21:
        goto label23;

     label22:
        $r30 := @caughtexception;

        r41 = $r30;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MSS2ImplBase", "Failed to add a session to session service", r41);

     label23:
        if z1 == 0 goto label33;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Notifying the controller of its disconnection");

     label24:
        $r19 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>;

        interfaceinvoke $r19.<androidx.media2.session.IMediaController: void onDisconnected(int)>(0);

     label25:
        goto label33;

     label26:
        $r29 := @caughtexception;

        r42 = $r29;

        goto label33;

     label27:
        $r33 := @caughtexception;

        r2 = $r33;

     label28:
        if z1 == 0 goto label32;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "Notifying the controller of its disconnection");

     label29:
        $r34 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: androidx.media2.session.IMediaController val$caller>;

        interfaceinvoke $r34.<androidx.media2.session.IMediaController: void onDisconnected(int)>(0);

     label30:
        goto label32;

     label31:
        $r27 := @caughtexception;

        r3 = $r27;

     label32:
        throw r2;

     label33:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch android.os.RemoteException from label16 to label17 with label18;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
        catch android.os.RemoteException from label24 to label25 with label26;
        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label13 to label15 with label27;
        catch java.lang.Throwable from label20 to label23 with label27;
        catch android.os.RemoteException from label29 to label30 with label31;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: java.lang.ref.WeakReference mServiceImpl>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: android.os.Handler mHandler>
<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: androidx.media.MediaSessionManager mMediaSessionManager>
    void <init>(androidx.media2.session.MediaSessionServiceImplBase)
    {
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub r0;
        androidx.media2.session.MediaSessionServiceImplBase r1;
        androidx.media2.session.MediaSessionService $r4, $r6;
        android.os.Looper $r5;
        androidx.media.MediaSessionManager $r7;
        java.lang.ref.WeakReference r8;
        android.os.Handler r9;
        android.content.Context r10;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub;

        r1 := @parameter0: androidx.media2.session.MediaSessionServiceImplBase;

        specialinvoke r0.<androidx.media2.session.IMediaSessionService$Stub: void <init>()>();

        r8 = new java.lang.ref.WeakReference;

        specialinvoke r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: java.lang.ref.WeakReference mServiceImpl> = r8;

        r9 = new android.os.Handler;

        $r4 = virtualinvoke r1.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService getInstance()>();

        $r5 = virtualinvoke $r4.<androidx.media2.session.MediaSessionService: android.os.Looper getMainLooper()>();

        specialinvoke r9.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: android.os.Handler mHandler> = r9;

        $r6 = virtualinvoke r1.<androidx.media2.session.MediaSessionServiceImplBase: androidx.media2.session.MediaSessionService getInstance()>();

        r10 = (android.content.Context) $r6;

        $r7 = staticinvoke <androidx.media.MediaSessionManager: androidx.media.MediaSessionManager getSessionManager(android.content.Context)>(r10);

        r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: androidx.media.MediaSessionManager mMediaSessionManager> = $r7;

        return;
    }

    public void connect(androidx.media2.session.IMediaController, androidx.versionedparcelable.ParcelImpl)
    {
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub r0;
        androidx.media2.session.IMediaController r1;
        androidx.versionedparcelable.ParcelImpl r2;
        androidx.media2.session.MediaSessionServiceImplBase r3;
        int i0, i1, i3, $i5;
        long l2;
        androidx.media2.session.ConnectionRequest r4;
        java.lang.String r5, $r17;
        android.os.Bundle r6, $r18;
        androidx.media.MediaSessionManager$RemoteUserInfo r7, $r12;
        boolean z0;
        java.lang.Throwable r8, $r16;
        java.lang.ref.WeakReference $r9;
        java.lang.Object $r10;
        androidx.versionedparcelable.VersionedParcelable $r11;
        androidx.media.MediaSessionManager $r13;
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1 $r14;
        android.os.Handler $r15;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub;

        r1 := @parameter0: androidx.media2.session.IMediaController;

        r2 := @parameter1: androidx.versionedparcelable.ParcelImpl;

        $r9 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: java.lang.ref.WeakReference mServiceImpl>;

        $r10 = virtualinvoke $r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media2.session.MediaSessionServiceImplBase) $r10;

        if r3 != null goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSS2ImplBase", "ServiceImpl isn\'t available");

        return;

     label01:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r11 = staticinvoke <androidx.media2.common.MediaParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(androidx.versionedparcelable.ParcelImpl)>(r2);

        r4 = (androidx.media2.session.ConnectionRequest) $r11;

        if i0 == 0 goto label02;

        $i5 = i0;

        goto label03;

     label02:
        $i5 = virtualinvoke r4.<androidx.media2.session.ConnectionRequest: int getPid()>();

     label03:
        i3 = $i5;

        if r2 != null goto label04;

        $r17 = null;

        goto label05;

     label04:
        $r17 = virtualinvoke r4.<androidx.media2.session.ConnectionRequest: java.lang.String getPackageName()>();

     label05:
        r5 = $r17;

        if r2 != null goto label06;

        $r18 = null;

        goto label07;

     label06:
        $r18 = virtualinvoke r4.<androidx.media2.session.ConnectionRequest: android.os.Bundle getConnectionHints()>();

     label07:
        r6 = $r18;

        $r12 = new androidx.media.MediaSessionManager$RemoteUserInfo;

        specialinvoke $r12.<androidx.media.MediaSessionManager$RemoteUserInfo: void <init>(java.lang.String,int,int)>(r5, i3, i1);

        r7 = $r12;

        $r13 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: androidx.media.MediaSessionManager mMediaSessionManager>;

        z0 = virtualinvoke $r13.<androidx.media.MediaSessionManager: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo)>(r7);

     label08:
        $r15 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: android.os.Handler mHandler>;

        $r14 = new androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1;

        specialinvoke $r14.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub$1: void <init>(androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub,androidx.media.MediaSessionManager$RemoteUserInfo,androidx.media2.session.ConnectionRequest,boolean,android.os.Bundle,androidx.media2.session.IMediaController,java.lang.String,int,int)>(r0, r7, r4, z0, r6, r1, r5, i3, i1);

        virtualinvoke $r15.<android.os.Handler: boolean post(java.lang.Runnable)>($r14);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label12;

     label10:
        $r16 := @caughtexception;

        r8 = $r16;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r8;

     label12:
        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void close()
    {
        androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub r0;
        java.lang.ref.WeakReference $r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub;

        $r1 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: java.lang.ref.WeakReference mServiceImpl>;

        virtualinvoke $r1.<java.lang.ref.WeakReference: void clear()>();

        $r2 = r0.<androidx.media2.session.MediaSessionServiceImplBase$MediaSessionServiceStub: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

