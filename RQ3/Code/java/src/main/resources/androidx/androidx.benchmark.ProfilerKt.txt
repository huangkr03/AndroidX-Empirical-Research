androidx.benchmark.ProfilerKt
    public static final androidx.benchmark.Profiler$ResultFile startRuntimeMethodTracing(java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2, $r5, $r9;
        boolean z0;
        int i0, $i2, $i3;
        androidx.benchmark.Outputs $r3;
        java.io.File $r4;
        androidx.benchmark.InstrumentationResults $r6;
        androidx.benchmark.Profiler$ResultFile $r7;
        androidx.benchmark.Arguments $r8;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "traceFileName");

        $r3 = <androidx.benchmark.Outputs: androidx.benchmark.Outputs INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.benchmark.Outputs: java.io.File testOutputFile(java.lang.String)>(r0);

        r1 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Profiling output file: ", r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Benchmark", $r5);

        $r6 = <androidx.benchmark.InstrumentationResults: androidx.benchmark.InstrumentationResults INSTANCE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "path");

        staticinvoke <androidx.benchmark.InstrumentationResults: void reportAdditionalFileToCopy$default(androidx.benchmark.InstrumentationResults,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r6, "profiling_trace", r1, 0, 4, null);

        i0 = 16777216;

        if z0 == 0 goto label1;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label1;

        $r8 = <androidx.benchmark.Arguments: androidx.benchmark.Arguments INSTANCE>;

        $i3 = virtualinvoke $r8.<androidx.benchmark.Arguments: int getProfilerSampleFrequency$benchmark_common_release()>();

        staticinvoke <androidx.benchmark.Api21Kt: void startMethodTracingSampling(java.lang.String,int,int)>(r1, i0, $i3);

        goto label2;

     label1:
        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int,int)>(r1, i0, 0);

     label2:
        if z0 == 0 goto label3;

        $r9 = "Stack Sampling (legacy) Trace";

        goto label4;

     label3:
        $r9 = "Method Trace";

     label4:
        r2 = $r9;

        $r7 = new androidx.benchmark.Profiler$ResultFile;

        specialinvoke $r7.<androidx.benchmark.Profiler$ResultFile: void <init>(java.lang.String,java.lang.String)>(r2, r0);

        return $r7;
    }

    public static final void stopRuntimeMethodTracing()
    {
        staticinvoke <android.os.Debug: void stopMethodTracing()>();

        return;
    }

