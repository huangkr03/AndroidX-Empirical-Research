androidx.credentials.CredentialManager
<androidx.credentials.CredentialManager: androidx.credentials.CredentialManager$Companion Companion>
<androidx.credentials.CredentialManager: android.content.Context context>
    private void <init>(android.content.Context)
    {
        androidx.credentials.CredentialManager r0;
        android.content.Context r1;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.credentials.CredentialManager: android.content.Context context> = r1;

        return;
    }

    public final java.lang.Object getCredential(androidx.credentials.GetCredentialRequest, android.app.Activity, kotlin.coroutines.Continuation)
    {
        androidx.credentials.CredentialManager r0;
        androidx.credentials.GetCredentialRequest r1;
        android.app.Activity r2;
        kotlin.coroutines.Continuation $r3, r4, $r10;
        kotlinx.coroutines.CancellableContinuationImpl r5, $r9;
        kotlinx.coroutines.CancellableContinuation r6;
        android.os.CancellationSignal r7, $r11;
        androidx.credentials.CredentialManager$getCredential$2$callback$1 r8, $r14;
        androidx.credentials.CredentialManager$getCredential$2$1 $r12;
        kotlin.jvm.functions.Function1 $r13;
        java.util.concurrent.Executor $r15;
        androidx.credentials.CredentialManagerCallback $r16;
        java.lang.Object $r17, $r18;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: androidx.credentials.GetCredentialRequest;

        r2 := @parameter1: android.app.Activity;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r4 = $r3;

        $r9 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r4);

        specialinvoke $r9.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r10, 1);

        r5 = $r9;

        virtualinvoke r5.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r6 = (kotlinx.coroutines.CancellableContinuation) r5;

        $r11 = new android.os.CancellationSignal;

        specialinvoke $r11.<android.os.CancellationSignal: void <init>()>();

        r7 = $r11;

        $r12 = new androidx.credentials.CredentialManager$getCredential$2$1;

        specialinvoke $r12.<androidx.credentials.CredentialManager$getCredential$2$1: void <init>(android.os.CancellationSignal)>(r7);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        interfaceinvoke r6.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r13);

        $r14 = new androidx.credentials.CredentialManager$getCredential$2$callback$1;

        specialinvoke $r14.<androidx.credentials.CredentialManager$getCredential$2$callback$1: void <init>(kotlinx.coroutines.CancellableContinuation)>(r6);

        r8 = $r14;

        $r15 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r16 = (androidx.credentials.CredentialManagerCallback) r8;

        virtualinvoke r0.<androidx.credentials.CredentialManager: void getCredentialAsync(androidx.credentials.GetCredentialRequest,android.app.Activity,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r1, r2, r7, $r15, $r16);

        $r17 = virtualinvoke r5.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r18 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r17 != $r18 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r3);

     label1:
        return $r17;
    }

    public final java.lang.Object createCredential(androidx.credentials.CreateCredentialRequest, android.app.Activity, kotlin.coroutines.Continuation)
    {
        androidx.credentials.CredentialManager r0;
        androidx.credentials.CreateCredentialRequest r1;
        android.app.Activity r2;
        kotlin.coroutines.Continuation $r3, r4, $r10;
        kotlinx.coroutines.CancellableContinuationImpl r5, $r9;
        kotlinx.coroutines.CancellableContinuation r6;
        android.os.CancellationSignal r7, $r11;
        androidx.credentials.CredentialManager$createCredential$2$callback$1 r8, $r14;
        androidx.credentials.CredentialManager$createCredential$2$1 $r12;
        kotlin.jvm.functions.Function1 $r13;
        java.util.concurrent.Executor $r15;
        androidx.credentials.CredentialManagerCallback $r16;
        java.lang.Object $r17, $r18;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: androidx.credentials.CreateCredentialRequest;

        r2 := @parameter1: android.app.Activity;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r4 = $r3;

        $r9 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r4);

        specialinvoke $r9.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r10, 1);

        r5 = $r9;

        virtualinvoke r5.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r6 = (kotlinx.coroutines.CancellableContinuation) r5;

        $r11 = new android.os.CancellationSignal;

        specialinvoke $r11.<android.os.CancellationSignal: void <init>()>();

        r7 = $r11;

        $r12 = new androidx.credentials.CredentialManager$createCredential$2$1;

        specialinvoke $r12.<androidx.credentials.CredentialManager$createCredential$2$1: void <init>(android.os.CancellationSignal)>(r7);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        interfaceinvoke r6.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r13);

        $r14 = new androidx.credentials.CredentialManager$createCredential$2$callback$1;

        specialinvoke $r14.<androidx.credentials.CredentialManager$createCredential$2$callback$1: void <init>(kotlinx.coroutines.CancellableContinuation)>(r6);

        r8 = $r14;

        $r15 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r16 = (androidx.credentials.CredentialManagerCallback) r8;

        virtualinvoke r0.<androidx.credentials.CredentialManager: void createCredentialAsync(androidx.credentials.CreateCredentialRequest,android.app.Activity,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r1, r2, r7, $r15, $r16);

        $r17 = virtualinvoke r5.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r18 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r17 != $r18 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r3);

     label1:
        return $r17;
    }

    public final java.lang.Object clearCredentialState(androidx.credentials.ClearCredentialStateRequest, kotlin.coroutines.Continuation)
    {
        androidx.credentials.CredentialManager r0;
        androidx.credentials.ClearCredentialStateRequest r1;
        kotlin.coroutines.Continuation $r2, r3, $r9;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r8;
        kotlinx.coroutines.CancellableContinuation r5;
        android.os.CancellationSignal r6, $r10;
        androidx.credentials.CredentialManager$clearCredentialState$2$callback$1 r7, $r13;
        androidx.credentials.CredentialManager$clearCredentialState$2$1 $r11;
        kotlin.jvm.functions.Function1 $r12;
        java.util.concurrent.Executor $r14;
        androidx.credentials.CredentialManagerCallback $r15;
        java.lang.Object $r16, $r17, $r18;
        kotlin.Unit $r19;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: androidx.credentials.ClearCredentialStateRequest;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r8 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r8.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r9, 1);

        r4 = $r8;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r10 = new android.os.CancellationSignal;

        specialinvoke $r10.<android.os.CancellationSignal: void <init>()>();

        r6 = $r10;

        $r11 = new androidx.credentials.CredentialManager$clearCredentialState$2$1;

        specialinvoke $r11.<androidx.credentials.CredentialManager$clearCredentialState$2$1: void <init>(android.os.CancellationSignal)>(r6);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        interfaceinvoke r5.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r12);

        $r13 = new androidx.credentials.CredentialManager$clearCredentialState$2$callback$1;

        specialinvoke $r13.<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: void <init>(kotlinx.coroutines.CancellableContinuation)>(r5);

        r7 = $r13;

        $r14 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r15 = (androidx.credentials.CredentialManagerCallback) r7;

        virtualinvoke r0.<androidx.credentials.CredentialManager: void clearCredentialStateAsync(androidx.credentials.ClearCredentialStateRequest,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r1, r6, $r14, $r15);

        $r16 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r17 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r16 != $r17 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        $r18 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r16 != $r18 goto label2;

        return $r16;

     label2:
        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r19;
    }

    public final void getCredentialAsync(androidx.credentials.GetCredentialRequest, android.app.Activity, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.CredentialManager r0;
        androidx.credentials.GetCredentialRequest r1;
        android.app.Activity r2;
        android.os.CancellationSignal r3;
        java.util.concurrent.Executor r4;
        androidx.credentials.CredentialManagerCallback r5;
        androidx.credentials.CredentialProvider r6;
        android.content.Context $r7;
        androidx.credentials.CredentialProviderFactory$Companion $r8;
        androidx.credentials.exceptions.GetCredentialProviderConfigurationException $r9;
        java.lang.CharSequence $r10;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: androidx.credentials.GetCredentialRequest;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "callback");

        $r8 = <androidx.credentials.CredentialProviderFactory: androidx.credentials.CredentialProviderFactory$Companion Companion>;

        $r7 = r0.<androidx.credentials.CredentialManager: android.content.Context context>;

        r6 = virtualinvoke $r8.<androidx.credentials.CredentialProviderFactory$Companion: androidx.credentials.CredentialProvider getBestAvailableProvider(android.content.Context)>($r7);

        if r6 != null goto label1;

        $r9 = new androidx.credentials.exceptions.GetCredentialProviderConfigurationException;

        $r10 = (java.lang.CharSequence) "getCredentialAsync no provider dependencies found - please ensure the desired provider dependencies are added";

        specialinvoke $r9.<androidx.credentials.exceptions.GetCredentialProviderConfigurationException: void <init>(java.lang.CharSequence)>($r10);

        interfaceinvoke r5.<androidx.credentials.CredentialManagerCallback: void onError(java.lang.Object)>($r9);

        return;

     label1:
        interfaceinvoke r6.<androidx.credentials.CredentialProvider: void onGetCredential(androidx.credentials.GetCredentialRequest,android.app.Activity,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r1, r2, r3, r4, r5);

        return;
    }

    public final void createCredentialAsync(androidx.credentials.CreateCredentialRequest, android.app.Activity, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.CredentialManager r0;
        androidx.credentials.CreateCredentialRequest r1;
        android.app.Activity r2;
        android.os.CancellationSignal r3;
        java.util.concurrent.Executor r4;
        androidx.credentials.CredentialManagerCallback r5;
        androidx.credentials.CredentialProvider r6;
        android.content.Context $r7;
        androidx.credentials.CredentialProviderFactory$Companion $r8;
        androidx.credentials.exceptions.CreateCredentialProviderConfigurationException $r9;
        java.lang.CharSequence $r10;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: androidx.credentials.CreateCredentialRequest;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "callback");

        $r8 = <androidx.credentials.CredentialProviderFactory: androidx.credentials.CredentialProviderFactory$Companion Companion>;

        $r7 = r0.<androidx.credentials.CredentialManager: android.content.Context context>;

        r6 = virtualinvoke $r8.<androidx.credentials.CredentialProviderFactory$Companion: androidx.credentials.CredentialProvider getBestAvailableProvider(android.content.Context)>($r7);

        if r6 != null goto label1;

        $r9 = new androidx.credentials.exceptions.CreateCredentialProviderConfigurationException;

        $r10 = (java.lang.CharSequence) "createCredentialAsync no provider dependencies found - please ensure the desired provider dependencies are added";

        specialinvoke $r9.<androidx.credentials.exceptions.CreateCredentialProviderConfigurationException: void <init>(java.lang.CharSequence)>($r10);

        interfaceinvoke r5.<androidx.credentials.CredentialManagerCallback: void onError(java.lang.Object)>($r9);

        return;

     label1:
        interfaceinvoke r6.<androidx.credentials.CredentialProvider: void onCreateCredential(androidx.credentials.CreateCredentialRequest,android.app.Activity,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r1, r2, r3, r4, r5);

        return;
    }

    public final void clearCredentialStateAsync(androidx.credentials.ClearCredentialStateRequest, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.CredentialManager r0;
        androidx.credentials.ClearCredentialStateRequest r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        androidx.credentials.CredentialManagerCallback r4;
        androidx.credentials.CredentialProvider r5;
        android.content.Context $r6;
        androidx.credentials.CredentialProviderFactory$Companion $r7;
        androidx.credentials.exceptions.ClearCredentialProviderConfigurationException $r8;
        java.lang.CharSequence $r9;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: androidx.credentials.ClearCredentialStateRequest;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "callback");

        $r7 = <androidx.credentials.CredentialProviderFactory: androidx.credentials.CredentialProviderFactory$Companion Companion>;

        $r6 = r0.<androidx.credentials.CredentialManager: android.content.Context context>;

        r5 = virtualinvoke $r7.<androidx.credentials.CredentialProviderFactory$Companion: androidx.credentials.CredentialProvider getBestAvailableProvider(android.content.Context)>($r6);

        if r5 != null goto label1;

        $r8 = new androidx.credentials.exceptions.ClearCredentialProviderConfigurationException;

        $r9 = (java.lang.CharSequence) "clearCredentialStateAsync no provider dependencies found - please ensure the desired provider dependencies are added";

        specialinvoke $r8.<androidx.credentials.exceptions.ClearCredentialProviderConfigurationException: void <init>(java.lang.CharSequence)>($r9);

        interfaceinvoke r4.<androidx.credentials.CredentialManagerCallback: void onError(java.lang.Object)>($r8);

        return;

     label1:
        interfaceinvoke r5.<androidx.credentials.CredentialProvider: void onClearCredential(androidx.credentials.ClearCredentialStateRequest,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r1, r2, r3, r4);

        return;
    }

    public static final androidx.credentials.CredentialManager create(android.content.Context)
    {
        android.content.Context r0;
        androidx.credentials.CredentialManager$Companion $r1;
        androidx.credentials.CredentialManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <androidx.credentials.CredentialManager: androidx.credentials.CredentialManager$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.CredentialManager$Companion: androidx.credentials.CredentialManager create(android.content.Context)>(r0);

        return $r2;
    }

    public void <init>(android.content.Context, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.CredentialManager r0;
        android.content.Context r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.credentials.CredentialManager;

        r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.CredentialManager: void <init>(android.content.Context)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.credentials.CredentialManager$Companion $r0;

        $r0 = new androidx.credentials.CredentialManager$Companion;

        specialinvoke $r0.<androidx.credentials.CredentialManager$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.CredentialManager: androidx.credentials.CredentialManager$Companion Companion> = $r0;

        return;
    }

androidx.credentials.CredentialManager$clearCredentialState$2$1
<androidx.credentials.CredentialManager$clearCredentialState$2$1: android.os.CancellationSignal $canceller>
    void <init>(android.os.CancellationSignal)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$1 r0;
        android.os.CancellationSignal $r1;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$1;

        $r1 := @parameter0: android.os.CancellationSignal;

        r0.<androidx.credentials.CredentialManager$clearCredentialState$2$1: android.os.CancellationSignal $canceller> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$1 r0;
        java.lang.Throwable r1;
        android.os.CancellationSignal $r2;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.credentials.CredentialManager$clearCredentialState$2$1: android.os.CancellationSignal $canceller>;

        virtualinvoke $r2.<android.os.CancellationSignal: void cancel()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$clearCredentialState$2$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.credentials.CredentialManager$clearCredentialState$2$callback$1
<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>
    void <init>(kotlinx.coroutines.CancellableContinuation)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$callback$1 r0;
        kotlinx.coroutines.CancellableContinuation $r1;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$callback$1;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        r0.<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onResult(java.lang.Void)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$callback$1 r0;
        java.lang.Void r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Result$Companion $r3;
        kotlin.Unit $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$callback$1;

        r1 := @parameter0: java.lang.Void;

        $r2 = r0.<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r5 = (kotlin.coroutines.Continuation) $r2;

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

        interfaceinvoke $r5.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r6);

        return;
    }

    public void onError(androidx.credentials.exceptions.ClearCredentialException)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$callback$1 r0;
        androidx.credentials.exceptions.ClearCredentialException r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Result$Companion $r3;
        java.lang.Throwable $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.Object $r6, $r7;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$callback$1;

        r1 := @parameter0: androidx.credentials.exceptions.ClearCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "e");

        $r2 = r0.<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r5 = (kotlin.coroutines.Continuation) $r2;

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = (java.lang.Throwable) r1;

        $r6 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r4);

        $r7 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

        interfaceinvoke $r5.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r7);

        return;
    }

    public volatile void onResult(java.lang.Object)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$callback$1 r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$callback$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: void onResult(java.lang.Void)>($r2);

        return;
    }

    public volatile void onError(java.lang.Object)
    {
        androidx.credentials.CredentialManager$clearCredentialState$2$callback$1 r0;
        java.lang.Object r1;
        androidx.credentials.exceptions.ClearCredentialException $r2;

        r0 := @this: androidx.credentials.CredentialManager$clearCredentialState$2$callback$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.exceptions.ClearCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$clearCredentialState$2$callback$1: void onError(androidx.credentials.exceptions.ClearCredentialException)>($r2);

        return;
    }

androidx.credentials.CredentialManager$Companion
    private void <init>()
    {
        androidx.credentials.CredentialManager$Companion r0;

        r0 := @this: androidx.credentials.CredentialManager$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.credentials.CredentialManager create(android.content.Context)
    {
        androidx.credentials.CredentialManager$Companion r0;
        android.content.Context r1;
        androidx.credentials.CredentialManager $r2;

        r0 := @this: androidx.credentials.CredentialManager$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = new androidx.credentials.CredentialManager;

        specialinvoke $r2.<androidx.credentials.CredentialManager: void <init>(android.content.Context,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        return $r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.CredentialManager$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.CredentialManager$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.CredentialManager$Companion: void <init>()>();

        return;
    }

androidx.credentials.CredentialManager$createCredential$2$1
<androidx.credentials.CredentialManager$createCredential$2$1: android.os.CancellationSignal $canceller>
    void <init>(android.os.CancellationSignal)
    {
        androidx.credentials.CredentialManager$createCredential$2$1 r0;
        android.os.CancellationSignal $r1;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$1;

        $r1 := @parameter0: android.os.CancellationSignal;

        r0.<androidx.credentials.CredentialManager$createCredential$2$1: android.os.CancellationSignal $canceller> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.credentials.CredentialManager$createCredential$2$1 r0;
        java.lang.Throwable r1;
        android.os.CancellationSignal $r2;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.credentials.CredentialManager$createCredential$2$1: android.os.CancellationSignal $canceller>;

        virtualinvoke $r2.<android.os.CancellationSignal: void cancel()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.credentials.CredentialManager$createCredential$2$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$createCredential$2$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.credentials.CredentialManager$createCredential$2$callback$1
<androidx.credentials.CredentialManager$createCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>
    void <init>(kotlinx.coroutines.CancellableContinuation)
    {
        androidx.credentials.CredentialManager$createCredential$2$callback$1 r0;
        kotlinx.coroutines.CancellableContinuation $r1;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$callback$1;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        r0.<androidx.credentials.CredentialManager$createCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onResult(androidx.credentials.CreateCredentialResponse)
    {
        androidx.credentials.CredentialManager$createCredential$2$callback$1 r0;
        androidx.credentials.CreateCredentialResponse r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Result$Companion $r3;
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$callback$1;

        r1 := @parameter0: androidx.credentials.CreateCredentialResponse;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "result");

        $r2 = r0.<androidx.credentials.CredentialManager$createCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r1);

        interfaceinvoke $r4.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r5);

        return;
    }

    public void onError(androidx.credentials.exceptions.CreateCredentialException)
    {
        androidx.credentials.CredentialManager$createCredential$2$callback$1 r0;
        androidx.credentials.exceptions.CreateCredentialException r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Result$Companion $r3;
        java.lang.Throwable $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.Object $r6, $r7;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$callback$1;

        r1 := @parameter0: androidx.credentials.exceptions.CreateCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "e");

        $r2 = r0.<androidx.credentials.CredentialManager$createCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r5 = (kotlin.coroutines.Continuation) $r2;

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = (java.lang.Throwable) r1;

        $r6 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r4);

        $r7 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

        interfaceinvoke $r5.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r7);

        return;
    }

    public volatile void onResult(java.lang.Object)
    {
        androidx.credentials.CredentialManager$createCredential$2$callback$1 r0;
        java.lang.Object r1;
        androidx.credentials.CreateCredentialResponse $r2;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$callback$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.CreateCredentialResponse) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$createCredential$2$callback$1: void onResult(androidx.credentials.CreateCredentialResponse)>($r2);

        return;
    }

    public volatile void onError(java.lang.Object)
    {
        androidx.credentials.CredentialManager$createCredential$2$callback$1 r0;
        java.lang.Object r1;
        androidx.credentials.exceptions.CreateCredentialException $r2;

        r0 := @this: androidx.credentials.CredentialManager$createCredential$2$callback$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.exceptions.CreateCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$createCredential$2$callback$1: void onError(androidx.credentials.exceptions.CreateCredentialException)>($r2);

        return;
    }

androidx.credentials.CredentialManager$getCredential$2$1
<androidx.credentials.CredentialManager$getCredential$2$1: android.os.CancellationSignal $canceller>
    void <init>(android.os.CancellationSignal)
    {
        androidx.credentials.CredentialManager$getCredential$2$1 r0;
        android.os.CancellationSignal $r1;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$1;

        $r1 := @parameter0: android.os.CancellationSignal;

        r0.<androidx.credentials.CredentialManager$getCredential$2$1: android.os.CancellationSignal $canceller> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.credentials.CredentialManager$getCredential$2$1 r0;
        java.lang.Throwable r1;
        android.os.CancellationSignal $r2;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.credentials.CredentialManager$getCredential$2$1: android.os.CancellationSignal $canceller>;

        virtualinvoke $r2.<android.os.CancellationSignal: void cancel()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.credentials.CredentialManager$getCredential$2$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$getCredential$2$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.credentials.CredentialManager$getCredential$2$callback$1
<androidx.credentials.CredentialManager$getCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>
    void <init>(kotlinx.coroutines.CancellableContinuation)
    {
        androidx.credentials.CredentialManager$getCredential$2$callback$1 r0;
        kotlinx.coroutines.CancellableContinuation $r1;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$callback$1;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        r0.<androidx.credentials.CredentialManager$getCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onResult(androidx.credentials.GetCredentialResponse)
    {
        androidx.credentials.CredentialManager$getCredential$2$callback$1 r0;
        androidx.credentials.GetCredentialResponse r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Result$Companion $r3;
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$callback$1;

        r1 := @parameter0: androidx.credentials.GetCredentialResponse;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "result");

        $r2 = r0.<androidx.credentials.CredentialManager$getCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r1);

        interfaceinvoke $r4.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r5);

        return;
    }

    public void onError(androidx.credentials.exceptions.GetCredentialException)
    {
        androidx.credentials.CredentialManager$getCredential$2$callback$1 r0;
        androidx.credentials.exceptions.GetCredentialException r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Result$Companion $r3;
        java.lang.Throwable $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.Object $r6, $r7;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$callback$1;

        r1 := @parameter0: androidx.credentials.exceptions.GetCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "e");

        $r2 = r0.<androidx.credentials.CredentialManager$getCredential$2$callback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r5 = (kotlin.coroutines.Continuation) $r2;

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = (java.lang.Throwable) r1;

        $r6 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r4);

        $r7 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

        interfaceinvoke $r5.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r7);

        return;
    }

    public volatile void onResult(java.lang.Object)
    {
        androidx.credentials.CredentialManager$getCredential$2$callback$1 r0;
        java.lang.Object r1;
        androidx.credentials.GetCredentialResponse $r2;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$callback$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.GetCredentialResponse) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$getCredential$2$callback$1: void onResult(androidx.credentials.GetCredentialResponse)>($r2);

        return;
    }

    public volatile void onError(java.lang.Object)
    {
        androidx.credentials.CredentialManager$getCredential$2$callback$1 r0;
        java.lang.Object r1;
        androidx.credentials.exceptions.GetCredentialException $r2;

        r0 := @this: androidx.credentials.CredentialManager$getCredential$2$callback$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.credentials.exceptions.GetCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.CredentialManager$getCredential$2$callback$1: void onError(androidx.credentials.exceptions.GetCredentialException)>($r2);

        return;
    }

