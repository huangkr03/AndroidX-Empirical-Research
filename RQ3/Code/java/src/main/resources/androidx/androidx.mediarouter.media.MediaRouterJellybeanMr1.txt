androidx.mediarouter.media.MediaRouterJellybeanMr1
<androidx.mediarouter.media.MediaRouterJellybeanMr1: java.lang.String TAG>
    public static java.lang.Object createCallback(androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback)
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback r0;
        androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy $r1;

        r0 := @parameter0: androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback;

        $r1 = new androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy;

        specialinvoke $r1.<androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy: void <init>(androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback)>(r0);

        return $r1;
    }

    private void <init>()
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1 r0;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround
<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: int WIFI_DISPLAY_SCAN_INTERVAL>
<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager>
<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>
<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>
<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>
    void <init>(android.content.Context, android.os.Handler)
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.lang.Throwable r3, $r12;
        int $i0;
        java.lang.Object $r4;
        android.hardware.display.DisplayManager $r5;
        java.lang.Class[] $r6;
        java.lang.Class $r7;
        java.lang.reflect.Method $r8;
        java.lang.NullPointerException $r9, $r10;
        java.lang.UnsupportedOperationException $r11;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 17 goto label1;

        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("context must not be null");

        throw $r10;

     label2:
        if r2 != null goto label3;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("handler must not be null");

        throw $r9;

     label3:
        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r5 = (android.hardware.display.DisplayManager) $r4;

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager> = $r5;

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler> = r2;

     label4:
        $r7 = class "Landroid/hardware/display/DisplayManager;";

        $r6 = newarray (java.lang.Class)[0];

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scanWifiDisplays", $r6);

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod> = $r8;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r3 = $r12;

     label7:
        return;

        catch java.lang.NoSuchMethodException from label4 to label5 with label6;
    }

    public void setActiveScanRouteTypes(int)
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround r0;
        int i0, $i1;
        boolean $z0, $z1;
        android.os.Handler $r1, $r3;
        java.lang.reflect.Method $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround;

        i0 := @parameter0: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label2;

        $z1 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;

        if $z1 != 0 goto label3;

        $r2 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>;

        if $r2 == null goto label1;

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays> = 1;

        $r3 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

        goto label3;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays because the DisplayManager.scanWifiDisplays() method is not available on this device.");

        goto label3;

     label2:
        $z0 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;

        if $z0 == 0 goto label3;

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays> = 0;

        $r1 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

     label3:
        return;
    }

    public void run()
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround r0;
        boolean $z0;
        java.lang.Object[] $r1;
        android.hardware.display.DisplayManager $r2;
        java.lang.reflect.Method $r3;
        java.lang.Throwable $r5, $r6, r7, r8;
        android.os.Handler $r9;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround;

        $z0 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;

        if $z0 == 0 goto label6;

     label1:
        $r3 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>;

        $r2 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager>;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays.", r7);

        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays.", r8);

     label5:
        $r9 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, 15000L);

     label6:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback
<androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback: void onRoutePresentationDisplayChanged(java.lang.Object)>
androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy
    void <init>(androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback)
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy r0;
        androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback r1;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouterJellybean$CallbackProxy: void <init>(androidx.mediarouter.media.MediaRouterJellybean$Callback)>(r1);

        return;
    }

    public void onRoutePresentationDisplayChanged(android.media.MediaRouter, android.media.MediaRouter$RouteInfo)
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy r0;
        android.media.MediaRouter r1;
        android.media.MediaRouter$RouteInfo r2;
        androidx.mediarouter.media.MediaRouterJellybean$Callback $r3;
        androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy;

        r1 := @parameter0: android.media.MediaRouter;

        r2 := @parameter1: android.media.MediaRouter$RouteInfo;

        $r3 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$CallbackProxy: androidx.mediarouter.media.MediaRouterJellybean$Callback mCallback>;

        $r4 = (androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback) $r3;

        interfaceinvoke $r4.<androidx.mediarouter.media.MediaRouterJellybeanMr1$Callback: void onRoutePresentationDisplayChanged(java.lang.Object)>(r2);

        return;
    }

androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround
<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>
<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting>
    void <init>()
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround r0;
        int $i0, $i1;
        java.lang.Class $r1, $r3;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r4;
        java.lang.UnsupportedOperationException $r5;
        java.lang.Throwable $r6, $r7, $r8, r10, r11, r12;
        java.lang.reflect.Field r9;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 17 goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        $r1 = class "Landroid/media/MediaRouter$RouteInfo;";

        r9 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("STATUS_CONNECTING");

        $i1 = virtualinvoke r9.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting> = $i1;

        $r3 = class "Landroid/media/MediaRouter$RouteInfo;";

        $r2 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStatusCode", $r2);

        r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod> = $r4;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        r10 = $r6;

        goto label6;

     label4:
        $r8 := @caughtexception;

        r11 = $r8;

        goto label6;

     label5:
        $r7 := @caughtexception;

        r12 = $r7;

     label6:
        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    public boolean isConnecting(java.lang.Object)
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround r0;
        java.lang.Object r1, $r6;
        android.media.MediaRouter$RouteInfo r2;
        java.lang.reflect.Method $r3, $r5;
        java.lang.Object[] $r4;
        java.lang.Integer $r7;
        int $i0, i1;
        java.lang.Throwable $r8, $r9, r10, r11;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround;

        r1 := @parameter0: java.lang.Object;

        r2 = (android.media.MediaRouter$RouteInfo) r1;

        $r3 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>;

        if $r3 == null goto label6;

     label1:
        $r5 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r4);

        $r7 = (java.lang.Integer) $r6;

        i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i0 = r0.<androidx.mediarouter.media.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting>;

        if i1 != $i0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        goto label6;

     label5:
        $r9 := @caughtexception;

        r11 = $r9;

     label6:
        return 0;

        catch java.lang.IllegalAccessException from label1 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label3 with label5;
    }

androidx.mediarouter.media.MediaRouterJellybeanMr1$RouteInfo
    public static boolean isEnabled(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.MediaRouter$RouteInfo $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.MediaRouter$RouteInfo) r0;

        $z0 = virtualinvoke $r1.<android.media.MediaRouter$RouteInfo: boolean isEnabled()>();

        return $z0;
    }

    public static android.view.Display getPresentationDisplay(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r4;
        android.media.MediaRouter$RouteInfo $r2;
        android.view.Display $r3;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r2 = (android.media.MediaRouter$RouteInfo) r0;

        $r3 = virtualinvoke $r2.<android.media.MediaRouter$RouteInfo: android.view.Display getPresentationDisplay()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot get presentation display for the route.", r1);

        return null;

        catch java.lang.NoSuchMethodError from label1 to label2 with label3;
    }

    private void <init>()
    {
        androidx.mediarouter.media.MediaRouterJellybeanMr1$RouteInfo r0;

        r0 := @this: androidx.mediarouter.media.MediaRouterJellybeanMr1$RouteInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

