androidx.camera.core.imagecapture.ProcessingNode
<androidx.camera.core.imagecapture.ProcessingNode: java.util.concurrent.Executor mBlockingExecutor>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mInput2Packet>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mImage2JpegBytes>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mBitmap2JpegBytes>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2Disk>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2CroppedBitmap>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegImage2Result>
<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2Image>
    void <init>(java.util.concurrent.Executor)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        java.util.concurrent.Executor r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: java.util.concurrent.Executor mBlockingExecutor> = r1;

        return;
    }

    public java.lang.Void transform(androidx.camera.core.imagecapture.ProcessingNode$In)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.imagecapture.ProcessingNode$In r1;
        androidx.camera.core.processing.Edge $r2;
        androidx.core.util.Consumer $r3;
        androidx.camera.core.imagecapture.ProcessingInput2Packet $r4;
        androidx.camera.core.imagecapture.Image2JpegBytes $r5;
        androidx.camera.core.imagecapture.JpegBytes2CroppedBitmap $r6;
        androidx.camera.core.imagecapture.Bitmap2JpegBytes $r7;
        androidx.camera.core.imagecapture.JpegBytes2Disk $r8;
        androidx.camera.core.imagecapture.JpegImage2Result $r9;
        int $i0;
        androidx.camera.core.imagecapture.JpegBytes2Image $r10;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.imagecapture.ProcessingNode$In;

        $r2 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$In: androidx.camera.core.processing.Edge getEdge()>();

        $r3 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.camera.core.imagecapture.ProcessingNode)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.imagecapture.ProcessingNode: void lambda$transform$1(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)>, methodtype: void __METHODTYPE__(androidx.camera.core.imagecapture.ProcessingNode$InputPacket));

        virtualinvoke $r2.<androidx.camera.core.processing.Edge: void setListener(androidx.core.util.Consumer)>($r3);

        $r4 = new androidx.camera.core.imagecapture.ProcessingInput2Packet;

        specialinvoke $r4.<androidx.camera.core.imagecapture.ProcessingInput2Packet: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mInput2Packet> = $r4;

        $r5 = new androidx.camera.core.imagecapture.Image2JpegBytes;

        specialinvoke $r5.<androidx.camera.core.imagecapture.Image2JpegBytes: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mImage2JpegBytes> = $r5;

        $r6 = new androidx.camera.core.imagecapture.JpegBytes2CroppedBitmap;

        specialinvoke $r6.<androidx.camera.core.imagecapture.JpegBytes2CroppedBitmap: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2CroppedBitmap> = $r6;

        $r7 = new androidx.camera.core.imagecapture.Bitmap2JpegBytes;

        specialinvoke $r7.<androidx.camera.core.imagecapture.Bitmap2JpegBytes: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mBitmap2JpegBytes> = $r7;

        $r8 = new androidx.camera.core.imagecapture.JpegBytes2Disk;

        specialinvoke $r8.<androidx.camera.core.imagecapture.JpegBytes2Disk: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2Disk> = $r8;

        $r9 = new androidx.camera.core.imagecapture.JpegImage2Result;

        specialinvoke $r9.<androidx.camera.core.imagecapture.JpegImage2Result: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegImage2Result> = $r9;

        $i0 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$In: int getFormat()>();

        if $i0 != 35 goto label1;

        $r10 = new androidx.camera.core.imagecapture.JpegBytes2Image;

        specialinvoke $r10.<androidx.camera.core.imagecapture.JpegBytes2Image: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2Image> = $r10;

     label1:
        return null;
    }

    public void release()
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        return;
    }

    void processInputPacket(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.imagecapture.ProcessingNode$InputPacket r1;
        androidx.camera.core.imagecapture.ProcessingRequest r2, $r3;
        boolean $z0;
        java.util.concurrent.ScheduledExecutorService $r4, $r6;
        java.lang.Runnable $r5, $r7;
        java.lang.Throwable $r8, r12;
        androidx.camera.core.ImageCaptureException $r9;
        androidx.camera.core.ImageProxy r10;
        androidx.camera.core.ImageCapture$OutputFileResults r11;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.imagecapture.ProcessingNode$InputPacket;

        r2 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.imagecapture.ProcessingRequest getProcessingRequest()>();

     label1:
        $r3 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.imagecapture.ProcessingRequest getProcessingRequest()>();

        $z0 = virtualinvoke $r3.<androidx.camera.core.imagecapture.ProcessingRequest: boolean isInMemoryCapture()>();

        if $z0 == 0 goto label2;

        r10 = virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.ImageProxy processInMemoryCapture(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)>(r1);

        $r6 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageProxy)>(r2, r10) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.imagecapture.ProcessingNode: void lambda$processInputPacket$2(androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageProxy)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r7);

        goto label3;

     label2:
        r11 = virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.ImageCapture$OutputFileResults processOnDiskCapture(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)>(r1);

        $r4 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageCapture$OutputFileResults)>(r2, r11) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.imagecapture.ProcessingNode: void lambda$processInputPacket$3(androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageCapture$OutputFileResults)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r4.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r5);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r12 = $r8;

        $r9 = new androidx.camera.core.ImageCaptureException;

        specialinvoke $r9.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(0, "Processing failed.", r12);

        staticinvoke <androidx.camera.core.imagecapture.ProcessingNode: void sendError(androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageCaptureException)>(r2, $r9);

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    androidx.camera.core.ImageCapture$OutputFileResults processOnDiskCapture(androidx.camera.core.imagecapture.ProcessingNode$InputPacket) throws androidx.camera.core.ImageCaptureException
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.imagecapture.ProcessingNode$InputPacket r1;
        androidx.camera.core.imagecapture.ProcessingRequest r2;
        androidx.camera.core.processing.Packet r3, r4, r22;
        androidx.camera.core.processing.Operation $r5, $r7, $r10, $r17, $r19;
        java.lang.Object $r6, $r9, $r12, $r15, $r18, $r21;
        int $i0, $i1;
        androidx.camera.core.imagecapture.Image2JpegBytes$In $r8;
        boolean $z0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r11, $r13;
        androidx.camera.core.imagecapture.JpegBytes2Disk$In $r14;
        androidx.camera.core.ImageCapture$OutputFileResults $r16;
        androidx.camera.core.imagecapture.Bitmap2JpegBytes$In $r20;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.imagecapture.ProcessingNode$InputPacket;

        r2 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.imagecapture.ProcessingRequest getProcessingRequest()>();

        $r5 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mInput2Packet>;

        $r6 = interfaceinvoke $r5.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>(r1);

        r3 = (androidx.camera.core.processing.Packet) $r6;

        $r7 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mImage2JpegBytes>;

        $i0 = virtualinvoke r2.<androidx.camera.core.imagecapture.ProcessingRequest: int getJpegQuality()>();

        $r8 = staticinvoke <androidx.camera.core.imagecapture.Image2JpegBytes$In: androidx.camera.core.imagecapture.Image2JpegBytes$In of(androidx.camera.core.processing.Packet,int)>(r3, $i0);

        $r9 = interfaceinvoke $r7.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>($r8);

        r22 = (androidx.camera.core.processing.Packet) $r9;

        $z0 = virtualinvoke r22.<androidx.camera.core.processing.Packet: boolean hasCropping()>();

        if $z0 == 0 goto label1;

        $r17 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2CroppedBitmap>;

        $r18 = interfaceinvoke $r17.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>(r22);

        r4 = (androidx.camera.core.processing.Packet) $r18;

        $r19 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mBitmap2JpegBytes>;

        $i1 = virtualinvoke r2.<androidx.camera.core.imagecapture.ProcessingRequest: int getJpegQuality()>();

        $r20 = staticinvoke <androidx.camera.core.imagecapture.Bitmap2JpegBytes$In: androidx.camera.core.imagecapture.Bitmap2JpegBytes$In of(androidx.camera.core.processing.Packet,int)>(r4, $i1);

        $r21 = interfaceinvoke $r19.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>($r20);

        r22 = (androidx.camera.core.processing.Packet) $r21;

     label1:
        $r10 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2Disk>;

        $r11 = virtualinvoke r2.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.ImageCapture$OutputFileOptions getOutputFileOptions()>();

        $r12 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r11);

        $r13 = (androidx.camera.core.ImageCapture$OutputFileOptions) $r12;

        $r14 = staticinvoke <androidx.camera.core.imagecapture.JpegBytes2Disk$In: androidx.camera.core.imagecapture.JpegBytes2Disk$In of(androidx.camera.core.processing.Packet,androidx.camera.core.ImageCapture$OutputFileOptions)>(r22, $r13);

        $r15 = interfaceinvoke $r10.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>($r14);

        $r16 = (androidx.camera.core.ImageCapture$OutputFileResults) $r15;

        return $r16;
    }

    androidx.camera.core.ImageProxy processInMemoryCapture(androidx.camera.core.imagecapture.ProcessingNode$InputPacket) throws androidx.camera.core.ImageCaptureException
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.imagecapture.ProcessingNode$InputPacket r1;
        androidx.camera.core.imagecapture.ProcessingRequest r2;
        androidx.camera.core.processing.Packet r3, r14;
        androidx.camera.core.processing.Operation $r4, $r6, $r9, $r12;
        java.lang.Object $r5, $r7, $r11, $r13;
        int $i0, $i1;
        androidx.camera.core.ImageProxy $r8;
        androidx.camera.core.imagecapture.Image2JpegBytes$In $r10;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.imagecapture.ProcessingNode$InputPacket;

        r2 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.imagecapture.ProcessingRequest getProcessingRequest()>();

        $r4 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mInput2Packet>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>(r1);

        r14 = (androidx.camera.core.processing.Packet) $r5;

        $i0 = virtualinvoke r14.<androidx.camera.core.processing.Packet: int getFormat()>();

        if $i0 != 35 goto label1;

        $r9 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mImage2JpegBytes>;

        $i1 = virtualinvoke r2.<androidx.camera.core.imagecapture.ProcessingRequest: int getJpegQuality()>();

        $r10 = staticinvoke <androidx.camera.core.imagecapture.Image2JpegBytes$In: androidx.camera.core.imagecapture.Image2JpegBytes$In of(androidx.camera.core.processing.Packet,int)>(r14, $i1);

        $r11 = interfaceinvoke $r9.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>($r10);

        r3 = (androidx.camera.core.processing.Packet) $r11;

        $r12 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2Image>;

        $r13 = interfaceinvoke $r12.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>(r3);

        r14 = (androidx.camera.core.processing.Packet) $r13;

     label1:
        $r6 = r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegImage2Result>;

        $r7 = interfaceinvoke $r6.<androidx.camera.core.processing.Operation: java.lang.Object apply(java.lang.Object)>(r14);

        $r8 = (androidx.camera.core.ImageProxy) $r7;

        return $r8;
    }

    private static void sendError(androidx.camera.core.imagecapture.ProcessingRequest, androidx.camera.core.ImageCaptureException)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCaptureException r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.lang.Runnable $r3;

        r0 := @parameter0: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter1: androidx.camera.core.ImageCaptureException;

        $r2 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageCaptureException)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.imagecapture.ProcessingNode: void lambda$sendError$4(androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageCaptureException)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void injectJpegBytes2CroppedBitmapForTesting(androidx.camera.core.processing.Operation)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.processing.Operation r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.processing.Operation;

        r0.<androidx.camera.core.imagecapture.ProcessingNode: androidx.camera.core.processing.Operation mJpegBytes2CroppedBitmap> = r1;

        return;
    }

    public volatile java.lang.Object transform(java.lang.Object)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        java.lang.Object r1;
        androidx.camera.core.imagecapture.ProcessingNode$In $r2;
        java.lang.Void $r3;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.camera.core.imagecapture.ProcessingNode$In) r1;

        $r3 = virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingNode: java.lang.Void transform(androidx.camera.core.imagecapture.ProcessingNode$In)>($r2);

        return $r3;
    }

    private static void lambda$sendError$4(androidx.camera.core.imagecapture.ProcessingRequest, androidx.camera.core.ImageCaptureException)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCaptureException r1;

        r0 := @parameter0: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter1: androidx.camera.core.ImageCaptureException;

        virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingRequest: void onProcessFailure(androidx.camera.core.ImageCaptureException)>(r1);

        return;
    }

    private static void lambda$processInputPacket$3(androidx.camera.core.imagecapture.ProcessingRequest, androidx.camera.core.ImageCapture$OutputFileResults)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCapture$OutputFileResults r1;

        r0 := @parameter0: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter1: androidx.camera.core.ImageCapture$OutputFileResults;

        virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingRequest: void onFinalResult(androidx.camera.core.ImageCapture$OutputFileResults)>(r1);

        return;
    }

    private static void lambda$processInputPacket$2(androidx.camera.core.imagecapture.ProcessingRequest, androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageProxy r1;

        r0 := @parameter0: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter1: androidx.camera.core.ImageProxy;

        virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingRequest: void onFinalResult(androidx.camera.core.ImageProxy)>(r1);

        return;
    }

    private void lambda$transform$1(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.imagecapture.ProcessingNode$InputPacket r1;
        androidx.camera.core.imagecapture.ProcessingRequest $r2;
        boolean $z0;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.imagecapture.ProcessingNode$InputPacket;

        $r2 = virtualinvoke r1.<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.imagecapture.ProcessingRequest getProcessingRequest()>();

        $z0 = virtualinvoke $r2.<androidx.camera.core.imagecapture.ProcessingRequest: boolean isAborted()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.camera.core.imagecapture.ProcessingNode: java.util.concurrent.Executor mBlockingExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.imagecapture.ProcessingNode,androidx.camera.core.imagecapture.ProcessingNode$InputPacket)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.imagecapture.ProcessingNode: void lambda$transform$0(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private void lambda$transform$0(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)
    {
        androidx.camera.core.imagecapture.ProcessingNode r0;
        androidx.camera.core.imagecapture.ProcessingNode$InputPacket r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode;

        r1 := @parameter0: androidx.camera.core.imagecapture.ProcessingNode$InputPacket;

        virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingNode: void processInputPacket(androidx.camera.core.imagecapture.ProcessingNode$InputPacket)>(r1);

        return;
    }

androidx.camera.core.imagecapture.ProcessingNode$In
    void <init>()
    {
        androidx.camera.core.imagecapture.ProcessingNode$In r0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode$In;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.camera.core.imagecapture.ProcessingNode$In: androidx.camera.core.processing.Edge getEdge()>
<androidx.camera.core.imagecapture.ProcessingNode$In: int getFormat()>
    static androidx.camera.core.imagecapture.ProcessingNode$In of(int)
    {
        int i0;
        androidx.camera.core.imagecapture.AutoValue_ProcessingNode_In $r0;
        androidx.camera.core.processing.Edge $r1;

        i0 := @parameter0: int;

        $r0 = new androidx.camera.core.imagecapture.AutoValue_ProcessingNode_In;

        $r1 = new androidx.camera.core.processing.Edge;

        specialinvoke $r1.<androidx.camera.core.processing.Edge: void <init>()>();

        specialinvoke $r0.<androidx.camera.core.imagecapture.AutoValue_ProcessingNode_In: void <init>(androidx.camera.core.processing.Edge,int)>($r1, i0);

        return $r0;
    }

androidx.camera.core.imagecapture.ProcessingNode$InputPacket
    void <init>()
    {
        androidx.camera.core.imagecapture.ProcessingNode$InputPacket r0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingNode$InputPacket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.imagecapture.ProcessingRequest getProcessingRequest()>
<androidx.camera.core.imagecapture.ProcessingNode$InputPacket: androidx.camera.core.ImageProxy getImageProxy()>
    static androidx.camera.core.imagecapture.ProcessingNode$InputPacket of(androidx.camera.core.imagecapture.ProcessingRequest, androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.imagecapture.AutoValue_ProcessingNode_InputPacket $r2;

        r0 := @parameter0: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter1: androidx.camera.core.ImageProxy;

        $r2 = new androidx.camera.core.imagecapture.AutoValue_ProcessingNode_InputPacket;

        specialinvoke $r2.<androidx.camera.core.imagecapture.AutoValue_ProcessingNode_InputPacket: void <init>(androidx.camera.core.imagecapture.ProcessingRequest,androidx.camera.core.ImageProxy)>(r0, r1);

        return $r2;
    }

