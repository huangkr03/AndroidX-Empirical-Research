androidx.compose.compiler.plugins.kotlin.lower.ComposableTypeRemapperKt
    private static final boolean isComposableAnnotation(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r0;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r1;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor $r2;
        org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor $r3;
        org.jetbrains.kotlin.types.KotlinType $r4;
        org.jetbrains.kotlin.types.TypeConstructor $r5;
        org.jetbrains.kotlin.descriptors.ClassifierDescriptor $r6;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r7;
        org.jetbrains.kotlin.name.FqName $r8, $r10;
        boolean $z0;
        org.jetbrains.kotlin.descriptors.DeclarationDescriptor $r9;

        $r0 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        $r1 = interfaceinvoke $r0.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $r3 = (org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor) $r2;

        $r4 = interfaceinvoke $r3.<org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor: org.jetbrains.kotlin.types.KotlinType getReturnType()>();

        $r5 = virtualinvoke $r4.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.types.TypeConstructor getConstructor()>();

        $r6 = interfaceinvoke $r5.<org.jetbrains.kotlin.types.TypeConstructor: org.jetbrains.kotlin.descriptors.ClassifierDescriptor getDeclarationDescriptor()>();

        if $r6 == null goto label1;

        $r9 = (org.jetbrains.kotlin.descriptors.DeclarationDescriptor) $r6;

        $r10 = staticinvoke <org.jetbrains.kotlin.resolve.descriptorUtil.DescriptorUtilsKt: org.jetbrains.kotlin.name.FqName getFqNameSafe(org.jetbrains.kotlin.descriptors.DeclarationDescriptor)>($r9);

        goto label2;

     label1:
        $r10 = null;

     label2:
        $r7 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposable()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r8);

        return $z0;
    }

    public static final boolean access$isComposableAnnotation(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r0;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        $z0 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.ComposableTypeRemapperKt: boolean isComposableAnnotation(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>($r0);

        return $z0;
    }

