androidx.media3.exoplayer.source.ProgressiveMediaSource
<androidx.media3.exoplayer.source.ProgressiveMediaSource: int DEFAULT_LOADING_CHECK_INTERVAL_BYTES>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.DataSource$Factory dataSourceFactory>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadableLoadErrorHandlingPolicy>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: int continueLoadingCheckIntervalBytes>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsPlaceholder>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: long timelineDurationUs>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsSeekable>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsLive>
<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.TransferListener transferListener>
    private void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.DataSource$Factory, androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, int)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.DataSource$Factory r2;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory r3;
        androidx.media3.exoplayer.drm.DrmSessionManager r4;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r5;
        int i0;
        androidx.media3.common.MediaItem$LocalConfiguration $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        r3 := @parameter2: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory;

        r4 := @parameter3: androidx.media3.exoplayer.drm.DrmSessionManager;

        r5 := @parameter4: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        i0 := @parameter5: int;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        $r6 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (androidx.media3.common.MediaItem$LocalConfiguration) $r7;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration> = $r8;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem mediaItem> = r1;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r2;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory> = r3;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager> = r4;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadableLoadErrorHandlingPolicy> = r5;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: int continueLoadingCheckIntervalBytes> = i0;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsPlaceholder> = 1;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: long timelineDurationUs> = -9223372036854775807L;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem mediaItem>;

        return $r1;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.exoplayer.drm.DrmSessionManager $r2, $r3;
        android.os.Looper $r4, $r6;
        java.lang.Object $r5;
        androidx.media3.exoplayer.analytics.PlayerId $r7;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.TransferListener transferListener> = r1;

        $r2 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionManager: void prepare()>();

        $r3 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = (android.os.Looper) $r5;

        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        interfaceinvoke $r3.<androidx.media3.exoplayer.drm.DrmSessionManager: void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId)>($r6, $r7);

        specialinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: void notifySourceInfoRefreshed()>();

        return;
    }

    public void maybeThrowSourceInfoRefreshError()
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        androidx.media3.datasource.DataSource r3;
        androidx.media3.datasource.DataSource$Factory $r4;
        androidx.media3.datasource.TransferListener $r5, $r18;
        androidx.media3.exoplayer.source.ProgressiveMediaPeriod $r6;
        androidx.media3.common.MediaItem$LocalConfiguration $r7, $r16;
        android.net.Uri $r8;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory $r9;
        androidx.media3.exoplayer.analytics.PlayerId $r10;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor $r11;
        androidx.media3.exoplayer.drm.DrmSessionManager $r12;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r13;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r14;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r15;
        int $i1;
        java.lang.String $r17;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r4 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        r3 = interfaceinvoke $r4.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        $r5 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.TransferListener transferListener>;

        if $r5 == null goto label1;

        $r18 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.datasource.TransferListener transferListener>;

        interfaceinvoke r3.<androidx.media3.datasource.DataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>($r18);

     label1:
        $r6 = new androidx.media3.exoplayer.source.ProgressiveMediaPeriod;

        $r7 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r8 = $r7.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r9 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory>;

        $r10 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        $r11 = interfaceinvoke $r9.<androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory: androidx.media3.exoplayer.source.ProgressiveMediaExtractor createProgressiveMediaExtractor(androidx.media3.exoplayer.analytics.PlayerId)>($r10);

        $r12 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r13 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(r1);

        $r14 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadableLoadErrorHandlingPolicy>;

        $r15 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(r1);

        $r16 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r17 = $r16.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.String customCacheKey>;

        $i1 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: int continueLoadingCheckIntervalBytes>;

        specialinvoke $r6.<androidx.media3.exoplayer.source.ProgressiveMediaPeriod: void <init>(android.net.Uri,androidx.media3.datasource.DataSource,androidx.media3.exoplayer.source.ProgressiveMediaExtractor,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.ProgressiveMediaPeriod$Listener,androidx.media3.exoplayer.upstream.Allocator,java.lang.String,int)>($r8, r3, $r11, $r12, $r13, $r14, $r15, r0, r2, $r17, $i1);

        return $r6;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.source.ProgressiveMediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = (androidx.media3.exoplayer.source.ProgressiveMediaPeriod) r1;

        virtualinvoke $r2.<androidx.media3.exoplayer.source.ProgressiveMediaPeriod: void release()>();

        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.exoplayer.drm.DrmSessionManager $r1;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.drm.DrmSessionManager: void release()>();

        return;
    }

    public void onSourceInfoRefreshed(long, boolean, boolean)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        boolean z0, z1, $z2, $z3, $z4;
        byte $b0, $b2;
        long $l1, l3, $l4, l5;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        l3 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $b0 = l3 cmp -9223372036854775807L;

        if $b0 != 0 goto label1;

        $l4 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: long timelineDurationUs>;

        goto label2;

     label1:
        $l4 = l3;

     label2:
        l5 = $l4;

        $z2 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsPlaceholder>;

        if $z2 != 0 goto label3;

        $l1 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: long timelineDurationUs>;

        $b2 = $l1 cmp l5;

        if $b2 != 0 goto label3;

        $z3 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsSeekable>;

        if $z3 != z0 goto label3;

        $z4 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsLive>;

        if $z4 != z1 goto label3;

        return;

     label3:
        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: long timelineDurationUs> = l5;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsSeekable> = z0;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsLive> = z1;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsPlaceholder> = 0;

        specialinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: void notifySourceInfoRefreshed()>();

        return;
    }

    private void notifySourceInfoRefreshed()
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.common.MediaItem $r2;
        boolean $z0, $z1, $z2;
        long $l0;
        java.lang.Object r4;
        androidx.media3.exoplayer.source.SinglePeriodTimeline r5;
        androidx.media3.exoplayer.source.ProgressiveMediaSource$1 r6;
        androidx.media3.common.Timeline r7, r8;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r5 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $l0 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: long timelineDurationUs>;

        $z1 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsSeekable>;

        $z0 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsLive>;

        $r2 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke r5.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem)>($l0, $z1, 0, $z0, null, $r2);

        r4 = r5;

        $z2 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: boolean timelineIsPlaceholder>;

        if $z2 == 0 goto label1;

        r6 = new androidx.media3.exoplayer.source.ProgressiveMediaSource$1;

        r7 = (androidx.media3.common.Timeline) r4;

        specialinvoke r6.<androidx.media3.exoplayer.source.ProgressiveMediaSource$1: void <init>(androidx.media3.exoplayer.source.ProgressiveMediaSource,androidx.media3.common.Timeline)>(r0, r7);

        r4 = r6;

     label1:
        r8 = (androidx.media3.common.Timeline) r4;

        virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>(r8);

        return;
    }

    void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.DataSource$Factory, androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, int, androidx.media3.exoplayer.source.ProgressiveMediaSource$1)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.DataSource$Factory r2;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory r3;
        androidx.media3.exoplayer.drm.DrmSessionManager r4;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r5;
        int i0;
        androidx.media3.exoplayer.source.ProgressiveMediaSource$1 r6;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        r3 := @parameter2: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory;

        r4 := @parameter3: androidx.media3.exoplayer.drm.DrmSessionManager;

        r5 := @parameter4: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        i0 := @parameter5: int;

        r6 := @parameter6: androidx.media3.exoplayer.source.ProgressiveMediaSource$1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,int)>(r1, r2, r3, r4, r5, i0);

        return;
    }

androidx.media3.exoplayer.source.ProgressiveMediaSource$1
    void <init>(androidx.media3.exoplayer.source.ProgressiveMediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$1 r0;
        androidx.media3.exoplayer.source.ProgressiveMediaSource r1;
        androidx.media3.common.Timeline r2;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$1;

        r1 := @parameter0: androidx.media3.exoplayer.source.ProgressiveMediaSource;

        r2 := @parameter1: androidx.media3.common.Timeline;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: void <init>(androidx.media3.common.Timeline)>(r2);

        return;
    }

    public androidx.media3.common.Timeline$Window getWindow(int, androidx.media3.common.Timeline$Window, long)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$1 r0;
        int i0;
        androidx.media3.common.Timeline$Window r1;
        long l1;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$1;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long)>(i0, r1, l1);

        r1.<androidx.media3.common.Timeline$Window: boolean isPlaceholder> = 1;

        return r1;
    }

    public androidx.media3.common.Timeline$Period getPeriod(int, androidx.media3.common.Timeline$Period, boolean)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$1 r0;
        int i0;
        androidx.media3.common.Timeline$Period r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$1;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i0, r1, z0);

        r1.<androidx.media3.common.Timeline$Period: boolean isPlaceholder> = 1;

        return r1;
    }

androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory>
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: int continueLoadingCheckIntervalBytes>
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.String customCacheKey>
<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.Object tag>
    public void <init>(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.extractor.DefaultExtractorsFactory $r2;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        $r2 = new androidx.media3.extractor.DefaultExtractorsFactory;

        specialinvoke $r2.<androidx.media3.extractor.DefaultExtractorsFactory: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory)>(r1, $r2);

        return;
    }

    public void <init>(androidx.media3.datasource.DataSource$Factory, androidx.media3.extractor.ExtractorsFactory)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.extractor.ExtractorsFactory r2;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory $r3;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r2 := @parameter1: androidx.media3.extractor.ExtractorsFactory;

        $r3 = dynamicinvoke "createProgressiveMediaExtractor" <androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory (androidx.media3.extractor.ExtractorsFactory)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.exoplayer.source.ProgressiveMediaExtractor __METHODTYPE__(androidx.media3.exoplayer.analytics.PlayerId), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaExtractor lambda$new$0(androidx.media3.extractor.ExtractorsFactory,androidx.media3.exoplayer.analytics.PlayerId)>, methodtype: androidx.media3.exoplayer.source.ProgressiveMediaExtractor __METHODTYPE__(androidx.media3.exoplayer.analytics.PlayerId));

        specialinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory)>(r1, $r3);

        return;
    }

    public void <init>(androidx.media3.datasource.DataSource$Factory, androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory r2;
        androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider $r3;
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy $r4;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r2 := @parameter1: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory;

        $r3 = new androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider;

        specialinvoke $r3.<androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider: void <init>()>();

        $r4 = new androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        specialinvoke $r4.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory,androidx.media3.exoplayer.drm.DrmSessionManagerProvider,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,int)>(r1, r2, $r3, $r4, 1048576);

        return;
    }

    public void <init>(androidx.media3.datasource.DataSource$Factory, androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory, androidx.media3.exoplayer.drm.DrmSessionManagerProvider, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, int)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory r2;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r3;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r4;
        int i0;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r2 := @parameter1: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory;

        r3 := @parameter2: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        r4 := @parameter3: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r1;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory> = r2;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = r3;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r4;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: int continueLoadingCheckIntervalBytes> = i0;

        return;
    }

    public androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setLoadErrorHandlingPolicy no longer handles null by instantiating a new DefaultLoadErrorHandlingPolicy. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy) $r2;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setContinueLoadingCheckIntervalBytes(int)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: int continueLoadingCheckIntervalBytes> = i0;

        return r0;
    }

    public androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setDrmSessionManagerProvider no longer handles null by instantiating a new DefaultDrmSessionManagerProvider. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.drm.DrmSessionManagerProvider) $r2;

        r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.source.ProgressiveMediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        boolean z0, z1, $z2, $z3;
        androidx.media3.common.MediaItem$LocalConfiguration $r1, $r3, $r19;
        java.lang.Object $r4, $r9, $r12, $r17;
        androidx.media3.common.MediaItem$Builder $r5, $r7, $r8, $r10, $r11, $r13, $r15;
        java.lang.String $r6, $r14, $r16, $r20;
        androidx.media3.common.MediaItem r18;
        androidx.media3.exoplayer.source.ProgressiveMediaSource $r21;
        androidx.media3.datasource.DataSource$Factory $r22;
        androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory $r23;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider $r24;
        androidx.media3.exoplayer.drm.DrmSessionManager $r25;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r26;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r18 := @parameter0: androidx.media3.common.MediaItem;

        $r1 = r18.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r18.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r4 = $r3.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.Object tag>;

        if $r4 != null goto label1;

        $r17 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.Object tag>;

        if $r17 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r19 = r18.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r20 = $r19.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.String customCacheKey>;

        if $r20 != null goto label3;

        $r16 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.String customCacheKey>;

        if $r16 == null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;

        if z0 == 0 goto label5;

        if z1 == 0 goto label5;

        $r11 = virtualinvoke r18.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r12 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.Object tag>;

        $r13 = virtualinvoke $r11.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setTag(java.lang.Object)>($r12);

        $r14 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.String customCacheKey>;

        $r15 = virtualinvoke $r13.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setCustomCacheKey(java.lang.String)>($r14);

        r18 = virtualinvoke $r15.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        goto label7;

     label5:
        if z0 == 0 goto label6;

        $r8 = virtualinvoke r18.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r9 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.Object tag>;

        $r10 = virtualinvoke $r8.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setTag(java.lang.Object)>($r9);

        r18 = virtualinvoke $r10.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        goto label7;

     label6:
        if z1 == 0 goto label7;

        $r5 = virtualinvoke r18.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r6 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: java.lang.String customCacheKey>;

        $r7 = virtualinvoke $r5.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setCustomCacheKey(java.lang.String)>($r6);

        r18 = virtualinvoke $r7.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

     label7:
        $r21 = new androidx.media3.exoplayer.source.ProgressiveMediaSource;

        $r22 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        $r23 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory>;

        $r24 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>;

        $r25 = interfaceinvoke $r24.<androidx.media3.exoplayer.drm.DrmSessionManagerProvider: androidx.media3.exoplayer.drm.DrmSessionManager get(androidx.media3.common.MediaItem)>(r18);

        $r26 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $i0 = r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: int continueLoadingCheckIntervalBytes>;

        specialinvoke $r21.<androidx.media3.exoplayer.source.ProgressiveMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,int,androidx.media3.exoplayer.source.ProgressiveMediaSource$1)>(r18, $r22, $r23, $r25, $r26, $i0, null);

        return $r21;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        $r1 = newarray (int)[1];

        $r1[0] = 4;

        return $r1;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.source.ProgressiveMediaSource $r2;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaSource createMediaSource(androidx.media3.common.MediaItem)>(r1);

        return $r2;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        return $r2;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;

        r0 := @this: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory: androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        return $r2;
    }

    private static androidx.media3.exoplayer.source.ProgressiveMediaExtractor lambda$new$0(androidx.media3.extractor.ExtractorsFactory, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.extractor.ExtractorsFactory r0;
        androidx.media3.exoplayer.analytics.PlayerId r1;
        androidx.media3.exoplayer.source.BundledExtractorsAdapter $r2;

        r0 := @parameter0: androidx.media3.extractor.ExtractorsFactory;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        $r2 = new androidx.media3.exoplayer.source.BundledExtractorsAdapter;

        specialinvoke $r2.<androidx.media3.exoplayer.source.BundledExtractorsAdapter: void <init>(androidx.media3.extractor.ExtractorsFactory)>(r0);

        return $r2;
    }

