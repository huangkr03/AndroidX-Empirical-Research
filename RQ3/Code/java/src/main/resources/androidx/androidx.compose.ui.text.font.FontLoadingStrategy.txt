androidx.compose.ui.text.font.FontLoadingStrategy
<androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>
<androidx.compose.ui.text.font.FontLoadingStrategy: int value>
<androidx.compose.ui.text.font.FontLoadingStrategy: int Blocking>
<androidx.compose.ui.text.font.FontLoadingStrategy: int OptionalLocal>
<androidx.compose.ui.text.font.FontLoadingStrategy: int Async>
    public final int getValue()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy;

        $i0 = r0.<androidx.compose.ui.text.font.FontLoadingStrategy: int value>;

        return $i0;
    }

    public static java.lang.String toString-impl(int)
    {
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        i1 = i0;

        $i2 = <androidx.compose.ui.text.font.FontLoadingStrategy: int Blocking>;

        $z0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i1, $i2);

        if $z0 == 0 goto label1;

        $r4 = "Blocking";

        goto label4;

     label1:
        $i3 = <androidx.compose.ui.text.font.FontLoadingStrategy: int OptionalLocal>;

        $z1 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label2;

        $r4 = "Optional";

        goto label4;

     label2:
        $i4 = <androidx.compose.ui.text.font.FontLoadingStrategy: int Async>;

        $z2 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i1, $i4);

        if $z2 == 0 goto label3;

        $r4 = "Async";

        goto label4;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid(value=");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r4;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy;

        $i0 = r0.<androidx.compose.ui.text.font.FontLoadingStrategy: int value>;

        $r1 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: java.lang.String toString-impl(int)>($i0);

        return $r1;
    }

    public static int hashCode-impl(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Integer: int hashCode(int)>(i0);

        return $i1;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy r0;
        int $i0, $i1;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy;

        $i0 = r0.<androidx.compose.ui.text.font.FontLoadingStrategy: int value>;

        $i1 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int hashCode-impl(int)>($i0);

        return $i1;
    }

    public static boolean equals-impl(int, java.lang.Object)
    {
        int i0, i1;
        java.lang.Object r0;
        boolean $z0;
        androidx.compose.ui.text.font.FontLoadingStrategy $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof androidx.compose.ui.text.font.FontLoadingStrategy;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (androidx.compose.ui.text.font.FontLoadingStrategy) r0;

        i1 = virtualinvoke $r1.<androidx.compose.ui.text.font.FontLoadingStrategy: int unbox-impl()>();

        if i0 == i1 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontLoadingStrategy r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<androidx.compose.ui.text.font.FontLoadingStrategy: int value>;

        $z0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl(int,java.lang.Object)>($i0, r1);

        return $z0;
    }

    private void <init>(int)
    {
        androidx.compose.ui.text.font.FontLoadingStrategy r0;
        int i0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.FontLoadingStrategy: int value> = i0;

        return;
    }

    private static int constructor-impl(int)
    {
        int i0;

        i0 := @parameter0: int;

        return i0;
    }

    public static final androidx.compose.ui.text.font.FontLoadingStrategy box-impl(int)
    {
        int i0;
        androidx.compose.ui.text.font.FontLoadingStrategy $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.compose.ui.text.font.FontLoadingStrategy;

        specialinvoke $r0.<androidx.compose.ui.text.font.FontLoadingStrategy: void <init>(int)>(i0);

        return $r0;
    }

    public final int unbox-impl()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy;

        $i0 = r0.<androidx.compose.ui.text.font.FontLoadingStrategy: int value>;

        return $i0;
    }

    public static final boolean equals-impl0(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final int access$getBlocking$cp()
    {
        int $i0;

        $i0 = <androidx.compose.ui.text.font.FontLoadingStrategy: int Blocking>;

        return $i0;
    }

    public static final int access$getOptionalLocal$cp()
    {
        int $i0;

        $i0 = <androidx.compose.ui.text.font.FontLoadingStrategy: int OptionalLocal>;

        return $i0;
    }

    public static final int access$getAsync$cp()
    {
        int $i0;

        $i0 = <androidx.compose.ui.text.font.FontLoadingStrategy: int Async>;

        return $i0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion $r0;
        int $i0, $i1, $i2;

        $r0 = new androidx.compose.ui.text.font.FontLoadingStrategy$Companion;

        specialinvoke $r0.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion> = $r0;

        $i0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int constructor-impl(int)>(0);

        <androidx.compose.ui.text.font.FontLoadingStrategy: int Blocking> = $i0;

        $i1 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int constructor-impl(int)>(1);

        <androidx.compose.ui.text.font.FontLoadingStrategy: int OptionalLocal> = $i1;

        $i2 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int constructor-impl(int)>(2);

        <androidx.compose.ui.text.font.FontLoadingStrategy: int Async> = $i2;

        return;
    }

androidx.compose.ui.text.font.FontLoadingStrategy$Companion
    private void <init>()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion r0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int getBlocking-PKNRLFQ()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy$Companion;

        $i0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int access$getBlocking$cp()>();

        return $i0;
    }

    public final int getOptionalLocal-PKNRLFQ()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy$Companion;

        $i0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int access$getOptionalLocal$cp()>();

        return $i0;
    }

    public final int getAsync-PKNRLFQ()
    {
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy$Companion;

        $i0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: int access$getAsync$cp()>();

        return $i0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.text.font.FontLoadingStrategy$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: void <init>()>();

        return;
    }

