androidx.leanback.widget.ViewsStateBundle
<androidx.leanback.widget.ViewsStateBundle: int LIMIT_DEFAULT>
<androidx.leanback.widget.ViewsStateBundle: int UNLIMITED>
<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>
<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber>
<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>
    void <init>()
    {
        androidx.leanback.widget.ViewsStateBundle r0;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy> = 0;

        r0.<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber> = 100;

        return;
    }

    void clear()
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        androidx.collection.LruCache $r1, $r2;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        $r1 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        virtualinvoke $r2.<androidx.collection.LruCache: void evictAll()>();

     label1:
        return;
    }

    void remove(int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        int i0, $i1;
        androidx.collection.LruCache $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $i1 = virtualinvoke $r2.<androidx.collection.LruCache: int size()>();

        if $i1 == 0 goto label1;

        $r3 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $r4 = staticinvoke <androidx.leanback.widget.ViewsStateBundle: java.lang.String getSaveStatesKey(int)>(i0);

        virtualinvoke $r3.<androidx.collection.LruCache: java.lang.Object remove(java.lang.Object)>($r4);

     label1:
        return;
    }

    android.os.Bundle saveAsBundle()
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        java.util.Map r1;
        android.os.Bundle r2, $r8;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        androidx.collection.LruCache $r5, $r6, $r7;
        int $i0;
        java.util.Set $r9;
        boolean $z0;
        java.lang.Object $r10, $r11, $r13;
        java.lang.String $r12;
        android.util.SparseArray $r14;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        $r5 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r5 == null goto label1;

        $r6 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $i0 = virtualinvoke $r6.<androidx.collection.LruCache: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r7 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        r1 = virtualinvoke $r7.<androidx.collection.LruCache: java.util.Map snapshot()>();

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r2 = $r8;

        $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (android.util.SparseArray) $r13;

        virtualinvoke r2.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>($r12, $r14);

        goto label3;

     label4:
        return r2;
    }

    void loadFromBundle(android.os.Bundle)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        android.os.Bundle r1;
        java.util.Iterator r2;
        java.lang.String r3;
        androidx.collection.LruCache $r4, $r5, $r8;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.util.SparseArray $r9;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        r1 := @parameter0: android.os.Bundle;

        $r4 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r4 == null goto label2;

        if r1 == null goto label2;

        $r5 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        virtualinvoke $r5.<androidx.collection.LruCache: void evictAll()>();

        $r6 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        $r8 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $r9 = virtualinvoke r1.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>(r3);

        virtualinvoke $r8.<androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r9);

        goto label1;

     label2:
        return;
    }

    int getSavePolicy()
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        $i0 = r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>;

        return $i0;
    }

    int getLimitNumber()
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        $i0 = r0.<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber>;

        return $i0;
    }

    void setSavePolicy(int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        int i0;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy> = i0;

        specialinvoke r0.<androidx.leanback.widget.ViewsStateBundle: void applyPolicyChanges()>();

        return;
    }

    void setLimitNumber(int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        int i0;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber> = i0;

        specialinvoke r0.<androidx.leanback.widget.ViewsStateBundle: void applyPolicyChanges()>();

        return;
    }

    void loadView(android.view.View, int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        android.view.View r1;
        int i0;
        java.lang.String r2;
        android.util.SparseArray r3;
        androidx.collection.LruCache $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r4 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r4 == null goto label1;

        r2 = staticinvoke <androidx.leanback.widget.ViewsStateBundle: java.lang.String getSaveStatesKey(int)>(i0);

        $r5 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $r6 = virtualinvoke $r5.<androidx.collection.LruCache: java.lang.Object remove(java.lang.Object)>(r2);

        r3 = (android.util.SparseArray) $r6;

        if r3 == null goto label1;

        virtualinvoke r1.<android.view.View: void restoreHierarchyState(android.util.SparseArray)>(r3);

     label1:
        return;
    }

    android.os.Bundle saveOnScreenView(android.os.Bundle, android.view.View, int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        android.view.View r1;
        int i0, $i1;
        java.lang.String r2;
        android.util.SparseArray r3, $r4;
        android.os.Bundle $r5, r6;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        r6 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $i1 = r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>;

        if $i1 == 0 goto label2;

        r2 = staticinvoke <androidx.leanback.widget.ViewsStateBundle: java.lang.String getSaveStatesKey(int)>(i0);

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r3 = $r4;

        virtualinvoke r1.<android.view.View: void saveHierarchyState(android.util.SparseArray)>(r3);

        if r6 != null goto label1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r6 = $r5;

     label1:
        virtualinvoke r6.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>(r2, r3);

     label2:
        return r6;
    }

    void saveOffscreenView(android.view.View, int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        android.view.View r1;
        int i0, $i1;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>;

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label1;
            default: goto label3;
        };

     label1:
        specialinvoke r0.<androidx.leanback.widget.ViewsStateBundle: void saveViewUnchecked(android.view.View,int)>(r1, i0);

        goto label3;

     label2:
        virtualinvoke r0.<androidx.leanback.widget.ViewsStateBundle: void remove(int)>(i0);

        goto label3;

     label3:
        return;
    }

    private void applyPolicyChanges()
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.collection.LruCache $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        $i0 = r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>;

        if $i0 != 2 goto label3;

        $i4 = r0.<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber>;

        if $i4 > 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label1:
        $r4 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r4 == null goto label2;

        $r6 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $i6 = virtualinvoke $r6.<androidx.collection.LruCache: int maxSize()>();

        $i7 = r0.<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber>;

        if $i6 == $i7 goto label7;

     label2:
        $r5 = new androidx.collection.LruCache;

        $i5 = r0.<androidx.leanback.widget.ViewsStateBundle: int mLimitNumber>;

        specialinvoke $r5.<androidx.collection.LruCache: void <init>(int)>($i5);

        r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates> = $r5;

        goto label7;

     label3:
        $i1 = r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>;

        if $i1 == 3 goto label4;

        $i3 = r0.<androidx.leanback.widget.ViewsStateBundle: int mSavePolicy>;

        if $i3 != 1 goto label6;

     label4:
        $r1 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r1 == null goto label5;

        $r3 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        $i2 = virtualinvoke $r3.<androidx.collection.LruCache: int maxSize()>();

        if $i2 == 2147483647 goto label7;

     label5:
        $r2 = new androidx.collection.LruCache;

        specialinvoke $r2.<androidx.collection.LruCache: void <init>(int)>(2147483647);

        r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates> = $r2;

        goto label7;

     label6:
        r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates> = null;

     label7:
        return;
    }

    private void saveViewUnchecked(android.view.View, int)
    {
        androidx.leanback.widget.ViewsStateBundle r0;
        android.view.View r1;
        int i0;
        java.lang.String r2;
        android.util.SparseArray r3, $r5;
        androidx.collection.LruCache $r4, $r6;

        r0 := @this: androidx.leanback.widget.ViewsStateBundle;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r4 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        if $r4 == null goto label1;

        r2 = staticinvoke <androidx.leanback.widget.ViewsStateBundle: java.lang.String getSaveStatesKey(int)>(i0);

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r3 = $r5;

        virtualinvoke r1.<android.view.View: void saveHierarchyState(android.util.SparseArray)>(r3);

        $r6 = r0.<androidx.leanback.widget.ViewsStateBundle: androidx.collection.LruCache mChildStates>;

        virtualinvoke $r6.<androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label1:
        return;
    }

    static java.lang.String getSaveStatesKey(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

