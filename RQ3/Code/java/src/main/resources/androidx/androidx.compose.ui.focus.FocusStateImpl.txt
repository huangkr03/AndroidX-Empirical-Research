androidx.compose.ui.focus.FocusStateImpl
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>
<androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.compose.ui.focus.FocusStateImpl r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.focus.FocusStateImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public boolean isFocused()
    {
        androidx.compose.ui.focus.FocusStateImpl r0;
        int[] $r1;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusStateImpl;

        $r1 = <androidx.compose.ui.focus.FocusStateImpl$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r0.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label3;
        };

     label1:
        $z0 = 1;

        goto label4;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $r2 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r2.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r2;

     label4:
        return $z0;
    }

    public boolean getHasFocus()
    {
        androidx.compose.ui.focus.FocusStateImpl r0;
        int[] $r1;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusStateImpl;

        $r1 = <androidx.compose.ui.focus.FocusStateImpl$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r0.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label1;
            case 6: goto label2;
            default: goto label3;
        };

     label1:
        $z0 = 1;

        goto label4;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $r2 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r2.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r2;

     label4:
        return $z0;
    }

    public boolean isCaptured()
    {
        androidx.compose.ui.focus.FocusStateImpl r0;
        int[] $r1;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusStateImpl;

        $r1 = <androidx.compose.ui.focus.FocusStateImpl$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r0.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label3;
        };

     label1:
        $z0 = 1;

        goto label4;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $r2 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r2.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r2;

     label4:
        return $z0;
    }

    public final boolean isDeactivated()
    {
        androidx.compose.ui.focus.FocusStateImpl r0;
        int[] $r1;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusStateImpl;

        $r1 = <androidx.compose.ui.focus.FocusStateImpl$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r0.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label1;
            default: goto label3;
        };

     label1:
        $z0 = 0;

        goto label4;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $r2 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r2.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r2;

     label4:
        return $z0;
    }

    public static androidx.compose.ui.focus.FocusStateImpl[] values()
    {
        androidx.compose.ui.focus.FocusStateImpl[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.compose.ui.focus.FocusStateImpl[]) $r1;

        return $r2;
    }

    public static androidx.compose.ui.focus.FocusStateImpl valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.compose.ui.focus.FocusStateImpl $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/compose/ui/focus/FocusStateImpl;", r0);

        $r2 = (androidx.compose.ui.focus.FocusStateImpl) $r1;

        return $r2;
    }

    private static final androidx.compose.ui.focus.FocusStateImpl[] $values()
    {
        androidx.compose.ui.focus.FocusStateImpl[] r0;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r2, $r3, $r4, $r5, $r6;

        r0 = newarray (androidx.compose.ui.focus.FocusStateImpl)[6];

        $r1 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        r0[0] = $r1;

        $r2 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        r0[1] = $r2;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        r0[2] = $r3;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        r0[3] = $r4;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        r0[4] = $r5;

        $r6 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        r0[5] = $r6;

        return r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusStateImpl $r0, $r1, $r2, $r3, $r4, $r5;
        androidx.compose.ui.focus.FocusStateImpl[] $r6;

        $r0 = new androidx.compose.ui.focus.FocusStateImpl;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusStateImpl: void <init>(java.lang.String,int)>("Active", 0);

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active> = $r0;

        $r1 = new androidx.compose.ui.focus.FocusStateImpl;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: void <init>(java.lang.String,int)>("ActiveParent", 1);

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent> = $r1;

        $r2 = new androidx.compose.ui.focus.FocusStateImpl;

        specialinvoke $r2.<androidx.compose.ui.focus.FocusStateImpl: void <init>(java.lang.String,int)>("Captured", 2);

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured> = $r2;

        $r3 = new androidx.compose.ui.focus.FocusStateImpl;

        specialinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: void <init>(java.lang.String,int)>("Deactivated", 3);

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated> = $r3;

        $r4 = new androidx.compose.ui.focus.FocusStateImpl;

        specialinvoke $r4.<androidx.compose.ui.focus.FocusStateImpl: void <init>(java.lang.String,int)>("DeactivatedParent", 4);

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent> = $r4;

        $r5 = new androidx.compose.ui.focus.FocusStateImpl;

        specialinvoke $r5.<androidx.compose.ui.focus.FocusStateImpl: void <init>(java.lang.String,int)>("Inactive", 5);

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive> = $r5;

        $r6 = staticinvoke <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] $values()>();

        <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] $VALUES> = $r6;

        return;
    }

androidx.compose.ui.focus.FocusStateImpl$WhenMappings
<androidx.compose.ui.focus.FocusStateImpl$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.focus.FocusStateImpl[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.compose.ui.focus.FocusStateImpl $r2, $r3, $r4, $r5, $r6, $r7;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i3] = 3;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        $i4 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i4] = 4;

        $r6 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        $i5 = virtualinvoke $r6.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i5] = 5;

        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        $i6 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i6] = 6;

        <androidx.compose.ui.focus.FocusStateImpl$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

