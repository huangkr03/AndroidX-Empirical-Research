androidx.compose.animation.core.TargetBasedAnimation
<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>
<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>
<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object initialValue>
<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object targetValue>
<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>
<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector targetValueVector>
<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>
<androidx.compose.animation.core.TargetBasedAnimation: long durationNanos>
<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector endVelocity>
<androidx.compose.animation.core.TargetBasedAnimation: int $stable>
    public void <init>(androidx.compose.animation.core.VectorizedAnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.VectorizedAnimationSpec r1, $r23, $r27;
        androidx.compose.animation.core.TwoWayConverter r2, $r6, $r11, $r16;
        java.lang.Object r3, r4, $r8, $r9, $r13, $r14, $r18, $r19;
        androidx.compose.animation.core.AnimationVector r5, $r10, $r15, $r20, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31;
        kotlin.jvm.functions.Function1 $r7, $r12, $r17;
        long $l0;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        r1 := @parameter0: androidx.compose.animation.core.VectorizedAnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec> = r1;

        r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter> = r2;

        r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object initialValue> = r3;

        r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object targetValue> = r4;

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r7 = interfaceinvoke $r6.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r8 = r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object initialValue>;

        $r9 = interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

        $r10 = (androidx.compose.animation.core.AnimationVector) $r9;

        r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialValueVector> = $r10;

        $r11 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r12 = interfaceinvoke $r11.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r13 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getTargetValue()>();

        $r14 = interfaceinvoke $r12.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r13);

        $r15 = (androidx.compose.animation.core.AnimationVector) $r14;

        r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector targetValueVector> = $r15;

        if r5 == null goto label1;

        $r22 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector copy(androidx.compose.animation.core.AnimationVector)>(r5);

        if $r22 != null goto label2;

     label1:
        $r16 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r17 = interfaceinvoke $r16.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r18 = r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object initialValue>;

        $r19 = interfaceinvoke $r17.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r18);

        $r20 = (androidx.compose.animation.core.AnimationVector) $r19;

        $r22 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>($r20);

     label2:
        r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector> = $r22;

        $r23 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        $r24 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r25 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector targetValueVector>;

        $r26 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        $l0 = interfaceinvoke $r23.<androidx.compose.animation.core.VectorizedAnimationSpec: long getDurationNanos(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($r24, $r25, $r26);

        r0.<androidx.compose.animation.core.TargetBasedAnimation: long durationNanos> = $l0;

        $r27 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        $r28 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r29 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector targetValueVector>;

        $r30 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        $r31 = interfaceinvoke $r27.<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($r28, $r29, $r30);

        r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector endVelocity> = $r31;

        return;
    }

    public void <init>(androidx.compose.animation.core.VectorizedAnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object, androidx.compose.animation.core.AnimationVector, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.VectorizedAnimationSpec r1;
        androidx.compose.animation.core.TwoWayConverter r2;
        java.lang.Object r3, r4;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r5;
        androidx.compose.animation.core.AnimationVector r6;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        r1 := @parameter0: androidx.compose.animation.core.VectorizedAnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r6 := @parameter4: androidx.compose.animation.core.AnimationVector;

        i0 := @parameter5: int;

        r5 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        specialinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.VectorizedAnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3, r4, r6);

        return;
    }

    public final androidx.compose.animation.core.VectorizedAnimationSpec getAnimationSpec$animation_core_release()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.VectorizedAnimationSpec $r1;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $r1 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        return $r1;
    }

    public androidx.compose.animation.core.TwoWayConverter getTypeConverter()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.TwoWayConverter $r1;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $r1 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        return $r1;
    }

    public final java.lang.Object getInitialValue()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $r1 = r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object initialValue>;

        return $r1;
    }

    public java.lang.Object getTargetValue()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $r1 = r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object targetValue>;

        return $r1;
    }

    public void <init>(androidx.compose.animation.core.AnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.AnimationSpec r1;
        androidx.compose.animation.core.TwoWayConverter r2;
        java.lang.Object r3, r4;
        androidx.compose.animation.core.AnimationVector r5;
        androidx.compose.animation.core.VectorizedAnimationSpec $r6;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        r1 := @parameter0: androidx.compose.animation.core.AnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        $r6 = interfaceinvoke r1.<androidx.compose.animation.core.AnimationSpec: androidx.compose.animation.core.VectorizedAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)>(r2);

        specialinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.VectorizedAnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>($r6, r2, r3, r4, r5);

        return;
    }

    public void <init>(androidx.compose.animation.core.AnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object, androidx.compose.animation.core.AnimationVector, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.AnimationSpec r1;
        androidx.compose.animation.core.TwoWayConverter r2;
        java.lang.Object r3, r4;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r5;
        androidx.compose.animation.core.AnimationVector r6;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        r1 := @parameter0: androidx.compose.animation.core.AnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r6 := @parameter4: androidx.compose.animation.core.AnimationVector;

        i0 := @parameter5: int;

        r5 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        specialinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3, r4, r6);

        return;
    }

    public boolean isInfinite()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        androidx.compose.animation.core.VectorizedAnimationSpec $r1;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $r1 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        $z0 = interfaceinvoke $r1.<androidx.compose.animation.core.VectorizedAnimationSpec: boolean isInfinite()>();

        return $z0;
    }

    public java.lang.Object getValueFromNanos(long)
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, $r2, $r3, $r4;
        int i1, i2;
        boolean $z1, $z2, $z3;
        androidx.compose.animation.core.VectorizedAnimationSpec $r5;
        androidx.compose.animation.core.TwoWayConverter $r6;
        kotlin.jvm.functions.Function1 $r7;
        float $f0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r15;
        java.lang.String $r16, $r17;
        java.lang.Object $r18;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        l0 := @parameter0: long;

        $z1 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: boolean isFinishedFromNanos(long)>(l0);

        if $z1 != 0 goto label6;

        $r5 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        $r4 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r3 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector targetValueVector>;

        $r2 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        r1 = interfaceinvoke $r5.<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, $r4, $r3, $r2);

        i2 = 0;

        i1 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label1:
        if i2 >= i1 goto label5;

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 != 0 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnimationVector cannot contain a NaN. ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Animation: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", playTimeNanos: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r6 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r7 = interfaceinvoke $r6.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r18 = interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        goto label7;

     label6:
        $r18 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getTargetValue()>();

     label7:
        return $r18;
    }

    public long getDurationNanos()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        long $l0;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $l0 = r0.<androidx.compose.animation.core.TargetBasedAnimation: long durationNanos>;

        return $l0;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityVectorFromNanos(long)
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        long l0;
        boolean $z0;
        androidx.compose.animation.core.AnimationVector $r1, $r2, $r3, $r5;
        androidx.compose.animation.core.VectorizedAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: boolean isFinishedFromNanos(long)>(l0);

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        $r3 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r2 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector targetValueVector>;

        $r1 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        $r5 = interfaceinvoke $r4.<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, $r3, $r2, $r1);

        goto label2;

     label1:
        $r5 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector endVelocity>;

     label2:
        return $r5;
    }

    public java.lang.String toString()
    {
        androidx.compose.animation.core.TargetBasedAnimation r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16;
        java.lang.Object $r3, $r6;
        androidx.compose.animation.core.AnimationVector $r9;
        androidx.compose.animation.core.Animation $r12;
        long $l0;
        androidx.compose.animation.core.VectorizedAnimationSpec $r15;
        java.lang.String $r17;

        r0 := @this: androidx.compose.animation.core.TargetBasedAnimation;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TargetBasedAnimation: ");

        $r3 = r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object initialValue>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getTargetValue()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",initial velocity: ");

        $r9 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", duration: ");

        $r12 = (androidx.compose.animation.core.Animation) r0;

        $l0 = staticinvoke <androidx.compose.animation.core.AnimationKt: long getDurationMillis(androidx.compose.animation.core.Animation)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms,animationSpec: ");

        $r15 = r0.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.VectorizedAnimationSpec animationSpec>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    static void <clinit>()
    {
        return;
    }

