androidx.loader.content.AsyncTaskLoader
<androidx.loader.content.AsyncTaskLoader: java.lang.String TAG>
<androidx.loader.content.AsyncTaskLoader: boolean DEBUG>
<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor>
<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>
<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>
<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>
<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>
<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>
    public void <init>(android.content.Context)
    {
        androidx.loader.content.AsyncTaskLoader r0;
        android.content.Context r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.loader.content.Loader: void <init>(android.content.Context)>(r1);

        r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime> = -10000L;

        return;
    }

    public void setUpdateThrottle(long)
    {
        androidx.loader.content.AsyncTaskLoader r0;
        long l0;
        byte $b1;
        android.os.Handler $r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        l0 := @parameter0: long;

        r0.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle> = l0;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        r0.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler> = $r1;

     label1:
        return;
    }

    protected void onForceLoad()
    {
        androidx.loader.content.AsyncTaskLoader r0;
        androidx.loader.content.AsyncTaskLoader$LoadTask $r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        specialinvoke r0.<androidx.loader.content.Loader: void onForceLoad()>();

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: boolean cancelLoad()>();

        $r1 = new androidx.loader.content.AsyncTaskLoader$LoadTask;

        specialinvoke $r1.<androidx.loader.content.AsyncTaskLoader$LoadTask: void <init>(androidx.loader.content.AsyncTaskLoader)>(r0);

        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = $r1;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>();

        return;
    }

    protected boolean onCancelLoad()
    {
        androidx.loader.content.AsyncTaskLoader r0;
        boolean z0, $z1, $z2, $z3;
        androidx.loader.content.AsyncTaskLoader$LoadTask $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        android.os.Handler $r8, $r12;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        $r1 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if $r1 == null goto label6;

        $z1 = virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: boolean isStarted()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void onContentChanged()>();

     label1:
        $r2 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $r2 == null goto label3;

        $r9 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $z3 = $r9.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        if $z3 == 0 goto label2;

        $r10 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $r10.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        $r12 = r0.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        $r11 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke $r12.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r11);

     label2:
        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        return 0;

     label3:
        $r3 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $z2 = $r3.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        if $z2 == 0 goto label4;

        $r6 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $r6.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        $r8 = r0.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        $r7 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke $r8.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r7);

        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        return 0;

     label4:
        $r4 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        z0 = virtualinvoke $r4.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean cancel(boolean)>(0);

        if z0 == 0 goto label5;

        $r5 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask> = $r5;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()>();

     label5:
        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        return z0;

     label6:
        return 0;
    }

    public void onCanceled(java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader r0;
        java.lang.Object r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    void executePendingTask()
    {
        androidx.loader.content.AsyncTaskLoader r0;
        long l0, $l1, $l3, $l4, $l5, $l7, $l8, $l9;
        androidx.loader.content.AsyncTaskLoader$LoadTask $r1, $r2, $r3, $r6, $r8, $r9, $r11, $r12;
        boolean $z0;
        byte $b2, $b6;
        java.util.concurrent.Executor $r4, $r5, $r7;
        android.os.Handler $r10, $r13;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        $r1 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $r1 != null goto label4;

        $r2 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if $r2 == null goto label4;

        $r3 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $z0 = $r3.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        if $z0 == 0 goto label1;

        $r11 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $r11.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        $r13 = r0.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        $r12 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke $r13.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r12);

     label1:
        $l1 = r0.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $l3 = r0.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $l5 = $l4 + $l3;

        $b6 = l0 cmp $l5;

        if $b6 >= 0 goto label2;

        $r8 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $r8.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 1;

        $r10 = r0.<androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler>;

        $r9 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $l8 = r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $l7 = r0.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $l9 = $l8 + $l7;

        virtualinvoke $r10.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>($r9, $l9);

        return;

     label2:
        $r4 = r0.<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor>;

        if $r4 != null goto label3;

        $r7 = virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor getExecutor()>();

        r0.<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor> = $r7;

     label3:
        $r6 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $r5 = r0.<androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor>;

        virtualinvoke $r6.<androidx.loader.content.AsyncTaskLoader$LoadTask: void executeOnExecutor(java.util.concurrent.Executor)>($r5);

     label4:
        return;
    }

    void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask, java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader r0;
        androidx.loader.content.AsyncTaskLoader$LoadTask r1, $r3;
        java.lang.Object r2;
        long $l0;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        r1 := @parameter0: androidx.loader.content.AsyncTaskLoader$LoadTask;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>(r2);

        $r3 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $r3 != r1 goto label1;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void rollbackContentChanged()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime> = $l0;

        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask> = null;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void deliverCancellation()>();

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>();

     label1:
        return;
    }

    void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask, java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader r0;
        androidx.loader.content.AsyncTaskLoader$LoadTask r1, $r3;
        java.lang.Object r2;
        boolean $z0;
        long $l0;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        r1 := @parameter0: androidx.loader.content.AsyncTaskLoader$LoadTask;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if $r3 == r1 goto label1;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r1, r2);

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: boolean isAbandoned()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>(r2);

        goto label3;

     label2:
        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void commitContentChanged()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime> = $l0;

        r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask> = null;

        virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>(r2);

     label3:
        return;
    }

<androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()>
    protected java.lang.Object onLoadInBackground()
    {
        androidx.loader.content.AsyncTaskLoader r0;
        java.lang.Object $r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        $r1 = virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()>();

        return $r1;
    }

    public void cancelLoadInBackground()
    {
        androidx.loader.content.AsyncTaskLoader r0;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        return;
    }

    public boolean isLoadInBackgroundCanceled()
    {
        androidx.loader.content.AsyncTaskLoader r0;
        androidx.loader.content.AsyncTaskLoader$LoadTask $r1;
        boolean $z0;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        $r1 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected java.util.concurrent.Executor getExecutor()
    {
        androidx.loader.content.AsyncTaskLoader r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        $r1 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        return $r1;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.content.AsyncTaskLoader r0;
        java.lang.String r1, $r8, $r12, $r19;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        androidx.loader.content.AsyncTaskLoader$LoadTask $r5, $r6, $r15, $r16, $r17, $r18;
        long $l0, $l2, $l3, $l4, $l6, $l7, $l8, $l9;
        byte $b1, $b5;
        java.util.concurrent.TimeUnit $r7, $r11;
        java.lang.StringBuilder $r9, $r10, $r13;
        boolean $z0, $z1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        $r5 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        if $r5 == null goto label1;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mTask=");

        $r17 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.Object)>($r17);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" waiting=");

        $r18 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask>;

        $z1 = $r18.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z1);

     label1:
        $r6 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        if $r6 == null goto label2;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCancellingTask=");

        $r15 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.Object)>($r15);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" waiting=");

        $r16 = r0.<androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask>;

        $z0 = $r16.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z0);

     label2:
        $l0 = r0.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label5;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mUpdateThrottle=");

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l2 = r0.<androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle>;

        $l3 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l2);

        $r8 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mLastLoadCompleteTime=");

        $l4 = r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $b5 = $l4 cmp -10000L;

        if $b5 != 0 goto label3;

        $r19 = "--";

        goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l7 = r0.<androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime>;

        $l8 = $l6 - $l7;

        $l9 = virtualinvoke $r11.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l8);

        $r12 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        virtualinvoke r3.<java.io.PrintWriter: void println()>();

     label5:
        return;
    }

androidx.loader.content.AsyncTaskLoader$LoadTask
<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting>
<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0>
    void <init>(androidx.loader.content.AsyncTaskLoader)
    {
        androidx.loader.content.AsyncTaskLoader$LoadTask r0;
        androidx.loader.content.AsyncTaskLoader r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: androidx.loader.content.AsyncTaskLoader;

        r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0> = r1;

        specialinvoke r0.<androidx.loader.content.ModernAsyncTask: void <init>()>();

        return;
    }

    protected java.lang.Object doInBackground()
    {
        androidx.loader.content.AsyncTaskLoader$LoadTask r0;
        androidx.loader.content.AsyncTaskLoader $r1;
        java.lang.Throwable $r2, r4;
        boolean $z0;
        java.lang.Object r3;

        r0 := @this: androidx.loader.content.AsyncTaskLoader$LoadTask;

     label1:
        $r1 = r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0>;

        r3 = virtualinvoke $r1.<androidx.loader.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>();

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        r4 = $r2;

        $z0 = virtualinvoke r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean isCancelled()>();

        if $z0 != 0 goto label4;

        throw r4;

     label4:
        return null;

        catch androidx.core.os.OperationCanceledException from label1 to label2 with label3;
    }

    protected void onPostExecute(java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Object r1;
        androidx.loader.content.AsyncTaskLoader $r2;

        r0 := @this: androidx.loader.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0>;

        virtualinvoke $r2.<androidx.loader.content.AsyncTaskLoader: void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r0, r1);

        return;
    }

    protected void onCancelled(java.lang.Object)
    {
        androidx.loader.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Object r1;
        androidx.loader.content.AsyncTaskLoader $r2;

        r0 := @this: androidx.loader.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0>;

        virtualinvoke $r2.<androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r0, r1);

        return;
    }

    public void run()
    {
        androidx.loader.content.AsyncTaskLoader$LoadTask r0;
        androidx.loader.content.AsyncTaskLoader $r1;

        r0 := @this: androidx.loader.content.AsyncTaskLoader$LoadTask;

        r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        $r1 = r0.<androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0>;

        virtualinvoke $r1.<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>();

        return;
    }

