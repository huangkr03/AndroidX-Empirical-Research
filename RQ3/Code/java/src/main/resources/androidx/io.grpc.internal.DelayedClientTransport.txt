io.grpc.internal.DelayedClientTransport
<io.grpc.internal.DelayedClientTransport: java.util.concurrent.Executor defaultAppExecutor>
<io.grpc.internal.DelayedClientTransport: io.grpc.LoadBalancer$SubchannelPicker lastPicker>
<io.grpc.internal.DelayedClientTransport: long lastPickerVersion>
<io.grpc.internal.DelayedClientTransport: io.grpc.internal.ManagedClientTransport$Listener listener>
<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>
<io.grpc.internal.DelayedClientTransport: io.grpc.InternalLogId logId>
<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>
<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportInUse>
<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportNotInUse>
<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated>
<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus>
<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>
    void <init>(java.util.concurrent.Executor, io.grpc.SynchronizationContext)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.util.concurrent.Executor $r1;
        io.grpc.SynchronizationContext $r2;
        io.grpc.InternalLogId $r3;
        java.lang.Object r4;
        java.util.LinkedHashSet r5;
        java.util.Collection r6;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: io.grpc.SynchronizationContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <io.grpc.InternalLogId: io.grpc.InternalLogId allocate(java.lang.Class,java.lang.String)>(class "Lio/grpc/internal/DelayedClientTransport;", null);

        $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.InternalLogId logId> = $r3;

        r4 = new java.lang.Object;

        specialinvoke r4.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock> = r4;

        r5 = new java.util.LinkedHashSet;

        specialinvoke r5.<java.util.LinkedHashSet: void <init>()>();

        r6 = (java.util.Collection) r5;

        $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams> = r6;

        $r0.<io.grpc.internal.DelayedClientTransport: java.util.concurrent.Executor defaultAppExecutor> = $r1;

        $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext> = $r2;

        return;
    }

    static io.grpc.internal.ManagedClientTransport$Listener access$100(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.internal.ManagedClientTransport$Listener r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.internal.ManagedClientTransport$Listener listener>;

        return r1;
    }

    static io.grpc.Status access$1000(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.Status r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus>;

        return r1;
    }

    static java.lang.Object access$500(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Object r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        return r1;
    }

    static java.lang.Runnable access$600(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated>;

        return r1;
    }

    static java.lang.Runnable access$602(io.grpc.internal.DelayedClientTransport, java.lang.Runnable)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Runnable $r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        $r1 := @parameter1: java.lang.Runnable;

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated> = $r1;

        return $r1;
    }

    static java.util.Collection access$700(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.util.Collection r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        return r1;
    }

    static java.lang.Runnable access$800(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportNotInUse>;

        return r1;
    }

    static io.grpc.SynchronizationContext access$900(io.grpc.internal.DelayedClientTransport)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.SynchronizationContext r1;

        $r0 := @parameter0: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        return r1;
    }

    private io.grpc.internal.DelayedClientTransport$PendingStream createPendingStream(io.grpc.LoadBalancer$PickSubchannelArgs, io.grpc.ClientStreamTracer[])
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.internal.DelayedClientTransport$PendingStream $r1;
        int $i0;
        io.grpc.LoadBalancer$PickSubchannelArgs $r2;
        io.grpc.ClientStreamTracer[] $r3;
        java.util.Collection $r4;
        io.grpc.SynchronizationContext $r5;
        java.lang.Runnable $r6;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r2 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r3 := @parameter1: io.grpc.ClientStreamTracer[];

        $r1 = new io.grpc.internal.DelayedClientTransport$PendingStream;

        specialinvoke $r1.<io.grpc.internal.DelayedClientTransport$PendingStream: void <init>(io.grpc.internal.DelayedClientTransport,io.grpc.LoadBalancer$PickSubchannelArgs,io.grpc.ClientStreamTracer[],io.grpc.internal.DelayedClientTransport$1)>($r0, $r2, $r3, null);

        $r4 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r0.<io.grpc.internal.DelayedClientTransport: int getPendingStreamsCount()>();

        if $i0 != 1 goto label1;

        $r5 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        $r6 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportInUse>;

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)>($r6);

     label1:
        return $r1;
    }

    public io.grpc.InternalLogId getLogId()
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.InternalLogId r1;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        r1 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.InternalLogId logId>;

        return r1;
    }

    final int getPendingStreamsCount()
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Object $r1;
        int $i0;
        java.util.Collection $r2;
        java.lang.Throwable $r3;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

     label2:
        exitmonitor $r1;

        return $i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r1;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final boolean hasPendingStreams()
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Collection $r2;
        java.lang.Throwable $r3;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

     label2:
        exitmonitor $r1;

        return $z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r1;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor, io.grpc.Metadata, io.grpc.CallOptions, io.grpc.ClientStreamTracer[])
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.ClientStreamTracer[] $r1;
        long $l0, $l1;
        io.grpc.MethodDescriptor $r2;
        io.grpc.Metadata $r3;
        io.grpc.CallOptions $r4;
        io.grpc.internal.PickSubchannelArgsImpl $r5;
        io.grpc.LoadBalancer$SubchannelPicker $r6, $r11;
        java.lang.Object $r7;
        io.grpc.Status $r8;
        io.grpc.internal.FailingClientStream $r9;
        io.grpc.SynchronizationContext $r10;
        io.grpc.internal.DelayedClientTransport$PendingStream $r12;
        byte $b2;
        io.grpc.LoadBalancer$PickResult $r13;
        boolean $z0;
        io.grpc.internal.ClientTransport $r14;
        io.grpc.internal.ClientStream $r15;
        java.lang.Throwable $r16, $r17;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r2 := @parameter0: io.grpc.MethodDescriptor;

        $r3 := @parameter1: io.grpc.Metadata;

        $r4 := @parameter2: io.grpc.CallOptions;

        $r1 := @parameter3: io.grpc.ClientStreamTracer[];

        $r5 = new io.grpc.internal.PickSubchannelArgsImpl;

     label01:
        specialinvoke $r5.<io.grpc.internal.PickSubchannelArgsImpl: void <init>(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions)>($r2, $r3, $r4);

     label02:
        $r6 = null;

        $l1 = -1L;

     label03:
        $r7 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

     label04:
        entermonitor $r7;

     label05:
        $r8 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus>;

        if $r8 == null goto label07;

        $r9 = new io.grpc.internal.FailingClientStream;

        $r8 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus>;

        specialinvoke $r9.<io.grpc.internal.FailingClientStream: void <init>(io.grpc.Status,io.grpc.ClientStreamTracer[])>($r8, $r1);

     label06:
        exitmonitor $r7;

        $r10 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r10.<io.grpc.SynchronizationContext: void drain()>();

        return $r9;

     label07:
        $r11 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.LoadBalancer$SubchannelPicker lastPicker>;

        if $r11 != null goto label09;

        $r12 = specialinvoke $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.internal.DelayedClientTransport$PendingStream createPendingStream(io.grpc.LoadBalancer$PickSubchannelArgs,io.grpc.ClientStreamTracer[])>($r5, $r1);

     label08:
        exitmonitor $r7;

        $r10 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r10.<io.grpc.SynchronizationContext: void drain()>();

        return $r12;

     label09:
        if $r6 == null goto label12;

     label10:
        $l0 = $r0.<io.grpc.internal.DelayedClientTransport: long lastPickerVersion>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label12;

        $r12 = specialinvoke $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.internal.DelayedClientTransport$PendingStream createPendingStream(io.grpc.LoadBalancer$PickSubchannelArgs,io.grpc.ClientStreamTracer[])>($r5, $r1);

     label11:
        exitmonitor $r7;

        $r10 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r10.<io.grpc.SynchronizationContext: void drain()>();

        return $r12;

     label12:
        $l1 = $r0.<io.grpc.internal.DelayedClientTransport: long lastPickerVersion>;

     label13:
        exitmonitor $r7;

     label14:
        $r13 = virtualinvoke $r11.<io.grpc.LoadBalancer$SubchannelPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)>($r5);

        $z0 = virtualinvoke $r4.<io.grpc.CallOptions: boolean isWaitForReady()>();

     label15:
        $r14 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.internal.ClientTransport getTransportFromPickResult(io.grpc.LoadBalancer$PickResult,boolean)>($r13, $z0);

        if $r14 == null goto label18;

     label16:
        $r2 = virtualinvoke $r5.<io.grpc.LoadBalancer$PickSubchannelArgs: io.grpc.MethodDescriptor getMethodDescriptor()>();

        $r3 = virtualinvoke $r5.<io.grpc.LoadBalancer$PickSubchannelArgs: io.grpc.Metadata getHeaders()>();

        $r4 = virtualinvoke $r5.<io.grpc.LoadBalancer$PickSubchannelArgs: io.grpc.CallOptions getCallOptions()>();

        $r15 = interfaceinvoke $r14.<io.grpc.internal.ClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])>($r2, $r3, $r4, $r1);

     label17:
        $r10 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r10.<io.grpc.SynchronizationContext: void drain()>();

        return $r15;

     label18:
        $r6 = $r11;

        goto label03;

     label19:
        $r16 := @caughtexception;

        exitmonitor $r7;

     label20:
        throw $r16;

     label21:
        $r17 := @caughtexception;

        $r10 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r10.<io.grpc.SynchronizationContext: void drain()>();

        goto label22;

     label22:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label20 to label21 with label21;
    }

    public final void ping(io.grpc.internal.ClientTransport$PingCallback, java.util.concurrent.Executor)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.util.concurrent.Executor $r1;
        io.grpc.internal.ClientTransport$PingCallback $r2;
        java.lang.NullPointerException r3;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r2 := @parameter0: io.grpc.internal.ClientTransport$PingCallback;

        $r1 := @parameter1: java.util.concurrent.Executor;

        r3 = new java.lang.NullPointerException;

        specialinvoke r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r3;
    }

    final void reprocess(io.grpc.LoadBalancer$SubchannelPicker)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.LoadBalancer$SubchannelPicker $r1;
        java.lang.Object $r2;
        long $l0;
        boolean $z0;
        java.util.ArrayList $r3, $r5, r19;
        java.util.Collection $r4, r21;
        java.util.Iterator $r6;
        io.grpc.internal.DelayedClientTransport$PendingStream $r7;
        io.grpc.LoadBalancer$PickSubchannelArgs $r8;
        io.grpc.LoadBalancer$PickResult $r9;
        io.grpc.CallOptions $r10;
        io.grpc.internal.ClientTransport $r11;
        java.util.concurrent.Executor $r12, $r13;
        java.lang.Runnable $r14;
        io.grpc.SynchronizationContext $r15;
        io.grpc.Status $r16;
        java.lang.Throwable $r17, $r18;
        java.util.LinkedHashSet r20;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r1 := @parameter0: io.grpc.LoadBalancer$SubchannelPicker;

        $r2 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        entermonitor $r2;

     label01:
        $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.LoadBalancer$SubchannelPicker lastPicker> = $r1;

        $l0 = $r0.<io.grpc.internal.DelayedClientTransport: long lastPickerVersion>;

        $l0 = $l0 + 1L;

        $r0.<io.grpc.internal.DelayedClientTransport: long lastPickerVersion> = $l0;

        if $r1 == null goto label14;

        $z0 = virtualinvoke $r0.<io.grpc.internal.DelayedClientTransport: boolean hasPendingStreams()>();

        if $z0 != 0 goto label02;

        goto label14;

     label02:
        $r5 = new java.util.ArrayList;

        $r3 = $r5;

        $r4 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

     label03:
        exitmonitor $r2;

        r19 = new java.util.ArrayList;

        $r5 = r19;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r2 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (io.grpc.internal.DelayedClientTransport$PendingStream) $r2;

        $r8 = staticinvoke <io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.LoadBalancer$PickSubchannelArgs access$300(io.grpc.internal.DelayedClientTransport$PendingStream)>($r7);

        $r9 = virtualinvoke $r1.<io.grpc.LoadBalancer$SubchannelPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)>($r8);

        $r8 = staticinvoke <io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.LoadBalancer$PickSubchannelArgs access$300(io.grpc.internal.DelayedClientTransport$PendingStream)>($r7);

        $r10 = virtualinvoke $r8.<io.grpc.LoadBalancer$PickSubchannelArgs: io.grpc.CallOptions getCallOptions()>();

        $z0 = virtualinvoke $r10.<io.grpc.CallOptions: boolean isWaitForReady()>();

        $r11 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.internal.ClientTransport getTransportFromPickResult(io.grpc.LoadBalancer$PickResult,boolean)>($r9, $z0);

        if $r11 == null goto label04;

        $r12 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.concurrent.Executor defaultAppExecutor>;

        $r13 = virtualinvoke $r10.<io.grpc.CallOptions: java.util.concurrent.Executor getExecutor()>();

        if $r13 == null goto label05;

        $r12 = virtualinvoke $r10.<io.grpc.CallOptions: java.util.concurrent.Executor getExecutor()>();

     label05:
        $r14 = staticinvoke <io.grpc.internal.DelayedClientTransport$PendingStream: java.lang.Runnable access$400(io.grpc.internal.DelayedClientTransport$PendingStream,io.grpc.internal.ClientTransport)>($r7, $r11);

        if $r14 == null goto label06;

        interfaceinvoke $r12.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r14);

     label06:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label04;

     label07:
        $r2 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        entermonitor $r2;

     label08:
        $z0 = virtualinvoke $r0.<io.grpc.internal.DelayedClientTransport: boolean hasPendingStreams()>();

        if $z0 != 0 goto label10;

     label09:
        exitmonitor $r2;

        return;

     label10:
        $r4 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        r21 = (java.util.Collection) $r5;

        interfaceinvoke $r4.<java.util.Collection: boolean removeAll(java.util.Collection)>(r21);

        $r4 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label11;

        r20 = new java.util.LinkedHashSet;

        specialinvoke r20.<java.util.LinkedHashSet: void <init>()>();

        $r4 = (java.util.Collection) r20;

        $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams> = $r4;

     label11:
        $z0 = virtualinvoke $r0.<io.grpc.internal.DelayedClientTransport: boolean hasPendingStreams()>();

        if $z0 != 0 goto label12;

        $r15 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        $r14 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportNotInUse>;

        virtualinvoke $r15.<io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)>($r14);

        $r16 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus>;

        if $r16 == null goto label12;

        $r14 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated>;

        if $r14 == null goto label12;

        $r15 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r15.<io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)>($r14);

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated> = null;

     label12:
        exitmonitor $r2;

        $r15 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r15.<io.grpc.SynchronizationContext: void drain()>();

        return;

     label13:
        $r17 := @caughtexception;

        exitmonitor $r2;

        throw $r17;

     label14:
        exitmonitor $r2;

        return;

     label15:
        $r18 := @caughtexception;

     label16:
        exitmonitor $r2;

        goto label17;

     label17:
        throw $r18;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void shutdown(io.grpc.Status)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Object $r1;
        io.grpc.internal.DelayedClientTransport$4 $r2;
        boolean $z0;
        io.grpc.Status $r3, $r4;
        io.grpc.SynchronizationContext $r5;
        java.lang.Runnable $r6;
        java.lang.Throwable $r7;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r3 := @parameter0: io.grpc.Status;

        $r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r4 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus>;

        if $r4 == null goto label3;

     label2:
        exitmonitor $r1;

        return;

     label3:
        $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus> = $r3;

        $r5 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        $r2 = new io.grpc.internal.DelayedClientTransport$4;

        specialinvoke $r2.<io.grpc.internal.DelayedClientTransport$4: void <init>(io.grpc.internal.DelayedClientTransport,io.grpc.Status)>($r0, $r3);

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)>($r2);

        $z0 = virtualinvoke $r0.<io.grpc.internal.DelayedClientTransport: boolean hasPendingStreams()>();

        if $z0 != 0 goto label4;

        $r6 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated>;

        if $r6 == null goto label4;

        $r5 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)>($r6);

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated> = null;

     label4:
        exitmonitor $r1;

        $r5 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void drain()>();

        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public final void shutdownNow(io.grpc.Status)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        java.lang.Runnable $r1, $r10;
        io.grpc.internal.ClientStreamListener$RpcProgress $r2;
        io.grpc.Status $r3;
        java.lang.Object $r4;
        java.util.Collection $r5, r14;
        boolean $z0;
        java.util.List $r6;
        java.util.Iterator $r7;
        io.grpc.internal.DelayedClientTransport$PendingStream $r8;
        io.grpc.ClientStreamTracer[] $r9;
        io.grpc.SynchronizationContext $r11;
        java.lang.Throwable $r12;
        io.grpc.internal.FailingClientStream r13;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r3 := @parameter0: io.grpc.Status;

        virtualinvoke $r0.<io.grpc.internal.DelayedClientTransport: void shutdown(io.grpc.Status)>($r3);

        $r4 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Object lock>;

        entermonitor $r4;

     label1:
        $r5 = $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams>;

        $r1 = $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated>;

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated> = null;

        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r14 = (java.util.Collection) $r6;

        $r0.<io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams> = r14;

     label2:
        exitmonitor $r4;

        if $r1 == null goto label7;

        $r7 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (io.grpc.internal.DelayedClientTransport$PendingStream) $r4;

        r13 = new io.grpc.internal.FailingClientStream;

        $r2 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress REFUSED>;

        $r9 = staticinvoke <io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.ClientStreamTracer[] access$200(io.grpc.internal.DelayedClientTransport$PendingStream)>($r8);

        specialinvoke r13.<io.grpc.internal.FailingClientStream: void <init>(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.ClientStreamTracer[])>($r3, $r2, $r9);

        $r10 = virtualinvoke $r8.<io.grpc.internal.DelayedClientTransport$PendingStream: java.lang.Runnable setStream(io.grpc.internal.ClientStream)>(r13);

        if $r10 == null goto label3;

        interfaceinvoke $r10.<java.lang.Runnable: void run()>();

        goto label3;

     label4:
        $r11 = $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r11.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return;

     label5:
        $r12 := @caughtexception;

        exitmonitor $r4;

        goto label6;

     label6:
        throw $r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public final java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener)
    {
        io.grpc.internal.DelayedClientTransport $r0;
        io.grpc.internal.ManagedClientTransport$Listener $r1;
        io.grpc.internal.DelayedClientTransport$1 $r2;
        io.grpc.internal.DelayedClientTransport$2 $r3;
        io.grpc.internal.DelayedClientTransport$3 $r4;

        $r0 := @this: io.grpc.internal.DelayedClientTransport;

        $r1 := @parameter0: io.grpc.internal.ManagedClientTransport$Listener;

        $r0.<io.grpc.internal.DelayedClientTransport: io.grpc.internal.ManagedClientTransport$Listener listener> = $r1;

        $r2 = new io.grpc.internal.DelayedClientTransport$1;

        specialinvoke $r2.<io.grpc.internal.DelayedClientTransport$1: void <init>(io.grpc.internal.DelayedClientTransport,io.grpc.internal.ManagedClientTransport$Listener)>($r0, $r1);

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportInUse> = $r2;

        $r3 = new io.grpc.internal.DelayedClientTransport$2;

        specialinvoke $r3.<io.grpc.internal.DelayedClientTransport$2: void <init>(io.grpc.internal.DelayedClientTransport,io.grpc.internal.ManagedClientTransport$Listener)>($r0, $r1);

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportNotInUse> = $r3;

        $r4 = new io.grpc.internal.DelayedClientTransport$3;

        specialinvoke $r4.<io.grpc.internal.DelayedClientTransport$3: void <init>(io.grpc.internal.DelayedClientTransport,io.grpc.internal.ManagedClientTransport$Listener)>($r0, $r1);

        $r0.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated> = $r4;

        return null;
    }

