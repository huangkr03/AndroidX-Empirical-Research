androidx.compose.ui.test.SemanticsNodeInteractionCollection
<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext testContext>
<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean useUnmergedTree>
<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector selector>
<androidx.compose.ui.test.SemanticsNodeInteractionCollection: java.util.List nodeIds>
<androidx.compose.ui.test.SemanticsNodeInteractionCollection: int $stable>
    public void <init>(androidx.compose.ui.test.TestContext, boolean, androidx.compose.ui.test.SemanticsSelector)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        androidx.compose.ui.test.TestContext r1;
        boolean z0;
        androidx.compose.ui.test.SemanticsSelector r2;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        r1 := @parameter0: androidx.compose.ui.test.TestContext;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.compose.ui.test.SemanticsSelector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "selector");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext testContext> = r1;

        r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean useUnmergedTree> = z0;

        r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector selector> = r2;

        return;
    }

    public final androidx.compose.ui.test.TestContext getTestContext$ui_test_release()
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        androidx.compose.ui.test.TestContext $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $r1 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext testContext>;

        return $r1;
    }

    public final boolean getUseUnmergedTree$ui_test_release()
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $z0 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean useUnmergedTree>;

        return $z0;
    }

    public final androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        androidx.compose.ui.test.SemanticsSelector $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $r1 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector selector>;

        return $r1;
    }

    public void <init>(androidx.compose.ui.test.TestContext, boolean, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        androidx.compose.ui.test.TestContext r1;
        boolean z0;
        androidx.compose.ui.test.SemanticsMatcher r2;
        androidx.compose.ui.test.SemanticsSelector $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        r1 := @parameter0: androidx.compose.ui.test.TestContext;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "matcher");

        $r3 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector SemanticsSelector(androidx.compose.ui.test.SemanticsMatcher)>(r2);

        specialinvoke r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>(r1, z0, $r3);

        return;
    }

    public final java.util.List fetchSemanticsNodes(boolean, java.lang.String)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        boolean z0, $z2, $z3, $z5, $z10, $z13;
        java.lang.String r1, $r22;
        java.util.Iterator r2, $r29;
        java.lang.Object r3, $r30;
        androidx.compose.ui.semantics.SemanticsNode r4, r31;
        java.util.Collection r5, r26, $r28;
        java.util.List $r6, $r9, $r10, $r15, $r17, $r19, $r20;
        androidx.compose.ui.test.TestContext $r7, $r12;
        java.util.ArrayList $r8, $r16;
        int $i0, $i1, $i2;
        java.lang.Integer $r11, $r21;
        androidx.compose.ui.test.SemanticsSelector $r13;
        java.lang.Iterable $r14, $r18, $r24, $r27;
        androidx.compose.ui.test.SelectionResult $r23;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: java.util.List nodeIds>;

        if $r6 != null goto label4;

        $r13 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector selector>;

        $r12 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext testContext>;

        $z5 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean useUnmergedTree>;

        $r14 = virtualinvoke $r12.<androidx.compose.ui.test.TestContext: java.lang.Iterable getAllSemanticsNodes$ui_test_release(boolean,boolean)>(z0, $z5);

        $r22 = r1;

        if r1 != null goto label1;

        $r22 = "";

     label1:
        $r23 = virtualinvoke $r13.<androidx.compose.ui.test.SemanticsSelector: androidx.compose.ui.test.SelectionResult map(java.lang.Iterable,java.lang.String)>($r14, $r22);

        $r15 = virtualinvoke $r23.<androidx.compose.ui.test.SelectionResult: java.util.List getSelectedNodes()>();

        $r24 = (java.lang.Iterable) $r15;

        $r16 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r24, 10);

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i1);

        r26 = (java.util.Collection) $r16;

        r2 = interfaceinvoke $r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.ui.semantics.SemanticsNode) r3;

        r5 = r26;

        $i2 = virtualinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r21);

        goto label2;

     label3:
        $r17 = (java.util.List) r26;

        $r18 = (java.lang.Iterable) $r17;

        $r19 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r18);

        r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: java.util.List nodeIds> = $r19;

        $r20 = virtualinvoke $r23.<androidx.compose.ui.test.SelectionResult: java.util.List getSelectedNodes()>();

        return $r20;

     label4:
        $r7 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext testContext>;

        $z2 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean useUnmergedTree>;

        $r27 = virtualinvoke $r7.<androidx.compose.ui.test.TestContext: java.lang.Iterable getAllSemanticsNodes$ui_test_release(boolean,boolean)>(z0, $z2);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r28 = (java.util.Collection) $r8;

        $r29 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z13 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label6;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (androidx.compose.ui.semantics.SemanticsNode) $r30;

        $r10 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: java.util.List nodeIds>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r10);

        $i0 = virtualinvoke r31.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z3 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z3 == 0 goto label5;

        interfaceinvoke $r28.<java.util.Collection: boolean add(java.lang.Object)>($r30);

        goto label5;

     label6:
        $r9 = (java.util.List) $r28;

        return $r9;
    }

    public static java.util.List fetchSemanticsNodes$default(androidx.compose.ui.test.SemanticsNodeInteractionCollection, boolean, java.lang.String, int, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.util.List $r2;
        boolean z0;
        java.lang.String r3;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        z0 := @parameter1: boolean;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: java.util.List fetchSemanticsNodes(boolean,java.lang.String)>(z0, r3);

        return $r2;
    }

    public final androidx.compose.ui.test.SemanticsNodeInteraction get(int)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        int i0;
        androidx.compose.ui.test.SemanticsNodeInteraction $r1;
        androidx.compose.ui.test.SemanticsSelector $r2, $r4;
        androidx.compose.ui.test.TestContext $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        i0 := @parameter0: int;

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteraction;

        $r3 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext testContext>;

        $z0 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean useUnmergedTree>;

        $r2 = r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector selector>;

        $r4 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addIndexSelector(androidx.compose.ui.test.SemanticsSelector,int)>($r2, i0);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteraction: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r3, $z0, $r4);

        return $r1;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.test.SemanticsNodeInteractionCollection: int $stable> = 8;

        return;
    }

