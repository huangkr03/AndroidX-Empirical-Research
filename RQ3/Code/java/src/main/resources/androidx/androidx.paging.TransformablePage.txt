androidx.paging.TransformablePage
<androidx.paging.TransformablePage: androidx.paging.TransformablePage$Companion Companion>
<androidx.paging.TransformablePage: int[] originalPageOffsets>
<androidx.paging.TransformablePage: java.util.List data>
<androidx.paging.TransformablePage: int hintOriginalPageOffset>
<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>
<androidx.paging.TransformablePage: androidx.paging.TransformablePage EMPTY_INITIAL_PAGE>
    public void <init>(int[], java.util.List, int, java.util.List)
    {
        androidx.paging.TransformablePage r0;
        int[] r1, r21, r22;
        java.util.List r2, r3, $r4, $r7, $r10, $r16, $r17;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.IllegalArgumentException $r13, $r18;
        java.lang.String $r14, $r19, r23, r24;
        java.lang.Throwable $r15, $r20;
        boolean z0, $z2, $z3, z4, z5, z6, $z8, z9, z10, z11;

        r0 := @this: androidx.paging.TransformablePage;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "originalPageOffsets");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "data");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.TransformablePage: int[] originalPageOffsets> = r1;

        r0.<androidx.paging.TransformablePage: java.util.List data> = r2;

        r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset> = i0;

        r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices> = r3;

        r21 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        z0 = 0;

        r22 = r21;

        $i1 = lengthof r22;

        if $i1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z4 = $z3;

        z5 = 0;

        z6 = 0;

        if z4 != 0 goto label5;

        r23 = "originalPageOffsets cannot be empty when constructing TransformablePage";

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        $r20 = (java.lang.Throwable) $r18;

        throw $r20;

     label5:
        $r4 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        if $r4 == null goto label6;

        $r16 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        $i4 = interfaceinvoke $r16.<java.util.List: int size()>();

        $r17 = r0.<androidx.paging.TransformablePage: java.util.List data>;

        $i5 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i4 != $i5 goto label7;

     label6:
        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        z9 = $z8;

        z10 = 0;

        z11 = 0;

        if z9 != 0 goto label9;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("If originalIndices (size = ");

        $r7 = virtualinvoke r0.<androidx.paging.TransformablePage: java.util.List getHintOriginalIndices()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is provided, it must be same length as data (size = ");

        $r10 = virtualinvoke r0.<androidx.paging.TransformablePage: java.util.List getData()>();

        $i3 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        r24 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label9:
        return;
    }

    public final int[] getOriginalPageOffsets()
    {
        androidx.paging.TransformablePage r0;
        int[] $r1;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        return $r1;
    }

    public final java.util.List getData()
    {
        androidx.paging.TransformablePage r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = r0.<androidx.paging.TransformablePage: java.util.List data>;

        return $r1;
    }

    public final int getHintOriginalPageOffset()
    {
        androidx.paging.TransformablePage r0;
        int $i0;

        r0 := @this: androidx.paging.TransformablePage;

        $i0 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        return $i0;
    }

    public final java.util.List getHintOriginalIndices()
    {
        androidx.paging.TransformablePage r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        return $r1;
    }

    public void <init>(int, java.util.List)
    {
        androidx.paging.TransformablePage r0;
        int i0;
        java.util.List r1;
        int[] r2;

        r0 := @this: androidx.paging.TransformablePage;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        r2 = newarray (int)[1];

        r2[0] = i0;

        specialinvoke r0.<androidx.paging.TransformablePage: void <init>(int[],java.util.List,int,java.util.List)>(r2, r1, i0, null);

        return;
    }

    public final androidx.paging.ViewportHint$Access viewportHintFor(int, int, int, int, int)
    {
        androidx.paging.TransformablePage r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.util.List r1, $r5;
        kotlin.ranges.IntRange r2;
        androidx.paging.ViewportHint$Access $r3;
        java.util.Collection $r4;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.Number $r7;

        r0 := @this: androidx.paging.TransformablePage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r3 = new androidx.paging.ViewportHint$Access;

        $i5 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        r1 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        if r1 != null goto label1;

        $z1 = 0;

        goto label4;

     label1:
        $r4 = (java.util.Collection) r1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)>($r4);

        if r2 != null goto label2;

        $z1 = 0;

        goto label4;

     label2:
        $z0 = virtualinvoke r2.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        if $z0 != 1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z1 == 0 goto label5;

        $r5 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (java.lang.Number) $r6;

        $i6 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        goto label6;

     label5:
        $i6 = i0;

     label6:
        specialinvoke $r3.<androidx.paging.ViewportHint$Access: void <init>(int,int,int,int,int,int)>($i5, $i6, i1, i2, i3, i4);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.paging.TransformablePage r0, $r4, $r5, $r6, $r9, $r10;
        java.lang.Object r1, r14;
        int[] r2, r16;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r3, $r15;
        java.util.List $r7, $r8, $r11, $r12;
        int $i0, $i1;
        java.lang.NullPointerException $r13;

        r0 := @this: androidx.paging.TransformablePage;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r14 = r1;

        if r14 != null goto label2;

        $r15 = null;

        goto label3;

     label2:
        $r15 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

     label3:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r15);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        if r1 != null goto label5;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.paging.TransformablePage<*>");

        throw $r13;

     label5:
        $r4 = (androidx.paging.TransformablePage) r1;

        r16 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        $r5 = (androidx.paging.TransformablePage) r1;

        r2 = $r5.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        z0 = 0;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r16, r2);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        $r8 = r0.<androidx.paging.TransformablePage: java.util.List data>;

        $r6 = (androidx.paging.TransformablePage) r1;

        $r7 = $r6.<androidx.paging.TransformablePage: java.util.List data>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 != 0 goto label7;

        return 0;

     label7:
        $i1 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        $r9 = (androidx.paging.TransformablePage) r1;

        $i0 = $r9.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        if $i1 == $i0 goto label8;

        return 0;

     label8:
        $r12 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        $r10 = (androidx.paging.TransformablePage) r1;

        $r11 = $r10.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z4 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        androidx.paging.TransformablePage r0;
        java.util.List $r1, r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, $i8, i9, i10;
        int[] r2;
        boolean z0;

        r0 := @this: androidx.paging.TransformablePage;

        r2 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        z0 = 0;

        i5 = staticinvoke <java.util.Arrays: int hashCode(int[])>(r2);

        $i0 = 31 * i5;

        $r1 = r0.<androidx.paging.TransformablePage: java.util.List data>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i6 = $i0 + $i1;

        $i3 = 31 * i6;

        $i2 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        i7 = $i3 + $i2;

        $i4 = 31 * i7;

        r3 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        if r3 != null goto label1;

        $i8 = 0;

        goto label2;

     label1:
        i9 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        $i8 = i9;

     label2:
        i10 = $i4 + $i8;

        return i10;
    }

    public final int[] component1()
    {
        androidx.paging.TransformablePage r0;
        int[] $r1;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        return $r1;
    }

    public final java.util.List component2()
    {
        androidx.paging.TransformablePage r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = r0.<androidx.paging.TransformablePage: java.util.List data>;

        return $r1;
    }

    public final int component3()
    {
        androidx.paging.TransformablePage r0;
        int $i0;

        r0 := @this: androidx.paging.TransformablePage;

        $i0 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        return $i0;
    }

    public final java.util.List component4()
    {
        androidx.paging.TransformablePage r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        return $r1;
    }

    public final androidx.paging.TransformablePage copy(int[], java.util.List, int, java.util.List)
    {
        androidx.paging.TransformablePage r0, $r4;
        int[] r1;
        java.util.List r2, r3;
        int i0;

        r0 := @this: androidx.paging.TransformablePage;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "originalPageOffsets");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "data");

        $r4 = new androidx.paging.TransformablePage;

        specialinvoke $r4.<androidx.paging.TransformablePage: void <init>(int[],java.util.List,int,java.util.List)>(r1, r2, i0, r3);

        return $r4;
    }

    public static androidx.paging.TransformablePage copy$default(androidx.paging.TransformablePage, int[], java.util.List, int, java.util.List, int, java.lang.Object)
    {
        androidx.paging.TransformablePage r0, $r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object r1;
        int[] r3;
        java.util.List r4, r5;

        r0 := @parameter0: androidx.paging.TransformablePage;

        r3 := @parameter1: int[];

        r4 := @parameter2: java.util.List;

        i5 := @parameter3: int;

        r5 := @parameter4: java.util.List;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<androidx.paging.TransformablePage: java.util.List data>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        i5 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

     label4:
        $r2 = virtualinvoke r0.<androidx.paging.TransformablePage: androidx.paging.TransformablePage copy(int[],java.util.List,int,java.util.List)>(r3, r4, i5, r5);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.paging.TransformablePage r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14;
        int[] $r3;
        java.lang.String $r4, $r15;
        java.util.List $r7, $r12;
        int $i0;

        r0 := @this: androidx.paging.TransformablePage;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TransformablePage(originalPageOffsets=");

        $r3 = r0.<androidx.paging.TransformablePage: int[] originalPageOffsets>;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r7 = r0.<androidx.paging.TransformablePage: java.util.List data>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hintOriginalPageOffset=");

        $i0 = r0.<androidx.paging.TransformablePage: int hintOriginalPageOffset>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hintOriginalIndices=");

        $r12 = r0.<androidx.paging.TransformablePage: java.util.List hintOriginalIndices>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public static final androidx.paging.TransformablePage access$getEMPTY_INITIAL_PAGE$cp()
    {
        androidx.paging.TransformablePage $r0;

        $r0 = <androidx.paging.TransformablePage: androidx.paging.TransformablePage EMPTY_INITIAL_PAGE>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.paging.TransformablePage$Companion $r0;
        androidx.paging.TransformablePage $r1;
        java.util.List $r2;

        $r0 = new androidx.paging.TransformablePage$Companion;

        specialinvoke $r0.<androidx.paging.TransformablePage$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.TransformablePage: androidx.paging.TransformablePage$Companion Companion> = $r0;

        $r1 = new androidx.paging.TransformablePage;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r1.<androidx.paging.TransformablePage: void <init>(int,java.util.List)>(0, $r2);

        <androidx.paging.TransformablePage: androidx.paging.TransformablePage EMPTY_INITIAL_PAGE> = $r1;

        return;
    }

androidx.paging.TransformablePage$Companion
    private void <init>()
    {
        androidx.paging.TransformablePage$Companion r0;

        r0 := @this: androidx.paging.TransformablePage$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.paging.TransformablePage empty()
    {
        androidx.paging.TransformablePage$Companion r0;
        androidx.paging.TransformablePage $r1;

        r0 := @this: androidx.paging.TransformablePage$Companion;

        $r1 = virtualinvoke r0.<androidx.paging.TransformablePage$Companion: androidx.paging.TransformablePage getEMPTY_INITIAL_PAGE()>();

        return $r1;
    }

    public final androidx.paging.TransformablePage getEMPTY_INITIAL_PAGE()
    {
        androidx.paging.TransformablePage$Companion r0;
        androidx.paging.TransformablePage $r1;

        r0 := @this: androidx.paging.TransformablePage$Companion;

        $r1 = staticinvoke <androidx.paging.TransformablePage: androidx.paging.TransformablePage access$getEMPTY_INITIAL_PAGE$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.TransformablePage$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.TransformablePage$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.TransformablePage$Companion: void <init>()>();

        return;
    }

