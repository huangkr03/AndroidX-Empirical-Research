androidx.test.espresso.remote.internal.deps.aidl.Codecs
<androidx.test.espresso.remote.internal.deps.aidl.Codecs: java.lang.ClassLoader CLASS_LOADER>
    public static android.os.Parcelable createParcelable(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Parcelable $r3;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r3 = (android.os.Parcelable) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;

        $r0 = class "Landroidx/test/espresso/remote/internal/deps/aidl/Codecs;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        <androidx.test.espresso.remote.internal.deps.aidl.Codecs: java.lang.ClassLoader CLASS_LOADER> = $r1;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.aidl.Codecs r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.aidl.Codecs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void enforceNoDataAvail(android.os.Parcel)
    {
        android.os.BadParcelableException r0;
        java.lang.StringBuilder r1, $r2, $r3;
        java.lang.String $r4;
        android.os.Parcel r5;
        int i0;

        r5 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r5.<android.os.Parcel: int dataAvail()>();

        if i0 <= 0 goto label1;

        r0 = new android.os.BadParcelableException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel data not fully consumed, unread size: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.os.BadParcelableException: void <init>(java.lang.String)>($r4);

        throw r0;

     label1:
        return;
    }

    public static void writeBoolean(android.os.Parcel, boolean)
    {
        android.os.Parcel r0;
        boolean z0;
        byte b0;

        r0 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b0);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public static void writeParcelable(android.os.Parcel, android.os.Parcelable)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, 0);

        return;
    }

    public static boolean createBoolean(android.os.Parcel)
    {
        int $i0;
        android.os.Parcel r0;
        boolean z0;

        r0 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

