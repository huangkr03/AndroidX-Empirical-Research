androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: java.util.logging.Logger logger>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean serializationDeterministic>
    public static int computeBoolSize(int, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)>(z0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeByteArraySizeNoTag(byte[])
    {
        byte[] r0;
        int $i0, $i1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeBytesSize(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        int i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeBytesSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBytesSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        int $i0, $i1;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeDoubleSize(int, double)
    {
        int i0, $i1, $i2, $i3;
        double d0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)>(d0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double d0;

        d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>(i0);

        return $i1;
    }

    public static int computeFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int i0, $i1, $i2, $i3;
        float f0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)>(f0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float f0;

        f0 := @parameter0: float;

        return 4;
    }

    static int computeGroupSize(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r1;
        int $i0, $i1, $i2, i3, i4;

        i3 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        i4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i3);

        $i0 = i4 + i4;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeGroupSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite,androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r0, r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public static int computeGroupSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        return $i0;
    }

    static int computeGroupSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r1;
        androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r2;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        $r2 = (androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r0;

        $i0 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r1);

        return $i0;
    }

    public static int computeInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        return $i1;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l0);

        return $i1;
    }

    public static int computeLazyFieldMessageSetExtensionSize(int, androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite;

        i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = i1 + i1;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLazyFieldSize(int,androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeLazyFieldSize(int, androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)
    {
        int i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLazyFieldSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeLazyFieldSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite r0;
        int $i0, $i1;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.LazyFieldLite: int getSerializedSize()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computeLengthDelimitedFieldSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        $i2 = $i1 + i0;

        return $i2;
    }

    public static int computeMessageSetExtensionSize(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = i1 + i1;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeMessageSize(int,androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeMessageSize(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        int i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeMessageSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    static int computeMessageSize(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        int i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeMessageSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite,androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r0, r1);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeMessageSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        int $i0, $i1;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computeMessageSizeNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r1;
        androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r2;
        int $i0, $i1;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        $r2 = (androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r0;

        $i0 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r1);

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computePreferredBufferSize(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 <= 4096 goto label1;

        return 4096;

     label1:
        return i0;
    }

    public static int computeRawMessageSetExtensionSize(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = i1 + i1;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeBytesSize(int,androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeSFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        return $i2;
    }

    public static int computeSInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        long l0, $l1;
        int $i2;

        l0 := @parameter0: long;

        $l1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        return $i2;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        int i0, $i1, i2;
        androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException $r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;
        java.lang.String r3;

        r3 := @parameter0: java.lang.String;

     label1:
        i0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r3);

     label2:
        i2 = i0;

     label3:
        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>(i2);

        return $i1;

     label4:
        $r0 := @caughtexception;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        i2 = lengthof $r2;

        goto label3;

        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label1 to label2 with label4;
    }

    public static int computeTagSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, 0);

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        return $i2;
    }

    public static int computeUInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i2 = i0 & -16384;

        if $i2 != 0 goto label2;

        return 2;

     label2:
        $i3 = i0 & -2097152;

        if $i3 != 0 goto label3;

        return 3;

     label3:
        $i4 = i0 & -268435456;

        if $i4 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeUInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        long l0, $l1, $l4, $l6, $l8, l11, l14;
        byte $b2, $b3, $b5, $b7, $b9, b12;
        int $i10, i13, i15;

        l0 := @parameter0: long;

        $l1 = l0 & -128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label2;

        return 10;

     label2:
        $l4 = l0 & -34359738368L;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label7;

        l11 = l0 >>> 28;

        b12 = 6;

     label3:
        $l6 = l11 & -2097152L;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label6;

        i13 = b12 + 2;

        l14 = l11 >>> 14;

        i15 = i13;

     label4:
        $l8 = l14 & -16384L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label5;

        $i10 = i15 + 1;

        return $i10;

     label5:
        return i15;

     label6:
        l14 = l11;

        i15 = b12;

        goto label4;

     label7:
        l11 = l0;

        b12 = 2;

        goto label3;
    }

    public static int encodeZigZag32(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i2 = i0 + i0;

        $i1 = i0 >> 31;

        $i3 = $i2 ^ $i1;

        return $i3;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int spaceLeft()>
    public static long encodeZigZag64(long)
    {
        long l0, $l1, $l2, $l3;

        l0 := @parameter0: long;

        $l2 = l0 + l0;

        $l1 = l0 >> 63;

        $l3 = $l2 ^ $l1;

        return $l3;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[])
    {
        byte[] r0;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r1;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void <init>(java.io.OutputStream,int)>(r0, i0);

        return r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void <init>(byte[],int,int)>(r0, i0, i1);

        return r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        $r0 = class "Landroidx/test/espresso/remote/internal/deps/protobuf/CodedOutputStream;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: java.util.logging.Logger logger> = $r2;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS> = $z0;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream-IA r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void <init>()>();

        return;
    }

    public final void checkNoSpaceLeft()
    {
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        java.lang.IllegalStateException r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int spaceLeft()>();

        if $i0 == 0 goto label1;

        r1 = new java.lang.IllegalStateException;

        specialinvoke r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw r1;

     label1:
        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void flush()>
    final void inefficientWriteStringNoTag(java.lang.String, androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        java.nio.charset.Charset $r3;
        int $i0, $i1;
        java.lang.Throwable $r4, r8;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r5;
        java.lang.String r6;
        byte[] r7;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r9;

        r5 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: java.util.logging.Logger logger>;

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r2.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", r0);

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        r7 = virtualinvoke r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

     label1:
        $i0 = lengthof r7;

        virtualinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r8 = $r4;

        r9 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke r9.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>(r8);

        throw r9;

     label4:
        $i1 = lengthof r7;

        virtualinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>(r7, 0, $i1);

        return;

     label5:
        nop;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label4 to label5 with label3;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void write(byte)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeBool(int,boolean)>
    public final void writeBoolNoTag(boolean) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        boolean z0;
        byte b0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void write(byte)>(b0);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public final void writeByteArrayNoTag(byte[]) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>(r1, 0, $i0);

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeBytes(int,androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeBytesNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>
    public final void writeDouble(int, double) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        double d0;
        long $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64(int,long)>(i0, $l1);

        return;
    }

    public final void writeDoubleNoTag(double) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        double d0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeEnum(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32(int,int)>(i0, i1);

        return;
    }

    public final void writeEnumNoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32NoTag(int)>(i0);

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32(int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64(int,long)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>
    public final void writeFloat(int, float) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, $i1;
        float f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32(int,int)>(i0, $i1);

        return;
    }

    public final void writeFloatNoTag(float) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        float f0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeGroup(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeGroupNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 4);

        return;
    }

    final void writeGroup(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeGroupNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite,androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r1, r2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 4);

        return;
    }

    public final void writeGroupNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r0);

        return;
    }

    final void writeGroupNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,androidx.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r3);

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32(int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32NoTag(int)>
    public final void writeInt64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        long l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64(int,long)>(i0, l1);

        return;
    }

    public final void writeInt64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>(l0);

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessage(int,androidx.test.espresso.remote.internal.deps.protobuf.MessageLite,androidx.test.espresso.remote.internal.deps.protobuf.Schema)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessageSetExtension(int,androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeRawMessageSetExtension(int,androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>
    public final void writeSFixed32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32(int,int)>(i0, i1);

        return;
    }

    public final void writeSFixed32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>(i0);

        return;
    }

    public final void writeSFixed64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        long l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64(int,long)>(i0, l1);

        return;
    }

    public final void writeSFixed64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>(l0);

        return;
    }

    public final void writeSInt32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32(int,int)>(i0, $i2);

        return;
    }

    public final void writeSInt32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public final void writeSInt64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        long l1, $l2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $l2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64(int,long)>(i0, $l2);

        return;
    }

    public final void writeSInt64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        long l0, $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        $l1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l1);

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeStringNoTag(java.lang.String)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32(int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64(int,long)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>
    static volatile boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()
    {
        boolean $z0;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        return $z0;
    }

    boolean isSerializationDeterministic()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        $z0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean serializationDeterministic>;

        return $z0;
    }

androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>
    public final int spaceLeft()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        java.lang.UnsupportedOperationException r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        r1 = new java.lang.UnsupportedOperationException;

        specialinvoke r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array or ByteBuffer.");

        throw r1;
    }

    void <init>(int)
    {
        int i0, $i1, $i2;
        byte[] $r0, $r1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r2;
        java.lang.IllegalArgumentException r3;

        r2 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        specialinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream-IA)>(null);

        if i0 >= 0 goto label1;

        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be >= 0");

        throw r3;

     label1:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 20);

        $r0 = newarray (byte)[$i1];

        r2.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer> = $r0;

        $r1 = r2.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i2 = lengthof $r1;

        r2.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit> = $i2;

        return;
    }

    final void buffer(byte)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        byte b0;
        byte[] r1;
        int i1, $i2, $i3, $i4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        b0 := @parameter0: byte;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = i1 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        r1[i1] = b0;

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i4 = $i3 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i4;

        return;
    }

    final void bufferFixed32NoTag(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, i18, i19, i20, i21;
        byte $b3, $b7, $b11, $b15;
        byte[] r1, r2, r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i18 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i1 = i18 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i1;

        $i2 = i0 & 255;

        $b3 = (byte) $i2;

        r1[i18] = $b3;

        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i4 = i19 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i4;

        $i5 = i0 >> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r2[i19] = $b7;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i8 = i20 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i8;

        $i9 = i0 >> 16;

        $i10 = $i9 & 255;

        $b11 = (byte) $i10;

        r3[i20] = $b11;

        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i21 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i12 = i21 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i12;

        $i13 = i0 >> 24;

        $i14 = $i13 & 255;

        $b15 = (byte) $i14;

        r4[i21] = $b15;

        $i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i17 = $i16 + 4;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i17;

        return;
    }

    final void bufferFixed64NoTag(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        long l0, $l2, $l6, $l7, $l11, $l12, $l16, $l17, $l21, $l26, $l31, $l36;
        int $i1, $i3, $i5, $i8, $i10, $i13, $i15, $i18, $i20, $i22, $i23, $i25, $i27, $i28, $i30, $i32, $i33, $i35, $i37, $i38, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49;
        byte $b4, $b9, $b14, $b19, $b24, $b29, $b34, $b39;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        l0 := @parameter0: long;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i42 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i1 = i42 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i1;

        $l2 = l0 & 255L;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        r1[i42] = $b4;

        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i43 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i5 = i43 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i5;

        $l6 = l0 >> 8;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r2[i43] = $b9;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i44 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i10 = i44 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i10;

        $l11 = l0 >> 16;

        $l12 = $l11 & 255L;

        $i13 = (int) $l12;

        $b14 = (byte) $i13;

        r3[i44] = $b14;

        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i45 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i15 = i45 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i15;

        $l16 = l0 >> 24;

        $l17 = $l16 & 255L;

        $i18 = (int) $l17;

        $b19 = (byte) $i18;

        r4[i45] = $b19;

        r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i46 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i20 = i46 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i20;

        $l21 = l0 >> 32;

        $i22 = (int) $l21;

        $i23 = $i22 & 255;

        $b24 = (byte) $i23;

        r5[i46] = $b24;

        r6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i47 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i25 = i47 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i25;

        $l26 = l0 >> 40;

        $i27 = (int) $l26;

        $i28 = $i27 & 255;

        $b29 = (byte) $i28;

        r6[i47] = $b29;

        r7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i48 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i30 = i48 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i30;

        $l31 = l0 >> 48;

        $i32 = (int) $l31;

        $i33 = $i32 & 255;

        $b34 = (byte) $i33;

        r7[i48] = $b34;

        r8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i49 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i35 = i49 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i35;

        $l36 = l0 >> 56;

        $i37 = (int) $l36;

        $i38 = $i37 & 255;

        $b39 = (byte) $i38;

        r8[i49] = $b39;

        $i40 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i41 = $i40 + 8;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i41;

        return;
    }

    final void bufferInt32NoTag(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0;
        long $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)>(i0);

        return;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt64NoTag(long)>($l1);

        return;
    }

    final void bufferTag(int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0, i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)>($i2);

        return;
    }

    final void bufferUInt32NoTag(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        long l0, $l18, $l21, $l22, $l23;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i19, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32;
        byte $b5, $b9, $b17, $b20;
        byte[] r1, r2, r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i27 := @parameter0: int;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()>();

        if $z0 == 0 goto label3;

        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        l0 = (long) $i12;

     label1:
        $i13 = i27 & -128;

        if $i13 != 0 goto label2;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i28 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i19 = i28 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i19;

        $l21 = (long) i28;

        $b20 = (byte) i27;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>(r1, $l21, $b20);

        i29 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i25 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $l22 = (long) i29;

        $l23 = $l22 - l0;

        $i24 = (int) $l23;

        $i26 = $i25 + $i24;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i26;

        return;

     label2:
        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i30 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i14 = i30 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i14;

        $l18 = (long) i30;

        $i15 = i27 & 127;

        $i16 = $i15 | 128;

        $b17 = (byte) $i16;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>(r2, $l18, $b17);

        i27 = i27 >>> 7;

        goto label1;

     label3:
        $i1 = i27 & -128;

        if $i1 != 0 goto label4;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i31 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i8 = i31 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i8;

        $b9 = (byte) i27;

        r3[i31] = $b9;

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i11 = $i10 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i11;

        return;

     label4:
        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i32 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = i32 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $i3 = i27 & 127;

        $i4 = $i3 | 128;

        $b5 = (byte) $i4;

        r4[i32] = $b5;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i7 = $i6 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i7;

        i27 = i27 >>> 7;

        goto label3;
    }

    final void bufferUInt64NoTag(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        long l0, $l1, $l16, $l23, $l27, $l28, $l29, l33, l34, l38, l39, l42;
        boolean $z0;
        byte $b2, $b7, $b12, $b17, $b22, $b26;
        int $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i24, $i25, $i30, $i31, $i32, i35, i36, i37, i40, i41;
        byte[] r1, r2, r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        l33 := @parameter0: long;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()>();

        if $z0 == 0 goto label3;

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        l0 = (long) $i15;

        l34 = l33;

     label1:
        $l16 = l34 & -128L;

        $b17 = $l16 cmp 0L;

        if $b17 != 0 goto label2;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i35 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i24 = i35 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i24;

        $l27 = (long) i35;

        $i25 = (int) l34;

        $b26 = (byte) $i25;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>(r1, $l27, $b26);

        i36 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i31 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $l28 = (long) i36;

        $l29 = $l28 - l0;

        $i30 = (int) $l29;

        $i32 = $i31 + $i30;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i32;

        return;

     label2:
        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i37 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i18 = i37 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i18;

        $l23 = (long) i37;

        $i19 = (int) l34;

        $i20 = $i19 & 127;

        $i21 = $i20 | 128;

        $b22 = (byte) $i21;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>(r2, $l23, $b22);

        l38 = l34 >>> 7;

        l34 = l38;

        goto label1;

     label3:
        l39 = l33;

     label4:
        $l1 = l39 & -128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label5;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i40 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i10 = i40 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i10;

        $i11 = (int) l39;

        $b12 = (byte) $i11;

        r3[i40] = $b12;

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i14 = $i13 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i14;

        return;

     label5:
        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        i41 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i3 = i41 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i3;

        $i4 = (int) l39;

        $i5 = $i4 & 127;

        $i6 = $i5 | 128;

        $b7 = (byte) $i6;

        r4[i41] = $b7;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i9 = $i8 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i9;

        l42 = l39 >>> 7;

        l39 = l42;

        goto label4;
    }

androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int offset>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>
    public final int spaceLeft()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    void <init>(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object[] r1;
        java.lang.Integer $r2, $r3, $r4;
        java.lang.String $r5;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r6;
        java.lang.NullPointerException r7;
        java.lang.IllegalArgumentException r8;

        r6 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream-IA)>(null);

        if r0 != null goto label1;

        r7 = new java.lang.NullPointerException;

        specialinvoke r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("buffer");

        throw r7;

     label1:
        $i5 = i0 | i1;

        $i3 = lengthof r0;

        $i2 = i0 + i1;

        $i4 = $i3 - $i2;

        $i6 = $i5 | $i4;

        if $i6 >= 0 goto label2;

        r8 = new java.lang.IllegalArgumentException;

        r1 = newarray (java.lang.Object)[3];

        $i8 = lengthof r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r1[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Array range is invalid. Buffer.length=%d, offset=%d, length=%d", r1);

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw r8;

     label2:
        r6.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer> = r0;

        r6.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int offset> = i0;

        r6.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i0;

        $i7 = i0 + i1;

        r6.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit> = $i7;

        return;
    }

    public void flush()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        return;
    }

    public final void write(byte) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte b0;
        byte[] r1;
        int i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        b0 := @parameter0: byte;

        goto label1;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = i1 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        r1[i1] = b0;

        return;
    }

    public final void write(java.nio.ByteBuffer) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r1;
        java.lang.Object[] r2;
        byte[] $r3;
        java.lang.Throwable $r5, r11;
        java.lang.Integer $r6, $r7, $r8;
        java.lang.String $r9;
        java.nio.ByteBuffer r10;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r10 := @parameter0: java.nio.ByteBuffer;

        i0 = virtualinvoke r10.<java.nio.ByteBuffer: int remaining()>();

        goto label2;

     label1:
        $r5 := @caughtexception;

        r11 = $r5;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        r2 = newarray (java.lang.Object)[3];

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r2[0] = $r6;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r2[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2[2] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", r2);

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r11);

        throw r1;

     label2:
        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        virtualinvoke r10.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r3, $i1, i0);

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i3 = $i2 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i3;

        return;

     label3:
        nop;

        catch java.lang.IndexOutOfBoundsException from label2 to label3 with label1;
    }

    public final void write(byte[], int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object[] r1;
        byte[] $r2, r8;
        java.lang.Throwable $r3, r9;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.String $r7;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r10;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r8 := @parameter0: byte[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        goto label2;

     label1:
        $r3 := @caughtexception;

        r9 = $r3;

        r10 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        r1 = newarray (java.lang.Object)[3];

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r1[0] = $r4;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r1[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r1[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", r1);

        specialinvoke r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r9);

        throw r10;

     label2:
        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i6, $r2, $i1, i0);

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i3 = $i2 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i3;

        return;

     label3:
        nop;

        catch java.lang.IndexOutOfBoundsException from label2 to label3 with label1;
    }

    public final void writeBool(int, boolean) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        boolean z0;
        int i0;
        byte b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(byte)>(b1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public final void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public final void writeBytes(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeBytesNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(r1);

        return;
    }

    public final void writeBytesNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput)>(r0);

        return;
    }

    public final void writeFixed32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed32NoTag(int)>(i1);

        return;
    }

    public final void writeFixed32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, i16, i17, i18, i19;
        byte $b3, $b7, $b11, $b15;
        byte[] r1, r2, r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        goto label1;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i1 = i16 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i2 = i0 & 255;

        $b3 = (byte) $i2;

        r1[i16] = $b3;

        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = i17 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $i5 = i0 >> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r2[i17] = $b7;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i18 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i8 = i18 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i8;

        $i9 = i0 >> 16;

        $i10 = $i9 & 255;

        $b11 = (byte) $i10;

        r3[i18] = $b11;

        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i12 = i19 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i12;

        $i13 = i0 >> 24;

        $i14 = $i13 & 255;

        $b15 = (byte) $i14;

        r4[i19] = $b15;

        return;
    }

    public final void writeFixed64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        long l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed64NoTag(long)>(l1);

        return;
    }

    public final void writeFixed64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        long l0, $l6, $l11, $l16, $l21, $l26, $l31, $l36;
        int $i1, $i2, $i3, $i5, $i7, $i8, $i10, $i12, $i13, $i15, $i17, $i18, $i20, $i22, $i23, $i25, $i27, $i28, $i30, $i32, $i33, $i35, $i37, $i38, i40, i41, i42, i43, i44, i45, i46, i47;
        byte $b4, $b9, $b14, $b19, $b24, $b29, $b34, $b39;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        l0 := @parameter0: long;

        goto label1;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i40 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i1 = i40 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i2 = (int) l0;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r1[i40] = $b4;

        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i41 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i5 = i41 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i5;

        $l6 = l0 >> 8;

        $i7 = (int) $l6;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        r2[i41] = $b9;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i42 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i10 = i42 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i10;

        $l11 = l0 >> 16;

        $i12 = (int) $l11;

        $i13 = $i12 & 255;

        $b14 = (byte) $i13;

        r3[i42] = $b14;

        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i43 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i15 = i43 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i15;

        $l16 = l0 >> 24;

        $i17 = (int) $l16;

        $i18 = $i17 & 255;

        $b19 = (byte) $i18;

        r4[i43] = $b19;

        r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i44 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i20 = i44 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i20;

        $l21 = l0 >> 32;

        $i22 = (int) $l21;

        $i23 = $i22 & 255;

        $b24 = (byte) $i23;

        r5[i44] = $b24;

        r6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i45 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i25 = i45 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i25;

        $l26 = l0 >> 40;

        $i27 = (int) $l26;

        $i28 = $i27 & 255;

        $b29 = (byte) $i28;

        r6[i45] = $b29;

        r7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i46 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i30 = i46 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i30;

        $l31 = l0 >> 48;

        $i32 = (int) $l31;

        $i33 = $i32 & 255;

        $b34 = (byte) $i33;

        r7[i46] = $b34;

        r8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i47 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i35 = i47 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i35;

        $l36 = l0 >> 56;

        $i37 = (int) $l36;

        $i38 = $i37 & 255;

        $b39 = (byte) $i38;

        r8[i47] = $b39;

        return;
    }

    public final void writeInt32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeInt32NoTag(int)>(i1);

        return;
    }

    public final void writeInt32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        long $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i0);

        return;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public final void writeLazy(java.nio.ByteBuffer) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        java.nio.ByteBuffer r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(java.nio.ByteBuffer)>(r1);

        return;
    }

    public final void writeLazy(byte[], int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public final void writeMessage(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        return;
    }

    final void writeMessage(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;
        androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        $r3 = (androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r1;

        $i1 = virtualinvoke $r3.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,androidx.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r4);

        return;
    }

    public final void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r0);

        return;
    }

    public final void writeMessageSetExtension(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(3, r1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeRawMessageSetExtension(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeBytes(int,androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(3, r1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeString(int, java.lang.String) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeStringNoTag(java.lang.String)>(r1);

        return;
    }

    public final void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        byte[] $r0, r5;
        java.lang.Throwable $r1, r6;
        androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException $r2, r8;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r3;
        java.lang.String r4;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r7;

        r3 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r4 := @parameter0: java.lang.String;

        i0 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label1:
        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        $i5 = $i4 * 3;

        i14 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int computeUInt32SizeNoTag(int)>($i5);

        $i6 = virtualinvoke r4.<java.lang.String: int length()>();

        i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int computeUInt32SizeNoTag(int)>($i6);

     label2:
        if i1 != i14 goto label5;

     label3:
        $i11 = i0 + i1;

        r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i11;

        r5 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i2 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        i3 = virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

     label4:
        i15 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r4, r5, i2, i3);

        r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i0;

        $i12 = i15 - i0;

        $i13 = $i12 - i1;

        virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i13);

        r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i15;

        return;

     label5:
        $i7 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r4);

        virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i7);

        $r0 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i8 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i9 = virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        $i10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r4, $r0, $i8, $i9);

        r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i10;

        return;

     label6:
        $r1 := @caughtexception;

        r6 = $r1;

        r7 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke r7.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>(r6);

        throw r7;

     label7:
        $r2 := @caughtexception;

        r8 = $r2;

        r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i0;

        virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void inefficientWriteStringNoTag(java.lang.String,androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException)>(r4, r8);

        return;

        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label1 to label2 with label7;
        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label6;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label3 to label4 with label7;
        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label6;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label4 to label6 with label7;
        catch java.lang.IndexOutOfBoundsException from label4 to label6 with label6;
    }

    public final void writeTag(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i2);

        return;
    }

    public final void writeUInt32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i1);

        return;
    }

    public final void writeUInt32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1, $i2, $i3, $i5, i7, i8, i9;
        byte $b4, $b6;
        byte[] r1, r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i7 := @parameter0: int;

     label1:
        $i0 = i7 & -128;

        if $i0 != 0 goto label2;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i5 = i8 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i5;

        $b6 = (byte) i7;

        r1[i8] = $b6;

        return;

     label2:
        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i1 = i9 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i2 = i7 & 127;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        r2[i9] = $b4;

        goto label3;

     label3:
        i7 = i7 >>> 7;

        goto label1;
    }

    public final void writeUInt64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        long l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>(l1);

        return;
    }

    public final void writeUInt64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i11, $i12, $i13, $i14, $i17, $i18, i23, i24, i28, i29;
        byte $b4, $b7, $b10, $b15, $b19, $b27;
        long $l9, $l16, $l20, l21, l22, l25, $l26, l30;
        byte[] r1, r2, r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        l21 := @parameter0: long;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()>();

        if $z0 == 0 goto label6;

        $i8 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        if $i8 < 10 goto label3;

        l22 = l21;

     label1:
        $l9 = l22 & -128L;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label2;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i23 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i17 = i23 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i17;

        $l20 = (long) i23;

        $i18 = (int) l22;

        $b19 = (byte) $i18;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>(r1, $l20, $b19);

        return;

     label2:
        r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i24 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i11 = i24 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i11;

        $l16 = (long) i24;

        $i12 = (int) l22;

        $i13 = $i12 & 127;

        $i14 = $i13 | 128;

        $b15 = (byte) $i14;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>(r2, $l16, $b15);

        l22 = l22 >>> 7;

        goto label1;

     label3:
        l25 = l21;

     label4:
        $l26 = l25 & -128L;

        $b27 = $l26 cmp 0L;

        if $b27 != 0 goto label5;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i28 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i5 = i28 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i5;

        $i6 = (int) l25;

        $b7 = (byte) $i6;

        r3[i28] = $b7;

        return;

     label5:
        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        i29 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i0 = i29 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        $i1 = (int) l25;

        $i2 = $i1 & 127;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        r4[i29] = $b4;

        l30 = l25 >>> 7;

        l25 = l30;

        goto label4;

     label6:
        l25 = l21;

        goto label4;
    }

androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: long serialVersionUID>
    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>("CodedOutputStream was writing to a flat byte array and ran out of space.");

        return;
    }

    void <init>(java.lang.Throwable)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("CodedOutputStream was writing to a flat byte array and ran out of space.", r1);

        return;
    }

    void <init>(java.lang.String, java.lang.Throwable)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r0;
        java.lang.String r1, $r6;
        java.lang.Throwable r2;
        java.lang.StringBuilder r3, $r4, $r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CodedOutputStream was writing to a flat byte array and ran out of space.: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r2);

        return;
    }

androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder
<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>
    void <init>(java.io.OutputStream, int)
    {
        java.io.OutputStream r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r1;
        java.lang.NullPointerException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void <init>(int)>(i0);

        if r0 != null goto label1;

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("out");

        throw r2;

     label1:
        r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out> = r0;

        return;
    }

    private void doFlush() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int $i0;
        byte[] $r1;
        java.io.OutputStream $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = 0;

        return;
    }

    public void flush() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

        return;

     label1:
        return;
    }

    private void flushIfNotAvailable(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i2 - $i1;

        if $i3 >= i0 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

        return;

     label1:
        return;
    }

    public void write(byte) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte b0;
        int $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        b0 := @parameter0: byte;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if $i2 != $i1 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void buffer(byte)>(b0);

        return;
    }

    public void write(java.nio.ByteBuffer) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.nio.ByteBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        byte[] $r2, $r4, $r6, $r8, $r10;
        java.io.OutputStream $r9;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        i24 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i2 - $i1;

        if $i3 < i24 goto label1;

        $r10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r10, $i19, i24);

        $i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i21 = $i20 + i24;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i21;

        $i22 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i23 = $i22 + i24;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i23;

        return;

     label1:
        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        i0 = $i5 - $i4;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r2, $i6, i0);

        i25 = i24 - i0;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i7;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i9 = $i8 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i9;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label2:
        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if i25 <= $i10 goto label3;

        $r6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r6, 0, $i13);

        $r9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        $r8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i14);

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        i25 = i25 - $i15;

        $i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i18 = $i17 + $i16;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i18;

        goto label2;

     label3:
        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r4, 0, i25);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i25;

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i12 = $i11 + i25;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i12;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte[] r1, $r2, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        java.io.OutputStream $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: byte[];

        i18 := @parameter1: int;

        i19 := @parameter2: int;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i2 - $i1;

        if $i3 < i19 goto label1;

        $r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i18, $r5, $i13, i19);

        $i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i15 = $i14 + i19;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i15;

        $i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i17 = $i16 + i19;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i17;

        return;

     label1:
        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        i0 = $i5 - $i4;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i18, $r2, $i6, i0);

        i20 = i18 + i0;

        i21 = i19 - i0;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i7;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i9 = $i8 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i9;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if i21 > $i10 goto label3;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i20, $r4, 0, i21);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i21;

     label2:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i12 = $i11 + i21;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i12;

        return;

     label3:
        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i20, i21);

        goto label2;
    }

    public void writeBool(int, boolean) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        boolean z0;
        int i0;
        byte b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(11);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void buffer(byte)>(b1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>(i1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void writeBytes(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytesNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(r1);

        return;
    }

    public void writeBytesNoTag(androidx.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput)>(r0);

        return;
    }

    public void writeFixed32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(14);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 5);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed32NoTag(int)>(i1);

        return;
    }

    public void writeFixed32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(4);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed32NoTag(int)>(i0);

        return;
    }

    public void writeFixed64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        long l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(18);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed64NoTag(long)>(l1);

        return;
    }

    public void writeFixed64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        long l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(8);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed64NoTag(long)>(l0);

        return;
    }

    public void writeInt32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferInt32NoTag(int)>(i1);

        return;
    }

    public void writeInt32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        long $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>(i0);

        return;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public void writeLazy(java.nio.ByteBuffer) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.nio.ByteBuffer r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void write(java.nio.ByteBuffer)>(r1);

        return;
    }

    public void writeLazy(byte[], int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void writeMessage(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        return;
    }

    void writeMessage(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite,androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r1, r2);

        return;
    }

    public void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r0);

        return;
    }

    void writeMessageNoTag(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite, androidx.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;
        androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r3;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        $r3 = (androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r1;

        $i0 = virtualinvoke $r3.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(androidx.test.espresso.remote.internal.deps.protobuf.Schema)>(r2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,androidx.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r4);

        return;
    }

    public void writeMessageSetExtension(int, androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>(3, r1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeRawMessageSetExtension(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytes(int,androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(3, r1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeString(int, java.lang.String) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeStringNoTag(java.lang.String)>(r1);

        return;
    }

    public void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        byte[] $r2, r6, r7;
        androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException $r3, $r5, r8, r9;
        java.lang.Throwable $r4, r11;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r10;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.lang.String;

     label01:
        i13 = virtualinvoke r1.<java.lang.String: int length()>();

     label02:
        i14 = i13 * 3;

     label03:
        i15 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int computeUInt32SizeNoTag(int)>(i14);

     label04:
        i16 = i15 + i14;

     label05:
        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

     label06:
        if i16 <= i17 goto label09;

     label07:
        r6 = newarray (byte)[i14];

     label08:
        i18 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, r6, 0, i14);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>(i18);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeLazy(byte[],int,int)>(r6, 0, i18);

        return;

     label09:
        i19 = i15 + i14;

     label10:
        i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        i21 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

     label11:
        $i1 = i20 - i21;

        if i19 <= $i1 goto label13;

     label12:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label13:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i22 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int computeUInt32SizeNoTag(int)>($i2);

        i23 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

     label14:
        if i22 != i15 goto label22;

     label15:
        $i7 = i23 + i22;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i7;

        r7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        i24 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        i25 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

     label16:
        i26 = i25 - i0;

     label17:
        i27 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, r7, i24, i26);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i23;

     label18:
        $i8 = i27 - i23;

        i28 = $i8 - i22;

     label19:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i28);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i27;

     label20:
        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i6 = $i5 + i28;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i6;

     label21:
        return;

     label22:
        i28 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i28);

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, $r2, $i3, i28);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i4;

        goto label20;

     label23:
        $r5 := @caughtexception;

        r8 = $r5;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void inefficientWriteStringNoTag(java.lang.String,androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException)>(r1, r8);

        return;

     label24:
        $r3 := @caughtexception;

        r9 = $r3;

     label25:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i10 = $i9 - i23;

        $i12 = $i11 - $i10;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i12;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i23;

        throw r9;

     label26:
        r10 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>(r11);

        throw r10;

     label27:
        $r4 := @caughtexception;

        r11 = $r4;

        goto label26;

        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label01 to label02 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label03 to label04 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label05 to label06 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label07 to label08 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label08 to label09 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label10 to label11 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label12 to label14 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label15 to label16 with label24;
        catch java.lang.ArrayIndexOutOfBoundsException from label15 to label16 with label27;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label15 to label16 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label17 to label18 with label24;
        catch java.lang.ArrayIndexOutOfBoundsException from label17 to label18 with label27;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label17 to label18 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label19 to label21 with label24;
        catch java.lang.ArrayIndexOutOfBoundsException from label19 to label21 with label27;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label19 to label21 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label22 to label23 with label24;
        catch java.lang.ArrayIndexOutOfBoundsException from label22 to label23 with label27;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label22 to label23 with label23;
        catch androidx.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label25 to label27 with label23;
    }

    public void writeTag(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i2);

        return;
    }

    public void writeUInt32(int, int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i1);

        return;
    }

    public void writeUInt32NoTag(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(5);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i0);

        return;
    }

    public void writeUInt64(int, long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        long l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt64NoTag(long)>(l1);

        return;
    }

    public void writeUInt64NoTag(long) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        long l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(10);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt64NoTag(long)>(l0);

        return;
    }

