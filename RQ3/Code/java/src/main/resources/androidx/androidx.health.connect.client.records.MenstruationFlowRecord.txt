androidx.health.connect.client.records.MenstruationFlowRecord
<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.MenstruationFlowRecord$Companion Companion>
<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.Instant time>
<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.ZoneOffset zoneOffset>
<androidx.health.connect.client.records.MenstruationFlowRecord: int flow>
<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.metadata.Metadata metadata>
<androidx.health.connect.client.records.MenstruationFlowRecord: int FLOW_UNKNOWN>
<androidx.health.connect.client.records.MenstruationFlowRecord: int FLOW_LIGHT>
<androidx.health.connect.client.records.MenstruationFlowRecord: int FLOW_MEDIUM>
<androidx.health.connect.client.records.MenstruationFlowRecord: int FLOW_HEAVY>
<androidx.health.connect.client.records.MenstruationFlowRecord: java.util.Map FLOW_TYPE_STRING_TO_INT_MAP>
<androidx.health.connect.client.records.MenstruationFlowRecord: java.util.Map FLOW_TYPE_INT_TO_STRING_MAP>
    public void <init>(java.time.Instant, java.time.ZoneOffset, int, androidx.health.connect.client.records.metadata.Metadata)
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        java.time.Instant r1;
        java.time.ZoneOffset r2;
        int i0;
        androidx.health.connect.client.records.metadata.Metadata r3;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        r1 := @parameter0: java.time.Instant;

        r2 := @parameter1: java.time.ZoneOffset;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.health.connect.client.records.metadata.Metadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "time");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "metadata");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.Instant time> = r1;

        r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.ZoneOffset zoneOffset> = r2;

        r0.<androidx.health.connect.client.records.MenstruationFlowRecord: int flow> = i0;

        r0.<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.metadata.Metadata metadata> = r3;

        return;
    }

    public void <init>(java.time.Instant, java.time.ZoneOffset, int, androidx.health.connect.client.records.metadata.Metadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        java.time.Instant r1;
        java.time.ZoneOffset r2;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.health.connect.client.records.metadata.Metadata r4;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        r1 := @parameter0: java.time.Instant;

        r2 := @parameter1: java.time.ZoneOffset;

        i3 := @parameter2: int;

        r4 := @parameter3: androidx.health.connect.client.records.metadata.Metadata;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        i3 = 0;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r4 = <androidx.health.connect.client.records.metadata.Metadata: androidx.health.connect.client.records.metadata.Metadata EMPTY>;

     label2:
        specialinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: void <init>(java.time.Instant,java.time.ZoneOffset,int,androidx.health.connect.client.records.metadata.Metadata)>(r1, r2, i3, r4);

        return;
    }

    public java.time.Instant getTime()
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        $r1 = r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.Instant time>;

        return $r1;
    }

    public java.time.ZoneOffset getZoneOffset()
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        $r1 = r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.ZoneOffset zoneOffset>;

        return $r1;
    }

    public final int getFlow()
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        int $i0;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        $i0 = r0.<androidx.health.connect.client.records.MenstruationFlowRecord: int flow>;

        return $i0;
    }

    public static void getFlow$annotations()
    {
        return;
    }

    public androidx.health.connect.client.records.metadata.Metadata getMetadata()
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        androidx.health.connect.client.records.metadata.Metadata $r1;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        $r1 = r0.<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.metadata.Metadata metadata>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0, $r2, $r4, $r7, $r10;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.time.Instant $r3, $r5;
        java.time.ZoneOffset $r6, $r8;
        androidx.health.connect.client.records.metadata.Metadata $r9, $r11;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.records.MenstruationFlowRecord;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = r0.<androidx.health.connect.client.records.MenstruationFlowRecord: int flow>;

        $r2 = (androidx.health.connect.client.records.MenstruationFlowRecord) r1;

        $i0 = $r2.<androidx.health.connect.client.records.MenstruationFlowRecord: int flow>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.Instant getTime()>();

        $r4 = (androidx.health.connect.client.records.MenstruationFlowRecord) r1;

        $r5 = virtualinvoke $r4.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.Instant getTime()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = virtualinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.ZoneOffset getZoneOffset()>();

        $r7 = (androidx.health.connect.client.records.MenstruationFlowRecord) r1;

        $r8 = virtualinvoke $r7.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.ZoneOffset getZoneOffset()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r8);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r9 = virtualinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $r10 = (androidx.health.connect.client.records.MenstruationFlowRecord) r1;

        $r11 = virtualinvoke $r10.<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r11);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.records.MenstruationFlowRecord r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, i8, i9;
        java.time.Instant $r1;
        java.time.ZoneOffset $r2;
        androidx.health.connect.client.records.metadata.Metadata $r3;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord;

        i5 = r0.<androidx.health.connect.client.records.MenstruationFlowRecord: int flow>;

        $i0 = 31 * i5;

        $r1 = virtualinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.Instant getTime()>();

        $i1 = virtualinvoke $r1.<java.time.Instant: int hashCode()>();

        i6 = $i0 + $i1;

        $i2 = 31 * i6;

        $r2 = virtualinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: java.time.ZoneOffset getZoneOffset()>();

        if $r2 == null goto label1;

        $i7 = virtualinvoke $r2.<java.time.ZoneOffset: int hashCode()>();

        goto label2;

     label1:
        $i7 = 0;

     label2:
        i8 = $i2 + $i7;

        $i3 = 31 * i8;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $i4 = virtualinvoke $r3.<androidx.health.connect.client.records.metadata.Metadata: int hashCode()>();

        i9 = $i3 + $i4;

        return i9;
    }

    static void <clinit>()
    {
        int i0, $i1, $i2, $i3;
        java.util.Map r0, $r12, $r13, r23, r25;
        java.util.Iterator r1;
        java.lang.Object r2, $r16, $r18;
        java.lang.Integer r3, $r6, $r8, $r10;
        java.lang.String r4;
        androidx.health.connect.client.records.MenstruationFlowRecord$Companion $r5;
        kotlin.Pair $r7, $r9, $r11;
        java.util.Set $r14;
        java.util.LinkedHashMap $r15;
        boolean $z2;
        java.lang.Number $r17;
        kotlin.Pair[] $r20;
        java.lang.Iterable $r21;
        java.util.Map$Entry r22, r24;

        $r5 = new androidx.health.connect.client.records.MenstruationFlowRecord$Companion;

        specialinvoke $r5.<androidx.health.connect.client.records.MenstruationFlowRecord$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.records.MenstruationFlowRecord: androidx.health.connect.client.records.MenstruationFlowRecord$Companion Companion> = $r5;

        $r20 = newarray (kotlin.Pair)[3];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r7 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("light", $r6);

        $r20[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("medium", $r8);

        $r20[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r11 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("heavy", $r10);

        $r20[2] = $r11;

        $r12 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>($r20);

        <androidx.health.connect.client.records.MenstruationFlowRecord: java.util.Map FLOW_TYPE_STRING_TO_INT_MAP> = $r12;

        $r13 = <androidx.health.connect.client.records.MenstruationFlowRecord: java.util.Map FLOW_TYPE_STRING_TO_INT_MAP>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        $r21 = (java.lang.Iterable) $r14;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r21, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        $r15 = new java.util.LinkedHashMap;

        specialinvoke $r15.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r0 = (java.util.Map) $r15;

        r1 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) r2;

        r23 = r0;

        $r16 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.Number) $r16;

        $i3 = virtualinvoke $r17.<java.lang.Number: int intValue()>();

        r24 = (java.util.Map$Entry) r2;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r25 = r23;

        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r18;

        interfaceinvoke r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        goto label1;

     label2:
        <androidx.health.connect.client.records.MenstruationFlowRecord: java.util.Map FLOW_TYPE_INT_TO_STRING_MAP> = r0;

        return;
    }

androidx.health.connect.client.records.MenstruationFlowRecord$Companion
    private void <init>()
    {
        androidx.health.connect.client.records.MenstruationFlowRecord$Companion r0;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.MenstruationFlowRecord$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.records.MenstruationFlowRecord$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.records.MenstruationFlowRecord$Companion: void <init>()>();

        return;
    }

androidx.health.connect.client.records.MenstruationFlowRecord$Flows
