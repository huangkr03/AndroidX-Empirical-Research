androidx.compose.foundation.text.selection.SelectionMagnifierKt
<androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.AnimationVector2D UnspecifiedAnimationVector2D>
<androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.TwoWayConverter UnspecifiedSafeOffsetVectorConverter>
<androidx.compose.foundation.text.selection.SelectionMagnifierKt: long OffsetDisplacementThreshold>
<androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.SpringSpec MagnifierSpringSpec>
    public static final androidx.compose.ui.Modifier animatedSelectionMagnifier(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier $r0, $r5;
        kotlin.jvm.functions.Function0 r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.foundation.text.selection.SelectionMagnifierKt$animatedSelectionMagnifier$1 $r3;
        kotlin.jvm.functions.Function3 $r4;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "magnifierCenter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "platformMagnifier");

        $r3 = new androidx.compose.foundation.text.selection.SelectionMagnifierKt$animatedSelectionMagnifier$1;

        specialinvoke $r3.<androidx.compose.foundation.text.selection.SelectionMagnifierKt$animatedSelectionMagnifier$1: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)>(r1, r2);

        $r4 = (kotlin.jvm.functions.Function3) $r3;

        $r5 = staticinvoke <androidx.compose.ui.ComposedModifierKt: androidx.compose.ui.Modifier composed$default(androidx.compose.ui.Modifier,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,int,java.lang.Object)>($r0, null, $r4, 1, null);

        return $r5;
    }

    private static final androidx.compose.runtime.State rememberAnimatedMagnifierPosition(kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.runtime.Composer $r1, r20;
        int $i0;
        androidx.compose.runtime.State r2, r17, $r25;
        java.lang.Object r3, $r5, $r7, r16, $r18, r19, $r21, $r23;
        boolean $z0, $z1, z4, z11, z13;
        androidx.compose.runtime.Composer$Companion $r4, $r6;
        androidx.compose.foundation.text.selection.SelectionMagnifierKt$rememberAnimatedMagnifierPosition$1 $r8;
        kotlin.Unit $r9;
        kotlin.jvm.functions.Function2 $r10;
        androidx.compose.animation.core.Animatable $r11, r22, $r24;
        long $l1, $l2;
        androidx.compose.ui.geometry.Offset $r12, $r14;
        androidx.compose.animation.core.TwoWayConverter $r13;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        $r1 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1589795249);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(rememberAnimatedMagnifierPosition)79@3044L46,80@3112L208,84@3325L1186:SelectionMagnifier.kt#eksfi3");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1589795249, $i0, -1, "androidx.compose.foundation.text.selection.rememberAnimatedMagnifierPosition (SelectionMagnifier.kt:76)");

     label1:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember):Composables.kt#9igjgp");

        z4 = 0;

        r16 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r4 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r16 != $r5 goto label2;

        r17 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State derivedStateOf(kotlin.jvm.functions.Function0)>(r0);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r17);

        $r18 = r17;

        goto label3;

     label2:
        $r18 = r16;

     label3:
        r19 = $r18;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r2 = (androidx.compose.runtime.State) r19;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember):Composables.kt#9igjgp");

        r20 = $r1;

        z11 = 0;

        $r21 = interfaceinvoke r20.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r6 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if $r21 != $r7 goto label4;

        z13 = 0;

        $r11 = new androidx.compose.animation.core.Animatable;

        $l1 = staticinvoke <androidx.compose.foundation.text.selection.SelectionMagnifierKt: long access$rememberAnimatedMagnifierPosition$lambda-1(androidx.compose.runtime.State)>(r2);

        $r12 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l1);

        $r13 = staticinvoke <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.TwoWayConverter access$getUnspecifiedSafeOffsetVectorConverter$p()>();

        $l2 = staticinvoke <androidx.compose.foundation.text.selection.SelectionMagnifierKt: long access$getOffsetDisplacementThreshold$p()>();

        $r14 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l2);

        specialinvoke $r11.<androidx.compose.animation.core.Animatable: void <init>(java.lang.Object,androidx.compose.animation.core.TwoWayConverter,java.lang.Object)>($r12, $r13, $r14);

        r22 = $r11;

        interfaceinvoke r20.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r22);

        $r23 = r22;

        goto label5;

     label4:
        $r23 = $r21;

     label5:
        r3 = $r23;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r24 = (androidx.compose.animation.core.Animatable) r3;

        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r8 = new androidx.compose.foundation.text.selection.SelectionMagnifierKt$rememberAnimatedMagnifierPosition$1;

        specialinvoke $r8.<androidx.compose.foundation.text.selection.SelectionMagnifierKt$rememberAnimatedMagnifierPosition$1: void <init>(androidx.compose.runtime.State,androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation)>(r2, $r24, null);

        $r10 = (kotlin.jvm.functions.Function2) $r8;

        staticinvoke <androidx.compose.runtime.EffectsKt: void LaunchedEffect(java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r9, $r10, $r1, 64);

        $r25 = virtualinvoke $r24.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.State asState()>();

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label6;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label6:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r25;
    }

    private static final long rememberAnimatedMagnifierPosition$lambda-1(androidx.compose.runtime.State)
    {
        androidx.compose.runtime.State $r0;
        java.lang.Object $r1;
        androidx.compose.ui.geometry.Offset $r2;
        long $l0;

        $r0 := @parameter0: androidx.compose.runtime.State;

        $r1 = interfaceinvoke $r0.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r2 = (androidx.compose.ui.geometry.Offset) $r1;

        $l0 = virtualinvoke $r2.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        return $l0;
    }

    public static final androidx.compose.runtime.State access$rememberAnimatedMagnifierPosition(kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0;
        androidx.compose.runtime.State $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        $r1 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.runtime.State rememberAnimatedMagnifierPosition(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int)>(r0, $r1, $i0);

        return $r2;
    }

    public static final long access$rememberAnimatedMagnifierPosition$lambda-1(androidx.compose.runtime.State)
    {
        androidx.compose.runtime.State $r0;
        long $l0;

        $r0 := @parameter0: androidx.compose.runtime.State;

        $l0 = staticinvoke <androidx.compose.foundation.text.selection.SelectionMagnifierKt: long rememberAnimatedMagnifierPosition$lambda-1(androidx.compose.runtime.State)>($r0);

        return $l0;
    }

    public static final androidx.compose.animation.core.SpringSpec access$getMagnifierSpringSpec$p()
    {
        androidx.compose.animation.core.SpringSpec $r0;

        $r0 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.SpringSpec MagnifierSpringSpec>;

        return $r0;
    }

    public static final androidx.compose.animation.core.TwoWayConverter access$getUnspecifiedSafeOffsetVectorConverter$p()
    {
        androidx.compose.animation.core.TwoWayConverter $r0;

        $r0 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.TwoWayConverter UnspecifiedSafeOffsetVectorConverter>;

        return $r0;
    }

    public static final long access$getOffsetDisplacementThreshold$p()
    {
        long $l0;

        $l0 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt: long OffsetDisplacementThreshold>;

        return $l0;
    }

    public static final androidx.compose.animation.core.AnimationVector2D access$getUnspecifiedAnimationVector2D$p()
    {
        androidx.compose.animation.core.AnimationVector2D $r0;

        $r0 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.AnimationVector2D UnspecifiedAnimationVector2D>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.animation.core.AnimationVector2D $r0;
        androidx.compose.foundation.text.selection.SelectionMagnifierKt$UnspecifiedSafeOffsetVectorConverter$1 $r1;
        androidx.compose.foundation.text.selection.SelectionMagnifierKt$UnspecifiedSafeOffsetVectorConverter$2 $r2;
        kotlin.jvm.functions.Function1 $r3, $r4;
        androidx.compose.animation.core.TwoWayConverter $r5;
        long $l0, $l1;
        androidx.compose.animation.core.SpringSpec $r6;
        androidx.compose.ui.geometry.Offset $r7;

        $r0 = new androidx.compose.animation.core.AnimationVector2D;

        specialinvoke $r0.<androidx.compose.animation.core.AnimationVector2D: void <init>(float,float)>(#NaNF, #NaNF);

        <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.AnimationVector2D UnspecifiedAnimationVector2D> = $r0;

        $r1 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt$UnspecifiedSafeOffsetVectorConverter$1: androidx.compose.foundation.text.selection.SelectionMagnifierKt$UnspecifiedSafeOffsetVectorConverter$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r1;

        $r2 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt$UnspecifiedSafeOffsetVectorConverter$2: androidx.compose.foundation.text.selection.SelectionMagnifierKt$UnspecifiedSafeOffsetVectorConverter$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r5 = staticinvoke <androidx.compose.animation.core.VectorConvertersKt: androidx.compose.animation.core.TwoWayConverter TwoWayConverter(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r4, $r3);

        <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.TwoWayConverter UnspecifiedSafeOffsetVectorConverter> = $r5;

        $l0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(0.01F, 0.01F);

        <androidx.compose.foundation.text.selection.SelectionMagnifierKt: long OffsetDisplacementThreshold> = $l0;

        $r6 = new androidx.compose.animation.core.SpringSpec;

        $l1 = <androidx.compose.foundation.text.selection.SelectionMagnifierKt: long OffsetDisplacementThreshold>;

        $r7 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l1);

        specialinvoke $r6.<androidx.compose.animation.core.SpringSpec: void <init>(float,float,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, $r7, 3, null);

        <androidx.compose.foundation.text.selection.SelectionMagnifierKt: androidx.compose.animation.core.SpringSpec MagnifierSpringSpec> = $r6;

        return;
    }

