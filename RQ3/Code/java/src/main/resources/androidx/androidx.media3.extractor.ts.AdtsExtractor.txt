androidx.media3.extractor.ts.AdtsExtractor
<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorsFactory FACTORY>
<androidx.media3.extractor.ts.AdtsExtractor: int FLAG_ENABLE_CONSTANT_BITRATE_SEEKING>
<androidx.media3.extractor.ts.AdtsExtractor: int FLAG_ENABLE_CONSTANT_BITRATE_SEEKING_ALWAYS>
<androidx.media3.extractor.ts.AdtsExtractor: int MAX_PACKET_SIZE>
<androidx.media3.extractor.ts.AdtsExtractor: int MAX_SNIFF_BYTES>
<androidx.media3.extractor.ts.AdtsExtractor: int NUM_FRAMES_FOR_AVERAGE_FRAME_SIZE>
<androidx.media3.extractor.ts.AdtsExtractor: int flags>
<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>
<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray packetBuffer>
<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>
<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableBitArray scratchBits>
<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>
<androidx.media3.extractor.ts.AdtsExtractor: long firstSampleTimestampUs>
<androidx.media3.extractor.ts.AdtsExtractor: long firstFramePosition>
<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize>
<androidx.media3.extractor.ts.AdtsExtractor: boolean hasCalculatedAverageFrameSize>
<androidx.media3.extractor.ts.AdtsExtractor: boolean startedPacket>
<androidx.media3.extractor.ts.AdtsExtractor: boolean hasOutputSeekMap>
    public void <init>()
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        specialinvoke r0.<androidx.media3.extractor.ts.AdtsExtractor: void <init>(int)>(0);

        return;
    }

    public void <init>(int)
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        int $i0, i1;
        androidx.media3.extractor.ts.AdtsReader $r1;
        androidx.media3.common.util.ParsableByteArray $r2, $r3, $r5;
        androidx.media3.common.util.ParsableBitArray $r4;
        byte[] $r6;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        i1 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = i1 & 2;

        if $i0 == 0 goto label1;

        i1 = i1 | 1;

     label1:
        r0.<androidx.media3.extractor.ts.AdtsExtractor: int flags> = i1;

        $r1 = new androidx.media3.extractor.ts.AdtsReader;

        specialinvoke $r1.<androidx.media3.extractor.ts.AdtsReader: void <init>(boolean)>(1);

        r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader> = $r1;

        $r2 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r2.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(2048);

        r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray packetBuffer> = $r2;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize> = -1;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: long firstFramePosition> = -1L;

        $r3 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r3.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(10);

        r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch> = $r3;

        $r4 = new androidx.media3.common.util.ParsableBitArray;

        $r5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        specialinvoke $r4.<androidx.media3.common.util.ParsableBitArray: void <init>(byte[])>($r6);

        r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableBitArray scratchBits> = $r4;

        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, i1, i2, $i3, i4, i5, i6, $i7;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5, $r6;
        byte[] $r3, $r7;
        boolean $z0;
        androidx.media3.common.util.ParsableBitArray $r8, $r9;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        i0 = specialinvoke r0.<androidx.media3.extractor.ts.AdtsExtractor: int peekId3Header(androidx.media3.extractor.ExtractorInput)>(r1);

        i4 = i0;

        i5 = 0;

        i6 = 0;

     label1:
        $r2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r3, 0, 2);

        $r4 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i1 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        $z0 = staticinvoke <androidx.media3.extractor.ts.AdtsReader: boolean isAdtsSyncWord(int)>(i1);

        if $z0 != 0 goto label2;

        i6 = 0;

        i5 = 0;

        i4 = i4 + 1;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>(i4);

        goto label5;

     label2:
        i6 = i6 + 1;

        if i6 < 4 goto label3;

        if i5 <= 188 goto label3;

        return 1;

     label3:
        $r6 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r7 = virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r7, 0, 4);

        $r8 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableBitArray scratchBits>;

        virtualinvoke $r8.<androidx.media3.common.util.ParsableBitArray: void setPosition(int)>(14);

        $r9 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableBitArray scratchBits>;

        i2 = virtualinvoke $r9.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(13);

        if i2 > 6 goto label4;

        i6 = 0;

        i5 = 0;

        i4 = i4 + 1;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>(i4);

        goto label5;

     label4:
        $i3 = i2 - 6;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>($i3);

        i5 = i5 + i2;

     label5:
        $i7 = i4 - i0;

        if $i7 < 8192 goto label6;

        return 0;

     label6:
        goto label1;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator $r2;
        androidx.media3.extractor.ts.AdtsReader $r3;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput> = r1;

        $r3 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        $r2 = new androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator;

        specialinvoke $r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: void <init>(int,int)>(0, 1);

        virtualinvoke $r3.<androidx.media3.extractor.ts.AdtsReader: void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)>(r1, $r2);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        return;
    }

    public void seek(long, long)
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        long l0, l1;
        androidx.media3.extractor.ts.AdtsReader $r1;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean startedPacket> = 0;

        $r1 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        virtualinvoke $r1.<androidx.media3.extractor.ts.AdtsReader: void seek()>();

        r0.<androidx.media3.extractor.ts.AdtsExtractor: long firstSampleTimestampUs> = l1;

        return;
    }

    public void release()
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        return;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        long l0, $l4;
        boolean z0, z1, $z2, $z3, $z4;
        int i1, $i2, $i3, $i5, $i6;
        androidx.media3.extractor.ExtractorOutput $r3;
        androidx.media3.common.util.ParsableByteArray $r5, $r7, $r8, $r9;
        byte[] $r6;
        androidx.media3.extractor.ts.AdtsReader $r10, $r11;
        byte $b7;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        $r3 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

        l0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getLength()>();

        $i2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int flags>;

        $i3 = $i2 & 2;

        if $i3 != 0 goto label1;

        $i5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int flags>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label2;

        $b7 = l0 cmp -1L;

        if $b7 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        if z0 == 0 goto label4;

        specialinvoke r0.<androidx.media3.extractor.ts.AdtsExtractor: void calculateAverageFrameSize(androidx.media3.extractor.ExtractorInput)>(r1);

     label4:
        $r5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray packetBuffer>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        i1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: int read(byte[],int,int)>($r6, 0, 2048);

        if i1 != -1 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        z1 = $z4;

        specialinvoke r0.<androidx.media3.extractor.ts.AdtsExtractor: void maybeOutputSeekMap(long,boolean)>(l0, z1);

        if z1 == 0 goto label7;

        return -1;

     label7:
        $r7 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray packetBuffer>;

        virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r8 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray packetBuffer>;

        virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: void setLimit(int)>(i1);

        $z2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean startedPacket>;

        if $z2 != 0 goto label8;

        $r11 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        $l4 = r0.<androidx.media3.extractor.ts.AdtsExtractor: long firstSampleTimestampUs>;

        virtualinvoke $r11.<androidx.media3.extractor.ts.AdtsReader: void packetStarted(long,int)>($l4, 4);

        r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean startedPacket> = 1;

     label8:
        $r10 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        $r9 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray packetBuffer>;

        virtualinvoke $r10.<androidx.media3.extractor.ts.AdtsReader: void consume(androidx.media3.common.util.ParsableByteArray)>($r9);

        return 0;
    }

    private int peekId3Header(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, $i1, $i2, i6;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5, $r6, $r7;
        byte[] $r3;
        long $l3, $l5;
        byte $b4;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        i6 = 0;

     label1:
        $r2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r3, 0, 10);

        $r4 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i1 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: int readUnsignedInt24()>();

        if $i1 == 4801587 goto label2;

        goto label3;

     label2:
        $r6 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(3);

        $r7 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i0 = virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: int readSynchSafeInt()>();

        $i2 = 10 + i0;

        i6 = i6 + $i2;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>(i0);

        goto label1;

     label3:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>(i6);

        $l3 = r0.<androidx.media3.extractor.ts.AdtsExtractor: long firstFramePosition>;

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label4;

        $l5 = (long) i6;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: long firstFramePosition> = $l5;

     label4:
        return i6;
    }

    private void maybeOutputSeekMap(long, boolean)
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        long l0, $l3, $l8;
        boolean z0, z1, $z2, $z3, $z4;
        int $i1, $i2, $i5, $i6, $i10;
        androidx.media3.extractor.SeekMap$Unseekable $r1;
        androidx.media3.extractor.ExtractorOutput $r2, $r4;
        androidx.media3.extractor.ts.AdtsReader $r3, $r7;
        byte $b4, $b9;
        androidx.media3.extractor.SeekMap $r5;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean hasOutputSeekMap>;

        if $z2 == 0 goto label1;

        return;

     label1:
        $i1 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int flags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label2;

        $i10 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize>;

        if $i10 <= 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z1 = $z3;

        if z1 == 0 goto label4;

        $r7 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        $l8 = virtualinvoke $r7.<androidx.media3.extractor.ts.AdtsReader: long getSampleDurationUs()>();

        $b9 = $l8 cmp -9223372036854775807L;

        if $b9 != 0 goto label4;

        if z0 != 0 goto label4;

        return;

     label4:
        if z1 == 0 goto label7;

        $r3 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        $l3 = virtualinvoke $r3.<androidx.media3.extractor.ts.AdtsReader: long getSampleDurationUs()>();

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 == 0 goto label7;

        $r4 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $i5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int flags>;

        $i6 = $i5 & 2;

        if $i6 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        $r5 = specialinvoke r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.SeekMap getConstantBitrateSeekMap(long,boolean)>(l0, $z4);

        interfaceinvoke $r4.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r5);

        goto label8;

     label7:
        $r2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r1 = new androidx.media3.extractor.SeekMap$Unseekable;

        specialinvoke $r1.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>(-9223372036854775807L);

        interfaceinvoke $r2.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r1);

     label8:
        r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean hasOutputSeekMap> = 1;

        return;
    }

    private void calculateAverageFrameSize(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, $i5, $i7, i9, i11;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l1, $l3, $l4, $l6, l10;
        byte $b2;
        androidx.media3.common.util.ParsableByteArray $r2, $r3, $r4, $r10;
        byte[] $r5, $r11;
        androidx.media3.common.util.ParsableBitArray $r6, $r7;
        androidx.media3.common.ParserException $r8;
        java.lang.Throwable $r9, r12, r13;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $z0 = r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean hasCalculatedAverageFrameSize>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize> = -1;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        $l1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label02;

        specialinvoke r0.<androidx.media3.extractor.ts.AdtsExtractor: int peekId3Header(androidx.media3.extractor.ExtractorInput)>(r1);

     label02:
        i9 = 0;

        l10 = 0L;

     label03:
        $r10 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r11 = virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $z4 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>($r11, 0, 2, 1);

        if $z4 == 0 goto label09;

        $r2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r3 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i11 = virtualinvoke $r3.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        $z1 = staticinvoke <androidx.media3.extractor.ts.AdtsReader: boolean isAdtsSyncWord(int)>(i11);

        if $z1 != 0 goto label04;

        i9 = 0;

        goto label09;

     label04:
        $r4 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r5 = virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $z2 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>($r5, 0, 4, 1);

        if $z2 != 0 goto label05;

        goto label09;

     label05:
        $r6 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableBitArray scratchBits>;

        virtualinvoke $r6.<androidx.media3.common.util.ParsableBitArray: void setPosition(int)>(14);

        $r7 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.common.util.ParsableBitArray scratchBits>;

        i0 = virtualinvoke $r7.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(13);

        if i0 > 6 goto label06;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean hasCalculatedAverageFrameSize> = 1;

        $r8 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Malformed ADTS stream", null);

        r13 = (java.lang.Throwable) $r8;

        throw r13;

     label06:
        $l6 = (long) i0;

        l10 = l10 + $l6;

        i9 = i9 + 1;

        if i9 != 1000 goto label07;

        goto label09;

     label07:
        $i7 = i0 - 6;

        $z3 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: boolean advancePeekPosition(int,boolean)>($i7, 1);

        if $z3 != 0 goto label08;

        goto label09;

     label08:
        goto label03;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

        r12 = $r9;

     label11:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        if i9 <= 0 goto label12;

        $l3 = (long) i9;

        $l4 = l10 / $l3;

        $i5 = (int) $l4;

        r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize> = $i5;

        goto label13;

     label12:
        r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize> = -1;

     label13:
        r0.<androidx.media3.extractor.ts.AdtsExtractor: boolean hasCalculatedAverageFrameSize> = 1;

        return;

        catch java.io.EOFException from label03 to label09 with label10;
    }

    private androidx.media3.extractor.SeekMap getConstantBitrateSeekMap(long, boolean)
    {
        androidx.media3.extractor.ts.AdtsExtractor r0;
        long l0, $l3, $l5;
        boolean z0;
        int i1, $i2, $i4;
        androidx.media3.extractor.ts.AdtsReader $r1;
        androidx.media3.extractor.ConstantBitrateSeekMap $r2;

        r0 := @this: androidx.media3.extractor.ts.AdtsExtractor;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $i2 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize>;

        $r1 = r0.<androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ts.AdtsReader reader>;

        $l3 = virtualinvoke $r1.<androidx.media3.extractor.ts.AdtsReader: long getSampleDurationUs()>();

        i1 = staticinvoke <androidx.media3.extractor.ts.AdtsExtractor: int getBitrateFromFrameSize(int,long)>($i2, $l3);

        $r2 = new androidx.media3.extractor.ConstantBitrateSeekMap;

        $l5 = r0.<androidx.media3.extractor.ts.AdtsExtractor: long firstFramePosition>;

        $i4 = r0.<androidx.media3.extractor.ts.AdtsExtractor: int averageFrameSize>;

        specialinvoke $r2.<androidx.media3.extractor.ConstantBitrateSeekMap: void <init>(long,long,int,int,boolean)>(l0, $l5, i1, $i4, z0);

        return $r2;
    }

    private static int getBitrateFromFrameSize(int, long)
    {
        int i0, $i6;
        long l1, $l2, $l3, $l4, $l5;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $l2 = (long) i0;

        $l3 = $l2 * 8L;

        $l4 = $l3 * 1000000L;

        $l5 = $l4 / l1;

        $i6 = (int) $l5;

        return $i6;
    }

    private static androidx.media3.extractor.Extractor[] lambda$static$0()
    {
        androidx.media3.extractor.Extractor[] $r0;
        androidx.media3.extractor.ts.AdtsExtractor $r1;

        $r0 = newarray (androidx.media3.extractor.Extractor)[1];

        $r1 = new androidx.media3.extractor.ts.AdtsExtractor;

        specialinvoke $r1.<androidx.media3.extractor.ts.AdtsExtractor: void <init>()>();

        $r0[0] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.extractor.ExtractorsFactory $r0;

        $r0 = dynamicinvoke "createExtractors" <androidx.media3.extractor.ExtractorsFactory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.Extractor[] lambda$static$0()>, methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__());

        <androidx.media3.extractor.ts.AdtsExtractor: androidx.media3.extractor.ExtractorsFactory FACTORY> = $r0;

        return;
    }

androidx.media3.extractor.ts.AdtsExtractor$Flags
