kotlin.jvm.internal.TypeParameterReference
<kotlin.jvm.internal.TypeParameterReference: kotlin.jvm.internal.TypeParameterReference$Companion Companion>
<kotlin.jvm.internal.TypeParameterReference: java.util.List bounds>
<kotlin.jvm.internal.TypeParameterReference: java.lang.Object container>
<kotlin.jvm.internal.TypeParameterReference: boolean isReified>
<kotlin.jvm.internal.TypeParameterReference: java.lang.String name>
<kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance variance>
    static void <clinit>()
    {
        kotlin.jvm.internal.TypeParameterReference$Companion $r0;

        $r0 = new kotlin.jvm.internal.TypeParameterReference$Companion;

        specialinvoke $r0.<kotlin.jvm.internal.TypeParameterReference$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.jvm.internal.TypeParameterReference: kotlin.jvm.internal.TypeParameterReference$Companion Companion> = $r0;

        return;
    }

    public void <init>(java.lang.Object, java.lang.String, kotlin.reflect.KVariance, boolean)
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        kotlin.reflect.KVariance $r3;
        boolean $z0;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: kotlin.reflect.KVariance;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "variance");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.Object container> = $r1;

        $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.String name> = $r2;

        $r0.<kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance variance> = $r3;

        $r0.<kotlin.jvm.internal.TypeParameterReference: boolean isReified> = $z0;

        return;
    }

    public static void getUpperBounds$annotations()
    {
        return;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.jvm.internal.TypeParameterReference $r0, $r3;
        java.lang.Object $r1, $r2, $r4;
        boolean $z0;
        java.lang.String $r5, $r6;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlin.jvm.internal.TypeParameterReference;

        if $z0 == 0 goto label1;

        $r2 = $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.Object container>;

        $r3 = (kotlin.jvm.internal.TypeParameterReference) $r1;

        $r4 = $r3.<kotlin.jvm.internal.TypeParameterReference: java.lang.Object container>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.String getName()>();

        $r0 = (kotlin.jvm.internal.TypeParameterReference) $r1;

        $r6 = virtualinvoke $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.String getName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getName()
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        java.lang.String r1;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        r1 = $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.String name>;

        return r1;
    }

    public java.util.List getUpperBounds()
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        java.util.List $r1;
        kotlin.reflect.KType $r2;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        $r1 = $r0.<kotlin.jvm.internal.TypeParameterReference: java.util.List bounds>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class)>(class "Ljava/lang/Object;");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        $r0.<kotlin.jvm.internal.TypeParameterReference: java.util.List bounds> = $r1;

     label1:
        return $r1;
    }

    public kotlin.reflect.KVariance getVariance()
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        kotlin.reflect.KVariance r1;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        r1 = $r0.<kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance variance>;

        return r1;
    }

    public int hashCode()
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        $r1 = $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.Object container>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $i0 = $i0 * 31;

        $r2 = virtualinvoke $r0.<kotlin.jvm.internal.TypeParameterReference: java.lang.String getName()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public boolean isReified()
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        boolean z0;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        z0 = $r0.<kotlin.jvm.internal.TypeParameterReference: boolean isReified>;

        return z0;
    }

    public final void setUpperBounds(java.util.List)
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        java.util.List $r1, $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "upperBounds");

        $r2 = $r0.<kotlin.jvm.internal.TypeParameterReference: java.util.List bounds>;

        if $r2 != null goto label1;

        $r0.<kotlin.jvm.internal.TypeParameterReference: java.util.List bounds> = $r1;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upper bounds of type parameter \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' have already been initialized.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public java.lang.String toString()
    {
        kotlin.jvm.internal.TypeParameterReference $r0;
        java.lang.String $r1;
        kotlin.jvm.internal.TypeParameterReference$Companion $r2;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference;

        $r2 = <kotlin.jvm.internal.TypeParameterReference: kotlin.jvm.internal.TypeParameterReference$Companion Companion>;

        $r1 = virtualinvoke $r2.<kotlin.jvm.internal.TypeParameterReference$Companion: java.lang.String toString(kotlin.reflect.KTypeParameter)>($r0);

        return $r1;
    }

kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings
<kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        kotlin.reflect.KVariance[] $r0;
        int $i0;
        int[] $r1;
        kotlin.reflect.KVariance $r2;

        $r0 = staticinvoke <kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        $r2 = <kotlin.reflect.KVariance: kotlin.reflect.KVariance INVARIANT>;

        $i0 = virtualinvoke $r2.<kotlin.reflect.KVariance: int ordinal()>();

        $r1[$i0] = 1;

        $r2 = <kotlin.reflect.KVariance: kotlin.reflect.KVariance IN>;

        $i0 = virtualinvoke $r2.<kotlin.reflect.KVariance: int ordinal()>();

        $r1[$i0] = 2;

        $r2 = <kotlin.reflect.KVariance: kotlin.reflect.KVariance OUT>;

        $i0 = virtualinvoke $r2.<kotlin.reflect.KVariance: int ordinal()>();

        $r1[$i0] = 3;

        <kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings: int[] $EnumSwitchMapping$0> = $r1;

        return;
    }

kotlin.jvm.internal.TypeParameterReference$Companion
    private void <init>()
    {
        kotlin.jvm.internal.TypeParameterReference$Companion $r0;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.jvm.internal.TypeParameterReference$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.jvm.internal.TypeParameterReference$Companion: void <init>()>();

        return;
    }

    public final java.lang.String toString(kotlin.reflect.KTypeParameter)
    {
        kotlin.jvm.internal.TypeParameterReference$Companion $r0;
        int[] $r1;
        kotlin.reflect.KTypeParameter $r2;
        java.lang.StringBuilder $r3;
        kotlin.reflect.KVariance $r4;
        int $i0;
        java.lang.String $r5;

        $r0 := @this: kotlin.jvm.internal.TypeParameterReference$Companion;

        $r2 := @parameter0: kotlin.reflect.KTypeParameter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "typeParameter");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke $r2.<kotlin.reflect.KTypeParameter: kotlin.reflect.KVariance getVariance()>();

        $r1 = <kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r4.<kotlin.reflect.KVariance: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        goto label4;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out ");

        goto label4;

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

     label4:
        $r5 = interfaceinvoke $r2.<kotlin.reflect.KTypeParameter: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "StringBuilder().apply(builderAction).toString()");

        return $r5;
    }

