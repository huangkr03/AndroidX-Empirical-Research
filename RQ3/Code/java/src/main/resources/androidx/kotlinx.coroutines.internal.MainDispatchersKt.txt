kotlinx.coroutines.internal.MainDispatchersKt
<kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING>
    static void <clinit>()
    {
        <kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING> = 1;

        return;
    }

    private static final kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable, java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        boolean $z0;
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher r2;
        kotlin.KotlinNothingValueException r3;

        $r1 := @parameter0: java.lang.Throwable;

        $r0 := @parameter1: java.lang.String;

        $z0 = <kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING>;

        if $z0 == 0 goto label1;

        r2 = new kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        specialinvoke r2.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void <init>(java.lang.Throwable,java.lang.String)>($r1, $r0);

        return r2;

     label1:
        if $r1 == null goto label2;

        throw $r1;

     label2:
        staticinvoke <kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()>();

        r3 = new kotlin.KotlinNothingValueException;

        specialinvoke r3.<kotlin.KotlinNothingValueException: void <init>()>();

        $r1 = (java.lang.Throwable) r3;

        throw $r1;
    }

    static kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable, java.lang.String, int, java.lang.Object)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.Object;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r1 = null;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r2 = null;

     label2:
        $r0 = staticinvoke <kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)>($r1, $r2);

        return $r0;
    }

    public static final boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher)
    {
        kotlinx.coroutines.MainCoroutineDispatcher $r0;
        boolean $z0;

        $r0 := @parameter0: kotlinx.coroutines.MainCoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $z0 = $r0 instanceof kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        return $z0;
    }

    public static final java.lang.Void throwMissingMainDispatcherException()
    {
        java.lang.IllegalStateException $r0;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Module with the Main dispatcher is missing. Add dependency providing the Main dispatcher, e.g. \'kotlinx-coroutines-android\' and ensure it has the same version as \'kotlinx-coroutines-core\'");

        throw $r0;
    }

    public static final kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory, java.util.List)
    {
        kotlinx.coroutines.internal.MainDispatcherFactory $r0;
        java.util.List $r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;

        $r0 := @parameter0: kotlinx.coroutines.internal.MainDispatcherFactory;

        $r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "factories");

     label1:
        $r2 = interfaceinvoke $r0.<kotlinx.coroutines.internal.MainDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = interfaceinvoke $r0.<kotlinx.coroutines.internal.MainDispatcherFactory: java.lang.String hintOnError()>();

        $r2 = staticinvoke <kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)>($r3, $r4);

     label4:
        return $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

