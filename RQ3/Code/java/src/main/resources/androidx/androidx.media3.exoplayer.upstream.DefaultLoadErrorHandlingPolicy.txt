androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int DEFAULT_MIN_LOADABLE_RETRY_COUNT>
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int DEFAULT_MIN_LOADABLE_RETRY_COUNT_PROGRESSIVE_LIVE>
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: long DEFAULT_TRACK_EXCLUSION_MS>
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: long DEFAULT_TRACK_BLACKLIST_MS>
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: long DEFAULT_LOCATION_EXCLUSION_MS>
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int DEFAULT_BEHAVIOR_MIN_LOADABLE_RETRY_COUNT>
<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int minimumLoadableRetryCount>
    public void <init>()
    {
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy r0;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: void <init>(int)>(-1);

        return;
    }

    public void <init>(int)
    {
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int minimumLoadableRetryCount> = i0;

        return;
    }

    public androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)
    {
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions r1;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r2;
        java.io.IOException $r3;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        $r3 = r2.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: java.io.IOException exception>;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: boolean isEligibleForFallback(java.io.IOException)>($r3);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z1 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: boolean isFallbackAvailable(int)>(1);

        if $z1 == 0 goto label2;

        $r5 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection;

        specialinvoke $r5.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: void <init>(int,long)>(1, 300000L);

        return $r5;

     label2:
        $z2 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions: boolean isFallbackAvailable(int)>(2);

        if $z2 == 0 goto label3;

        $r4 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection;

        specialinvoke $r4.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: void <init>(int,long)>(2, 60000L);

        return $r4;

     label3:
        return null;
    }

    public long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)
    {
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r1;
        java.io.IOException r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;
        long $l4;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        r2 = r1.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: java.io.IOException exception>;

        $z0 = r2 instanceof androidx.media3.common.ParserException;

        if $z0 != 0 goto label1;

        $z1 = r2 instanceof java.io.FileNotFoundException;

        if $z1 != 0 goto label1;

        $z2 = r2 instanceof androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException;

        if $z2 != 0 goto label1;

        $z3 = r2 instanceof androidx.media3.exoplayer.upstream.Loader$UnexpectedLoaderException;

        if $z3 != 0 goto label1;

        $z4 = staticinvoke <androidx.media3.datasource.DataSourceException: boolean isCausedByPositionOutOfRange(java.io.IOException)>(r2);

        if $z4 == 0 goto label2;

     label1:
        $l4 = -9223372036854775807L;

        goto label3;

     label2:
        $i0 = r1.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: int errorCount>;

        $i1 = $i0 - 1;

        $i2 = $i1 * 1000;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 5000);

        $l4 = (long) $i3;

     label3:
        return $l4;
    }

    public int getMinimumLoadableRetryCount(int)
    {
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy r0;
        int i0, $i1, $i2;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int minimumLoadableRetryCount>;

        if $i1 != -1 goto label3;

        if i0 != 7 goto label1;

        $b3 = 6;

        goto label2;

     label1:
        $b3 = 3;

     label2:
        return $b3;

     label3:
        $i2 = r0.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: int minimumLoadableRetryCount>;

        return $i2;
    }

    protected boolean isEligibleForFallback(java.io.IOException)
    {
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy r0;
        java.io.IOException r1;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        r1 := @parameter0: java.io.IOException;

        $z0 = r1 instanceof androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException) r1;

        $i0 = r2.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i0 == 403 goto label2;

        $i1 = r2.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i1 == 404 goto label2;

        $i2 = r2.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i2 == 410 goto label2;

        $i3 = r2.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i3 == 416 goto label2;

        $i4 = r2.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i4 == 500 goto label2;

        $i5 = r2.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i5 != 503 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

