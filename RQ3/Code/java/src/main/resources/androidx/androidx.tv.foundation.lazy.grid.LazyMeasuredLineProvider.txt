androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: boolean isVertical>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: java.util.List slotSizesSums>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int crossAxisSpacing>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int gridItemsCount>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int spaceBetweenLines>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider measuredItemProvider>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider spanLayoutProvider>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.MeasuredLineFactory measuredLineFactory>
    public void <init>(boolean, java.util.List, int, int, int, androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider, androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider, androidx.tv.foundation.lazy.grid.MeasuredLineFactory)
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider r0;
        boolean z0;
        java.util.List r1;
        int i0, i1, i2;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider r2;
        androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider r3;
        androidx.tv.foundation.lazy.grid.MeasuredLineFactory r4;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider;

        r3 := @parameter6: androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        r4 := @parameter7: androidx.tv.foundation.lazy.grid.MeasuredLineFactory;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slotSizesSums");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measuredItemProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "spanLayoutProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "measuredLineFactory");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: boolean isVertical> = z0;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: java.util.List slotSizesSums> = r1;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int crossAxisSpacing> = i0;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int gridItemsCount> = i1;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int spaceBetweenLines> = i2;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider measuredItemProvider> = r2;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider spanLayoutProvider> = r3;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.MeasuredLineFactory measuredLineFactory> = r4;

        return;
    }

    public final long childConstraints-JhjzzOo$tv_foundation_release(int, int)
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.List $r1, $r4;
        java.lang.Object $r2, $r5;
        java.lang.Number $r3, $r6;
        boolean $z0;
        androidx.compose.ui.unit.Constraints$Companion $r7, $r8;
        long $l14;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: java.util.List slotSizesSums>;

        $i6 = i0 + i1;

        $i7 = $i6 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i7);

        $r3 = (java.lang.Number) $r2;

        i2 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        if i0 != 0 goto label1;

        $i13 = 0;

        goto label2;

     label1:
        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: java.util.List slotSizesSums>;

        $i8 = i0 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i8);

        $r6 = (java.lang.Number) $r5;

        $i13 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

     label2:
        i3 = $i13;

        i4 = i2 - i3;

        $i10 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int crossAxisSpacing>;

        $i9 = i1 - 1;

        $i11 = $i10 * $i9;

        $i12 = i4 + $i11;

        i5 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i12, 0);

        $z0 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: boolean isVertical>;

        if $z0 == 0 goto label3;

        $r8 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $l14 = virtualinvoke $r8.<androidx.compose.ui.unit.Constraints$Companion: long fixedWidth-OenEA2s(int)>(i5);

        goto label4;

     label3:
        $r7 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $l14 = virtualinvoke $r7.<androidx.compose.ui.unit.Constraints$Companion: long fixedHeight-OenEA2s(int)>(i5);

     label4:
        return $l14;
    }

    public final androidx.tv.foundation.lazy.grid.LazyMeasuredLine getAndMeasure-MDRrEZU(int)
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider r0;
        int i0, i1, i2, i3, i4, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r1;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] r2, r3, r6;
        long l5, $l7;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem r4, r5;
        kotlin.Unit r7;
        androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider $r8;
        java.util.List $r9, $r11, $r13;
        androidx.tv.foundation.lazy.grid.MeasuredLineFactory $r10;
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine $r12;
        java.lang.Object $r14;
        androidx.tv.foundation.lazy.grid.TvGridItemSpan $r15;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider $r16;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider;

        i0 := @parameter0: int;

        $r8 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider spanLayoutProvider>;

        r1 = virtualinvoke $r8.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration getLineConfiguration(int)>(i0);

        $r9 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List getSpans()>();

        i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i1 == 0 goto label1;

        $i11 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int getFirstItemIndex()>();

        $i13 = $i11 + i1;

        $i12 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int gridItemsCount>;

        if $i13 != $i12 goto label2;

     label1:
        $i14 = 0;

        goto label3;

     label2:
        $i14 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: int spaceBetweenLines>;

     label3:
        i2 = $i14;

        i15 = 0;

        i16 = 0;

        r3 = newarray (androidx.tv.foundation.lazy.grid.LazyMeasuredItem)[i1];

     label4:
        if i16 >= i1 goto label5;

        i3 = i16;

        $r13 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List getSpans()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i3);

        $r15 = (androidx.tv.foundation.lazy.grid.TvGridItemSpan) $r14;

        $l7 = virtualinvoke $r15.<androidx.tv.foundation.lazy.grid.TvGridItemSpan: long unbox-impl()>();

        i4 = staticinvoke <androidx.tv.foundation.lazy.grid.TvGridItemSpan: int getCurrentLineSpan-impl(long)>($l7);

        l5 = virtualinvoke r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: long childConstraints-JhjzzOo$tv_foundation_release(int,int)>(i15, i4);

        $r16 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider measuredItemProvider>;

        $i8 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int getFirstItemIndex()>();

        $i9 = $i8 + i3;

        $i10 = staticinvoke <androidx.tv.foundation.lazy.grid.ItemIndex: int constructor-impl(int)>($i9);

        r4 = virtualinvoke $r16.<androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider: androidx.tv.foundation.lazy.grid.LazyMeasuredItem getAndMeasure-ndEz314(int,int,long)>($i10, i2, l5);

        r5 = r4;

        i6 = i3;

        r6 = r3;

        i15 = i15 + i4;

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r6[i6] = r4;

        i16 = i16 + 1;

        goto label4;

     label5:
        r2 = r3;

        $r10 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.MeasuredLineFactory measuredLineFactory>;

        $r11 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List getSpans()>();

        $r12 = interfaceinvoke $r10.<androidx.tv.foundation.lazy.grid.MeasuredLineFactory: androidx.tv.foundation.lazy.grid.LazyMeasuredLine createLine-62kVtck(int,androidx.tv.foundation.lazy.grid.LazyMeasuredItem[],java.util.List,int)>(i0, r2, $r11, i2);

        return $r12;
    }

    public final java.util.Map getKeyToIndexMap()
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider r0;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider $r1;
        java.util.Map $r2;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider;

        $r1 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider measuredItemProvider>;

        $r2 = virtualinvoke $r1.<androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider: java.util.Map getKeyToIndexMap()>();

        return $r2;
    }

