androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl
    void <init>(android.hardware.camera2.CameraCaptureSession)
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl r0;
        android.hardware.camera2.CameraCaptureSession r1;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        specialinvoke r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: void <init>(android.hardware.camera2.CameraCaptureSession,java.lang.Object)>(r1, null);

        return;
    }

    public int captureBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl r0;
        java.util.List r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        android.hardware.camera2.CameraCaptureSession $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $i0 = virtualinvoke $r4.<android.hardware.camera2.CameraCaptureSession: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r1, r2, r3);

        return $i0;
    }

    public int captureSingleRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl r0;
        android.hardware.camera2.CaptureRequest r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        android.hardware.camera2.CameraCaptureSession $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $i0 = virtualinvoke $r4.<android.hardware.camera2.CameraCaptureSession: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r1, r2, r3);

        return $i0;
    }

    public int setRepeatingBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl r0;
        java.util.List r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        android.hardware.camera2.CameraCaptureSession $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $i0 = virtualinvoke $r4.<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r1, r2, r3);

        return $i0;
    }

    public int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl r0;
        android.hardware.camera2.CaptureRequest r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        android.hardware.camera2.CameraCaptureSession $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatApi28Impl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $i0 = virtualinvoke $r4.<android.hardware.camera2.CameraCaptureSession: int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r1, r2, r3);

        return $i0;
    }

