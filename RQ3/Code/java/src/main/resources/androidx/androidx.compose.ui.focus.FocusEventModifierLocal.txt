androidx.compose.ui.focus.FocusEventModifierLocal
<androidx.compose.ui.focus.FocusEventModifierLocal: kotlin.jvm.functions.Function1 onFocusEvent>
<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>
<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector children>
<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>
    public void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector $r2, $r4;
        androidx.compose.ui.focus.FocusEventModifierLocal[] $r3;
        androidx.compose.ui.focus.FocusModifier[] $r5;
        byte b0, b1;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onFocusEvent");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.focus.FocusEventModifierLocal: kotlin.jvm.functions.Function1 onFocusEvent> = r1;

        b0 = 16;

        $r2 = new androidx.compose.runtime.collection.MutableVector;

        $r3 = newarray (androidx.compose.ui.focus.FocusEventModifierLocal)[b0];

        specialinvoke $r2.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r3, 0);

        r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector children> = $r2;

        b1 = 16;

        $r4 = new androidx.compose.runtime.collection.MutableVector;

        $r5 = newarray (androidx.compose.ui.focus.FocusModifier)[b1];

        specialinvoke $r4.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r5, 0);

        r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers> = $r4;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnFocusEvent()
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        $r1 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: kotlin.jvm.functions.Function1 onFocusEvent>;

        return $r1;
    }

    public androidx.compose.ui.modifier.ProvidableModifierLocal getKey()
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r1;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusEventModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusEvent()>();

        return $r1;
    }

    public androidx.compose.ui.focus.FocusEventModifierLocal getValue()
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        return r0;
    }

    public void onModifierLocalsUpdated(androidx.compose.ui.modifier.ModifierLocalReadScope)
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, r3, r4, $r10, $r11, $r17;
        androidx.compose.ui.modifier.ModifierLocalReadScope r1;
        androidx.compose.runtime.collection.MutableVector r5, r6, $r12, $r13;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r7, $r14;
        androidx.compose.ui.modifier.ModifierLocal $r8, $r15;
        java.lang.Object $r9, $r16;
        boolean $z4;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        r1 := @parameter0: androidx.compose.ui.modifier.ModifierLocalReadScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r7 = staticinvoke <androidx.compose.ui.focus.FocusEventModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusEvent()>();

        $r8 = (androidx.compose.ui.modifier.ModifierLocal) $r7;

        $r9 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r8);

        r3 = (androidx.compose.ui.focus.FocusEventModifierLocal) $r9;

        $r10 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r10);

        if $z4 != 0 goto label2;

        $r11 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        if $r11 == null goto label1;

        r4 = $r11;

        r5 = r4.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector children>;

        virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>(r0);

        $r13 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        specialinvoke r4.<androidx.compose.ui.focus.FocusEventModifierLocal: void removeFocusModifiers(androidx.compose.runtime.collection.MutableVector)>($r13);

        goto label1;

     label1:
        r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent> = r3;

        if r3 == null goto label2;

        r6 = r3.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector children>;

        virtualinvoke r6.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r0);

        $r12 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        specialinvoke r3.<androidx.compose.ui.focus.FocusEventModifierLocal: void addFocusModifiers(androidx.compose.runtime.collection.MutableVector)>($r12);

     label2:
        $r14 = staticinvoke <androidx.compose.ui.focus.FocusEventModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusEvent()>();

        $r15 = (androidx.compose.ui.modifier.ModifierLocal) $r14;

        $r16 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r15);

        $r17 = (androidx.compose.ui.focus.FocusEventModifierLocal) $r16;

        r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent> = $r17;

        return;
    }

    public final void addFocusModifier(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, $r3;
        androidx.compose.ui.focus.FocusModifier r1;
        androidx.compose.runtime.collection.MutableVector r2;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "focusModifier");

        r2 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        if $r3 == null goto label1;

        virtualinvoke $r3.<androidx.compose.ui.focus.FocusEventModifierLocal: void addFocusModifier(androidx.compose.ui.focus.FocusModifier)>(r1);

        goto label1;

     label1:
        return;
    }

    private final void addFocusModifiers(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, $r3;
        androidx.compose.runtime.collection.MutableVector r1, r2;
        int $i0;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        r2 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        $i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean addAll(int,androidx.compose.runtime.collection.MutableVector)>($i0, r1);

        $r3 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        if $r3 == null goto label1;

        specialinvoke $r3.<androidx.compose.ui.focus.FocusEventModifierLocal: void addFocusModifiers(androidx.compose.runtime.collection.MutableVector)>(r1);

        goto label1;

     label1:
        return;
    }

    public final void removeFocusModifier(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, $r3;
        androidx.compose.ui.focus.FocusModifier r1;
        androidx.compose.runtime.collection.MutableVector r2;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "focusModifier");

        r2 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        if $r3 == null goto label1;

        virtualinvoke $r3.<androidx.compose.ui.focus.FocusEventModifierLocal: void removeFocusModifier(androidx.compose.ui.focus.FocusModifier)>(r1);

        goto label1;

     label1:
        return;
    }

    private final void removeFocusModifiers(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, $r3;
        androidx.compose.runtime.collection.MutableVector r1, $r2;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        $r2 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean removeAll(androidx.compose.runtime.collection.MutableVector)>(r1);

        $r3 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        if $r3 == null goto label1;

        specialinvoke $r3.<androidx.compose.ui.focus.FocusEventModifierLocal: void removeFocusModifiers(androidx.compose.runtime.collection.MutableVector)>(r1);

        goto label1;

     label1:
        return;
    }

    public final void propagateFocusEvent()
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, $r22;
        androidx.compose.ui.focus.FocusStateImpl r1, $r10, $r13, $r16;
        int i0, $i1, $i2, $i3, i5;
        java.lang.Object[] r2, $r5, $r11;
        androidx.compose.ui.focus.FocusModifier r3, $r7, r18;
        androidx.compose.runtime.collection.MutableVector $r4, r17, $r20;
        java.lang.Object $r6, $r12;
        java.lang.Boolean $r9, r19;
        boolean $z2;
        int[] $r14;
        byte b4;
        kotlin.jvm.functions.Function1 $r21;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        $r4 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        $i1 = virtualinvoke $r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label02;
            default: goto label03;
        };

     label01:
        $r16 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        goto label12;

     label02:
        r17 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        b4 = 0;

        $r5 = virtualinvoke r17.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r6 = $r5[b4];

        $r7 = (androidx.compose.ui.focus.FocusModifier) $r6;

        $r16 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        goto label12;

     label03:
        r18 = null;

        r19 = null;

        $r20 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        i0 = virtualinvoke $r20.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label09;

        i5 = 0;

        $r11 = virtualinvoke $r20.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r11;

     label04:
        $r12 = r2[i5];

        r3 = (androidx.compose.ui.focus.FocusModifier) $r12;

        $r13 = virtualinvoke r3.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r14 = <androidx.compose.ui.focus.FocusEventModifierLocal$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke $r13.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i3 = $r14[$i2];

        tableswitch($i3)
        {
            case 1: goto label05;
            case 2: goto label05;
            case 3: goto label05;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label05:
        r18 = r3;

        r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label08;

     label06:
        if r19 != null goto label08;

        r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        goto label08;

     label07:
        r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label08:
        i5 = i5 + 1;

        if i5 < i0 goto label04;

     label09:
        if r18 == null goto label10;

        $r10 = virtualinvoke r18.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r16 = $r10;

        if $r10 != null goto label12;

     label10:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r19, $r9);

        if $z2 == 0 goto label11;

        $r16 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        goto label12;

     label11:
        $r16 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

     label12:
        r1 = $r16;

        $r21 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: kotlin.jvm.functions.Function1 onFocusEvent>;

        interfaceinvoke $r21.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r22 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal parent>;

        if $r22 == null goto label13;

        virtualinvoke $r22.<androidx.compose.ui.focus.FocusEventModifierLocal: void propagateFocusEvent()>();

        goto label13;

     label13:
        return;
    }

    public final void notifyIfNoFocusModifiers()
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0;
        androidx.compose.runtime.collection.MutableVector $r1;
        boolean $z0;
        androidx.compose.ui.focus.FocusStateImpl $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        $r1 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.runtime.collection.MutableVector focusModifiers>;

        $z0 = virtualinvoke $r1.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.ui.focus.FocusEventModifierLocal: kotlin.jvm.functions.Function1 onFocusEvent>;

        $r2 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label1:
        return;
    }

    public volatile java.lang.Object getValue()
    {
        androidx.compose.ui.focus.FocusEventModifierLocal r0, $r1;

        r0 := @this: androidx.compose.ui.focus.FocusEventModifierLocal;

        $r1 = virtualinvoke r0.<androidx.compose.ui.focus.FocusEventModifierLocal: androidx.compose.ui.focus.FocusEventModifierLocal getValue()>();

        return $r1;
    }

androidx.compose.ui.focus.FocusEventModifierLocal$WhenMappings
<androidx.compose.ui.focus.FocusEventModifierLocal$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.focus.FocusStateImpl[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.compose.ui.focus.FocusStateImpl $r2, $r3, $r4, $r5, $r6, $r7;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i3] = 3;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        $i4 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i4] = 4;

        $r6 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        $i5 = virtualinvoke $r6.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i5] = 5;

        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        $i6 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i6] = 6;

        <androidx.compose.ui.focus.FocusEventModifierLocal$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

