androidx.lifecycle.LifecycleController
<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle lifecycle>
<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle$State minState>
<androidx.lifecycle.LifecycleController: androidx.lifecycle.DispatchQueue dispatchQueue>
<androidx.lifecycle.LifecycleController: androidx.lifecycle.LifecycleEventObserver observer>
    public void <init>(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, androidx.lifecycle.DispatchQueue, kotlinx.coroutines.Job)
    {
        androidx.lifecycle.LifecycleController r0, r5;
        androidx.lifecycle.Lifecycle r1, $r7, $r12;
        androidx.lifecycle.Lifecycle$State r2, $r8, $r9;
        androidx.lifecycle.DispatchQueue r3;
        kotlinx.coroutines.Job r4;
        androidx.lifecycle.LifecycleEventObserver $r6, $r10;
        androidx.lifecycle.LifecycleObserver $r11;

        r0 := @this: androidx.lifecycle.LifecycleController;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r3 := @parameter2: androidx.lifecycle.DispatchQueue;

        r4 := @parameter3: kotlinx.coroutines.Job;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lifecycle");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "minState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "dispatchQueue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "parentJob");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle lifecycle> = r1;

        r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle$State minState> = r2;

        r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.DispatchQueue dispatchQueue> = r3;

        $r6 = dynamicinvoke "onStateChanged" <androidx.lifecycle.LifecycleEventObserver (androidx.lifecycle.LifecycleController,kotlinx.coroutines.Job)>(r0, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event), methodhandle: "REF_INVOKE_STATIC" <androidx.lifecycle.LifecycleController: void observer$lambda$0(androidx.lifecycle.LifecycleController,kotlinx.coroutines.Job,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>, methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event));

        r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.LifecycleEventObserver observer> = $r6;

        $r7 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle lifecycle>;

        $r8 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r9 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r8 != $r9 goto label1;

        r5 = r0;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r4, null, 1, null);

        virtualinvoke r5.<androidx.lifecycle.LifecycleController: void finish()>();

        goto label2;

     label1:
        $r12 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle lifecycle>;

        $r10 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.LifecycleEventObserver observer>;

        $r11 = (androidx.lifecycle.LifecycleObserver) $r10;

        virtualinvoke $r12.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r11);

     label2:
        return;
    }

    private final void handleDestroy(kotlinx.coroutines.Job)
    {
        androidx.lifecycle.LifecycleController r0;
        kotlinx.coroutines.Job r1;

        r0 := @this: androidx.lifecycle.LifecycleController;

        r1 := @parameter0: kotlinx.coroutines.Job;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r1, null, 1, null);

        virtualinvoke r0.<androidx.lifecycle.LifecycleController: void finish()>();

        return;
    }

    public final void finish()
    {
        androidx.lifecycle.LifecycleController r0;
        androidx.lifecycle.LifecycleEventObserver $r1;
        androidx.lifecycle.LifecycleObserver $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.DispatchQueue $r4;

        r0 := @this: androidx.lifecycle.LifecycleController;

        $r3 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle lifecycle>;

        $r1 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.LifecycleEventObserver observer>;

        $r2 = (androidx.lifecycle.LifecycleObserver) $r1;

        virtualinvoke $r3.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r2);

        $r4 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.DispatchQueue dispatchQueue>;

        virtualinvoke $r4.<androidx.lifecycle.DispatchQueue: void finish()>();

        return;
    }

    private static final void observer$lambda$0(androidx.lifecycle.LifecycleController, kotlinx.coroutines.Job, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.LifecycleController r0, r4;
        kotlinx.coroutines.Job $r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.lifecycle.Lifecycle$Event r3;
        androidx.lifecycle.Lifecycle $r5, $r8;
        androidx.lifecycle.Lifecycle$State $r6, $r7, $r9, $r10;
        java.lang.Enum $r11;
        int $i0;
        androidx.lifecycle.DispatchQueue $r12, $r13;

        r0 := @parameter0: androidx.lifecycle.LifecycleController;

        $r1 := @parameter1: kotlinx.coroutines.Job;

        r2 := @parameter2: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter3: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$parentJob");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "<anonymous parameter 1>");

        $r5 = interfaceinvoke r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r6 = virtualinvoke $r5.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r7 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r6 != $r7 goto label1;

        r4 = r0;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r1, null, 1, null);

        virtualinvoke r4.<androidx.lifecycle.LifecycleController: void finish()>();

        goto label3;

     label1:
        $r8 = interfaceinvoke r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r9 = virtualinvoke $r8.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r10 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle$State minState>;

        $r11 = (java.lang.Enum) $r10;

        $i0 = virtualinvoke $r9.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r11);

        if $i0 >= 0 goto label2;

        $r13 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.DispatchQueue dispatchQueue>;

        virtualinvoke $r13.<androidx.lifecycle.DispatchQueue: void pause()>();

        goto label3;

     label2:
        $r12 = r0.<androidx.lifecycle.LifecycleController: androidx.lifecycle.DispatchQueue dispatchQueue>;

        virtualinvoke $r12.<androidx.lifecycle.DispatchQueue: void resume()>();

     label3:
        return;
    }

