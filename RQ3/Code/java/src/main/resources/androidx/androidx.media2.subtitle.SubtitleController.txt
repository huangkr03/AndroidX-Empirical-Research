androidx.media2.subtitle.SubtitleController
<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.MediaTimeProvider mTimeProvider>
<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mRenderers>
<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>
<androidx.media2.subtitle.SubtitleController: java.lang.Object mRenderersLock>
<androidx.media2.subtitle.SubtitleController: java.lang.Object mTracksLock>
<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>
<androidx.media2.subtitle.SubtitleController: boolean mShowing>
<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>
<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>
<androidx.media2.subtitle.SubtitleController: int WHAT_SHOW>
<androidx.media2.subtitle.SubtitleController: int WHAT_HIDE>
<androidx.media2.subtitle.SubtitleController: int WHAT_SELECT_TRACK>
<androidx.media2.subtitle.SubtitleController: int WHAT_SELECT_DEFAULT_TRACK>
<androidx.media2.subtitle.SubtitleController: android.os.Handler$Callback mCallback>
<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>
<androidx.media2.subtitle.SubtitleController: boolean mTrackIsExplicit>
<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit>
<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>
<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Listener mListener>
<androidx.media2.subtitle.SubtitleController: boolean $assertionsDisabled>
    public void <init>(android.content.Context)
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.content.Context r1;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void <init>(android.content.Context,androidx.media2.subtitle.MediaTimeProvider,androidx.media2.subtitle.SubtitleController$Listener)>(r1, null, null);

        return;
    }

    public void <init>(android.content.Context, androidx.media2.subtitle.MediaTimeProvider, androidx.media2.subtitle.SubtitleController$Listener)
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.content.Context r1;
        androidx.media2.subtitle.MediaTimeProvider r2;
        androidx.media2.subtitle.SubtitleController$Listener r3;
        java.lang.Object $r4, $r5, $r10;
        androidx.media2.subtitle.SubtitleController$1 $r6;
        androidx.media2.subtitle.SubtitleController$2 $r7;
        java.util.ArrayList $r8, $r9;
        android.view.accessibility.CaptioningManager $r11;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.subtitle.MediaTimeProvider;

        r3 := @parameter2: androidx.media2.subtitle.SubtitleController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mRenderersLock> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mTracksLock> = $r5;

        $r6 = new androidx.media2.subtitle.SubtitleController$1;

        specialinvoke $r6.<androidx.media2.subtitle.SubtitleController$1: void <init>(androidx.media2.subtitle.SubtitleController)>(r0);

        r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler$Callback mCallback> = $r6;

        $r7 = new androidx.media2.subtitle.SubtitleController$2;

        specialinvoke $r7.<androidx.media2.subtitle.SubtitleController$2: void <init>(androidx.media2.subtitle.SubtitleController)>(r0);

        r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener> = $r7;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mTrackIsExplicit> = 0;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.MediaTimeProvider mTimeProvider> = r2;

        r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Listener mListener> = r3;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mRenderers> = $r8;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mShowing> = 0;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks> = $r9;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("captioning");

        $r11 = (android.view.accessibility.CaptioningManager) $r10;

        r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager> = $r11;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r1;
        android.view.accessibility.CaptioningManager $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r2.<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r1);

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public androidx.media2.subtitle.SubtitleTrack[] getTracks()
    {
        androidx.media2.subtitle.SubtitleController r0;
        java.lang.Object r1, $r4;
        androidx.media2.subtitle.SubtitleTrack[] r2;
        java.lang.Throwable r3, $r8;
        java.util.ArrayList $r5, $r6;
        int $i0;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r4 = r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mTracksLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        r2 = newarray (androidx.media2.subtitle.SubtitleTrack)[$i0];

        $r6 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.media2.subtitle.SubtitleTrack getSelectedTrack()
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack $r1;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        return $r1;
    }

    private androidx.media2.subtitle.SubtitleTrack$RenderingWidget getRenderingWidget()
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack $r1, $r2;
        androidx.media2.subtitle.SubtitleTrack$RenderingWidget $r3;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        $r3 = virtualinvoke $r2.<androidx.media2.subtitle.SubtitleTrack: androidx.media2.subtitle.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        return $r3;
    }

    public boolean selectTrack(androidx.media2.subtitle.SubtitleTrack)
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.util.ArrayList $r4;
        boolean $z0;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: androidx.media2.subtitle.SubtitleTrack;

        if r1 == null goto label1;

        $r4 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r1);

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void processOnAnchor(android.os.Message)>($r3);

        return 1;
    }

    void doSelectTrack(androidx.media2.subtitle.SubtitleTrack)
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack r1, $r2, $r3, $r5, $r9, $r10, $r13, $r14;
        androidx.media2.subtitle.SubtitleController$Anchor $r4, $r11;
        androidx.media2.subtitle.SubtitleController$Listener $r6, $r7;
        androidx.media2.subtitle.MediaTimeProvider $r8;
        androidx.media2.subtitle.SubtitleTrack$RenderingWidget $r12;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: androidx.media2.subtitle.SubtitleTrack;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mTrackIsExplicit> = 1;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r2 != r1 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r3 == null goto label2;

        $r13 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r13.<androidx.media2.subtitle.SubtitleTrack: void hide()>();

        $r14 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r14.<androidx.media2.subtitle.SubtitleTrack: void setTimeProvider(androidx.media2.subtitle.MediaTimeProvider)>(null);

     label2:
        r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack> = r1;

        $r4 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        if $r4 == null goto label3;

        $r11 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        $r12 = specialinvoke r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        interfaceinvoke $r11.<androidx.media2.subtitle.SubtitleController$Anchor: void setSubtitleWidget(androidx.media2.subtitle.SubtitleTrack$RenderingWidget)>($r12);

     label3:
        $r5 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r5 == null goto label4;

        $r9 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        $r8 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.MediaTimeProvider mTimeProvider>;

        virtualinvoke $r9.<androidx.media2.subtitle.SubtitleTrack: void setTimeProvider(androidx.media2.subtitle.MediaTimeProvider)>($r8);

        $r10 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r10.<androidx.media2.subtitle.SubtitleTrack: void show()>();

     label4:
        $r6 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Listener mListener>;

        if $r6 == null goto label5;

        $r7 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Listener mListener>;

        interfaceinvoke $r7.<androidx.media2.subtitle.SubtitleController$Listener: void onSubtitleTrackSelected(androidx.media2.subtitle.SubtitleTrack)>(r1);

     label5:
        return;
    }

    public androidx.media2.subtitle.SubtitleTrack getDefaultTrack()
    {
        androidx.media2.subtitle.SubtitleController r0;
        java.util.Locale r1, r18;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.Object r2, $r10, $r12;
        java.util.Iterator r3;
        androidx.media2.subtitle.SubtitleTrack r4, r17;
        android.media.MediaFormat r5;
        java.lang.String r6, $r13, $r14, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Throwable r7, $r16;
        android.view.accessibility.CaptioningManager $r8, $r9;
        java.util.ArrayList $r11;
        byte $b7, $b8, $b9, $b10;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r17 = null;

        i6 = -1;

        $r8 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        r1 = virtualinvoke $r8.<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>();

        r18 = r1;

        if r18 != null goto label01;

        r18 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label01:
        $r9 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $z5 = virtualinvoke $r9.<android.view.accessibility.CaptioningManager: boolean isEnabled()>();

        if $z5 != 0 goto label02;

        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z0 = $z9;

        $r10 = r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mTracksLock>;

        r2 = $r10;

        entermonitor $r10;

     label04:
        $r11 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label27;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media2.subtitle.SubtitleTrack) $r12;

        r5 = virtualinvoke r4.<androidx.media2.subtitle.SubtitleTrack: android.media.MediaFormat getFormat()>();

        r6 = virtualinvoke r5.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("language");

        $i1 = staticinvoke <androidx.media2.subtitle.SubtitleController$MediaFormatUtil: int getInteger(android.media.MediaFormat,java.lang.String,int)>(r5, "is-forced-subtitle", 0);

        if $i1 == 0 goto label06;

        $z11 = 1;

        goto label07;

     label06:
        $z11 = 0;

     label07:
        z1 = $z11;

        $i2 = staticinvoke <androidx.media2.subtitle.SubtitleController$MediaFormatUtil: int getInteger(android.media.MediaFormat,java.lang.String,int)>(r5, "is-autoselect", 1);

        if $i2 == 0 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        z2 = $z12;

        $i3 = staticinvoke <androidx.media2.subtitle.SubtitleController$MediaFormatUtil: int getInteger(android.media.MediaFormat,java.lang.String,int)>(r5, "is-default", 0);

        if $i3 == 0 goto label10;

        $z13 = 1;

        goto label11;

     label10:
        $z13 = 0;

     label11:
        z3 = $z13;

        if r18 == null goto label12;

        $r13 = virtualinvoke r18.<java.util.Locale: java.lang.String getLanguage()>();

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z6 != 0 goto label12;

        $r14 = virtualinvoke r18.<java.util.Locale: java.lang.String getISO3Language()>();

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z7 != 0 goto label12;

        $r15 = virtualinvoke r18.<java.util.Locale: java.lang.String getLanguage()>();

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z8 == 0 goto label13;

     label12:
        $z14 = 1;

        goto label14;

     label13:
        $z14 = 0;

     label14:
        z4 = $z14;

        if z1 == 0 goto label15;

        $b7 = 0;

        goto label16;

     label15:
        $b7 = 8;

     label16:
        if r1 != null goto label17;

        if z3 == 0 goto label17;

        $b8 = 4;

        goto label18;

     label17:
        $b8 = 0;

     label18:
        $i4 = $b7 + $b8;

        if z2 == 0 goto label19;

        $b9 = 0;

        goto label20;

     label19:
        $b9 = 2;

     label20:
        $i5 = $i4 + $b9;

        if z4 == 0 goto label21;

        $b10 = 1;

        goto label22;

     label21:
        $b10 = 0;

     label22:
        i0 = $i5 + $b10;

        if z0 == 0 goto label23;

        if z1 != 0 goto label23;

        goto label05;

     label23:
        if r1 != null goto label24;

        if z3 != 0 goto label25;

     label24:
        if z4 == 0 goto label26;

        if z2 != 0 goto label25;

        if z1 != 0 goto label25;

        if r1 == null goto label26;

     label25:
        if i0 <= i6 goto label26;

        i6 = i0;

        r17 = r4;

     label26:
        goto label05;

     label27:
        exitmonitor r2;

     label28:
        goto label31;

     label29:
        $r16 := @caughtexception;

        r7 = $r16;

        exitmonitor r2;

     label30:
        throw r7;

     label31:
        return r17;

        catch java.lang.Throwable from label04 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    public void selectDefaultTrack()
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    void doSelectDefaultTrack()
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack r1, $r3, $r4, $r5, $r6;
        boolean $z0, $z2, $z3, $z4;
        android.view.accessibility.CaptioningManager $r2;
        int $i0, $i1;
        android.media.MediaFormat $r7;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $z0 = r0.<androidx.media2.subtitle.SubtitleController: boolean mTrackIsExplicit>;

        if $z0 == 0 goto label5;

        $z3 = r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit>;

        if $z3 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $z4 = virtualinvoke $r2.<android.view.accessibility.CaptioningManager: boolean isEnabled()>();

        if $z4 != 0 goto label2;

        $r3 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r3 == null goto label3;

        $r6 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        $r7 = virtualinvoke $r6.<androidx.media2.subtitle.SubtitleTrack: android.media.MediaFormat getFormat()>();

        $i1 = staticinvoke <androidx.media2.subtitle.SubtitleController$MediaFormatUtil: int getInteger(android.media.MediaFormat,java.lang.String,int)>($r7, "is-forced-subtitle", 0);

        if $i1 == 0 goto label3;

     label2:
        virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: void show()>();

        goto label4;

     label3:
        $r4 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r4 == null goto label4;

        $r5 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        $i0 = virtualinvoke $r5.<androidx.media2.subtitle.SubtitleTrack: int getTrackType()>();

        if $i0 != 4 goto label4;

        virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: void hide()>();

     label4:
        r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit> = 0;

     label5:
        r1 = virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack getDefaultTrack()>();

        if r1 == null goto label6;

        virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: boolean selectTrack(androidx.media2.subtitle.SubtitleTrack)>(r1);

        r0.<androidx.media2.subtitle.SubtitleController: boolean mTrackIsExplicit> = 0;

        $z2 = r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit>;

        if $z2 != 0 goto label6;

        virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: void show()>();

        r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit> = 0;

     label6:
        return;
    }

    public void reset()
    {
        androidx.media2.subtitle.SubtitleController r0;
        java.util.ArrayList $r1;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r2;
        android.view.accessibility.CaptioningManager $r3;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void checkAnchorLooper()>();

        virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: void hide()>();

        virtualinvoke r0.<androidx.media2.subtitle.SubtitleController: boolean selectTrack(androidx.media2.subtitle.SubtitleTrack)>(null);

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<androidx.media2.subtitle.SubtitleController: boolean mTrackIsExplicit> = 0;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        $r3 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r3.<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r2);

        return;
    }

    public androidx.media2.subtitle.SubtitleTrack addTrack(android.media.MediaFormat)
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.media.MediaFormat r1;
        java.lang.Object r2, r6, $r9, $r11, $r12;
        java.util.Iterator r3;
        androidx.media2.subtitle.SubtitleController$Renderer r4;
        androidx.media2.subtitle.SubtitleTrack r5;
        java.lang.Throwable r7, r8, $r17, $r18;
        java.util.ArrayList $r10, $r13, $r14;
        boolean $z0, $z1;
        int $i0;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r15;
        android.view.accessibility.CaptioningManager $r16;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: android.media.MediaFormat;

        $r9 = r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mRenderersLock>;

        r2 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mRenderers>;

        r3 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media2.subtitle.SubtitleController$Renderer) $r11;

        $z1 = virtualinvoke r4.<androidx.media2.subtitle.SubtitleController$Renderer: boolean supports(android.media.MediaFormat)>(r1);

        if $z1 == 0 goto label10;

        r5 = virtualinvoke r4.<androidx.media2.subtitle.SubtitleController$Renderer: androidx.media2.subtitle.SubtitleTrack createTrack(android.media.MediaFormat)>(r1);

        if r5 == null goto label10;

        $r12 = r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mTracksLock>;

        r6 = $r12;

        entermonitor $r12;

     label03:
        $r13 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label04;

        $r16 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r15 = r0.<androidx.media2.subtitle.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r16.<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r15);

     label04:
        $r14 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mTracks>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        exitmonitor r6;

     label05:
        goto label08;

     label06:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r6;

     label07:
        throw r7;

     label08:
        exitmonitor r2;

     label09:
        return r5;

     label10:
        goto label02;

     label11:
        exitmonitor r2;

     label12:
        goto label15;

     label13:
        $r17 := @caughtexception;

        r8 = $r17;

        exitmonitor r2;

     label14:
        throw r8;

     label15:
        return null;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void show()
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    void doShow()
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack $r1, $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mShowing> = 1;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit> = 1;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r2.<androidx.media2.subtitle.SubtitleTrack: void show()>();

     label1:
        return;
    }

    public void hide()
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    void doHide()
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleTrack $r1, $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r0.<androidx.media2.subtitle.SubtitleController: boolean mVisibilityIsExplicit> = 1;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r2.<androidx.media2.subtitle.SubtitleTrack: void hide()>();

     label1:
        r0.<androidx.media2.subtitle.SubtitleController: boolean mShowing> = 0;

        return;
    }

    public void registerRenderer(androidx.media2.subtitle.SubtitleController$Renderer)
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleController$Renderer r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        java.util.ArrayList $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: androidx.media2.subtitle.SubtitleController$Renderer;

        $r4 = r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mRenderersLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mRenderers>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r6 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mRenderers>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean hasRendererFor(android.media.MediaFormat)
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.media.MediaFormat r1;
        java.lang.Object r2, $r6, $r8;
        java.util.Iterator r3;
        androidx.media2.subtitle.SubtitleController$Renderer r4;
        java.lang.Throwable r5, $r9;
        java.util.ArrayList $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: android.media.MediaFormat;

        $r6 = r0.<androidx.media2.subtitle.SubtitleController: java.lang.Object mRenderersLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media2.subtitle.SubtitleController: java.util.ArrayList mRenderers>;

        r3 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media2.subtitle.SubtitleController$Renderer) $r8;

        $z1 = virtualinvoke r4.<androidx.media2.subtitle.SubtitleController$Renderer: boolean supports(android.media.MediaFormat)>(r1);

        if $z1 == 0 goto label4;

        exitmonitor r2;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        return 0;

     label7:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setAnchor(androidx.media2.subtitle.SubtitleController$Anchor)
    {
        androidx.media2.subtitle.SubtitleController r0;
        androidx.media2.subtitle.SubtitleController$Anchor r1, $r2, $r3, $r4, $r6, $r9, $r11;
        android.os.Handler $r5;
        android.os.Looper $r7;
        android.os.Handler$Callback $r8;
        androidx.media2.subtitle.SubtitleTrack$RenderingWidget $r10;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: androidx.media2.subtitle.SubtitleController$Anchor;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        if $r2 != r1 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        if $r3 == null goto label2;

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void checkAnchorLooper()>();

        $r11 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        interfaceinvoke $r11.<androidx.media2.subtitle.SubtitleController$Anchor: void setSubtitleWidget(androidx.media2.subtitle.SubtitleTrack$RenderingWidget)>(null);

     label2:
        r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor> = r1;

        r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler> = null;

        $r4 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        if $r4 == null goto label3;

        $r5 = new android.os.Handler;

        $r6 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        $r7 = interfaceinvoke $r6.<androidx.media2.subtitle.SubtitleController$Anchor: android.os.Looper getSubtitleLooper()>();

        $r8 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler$Callback mCallback>;

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r7, $r8);

        r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler> = $r5;

        specialinvoke r0.<androidx.media2.subtitle.SubtitleController: void checkAnchorLooper()>();

        $r9 = r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleController$Anchor mAnchor>;

        $r10 = specialinvoke r0.<androidx.media2.subtitle.SubtitleController: androidx.media2.subtitle.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        interfaceinvoke $r9.<androidx.media2.subtitle.SubtitleController$Anchor: void setSubtitleWidget(androidx.media2.subtitle.SubtitleTrack$RenderingWidget)>($r10);

     label3:
        return;
    }

    private void checkAnchorLooper()
    {
        androidx.media2.subtitle.SubtitleController r0;
        boolean $z0, $z1;
        android.os.Looper $r1, $r3;
        android.os.Handler $r2, $r5;
        java.lang.AssertionError $r4, $r6;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        $z0 = <androidx.media2.subtitle.SubtitleController: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        if $r5 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Should have a looper already");

        throw $r6;

     label1:
        $z1 = <androidx.media2.subtitle.SubtitleController: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if $r1 == $r3 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Must be called from the anchor\'s looper");

        throw $r4;

     label2:
        return;
    }

    private void processOnAnchor(android.os.Message)
    {
        androidx.media2.subtitle.SubtitleController r0;
        android.os.Message r1;
        boolean $z0;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3, $r5, $r6, $r7;
        java.lang.AssertionError $r8;

        r0 := @this: androidx.media2.subtitle.SubtitleController;

        r1 := @parameter0: android.os.Message;

        $z0 = <androidx.media2.subtitle.SubtitleController: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        if $r7 != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("Should have a looper already");

        throw $r8;

     label1:
        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        if $r2 != $r4 goto label2;

        $r6 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void dispatchMessage(android.os.Message)>(r1);

        goto label3;

     label2:
        $r5 = r0.<androidx.media2.subtitle.SubtitleController: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Landroidx/media2/subtitle/SubtitleController;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <androidx.media2.subtitle.SubtitleController: boolean $assertionsDisabled> = $z1;

        return;
    }

androidx.media2.subtitle.SubtitleController$1
<androidx.media2.subtitle.SubtitleController$1: androidx.media2.subtitle.SubtitleController this$0>
    void <init>(androidx.media2.subtitle.SubtitleController)
    {
        androidx.media2.subtitle.SubtitleController$1 r0;
        androidx.media2.subtitle.SubtitleController r1;

        r0 := @this: androidx.media2.subtitle.SubtitleController$1;

        r1 := @parameter0: androidx.media2.subtitle.SubtitleController;

        r0.<androidx.media2.subtitle.SubtitleController$1: androidx.media2.subtitle.SubtitleController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        androidx.media2.subtitle.SubtitleController$1 r0;
        android.os.Message r1;
        int $i0;
        androidx.media2.subtitle.SubtitleController $r2, $r5, $r6, $r7;
        java.lang.Object $r3;
        androidx.media2.subtitle.SubtitleTrack $r4;

        r0 := @this: androidx.media2.subtitle.SubtitleController$1;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r7 = r0.<androidx.media2.subtitle.SubtitleController$1: androidx.media2.subtitle.SubtitleController this$0>;

        virtualinvoke $r7.<androidx.media2.subtitle.SubtitleController: void doShow()>();

        return 1;

     label2:
        $r6 = r0.<androidx.media2.subtitle.SubtitleController$1: androidx.media2.subtitle.SubtitleController this$0>;

        virtualinvoke $r6.<androidx.media2.subtitle.SubtitleController: void doHide()>();

        return 1;

     label3:
        $r5 = r0.<androidx.media2.subtitle.SubtitleController$1: androidx.media2.subtitle.SubtitleController this$0>;

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        $r4 = (androidx.media2.subtitle.SubtitleTrack) $r3;

        virtualinvoke $r5.<androidx.media2.subtitle.SubtitleController: void doSelectTrack(androidx.media2.subtitle.SubtitleTrack)>($r4);

        return 1;

     label4:
        $r2 = r0.<androidx.media2.subtitle.SubtitleController$1: androidx.media2.subtitle.SubtitleController this$0>;

        virtualinvoke $r2.<androidx.media2.subtitle.SubtitleController: void doSelectDefaultTrack()>();

        return 1;

     label5:
        return 0;
    }

androidx.media2.subtitle.SubtitleController$2
<androidx.media2.subtitle.SubtitleController$2: androidx.media2.subtitle.SubtitleController this$0>
    void <init>(androidx.media2.subtitle.SubtitleController)
    {
        androidx.media2.subtitle.SubtitleController$2 r0;
        androidx.media2.subtitle.SubtitleController r1;

        r0 := @this: androidx.media2.subtitle.SubtitleController$2;

        r1 := @parameter0: androidx.media2.subtitle.SubtitleController;

        r0.<androidx.media2.subtitle.SubtitleController$2: androidx.media2.subtitle.SubtitleController this$0> = r1;

        specialinvoke r0.<android.view.accessibility.CaptioningManager$CaptioningChangeListener: void <init>()>();

        return;
    }

    public void onEnabledChanged(boolean)
    {
        androidx.media2.subtitle.SubtitleController$2 r0;
        boolean z0;
        androidx.media2.subtitle.SubtitleController $r1;

        r0 := @this: androidx.media2.subtitle.SubtitleController$2;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media2.subtitle.SubtitleController$2: androidx.media2.subtitle.SubtitleController this$0>;

        virtualinvoke $r1.<androidx.media2.subtitle.SubtitleController: void selectDefaultTrack()>();

        return;
    }

    public void onLocaleChanged(java.util.Locale)
    {
        androidx.media2.subtitle.SubtitleController$2 r0;
        java.util.Locale r1;
        androidx.media2.subtitle.SubtitleController $r2;

        r0 := @this: androidx.media2.subtitle.SubtitleController$2;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<androidx.media2.subtitle.SubtitleController$2: androidx.media2.subtitle.SubtitleController this$0>;

        virtualinvoke $r2.<androidx.media2.subtitle.SubtitleController: void selectDefaultTrack()>();

        return;
    }

androidx.media2.subtitle.SubtitleController$Anchor
<androidx.media2.subtitle.SubtitleController$Anchor: void setSubtitleWidget(androidx.media2.subtitle.SubtitleTrack$RenderingWidget)>
<androidx.media2.subtitle.SubtitleController$Anchor: android.os.Looper getSubtitleLooper()>
androidx.media2.subtitle.SubtitleController$Listener
<androidx.media2.subtitle.SubtitleController$Listener: void onSubtitleTrackSelected(androidx.media2.subtitle.SubtitleTrack)>
androidx.media2.subtitle.SubtitleController$MediaFormatUtil
    void <init>()
    {
        androidx.media2.subtitle.SubtitleController$MediaFormatUtil r0;

        r0 := @this: androidx.media2.subtitle.SubtitleController$MediaFormatUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int getInteger(android.media.MediaFormat, java.lang.String, int)
    {
        android.media.MediaFormat r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Throwable r2, $r3;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $i1 = virtualinvoke r0.<android.media.MediaFormat: int getInteger(java.lang.String)>(r1);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        return i0;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

androidx.media2.subtitle.SubtitleController$Renderer
    public void <init>()
    {
        androidx.media2.subtitle.SubtitleController$Renderer r0;

        r0 := @this: androidx.media2.subtitle.SubtitleController$Renderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.media2.subtitle.SubtitleController$Renderer: boolean supports(android.media.MediaFormat)>
<androidx.media2.subtitle.SubtitleController$Renderer: androidx.media2.subtitle.SubtitleTrack createTrack(android.media.MediaFormat)>
