androidx.car.app.navigation.NavigationManager
<androidx.car.app.navigation.NavigationManager: androidx.car.app.CarContext mCarContext>
<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.INavigationManager$Stub mNavigationManager>
<androidx.car.app.navigation.NavigationManager: androidx.car.app.HostDispatcher mHostDispatcher>
<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.NavigationManagerCallback mNavigationManagerCallback>
<androidx.car.app.navigation.NavigationManager: java.util.concurrent.Executor mNavigationManagerCallbackExecutor>
<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating>
<androidx.car.app.navigation.NavigationManager: boolean mIsAutoDriveEnabled>
    public void updateTrip(androidx.car.app.navigation.model.Trip)
    {
        androidx.car.app.navigation.NavigationManager r0;
        androidx.car.app.navigation.model.Trip r1;
        androidx.car.app.serialization.Bundleable r2;
        boolean $z0;
        androidx.car.app.HostDispatcher $r3;
        androidx.car.app.HostCall $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        r1 := @parameter0: androidx.car.app.navigation.model.Trip;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $z0 = r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Navigation is not started");

        throw $r5;

     label1:
        r2 = staticinvoke <androidx.car.app.serialization.Bundleable: androidx.car.app.serialization.Bundleable create(java.lang.Object)>(r1);

        goto label2;

     label2:
        $r3 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.HostDispatcher mHostDispatcher>;

        $r4 = dynamicinvoke "dispatch" <androidx.car.app.HostCall (androidx.car.app.serialization.Bundleable)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.navigation.NavigationManager: java.lang.Object lambda$updateTrip$0(androidx.car.app.serialization.Bundleable,androidx.car.app.navigation.INavigationHost)>, methodtype: java.lang.Object __METHODTYPE__(androidx.car.app.navigation.INavigationHost));

        virtualinvoke $r3.<androidx.car.app.HostDispatcher: void dispatch(java.lang.String,java.lang.String,androidx.car.app.HostCall)>("navigation", "updateTrip", $r4);

        return;
    }

    public void setNavigationManagerCallback(androidx.car.app.navigation.NavigationManagerCallback)
    {
        androidx.car.app.navigation.NavigationManager r0;
        androidx.car.app.navigation.NavigationManagerCallback r1;
        java.util.concurrent.Executor r2;
        androidx.car.app.CarContext $r3;
        android.content.Context r4;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        r1 := @parameter0: androidx.car.app.navigation.NavigationManagerCallback;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $r3 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.CarContext mCarContext>;

        r4 = (android.content.Context) $r3;

        r2 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>(r4);

        virtualinvoke r0.<androidx.car.app.navigation.NavigationManager: void setNavigationManagerCallback(java.util.concurrent.Executor,androidx.car.app.navigation.NavigationManagerCallback)>(r2, r1);

        return;
    }

    public void setNavigationManagerCallback(java.util.concurrent.Executor, androidx.car.app.navigation.NavigationManagerCallback)
    {
        androidx.car.app.navigation.NavigationManager r0;
        java.util.concurrent.Executor r1;
        androidx.car.app.navigation.NavigationManagerCallback r2;
        boolean $z0;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.car.app.navigation.NavigationManagerCallback;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        r0.<androidx.car.app.navigation.NavigationManager: java.util.concurrent.Executor mNavigationManagerCallbackExecutor> = r1;

        r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.NavigationManagerCallback mNavigationManagerCallback> = r2;

        $z0 = r0.<androidx.car.app.navigation.NavigationManager: boolean mIsAutoDriveEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.car.app.navigation.NavigationManager: void onAutoDriveEnabled()>();

     label1:
        return;
    }

    public void clearNavigationManagerCallback()
    {
        androidx.car.app.navigation.NavigationManager r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $z0 = r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Removing callback while navigating");

        throw $r1;

     label1:
        r0.<androidx.car.app.navigation.NavigationManager: java.util.concurrent.Executor mNavigationManagerCallbackExecutor> = null;

        r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.NavigationManagerCallback mNavigationManagerCallback> = null;

        return;
    }

    public void navigationStarted()
    {
        androidx.car.app.navigation.NavigationManager r0;
        boolean $z0;
        androidx.car.app.navigation.NavigationManagerCallback $r1;
        androidx.car.app.HostDispatcher $r2;
        androidx.car.app.HostCall $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $z0 = r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.NavigationManagerCallback mNavigationManagerCallback>;

        if $r1 != null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No callback has been set");

        throw $r4;

     label2:
        r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating> = 1;

        $r2 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.HostDispatcher mHostDispatcher>;

        $r3 = dynamicinvoke "dispatch" <androidx.car.app.HostCall ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.navigation.NavigationManager: java.lang.Object lambda$navigationStarted$1(androidx.car.app.navigation.INavigationHost)>, methodtype: java.lang.Object __METHODTYPE__(androidx.car.app.navigation.INavigationHost));

        virtualinvoke $r2.<androidx.car.app.HostDispatcher: void dispatch(java.lang.String,java.lang.String,androidx.car.app.HostCall)>("navigation", "navigationStarted", $r3);

        return;
    }

    public void navigationEnded()
    {
        androidx.car.app.navigation.NavigationManager r0;
        boolean $z0;
        androidx.car.app.HostDispatcher $r1;
        androidx.car.app.HostCall $r2;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $z0 = r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating> = 0;

        $r1 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.HostDispatcher mHostDispatcher>;

        $r2 = dynamicinvoke "dispatch" <androidx.car.app.HostCall ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.navigation.NavigationManager: java.lang.Object lambda$navigationEnded$2(androidx.car.app.navigation.INavigationHost)>, methodtype: java.lang.Object __METHODTYPE__(androidx.car.app.navigation.INavigationHost));

        virtualinvoke $r1.<androidx.car.app.HostDispatcher: void dispatch(java.lang.String,java.lang.String,androidx.car.app.HostCall)>("navigation", "navigationEnded", $r2);

        return;
    }

    public static androidx.car.app.navigation.NavigationManager create(androidx.car.app.CarContext, androidx.car.app.HostDispatcher, androidx.lifecycle.Lifecycle)
    {
        androidx.car.app.CarContext r0;
        androidx.car.app.HostDispatcher r1;
        androidx.lifecycle.Lifecycle r2;
        androidx.car.app.navigation.NavigationManager $r6;

        r0 := @parameter0: androidx.car.app.CarContext;

        r1 := @parameter1: androidx.car.app.HostDispatcher;

        r2 := @parameter2: androidx.lifecycle.Lifecycle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = new androidx.car.app.navigation.NavigationManager;

        specialinvoke $r6.<androidx.car.app.navigation.NavigationManager: void <init>(androidx.car.app.CarContext,androidx.car.app.HostDispatcher,androidx.lifecycle.Lifecycle)>(r0, r1, r2);

        return $r6;
    }

    public androidx.car.app.navigation.INavigationManager$Stub getIInterface()
    {
        androidx.car.app.navigation.NavigationManager r0;
        androidx.car.app.navigation.INavigationManager$Stub $r1;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        $r1 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.INavigationManager$Stub mNavigationManager>;

        return $r1;
    }

    public void onStopNavigation()
    {
        androidx.car.app.navigation.NavigationManager r0;
        boolean $z0;
        java.util.concurrent.Executor $r1, $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $z0 = r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<androidx.car.app.navigation.NavigationManager: boolean mIsNavigating> = 0;

        $r1 = r0.<androidx.car.app.navigation.NavigationManager: java.util.concurrent.Executor mNavigationManagerCallbackExecutor>;

        if $r1 != null goto label2;

        return;

     label2:
        $r2 = r0.<androidx.car.app.navigation.NavigationManager: java.util.concurrent.Executor mNavigationManagerCallbackExecutor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.navigation.NavigationManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.navigation.NavigationManager: void lambda$onStopNavigation$3()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void onAutoDriveEnabled()
    {
        androidx.car.app.navigation.NavigationManager r0;
        androidx.car.app.navigation.NavigationManagerCallback r1;
        java.util.concurrent.Executor r2;
        boolean $z0;
        java.lang.Runnable $r4;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        staticinvoke <androidx.car.app.utils.ThreadUtils: void checkMainThread()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CarApp.Nav", 3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarApp.Nav", "Executing onAutoDriveEnabled");

     label1:
        r0.<androidx.car.app.navigation.NavigationManager: boolean mIsAutoDriveEnabled> = 1;

        r1 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.NavigationManagerCallback mNavigationManagerCallback>;

        r2 = r0.<androidx.car.app.navigation.NavigationManager: java.util.concurrent.Executor mNavigationManagerCallbackExecutor>;

        if r1 == null goto label2;

        if r2 != null goto label3;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CarApp.Nav", "NavigationManagerCallback not set, skipping onAutoDriveEnabled");

        return;

     label3:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.navigation.NavigationManagerCallback)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_INTERFACE" <androidx.car.app.navigation.NavigationManagerCallback: void onAutoDriveEnabled()>, methodtype: void __METHODTYPE__());

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    protected void <init>(androidx.car.app.CarContext, androidx.car.app.HostDispatcher, androidx.lifecycle.Lifecycle)
    {
        androidx.car.app.navigation.NavigationManager r0;
        androidx.car.app.CarContext r1, $r6;
        androidx.car.app.HostDispatcher r2, $r8;
        androidx.lifecycle.Lifecycle r3;
        androidx.car.app.navigation.NavigationManager$2 r4, r12;
        java.lang.Object $r5, $r7;
        androidx.car.app.navigation.NavigationManager$1 r11;
        androidx.lifecycle.LifecycleObserver r13;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        r1 := @parameter0: androidx.car.app.CarContext;

        r2 := @parameter1: androidx.car.app.HostDispatcher;

        r3 := @parameter2: androidx.lifecycle.Lifecycle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r6 = (androidx.car.app.CarContext) $r5;

        r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.CarContext mCarContext> = $r6;

        $r7 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r8 = (androidx.car.app.HostDispatcher) $r7;

        r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.HostDispatcher mHostDispatcher> = $r8;

        r11 = new androidx.car.app.navigation.NavigationManager$1;

        specialinvoke r11.<androidx.car.app.navigation.NavigationManager$1: void <init>(androidx.car.app.navigation.NavigationManager,androidx.lifecycle.Lifecycle)>(r0, r3);

        r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.INavigationManager$Stub mNavigationManager> = r11;

        r12 = new androidx.car.app.navigation.NavigationManager$2;

        specialinvoke r12.<androidx.car.app.navigation.NavigationManager$2: void <init>(androidx.car.app.navigation.NavigationManager,androidx.lifecycle.Lifecycle)>(r0, r3);

        r4 = r12;

        r13 = (androidx.lifecycle.LifecycleObserver) r4;

        virtualinvoke r3.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r13);

        return;
    }

    private void lambda$onStopNavigation$3()
    {
        androidx.car.app.navigation.NavigationManager r0;
        androidx.car.app.navigation.NavigationManagerCallback r1;

        r0 := @this: androidx.car.app.navigation.NavigationManager;

        r1 = r0.<androidx.car.app.navigation.NavigationManager: androidx.car.app.navigation.NavigationManagerCallback mNavigationManagerCallback>;

        if r1 == null goto label1;

        interfaceinvoke r1.<androidx.car.app.navigation.NavigationManagerCallback: void onStopNavigation()>();

     label1:
        return;
    }

    private static java.lang.Object lambda$navigationEnded$2(androidx.car.app.navigation.INavigationHost) throws android.os.RemoteException
    {
        androidx.car.app.navigation.INavigationHost r0;

        r0 := @parameter0: androidx.car.app.navigation.INavigationHost;

        interfaceinvoke r0.<androidx.car.app.navigation.INavigationHost: void navigationEnded()>();

        return null;
    }

    private static java.lang.Object lambda$navigationStarted$1(androidx.car.app.navigation.INavigationHost) throws android.os.RemoteException
    {
        androidx.car.app.navigation.INavigationHost r0;

        r0 := @parameter0: androidx.car.app.navigation.INavigationHost;

        interfaceinvoke r0.<androidx.car.app.navigation.INavigationHost: void navigationStarted()>();

        return null;
    }

    private static java.lang.Object lambda$updateTrip$0(androidx.car.app.serialization.Bundleable, androidx.car.app.navigation.INavigationHost) throws android.os.RemoteException
    {
        androidx.car.app.serialization.Bundleable r0;
        androidx.car.app.navigation.INavigationHost r1;

        r0 := @parameter0: androidx.car.app.serialization.Bundleable;

        r1 := @parameter1: androidx.car.app.navigation.INavigationHost;

        interfaceinvoke r1.<androidx.car.app.navigation.INavigationHost: void updateTrip(androidx.car.app.serialization.Bundleable)>(r0);

        return null;
    }

androidx.car.app.navigation.NavigationManager$1
<androidx.car.app.navigation.NavigationManager$1: androidx.lifecycle.Lifecycle val$lifecycle>
<androidx.car.app.navigation.NavigationManager$1: androidx.car.app.navigation.NavigationManager this$0>
    void <init>(androidx.car.app.navigation.NavigationManager, androidx.lifecycle.Lifecycle)
    {
        androidx.car.app.navigation.NavigationManager$1 r0;
        androidx.car.app.navigation.NavigationManager r1;
        androidx.lifecycle.Lifecycle r2;

        r0 := @this: androidx.car.app.navigation.NavigationManager$1;

        r1 := @parameter0: androidx.car.app.navigation.NavigationManager;

        r2 := @parameter1: androidx.lifecycle.Lifecycle;

        r0.<androidx.car.app.navigation.NavigationManager$1: androidx.car.app.navigation.NavigationManager this$0> = r1;

        r0.<androidx.car.app.navigation.NavigationManager$1: androidx.lifecycle.Lifecycle val$lifecycle> = r2;

        specialinvoke r0.<androidx.car.app.navigation.INavigationManager$Stub: void <init>()>();

        return;
    }

    public void onStopNavigation(androidx.car.app.IOnDoneCallback)
    {
        androidx.car.app.navigation.NavigationManager$1 r0;
        androidx.car.app.IOnDoneCallback r1;
        androidx.lifecycle.Lifecycle $r2;
        androidx.car.app.utils.RemoteUtils$HostCall $r3;

        r0 := @this: androidx.car.app.navigation.NavigationManager$1;

        r1 := @parameter0: androidx.car.app.IOnDoneCallback;

        $r2 = r0.<androidx.car.app.navigation.NavigationManager$1: androidx.lifecycle.Lifecycle val$lifecycle>;

        $r3 = dynamicinvoke "dispatch" <androidx.car.app.utils.RemoteUtils$HostCall (androidx.car.app.navigation.NavigationManager$1)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.navigation.NavigationManager$1: java.lang.Object lambda$onStopNavigation$0()>, methodtype: java.lang.Object __METHODTYPE__());

        staticinvoke <androidx.car.app.utils.RemoteUtils: void dispatchCallFromHost(androidx.lifecycle.Lifecycle,androidx.car.app.IOnDoneCallback,java.lang.String,androidx.car.app.utils.RemoteUtils$HostCall)>($r2, r1, "onStopNavigation", $r3);

        return;
    }

    private java.lang.Object lambda$onStopNavigation$0() throws androidx.car.app.serialization.BundlerException
    {
        androidx.car.app.navigation.NavigationManager$1 r0;
        androidx.car.app.navigation.NavigationManager $r1;

        r0 := @this: androidx.car.app.navigation.NavigationManager$1;

        $r1 = r0.<androidx.car.app.navigation.NavigationManager$1: androidx.car.app.navigation.NavigationManager this$0>;

        virtualinvoke $r1.<androidx.car.app.navigation.NavigationManager: void onStopNavigation()>();

        return null;
    }

androidx.car.app.navigation.NavigationManager$2
<androidx.car.app.navigation.NavigationManager$2: androidx.lifecycle.Lifecycle val$lifecycle>
<androidx.car.app.navigation.NavigationManager$2: androidx.car.app.navigation.NavigationManager this$0>
    void <init>(androidx.car.app.navigation.NavigationManager, androidx.lifecycle.Lifecycle)
    {
        androidx.car.app.navigation.NavigationManager$2 r0;
        androidx.car.app.navigation.NavigationManager r1;
        androidx.lifecycle.Lifecycle r2;

        r0 := @this: androidx.car.app.navigation.NavigationManager$2;

        r1 := @parameter0: androidx.car.app.navigation.NavigationManager;

        r2 := @parameter1: androidx.lifecycle.Lifecycle;

        r0.<androidx.car.app.navigation.NavigationManager$2: androidx.car.app.navigation.NavigationManager this$0> = r1;

        r0.<androidx.car.app.navigation.NavigationManager$2: androidx.lifecycle.Lifecycle val$lifecycle> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDestroy(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.navigation.NavigationManager$2 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.car.app.navigation.NavigationManager $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.LifecycleObserver r4;

        r0 := @this: androidx.car.app.navigation.NavigationManager$2;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 = r0.<androidx.car.app.navigation.NavigationManager$2: androidx.car.app.navigation.NavigationManager this$0>;

        virtualinvoke $r2.<androidx.car.app.navigation.NavigationManager: void onStopNavigation()>();

        $r3 = r0.<androidx.car.app.navigation.NavigationManager$2: androidx.lifecycle.Lifecycle val$lifecycle>;

        r4 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r3.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r4);

        return;
    }

