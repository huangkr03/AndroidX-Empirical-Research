io.grpc.okhttp.internal.framed.Huffman
<io.grpc.okhttp.internal.framed.Huffman: int[] CODES>
<io.grpc.okhttp.internal.framed.Huffman: byte[] CODE_LENGTHS>
<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman INSTANCE>
<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root>
    static void <clinit>()
    {
        int[] $r0;
        byte[] $r1;
        io.grpc.okhttp.internal.framed.Huffman $r2;

        $r0 = newarray (int)[256];

        $r0[0] = 8184;

        $r0[1] = 8388568;

        $r0[2] = 268435426;

        $r0[3] = 268435427;

        $r0[4] = 268435428;

        $r0[5] = 268435429;

        $r0[6] = 268435430;

        $r0[7] = 268435431;

        $r0[8] = 268435432;

        $r0[9] = 16777194;

        $r0[10] = 1073741820;

        $r0[11] = 268435433;

        $r0[12] = 268435434;

        $r0[13] = 1073741821;

        $r0[14] = 268435435;

        $r0[15] = 268435436;

        $r0[16] = 268435437;

        $r0[17] = 268435438;

        $r0[18] = 268435439;

        $r0[19] = 268435440;

        $r0[20] = 268435441;

        $r0[21] = 268435442;

        $r0[22] = 1073741822;

        $r0[23] = 268435443;

        $r0[24] = 268435444;

        $r0[25] = 268435445;

        $r0[26] = 268435446;

        $r0[27] = 268435447;

        $r0[28] = 268435448;

        $r0[29] = 268435449;

        $r0[30] = 268435450;

        $r0[31] = 268435451;

        $r0[32] = 20;

        $r0[33] = 1016;

        $r0[34] = 1017;

        $r0[35] = 4090;

        $r0[36] = 8185;

        $r0[37] = 21;

        $r0[38] = 248;

        $r0[39] = 2042;

        $r0[40] = 1018;

        $r0[41] = 1019;

        $r0[42] = 249;

        $r0[43] = 2043;

        $r0[44] = 250;

        $r0[45] = 22;

        $r0[46] = 23;

        $r0[47] = 24;

        $r0[48] = 0;

        $r0[49] = 1;

        $r0[50] = 2;

        $r0[51] = 25;

        $r0[52] = 26;

        $r0[53] = 27;

        $r0[54] = 28;

        $r0[55] = 29;

        $r0[56] = 30;

        $r0[57] = 31;

        $r0[58] = 92;

        $r0[59] = 251;

        $r0[60] = 32764;

        $r0[61] = 32;

        $r0[62] = 4091;

        $r0[63] = 1020;

        $r0[64] = 8186;

        $r0[65] = 33;

        $r0[66] = 93;

        $r0[67] = 94;

        $r0[68] = 95;

        $r0[69] = 96;

        $r0[70] = 97;

        $r0[71] = 98;

        $r0[72] = 99;

        $r0[73] = 100;

        $r0[74] = 101;

        $r0[75] = 102;

        $r0[76] = 103;

        $r0[77] = 104;

        $r0[78] = 105;

        $r0[79] = 106;

        $r0[80] = 107;

        $r0[81] = 108;

        $r0[82] = 109;

        $r0[83] = 110;

        $r0[84] = 111;

        $r0[85] = 112;

        $r0[86] = 113;

        $r0[87] = 114;

        $r0[88] = 252;

        $r0[89] = 115;

        $r0[90] = 253;

        $r0[91] = 8187;

        $r0[92] = 524272;

        $r0[93] = 8188;

        $r0[94] = 16380;

        $r0[95] = 34;

        $r0[96] = 32765;

        $r0[97] = 3;

        $r0[98] = 35;

        $r0[99] = 4;

        $r0[100] = 36;

        $r0[101] = 5;

        $r0[102] = 37;

        $r0[103] = 38;

        $r0[104] = 39;

        $r0[105] = 6;

        $r0[106] = 116;

        $r0[107] = 117;

        $r0[108] = 40;

        $r0[109] = 41;

        $r0[110] = 42;

        $r0[111] = 7;

        $r0[112] = 43;

        $r0[113] = 118;

        $r0[114] = 44;

        $r0[115] = 8;

        $r0[116] = 9;

        $r0[117] = 45;

        $r0[118] = 119;

        $r0[119] = 120;

        $r0[120] = 121;

        $r0[121] = 122;

        $r0[122] = 123;

        $r0[123] = 32766;

        $r0[124] = 2044;

        $r0[125] = 16381;

        $r0[126] = 8189;

        $r0[127] = 268435452;

        $r0[128] = 1048550;

        $r0[129] = 4194258;

        $r0[130] = 1048551;

        $r0[131] = 1048552;

        $r0[132] = 4194259;

        $r0[133] = 4194260;

        $r0[134] = 4194261;

        $r0[135] = 8388569;

        $r0[136] = 4194262;

        $r0[137] = 8388570;

        $r0[138] = 8388571;

        $r0[139] = 8388572;

        $r0[140] = 8388573;

        $r0[141] = 8388574;

        $r0[142] = 16777195;

        $r0[143] = 8388575;

        $r0[144] = 16777196;

        $r0[145] = 16777197;

        $r0[146] = 4194263;

        $r0[147] = 8388576;

        $r0[148] = 16777198;

        $r0[149] = 8388577;

        $r0[150] = 8388578;

        $r0[151] = 8388579;

        $r0[152] = 8388580;

        $r0[153] = 2097116;

        $r0[154] = 4194264;

        $r0[155] = 8388581;

        $r0[156] = 4194265;

        $r0[157] = 8388582;

        $r0[158] = 8388583;

        $r0[159] = 16777199;

        $r0[160] = 4194266;

        $r0[161] = 2097117;

        $r0[162] = 1048553;

        $r0[163] = 4194267;

        $r0[164] = 4194268;

        $r0[165] = 8388584;

        $r0[166] = 8388585;

        $r0[167] = 2097118;

        $r0[168] = 8388586;

        $r0[169] = 4194269;

        $r0[170] = 4194270;

        $r0[171] = 16777200;

        $r0[172] = 2097119;

        $r0[173] = 4194271;

        $r0[174] = 8388587;

        $r0[175] = 8388588;

        $r0[176] = 2097120;

        $r0[177] = 2097121;

        $r0[178] = 4194272;

        $r0[179] = 2097122;

        $r0[180] = 8388589;

        $r0[181] = 4194273;

        $r0[182] = 8388590;

        $r0[183] = 8388591;

        $r0[184] = 1048554;

        $r0[185] = 4194274;

        $r0[186] = 4194275;

        $r0[187] = 4194276;

        $r0[188] = 8388592;

        $r0[189] = 4194277;

        $r0[190] = 4194278;

        $r0[191] = 8388593;

        $r0[192] = 67108832;

        $r0[193] = 67108833;

        $r0[194] = 1048555;

        $r0[195] = 524273;

        $r0[196] = 4194279;

        $r0[197] = 8388594;

        $r0[198] = 4194280;

        $r0[199] = 33554412;

        $r0[200] = 67108834;

        $r0[201] = 67108835;

        $r0[202] = 67108836;

        $r0[203] = 134217694;

        $r0[204] = 134217695;

        $r0[205] = 67108837;

        $r0[206] = 16777201;

        $r0[207] = 33554413;

        $r0[208] = 524274;

        $r0[209] = 2097123;

        $r0[210] = 67108838;

        $r0[211] = 134217696;

        $r0[212] = 134217697;

        $r0[213] = 67108839;

        $r0[214] = 134217698;

        $r0[215] = 16777202;

        $r0[216] = 2097124;

        $r0[217] = 2097125;

        $r0[218] = 67108840;

        $r0[219] = 67108841;

        $r0[220] = 268435453;

        $r0[221] = 134217699;

        $r0[222] = 134217700;

        $r0[223] = 134217701;

        $r0[224] = 1048556;

        $r0[225] = 16777203;

        $r0[226] = 1048557;

        $r0[227] = 2097126;

        $r0[228] = 4194281;

        $r0[229] = 2097127;

        $r0[230] = 2097128;

        $r0[231] = 8388595;

        $r0[232] = 4194282;

        $r0[233] = 4194283;

        $r0[234] = 33554414;

        $r0[235] = 33554415;

        $r0[236] = 16777204;

        $r0[237] = 16777205;

        $r0[238] = 67108842;

        $r0[239] = 8388596;

        $r0[240] = 67108843;

        $r0[241] = 134217702;

        $r0[242] = 67108844;

        $r0[243] = 67108845;

        $r0[244] = 134217703;

        $r0[245] = 134217704;

        $r0[246] = 134217705;

        $r0[247] = 134217706;

        $r0[248] = 134217707;

        $r0[249] = 268435454;

        $r0[250] = 134217708;

        $r0[251] = 134217709;

        $r0[252] = 134217710;

        $r0[253] = 134217711;

        $r0[254] = 134217712;

        $r0[255] = 67108846;

        <io.grpc.okhttp.internal.framed.Huffman: int[] CODES> = $r0;

        $r1 = newarray (byte)[256];

        $r1[0] = 13;

        $r1[1] = 23;

        $r1[2] = 28;

        $r1[3] = 28;

        $r1[4] = 28;

        $r1[5] = 28;

        $r1[6] = 28;

        $r1[7] = 28;

        $r1[8] = 28;

        $r1[9] = 24;

        $r1[10] = 30;

        $r1[11] = 28;

        $r1[12] = 28;

        $r1[13] = 30;

        $r1[14] = 28;

        $r1[15] = 28;

        $r1[16] = 28;

        $r1[17] = 28;

        $r1[18] = 28;

        $r1[19] = 28;

        $r1[20] = 28;

        $r1[21] = 28;

        $r1[22] = 30;

        $r1[23] = 28;

        $r1[24] = 28;

        $r1[25] = 28;

        $r1[26] = 28;

        $r1[27] = 28;

        $r1[28] = 28;

        $r1[29] = 28;

        $r1[30] = 28;

        $r1[31] = 28;

        $r1[32] = 6;

        $r1[33] = 10;

        $r1[34] = 10;

        $r1[35] = 12;

        $r1[36] = 13;

        $r1[37] = 6;

        $r1[38] = 8;

        $r1[39] = 11;

        $r1[40] = 10;

        $r1[41] = 10;

        $r1[42] = 8;

        $r1[43] = 11;

        $r1[44] = 8;

        $r1[45] = 6;

        $r1[46] = 6;

        $r1[47] = 6;

        $r1[48] = 5;

        $r1[49] = 5;

        $r1[50] = 5;

        $r1[51] = 6;

        $r1[52] = 6;

        $r1[53] = 6;

        $r1[54] = 6;

        $r1[55] = 6;

        $r1[56] = 6;

        $r1[57] = 6;

        $r1[58] = 7;

        $r1[59] = 8;

        $r1[60] = 15;

        $r1[61] = 6;

        $r1[62] = 12;

        $r1[63] = 10;

        $r1[64] = 13;

        $r1[65] = 6;

        $r1[66] = 7;

        $r1[67] = 7;

        $r1[68] = 7;

        $r1[69] = 7;

        $r1[70] = 7;

        $r1[71] = 7;

        $r1[72] = 7;

        $r1[73] = 7;

        $r1[74] = 7;

        $r1[75] = 7;

        $r1[76] = 7;

        $r1[77] = 7;

        $r1[78] = 7;

        $r1[79] = 7;

        $r1[80] = 7;

        $r1[81] = 7;

        $r1[82] = 7;

        $r1[83] = 7;

        $r1[84] = 7;

        $r1[85] = 7;

        $r1[86] = 7;

        $r1[87] = 7;

        $r1[88] = 8;

        $r1[89] = 7;

        $r1[90] = 8;

        $r1[91] = 13;

        $r1[92] = 19;

        $r1[93] = 13;

        $r1[94] = 14;

        $r1[95] = 6;

        $r1[96] = 15;

        $r1[97] = 5;

        $r1[98] = 6;

        $r1[99] = 5;

        $r1[100] = 6;

        $r1[101] = 5;

        $r1[102] = 6;

        $r1[103] = 6;

        $r1[104] = 6;

        $r1[105] = 5;

        $r1[106] = 7;

        $r1[107] = 7;

        $r1[108] = 6;

        $r1[109] = 6;

        $r1[110] = 6;

        $r1[111] = 5;

        $r1[112] = 6;

        $r1[113] = 7;

        $r1[114] = 6;

        $r1[115] = 5;

        $r1[116] = 5;

        $r1[117] = 6;

        $r1[118] = 7;

        $r1[119] = 7;

        $r1[120] = 7;

        $r1[121] = 7;

        $r1[122] = 7;

        $r1[123] = 15;

        $r1[124] = 11;

        $r1[125] = 14;

        $r1[126] = 13;

        $r1[127] = 28;

        $r1[128] = 20;

        $r1[129] = 22;

        $r1[130] = 20;

        $r1[131] = 20;

        $r1[132] = 22;

        $r1[133] = 22;

        $r1[134] = 22;

        $r1[135] = 23;

        $r1[136] = 22;

        $r1[137] = 23;

        $r1[138] = 23;

        $r1[139] = 23;

        $r1[140] = 23;

        $r1[141] = 23;

        $r1[142] = 24;

        $r1[143] = 23;

        $r1[144] = 24;

        $r1[145] = 24;

        $r1[146] = 22;

        $r1[147] = 23;

        $r1[148] = 24;

        $r1[149] = 23;

        $r1[150] = 23;

        $r1[151] = 23;

        $r1[152] = 23;

        $r1[153] = 21;

        $r1[154] = 22;

        $r1[155] = 23;

        $r1[156] = 22;

        $r1[157] = 23;

        $r1[158] = 23;

        $r1[159] = 24;

        $r1[160] = 22;

        $r1[161] = 21;

        $r1[162] = 20;

        $r1[163] = 22;

        $r1[164] = 22;

        $r1[165] = 23;

        $r1[166] = 23;

        $r1[167] = 21;

        $r1[168] = 23;

        $r1[169] = 22;

        $r1[170] = 22;

        $r1[171] = 24;

        $r1[172] = 21;

        $r1[173] = 22;

        $r1[174] = 23;

        $r1[175] = 23;

        $r1[176] = 21;

        $r1[177] = 21;

        $r1[178] = 22;

        $r1[179] = 21;

        $r1[180] = 23;

        $r1[181] = 22;

        $r1[182] = 23;

        $r1[183] = 23;

        $r1[184] = 20;

        $r1[185] = 22;

        $r1[186] = 22;

        $r1[187] = 22;

        $r1[188] = 23;

        $r1[189] = 22;

        $r1[190] = 22;

        $r1[191] = 23;

        $r1[192] = 26;

        $r1[193] = 26;

        $r1[194] = 20;

        $r1[195] = 19;

        $r1[196] = 22;

        $r1[197] = 23;

        $r1[198] = 22;

        $r1[199] = 25;

        $r1[200] = 26;

        $r1[201] = 26;

        $r1[202] = 26;

        $r1[203] = 27;

        $r1[204] = 27;

        $r1[205] = 26;

        $r1[206] = 24;

        $r1[207] = 25;

        $r1[208] = 19;

        $r1[209] = 21;

        $r1[210] = 26;

        $r1[211] = 27;

        $r1[212] = 27;

        $r1[213] = 26;

        $r1[214] = 27;

        $r1[215] = 24;

        $r1[216] = 21;

        $r1[217] = 21;

        $r1[218] = 26;

        $r1[219] = 26;

        $r1[220] = 28;

        $r1[221] = 27;

        $r1[222] = 27;

        $r1[223] = 27;

        $r1[224] = 20;

        $r1[225] = 24;

        $r1[226] = 20;

        $r1[227] = 21;

        $r1[228] = 22;

        $r1[229] = 21;

        $r1[230] = 21;

        $r1[231] = 23;

        $r1[232] = 22;

        $r1[233] = 22;

        $r1[234] = 25;

        $r1[235] = 25;

        $r1[236] = 24;

        $r1[237] = 24;

        $r1[238] = 26;

        $r1[239] = 23;

        $r1[240] = 26;

        $r1[241] = 27;

        $r1[242] = 26;

        $r1[243] = 26;

        $r1[244] = 27;

        $r1[245] = 27;

        $r1[246] = 27;

        $r1[247] = 27;

        $r1[248] = 27;

        $r1[249] = 28;

        $r1[250] = 27;

        $r1[251] = 27;

        $r1[252] = 27;

        $r1[253] = 27;

        $r1[254] = 27;

        $r1[255] = 26;

        <io.grpc.okhttp.internal.framed.Huffman: byte[] CODE_LENGTHS> = $r1;

        $r2 = new io.grpc.okhttp.internal.framed.Huffman;

        specialinvoke $r2.<io.grpc.okhttp.internal.framed.Huffman: void <init>()>();

        <io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman INSTANCE> = $r2;

        return;
    }

    private void <init>()
    {
        io.grpc.okhttp.internal.framed.Huffman $r0;
        io.grpc.okhttp.internal.framed.Huffman$Node $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new io.grpc.okhttp.internal.framed.Huffman$Node;

        specialinvoke $r1.<io.grpc.okhttp.internal.framed.Huffman$Node: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root> = $r1;

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Huffman: void buildTree()>();

        return;
    }

    private void addCode(int, int, byte)
    {
        io.grpc.okhttp.internal.framed.Huffman $r0;
        io.grpc.okhttp.internal.framed.Huffman$Node $r1, $r2, $r3;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        io.grpc.okhttp.internal.framed.Huffman$Node[] $r4;
        java.lang.IllegalStateException $r5;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $b2 := @parameter2: byte;

        $r1 = new io.grpc.okhttp.internal.framed.Huffman$Node;

        specialinvoke $r1.<io.grpc.okhttp.internal.framed.Huffman$Node: void <init>(int,int)>($i0, $b2);

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root>;

     label1:
        if $b2 <= 8 goto label4;

        $i0 = $b2 + -8;

        $b2 = (byte) $i0;

        $i0 = $i1 >>> $b2;

        $i0 = $i0 & 255;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        if $r4 == null goto label3;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $r2 = $r4[$i0];

        if $r2 != null goto label2;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $r2 = new io.grpc.okhttp.internal.framed.Huffman$Node;

        specialinvoke $r2.<io.grpc.okhttp.internal.framed.Huffman$Node: void <init>()>();

        $r4[$i0] = $r2;

     label2:
        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $r3 = $r4[$i0];

        goto label1;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("invalid dictionary: prefix not unique");

        throw $r5;

     label4:
        $i3 = 8 - $b2;

        $i0 = $i1 << $i3;

        $i0 = $i0 & 255;

        $i1 = 1 << $i3;

        $i3 = $i0;

     label5:
        $i4 = $i0 + $i1;

        if $i3 >= $i4 goto label6;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $r4[$i3] = $r1;

        $i3 = $i3 + 1;

        goto label5;

     label6:
        return;
    }

    private void buildTree()
    {
        io.grpc.okhttp.internal.framed.Huffman $r0;
        int $i0, $i1;
        byte[] $r1;
        int[] $r2;
        byte $b2;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman;

        $i0 = 0;

     label1:
        $r1 = <io.grpc.okhttp.internal.framed.Huffman: byte[] CODE_LENGTHS>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $r2 = <io.grpc.okhttp.internal.framed.Huffman: int[] CODES>;

        $i1 = $r2[$i0];

        $b2 = $r1[$i0];

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Huffman: void addCode(int,int,byte)>($i0, $i1, $b2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static io.grpc.okhttp.internal.framed.Huffman get()
    {
        io.grpc.okhttp.internal.framed.Huffman r0;

        r0 = <io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman INSTANCE>;

        return r0;
    }

    byte[] decode(byte[]) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Huffman $r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;
        io.grpc.okhttp.internal.framed.Huffman$Node $r3;
        int $i0, $i1, $i2, $i3, $i6;
        byte $b4;
        short $s5;
        io.grpc.okhttp.internal.framed.Huffman$Node[] $r4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman;

        $r2 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root>;

        $i0 = 0;

        $i1 = 0;

        $i2 = 0;

     label1:
        $i3 = lengthof $r2;

        if $i0 >= $i3 goto label5;

        $i2 = $i2 << 8;

        $b4 = $r2[$i0];

        $s5 = $b4 & 255;

        $i2 = $i2 | $s5;

        $i1 = $i1 + 8;

     label2:
        if $i1 < 8 goto label4;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $i3 = $i1 + -8;

        $i6 = $i2 >>> $i3;

        $i6 = $i6 & 255;

        $r3 = $r4[$i6];

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        if $r4 != null goto label3;

        $i3 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: int '-$$Nest$fgetsymbol'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i3);

        $i3 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: int '-$$Nest$fgetterminalBits'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $i1 = $i1 - $i3;

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root>;

        goto label2;

     label3:
        $i1 = $i3;

        goto label2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        if $i1 <= 0 goto label7;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $i0 = 8 - $i1;

        $i0 = $i2 << $i0;

        $i0 = $i0 & 255;

        $r3 = $r4[$i0];

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        if $r4 != null goto label7;

        $i0 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: int '-$$Nest$fgetterminalBits'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        if $i0 <= $i1 goto label6;

        goto label7;

     label6:
        $i0 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: int '-$$Nest$fgetsymbol'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        $i0 = staticinvoke <io.grpc.okhttp.internal.framed.Huffman$Node: int '-$$Nest$fgetterminalBits'(io.grpc.okhttp.internal.framed.Huffman$Node)>($r3);

        $i1 = $i1 - $i0;

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root>;

        goto label5;

     label7:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    void encode(byte[], java.io.OutputStream) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Huffman $r0;
        java.io.OutputStream $r1;
        byte[] $r2, $r3;
        long $l0, $l6;
        int $i1, $i2, $i3;
        byte $b4;
        short $s5;
        int[] $r4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman;

        $r3 := @parameter0: byte[];

        $r1 := @parameter1: java.io.OutputStream;

        $l0 = 0L;

        $i1 = 0;

        $i2 = 0;

     label1:
        $i3 = lengthof $r3;

        if $i1 >= $i3 goto label4;

        $b4 = $r3[$i1];

        $s5 = $b4 & 255;

        $r4 = <io.grpc.okhttp.internal.framed.Huffman: int[] CODES>;

        $i3 = $r4[$s5];

        $r2 = <io.grpc.okhttp.internal.framed.Huffman: byte[] CODE_LENGTHS>;

        $b4 = $r2[$s5];

        $l0 = $l0 << $b4;

        $l6 = (long) $i3;

        $l0 = $l0 | $l6;

        $i2 = $i2 + $b4;

     label2:
        if $i2 < 8 goto label3;

        $i2 = $i2 + -8;

        $l6 = $l0 >> $i2;

        $i3 = (int) $l6;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i3);

        goto label2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $i2 <= 0 goto label5;

        $i1 = 8 - $i2;

        $l0 = $l0 << $i1;

        $s5 = 255 >>> $i2;

        $l6 = (long) $s5;

        $l0 = $l0 | $l6;

        $i2 = (int) $l0;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i2);

     label5:
        return;
    }

    int encodedLength(byte[])
    {
        io.grpc.okhttp.internal.framed.Huffman $r0;
        byte[] $r1, $r2;
        long $l0, $l5;
        int $i1, $i2;
        byte $b3;
        short $s4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman;

        $r2 := @parameter0: byte[];

        $l0 = 0L;

        $i1 = 0;

     label1:
        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label2;

        $b3 = $r2[$i1];

        $r1 = <io.grpc.okhttp.internal.framed.Huffman: byte[] CODE_LENGTHS>;

        $s4 = $b3 & 255;

        $b3 = $r1[$s4];

        $l5 = (long) $b3;

        $l0 = $l0 + $l5;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $l0 = $l0 + 7L;

        $l0 = $l0 >> 3;

        $i1 = (int) $l0;

        return $i1;
    }

io.grpc.okhttp.internal.framed.Huffman$Node
<io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] children>
<io.grpc.okhttp.internal.framed.Huffman$Node: int symbol>
<io.grpc.okhttp.internal.framed.Huffman$Node: int terminalBits>
    static volatile io.grpc.okhttp.internal.framed.Huffman$Node[] '-$$Nest$fgetchildren'(io.grpc.okhttp.internal.framed.Huffman$Node)
    {
        io.grpc.okhttp.internal.framed.Huffman$Node $r0;
        io.grpc.okhttp.internal.framed.Huffman$Node[] r1;

        $r0 := @parameter0: io.grpc.okhttp.internal.framed.Huffman$Node;

        r1 = $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] children>;

        return r1;
    }

    static volatile int '-$$Nest$fgetsymbol'(io.grpc.okhttp.internal.framed.Huffman$Node)
    {
        io.grpc.okhttp.internal.framed.Huffman$Node $r0;
        int i0;

        $r0 := @parameter0: io.grpc.okhttp.internal.framed.Huffman$Node;

        i0 = $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: int symbol>;

        return i0;
    }

    static volatile int '-$$Nest$fgetterminalBits'(io.grpc.okhttp.internal.framed.Huffman$Node)
    {
        io.grpc.okhttp.internal.framed.Huffman$Node $r0;
        int i0;

        $r0 := @parameter0: io.grpc.okhttp.internal.framed.Huffman$Node;

        i0 = $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: int terminalBits>;

        return i0;
    }

    void <init>()
    {
        io.grpc.okhttp.internal.framed.Huffman$Node $r0;
        io.grpc.okhttp.internal.framed.Huffman$Node[] $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman$Node;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (io.grpc.okhttp.internal.framed.Huffman$Node)[256];

        $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] children> = $r1;

        $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: int symbol> = 0;

        $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: int terminalBits> = 0;

        return;
    }

    void <init>(int, int)
    {
        io.grpc.okhttp.internal.framed.Huffman$Node $r0;
        int $i0, $i1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Huffman$Node;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] children> = null;

        $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: int symbol> = $i1;

        $i1 = $i0 & 7;

        if $i1 != 0 goto label1;

        $i1 = 8;

     label1:
        $r0.<io.grpc.okhttp.internal.framed.Huffman$Node: int terminalBits> = $i1;

        return;
    }

