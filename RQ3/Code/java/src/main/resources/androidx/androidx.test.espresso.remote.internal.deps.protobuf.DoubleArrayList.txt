androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList
<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList EMPTY_LIST>
<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>
<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>
    public double getDouble(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIndexInRange(int)>(i0);

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $d0 = $r1[i0];

        return $d0;
    }

    public double setDouble(int, double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        double d0, d1;
        double[] r1, $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIsMutable()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIndexInRange(int)>(i0);

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        d1 = r1[i0];

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r2[i0] = d0;

        return d1;
    }

    public int hashCode()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int $i0, $i1, $i3, i4, i5;
        double[] $r1;
        double $d0;
        long $l2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i4 = 1;

        i5 = 0;

     label1:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if i5 >= $i0 goto label2;

        $i1 = i4 * 31;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $d0 = $r1[i5];

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: int hashLong(long)>($l2);

        i4 = $i1 + $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i4;
    }

    public int indexOf(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        double d0, $d1;
        int i0, i2;
        boolean $z0;
        java.lang.Double $r1;
        double[] $r2;
        byte $b1;
        java.lang.Object r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r3 := @parameter0: java.lang.Object;

        $z0 = r3 instanceof java.lang.Double;

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r1 = (java.lang.Double) r3;

        d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $d1 = $r2[i2];

        $b1 = $d1 cmpl d0;

        if $b1 != 0 goto label3;

        return i2;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return -1;
    }

    public int size()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        return $i0;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList emptyList()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList $r0;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList EMPTY_LIST>;

        return $r0;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.Internal$DoubleList mutableCopyWithCapacity(int)
    {
        int i0, $i1, $i2;
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0, r3;
        double[] $r1, $r2;
        java.lang.IllegalArgumentException r4;

        r3 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        $i1 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if i0 >= $i1 goto label1;

        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw r4;

     label1:
        r0 = new androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        $r1 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r2 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r1, i0);

        $i2 = r3.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void <init>(double[],int)>($r2, $i2);

        return r0;
    }

    public volatile androidx.test.espresso.remote.internal.deps.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.Internal$DoubleList $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$DoubleList mutableCopyWithCapacity(int)>(i0);

        return $r1;
    }

    public java.lang.Double get(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        double $d0;
        java.lang.Double $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        $d0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double getDouble(int)>(i0);

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public java.lang.Double remove(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        double d0;
        double[] $r1, $r3, $r4;
        java.lang.Double $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIsMutable()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIndexInRange(int)>(i0);

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        d0 = $r1[i0];

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i2 = $i1 + -1;

        if i0 >= $i2 goto label1;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i10 = i0 + 1;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i8 = $i7 - i0;

        $i9 = $i8 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i10, $r3, i0, $i9);

     label1:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i4 = $i3 + -1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size> = $i4;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount>;

        $i6 = $i5 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount> = $i6;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        return $r2;
    }

    public java.lang.Double set(int, java.lang.Double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        java.lang.Double r1, $r2;
        double $d0, $d1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double setDouble(int,double)>(i0, $d0);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r2;
    }

    public volatile java.lang.Object get(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        java.lang.Double $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: java.lang.Double get(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object remove(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        java.lang.Double $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: java.lang.Double remove(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object set(int, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: java.lang.Double set(int,java.lang.Double)>(i0, $r2);

        return $r3;
    }

    private java.lang.String makeOutOfBoundsExceptionMessage(int)
    {
        int i0, i1;
        java.lang.StringBuilder r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r6;

        r6 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        i1 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index:");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0, $r2;
        double[] $r1;

        r0 = new androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        $r1 = newarray (double)[0];

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void <init>(double[],int)>($r1, 0);

        <androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList EMPTY_LIST> = r0;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList EMPTY_LIST>;

        virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void makeImmutable()>();

        return;
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        double[] $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        $r1 = newarray (double)[10];

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void <init>(double[],int)>($r1, 0);

        return;
    }

    private void <init>(double[], int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        double[] r1;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r1 := @parameter0: double[];

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractProtobufList: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array> = r1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size> = i0;

        return;
    }

    public void add(int, java.lang.Double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        java.lang.Double r1;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void addDouble(int,double)>(i0, $d0);

        return;
    }

    public volatile void add(int, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0;
        java.lang.Object r1;
        java.lang.Double $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void add(int,java.lang.Double)>(i0, $r2);

        return;
    }

    public void addDouble(double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        double d0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        double[] $r1, $r2, r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        d0 := @parameter0: double;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIsMutable()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i1 = lengthof $r1;

        if $i2 != $i1 goto label1;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i5 = $i4 * 3;

        $i6 = $i5 / 2;

        $i7 = $i6 + 1;

        r3 = newarray (double)[$i7];

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r3, 0, $i8);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array> = r3;

     label1:
        r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i3 = i0 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size> = $i3;

        r4[i0] = d0;

        return;
    }

    private void addDouble(int, double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        double d0;
        java.lang.String $r1;
        double[] $r2, $r3, $r4, $r5, $r6, $r7, r9;
        java.lang.IndexOutOfBoundsException r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIsMutable()>();

        if i0 < 0 goto label1;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if i0 <= $i1 goto label2;

     label1:
        r8 = new java.lang.IndexOutOfBoundsException;

        $r1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)>(i0);

        specialinvoke r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw r8;

     label2:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i2 = lengthof $r2;

        if $i3 >= $i2 goto label4;

        $r7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i17 = i0 + 1;

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i16 = $i15 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, i0, $r6, $i17, $i16);

     label3:
        $r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r5[i0] = d0;

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i12 = $i11 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size> = $i12;

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount>;

        $i14 = $i13 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount> = $i14;

        return;

     label4:
        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i5 = $i4 * 3;

        $i6 = $i5 / 2;

        $i7 = $i6 + 1;

        r9 = newarray (double)[$i7];

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r9, 0, i0);

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i10 = i0 + 1;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i9 = $i8 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i0, r9, $i10, $i9);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array> = r9;

        goto label3;
    }

    private void ensureIndexInRange(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        int i0, $i1;
        java.lang.IndexOutOfBoundsException r1;
        java.lang.String $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if i0 < $i1 goto label2;

     label1:
        r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)>(i0);

        specialinvoke r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw r1;

     label2:
        return;
    }

    protected void removeRange(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        double[] $r0, $r1;
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r2;
        java.lang.IndexOutOfBoundsException r3;

        r2 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIsMutable()>();

        if i1 >= i0 goto label1;

        r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("toIndex < fromIndex");

        throw r3;

     label1:
        $r1 = r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r0 = r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i2 = r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i3 = $i2 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i1, $r0, i0, $i3);

        $i5 = r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i4 = i1 - i0;

        $i6 = $i5 - $i4;

        r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size> = $i6;

        $i7 = r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount>;

        $i8 = $i7 + 1;

        r2.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount> = $i8;

        return;
    }

    public boolean add(java.lang.Double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        java.lang.Double r1;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void addDouble(double)>($d0);

        return 1;
    }

    public volatile boolean add(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: boolean add(java.lang.Double)>($r2);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1;
        double[] $r1, $r2, $r3, $r4, $r5;
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r6, r8;
        java.util.Collection r7;
        java.lang.OutOfMemoryError r9;

        r6 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r7 := @parameter0: java.util.Collection;

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void ensureIsMutable()>();

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        $z0 = r7 instanceof androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractProtobufList: boolean addAll(java.util.Collection)>(r7);

        return $z1;

     label1:
        r8 = (androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList) r7;

        $i1 = r8.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if $i1 != 0 goto label2;

        return 0;

     label2:
        $i2 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i4 = 2147483647 - $i2;

        $i3 = r8.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if $i4 >= $i3 goto label3;

        r9 = new java.lang.OutOfMemoryError;

        specialinvoke r9.<java.lang.OutOfMemoryError: void <init>()>();

        throw r9;

     label3:
        $i6 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i5 = r8.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        i0 = $i6 + $i5;

        $r1 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i7 = lengthof $r1;

        if i0 <= $i7 goto label4;

        $r4 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r5 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r4, i0);

        r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array> = $r5;

     label4:
        $r3 = r8.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $r2 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $i9 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i8 = r8.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, $i9, $i8);

        r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size> = i0;

        $i10 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount>;

        $i11 = $i10 + 1;

        r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int modCount> = $i11;

        return 1;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r1;
        boolean z0;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r0 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int indexOf(java.lang.Object)>(r0);

        if $i0 == -1 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r0, r4;
        double[] r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i6;
        double $d0, $d1;
        long $l3, $l4;
        byte $b5;
        java.lang.Object r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        r3 := @parameter0: java.lang.Object;

        if r0 != r3 goto label1;

        return 1;

     label1:
        $z0 = r3 instanceof androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractProtobufList: boolean equals(java.lang.Object)>(r3);

        return $z1;

     label2:
        r4 = (androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList) r3;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        $i0 = r4.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        r1 = r4.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        i6 = 0;

     label4:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: int size>;

        if i6 >= $i2 goto label6;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: double[] array>;

        $d0 = $r2[i6];

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r1[i6];

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        i6 = i6 + 1;

        goto label4;

     label6:
        return 1;
    }

