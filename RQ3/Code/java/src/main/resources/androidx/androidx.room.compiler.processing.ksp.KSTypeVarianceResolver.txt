androidx.room.compiler.processing.ksp.KSTypeVarianceResolver
<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.processing.Resolver resolver>
    public void <init>(com.google.devtools.ksp.processing.Resolver)
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver r0;
        com.google.devtools.ksp.processing.Resolver r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver;

        r1 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resolver");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.processing.Resolver resolver> = r1;

        return;
    }

    public final com.google.devtools.ksp.symbol.KSType applyTypeVariance(com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode, com.google.devtools.ksp.symbol.KSType)
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver r0;
        com.google.devtools.ksp.symbol.KSType r1, r3, $r5;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode r2;
        androidx.room.compiler.processing.ksp.ReferenceStack $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        r2 := @parameter1: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        r3 := @parameter2: com.google.devtools.ksp.symbol.KSType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ksType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "wildcardMode");

        $r4 = new androidx.room.compiler.processing.ksp.ReferenceStack;

        specialinvoke $r4.<androidx.room.compiler.processing.ksp.ReferenceStack: void <init>()>();

        $r5 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.symbol.KSType inheritVariance(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode,androidx.room.compiler.processing.ksp.ReferenceStack)>(r1, r3, r2, $r4);

        return $r5;
    }

    private final com.google.devtools.ksp.symbol.KSType inheritVariance(com.google.devtools.ksp.symbol.KSType, com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode, androidx.room.compiler.processing.ksp.ReferenceStack)
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver r0;
        com.google.devtools.ksp.symbol.KSType $r1, r2, r16, $r37;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode r3, r13, $r41;
        androidx.room.compiler.processing.ksp.ReferenceStack r4, r5;
        boolean z2, $z6, $z7, $z9, $z10, $z11;
        java.lang.Iterable $r6;
        java.util.Collection r7, r11;
        java.util.Iterator r8;
        java.lang.Object r9, $r26, $r29;
        int i0, i1, $i2, $i3, i4;
        com.google.devtools.ksp.symbol.KSTypeArgument r10, r14, $r27, $r40;
        com.google.devtools.ksp.symbol.KSTypeParameter r12;
        java.util.List r15, $r18, $r25, $r28, $r32, $r38;
        java.lang.Throwable r17, $r33;
        kotlin.collections.ArrayDeque $r19, $r22, $r34;
        com.google.devtools.ksp.symbol.KSDeclaration $r20, $r24;
        com.google.devtools.ksp.symbol.KSName $r21;
        java.lang.String $r36;
        java.util.ArrayList $r39;

        r0 := @this: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        r4 := @parameter3: androidx.room.compiler.processing.ksp.ReferenceStack;

        $r18 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        $z6 = interfaceinvoke $r18.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label01;

        return $r1;

     label01:
        r5 = r4;

     label02:
        $r19 = virtualinvoke r5.<androidx.room.compiler.processing.ksp.ReferenceStack: kotlin.collections.ArrayDeque get_queue()>();

        virtualinvoke $r19.<kotlin.collections.ArrayDeque: void addLast(java.lang.Object)>($r1);

        $r20 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r21 = interfaceinvoke $r20.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r21 == null goto label03;

        $r36 = interfaceinvoke $r21.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        goto label04;

     label03:
        $r36 = null;

     label04:
        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r36, "kotlin.Array");

        if $z7 == 0 goto label05;

        if r2 != null goto label05;

        $r37 = $r1;

        goto label15;

     label05:
        if r2 == null goto label06;

        $r32 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        $z9 = interfaceinvoke $r32.<java.util.List: boolean isEmpty()>();

        if $z9 == 0 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        z2 = $z10;

        $r38 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        $r6 = (java.lang.Iterable) $r38;

        $r39 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r6, 10);

        specialinvoke $r39.<java.util.ArrayList: void <init>(int)>($i3);

        r7 = (java.util.Collection) $r39;

        i4 = 0;

        r8 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z11 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label14;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i4;

        i4 = i4 + 1;

        i0 = $i2;

        if i0 >= 0 goto label09;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label09:
        r10 = (com.google.devtools.ksp.symbol.KSTypeArgument) r9;

        i1 = i0;

        r11 = r7;

        $r24 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r25 = interfaceinvoke $r24.<com.google.devtools.ksp.symbol.KSDeclaration: java.util.List getTypeParameters()>();

        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object getOrNull(java.util.List,int)>($r25, i1);

        r12 = (com.google.devtools.ksp.symbol.KSTypeParameter) $r26;

        if r2 == null goto label10;

        $r28 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        if $r28 == null goto label10;

        $r29 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object getOrNull(java.util.List,int)>($r28, i1);

        $r40 = (com.google.devtools.ksp.symbol.KSTypeArgument) $r29;

        goto label11;

     label10:
        $r40 = null;

     label11:
        r14 = $r40;

        if z2 == 0 goto label12;

        $r41 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode FORCED>;

        goto label13;

     label12:
        $r41 = r3;

     label13:
        r13 = $r41;

        $r27 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.symbol.KSTypeArgument access$inheritVariance(androidx.room.compiler.processing.ksp.KSTypeVarianceResolver,com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.symbol.KSTypeArgument,androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode,com.google.devtools.ksp.symbol.KSTypeParameter,androidx.room.compiler.processing.ksp.ReferenceStack)>(r0, r10, r14, r13, r12, r4);

        interfaceinvoke r11.<java.util.Collection: boolean add(java.lang.Object)>($r27);

        goto label08;

     label14:
        r15 = (java.util.List) r7;

        $r37 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSType replace(java.util.List)>(r15);

     label15:
        r16 = $r37;

     label16:
        $r22 = virtualinvoke r5.<androidx.room.compiler.processing.ksp.ReferenceStack: kotlin.collections.ArrayDeque get_queue()>();

        virtualinvoke $r22.<kotlin.collections.ArrayDeque: java.lang.Object removeLast()>();

        goto label19;

     label17:
        $r33 := @caughtexception;

        r17 = $r33;

     label18:
        $r34 = virtualinvoke r5.<androidx.room.compiler.processing.ksp.ReferenceStack: kotlin.collections.ArrayDeque get_queue()>();

        virtualinvoke $r34.<kotlin.collections.ArrayDeque: java.lang.Object removeLast()>();

        throw r17;

     label19:
        return r16;

        catch java.lang.Throwable from label02 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private final com.google.devtools.ksp.symbol.KSTypeArgument inheritVariance(com.google.devtools.ksp.symbol.KSTypeArgument, com.google.devtools.ksp.symbol.KSTypeArgument, androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode, com.google.devtools.ksp.symbol.KSTypeParameter, androidx.room.compiler.processing.ksp.ReferenceStack)
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver r0;
        com.google.devtools.ksp.symbol.KSTypeArgument $r1, r2, $r38, $r52;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode r3, $r12, $r13;
        com.google.devtools.ksp.symbol.KSTypeParameter r4;
        androidx.room.compiler.processing.ksp.ReferenceStack r5;
        com.google.devtools.ksp.symbol.KSTypeReference r6, $r8, $r20, $r22, $r24, $r30, $r36, $r51;
        com.google.devtools.ksp.symbol.KSType r7, $r19, $r34, $r35, $r43, $r49, $r50;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.google.devtools.ksp.symbol.Variance $r9, $r10, $r15, $r16, $r17, $r21, $r23, $r37, $r41, $r42, r45;
        com.google.devtools.ksp.symbol.KSAnnotated $r11;
        com.google.devtools.ksp.symbol.KSNode $r14;
        com.google.devtools.ksp.processing.Resolver $r18, $r31, $r46;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r25;
        com.google.devtools.ksp.symbol.ClassKind $r26, $r27;
        java.util.Set $r28;
        com.google.devtools.ksp.symbol.Modifier $r29;
        com.google.devtools.ksp.symbol.KSDeclaration r39;

        r0 := @this: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSTypeArgument;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSTypeArgument;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        r4 := @parameter3: com.google.devtools.ksp.symbol.KSTypeParameter;

        r5 := @parameter4: androidx.room.compiler.processing.ksp.ReferenceStack;

        if r4 != null goto label01;

        return $r1;

     label01:
        $r8 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r8 != null goto label02;

        return $r1;

     label02:
        r6 = $r8;

        r7 = interfaceinvoke r6.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $z1 = virtualinvoke r5.<androidx.room.compiler.processing.ksp.ReferenceStack: boolean contains(com.google.devtools.ksp.symbol.KSType)>(r7);

        if $z1 == 0 goto label03;

        return $r1;

     label03:
        $r9 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.Variance getVariance()>();

        $r10 = <com.google.devtools.ksp.symbol.Variance: com.google.devtools.ksp.symbol.Variance INVARIANT>;

        if $r9 == $r10 goto label06;

        $r31 = r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.processing.Resolver resolver>;

        if r2 == null goto label04;

        $r30 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r30 == null goto label04;

        $r34 = interfaceinvoke $r30.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        goto label05;

     label04:
        $r34 = null;

     label05:
        $r35 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.symbol.KSType inheritVariance(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode,androidx.room.compiler.processing.ksp.ReferenceStack)>(r7, $r34, r3, r5);

        $r36 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeReferenceExtKt: com.google.devtools.ksp.symbol.KSTypeReference createTypeReference(com.google.devtools.ksp.symbol.KSType)>($r35);

        $r37 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.Variance getVariance()>();

        $r38 = interfaceinvoke $r31.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.symbol.KSTypeArgument getTypeArgument(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.Variance)>($r36, $r37);

        return $r38;

     label06:
        $r11 = (com.google.devtools.ksp.symbol.KSAnnotated) $r1;

        $z2 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasJvmWildcardAnnotation(com.google.devtools.ksp.symbol.KSAnnotated)>($r11);

        if $z2 == 0 goto label07;

        $z7 = 1;

        goto label18;

     label07:
        $r12 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode SUPPRESSED>;

        if r3 != $r12 goto label08;

        $z7 = 0;

        goto label18;

     label08:
        $r13 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode FORCED>;

        if r3 != $r13 goto label09;

        $z7 = 1;

        goto label18;

     label09:
        $r14 = (com.google.devtools.ksp.symbol.KSNode) $r1;

        $z3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasSuppressWildcardsAnnotationInHierarchy(com.google.devtools.ksp.symbol.KSNode)>($r14);

        if $z3 == 0 goto label10;

        $z7 = 0;

        goto label18;

     label10:
        if r2 == null goto label11;

        $z7 = 1;

        goto label18;

     label11:
        $r15 = interfaceinvoke r4.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.Variance getVariance()>();

        $r16 = <com.google.devtools.ksp.symbol.Variance: com.google.devtools.ksp.symbol.Variance CONTRAVARIANT>;

        if $r15 == $r16 goto label16;

        r39 = interfaceinvoke r7.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $z4 = r39 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z4 == 0 goto label14;

        $z5 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isOpen(com.google.devtools.ksp.symbol.KSDeclaration)>(r39);

        if $z5 != 0 goto label12;

        $r25 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r39;

        $r26 = interfaceinvoke $r25.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r27 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind ENUM_CLASS>;

        if $r26 == $r27 goto label12;

        $r28 = interfaceinvoke r39.<com.google.devtools.ksp.symbol.KSDeclaration: java.util.Set getModifiers()>();

        $r29 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier SEALED>;

        $z6 = interfaceinvoke $r28.<java.util.Set: boolean contains(java.lang.Object)>($r29);

        if $z6 == 0 goto label13;

     label12:
        $z8 = 1;

        goto label15;

     label13:
        $z8 = 0;

        goto label15;

     label14:
        $z8 = 1;

     label15:
        if $z8 == 0 goto label17;

     label16:
        $z7 = 1;

        goto label18;

     label17:
        $z7 = 0;

     label18:
        z0 = $z7;

        if r2 == null goto label19;

        $r41 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.Variance getVariance()>();

        goto label20;

     label19:
        $r41 = null;

     label20:
        $r17 = <com.google.devtools.ksp.symbol.Variance: com.google.devtools.ksp.symbol.Variance STAR>;

        if $r41 != $r17 goto label21;

        $r42 = <com.google.devtools.ksp.symbol.Variance: com.google.devtools.ksp.symbol.Variance COVARIANT>;

        goto label27;

     label21:
        if r2 == null goto label22;

        $r24 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r24 == null goto label22;

        $r43 = interfaceinvoke $r24.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        goto label23;

     label22:
        $r43 = null;

     label23:
        $z9 = $r43 instanceof com.google.devtools.ksp.symbol.KSTypeParameter;

        if $z9 == 0 goto label24;

        $r23 = interfaceinvoke r4.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.Variance getVariance()>();

        $r42 = $r23;

        goto label26;

     label24:
        if r2 == null goto label25;

        $r42 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.Variance getVariance()>();

        goto label26;

     label25:
        $r42 = null;

     label26:
        if $r42 != null goto label27;

        $r42 = interfaceinvoke r4.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.Variance getVariance()>();

     label27:
        r45 = $r42;

        if z0 == 0 goto label30;

        $r46 = r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.processing.Resolver resolver>;

        if r2 == null goto label28;

        $r22 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r22 == null goto label28;

        $r49 = interfaceinvoke $r22.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        goto label29;

     label28:
        $r49 = null;

     label29:
        $r50 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.symbol.KSType inheritVariance(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode,androidx.room.compiler.processing.ksp.ReferenceStack)>(r7, $r49, r3, r5);

        $r51 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeReferenceExtKt: com.google.devtools.ksp.symbol.KSTypeReference createTypeReference(com.google.devtools.ksp.symbol.KSType)>($r50);

        $r52 = interfaceinvoke $r46.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.symbol.KSTypeArgument getTypeArgument(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.Variance)>($r51, r45);

        goto label31;

     label30:
        $r18 = r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.processing.Resolver resolver>;

        $r19 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.symbol.KSType inheritVariance(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode,androidx.room.compiler.processing.ksp.ReferenceStack)>(r7, null, r3, r5);

        $r20 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeReferenceExtKt: com.google.devtools.ksp.symbol.KSTypeReference createTypeReference(com.google.devtools.ksp.symbol.KSType)>($r19);

        $r21 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.Variance getVariance()>();

        $r52 = interfaceinvoke $r18.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.symbol.KSTypeArgument getTypeArgument(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.Variance)>($r20, $r21);

     label31:
        return $r52;
    }

    public static final com.google.devtools.ksp.symbol.KSTypeArgument access$inheritVariance(androidx.room.compiler.processing.ksp.KSTypeVarianceResolver, com.google.devtools.ksp.symbol.KSTypeArgument, com.google.devtools.ksp.symbol.KSTypeArgument, androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode, com.google.devtools.ksp.symbol.KSTypeParameter, androidx.room.compiler.processing.ksp.ReferenceStack)
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver $r0;
        com.google.devtools.ksp.symbol.KSTypeArgument $r1, r2, $r6;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode r3;
        com.google.devtools.ksp.symbol.KSTypeParameter r4;
        androidx.room.compiler.processing.ksp.ReferenceStack r5;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver;

        $r1 := @parameter1: com.google.devtools.ksp.symbol.KSTypeArgument;

        r2 := @parameter2: com.google.devtools.ksp.symbol.KSTypeArgument;

        r3 := @parameter3: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        r4 := @parameter4: com.google.devtools.ksp.symbol.KSTypeParameter;

        r5 := @parameter5: androidx.room.compiler.processing.ksp.ReferenceStack;

        $r6 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver: com.google.devtools.ksp.symbol.KSTypeArgument inheritVariance(com.google.devtools.ksp.symbol.KSTypeArgument,com.google.devtools.ksp.symbol.KSTypeArgument,androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode,com.google.devtools.ksp.symbol.KSTypeParameter,androidx.room.compiler.processing.ksp.ReferenceStack)>($r1, r2, r3, r4, r5);

        return $r6;
    }

androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode
<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode FORCED>
<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode PREFERRED>
<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode SUPPRESSED>
<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] values()
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[]) $r1;

        return $r2;
    }

    public static androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/room/compiler/processing/ksp/KSTypeVarianceResolver$WildcardMode;", r0);

        $r2 = (androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode) $r1;

        return $r2;
    }

    private static final androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $values()
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] r0;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode $r1, $r2, $r3;

        r0 = newarray (androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode)[3];

        $r1 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode FORCED>;

        r0[0] = $r1;

        $r2 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode PREFERRED>;

        r0[1] = $r2;

        $r3 = <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode SUPPRESSED>;

        r0[2] = $r3;

        return r0;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode $r0, $r1, $r2;
        androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $r3;

        $r0 = new androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: void <init>(java.lang.String,int)>("FORCED", 0);

        <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode FORCED> = $r0;

        $r1 = new androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        specialinvoke $r1.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: void <init>(java.lang.String,int)>("PREFERRED", 1);

        <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode PREFERRED> = $r1;

        $r2 = new androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: void <init>(java.lang.String,int)>("SUPPRESSED", 2);

        <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode SUPPRESSED> = $r2;

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $values()>();

        <androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode: androidx.room.compiler.processing.ksp.KSTypeVarianceResolver$WildcardMode[] $VALUES> = $r3;

        return;
    }

