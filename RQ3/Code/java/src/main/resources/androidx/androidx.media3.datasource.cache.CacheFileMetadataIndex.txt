androidx.media3.datasource.cache.CacheFileMetadataIndex
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String TABLE_PREFIX>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: int TABLE_VERSION>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String COLUMN_NAME>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String COLUMN_LENGTH>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String COLUMN_LAST_TOUCH_TIMESTAMP>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: int COLUMN_INDEX_NAME>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: int COLUMN_INDEX_LENGTH>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: int COLUMN_INDEX_LAST_TOUCH_TIMESTAMP>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String WHERE_NAME_EQUALS>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String[] COLUMNS>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String TABLE_SCHEMA>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>
<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>
    public static void delete(androidx.media3.database.DatabaseProvider, long) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.database.DatabaseProvider r0;
        long l0;
        java.lang.String r1, r7;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.Throwable r3, $r4, $r5, r8;
        androidx.media3.database.DatabaseIOException $r6;

        r0 := @parameter0: androidx.media3.database.DatabaseProvider;

        l0 := @parameter1: long;

        r1 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

     label1:
        r7 = staticinvoke <androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String getTableName(java.lang.String)>(r1);

        r2 = interfaceinvoke r0.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label2:
        staticinvoke <androidx.media3.database.VersionTable: void removeVersion(android.database.sqlite.SQLiteDatabase,int,java.lang.String)>(r2, 2, r1);

        staticinvoke <androidx.media3.datasource.cache.CacheFileMetadataIndex: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r2, r7);

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

        r3 = $r4;

     label5:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r3;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r6.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r8);

        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch android.database.SQLException from label1 to label6 with label7;
    }

    public void <init>(androidx.media3.database.DatabaseProvider)
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        androidx.media3.database.DatabaseProvider r1;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

        r1 := @parameter0: androidx.media3.database.DatabaseProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider> = r1;

        return;
    }

    public void initialize(long) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        long l0;
        android.database.sqlite.SQLiteDatabase r1, r2;
        int i1;
        java.lang.Throwable r3, $r15, $r16, r19;
        java.lang.String $r4, $r7, $r10, $r14, r18;
        androidx.media3.database.DatabaseProvider $r5, $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13;
        androidx.media3.database.DatabaseIOException $r17;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

        l0 := @parameter0: long;

     label1:
        r18 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r4 = staticinvoke <androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String getTableName(java.lang.String)>(r18);

        r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName> = $r4;

        $r5 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r1 = interfaceinvoke $r5.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        i1 = staticinvoke <androidx.media3.database.VersionTable: int getVersion(android.database.sqlite.SQLiteDatabase,int,java.lang.String)>(r1, 2, r18);

        if i1 == 1 goto label6;

        $r6 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r2 = interfaceinvoke $r6.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label2:
        staticinvoke <androidx.media3.database.VersionTable: void setVersion(android.database.sqlite.SQLiteDatabase,int,java.lang.String,int)>(r2, 2, r18, 1);

        $r7 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        staticinvoke <androidx.media3.datasource.cache.CacheFileMetadataIndex: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r2, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE ");

        $r10 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(name TEXT PRIMARY KEY NOT NULL,length INTEGER NOT NULL,last_touch_timestamp INTEGER NOT NULL)");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r14);

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label6;

     label4:
        $r15 := @caughtexception;

        r3 = $r15;

     label5:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r3;

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;

        r19 = $r16;

        $r17 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r17.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r19);

        throw $r17;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch android.database.SQLException from label1 to label6 with label7;
    }

    public java.util.Map getAll() throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        long l0, l1;
        java.util.HashMap $r1, r11, r13;
        int $i2;
        boolean $z0;
        java.lang.String $r2, r12;
        java.lang.Object $r3;
        androidx.media3.datasource.cache.CacheFileMetadata $r4;
        java.lang.Throwable $r6, $r8, $r9, r14, r15, r16;
        androidx.media3.database.DatabaseIOException $r7;
        android.database.Cursor r10;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

     label01:
        r10 = specialinvoke r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: android.database.Cursor getCursor()>();

     label02:
        $r1 = new java.util.HashMap;

        $i2 = interfaceinvoke r10.<android.database.Cursor: int getCount()>();

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i2);

        r11 = $r1;

     label03:
        $z0 = interfaceinvoke r10.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label04;

        $r2 = interfaceinvoke r10.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r12 = (java.lang.String) $r3;

        l0 = interfaceinvoke r10.<android.database.Cursor: long getLong(int)>(1);

        l1 = interfaceinvoke r10.<android.database.Cursor: long getLong(int)>(2);

        $r4 = new androidx.media3.datasource.cache.CacheFileMetadata;

        specialinvoke $r4.<androidx.media3.datasource.cache.CacheFileMetadata: void <init>(long,long)>(l0, l1);

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r4);

        goto label03;

     label04:
        r13 = r11;

     label05:
        if r10 == null goto label06;

        interfaceinvoke r10.<android.database.Cursor: void close()>();

     label06:
        return r13;

     label07:
        $r9 := @caughtexception;

        r14 = $r9;

        if r10 == null goto label11;

     label08:
        interfaceinvoke r10.<android.database.Cursor: void close()>();

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        r15 = $r8;

        virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r15);

     label11:
        throw r14;

     label12:
        $r6 := @caughtexception;

        r16 = $r6;

        $r7 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r7.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r16);

        throw $r7;

        catch java.lang.Throwable from label02 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch android.database.SQLException from label01 to label06 with label12;
        catch android.database.SQLException from label07 to label12 with label12;
    }

    public void set(java.lang.String, long, long) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        java.lang.String r1, $r3, $r9;
        long l0, l1;
        android.content.ContentValues r2, $r6;
        androidx.media3.database.DatabaseProvider $r5;
        java.lang.Long $r7, $r8;
        java.lang.Throwable $r10, r13;
        androidx.media3.database.DatabaseIOException $r11;
        android.database.sqlite.SQLiteDatabase r12;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r3 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

     label1:
        $r5 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r12 = interfaceinvoke $r5.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        r2 = $r6;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", r1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("length", $r7);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("last_touch_timestamp", $r8);

        $r9 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        virtualinvoke r12.<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>($r9, null, r2);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r13 = $r10;

        $r11 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r11.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r13);

        throw $r11;

     label4:
        return;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void remove(java.lang.String) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        java.lang.String r1, $r2, $r6;
        androidx.media3.database.DatabaseProvider $r4;
        java.lang.String[] $r5;
        java.lang.Throwable $r7, r10;
        androidx.media3.database.DatabaseIOException $r8;
        android.database.sqlite.SQLiteDatabase r9;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

     label1:
        $r4 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r9 = interfaceinvoke $r4.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r6 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        virtualinvoke r9.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r6, "name = ?", $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r8.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r10);

        throw $r8;

     label4:
        return;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void removeAll(java.util.Set) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.lang.String r3, $r5, $r10;
        java.lang.Throwable r4, $r11, $r12, r15;
        androidx.media3.database.DatabaseProvider $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.String[] $r9;
        androidx.media3.database.DatabaseIOException $r13;
        android.database.sqlite.SQLiteDatabase r14;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

        r1 := @parameter0: java.util.Set;

        $r5 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

     label01:
        $r7 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r14 = interfaceinvoke $r7.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke r14.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label02:
        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        $r10 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r3;

        virtualinvoke r14.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r10, "name = ?", $r9);

        goto label03;

     label04:
        virtualinvoke r14.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label05:
        virtualinvoke r14.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label08;

     label06:
        $r11 := @caughtexception;

        r4 = $r11;

     label07:
        virtualinvoke r14.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r4;

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

        r15 = $r12;

        $r13 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r13.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r15);

        throw $r13;

     label10:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.database.SQLException from label01 to label08 with label09;
    }

    private android.database.Cursor getCursor()
    {
        androidx.media3.datasource.cache.CacheFileMetadataIndex r0;
        java.lang.String $r1, $r6;
        androidx.media3.database.DatabaseProvider $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r5;
        android.database.Cursor $r7;

        r0 := @this: androidx.media3.datasource.cache.CacheFileMetadataIndex;

        $r1 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        $r4 = interfaceinvoke $r3.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r6 = r0.<androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String tableName>;

        $r5 = <androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String[] COLUMNS>;

        $r7 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, $r5, null, null, null, null, null);

        return $r7;
    }

    private static void dropTable(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DROP TABLE IF EXISTS ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r5);

        return;
    }

    private static java.lang.String getTableName(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExoPlayerCacheFileMetadata");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "name";

        $r0[1] = "length";

        $r0[2] = "last_touch_timestamp";

        <androidx.media3.datasource.cache.CacheFileMetadataIndex: java.lang.String[] COLUMNS> = $r0;

        return;
    }

