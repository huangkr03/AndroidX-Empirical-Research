androidx.compose.ui.focus.FocusManagerImpl
<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>
<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.Modifier modifier>
<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.unit.LayoutDirection layoutDirection>
    public void <init>(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.focus.FocusModifier r1, $r3;
        androidx.compose.ui.Modifier$Companion $r2;
        androidx.compose.ui.Modifier $r4, $r5;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "focusModifier");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier> = r1;

        $r2 = <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion>;

        $r4 = (androidx.compose.ui.Modifier) $r2;

        $r3 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r5 = staticinvoke <androidx.compose.ui.focus.FocusModifierKt: androidx.compose.ui.Modifier focusTarget(androidx.compose.ui.Modifier,androidx.compose.ui.focus.FocusModifier)>($r4, $r3);

        r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.Modifier modifier> = $r5;

        return;
    }

    public void <init>(androidx.compose.ui.focus.FocusModifier, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.compose.ui.focus.FocusModifier $r2, r4;
        androidx.compose.ui.focus.FocusStateImpl $r3;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        r4 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = new androidx.compose.ui.focus.FocusModifier;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        specialinvoke $r2.<androidx.compose.ui.focus.FocusModifier: void <init>(androidx.compose.ui.focus.FocusStateImpl,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, null, 2, null);

        r4 = $r2;

     label1:
        specialinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: void <init>(androidx.compose.ui.focus.FocusModifier)>(r4);

        return;
    }

    public final androidx.compose.ui.Modifier getModifier()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.Modifier $r1;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.Modifier modifier>;

        return $r1;
    }

    public final androidx.compose.ui.unit.LayoutDirection getLayoutDirection()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.unit.LayoutDirection $r1;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("layoutDirection");

        return null;
    }

    public final void setLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.unit.LayoutDirection r1;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        r1 := @parameter0: androidx.compose.ui.unit.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.unit.LayoutDirection layoutDirection> = r1;

        return;
    }

    public final void takeFocus()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.focus.FocusModifier $r1, $r5;
        androidx.compose.ui.focus.FocusStateImpl $r2, $r3, $r4;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        if $r2 != $r3 goto label1;

        $r5 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        virtualinvoke $r5.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r4);

     label1:
        return;
    }

    public final void releaseFocus()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.focus.FocusModifier $r1;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearFocus(androidx.compose.ui.focus.FocusModifier,boolean)>($r1, 1);

        return;
    }

    public void clearFocus(boolean)
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        boolean z0, $z1;
        androidx.compose.ui.focus.FocusStateImpl r1, $r7;
        androidx.compose.ui.focus.FocusModifier $r2, $r3, $r6;
        int[] $r4;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r5;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        r1 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r3 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $z1 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearFocus(androidx.compose.ui.focus.FocusModifier,boolean)>($r3, z0);

        if $z1 == 0 goto label6;

        $r6 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r4 = <androidx.compose.ui.focus.FocusManagerImpl$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label3;
            default: goto label4;
        };

     label1:
        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        goto label5;

     label2:
        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        goto label5;

     label3:
        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        goto label5;

     label4:
        $r5 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r5.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r5;

     label5:
        virtualinvoke $r6.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r7);

     label6:
        return;
    }

    public boolean moveFocus-3ESFkO8(int)
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        int i0;
        androidx.compose.ui.focus.FocusModifier r1, $r4, $r5, $r11;
        androidx.compose.ui.focus.FocusRequester r2, r3, $r8, $r10;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.compose.ui.unit.LayoutDirection $r6, $r12;
        androidx.compose.ui.focus.FocusRequester$Companion $r7, $r9;
        androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1 $r13;
        kotlin.jvm.functions.Function1 $r14;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        i0 := @parameter0: int;

        $r4 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r5 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.focus.FocusModifier findActiveFocusNode(androidx.compose.ui.focus.FocusModifier)>($r4);

        if $r5 != null goto label1;

        return 0;

     label1:
        r1 = $r5;

        $r6 = virtualinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        r2 = staticinvoke <androidx.compose.ui.focus.FocusOrderModifierKt: androidx.compose.ui.focus.FocusRequester customFocusSearch--OM-vw8(androidx.compose.ui.focus.FocusModifier,int,androidx.compose.ui.unit.LayoutDirection)>(r1, i0, $r6);

        r3 = r2;

        $r7 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getCancel()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r8);

        if $z1 == 0 goto label2;

        $z4 = 0;

        goto label6;

     label2:
        $r9 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r10);

        if $z2 == 0 goto label5;

        $r11 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r12 = virtualinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        $r13 = new androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1;

        specialinvoke $r13.<androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1: void <init>(androidx.compose.ui.focus.FocusModifier)>(r1);

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        z0 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean focusSearch-sMXa3k8(androidx.compose.ui.focus.FocusModifier,int,androidx.compose.ui.unit.LayoutDirection,kotlin.jvm.functions.Function1)>($r11, i0, $r12, $r14);

        if z0 != 0 goto label3;

        $z3 = specialinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: boolean wrapAroundFocus-3ESFkO8(int)>(i0);

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label6;

     label4:
        $z4 = 0;

        goto label6;

     label5:
        virtualinvoke r2.<androidx.compose.ui.focus.FocusRequester: void requestFocus()>();

        $z4 = 1;

     label6:
        return $z4;
    }

    public final void fetchUpdatedFocusProperties()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.focus.FocusModifier $r1;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        staticinvoke <androidx.compose.ui.focus.FocusManagerKt: void access$updateProperties(androidx.compose.ui.focus.FocusModifier)>($r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusModifier getActiveFocusModifier$ui_release()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        androidx.compose.ui.focus.FocusModifier $r1, $r2;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r2 = staticinvoke <androidx.compose.ui.focus.FocusManagerKt: androidx.compose.ui.focus.FocusModifier access$findActiveItem(androidx.compose.ui.focus.FocusModifier)>($r1);

        return $r2;
    }

    private final boolean wrapAroundFocus-3ESFkO8(int)
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;
        int i0, i1, $i2, $i3;
        androidx.compose.ui.focus.FocusModifier $r1, $r3, $r7;
        androidx.compose.ui.focus.FocusStateImpl $r2, $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.compose.ui.focus.FocusDirection$Companion $r5, $r6;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $z0 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusStateImpl: boolean getHasFocus()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $z1 = virtualinvoke $r4.<androidx.compose.ui.focus.FocusStateImpl: boolean isFocused()>();

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        i1 = i0;

        $r5 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i2 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusDirection$Companion: int getNext-dhqQ-8s()>();

        $z2 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i2);

        if $z2 == 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $r6 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i3 = virtualinvoke $r6.<androidx.compose.ui.focus.FocusDirection$Companion: int getPrevious-dhqQ-8s()>();

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i3);

     label4:
        if $z5 == 0 goto label6;

        virtualinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: void clearFocus(boolean)>(0);

        $r7 = r0.<androidx.compose.ui.focus.FocusManagerImpl: androidx.compose.ui.focus.FocusModifier focusModifier>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $z3 = virtualinvoke $r8.<androidx.compose.ui.focus.FocusStateImpl: boolean isFocused()>();

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $z4 = virtualinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: boolean moveFocus-3ESFkO8(int)>(i0);

        return $z4;

     label6:
        return 0;
    }

    public void <init>()
    {
        androidx.compose.ui.focus.FocusManagerImpl r0;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl;

        specialinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl: void <init>(androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1
<androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1: androidx.compose.ui.focus.FocusModifier $source>
    void <init>(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1 r0;
        androidx.compose.ui.focus.FocusModifier $r1;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1;

        $r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r0.<androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1: androidx.compose.ui.focus.FocusModifier $source> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1 r0;
        androidx.compose.ui.focus.FocusModifier r1, $r2, $r3;
        boolean $z0;
        java.lang.Boolean $r4, $r7;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r8;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destination");

        $r2 = r0.<androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1: androidx.compose.ui.focus.FocusModifier $source>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r7;

     label1:
        $r3 = virtualinvoke r1.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getParent()>();

        if $r3 != null goto label2;

        $r8 = "Focus search landed at the root.";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void requestFocus(androidx.compose.ui.focus.FocusModifier)>(r1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.focus.FocusModifier $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.focus.FocusModifier) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.focus.FocusManagerImpl$moveFocus$foundNextItem$1: java.lang.Boolean invoke(androidx.compose.ui.focus.FocusModifier)>($r2);

        return $r3;
    }

androidx.compose.ui.focus.FocusManagerImpl$WhenMappings
<androidx.compose.ui.focus.FocusManagerImpl$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.focus.FocusStateImpl[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.compose.ui.focus.FocusStateImpl $r2, $r3, $r4, $r5, $r6, $r7;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i3] = 3;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        $i4 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i4] = 4;

        $r6 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        $i5 = virtualinvoke $r6.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i5] = 5;

        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        $i6 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i6] = 6;

        <androidx.compose.ui.focus.FocusManagerImpl$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

