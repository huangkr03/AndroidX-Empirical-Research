androidx.media3.extractor.mp3.ConstantBitrateSeeker
    public void <init>(long, long, androidx.media3.extractor.MpegAudioUtil$Header, boolean)
    {
        androidx.media3.extractor.mp3.ConstantBitrateSeeker r0;
        long l0, l1;
        androidx.media3.extractor.MpegAudioUtil$Header r1;
        boolean z0;
        int $i2, $i3;

        r0 := @this: androidx.media3.extractor.mp3.ConstantBitrateSeeker;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.media3.extractor.MpegAudioUtil$Header;

        z0 := @parameter3: boolean;

        $i3 = r1.<androidx.media3.extractor.MpegAudioUtil$Header: int bitrate>;

        $i2 = r1.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        specialinvoke r0.<androidx.media3.extractor.ConstantBitrateSeekMap: void <init>(long,long,int,int,boolean)>(l0, l1, $i3, $i2, z0);

        return;
    }

    public long getTimeUs(long)
    {
        androidx.media3.extractor.mp3.ConstantBitrateSeeker r0;
        long l0, $l1;

        r0 := @this: androidx.media3.extractor.mp3.ConstantBitrateSeeker;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<androidx.media3.extractor.mp3.ConstantBitrateSeeker: long getTimeUsAtPosition(long)>(l0);

        return $l1;
    }

    public long getDataEndPosition()
    {
        androidx.media3.extractor.mp3.ConstantBitrateSeeker r0;

        r0 := @this: androidx.media3.extractor.mp3.ConstantBitrateSeeker;

        return -1L;
    }

