androidx.credentials.provider.Action
<androidx.credentials.provider.Action: androidx.credentials.provider.Action$Companion Companion>
<androidx.credentials.provider.Action: java.lang.CharSequence title>
<androidx.credentials.provider.Action: android.app.PendingIntent pendingIntent>
<androidx.credentials.provider.Action: java.lang.CharSequence subtitle>
<androidx.credentials.provider.Action: java.lang.String TAG>
<androidx.credentials.provider.Action: int SLICE_SPEC_REVISION>
<androidx.credentials.provider.Action: java.lang.String SLICE_SPEC_TYPE>
<androidx.credentials.provider.Action: java.lang.String SLICE_HINT_TITLE>
<androidx.credentials.provider.Action: java.lang.String SLICE_HINT_SUBTITLE>
<androidx.credentials.provider.Action: java.lang.String SLICE_HINT_PENDING_INTENT>
<androidx.credentials.provider.Action: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.lang.CharSequence, android.app.PendingIntent, java.lang.CharSequence)
    {
        androidx.credentials.provider.Action r0;
        java.lang.CharSequence r1, r3, $r6;
        android.app.PendingIntent r2;
        androidx.credentials.provider.Action$Companion $r4;
        android.app.slice.Slice $r5;
        int $i0;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9;
        boolean $z0;

        r0 := @this: androidx.credentials.provider.Action;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "title");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pendingIntent");

        $r4 = <androidx.credentials.provider.Action: androidx.credentials.provider.Action$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.credentials.provider.Action$Companion: android.app.slice.Slice toSlice$credentials_release(java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>(r1, r3, r2);

        specialinvoke r0.<android.service.credentials.Action: void <init>(android.app.slice.Slice)>($r5);

        r0.<androidx.credentials.provider.Action: java.lang.CharSequence title> = r1;

        r0.<androidx.credentials.provider.Action: android.app.PendingIntent pendingIntent> = r2;

        r0.<androidx.credentials.provider.Action: java.lang.CharSequence subtitle> = r3;

        $r6 = r0.<androidx.credentials.provider.Action: java.lang.CharSequence title>;

        $i0 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r9 = "title must not be empty";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        return;
    }

    public void <init>(java.lang.CharSequence, android.app.PendingIntent, java.lang.CharSequence, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.Action r0;
        java.lang.CharSequence r1, r4;
        android.app.PendingIntent r2;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r3;

        r0 := @this: androidx.credentials.provider.Action;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        r4 := @parameter2: java.lang.CharSequence;

        i0 := @parameter3: int;

        r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        specialinvoke r0.<androidx.credentials.provider.Action: void <init>(java.lang.CharSequence,android.app.PendingIntent,java.lang.CharSequence)>(r1, r2, r4);

        return;
    }

    public final java.lang.CharSequence getTitle()
    {
        androidx.credentials.provider.Action r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.credentials.provider.Action;

        $r1 = r0.<androidx.credentials.provider.Action: java.lang.CharSequence title>;

        return $r1;
    }

    public final android.app.PendingIntent getPendingIntent()
    {
        androidx.credentials.provider.Action r0;
        android.app.PendingIntent $r1;

        r0 := @this: androidx.credentials.provider.Action;

        $r1 = r0.<androidx.credentials.provider.Action: android.app.PendingIntent pendingIntent>;

        return $r1;
    }

    public final java.lang.CharSequence getSubtitle()
    {
        androidx.credentials.provider.Action r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.credentials.provider.Action;

        $r1 = r0.<androidx.credentials.provider.Action: java.lang.CharSequence subtitle>;

        return $r1;
    }

    public int describeContents()
    {
        androidx.credentials.provider.Action r0;

        r0 := @this: androidx.credentials.provider.Action;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.Action r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.Action;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.Action: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final android.app.slice.Slice toSlice$credentials_release(java.lang.CharSequence, java.lang.CharSequence, android.app.PendingIntent)
    {
        java.lang.CharSequence r0, r1;
        android.app.PendingIntent r2;
        androidx.credentials.provider.Action$Companion $r3;
        android.app.slice.Slice $r4;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.app.PendingIntent;

        $r3 = <androidx.credentials.provider.Action: androidx.credentials.provider.Action$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.credentials.provider.Action$Companion: android.app.slice.Slice toSlice$credentials_release(java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>(r0, r1, r2);

        return $r4;
    }

    public static final androidx.credentials.provider.Action fromSlice(android.app.slice.Slice)
    {
        android.app.slice.Slice r0;
        androidx.credentials.provider.Action$Companion $r1;
        androidx.credentials.provider.Action $r2;

        r0 := @parameter0: android.app.slice.Slice;

        $r1 = <androidx.credentials.provider.Action: androidx.credentials.provider.Action$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.Action$Companion: androidx.credentials.provider.Action fromSlice(android.app.slice.Slice)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.Action$Companion $r0;
        androidx.credentials.provider.Action$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.Action$Companion;

        specialinvoke $r0.<androidx.credentials.provider.Action$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.Action: androidx.credentials.provider.Action$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.Action$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.Action$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.Action: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

androidx.credentials.provider.Action$Builder
<androidx.credentials.provider.Action$Builder: java.lang.CharSequence title>
<androidx.credentials.provider.Action$Builder: android.app.PendingIntent pendingIntent>
<androidx.credentials.provider.Action$Builder: java.lang.CharSequence subtitle>
    public void <init>(java.lang.CharSequence, android.app.PendingIntent)
    {
        androidx.credentials.provider.Action$Builder r0;
        java.lang.CharSequence r1;
        android.app.PendingIntent r2;

        r0 := @this: androidx.credentials.provider.Action$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "title");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pendingIntent");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.credentials.provider.Action$Builder: java.lang.CharSequence title> = r1;

        r0.<androidx.credentials.provider.Action$Builder: android.app.PendingIntent pendingIntent> = r2;

        return;
    }

    public final androidx.credentials.provider.Action$Builder setSubtitle(java.lang.CharSequence)
    {
        androidx.credentials.provider.Action$Builder r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.credentials.provider.Action$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.credentials.provider.Action$Builder: java.lang.CharSequence subtitle> = r1;

        return r0;
    }

    public final androidx.credentials.provider.Action build()
    {
        androidx.credentials.provider.Action$Builder r0;
        androidx.credentials.provider.Action $r1;
        java.lang.CharSequence $r2, $r4;
        android.app.PendingIntent $r3;

        r0 := @this: androidx.credentials.provider.Action$Builder;

        $r1 = new androidx.credentials.provider.Action;

        $r4 = r0.<androidx.credentials.provider.Action$Builder: java.lang.CharSequence title>;

        $r3 = r0.<androidx.credentials.provider.Action$Builder: android.app.PendingIntent pendingIntent>;

        $r2 = r0.<androidx.credentials.provider.Action$Builder: java.lang.CharSequence subtitle>;

        specialinvoke $r1.<androidx.credentials.provider.Action: void <init>(java.lang.CharSequence,android.app.PendingIntent,java.lang.CharSequence)>($r4, $r3, $r2);

        return $r1;
    }

androidx.credentials.provider.Action$Companion$CREATOR$1
    void <init>()
    {
        androidx.credentials.provider.Action$Companion$CREATOR$1 r0;

        r0 := @this: androidx.credentials.provider.Action$Companion$CREATOR$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.credentials.provider.Action createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.Action$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        android.service.credentials.Action r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        androidx.credentials.provider.Action$Companion $r5;
        android.app.slice.Slice $r6;
        androidx.credentials.provider.Action $r7;

        r0 := @this: androidx.credentials.provider.Action$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r3 = <android.service.credentials.Action: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r2 = (android.service.credentials.Action) $r4;

        $r5 = <androidx.credentials.provider.Action: androidx.credentials.provider.Action$Companion Companion>;

        $r6 = virtualinvoke r2.<android.service.credentials.Action: android.app.slice.Slice getSlice()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "action.slice");

        $r7 = virtualinvoke $r5.<androidx.credentials.provider.Action$Companion: androidx.credentials.provider.Action fromSlice(android.app.slice.Slice)>($r6);

        return $r7;
    }

    public androidx.credentials.provider.Action[] newArray(int)
    {
        androidx.credentials.provider.Action$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.Action[] $r1;

        r0 := @this: androidx.credentials.provider.Action$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.credentials.provider.Action)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.Action$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.credentials.provider.Action $r2;

        r0 := @this: androidx.credentials.provider.Action$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.credentials.provider.Action$Companion$CREATOR$1: androidx.credentials.provider.Action createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.credentials.provider.Action$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.Action[] $r1;

        r0 := @this: androidx.credentials.provider.Action$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.credentials.provider.Action$Companion$CREATOR$1: androidx.credentials.provider.Action[] newArray(int)>(i0);

        return $r1;
    }

androidx.credentials.provider.Action$Companion
    private void <init>()
    {
        androidx.credentials.provider.Action$Companion r0;

        r0 := @this: androidx.credentials.provider.Action$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getSLICE_HINT_TITLE$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_SUBTITLE$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_PENDING_INTENT$credentials_release$annotations()
    {
        return;
    }

    public final android.app.slice.Slice toSlice$credentials_release(java.lang.CharSequence, java.lang.CharSequence, android.app.PendingIntent)
    {
        androidx.credentials.provider.Action$Companion r0;
        java.lang.CharSequence r1, r2;
        android.app.PendingIntent r3;
        android.app.slice.Slice$Builder r4, $r5, $r9, $r11, $r13;
        android.app.slice.SliceSpec $r6;
        android.net.Uri $r7;
        java.util.List $r8, $r10, $r12;
        android.app.slice.Slice $r14, $r16;

        r0 := @this: androidx.credentials.provider.Action$Companion;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.app.PendingIntent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "title");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "pendingIntent");

        $r5 = new android.app.slice.Slice$Builder;

        $r7 = <android.net.Uri: android.net.Uri EMPTY>;

        $r6 = new android.app.slice.SliceSpec;

        specialinvoke $r6.<android.app.slice.SliceSpec: void <init>(java.lang.String,int)>("Action", 0);

        specialinvoke $r5.<android.app.slice.Slice$Builder: void <init>(android.net.Uri,android.app.slice.SliceSpec)>($r7, $r6);

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.action.HINT_ACTION_TITLE");

        $r9 = virtualinvoke $r5.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.util.List)>(r1, null, $r8);

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.action.HINT_ACTION_SUBTEXT");

        r4 = virtualinvoke $r9.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.util.List)>(r2, null, $r10);

        $r11 = new android.app.slice.Slice$Builder;

        specialinvoke $r11.<android.app.slice.Slice$Builder: void <init>(android.app.slice.Slice$Builder)>(r4);

        $r12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("androidx.credentials.provider.action.SLICE_HINT_PENDING_INTENT");

        $r13 = virtualinvoke $r11.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addHints(java.util.List)>($r12);

        $r14 = virtualinvoke $r13.<android.app.slice.Slice$Builder: android.app.slice.Slice build()>();

        virtualinvoke r4.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addAction(android.app.PendingIntent,android.app.slice.Slice,java.lang.String)>(r3, $r14, null);

        $r16 = virtualinvoke r4.<android.app.slice.Slice$Builder: android.app.slice.Slice build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "sliceBuilder.build()");

        return $r16;
    }

    public final androidx.credentials.provider.Action fromSlice(android.app.slice.Slice)
    {
        androidx.credentials.provider.Action$Companion r0;
        android.app.slice.Slice r1;
        java.util.Iterator r2;
        java.lang.Object r3, r15;
        android.app.slice.SliceItem r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2, $z3;
        androidx.credentials.provider.Action $r6, $r19;
        java.lang.CharSequence $r7, $r8, r16;
        java.lang.Throwable $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12, $r14;
        android.app.PendingIntent r17;
        java.lang.Iterable $r18;

        r0 := @this: androidx.credentials.provider.Action$Companion;

        r1 := @parameter0: android.app.slice.Slice;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slice");

        r15 = "";

        r16 = null;

        r17 = null;

        $r5 = virtualinvoke r1.<android.app.slice.Slice: java.util.List getItems()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "slice.items");

        $r18 = (java.lang.Iterable) $r5;

        r2 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.app.slice.SliceItem) r3;

        $z1 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.action.HINT_ACTION_TITLE");

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r4.<android.app.slice.SliceItem: java.lang.CharSequence getText()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "it.text");

        r15 = $r8;

        goto label4;

     label2:
        $z2 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.action.HINT_ACTION_SUBTEXT");

        if $z2 == 0 goto label3;

        r16 = virtualinvoke r4.<android.app.slice.SliceItem: java.lang.CharSequence getText()>();

        goto label4;

     label3:
        $z3 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.action.SLICE_HINT_PENDING_INTENT");

        if $z3 == 0 goto label4;

        r17 = virtualinvoke r4.<android.app.slice.SliceItem: android.app.PendingIntent getAction()>();

     label4:
        goto label1;

     label5:
        $r6 = new androidx.credentials.provider.Action;

        $r7 = (java.lang.CharSequence) r15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r17);

        specialinvoke $r6.<androidx.credentials.provider.Action: void <init>(java.lang.CharSequence,android.app.PendingIntent,java.lang.CharSequence)>($r7, r17, r16);

        $r19 = $r6;

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromSlice failed with: ");

        $r12 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Action", $r14);

        $r19 = null;

     label8:
        return $r19;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.Action$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.Action$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.Action$Companion: void <init>()>();

        return;
    }

