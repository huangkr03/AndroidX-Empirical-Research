androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk
<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: int trackType>
<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.common.Format sampleFormat>
<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition>
<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: boolean loadCompleted>
    public void <init>(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, androidx.media3.common.Format, int, java.lang.Object, long, long, long, int, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2;
        androidx.media3.common.Format r3, r5;
        int i0, i4;
        java.lang.Object r4;
        long l1, l2, l3;

        r0 := @this: androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        r3 := @parameter2: androidx.media3.common.Format;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.Object;

        l1 := @parameter5: long;

        l2 := @parameter6: long;

        l3 := @parameter7: long;

        i4 := @parameter8: int;

        r5 := @parameter9: androidx.media3.common.Format;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long,long,long)>(r1, r2, r3, i0, r4, l1, l2, -9223372036854775807L, -9223372036854775807L, l3);

        r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: int trackType> = i4;

        r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.common.Format sampleFormat> = r5;

        return;
    }

    public boolean isLoadCompleted()
    {
        androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk;

        $z0 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: boolean loadCompleted>;

        return $z0;
    }

    public void cancelLoad()
    {
        androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk r0;

        r0 := @this: androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk;

        return;
    }

    public void load() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk r0;
        androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput r1;
        androidx.media3.extractor.TrackOutput r2;
        androidx.media3.datasource.DataSpec r3, $r7;
        androidx.media3.extractor.DefaultExtractorInput r4, r14;
        int i0, $i1, i12;
        java.lang.Throwable r5, $r12;
        androidx.media3.common.Format $r6;
        long $l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10, l11;
        androidx.media3.datasource.StatsDataSource $r8, $r10, $r11, $r13;
        byte $b3;
        androidx.media3.common.DataReader r15, r16;
        androidx.media3.datasource.DataSource r17, r18;

        r0 := @this: androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk;

        r1 = virtualinvoke r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput getOutput()>();

        virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput: void setSampleOffsetUs(long)>(0L);

        $i1 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: int trackType>;

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput: androidx.media3.extractor.TrackOutput track(int,int)>(0, $i1);

        $r6 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.common.Format sampleFormat>;

        interfaceinvoke r2.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r6);

     label1:
        $r7 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $l2 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition>;

        r3 = virtualinvoke $r7.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec subrange(long)>($l2);

        $r8 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        l11 = virtualinvoke $r8.<androidx.media3.datasource.StatsDataSource: long open(androidx.media3.datasource.DataSpec)>(r3);

        $b3 = l11 cmp -1L;

        if $b3 == 0 goto label2;

        $l10 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition>;

        l11 = l11 + $l10;

     label2:
        r14 = new androidx.media3.extractor.DefaultExtractorInput;

        $r10 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        $l4 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition>;

        r15 = (androidx.media3.common.DataReader) $r10;

        specialinvoke r14.<androidx.media3.extractor.DefaultExtractorInput: void <init>(androidx.media3.common.DataReader,long,long)>(r15, $l4, l11);

        r4 = r14;

        i12 = 0;

     label3:
        if i12 == -1 goto label4;

        $l8 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition>;

        $l7 = (long) i12;

        $l9 = $l8 + $l7;

        r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition> = $l9;

        r16 = (androidx.media3.common.DataReader) r4;

        i12 = interfaceinvoke r2.<androidx.media3.extractor.TrackOutput: int sampleData(androidx.media3.common.DataReader,int,boolean)>(r16, 2147483647, 1);

        goto label3;

     label4:
        $l5 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long nextLoadPosition>;

        i0 = (int) $l5;

        $l6 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: long startTimeUs>;

        interfaceinvoke r2.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l6, 1, i0, 0, null);

     label5:
        $r11 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        r17 = (androidx.media3.datasource.DataSource) $r11;

        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r17);

        goto label8;

     label6:
        $r12 := @caughtexception;

        r5 = $r12;

     label7:
        $r13 = r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        r18 = (androidx.media3.datasource.DataSource) $r13;

        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r18);

        throw r5;

     label8:
        r0.<androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk: boolean loadCompleted> = 1;

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

