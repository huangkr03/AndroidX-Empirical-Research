androidx.media2.player.AudioFocusHandler
<androidx.media2.player.AudioFocusHandler: java.lang.String TAG>
<androidx.media2.player.AudioFocusHandler: boolean DEBUG>
<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl>
    void <init>(android.content.Context, androidx.media2.player.MediaPlayer)
    {
        androidx.media2.player.AudioFocusHandler r0;
        android.content.Context r1;
        androidx.media2.player.MediaPlayer r2;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase $r3;

        r0 := @this: androidx.media2.player.AudioFocusHandler;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.player.MediaPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        specialinvoke $r3.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void <init>(android.content.Context,androidx.media2.player.MediaPlayer)>(r1, r2);

        r0.<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl> = $r3;

        return;
    }

    public boolean onPlay()
    {
        androidx.media2.player.AudioFocusHandler r0;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl $r1;
        boolean $z0;

        r0 := @this: androidx.media2.player.AudioFocusHandler;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        $z0 = interfaceinvoke $r1.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: boolean onPlay()>();

        return $z0;
    }

    public void onPause()
    {
        androidx.media2.player.AudioFocusHandler r0;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl $r1;

        r0 := @this: androidx.media2.player.AudioFocusHandler;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r1.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void onPause()>();

        return;
    }

    public void onReset()
    {
        androidx.media2.player.AudioFocusHandler r0;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl $r1;

        r0 := @this: androidx.media2.player.AudioFocusHandler;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r1.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void onReset()>();

        return;
    }

    public void close()
    {
        androidx.media2.player.AudioFocusHandler r0;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl $r1;

        r0 := @this: androidx.media2.player.AudioFocusHandler;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r1.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void close()>();

        return;
    }

    public void sendIntent(android.content.Intent)
    {
        androidx.media2.player.AudioFocusHandler r0;
        android.content.Intent r1;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl $r2;

        r0 := @this: androidx.media2.player.AudioFocusHandler;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<androidx.media2.player.AudioFocusHandler: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r2.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void sendIntent(android.content.Intent)>(r1);

        return;
    }

androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: boolean onPlay()>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void onPause()>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void onReset()>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void close()>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImpl: void sendIntent(android.content.Intent)>
androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerVolumeBeforeDucking>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerDuckingVolume>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>
    void <init>(androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase)
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener r0;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r1;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener;

        r1 := @parameter0: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAudioFocusChange(int)
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener r0;
        int i0, $i1, $i3;
        java.lang.Object r1, $r8, $r13, $r22, $r28, $r31, $r39, r47, r48, r49, r50, r51;
        java.lang.Throwable r2, $r46;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase $r3, $r5, $r7, $r9, $r12, $r14, $r15, $r18, $r21, $r23, $r24, $r27, $r29, $r30, $r32, $r34, $r36, $r38, $r40, $r43;
        androidx.media2.player.MediaPlayer $r4, $r6, $r10, $r16, $r19, $r25, $r37, $r41, $r44;
        float $f0, f1, f2, f3, f4;
        byte $b2;
        boolean $z0, $z1, z2;
        androidx.media.AudioAttributesCompat $r33, $r35;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -3: goto label09;
            case -2: goto label21;
            case -1: goto label07;
            case 0: goto label22;
            case 1: goto label01;
            default: goto label22;
        };

     label01:
        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r4 = $r3.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        $i1 = virtualinvoke $r4.<androidx.media2.player.MediaPlayer: int getPlayerState()>();

        if $i1 != 1 goto label04;

        $r12 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r13 = $r12.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r47 = $r13;

        entermonitor $r13;

        $r14 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $z0 = $r14.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain>;

        if $z0 != 0 goto label02;

        exitmonitor r47;

        goto label22;

     label02:
        exitmonitor r47;

        goto label03;

     label03:
        $r15 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r16 = $r15.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r16.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture play()>();

        goto label22;

     label04:
        $r5 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r6 = $r5.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        f1 = virtualinvoke $r6.<androidx.media2.player.MediaPlayer: float getPlayerVolume()>();

        $r7 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r8 = $r7.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r48 = $r8;

        entermonitor $r8;

        $f0 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerDuckingVolume>;

        $b2 = f1 cmpl $f0;

        if $b2 == 0 goto label05;

        exitmonitor r48;

        goto label22;

     label05:
        f2 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerVolumeBeforeDucking>;

        exitmonitor r48;

        goto label06;

     label06:
        $r9 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r10 = $r9.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r10.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture setPlayerVolume(float)>(f2);

        goto label22;

     label07:
        $r18 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r19 = $r18.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r19.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture pause()>();

        $r21 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r22 = $r21.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r49 = $r22;

        entermonitor $r22;

        $r23 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r23.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        exitmonitor r49;

        goto label08;

     label08:
        goto label22;

     label09:
        $r30 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r31 = $r30.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r50 = $r31;

        entermonitor $r31;

     label10:
        $r32 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r33 = $r32.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        if $r33 != null goto label12;

        exitmonitor r50;

     label11:
        goto label22;

     label12:
        $r34 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r35 = $r34.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        $i3 = virtualinvoke $r35.<androidx.media.AudioAttributesCompat: int getContentType()>();

        if $i3 != 1 goto label13;

        $z1 = 1;

        goto label14;

     label13:
        $z1 = 0;

     label14:
        z2 = $z1;

        exitmonitor r50;

     label15:
        goto label18;

     label16:
        $r46 := @caughtexception;

        r2 = $r46;

        exitmonitor r50;

     label17:
        throw r2;

     label18:
        if z2 == 0 goto label19;

        $r43 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r44 = $r43.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r44.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture pause()>();

        goto label22;

     label19:
        $r36 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r37 = $r36.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        f3 = virtualinvoke $r37.<androidx.media2.player.MediaPlayer: float getPlayerVolume()>();

        f4 = f3 * 0.2F;

        $r38 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r39 = $r38.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r39;

        entermonitor $r39;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerVolumeBeforeDucking> = f3;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerDuckingVolume> = f4;

        exitmonitor r1;

        goto label20;

     label20:
        $r40 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r41 = $r40.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r41.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture setPlayerVolume(float)>(f4);

        goto label22;

     label21:
        $r24 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r25 = $r24.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r25.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture pause()>();

        $r27 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r28 = $r27.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r51 = $r28;

        entermonitor $r28;

        $r29 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r29.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 1;

        exitmonitor r51;

        goto label22;

     label22:
        return;

        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>
    void <init>(androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase)
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver r0;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r1;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver;

        r1 := @parameter0: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0;
        java.lang.Object r3, $r8;
        java.lang.Throwable r4, $r33;
        java.lang.String $r5, $r6, $r19;
        boolean $z0, $z1, $z2;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase $r7, $r13, $r16, $r20, $r21, $r23, $r25, $r26, $r30;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r15, $r18;
        androidx.media.AudioAttributesCompat $r17, $r22, $r24;
        androidx.media2.player.MediaPlayer $r27, $r28, $r31;
        float $f0, $f1;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r5 = "android.media.AUDIO_BECOMING_NOISY";

        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r8 = $r7.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label02:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received noisy intent, intent=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", registered=");

        $r13 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $z1 = $r13.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", attr=");

        $r16 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r17 = $r16.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioFocusHandler", $r19);

        $r20 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $z2 = $r20.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered>;

        if $z2 == 0 goto label03;

        $r21 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r22 = $r21.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        if $r22 != null goto label05;

     label03:
        exitmonitor r3;

     label04:
        return;

     label05:
        $r23 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r24 = $r23.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        i0 = virtualinvoke $r24.<androidx.media.AudioAttributesCompat: int getUsage()>();

        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r33 := @caughtexception;

        r4 = $r33;

        exitmonitor r3;

     label08:
        throw r4;

     label09:
        lookupswitch(i0)
        {
            case 1: goto label10;
            case 14: goto label11;
            default: goto label12;
        };

     label10:
        $r30 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r31 = $r30.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        virtualinvoke $r31.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture pause()>();

        goto label12;

     label11:
        $r25 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r28 = $r25.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        $r26 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r27 = $r26.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        $f0 = virtualinvoke $r27.<androidx.media2.player.MediaPlayer: float getPlayerVolume()>();

        $f1 = $f0 * 0.2F;

        virtualinvoke $r28.<androidx.media2.player.MediaPlayer: com.google.common.util.concurrent.ListenableFuture setPlayerVolume(float)>($f1);

        goto label12;

     label12:
        return;

        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: float VOLUME_DUCK_FACTOR>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyReceiver>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.IntentFilter mIntentFilter>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain>
<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered>
    void <init>(android.content.Context, androidx.media2.player.MediaPlayer)
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.content.Context r1;
        androidx.media2.player.MediaPlayer r2;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver $r3;
        android.content.IntentFilter $r4;
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener $r5;
        java.lang.Object $r6, $r7;
        android.media.AudioManager $r8;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.player.MediaPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver;

        specialinvoke $r3.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$BecomingNoisyReceiver: void <init>(androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase)>(r0);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyReceiver> = $r3;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.media.AUDIO_BECOMING_NOISY");

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.IntentFilter mIntentFilter> = $r4;

        $r5 = new androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener;

        specialinvoke $r5.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: void <init>(androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase)>(r0);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock> = $r6;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext> = r1;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer> = r2;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r8 = (android.media.AudioManager) $r7;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager> = $r8;

        return;
    }

    public boolean onPlay()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        androidx.media.AudioAttributesCompat r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r6;
        androidx.media2.player.MediaPlayer $r4;
        boolean z0;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r4 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media2.player.MediaPlayer mPlayer>;

        r1 = virtualinvoke $r4.<androidx.media2.player.MediaPlayer: androidx.media.AudioAttributesCompat getAudioAttributes()>();

        z0 = 1;

        $r5 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes> = r1;

        if r1 != null goto label2;

        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void unregisterBecomingNoisyReceiverLocked()>();

        goto label3;

     label2:
        z0 = specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean requestAudioFocusLocked()>();

        if z0 == 0 goto label3;

        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void registerBecomingNoisyReceiverLocked()>();

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onPause()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void unregisterBecomingNoisyReceiverLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onReset()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void unregisterBecomingNoisyReceiverLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void unregisterBecomingNoisyReceiverLocked()>();

        specialinvoke r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void sendIntent(android.content.Intent)
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.content.Intent r1;
        android.content.Context $r2;
        android.content.BroadcastReceiver $r3;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyReceiver>;

        $r2 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r2, r1);

        return;
    }

    private boolean requestAudioFocusLocked()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        int i0, i1, $i2, $i5;
        androidx.media.AudioAttributesCompat $r1, $r2, $r19;
        android.media.AudioManager $r3;
        android.media.AudioManager$OnAudioFocusChangeListener $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17;
        java.lang.String $r11, $r18;
        boolean $z0, $z1;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        i0 = staticinvoke <androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int convertAudioAttributesToFocusGain(androidx.media.AudioAttributesCompat)>($r1);

        if i0 != 0 goto label2;

        $r19 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        if $r19 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioFocusHandler", "requestAudioFocusLocked() shouldn\'t be called when AudioAttributes is null");

     label1:
        return 1;

     label2:
        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener>;

        $r2 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: androidx.media.AudioAttributesCompat mAudioAttributes>;

        $i2 = virtualinvoke $r2.<androidx.media.AudioAttributesCompat: int getVolumeControlStream()>();

        i1 = virtualinvoke $r3.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>($r4, $i2, i0);

        if i1 != 1 goto label3;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType> = i0;

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestAudioFocus(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed (return=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") playback wouldn\'t start.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", $r11);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType> = 0;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestAudioFocus(");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), result=");

        if i1 != 1 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioFocusHandler", $r18);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        $i5 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        if $i5 == 0 goto label7;

        $z1 = 1;

        goto label8;

     label7:
        $z1 = 0;

     label8:
        return $z1;
    }

    private void abandonAudioFocusLocked()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        android.media.AudioManager$OnAudioFocusChangeListener $r5;
        android.media.AudioManager $r6;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $i0 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("abandoningAudioFocusLocked, currently=");

        $i1 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioFocusHandler", $r4);

        $r6 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager>;

        $r5 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener>;

        virtualinvoke $r6.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>($r5);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType> = 0;

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        return;
    }

    private void registerBecomingNoisyReceiverLocked()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        boolean $z0;
        android.content.IntentFilter $r1;
        android.content.BroadcastReceiver $r2;
        android.content.Context $r3;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $z0 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered>;

        if $z0 == 0 goto label1;

        return;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioFocusHandler", "registering becoming noisy receiver");

        $r3 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>;

        $r2 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyReceiver>;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r1);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered> = 1;

        return;
    }

    private void unregisterBecomingNoisyReceiverLocked()
    {
        androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        boolean $z0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;

        r0 := @this: androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase;

        $z0 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioFocusHandler", "unregistering becoming noisy receiver");

        $r2 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>;

        $r1 = r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        r0.<androidx.media2.player.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mBecomingNoisyReceiverRegistered> = 0;

        return;
    }

    private static int convertAudioAttributesToFocusGain(androidx.media.AudioAttributesCompat)
    {
        androidx.media.AudioAttributesCompat r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @parameter0: androidx.media.AudioAttributesCompat;

        if r0 != null goto label01;

        return 0;

     label01:
        $i0 = virtualinvoke r0.<androidx.media.AudioAttributesCompat: int getUsage()>();

        tableswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label02;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label06;
            case 7: goto label06;
            case 8: goto label06;
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label08;
            case 12: goto label06;
            case 13: goto label06;
            case 14: goto label03;
            case 15: goto label10;
            case 16: goto label07;
            default: goto label10;
        };

     label02:
        return 0;

     label03:
        return 1;

     label04:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", "Specify a proper usage in the audio attributes for audio focus handling. Using AUDIOFOCUS_GAIN by default.");

        return 1;

     label05:
        return 2;

     label06:
        return 3;

     label07:
        return 4;

     label08:
        $i1 = virtualinvoke r0.<androidx.media.AudioAttributesCompat: int getContentType()>();

        if $i1 != 1 goto label09;

        return 2;

     label09:
        return 3;

     label10:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unidentified AudioAttribute ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", $r4);

        return 0;
    }

