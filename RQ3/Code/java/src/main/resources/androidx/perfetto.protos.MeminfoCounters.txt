perfetto.protos.MeminfoCounters
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters$Companion Companion>
<perfetto.protos.MeminfoCounters: int value>
<perfetto.protos.MeminfoCounters: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNSPECIFIED>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_TOTAL>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_FREE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_AVAILABLE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_BUFFERS>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CACHED>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_CACHED>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_ANON>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_ANON>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_FILE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_FILE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNEVICTABLE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MLOCKED>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_TOTAL>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_FREE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_DIRTY>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_WRITEBACK>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ANON_PAGES>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MAPPED>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SHMEM>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_RECLAIMABLE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_UNRECLAIMABLE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_KERNEL_STACK>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_PAGE_TABLES>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMIT_LIMIT>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMITED_AS>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_TOTAL>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_USED>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_CHUNK>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_TOTAL>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_FREE>
<perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters[] $VALUES>
    private void <init>(java.lang.String, int, int)
    {
        perfetto.protos.MeminfoCounters r0;
        java.lang.String $r1;
        int $i0, i1;

        r0 := @this: perfetto.protos.MeminfoCounters;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<perfetto.protos.MeminfoCounters: int value> = i1;

        return;
    }

    public int getValue()
    {
        perfetto.protos.MeminfoCounters r0;
        int $i0;

        r0 := @this: perfetto.protos.MeminfoCounters;

        $i0 = r0.<perfetto.protos.MeminfoCounters: int value>;

        return $i0;
    }

    public static perfetto.protos.MeminfoCounters[] values()
    {
        perfetto.protos.MeminfoCounters[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (perfetto.protos.MeminfoCounters[]) $r1;

        return $r2;
    }

    public static perfetto.protos.MeminfoCounters valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        perfetto.protos.MeminfoCounters $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lperfetto/protos/MeminfoCounters;", r0);

        $r2 = (perfetto.protos.MeminfoCounters) $r1;

        return $r2;
    }

    private static final perfetto.protos.MeminfoCounters[] $values()
    {
        perfetto.protos.MeminfoCounters[] r0;
        perfetto.protos.MeminfoCounters $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        r0 = newarray (perfetto.protos.MeminfoCounters)[34];

        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNSPECIFIED>;

        r0[0] = $r1;

        $r2 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_TOTAL>;

        r0[1] = $r2;

        $r3 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_FREE>;

        r0[2] = $r3;

        $r4 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_AVAILABLE>;

        r0[3] = $r4;

        $r5 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_BUFFERS>;

        r0[4] = $r5;

        $r6 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CACHED>;

        r0[5] = $r6;

        $r7 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_CACHED>;

        r0[6] = $r7;

        $r8 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE>;

        r0[7] = $r8;

        $r9 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE>;

        r0[8] = $r9;

        $r10 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_ANON>;

        r0[9] = $r10;

        $r11 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_ANON>;

        r0[10] = $r11;

        $r12 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_FILE>;

        r0[11] = $r12;

        $r13 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_FILE>;

        r0[12] = $r13;

        $r14 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNEVICTABLE>;

        r0[13] = $r14;

        $r15 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MLOCKED>;

        r0[14] = $r15;

        $r16 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_TOTAL>;

        r0[15] = $r16;

        $r17 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_FREE>;

        r0[16] = $r17;

        $r18 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_DIRTY>;

        r0[17] = $r18;

        $r19 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_WRITEBACK>;

        r0[18] = $r19;

        $r20 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ANON_PAGES>;

        r0[19] = $r20;

        $r21 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MAPPED>;

        r0[20] = $r21;

        $r22 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SHMEM>;

        r0[21] = $r22;

        $r23 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB>;

        r0[22] = $r23;

        $r24 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_RECLAIMABLE>;

        r0[23] = $r24;

        $r25 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_UNRECLAIMABLE>;

        r0[24] = $r25;

        $r26 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_KERNEL_STACK>;

        r0[25] = $r26;

        $r27 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_PAGE_TABLES>;

        r0[26] = $r27;

        $r28 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMIT_LIMIT>;

        r0[27] = $r28;

        $r29 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMITED_AS>;

        r0[28] = $r29;

        $r30 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_TOTAL>;

        r0[29] = $r30;

        $r31 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_USED>;

        r0[30] = $r31;

        $r32 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_CHUNK>;

        r0[31] = $r32;

        $r33 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_TOTAL>;

        r0[32] = $r33;

        $r34 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_FREE>;

        r0[33] = $r34;

        return r0;
    }

    public static final perfetto.protos.MeminfoCounters fromValue(int)
    {
        int i0;
        perfetto.protos.MeminfoCounters$Companion $r0;
        perfetto.protos.MeminfoCounters $r1;

        i0 := @parameter0: int;

        $r0 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters$Companion Companion>;

        $r1 = virtualinvoke $r0.<perfetto.protos.MeminfoCounters$Companion: perfetto.protos.MeminfoCounters fromValue(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        kotlin.reflect.KClass r0;
        com.squareup.wire.Syntax r1;
        perfetto.protos.MeminfoCounters r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        perfetto.protos.MeminfoCounters[] $r37;
        perfetto.protos.MeminfoCounters$Companion $r38;
        perfetto.protos.MeminfoCounters$Companion$ADAPTER$1 $r39;
        com.squareup.wire.ProtoAdapter $r40;

        $r3 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r3.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_UNSPECIFIED", 0, 0);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNSPECIFIED> = $r3;

        $r4 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r4.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_MEM_TOTAL", 1, 1);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_TOTAL> = $r4;

        $r5 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r5.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_MEM_FREE", 2, 2);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_FREE> = $r5;

        $r6 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r6.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_MEM_AVAILABLE", 3, 3);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_AVAILABLE> = $r6;

        $r7 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r7.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_BUFFERS", 4, 4);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_BUFFERS> = $r7;

        $r8 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r8.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_CACHED", 5, 5);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CACHED> = $r8;

        $r9 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r9.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SWAP_CACHED", 6, 6);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_CACHED> = $r9;

        $r10 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r10.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_ACTIVE", 7, 7);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE> = $r10;

        $r11 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r11.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_INACTIVE", 8, 8);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE> = $r11;

        $r12 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r12.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_ACTIVE_ANON", 9, 9);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_ANON> = $r12;

        $r13 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r13.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_INACTIVE_ANON", 10, 10);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_ANON> = $r13;

        $r14 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r14.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_ACTIVE_FILE", 11, 11);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_FILE> = $r14;

        $r15 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r15.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_INACTIVE_FILE", 12, 12);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_FILE> = $r15;

        $r16 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r16.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_UNEVICTABLE", 13, 13);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNEVICTABLE> = $r16;

        $r17 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r17.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_MLOCKED", 14, 14);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MLOCKED> = $r17;

        $r18 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r18.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SWAP_TOTAL", 15, 15);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_TOTAL> = $r18;

        $r19 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r19.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SWAP_FREE", 16, 16);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_FREE> = $r19;

        $r20 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r20.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_DIRTY", 17, 17);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_DIRTY> = $r20;

        $r21 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r21.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_WRITEBACK", 18, 18);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_WRITEBACK> = $r21;

        $r22 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r22.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_ANON_PAGES", 19, 19);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ANON_PAGES> = $r22;

        $r23 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r23.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_MAPPED", 20, 20);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MAPPED> = $r23;

        $r24 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r24.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SHMEM", 21, 21);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SHMEM> = $r24;

        $r25 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r25.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SLAB", 22, 22);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB> = $r25;

        $r26 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r26.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SLAB_RECLAIMABLE", 23, 23);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_RECLAIMABLE> = $r26;

        $r27 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r27.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_SLAB_UNRECLAIMABLE", 24, 24);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_UNRECLAIMABLE> = $r27;

        $r28 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r28.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_KERNEL_STACK", 25, 25);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_KERNEL_STACK> = $r28;

        $r29 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r29.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_PAGE_TABLES", 26, 26);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_PAGE_TABLES> = $r29;

        $r30 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r30.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_COMMIT_LIMIT", 27, 27);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMIT_LIMIT> = $r30;

        $r31 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r31.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_COMMITED_AS", 28, 28);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMITED_AS> = $r31;

        $r32 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r32.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_VMALLOC_TOTAL", 29, 29);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_TOTAL> = $r32;

        $r33 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r33.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_VMALLOC_USED", 30, 30);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_USED> = $r33;

        $r34 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r34.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_VMALLOC_CHUNK", 31, 31);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_CHUNK> = $r34;

        $r35 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r35.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_CMA_TOTAL", 32, 32);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_TOTAL> = $r35;

        $r36 = new perfetto.protos.MeminfoCounters;

        specialinvoke $r36.<perfetto.protos.MeminfoCounters: void <init>(java.lang.String,int,int)>("MEMINFO_CMA_FREE", 33, 33);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_FREE> = $r36;

        $r37 = staticinvoke <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters[] $values()>();

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters[] $VALUES> = $r37;

        $r38 = new perfetto.protos.MeminfoCounters$Companion;

        specialinvoke $r38.<perfetto.protos.MeminfoCounters$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters$Companion Companion> = $r38;

        r0 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/MeminfoCounters;");

        r1 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        r2 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNSPECIFIED>;

        $r39 = new perfetto.protos.MeminfoCounters$Companion$ADAPTER$1;

        specialinvoke $r39.<perfetto.protos.MeminfoCounters$Companion$ADAPTER$1: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,perfetto.protos.MeminfoCounters)>(r0, r1, r2);

        $r40 = (com.squareup.wire.ProtoAdapter) $r39;

        <perfetto.protos.MeminfoCounters: com.squareup.wire.ProtoAdapter ADAPTER> = $r40;

        return;
    }

perfetto.protos.MeminfoCounters$Companion$ADAPTER$1
    void <init>(kotlin.reflect.KClass, com.squareup.wire.Syntax, perfetto.protos.MeminfoCounters)
    {
        perfetto.protos.MeminfoCounters$Companion$ADAPTER$1 r0;
        kotlin.reflect.KClass $r1;
        com.squareup.wire.Syntax $r2;
        perfetto.protos.MeminfoCounters $r3;
        com.squareup.wire.WireEnum $r4;

        r0 := @this: perfetto.protos.MeminfoCounters$Companion$ADAPTER$1;

        $r1 := @parameter0: kotlin.reflect.KClass;

        $r2 := @parameter1: com.squareup.wire.Syntax;

        $r3 := @parameter2: perfetto.protos.MeminfoCounters;

        $r4 = (com.squareup.wire.WireEnum) $r3;

        specialinvoke r0.<com.squareup.wire.EnumAdapter: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,com.squareup.wire.WireEnum)>($r1, $r2, $r4);

        return;
    }

    public perfetto.protos.MeminfoCounters fromValue(int)
    {
        perfetto.protos.MeminfoCounters$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.MeminfoCounters$Companion $r1;
        perfetto.protos.MeminfoCounters $r2;

        r0 := @this: perfetto.protos.MeminfoCounters$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters$Companion Companion>;

        $r2 = virtualinvoke $r1.<perfetto.protos.MeminfoCounters$Companion: perfetto.protos.MeminfoCounters fromValue(int)>(i0);

        return $r2;
    }

    public volatile com.squareup.wire.WireEnum fromValue(int)
    {
        perfetto.protos.MeminfoCounters$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.MeminfoCounters $r1;
        com.squareup.wire.WireEnum $r2;

        r0 := @this: perfetto.protos.MeminfoCounters$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<perfetto.protos.MeminfoCounters$Companion$ADAPTER$1: perfetto.protos.MeminfoCounters fromValue(int)>(i0);

        $r2 = (com.squareup.wire.WireEnum) $r1;

        return $r2;
    }

perfetto.protos.MeminfoCounters$Companion
    private void <init>()
    {
        perfetto.protos.MeminfoCounters$Companion r0;

        r0 := @this: perfetto.protos.MeminfoCounters$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final perfetto.protos.MeminfoCounters fromValue(int)
    {
        perfetto.protos.MeminfoCounters$Companion r0;
        int i0;
        perfetto.protos.MeminfoCounters $r1;

        r0 := @this: perfetto.protos.MeminfoCounters$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label16;
            case 16: goto label17;
            case 17: goto label18;
            case 18: goto label19;
            case 19: goto label20;
            case 20: goto label21;
            case 21: goto label22;
            case 22: goto label23;
            case 23: goto label24;
            case 24: goto label25;
            case 25: goto label26;
            case 26: goto label27;
            case 27: goto label28;
            case 28: goto label29;
            case 29: goto label30;
            case 30: goto label31;
            case 31: goto label32;
            case 32: goto label33;
            case 33: goto label34;
            default: goto label35;
        };

     label01:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNSPECIFIED>;

        goto label36;

     label02:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_TOTAL>;

        goto label36;

     label03:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_FREE>;

        goto label36;

     label04:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_AVAILABLE>;

        goto label36;

     label05:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_BUFFERS>;

        goto label36;

     label06:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CACHED>;

        goto label36;

     label07:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_CACHED>;

        goto label36;

     label08:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE>;

        goto label36;

     label09:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE>;

        goto label36;

     label10:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_ANON>;

        goto label36;

     label11:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_ANON>;

        goto label36;

     label12:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_FILE>;

        goto label36;

     label13:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_FILE>;

        goto label36;

     label14:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNEVICTABLE>;

        goto label36;

     label15:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MLOCKED>;

        goto label36;

     label16:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_TOTAL>;

        goto label36;

     label17:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_FREE>;

        goto label36;

     label18:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_DIRTY>;

        goto label36;

     label19:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_WRITEBACK>;

        goto label36;

     label20:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ANON_PAGES>;

        goto label36;

     label21:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MAPPED>;

        goto label36;

     label22:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SHMEM>;

        goto label36;

     label23:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB>;

        goto label36;

     label24:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_RECLAIMABLE>;

        goto label36;

     label25:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SLAB_UNRECLAIMABLE>;

        goto label36;

     label26:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_KERNEL_STACK>;

        goto label36;

     label27:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_PAGE_TABLES>;

        goto label36;

     label28:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMIT_LIMIT>;

        goto label36;

     label29:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_COMMITED_AS>;

        goto label36;

     label30:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_TOTAL>;

        goto label36;

     label31:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_USED>;

        goto label36;

     label32:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_VMALLOC_CHUNK>;

        goto label36;

     label33:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_TOTAL>;

        goto label36;

     label34:
        $r1 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CMA_FREE>;

        goto label36;

     label35:
        $r1 = null;

     label36:
        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.MeminfoCounters$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.MeminfoCounters$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.MeminfoCounters$Companion: void <init>()>();

        return;
    }

