kotlin.text.StringsKt__StringBuilderJVMKt
    public void <init>()
    {
        kotlin.text.StringsKt__StringBuilderJVMKt $r0;

        $r0 := @this: kotlin.text.StringsKt__StringBuilderJVMKt;

        specialinvoke $r0.<kotlin.text.StringsKt__RegexExtensionsKt: void <init>()>();

        return;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, byte)
    {
        java.lang.StringBuilder $r0;
        byte $b0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $b0 := @parameter1: byte;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value.toInt())");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, double)
    {
        java.lang.StringBuilder $r0;
        double $d0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $d0 := @parameter1: double;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, float)
    {
        java.lang.StringBuilder $r0;
        float $f0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder $r0;
        int $i0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, long)
    {
        java.lang.StringBuilder $r0;
        long $l0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, java.lang.StringBuffer)
    {
        java.lang.StringBuilder $r0;
        java.lang.StringBuffer $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.StringBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0, $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.StringBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendLine(java.lang.StringBuilder, short)
    {
        java.lang.StringBuilder $r0;
        short $s0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $s0 := @parameter1: short;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value.toInt())");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(\'\\n\')");

        return $r0;
    }

    private static final java.lang.StringBuilder appendRange(java.lang.StringBuilder, java.lang.CharSequence, int, int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.append(value, startIndex, endIndex)");

        return $r0;
    }

    private static final java.lang.StringBuilder appendRange(java.lang.StringBuilder, char[], int, int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        char[] $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        $i1 = $i1 - $i0;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.append(value, start\u2026x, endIndex - startIndex)");

        return $r0;
    }

    public static final java.lang.Appendable appendln(java.lang.Appendable)
    {
        java.lang.Appendable $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Appendable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.text.SystemProperties: java.lang.String LINE_SEPARATOR>;

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(SystemProperties.LINE_SEPARATOR)");

        return $r0;
    }

    private static final java.lang.Appendable appendln(java.lang.Appendable, char)
    {
        java.lang.Appendable $r0;
        char $c0;

        $r0 := @parameter0: java.lang.Appendable;

        $c0 := @parameter1: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.Appendable appendln(java.lang.Appendable)>($r0);

        return $r0;
    }

    private static final java.lang.Appendable appendln(java.lang.Appendable, java.lang.CharSequence)
    {
        java.lang.Appendable $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: java.lang.Appendable;

        $r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.Appendable appendln(java.lang.Appendable)>($r0);

        return $r0;
    }

    public static final java.lang.StringBuilder appendln(java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.text.SystemProperties: java.lang.String LINE_SEPARATOR>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(SystemProperties.LINE_SEPARATOR)");

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, byte)
    {
        java.lang.StringBuilder $r0;
        byte $b0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $b0 := @parameter1: byte;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value.toInt())");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, char)
    {
        java.lang.StringBuilder $r0;
        char $c0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $c0 := @parameter1: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, double)
    {
        java.lang.StringBuilder $r0;
        double $d0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $d0 := @parameter1: double;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, float)
    {
        java.lang.StringBuilder $r0;
        float $f0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder $r0;
        int $i0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, long)
    {
        java.lang.StringBuilder $r0;
        long $l0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, java.lang.CharSequence)
    {
        java.lang.StringBuilder $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, java.lang.Object)
    {
        java.lang.StringBuilder $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, java.lang.StringBuffer)
    {
        java.lang.StringBuilder $r0;
        java.lang.StringBuffer $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.StringBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0, $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.StringBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, short)
    {
        java.lang.StringBuilder $r0;
        short $s0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $s0 := @parameter1: short;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value.toInt())");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, boolean)
    {
        java.lang.StringBuilder $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder, char[])
    {
        java.lang.StringBuilder $r0;
        char[] $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "append(value)");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>($r0);

        return $r0;
    }

    public static final java.lang.StringBuilder clear(java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0;

        $r0 := @parameter0: java.lang.StringBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        return $r0;
    }

    private static final java.lang.StringBuilder deleteAt(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder $r0;
        int $i0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.deleteCharAt(index)");

        return $r0;
    }

    private static final java.lang.StringBuilder deleteRange(java.lang.StringBuilder, int, int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i1, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.delete(startIndex, endIndex)");

        return $r0;
    }

    private static final java.lang.StringBuilder insertRange(java.lang.StringBuilder, int, java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i2 := @parameter1: int;

        $r0 := @parameter2: java.lang.CharSequence;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "value");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence,int,int)>($i2, $r0, $i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this.insert(index, value, startIndex, endIndex)");

        return $r1;
    }

    private static final java.lang.StringBuilder insertRange(java.lang.StringBuilder, int, char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i1 := @parameter1: int;

        $r0 := @parameter2: char[];

        $i0 := @parameter3: int;

        $i2 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "value");

        $i2 = $i2 - $i0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[],int,int)>($i1, $r0, $i0, $i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this.insert(index, value\u2026x, endIndex - startIndex)");

        return $r1;
    }

    private static final void set(java.lang.StringBuilder, int, char)
    {
        java.lang.StringBuilder $r0;
        int $i0;
        char $c1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        $c1 := @parameter2: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<java.lang.StringBuilder: void setCharAt(int,char)>($i0, $c1);

        return;
    }

    private static final java.lang.StringBuilder setRange(java.lang.StringBuilder, int, int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "value");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i1, $i0, $r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this.replace(startIndex, endIndex, value)");

        return $r1;
    }

    private static final void toCharArray(java.lang.StringBuilder, char[], int, int, int)
    {
        java.lang.StringBuilder $r0;
        char[] $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        virtualinvoke $r0.<java.lang.StringBuilder: void getChars(int,int,char[],int)>($i1, $i2, $r1, $i0);

        return;
    }

    static void toCharArray$default(java.lang.StringBuilder, char[], int, int, int, int, java.lang.Object)
    {
        java.lang.StringBuilder $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: char[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i0 := @parameter4: int;

        $i3 := @parameter5: int;

        $r2 := @parameter6: java.lang.Object;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label1;

        $i1 = 0;

     label1:
        $i4 = $i3 & 4;

        if $i4 == 0 goto label2;

        $i2 = 0;

     label2:
        $i3 = $i3 & 8;

        if $i3 == 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        virtualinvoke $r0.<java.lang.StringBuilder: void getChars(int,int,char[],int)>($i2, $i0, $r1, $i1);

        return;
    }

