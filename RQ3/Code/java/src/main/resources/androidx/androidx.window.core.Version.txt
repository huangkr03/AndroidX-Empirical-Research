androidx.window.core.Version
<androidx.window.core.Version: androidx.window.core.Version$Companion Companion>
<androidx.window.core.Version: int major>
<androidx.window.core.Version: int minor>
<androidx.window.core.Version: int patch>
<androidx.window.core.Version: java.lang.String description>
<androidx.window.core.Version: kotlin.Lazy bigInteger$delegate>
<androidx.window.core.Version: androidx.window.core.Version UNKNOWN>
<androidx.window.core.Version: androidx.window.core.Version VERSION_0_1>
<androidx.window.core.Version: androidx.window.core.Version VERSION_1_0>
<androidx.window.core.Version: androidx.window.core.Version CURRENT>
<androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING>
    private void <init>(int, int, int, java.lang.String)
    {
        androidx.window.core.Version r0;
        int i0, i1, i2;
        java.lang.String r1;
        androidx.window.core.Version$bigInteger$2 $r2;
        kotlin.jvm.functions.Function0 $r3;
        kotlin.Lazy $r4;

        r0 := @this: androidx.window.core.Version;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.core.Version: int major> = i0;

        r0.<androidx.window.core.Version: int minor> = i1;

        r0.<androidx.window.core.Version: int patch> = i2;

        r0.<androidx.window.core.Version: java.lang.String description> = r1;

        $r2 = new androidx.window.core.Version$bigInteger$2;

        specialinvoke $r2.<androidx.window.core.Version$bigInteger$2: void <init>(androidx.window.core.Version)>(r0);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r3);

        r0.<androidx.window.core.Version: kotlin.Lazy bigInteger$delegate> = $r4;

        return;
    }

    public final int getMajor()
    {
        androidx.window.core.Version r0;
        int $i0;

        r0 := @this: androidx.window.core.Version;

        $i0 = r0.<androidx.window.core.Version: int major>;

        return $i0;
    }

    public final int getMinor()
    {
        androidx.window.core.Version r0;
        int $i0;

        r0 := @this: androidx.window.core.Version;

        $i0 = r0.<androidx.window.core.Version: int minor>;

        return $i0;
    }

    public final int getPatch()
    {
        androidx.window.core.Version r0;
        int $i0;

        r0 := @this: androidx.window.core.Version;

        $i0 = r0.<androidx.window.core.Version: int patch>;

        return $i0;
    }

    public final java.lang.String getDescription()
    {
        androidx.window.core.Version r0;
        java.lang.String $r1;

        r0 := @this: androidx.window.core.Version;

        $r1 = r0.<androidx.window.core.Version: java.lang.String description>;

        return $r1;
    }

    private final java.math.BigInteger getBigInteger()
    {
        androidx.window.core.Version r0;
        java.lang.Object r1;
        kotlin.Lazy r2;
        java.math.BigInteger $r3;

        r0 := @this: androidx.window.core.Version;

        r2 = r0.<androidx.window.core.Version: kotlin.Lazy bigInteger$delegate>;

        r1 = interfaceinvoke r2.<kotlin.Lazy: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "<get-bigInteger>(...)");

        $r3 = (java.math.BigInteger) r1;

        return $r3;
    }

    public java.lang.String toString()
    {
        androidx.window.core.Version r0;
        java.lang.String r1, $r2, $r11, $r12, $r13;
        java.lang.CharSequence $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2;

        r0 := @this: androidx.window.core.Version;

        $r2 = r0.<androidx.window.core.Version: java.lang.String description>;

        $r3 = (java.lang.CharSequence) $r2;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r12 = r0.<androidx.window.core.Version: java.lang.String description>;

        $r13 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("-", $r12);

        goto label4;

     label3:
        $r13 = "";

     label4:
        r1 = $r13;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<androidx.window.core.Version: int major>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i1 = r0.<androidx.window.core.Version: int minor>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i2 = r0.<androidx.window.core.Version: int patch>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public int compareTo(androidx.window.core.Version)
    {
        androidx.window.core.Version r0, r1;
        java.math.BigInteger $r2, $r3;
        int $i0;

        r0 := @this: androidx.window.core.Version;

        r1 := @parameter0: androidx.window.core.Version;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = specialinvoke r0.<androidx.window.core.Version: java.math.BigInteger getBigInteger()>();

        $r3 = specialinvoke r1.<androidx.window.core.Version: java.math.BigInteger getBigInteger()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.window.core.Version r0, $r2, $r3, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.window.core.Version;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.window.core.Version;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<androidx.window.core.Version: int major>;

        $r2 = (androidx.window.core.Version) r1;

        $i0 = $r2.<androidx.window.core.Version: int major>;

        if $i1 != $i0 goto label2;

        $i3 = r0.<androidx.window.core.Version: int minor>;

        $r3 = (androidx.window.core.Version) r1;

        $i2 = $r3.<androidx.window.core.Version: int minor>;

        if $i3 != $i2 goto label2;

        $i5 = r0.<androidx.window.core.Version: int patch>;

        $r4 = (androidx.window.core.Version) r1;

        $i4 = $r4.<androidx.window.core.Version: int patch>;

        if $i5 != $i4 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        androidx.window.core.Version r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, i8, i9;
        byte b6;

        r0 := @this: androidx.window.core.Version;

        b6 = 17;

        $i1 = b6 * 31;

        $i0 = r0.<androidx.window.core.Version: int major>;

        i7 = $i1 + $i0;

        $i3 = i7 * 31;

        $i2 = r0.<androidx.window.core.Version: int minor>;

        i8 = $i3 + $i2;

        $i5 = i8 * 31;

        $i4 = r0.<androidx.window.core.Version: int patch>;

        i9 = $i5 + $i4;

        return i9;
    }

    public static final androidx.window.core.Version parse(java.lang.String)
    {
        java.lang.String r0;
        androidx.window.core.Version$Companion $r1;
        androidx.window.core.Version $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.window.core.Version: androidx.window.core.Version$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)>(r0);

        return $r2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.window.core.Version r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.window.core.Version;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.window.core.Version) r1;

        $i0 = virtualinvoke r0.<androidx.window.core.Version: int compareTo(androidx.window.core.Version)>($r2);

        return $i0;
    }

    public static final androidx.window.core.Version access$getUNKNOWN$cp()
    {
        androidx.window.core.Version $r0;

        $r0 = <androidx.window.core.Version: androidx.window.core.Version UNKNOWN>;

        return $r0;
    }

    public static final androidx.window.core.Version access$getVERSION_0_1$cp()
    {
        androidx.window.core.Version $r0;

        $r0 = <androidx.window.core.Version: androidx.window.core.Version VERSION_0_1>;

        return $r0;
    }

    public static final androidx.window.core.Version access$getVERSION_1_0$cp()
    {
        androidx.window.core.Version $r0;

        $r0 = <androidx.window.core.Version: androidx.window.core.Version VERSION_1_0>;

        return $r0;
    }

    public static final androidx.window.core.Version access$getCURRENT$cp()
    {
        androidx.window.core.Version $r0;

        $r0 = <androidx.window.core.Version: androidx.window.core.Version CURRENT>;

        return $r0;
    }

    public void <init>(int, int, int, java.lang.String, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.core.Version r0;
        int i0, i1, i2;
        java.lang.String r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.window.core.Version;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.core.Version: void <init>(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        return;
    }

    static void <clinit>()
    {
        androidx.window.core.Version$Companion $r0;
        androidx.window.core.Version $r1, $r2, $r3, $r4;

        $r0 = new androidx.window.core.Version$Companion;

        specialinvoke $r0.<androidx.window.core.Version$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.window.core.Version: androidx.window.core.Version$Companion Companion> = $r0;

        $r1 = new androidx.window.core.Version;

        specialinvoke $r1.<androidx.window.core.Version: void <init>(int,int,int,java.lang.String)>(0, 0, 0, "");

        <androidx.window.core.Version: androidx.window.core.Version UNKNOWN> = $r1;

        $r2 = new androidx.window.core.Version;

        specialinvoke $r2.<androidx.window.core.Version: void <init>(int,int,int,java.lang.String)>(0, 1, 0, "");

        <androidx.window.core.Version: androidx.window.core.Version VERSION_0_1> = $r2;

        $r3 = new androidx.window.core.Version;

        specialinvoke $r3.<androidx.window.core.Version: void <init>(int,int,int,java.lang.String)>(1, 0, 0, "");

        <androidx.window.core.Version: androidx.window.core.Version VERSION_1_0> = $r3;

        $r4 = <androidx.window.core.Version: androidx.window.core.Version VERSION_1_0>;

        <androidx.window.core.Version: androidx.window.core.Version CURRENT> = $r4;

        return;
    }

androidx.window.core.Version$bigInteger$2
<androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0>
    void <init>(androidx.window.core.Version)
    {
        androidx.window.core.Version$bigInteger$2 r0;
        androidx.window.core.Version $r1;

        r0 := @this: androidx.window.core.Version$bigInteger$2;

        $r1 := @parameter0: androidx.window.core.Version;

        r0.<androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.math.BigInteger invoke()
    {
        androidx.window.core.Version$bigInteger$2 r0;
        androidx.window.core.Version $r1, $r4, $r8;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.math.BigInteger $r2, $r3, $r5, $r6, $r7, $r9, $r10;

        r0 := @this: androidx.window.core.Version$bigInteger$2;

        $r1 = r0.<androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0>;

        $i0 = virtualinvoke $r1.<androidx.window.core.Version: int getMajor()>();

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(32);

        $r4 = r0.<androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0>;

        $i2 = virtualinvoke $r4.<androidx.window.core.Version: int getMinor()>();

        $l3 = (long) $i2;

        $r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r6 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>($r5);

        $r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(32);

        $r8 = r0.<androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0>;

        $i4 = virtualinvoke $r8.<androidx.window.core.Version: int getPatch()>();

        $l5 = (long) $i4;

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        $r10 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>($r9);

        return $r10;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.window.core.Version$bigInteger$2 r0;
        java.math.BigInteger $r1;

        r0 := @this: androidx.window.core.Version$bigInteger$2;

        $r1 = virtualinvoke r0.<androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()>();

        return $r1;
    }

androidx.window.core.Version$Companion
    private void <init>()
    {
        androidx.window.core.Version$Companion r0;

        r0 := @this: androidx.window.core.Version$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.window.core.Version getUNKNOWN()
    {
        androidx.window.core.Version$Companion r0;
        androidx.window.core.Version $r1;

        r0 := @this: androidx.window.core.Version$Companion;

        $r1 = staticinvoke <androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()>();

        return $r1;
    }

    public final androidx.window.core.Version getVERSION_0_1()
    {
        androidx.window.core.Version$Companion r0;
        androidx.window.core.Version $r1;

        r0 := @this: androidx.window.core.Version$Companion;

        $r1 = staticinvoke <androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()>();

        return $r1;
    }

    public final androidx.window.core.Version getVERSION_1_0()
    {
        androidx.window.core.Version$Companion r0;
        androidx.window.core.Version $r1;

        r0 := @this: androidx.window.core.Version$Companion;

        $r1 = staticinvoke <androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()>();

        return $r1;
    }

    public final androidx.window.core.Version getCURRENT()
    {
        androidx.window.core.Version$Companion r0;
        androidx.window.core.Version $r1;

        r0 := @this: androidx.window.core.Version$Companion;

        $r1 = staticinvoke <androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()>();

        return $r1;
    }

    public final androidx.window.core.Version parse(java.lang.String)
    {
        androidx.window.core.Version$Companion r0;
        java.lang.String r1, r3, $r7, r9, r11, $r14, r15;
        java.util.regex.Matcher r2;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.CharSequence $r4, $r6;
        boolean $z0, $z1;
        java.util.regex.Pattern $r5;
        androidx.window.core.Version $r8;
        java.lang.Integer $r10, $r12, $r13;

        r0 := @this: androidx.window.core.Version$Companion;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label01;

        $r4 = (java.lang.CharSequence) r1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label02;

     label01:
        return null;

     label02:
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+)(?:\\.(\\d+))(?:\\.(\\d+))(?:-(.+))?");

        $r6 = (java.lang.CharSequence) r1;

        r2 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);

        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label03;

        return null;

     label03:
        r9 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        if r9 != null goto label04;

        $r10 = null;

        goto label05;

     label04:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label05:
        if $r10 != null goto label06;

        return null;

     label06:
        i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        r11 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        if r11 != null goto label07;

        $r12 = null;

        goto label08;

     label07:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label08:
        if $r12 != null goto label09;

        return null;

     label09:
        i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        if r3 != null goto label10;

        $r13 = null;

        goto label11;

     label10:
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label11:
        if $r13 != null goto label12;

        return null;

     label12:
        i5 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r7 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        if $r7 == null goto label13;

        $r14 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        goto label14;

     label13:
        $r14 = "";

     label14:
        r15 = $r14;

        $r8 = new androidx.window.core.Version;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r15, "description");

        specialinvoke $r8.<androidx.window.core.Version: void <init>(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, i1, i5, r15, null);

        return $r8;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.core.Version$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.core.Version$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.core.Version$Companion: void <init>()>();

        return;
    }

