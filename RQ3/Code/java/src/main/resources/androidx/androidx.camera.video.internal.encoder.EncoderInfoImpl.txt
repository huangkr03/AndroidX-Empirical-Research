androidx.camera.video.internal.encoder.EncoderInfoImpl
<androidx.camera.video.internal.encoder.EncoderInfoImpl: android.media.MediaCodecInfo mMediaCodecInfo>
<androidx.camera.video.internal.encoder.EncoderInfoImpl: android.media.MediaCodecInfo$CodecCapabilities mCodecCapabilities>
    void <init>(android.media.MediaCodecInfo, java.lang.String) throws androidx.camera.video.internal.encoder.InvalidConfigException
    {
        androidx.camera.video.internal.encoder.EncoderInfoImpl r0;
        android.media.MediaCodecInfo r1;
        java.lang.String r2, $r12;
        java.lang.Throwable r3, $r7, r15;
        android.media.MediaCodecInfo$CodecCapabilities $r4, $r6;
        java.lang.Object $r5;
        java.lang.StringBuilder $r10, $r11, r13;
        androidx.camera.video.internal.encoder.InvalidConfigException r14;

        r0 := @this: androidx.camera.video.internal.encoder.EncoderInfoImpl;

        r1 := @parameter0: android.media.MediaCodecInfo;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.video.internal.encoder.EncoderInfoImpl: android.media.MediaCodecInfo mMediaCodecInfo> = r1;

     label1:
        $r4 = virtualinvoke r1.<android.media.MediaCodecInfo: android.media.MediaCodecInfo$CodecCapabilities getCapabilitiesForType(java.lang.String)>(r2);

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = (android.media.MediaCodecInfo$CodecCapabilities) $r5;

        r0.<androidx.camera.video.internal.encoder.EncoderInfoImpl: android.media.MediaCodecInfo$CodecCapabilities mCodecCapabilities> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        r14 = new androidx.camera.video.internal.encoder.InvalidConfigException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get CodecCapabilities for mime: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<androidx.camera.video.internal.encoder.InvalidConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r3);

        r15 = (java.lang.Throwable) r14;

        throw r15;

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        androidx.camera.video.internal.encoder.EncoderInfoImpl r0;
        android.media.MediaCodecInfo $r1;
        java.lang.String $r2;

        r0 := @this: androidx.camera.video.internal.encoder.EncoderInfoImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.EncoderInfoImpl: android.media.MediaCodecInfo mMediaCodecInfo>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodecInfo: java.lang.String getName()>();

        return $r2;
    }

    static android.media.MediaCodecInfo findCodecAndGetCodecInfo(androidx.camera.video.internal.encoder.EncoderConfig) throws androidx.camera.video.internal.encoder.InvalidConfigException
    {
        androidx.camera.video.internal.encoder.EncoderConfig r0;
        android.media.MediaCodec r1;
        android.media.MediaCodecInfo r2;
        androidx.camera.video.internal.workaround.EncoderFinder $r3;
        android.media.MediaFormat $r4;

        r0 := @parameter0: androidx.camera.video.internal.encoder.EncoderConfig;

        $r3 = new androidx.camera.video.internal.workaround.EncoderFinder;

        specialinvoke $r3.<androidx.camera.video.internal.workaround.EncoderFinder: void <init>()>();

        $r4 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.EncoderConfig: android.media.MediaFormat toMediaFormat()>();

        r1 = virtualinvoke $r3.<androidx.camera.video.internal.workaround.EncoderFinder: android.media.MediaCodec findEncoder(android.media.MediaFormat)>($r4);

        r2 = virtualinvoke r1.<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()>();

        virtualinvoke r1.<android.media.MediaCodec: void release()>();

        return r2;
    }

