androidx.benchmark.ThrottleDetector
<androidx.benchmark.ThrottleDetector: androidx.benchmark.ThrottleDetector INSTANCE>
<androidx.benchmark.ThrottleDetector: double initNs>
    private void <init>()
    {
        androidx.benchmark.ThrottleDetector r0;

        r0 := @this: androidx.benchmark.ThrottleDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final void copySomeData()
    {
        androidx.benchmark.ThrottleDetector r0;
        byte[] r1, r2;
        byte b0;
        int i1, i2, $i3, i4;

        r0 := @this: androidx.benchmark.ThrottleDetector;

        r1 = newarray (byte)[400000];

        r2 = newarray (byte)[400000];

        b0 = 10;

        i4 = 0;

     label1:
        if i4 >= b0 goto label2;

        i1 = i4;

        i4 = i4 + 1;

        i2 = i1;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i3);

        goto label1;

     label2:
        return;
    }

    public final double measureWorkNs$benchmark_common_release()
    {
        androidx.benchmark.ThrottleDetector r0;
        androidx.benchmark.BenchmarkState r1, $r3, r6;
        float[] r2, r4, r5;
        int i0, $i1, $i2, i4;
        double $d0;
        long $l3;
        float $f0;
        boolean $z1;

        r0 := @this: androidx.benchmark.ThrottleDetector;

        specialinvoke r0.<androidx.benchmark.ThrottleDetector: void copySomeData()>();

        $r3 = new androidx.benchmark.BenchmarkState;

        specialinvoke $r3.<androidx.benchmark.BenchmarkState: void <init>(boolean)>(1);

        r1 = $r3;

        i4 = 0;

        r4 = newarray (float)[16];

     label1:
        if i4 >= 16 goto label2;

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $f0 = (float) $l3;

        r4[i4] = $f0;

        i4 = i4 + 1;

        goto label1;

     label2:
        r2 = r4;

        r5 = newarray (float)[16];

     label3:
        r6 = r1;

        $i1 = r6.<androidx.benchmark.BenchmarkState: int iterationsRemaining>;

        if $i1 <= 1 goto label4;

        i0 = r6.<androidx.benchmark.BenchmarkState: int iterationsRemaining>;

        $i2 = i0 + -1;

        r6.<androidx.benchmark.BenchmarkState: int iterationsRemaining> = $i2;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = virtualinvoke r6.<androidx.benchmark.BenchmarkState: boolean keepRunningInternal()>();

     label5:
        if $z1 == 0 goto label6;

        staticinvoke <android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>(r5, 0, r2, 0, 1.0F, 2.0F, 3.0F);

        goto label3;

     label6:
        $d0 = virtualinvoke r1.<androidx.benchmark.BenchmarkState: double getMinTimeNanos()>();

        return $d0;
    }

    public final void computeThrottleBaselineIfNeeded()
    {
        androidx.benchmark.ThrottleDetector r0;
        int $i0;
        double $d0, $d1;
        byte $b1;
        androidx.benchmark.CpuInfo $r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.benchmark.IsolationActivity$Companion $r2;
        androidx.benchmark.Errors $r3;

        r0 := @this: androidx.benchmark.ThrottleDetector;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 29 goto label3;

        $d0 = <androidx.benchmark.ThrottleDetector: double initNs>;

        $b1 = $d0 cmpg 0.0;

        if $b1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r1 = <androidx.benchmark.CpuInfo: androidx.benchmark.CpuInfo INSTANCE>;

        $z0 = virtualinvoke $r1.<androidx.benchmark.CpuInfo: boolean getLocked()>();

        if $z0 != 0 goto label3;

        $r2 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        $z1 = virtualinvoke $r2.<androidx.benchmark.IsolationActivity$Companion: boolean getSustainedPerformanceModeInUse$benchmark_common_release()>();

        if $z1 != 0 goto label3;

        $r3 = <androidx.benchmark.Errors: androidx.benchmark.Errors INSTANCE>;

        $z2 = virtualinvoke $r3.<androidx.benchmark.Errors: boolean isEmulator()>();

        if $z2 != 0 goto label3;

        $d1 = virtualinvoke r0.<androidx.benchmark.ThrottleDetector: double measureWorkNs$benchmark_common_release()>();

        <androidx.benchmark.ThrottleDetector: double initNs> = $d1;

     label3:
        return;
    }

    public final void resetThrottleBaseline()
    {
        androidx.benchmark.ThrottleDetector r0;

        r0 := @this: androidx.benchmark.ThrottleDetector;

        <androidx.benchmark.ThrottleDetector: double initNs> = 0.0;

        return;
    }

    public final boolean isDeviceThermalThrottled()
    {
        androidx.benchmark.ThrottleDetector r0;
        double d0, $d1, $d2, $d3;
        int $i0;
        byte $b1, $b2;
        androidx.benchmark.ThrottleDetector$Api29Helper $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.benchmark.ThrottleDetector;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r1 = <androidx.benchmark.ThrottleDetector$Api29Helper: androidx.benchmark.ThrottleDetector$Api29Helper INSTANCE>;

        $z0 = virtualinvoke $r1.<androidx.benchmark.ThrottleDetector$Api29Helper: boolean isDeviceThermalThrottled()>();

        return $z0;

     label1:
        $d1 = <androidx.benchmark.ThrottleDetector: double initNs>;

        $b1 = $d1 cmpg 0.0;

        if $b1 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 == 0 goto label4;

        return 0;

     label4:
        d0 = virtualinvoke r0.<androidx.benchmark.ThrottleDetector: double measureWorkNs$benchmark_common_release()>();

        $d2 = <androidx.benchmark.ThrottleDetector: double initNs>;

        $d3 = $d2 * 1.1;

        $b2 = d0 cmpl $d3;

        if $b2 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    static void <clinit>()
    {
        androidx.benchmark.ThrottleDetector $r0;

        $r0 = new androidx.benchmark.ThrottleDetector;

        specialinvoke $r0.<androidx.benchmark.ThrottleDetector: void <init>()>();

        <androidx.benchmark.ThrottleDetector: androidx.benchmark.ThrottleDetector INSTANCE> = $r0;

        return;
    }

androidx.benchmark.ThrottleDetector$Api29Helper
<androidx.benchmark.ThrottleDetector$Api29Helper: androidx.benchmark.ThrottleDetector$Api29Helper INSTANCE>
    private void <init>()
    {
        androidx.benchmark.ThrottleDetector$Api29Helper r0;

        r0 := @this: androidx.benchmark.ThrottleDetector$Api29Helper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean isDeviceThermalThrottled()
    {
        androidx.benchmark.ThrottleDetector$Api29Helper r0;
        android.app.Instrumentation $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.PowerManager $r4;
        int $i0;
        java.lang.NullPointerException $r5;
        boolean $z0;

        r0 := @this: androidx.benchmark.ThrottleDetector$Api29Helper;

        $r1 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r2 = virtualinvoke $r1.<android.app.Instrumentation: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        if $r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type android.os.PowerManager");

        throw $r5;

     label1:
        $r4 = (android.os.PowerManager) $r3;

        $i0 = virtualinvoke $r4.<android.os.PowerManager: int getCurrentThermalStatus()>();

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static void <clinit>()
    {
        androidx.benchmark.ThrottleDetector$Api29Helper $r0;

        $r0 = new androidx.benchmark.ThrottleDetector$Api29Helper;

        specialinvoke $r0.<androidx.benchmark.ThrottleDetector$Api29Helper: void <init>()>();

        <androidx.benchmark.ThrottleDetector$Api29Helper: androidx.benchmark.ThrottleDetector$Api29Helper INSTANCE> = $r0;

        return;
    }

