androidx.benchmark.simpleperf.RecordOptions
<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mOutputFilename>
<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mEvent>
<androidx.benchmark.simpleperf.RecordOptions: int mFreq>
<androidx.benchmark.simpleperf.RecordOptions: double mDurationInSeconds>
<androidx.benchmark.simpleperf.RecordOptions: java.util.ArrayList mThreads>
<androidx.benchmark.simpleperf.RecordOptions: boolean mDwarfCallGraph>
<androidx.benchmark.simpleperf.RecordOptions: boolean mFpCallGraph>
<androidx.benchmark.simpleperf.RecordOptions: boolean mTraceOffCpu>
    public void <init>()
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mEvent> = "cpu-cycles";

        r0.<androidx.benchmark.simpleperf.RecordOptions: int mFreq> = 4000;

        r0.<androidx.benchmark.simpleperf.RecordOptions: double mDurationInSeconds> = 0.0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.benchmark.simpleperf.RecordOptions: java.util.ArrayList mThreads> = $r1;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mDwarfCallGraph> = 0;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mFpCallGraph> = 0;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mTraceOffCpu> = 0;

        return;
    }

    public androidx.benchmark.simpleperf.RecordOptions setOutputFilename(java.lang.String)
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        java.lang.String r1;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mOutputFilename> = r1;

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions setEvent(java.lang.String)
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        java.lang.String r1;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mEvent> = r1;

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions setSampleFrequency(int)
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        int i0;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        i0 := @parameter0: int;

        r0.<androidx.benchmark.simpleperf.RecordOptions: int mFreq> = i0;

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions setDuration(double)
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        double d0;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        d0 := @parameter0: double;

        r0.<androidx.benchmark.simpleperf.RecordOptions: double mDurationInSeconds> = d0;

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions setSampleThreads(java.util.List)
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.benchmark.simpleperf.RecordOptions: java.util.ArrayList mThreads>;

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions setSampleCurrentThread()
    {
        androidx.benchmark.simpleperf.RecordOptions r0, $r3;
        int $i0;
        java.lang.Integer $r1;
        java.util.List $r2;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        $i0 = staticinvoke <android.system.Os: int gettid()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        $r3 = virtualinvoke r0.<androidx.benchmark.simpleperf.RecordOptions: androidx.benchmark.simpleperf.RecordOptions setSampleThreads(java.util.List)>($r2);

        return $r3;
    }

    public androidx.benchmark.simpleperf.RecordOptions recordDwarfCallGraph()
    {
        androidx.benchmark.simpleperf.RecordOptions r0;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mDwarfCallGraph> = 1;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mFpCallGraph> = 0;

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions recordFramePointerCallGraph()
    {
        androidx.benchmark.simpleperf.RecordOptions r0;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mFpCallGraph> = 1;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mDwarfCallGraph> = 0;

        return r0;
    }

    public androidx.benchmark.simpleperf.RecordOptions traceOffCpu()
    {
        androidx.benchmark.simpleperf.RecordOptions r0;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mTraceOffCpu> = 1;

        return r0;
    }

    public java.util.List toRecordArgs()
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        java.util.ArrayList r1, $r2, $r5, $r6, $r9;
        java.lang.String $r3, $r4, $r12, $r17, $r18, r19, r20;
        int $i0, $i2, $i3, i4;
        double $d0, $d1;
        byte $b1;
        boolean $z6, $z9, $z10, $z19;
        java.lang.StringBuilder $r7, $r8, $r13, $r14, $r15, $r16;
        java.lang.Object $r10;
        java.lang.Integer $r11;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        r19 = r0.<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mOutputFilename>;

        if r19 != null goto label01;

        r19 = specialinvoke r0.<androidx.benchmark.simpleperf.RecordOptions: java.lang.String getDefaultOutputFilename()>();

     label01:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-o");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r19);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-e");

        $r3 = r0.<androidx.benchmark.simpleperf.RecordOptions: java.lang.String mEvent>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-f");

        $i0 = r0.<androidx.benchmark.simpleperf.RecordOptions: int mFreq>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $d0 = r0.<androidx.benchmark.simpleperf.RecordOptions: double mDurationInSeconds>;

        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label02;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("--duration");

        $d1 = r0.<androidx.benchmark.simpleperf.RecordOptions: double mDurationInSeconds>;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label02:
        $r5 = r0.<androidx.benchmark.simpleperf.RecordOptions: java.util.ArrayList mThreads>;

        $z6 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 == 0 goto label03;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-p");

        $i3 = staticinvoke <android.system.Os: int getpid()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        goto label07;

     label03:
        r20 = "";

        i4 = 0;

     label04:
        $r6 = r0.<androidx.benchmark.simpleperf.RecordOptions: java.util.ArrayList mThreads>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i4 >= $i2 goto label06;

        if i4 <= 0 goto label05;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r9 = r0.<androidx.benchmark.simpleperf.RecordOptions: java.util.ArrayList mThreads>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r11 = (java.lang.Integer) $r10;

        $r12 = virtualinvoke $r11.<java.lang.Integer: java.lang.String toString()>();

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        i4 = i4 + 1;

        goto label04;

     label06:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-t");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

     label07:
        $z9 = r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mDwarfCallGraph>;

        if $z9 == 0 goto label08;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-g");

        goto label09;

     label08:
        $z10 = r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mFpCallGraph>;

        if $z10 == 0 goto label09;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("--call-graph");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("fp");

     label09:
        $z19 = r0.<androidx.benchmark.simpleperf.RecordOptions: boolean mTraceOffCpu>;

        if $z19 == 0 goto label10;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("--trace-offcpu");

     label10:
        return r1;
    }

    private java.lang.String getDefaultOutputFilename()
    {
        androidx.benchmark.simpleperf.RecordOptions r0;
        java.time.LocalDateTime r1;
        java.time.format.DateTimeFormatter r2;
        java.time.ZoneId $r3;
        java.lang.String $r4;

        r0 := @this: androidx.benchmark.simpleperf.RecordOptions;

        $r3 = staticinvoke <java.time.ZoneId: java.time.ZoneId systemDefault()>();

        r1 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime now(java.time.ZoneId)>($r3);

        r2 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>("\'perf\'-MM-dd-HH-mm-ss\'.data\'");

        $r4 = virtualinvoke r1.<java.time.LocalDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>(r2);

        return $r4;
    }

