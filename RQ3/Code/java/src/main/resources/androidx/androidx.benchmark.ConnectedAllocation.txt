androidx.benchmark.ConnectedAllocation
<androidx.benchmark.ConnectedAllocation: androidx.benchmark.ConnectedAllocation INSTANCE>
<androidx.benchmark.ConnectedAllocation: boolean requiresSingleMeasurementIteration>
<androidx.benchmark.ConnectedAllocation: boolean requiresDebuggable>
<androidx.benchmark.ConnectedAllocation: boolean requiresLibraryOutputDir>
    private void <init>()
    {
        androidx.benchmark.ConnectedAllocation r0;

        r0 := @this: androidx.benchmark.ConnectedAllocation;

        specialinvoke r0.<androidx.benchmark.Profiler: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        return;
    }

    public androidx.benchmark.Profiler$ResultFile start(java.lang.String)
    {
        androidx.benchmark.ConnectedAllocation r0;
        java.lang.String r1;

        r0 := @this: androidx.benchmark.ConnectedAllocation;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "traceUniqueName");

        staticinvoke <java.lang.Thread: void sleep(long)>(20000L);

        return null;
    }

    public void stop()
    {
        androidx.benchmark.ConnectedAllocation r0;

        r0 := @this: androidx.benchmark.ConnectedAllocation;

        staticinvoke <java.lang.Thread: void sleep(long)>(20000L);

        return;
    }

    public boolean getRequiresSingleMeasurementIteration()
    {
        androidx.benchmark.ConnectedAllocation r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.ConnectedAllocation;

        $z0 = <androidx.benchmark.ConnectedAllocation: boolean requiresSingleMeasurementIteration>;

        return $z0;
    }

    public boolean getRequiresDebuggable()
    {
        androidx.benchmark.ConnectedAllocation r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.ConnectedAllocation;

        $z0 = <androidx.benchmark.ConnectedAllocation: boolean requiresDebuggable>;

        return $z0;
    }

    public boolean getRequiresLibraryOutputDir()
    {
        androidx.benchmark.ConnectedAllocation r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.ConnectedAllocation;

        $z0 = <androidx.benchmark.ConnectedAllocation: boolean requiresLibraryOutputDir>;

        return $z0;
    }

    static void <clinit>()
    {
        androidx.benchmark.ConnectedAllocation $r0;

        $r0 = new androidx.benchmark.ConnectedAllocation;

        specialinvoke $r0.<androidx.benchmark.ConnectedAllocation: void <init>()>();

        <androidx.benchmark.ConnectedAllocation: androidx.benchmark.ConnectedAllocation INSTANCE> = $r0;

        <androidx.benchmark.ConnectedAllocation: boolean requiresSingleMeasurementIteration> = 1;

        <androidx.benchmark.ConnectedAllocation: boolean requiresDebuggable> = 1;

        return;
    }

