androidx.window.embedding.SplitRuleParser
    public void <init>()
    {
        androidx.window.embedding.SplitRuleParser r0;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.Set parseSplitRules$window_release(android.content.Context, int)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1;
        int i0;
        java.util.Set $r2;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)>(r1, i0);

        return $r2;
    }

    private final java.util.Set parseSplitXml(android.content.Context, int)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1;
        int i0, i1, $i2, $i3, $i4, i5;
        android.content.res.Resources r2;
        java.lang.String r3, $r6;
        java.util.HashSet $r4, r12;
        java.util.Set $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r7, $r8;
        java.lang.Throwable $r9;
        android.content.res.XmlResourceParser r10, r11;
        androidx.window.embedding.SplitPairRule r13, r16;
        androidx.window.embedding.SplitPlaceholderRule r14, r17;
        androidx.window.embedding.ActivityRule r15, r19;
        androidx.window.embedding.SplitPairFilter r18;
        androidx.window.embedding.ActivityFilter r20;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

     label01:
        r10 = virtualinvoke r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r10, "resources.getXml(splitResourceId)");

        r11 = r10;

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        return null;

     label04:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r12 = $r4;

        i1 = interfaceinvoke r11.<android.content.res.XmlResourceParser: int getDepth()>();

        i5 = interfaceinvoke r11.<android.content.res.XmlResourceParser: int next()>();

        r13 = null;

        r14 = null;

        r15 = null;

     label05:
        if i5 == 1 goto label23;

        if i5 != 3 goto label06;

        $i4 = interfaceinvoke r11.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i4 <= i1 goto label23;

     label06:
        $i2 = interfaceinvoke r11.<android.content.res.XmlResourceParser: int getEventType()>();

        if $i2 != 2 goto label07;

        $r6 = interfaceinvoke r11.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>("split-config", $r6);

        if $z0 == 0 goto label08;

     label07:
        i5 = interfaceinvoke r11.<android.content.res.XmlResourceParser: int next()>();

        goto label05;

     label08:
        r3 = interfaceinvoke r11.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        if r3 == null goto label22;

        $i3 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case 511422343: goto label12;
            case 520447504: goto label09;
            case 1579230604: goto label13;
            case 1793077963: goto label11;
            case 2050988213: goto label10;
            default: goto label22;
        };

     label09:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SplitPairRule");

        if $z4 != 0 goto label14;

        goto label22;

     label10:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SplitPlaceholderRule");

        if $z1 != 0 goto label15;

        goto label22;

     label11:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("ActivityRule");

        if $z2 != 0 goto label18;

        goto label22;

     label12:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("ActivityFilter");

        if $z5 != 0 goto label19;

        goto label22;

     label13:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SplitPairFilter");

        if $z3 != 0 goto label16;

        goto label22;

     label14:
        r16 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)>(r1, r11);

        r13 = r16;

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r13);

        r14 = null;

        r15 = null;

        goto label22;

     label15:
        r17 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)>(r1, r11);

        r14 = r17;

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

        r15 = null;

        r13 = null;

        goto label22;

     label16:
        if r13 != null goto label17;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Found orphaned SplitPairFilter outside of SplitPairRule");

        throw $r7;

     label17:
        r18 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)>(r1, r11);

        virtualinvoke r12.<java.util.HashSet: boolean remove(java.lang.Object)>(r13);

        r13 = virtualinvoke r13.<androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)>(r18);

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r13);

        goto label22;

     label18:
        r19 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)>(r1, r11);

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r19);

        r13 = null;

        r14 = null;

        r15 = r19;

        goto label22;

     label19:
        if r15 != null goto label20;

        if r14 != null goto label20;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Found orphaned ActivityFilter");

        throw $r8;

     label20:
        r20 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)>(r1, r11);

        if r15 == null goto label21;

        virtualinvoke r12.<java.util.HashSet: boolean remove(java.lang.Object)>(r15);

        r15 = virtualinvoke r15.<androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)>(r20);

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r15);

        goto label22;

     label21:
        if r14 == null goto label22;

        virtualinvoke r12.<java.util.HashSet: boolean remove(java.lang.Object)>(r14);

        r14 = virtualinvoke r14.<androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)>(r20);

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

     label22:
        i5 = interfaceinvoke r11.<android.content.res.XmlResourceParser: int next()>();

        goto label05;

     label23:
        $r5 = (java.util.Set) r12;

        return $r5;

        catch android.content.res.Resources$NotFoundException from label01 to label02 with label03;
    }

    private final androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context, android.content.res.XmlResourceParser)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1;
        android.content.res.XmlResourceParser r2;
        android.content.res.TypedArray r3;
        android.content.res.Resources$Theme $r5;
        int[] $r6;
        android.util.AttributeSet $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        float $f0, $f1, f2, f3;
        androidx.window.embedding.SplitPairRule $r8;
        java.util.Set $r9;
        boolean z1, z2, z3, z4, z5, z6, z7, z8, z9;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        f2 = 0.0F;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r7 = (android.util.AttributeSet) r2;

        $r6 = <androidx.window.R$styleable: int[] SplitPairRule>;

        r3 = virtualinvoke $r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r7, $r6, 0, 0);

        $i0 = <androidx.window.R$styleable: int SplitPairRule_splitRatio>;

        f3 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>($i0, 0.0F);

        $i1 = <androidx.window.R$styleable: int SplitPairRule_splitMinWidth>;

        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        i7 = (int) $f0;

        $i2 = <androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth>;

        $f1 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>($i2, 0.0F);

        i8 = (int) $f1;

        $i3 = <androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection>;

        i9 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i3, 3);

        $i4 = <androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary>;

        z7 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i4, 0);

        $i5 = <androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary>;

        z8 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i5, 1);

        $i6 = <androidx.window.R$styleable: int SplitPairRule_clearTop>;

        z9 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i6, 0);

        $r8 = new androidx.window.embedding.SplitPairRule;

        $r9 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        specialinvoke $r8.<androidx.window.embedding.SplitPairRule: void <init>(java.util.Set,boolean,boolean,boolean,int,int,float,int)>($r9, z7, z8, z9, i7, i8, f3, i9);

        return $r8;
    }

    private final androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context, android.content.res.XmlResourceParser)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1, $r6;
        android.content.res.XmlResourceParser r2;
        android.content.res.Resources$Theme $r3;
        int[] $r4;
        android.util.AttributeSet $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        float $f0, $f1, f2;
        java.lang.CharSequence $r7;
        androidx.window.embedding.SplitPlaceholderRule $r8;
        java.util.Set $r9;
        android.content.Intent $r10, $r16;
        android.content.res.TypedArray r11;
        java.lang.String r13, r14;
        android.content.ComponentName $r15;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r5 = (android.util.AttributeSet) r2;

        $r4 = <androidx.window.R$styleable: int[] SplitPlaceholderRule>;

        r11 = virtualinvoke $r3.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r5, $r4, 0, 0);

        $i0 = <androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName>;

        r13 = virtualinvoke r11.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $i1 = <androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio>;

        f2 = virtualinvoke r11.<android.content.res.TypedArray: float getFloat(int,float)>($i1, 0.0F);

        $i2 = <androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth>;

        $f0 = virtualinvoke r11.<android.content.res.TypedArray: float getDimension(int,float)>($i2, 0.0F);

        i5 = (int) $f0;

        $i3 = <androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth>;

        $f1 = virtualinvoke r11.<android.content.res.TypedArray: float getDimension(int,float)>($i3, 0.0F);

        i6 = (int) $f1;

        $i4 = <androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection>;

        i7 = virtualinvoke r11.<android.content.res.TypedArray: int getInt(int,int)>($i4, 3);

        $r6 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r14 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r14, "packageName");

        $r7 = (java.lang.CharSequence) r13;

        $r15 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)>(r14, $r7);

        $r8 = new androidx.window.embedding.SplitPlaceholderRule;

        $r9 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>()>();

        $r16 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r15);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "Intent().setComponent(pl\u2026eholderActivityClassName)");

        specialinvoke $r8.<androidx.window.embedding.SplitPlaceholderRule: void <init>(java.util.Set,android.content.Intent,int,int,float,int)>($r9, $r16, i5, i6, f2, i7);

        return $r8;
    }

    private final androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context, android.content.res.XmlResourceParser)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1, $r6;
        android.content.res.XmlResourceParser r2;
        android.content.res.Resources$Theme $r3;
        int[] $r4;
        android.util.AttributeSet $r5;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r7, $r8;
        androidx.window.embedding.SplitPairFilter $r9;
        android.content.res.TypedArray r10;
        java.lang.String r12, r13, r14, r15;
        android.content.ComponentName $r16, $r17;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r5 = (android.util.AttributeSet) r2;

        $r4 = <androidx.window.R$styleable: int[] SplitPairFilter>;

        r10 = virtualinvoke $r3.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r5, $r4, 0, 0);

        $i0 = <androidx.window.R$styleable: int SplitPairFilter_primaryActivityName>;

        r12 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $i1 = <androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName>;

        r13 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        $i2 = <androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction>;

        r14 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getString(int)>($i2);

        $r6 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r15 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r15, "packageName");

        $r7 = (java.lang.CharSequence) r12;

        $r16 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)>(r15, $r7);

        $r8 = (java.lang.CharSequence) r13;

        $r17 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)>(r15, $r8);

        $r9 = new androidx.window.embedding.SplitPairFilter;

        specialinvoke $r9.<androidx.window.embedding.SplitPairFilter: void <init>(android.content.ComponentName,android.content.ComponentName,java.lang.String)>($r16, $r17, r14);

        return $r9;
    }

    private final androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context, android.content.res.XmlResourceParser)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1;
        android.content.res.XmlResourceParser r2;
        android.content.res.TypedArray r3;
        android.content.res.Resources$Theme $r4;
        int[] $r5;
        android.util.AttributeSet $r6;
        int $i0;
        androidx.window.embedding.ActivityRule $r7;
        java.util.Set $r8;
        boolean z1, z2;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        z1 = 0;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r6 = (android.util.AttributeSet) r2;

        $r5 = <androidx.window.R$styleable: int[] ActivityRule>;

        r3 = virtualinvoke $r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r6, $r5, 0, 0);

        $i0 = <androidx.window.R$styleable: int ActivityRule_alwaysExpand>;

        z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $r7 = new androidx.window.embedding.ActivityRule;

        $r8 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        specialinvoke $r7.<androidx.window.embedding.ActivityRule: void <init>(java.util.Set,boolean)>($r8, z2);

        return $r7;
    }

    private final androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context, android.content.res.XmlResourceParser)
    {
        androidx.window.embedding.SplitRuleParser r0;
        android.content.Context r1, $r7;
        android.content.res.XmlResourceParser r2;
        android.content.res.Resources$Theme $r4;
        int[] $r5;
        android.util.AttributeSet $r6;
        int $i0, $i1;
        androidx.window.embedding.ActivityFilter $r8;
        java.lang.CharSequence $r9;
        android.content.ComponentName $r10;
        android.content.res.TypedArray r11;
        java.lang.String r12, r13, r14;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r6 = (android.util.AttributeSet) r2;

        $r5 = <androidx.window.R$styleable: int[] ActivityFilter>;

        r11 = virtualinvoke $r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r6, $r5, 0, 0);

        $i0 = <androidx.window.R$styleable: int ActivityFilter_activityName>;

        r12 = virtualinvoke r11.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $i1 = <androidx.window.R$styleable: int ActivityFilter_activityAction>;

        r13 = virtualinvoke r11.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        $r7 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r14 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = new androidx.window.embedding.ActivityFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r14, "packageName");

        $r9 = (java.lang.CharSequence) r12;

        $r10 = specialinvoke r0.<androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)>(r14, $r9);

        specialinvoke $r8.<androidx.window.embedding.ActivityFilter: void <init>(android.content.ComponentName,java.lang.String)>($r10, r13);

        return $r8;
    }

    private final android.content.ComponentName buildClassName(java.lang.String, java.lang.CharSequence)
    {
        androidx.window.embedding.SplitRuleParser r0;
        java.lang.String r1, r3, $r12, $r14, r15, r16, r17, r18, r19, r20;
        java.lang.CharSequence r2, $r5, $r7;
        char c0;
        int i1, $i2, $i3, i5;
        java.lang.IllegalArgumentException $r4;
        boolean $z0, $z1;
        android.content.ComponentName $r6, $r11, $r13;
        java.lang.StringBuilder $r8, r21;
        byte b4;

        r0 := @this: androidx.window.embedding.SplitRuleParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence;

        if r2 == null goto label3;

        $i2 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if $i2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Activity name must not be null");

        throw $r4;

     label4:
        r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        if c0 != 46 goto label5;

        $r13 = new android.content.ComponentName;

        $r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r1, r3);

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r1, $r14);

        return $r13;

     label5:
        r15 = r1;

        r16 = r3;

        $r5 = (java.lang.CharSequence) r3;

        i1 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r5, 47, 0, 0, 6, null);

        if i1 <= 0 goto label6;

        r17 = r3;

        b4 = 0;

        r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int,int)>(b4, i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r18, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        r15 = r18;

        r19 = r3;

        i5 = i1 + 1;

        r20 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int)>(i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r20, "this as java.lang.String).substring(startIndex)");

        r16 = r20;

     label6:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r16, "*");

        if $z0 != 0 goto label7;

        $r7 = (java.lang.CharSequence) r16;

        $i3 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r7, 46, 0, 0, 6, null);

        if $i3 >= 0 goto label7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r15);

        r21 = $r8;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r11 = new android.content.ComponentName;

        $r12 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r15, $r12);

        return $r11;

     label7:
        $r6 = new android.content.ComponentName;

        specialinvoke $r6.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r15, r16);

        return $r6;
    }

