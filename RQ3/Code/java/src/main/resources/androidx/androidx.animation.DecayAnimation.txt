androidx.animation.DecayAnimation
<androidx.animation.DecayAnimation: float target>
<androidx.animation.DecayAnimation: androidx.animation.AnimationVector1D velocityVector>
<androidx.animation.DecayAnimation: long durationMillis>
<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim>
<androidx.animation.DecayAnimation: float startValue>
<androidx.animation.DecayAnimation: float startVelocity>
    public androidx.animation.TwoWayConverter getConverter()
    {
        androidx.animation.DecayAnimation r0;
        androidx.animation.TwoWayConverter $r1;

        r0 := @this: androidx.animation.DecayAnimation;

        $r1 = staticinvoke <androidx.animation.PropKeyKt: androidx.animation.TwoWayConverter getFloatToVectorConverter()>();

        return $r1;
    }

    public java.lang.Float getValue(long)
    {
        androidx.animation.DecayAnimation r0;
        long l0;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r1, $r3;
        androidx.animation.FloatDecayAnimationSpec $r2;

        r0 := @this: androidx.animation.DecayAnimation;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<androidx.animation.DecayAnimation: boolean isFinished(long)>(l0);

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim>;

        $f2 = r0.<androidx.animation.DecayAnimation: float startValue>;

        $f1 = r0.<androidx.animation.DecayAnimation: float startVelocity>;

        $f3 = interfaceinvoke $r2.<androidx.animation.FloatDecayAnimationSpec: float getValue(long,float,float)>(l0, $f2, $f1);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        return $r3;

     label1:
        $f0 = r0.<androidx.animation.DecayAnimation: float target>;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public volatile java.lang.Object getValue(long)
    {
        androidx.animation.DecayAnimation r0;
        long l0;
        java.lang.Float $r1;

        r0 := @this: androidx.animation.DecayAnimation;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<androidx.animation.DecayAnimation: java.lang.Float getValue(long)>(l0);

        return $r1;
    }

    public androidx.animation.AnimationVector1D getVelocityVector(long)
    {
        androidx.animation.DecayAnimation r0;
        long l0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        boolean z0, $z1;
        androidx.animation.AnimationVector1D r1, $r3, $r4, $r6;
        androidx.animation.FloatDecayAnimationSpec $r2, $r5;

        r0 := @this: androidx.animation.DecayAnimation;

        l0 := @parameter0: long;

        $z1 = virtualinvoke r0.<androidx.animation.DecayAnimation: boolean isFinished(long)>(l0);

        if $z1 != 0 goto label1;

        $r6 = r0.<androidx.animation.DecayAnimation: androidx.animation.AnimationVector1D velocityVector>;

        $r5 = r0.<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim>;

        $f6 = r0.<androidx.animation.DecayAnimation: float startValue>;

        $f5 = r0.<androidx.animation.DecayAnimation: float startVelocity>;

        $f7 = interfaceinvoke $r5.<androidx.animation.FloatDecayAnimationSpec: float getVelocity(long,float,float)>(l0, $f6, $f5);

        virtualinvoke $r6.<androidx.animation.AnimationVector1D: void setValue$ui_animation_core_release(float)>($f7);

        goto label2;

     label1:
        $r3 = r0.<androidx.animation.DecayAnimation: androidx.animation.AnimationVector1D velocityVector>;

        $r2 = r0.<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim>;

        $f3 = interfaceinvoke $r2.<androidx.animation.FloatDecayAnimationSpec: float getAbsVelocityThreshold()>();

        f0 = r0.<androidx.animation.DecayAnimation: float startVelocity>;

        f1 = $f3;

        r1 = $r3;

        z0 = 0;

        f2 = staticinvoke <java.lang.Math: float signum(float)>(f0);

        $f4 = f1 * f2;

        virtualinvoke r1.<androidx.animation.AnimationVector1D: void setValue$ui_animation_core_release(float)>($f4);

     label2:
        $r4 = r0.<androidx.animation.DecayAnimation: androidx.animation.AnimationVector1D velocityVector>;

        return $r4;
    }

    public volatile androidx.animation.AnimationVector getVelocityVector(long)
    {
        androidx.animation.DecayAnimation r0;
        long l0;
        androidx.animation.AnimationVector1D $r1;
        androidx.animation.AnimationVector $r2;

        r0 := @this: androidx.animation.DecayAnimation;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<androidx.animation.DecayAnimation: androidx.animation.AnimationVector1D getVelocityVector(long)>(l0);

        $r2 = (androidx.animation.AnimationVector) $r1;

        return $r2;
    }

    public long getDurationMillis()
    {
        androidx.animation.DecayAnimation r0;
        long $l0;

        r0 := @this: androidx.animation.DecayAnimation;

        $l0 = r0.<androidx.animation.DecayAnimation: long durationMillis>;

        return $l0;
    }

    public void <init>(androidx.animation.FloatDecayAnimationSpec, float, float)
    {
        androidx.animation.DecayAnimation r0;
        androidx.animation.FloatDecayAnimationSpec r1, $r2, $r4;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        androidx.animation.AnimationVector1D $r3;
        long $l0;

        r0 := @this: androidx.animation.DecayAnimation;

        r1 := @parameter0: androidx.animation.FloatDecayAnimationSpec;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anim");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim> = r1;

        r0.<androidx.animation.DecayAnimation: float startValue> = f0;

        r0.<androidx.animation.DecayAnimation: float startVelocity> = f1;

        $r2 = r0.<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim>;

        $f3 = r0.<androidx.animation.DecayAnimation: float startValue>;

        $f2 = r0.<androidx.animation.DecayAnimation: float startVelocity>;

        $f4 = interfaceinvoke $r2.<androidx.animation.FloatDecayAnimationSpec: float getTarget(float,float)>($f3, $f2);

        r0.<androidx.animation.DecayAnimation: float target> = $f4;

        $r3 = new androidx.animation.AnimationVector1D;

        specialinvoke $r3.<androidx.animation.AnimationVector1D: void <init>(float)>(0.0F);

        r0.<androidx.animation.DecayAnimation: androidx.animation.AnimationVector1D velocityVector> = $r3;

        $r4 = r0.<androidx.animation.DecayAnimation: androidx.animation.FloatDecayAnimationSpec anim>;

        $f6 = r0.<androidx.animation.DecayAnimation: float startValue>;

        $f5 = r0.<androidx.animation.DecayAnimation: float startVelocity>;

        $l0 = interfaceinvoke $r4.<androidx.animation.FloatDecayAnimationSpec: long getDurationMillis(float,float)>($f6, $f5);

        r0.<androidx.animation.DecayAnimation: long durationMillis> = $l0;

        return;
    }

    public void <init>(androidx.animation.FloatDecayAnimationSpec, float, float, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.DecayAnimation r0;
        androidx.animation.FloatDecayAnimationSpec r1;
        float f0, f1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.animation.DecayAnimation;

        r1 := @parameter0: androidx.animation.FloatDecayAnimationSpec;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        f1 = 0.0F;

     label1:
        specialinvoke r0.<androidx.animation.DecayAnimation: void <init>(androidx.animation.FloatDecayAnimationSpec,float,float)>(r1, f0, f1);

        return;
    }

    public boolean isFinished(long)
    {
        androidx.animation.DecayAnimation r0;
        long l0;
        boolean $z0;

        r0 := @this: androidx.animation.DecayAnimation;

        l0 := @parameter0: long;

        $z0 = staticinvoke <androidx.animation.Animation$DefaultImpls: boolean isFinished(androidx.animation.Animation,long)>(r0, l0);

        return $z0;
    }

