androidx.textclassifier.TextLinks
<androidx.textclassifier.TextLinks: java.lang.String LOG_TAG>
<androidx.textclassifier.TextLinks: java.lang.String EXTRA_FULL_TEXT>
<androidx.textclassifier.TextLinks: java.lang.String EXTRA_LINKS>
<androidx.textclassifier.TextLinks: java.lang.String EXTRA_EXTRAS>
<androidx.textclassifier.TextLinks: java.lang.CharSequence mFullText>
<androidx.textclassifier.TextLinks: java.util.List mLinks>
<androidx.textclassifier.TextLinks: android.os.Bundle mExtras>
<androidx.textclassifier.TextLinks: java.util.concurrent.Executor sWorkerExecutor>
<androidx.textclassifier.TextLinks: androidx.textclassifier.MainThreadExecutor sMainThreadExecutor>
<androidx.textclassifier.TextLinks: int STATUS_UNKNOWN>
<androidx.textclassifier.TextLinks: int STATUS_LINKS_APPLIED>
<androidx.textclassifier.TextLinks: int STATUS_NO_LINKS_FOUND>
<androidx.textclassifier.TextLinks: int STATUS_NO_LINKS_APPLIED>
<androidx.textclassifier.TextLinks: int STATUS_DIFFERENT_TEXT>
<androidx.textclassifier.TextLinks: int APPLY_STRATEGY_IGNORE>
<androidx.textclassifier.TextLinks: int APPLY_STRATEGY_REPLACE>
    void <init>(java.lang.CharSequence, java.util.List, android.os.Bundle)
    {
        androidx.textclassifier.TextLinks r0;
        java.lang.CharSequence r1;
        java.util.List r2, $r4;
        android.os.Bundle r3;

        r0 := @this: androidx.textclassifier.TextLinks;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextLinks: java.lang.CharSequence mFullText> = r1;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        r0.<androidx.textclassifier.TextLinks: java.util.List mLinks> = $r4;

        r0.<androidx.textclassifier.TextLinks: android.os.Bundle mExtras> = r3;

        return;
    }

    public java.lang.CharSequence getText()
    {
        androidx.textclassifier.TextLinks r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.textclassifier.TextLinks;

        $r1 = r0.<androidx.textclassifier.TextLinks: java.lang.CharSequence mFullText>;

        return $r1;
    }

    public java.util.Collection getLinks()
    {
        androidx.textclassifier.TextLinks r0;
        java.util.List $r1;

        r0 := @this: androidx.textclassifier.TextLinks;

        $r1 = r0.<androidx.textclassifier.TextLinks: java.util.List mLinks>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        androidx.textclassifier.TextLinks r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.textclassifier.TextLinks;

        $r1 = r0.<androidx.textclassifier.TextLinks: android.os.Bundle mExtras>;

        $r2 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.textclassifier.TextLinks r0;
        java.lang.Object[] $r1;
        java.lang.CharSequence $r2;
        java.util.List $r3;
        java.util.Locale $r4;
        java.lang.String $r5;

        r0 := @this: androidx.textclassifier.TextLinks;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<androidx.textclassifier.TextLinks: java.lang.CharSequence mFullText>;

        $r1[0] = $r2;

        $r3 = r0.<androidx.textclassifier.TextLinks: java.util.List mLinks>;

        $r1[1] = $r3;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "TextLinks{fullText=%s, links=%s}", $r1);

        return $r5;
    }

    public android.os.Bundle toBundle()
    {
        androidx.textclassifier.TextLinks r0;
        android.os.Bundle r1, $r2, $r6;
        java.lang.CharSequence $r3;
        java.lang.String $r4;
        java.util.List $r5;

        r0 := @this: androidx.textclassifier.TextLinks;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.textclassifier.TextLinks: java.lang.CharSequence mFullText>;

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", $r4);

        $r5 = r0.<androidx.textclassifier.TextLinks: java.util.List mLinks>;

        staticinvoke <androidx.textclassifier.BundleUtils: void putTextLinkList(android.os.Bundle,java.lang.String,java.util.List)>(r1, "links", $r5);

        $r6 = r0.<androidx.textclassifier.TextLinks: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r6);

        return r1;
    }

    public static androidx.textclassifier.TextLinks createFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, r1, $r5;
        androidx.textclassifier.TextLinks $r2;
        java.lang.String $r3;
        java.util.List $r4;

        r0 := @parameter0: android.os.Bundle;

        r1 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        $r2 = new androidx.textclassifier.TextLinks;

        $r3 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("text");

        $r4 = staticinvoke <androidx.textclassifier.BundleUtils: java.util.List getTextLinkListOrThrow(android.os.Bundle,java.lang.String)>(r0, "links");

        if r1 != null goto label1;

        $r5 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r5 = r1;

     label2:
        specialinvoke $r2.<androidx.textclassifier.TextLinks: void <init>(java.lang.CharSequence,java.util.List,android.os.Bundle)>($r3, $r4, $r5);

        return $r2;
    }

    public int apply(android.text.Spannable, androidx.textclassifier.TextClassifier, androidx.textclassifier.TextLinksParams)
    {
        androidx.textclassifier.TextLinks r0;
        android.text.Spannable r1;
        androidx.textclassifier.TextClassifier r2;
        androidx.textclassifier.TextLinksParams r3;
        int $i0;

        r0 := @this: androidx.textclassifier.TextLinks;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: androidx.textclassifier.TextClassifier;

        r3 := @parameter2: androidx.textclassifier.TextLinksParams;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $i0 = virtualinvoke r3.<androidx.textclassifier.TextLinksParams: int apply(android.text.Spannable,androidx.textclassifier.TextLinks,androidx.textclassifier.TextClassifier)>(r1, r0, r2);

        return $i0;
    }

    static androidx.textclassifier.TextLinks fromPlatform(android.view.textclassifier.TextLinks, java.lang.CharSequence)
    {
        android.view.textclassifier.TextLinks r0;
        java.lang.CharSequence r1;
        java.util.Collection r2;
        androidx.textclassifier.TextLinks$Builder r3, $r8;
        java.util.Iterator r4;
        android.view.textclassifier.TextLinks$TextLink r5;
        java.lang.String $r9;
        boolean $z0;
        androidx.textclassifier.TextLinks $r10;
        java.lang.Object $r11;
        int $i0, $i1;
        java.util.Map $r12;

        r0 := @parameter0: android.view.textclassifier.TextLinks;

        r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = virtualinvoke r0.<android.view.textclassifier.TextLinks: java.util.Collection getLinks()>();

        $r8 = new androidx.textclassifier.TextLinks$Builder;

        $r9 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r8.<androidx.textclassifier.TextLinks$Builder: void <init>(java.lang.CharSequence)>($r9);

        r3 = $r8;

        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.view.textclassifier.TextLinks$TextLink) $r11;

        $i0 = virtualinvoke r5.<android.view.textclassifier.TextLinks$TextLink: int getStart()>();

        $i1 = virtualinvoke r5.<android.view.textclassifier.TextLinks$TextLink: int getEnd()>();

        $r12 = staticinvoke <androidx.textclassifier.ConvertUtils: java.util.Map createFloatMapFromTextLinks(android.view.textclassifier.TextLinks$TextLink)>(r5);

        virtualinvoke r3.<androidx.textclassifier.TextLinks$Builder: androidx.textclassifier.TextLinks$Builder addLink(int,int,java.util.Map)>($i0, $i1, $r12);

        goto label1;

     label2:
        $r10 = virtualinvoke r3.<androidx.textclassifier.TextLinks$Builder: androidx.textclassifier.TextLinks build()>();

        return $r10;
    }

    android.view.textclassifier.TextLinks toPlatform()
    {
        androidx.textclassifier.TextLinks r0;
        android.view.textclassifier.TextLinks$Builder r1, $r4;
        java.util.Iterator r2;
        androidx.textclassifier.TextLinks$TextLink r3;
        java.lang.CharSequence $r5;
        java.lang.String $r6;
        java.util.Collection $r7;
        boolean $z0;
        android.view.textclassifier.TextLinks $r8;
        java.lang.Object $r9;
        int $i0, $i1;
        androidx.textclassifier.EntityConfidence $r10;
        java.util.Map $r11;

        r0 := @this: androidx.textclassifier.TextLinks;

        $r4 = new android.view.textclassifier.TextLinks$Builder;

        $r5 = virtualinvoke r0.<androidx.textclassifier.TextLinks: java.lang.CharSequence getText()>();

        $r6 = (java.lang.String) $r5;

        specialinvoke $r4.<android.view.textclassifier.TextLinks$Builder: void <init>(java.lang.String)>($r6);

        r1 = $r4;

        $r7 = virtualinvoke r0.<androidx.textclassifier.TextLinks: java.util.Collection getLinks()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.textclassifier.TextLinks$TextLink) $r9;

        $i0 = virtualinvoke r3.<androidx.textclassifier.TextLinks$TextLink: int getStart()>();

        $i1 = virtualinvoke r3.<androidx.textclassifier.TextLinks$TextLink: int getEnd()>();

        $r10 = virtualinvoke r3.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence getEntityScores()>();

        $r11 = virtualinvoke $r10.<androidx.textclassifier.EntityConfidence: java.util.Map getConfidenceMap()>();

        virtualinvoke r1.<android.view.textclassifier.TextLinks$Builder: android.view.textclassifier.TextLinks$Builder addLink(int,int,java.util.Map)>($i0, $i1, $r11);

        goto label1;

     label2:
        $r8 = virtualinvoke r1.<android.view.textclassifier.TextLinks$Builder: android.view.textclassifier.TextLinks build()>();

        return $r8;
    }

    static void <clinit>()
    {
        java.util.concurrent.ExecutorService $r0;
        androidx.textclassifier.MainThreadExecutor r2;
        java.util.concurrent.Executor r3;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1);

        r3 = (java.util.concurrent.Executor) $r0;

        <androidx.textclassifier.TextLinks: java.util.concurrent.Executor sWorkerExecutor> = r3;

        r2 = new androidx.textclassifier.MainThreadExecutor;

        specialinvoke r2.<androidx.textclassifier.MainThreadExecutor: void <init>()>();

        <androidx.textclassifier.TextLinks: androidx.textclassifier.MainThreadExecutor sMainThreadExecutor> = r2;

        return;
    }

androidx.textclassifier.TextLinks$1
androidx.textclassifier.TextLinks$ApplyStrategy
androidx.textclassifier.TextLinks$Builder
<androidx.textclassifier.TextLinks$Builder: java.lang.CharSequence mFullText>
<androidx.textclassifier.TextLinks$Builder: java.util.ArrayList mLinks>
<androidx.textclassifier.TextLinks$Builder: android.os.Bundle mExtras>
    public void <init>(java.lang.CharSequence)
    {
        androidx.textclassifier.TextLinks$Builder r0;
        java.lang.CharSequence r1, $r3;
        java.lang.Object $r2;
        java.util.ArrayList $r4;

        r0 := @this: androidx.textclassifier.TextLinks$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.CharSequence) $r2;

        r0.<androidx.textclassifier.TextLinks$Builder: java.lang.CharSequence mFullText> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.textclassifier.TextLinks$Builder: java.util.ArrayList mLinks> = $r4;

        return;
    }

    public androidx.textclassifier.TextLinks$Builder addLink(int, int, java.util.Map)
    {
        androidx.textclassifier.TextLinks$Builder r0;
        int i0, i1;
        java.util.Map r1, $r5;
        androidx.textclassifier.TextLinks$TextLink $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.textclassifier.TextLinks$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.Map;

        $r3 = r0.<androidx.textclassifier.TextLinks$Builder: java.util.ArrayList mLinks>;

        $r2 = new androidx.textclassifier.TextLinks$TextLink;

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (java.util.Map) $r4;

        specialinvoke $r2.<androidx.textclassifier.TextLinks$TextLink: void <init>(int,int,java.util.Map)>(i0, i1, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    androidx.textclassifier.TextLinks$Builder addLink(androidx.textclassifier.TextLinks$TextLink)
    {
        androidx.textclassifier.TextLinks$Builder r0;
        androidx.textclassifier.TextLinks$TextLink r1, $r4;
        java.util.ArrayList $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.textclassifier.TextLinks$Builder;

        r1 := @parameter0: androidx.textclassifier.TextLinks$TextLink;

        $r2 = r0.<androidx.textclassifier.TextLinks$Builder: java.util.ArrayList mLinks>;

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.textclassifier.TextLinks$TextLink) $r3;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return r0;
    }

    public androidx.textclassifier.TextLinks$Builder setExtras(android.os.Bundle)
    {
        androidx.textclassifier.TextLinks$Builder r0;
        android.os.Bundle r1;

        r0 := @this: androidx.textclassifier.TextLinks$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<androidx.textclassifier.TextLinks$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinks$Builder clearTextLinks()
    {
        androidx.textclassifier.TextLinks$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.textclassifier.TextLinks$Builder;

        $r1 = r0.<androidx.textclassifier.TextLinks$Builder: java.util.ArrayList mLinks>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return r0;
    }

    public androidx.textclassifier.TextLinks build()
    {
        androidx.textclassifier.TextLinks$Builder r0;
        androidx.textclassifier.TextLinks $r1;
        android.os.Bundle $r2, $r3, $r6;
        java.lang.CharSequence $r4;
        java.util.ArrayList $r5;

        r0 := @this: androidx.textclassifier.TextLinks$Builder;

        $r1 = new androidx.textclassifier.TextLinks;

        $r4 = r0.<androidx.textclassifier.TextLinks$Builder: java.lang.CharSequence mFullText>;

        $r5 = r0.<androidx.textclassifier.TextLinks$Builder: java.util.ArrayList mLinks>;

        $r2 = r0.<androidx.textclassifier.TextLinks$Builder: android.os.Bundle mExtras>;

        if $r2 != null goto label1;

        $r6 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r3 = r0.<androidx.textclassifier.TextLinks$Builder: android.os.Bundle mExtras>;

        $r6 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r3);

     label2:
        specialinvoke $r1.<androidx.textclassifier.TextLinks: void <init>(java.lang.CharSequence,java.util.List,android.os.Bundle)>($r4, $r5, $r6);

        return $r1;
    }

androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1
<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextClassification val$textClassification>
<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable this$0>
    void <init>(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable, androidx.textclassifier.TextClassification)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1 r0;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r1;
        androidx.textclassifier.TextClassification r2;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1;

        r1 := @parameter0: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        r2 := @parameter1: androidx.textclassifier.TextClassification;

        r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable this$0> = r1;

        r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextClassification val$textClassification> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1 r0;
        android.widget.TextView r1;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable $r2, $r6, $r8;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        java.lang.CharSequence $r5;
        android.text.Spanned $r7;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan $r9;
        androidx.textclassifier.TextClassification $r10;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1;

        $r2 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable this$0>;

        $r3 = staticinvoke <androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: java.lang.ref.WeakReference access$100(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.widget.TextView) $r4;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r6 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable this$0>;

        $r7 = staticinvoke <androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: android.text.Spanned access$200(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable)>($r6);

        if $r5 == $r7 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextLinks", "Text has changed from the classified text. Ignoring.");

        return;

     label2:
        $r8 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable this$0>;

        $r9 = staticinvoke <androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextLinks$DefaultTextLinkSpan access$300(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable)>($r8);

        $r10 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: androidx.textclassifier.TextClassification val$textClassification>;

        virtualinvoke $r9.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan: void onTextClassificationResult(android.widget.TextView,androidx.textclassifier.TextClassification)>(r1, $r10);

        return;
    }

androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable
<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: java.lang.ref.WeakReference mTextView>
<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextLinks$DefaultTextLinkSpan mTextLinkSpan>
<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextClassification$Request mRequest>
<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: android.text.Spanned mClassifiedSpan>
    private void <init>(android.widget.TextView, androidx.textclassifier.TextLinks$DefaultTextLinkSpan, androidx.textclassifier.TextClassification$Request, android.text.Spanned)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r0;
        android.widget.TextView r1;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan r2;
        androidx.textclassifier.TextClassification$Request r3;
        android.text.Spanned r4;
        java.lang.ref.WeakReference $r5;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        r3 := @parameter2: androidx.textclassifier.TextClassification$Request;

        r4 := @parameter3: android.text.Spanned;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: java.lang.ref.WeakReference mTextView> = $r5;

        r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextLinks$DefaultTextLinkSpan mTextLinkSpan> = r2;

        r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextClassification$Request mRequest> = r3;

        r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: android.text.Spanned mClassifiedSpan> = r4;

        return;
    }

    public void run()
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r0;
        androidx.textclassifier.TextClassifier r1;
        androidx.textclassifier.TextClassification r2;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan $r3;
        androidx.textclassifier.TextLinks$TextLinkSpanData $r4;
        androidx.textclassifier.TextClassification$Request $r5;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1 $r6;
        androidx.textclassifier.MainThreadExecutor $r7;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        $r3 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextLinks$DefaultTextLinkSpan mTextLinkSpan>;

        $r4 = virtualinvoke $r3.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan: androidx.textclassifier.TextLinks$TextLinkSpanData getTextLinkSpanData()>();

        r1 = virtualinvoke $r4.<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextClassifier getTextClassifier()>();

        $r5 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextClassification$Request mRequest>;

        r2 = virtualinvoke r1.<androidx.textclassifier.TextClassifier: androidx.textclassifier.TextClassification classifyText(androidx.textclassifier.TextClassification$Request)>($r5);

        $r7 = <androidx.textclassifier.TextLinks: androidx.textclassifier.MainThreadExecutor sMainThreadExecutor>;

        $r6 = new androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1;

        specialinvoke $r6.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable$1: void <init>(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable,androidx.textclassifier.TextClassification)>(r0, r2);

        virtualinvoke $r7.<androidx.textclassifier.MainThreadExecutor: void execute(java.lang.Runnable)>($r6);

        return;
    }

    void <init>(android.widget.TextView, androidx.textclassifier.TextLinks$DefaultTextLinkSpan, androidx.textclassifier.TextClassification$Request, android.text.Spanned, androidx.textclassifier.TextLinks$1)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r0;
        android.widget.TextView r1;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan r2;
        androidx.textclassifier.TextClassification$Request r3;
        android.text.Spanned r4;
        androidx.textclassifier.TextLinks$1 r5;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        r3 := @parameter2: androidx.textclassifier.TextClassification$Request;

        r4 := @parameter3: android.text.Spanned;

        r5 := @parameter4: androidx.textclassifier.TextLinks$1;

        specialinvoke r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: void <init>(android.widget.TextView,androidx.textclassifier.TextLinks$DefaultTextLinkSpan,androidx.textclassifier.TextClassification$Request,android.text.Spanned)>(r1, r2, r3, r4);

        return;
    }

    static java.lang.ref.WeakReference access$100(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r0;
        java.lang.ref.WeakReference $r1;

        r0 := @parameter0: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        $r1 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: java.lang.ref.WeakReference mTextView>;

        return $r1;
    }

    static android.text.Spanned access$200(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r0;
        android.text.Spanned $r1;

        r0 := @parameter0: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        $r1 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: android.text.Spanned mClassifiedSpan>;

        return $r1;
    }

    static androidx.textclassifier.TextLinks$DefaultTextLinkSpan access$300(androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable r0;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan $r1;

        r0 := @parameter0: androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        $r1 = r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: androidx.textclassifier.TextLinks$DefaultTextLinkSpan mTextLinkSpan>;

        return $r1;
    }

androidx.textclassifier.TextLinks$DefaultTextLinkSpan
    public void <init>(androidx.textclassifier.TextLinks$TextLinkSpanData)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan r0;
        androidx.textclassifier.TextLinks$TextLinkSpanData r1;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        r1 := @parameter0: androidx.textclassifier.TextLinks$TextLinkSpanData;

        specialinvoke r0.<androidx.textclassifier.TextLinks$TextLinkSpan: void <init>(androidx.textclassifier.TextLinks$TextLinkSpanData)>(r1);

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan r0;
        android.view.View r1;
        android.widget.TextView r2;
        java.lang.CharSequence r3;
        android.text.Spanned r4;
        int i0, i1, $i3;
        androidx.textclassifier.TextClassification$Request r5;
        boolean $z0, $z1;
        androidx.textclassifier.TextClassification$Request$Builder $r6, $r9, $r11;
        androidx.textclassifier.TextLinks$TextLinkSpanData $r7;
        java.lang.Long $r8;
        androidx.core.os.LocaleListCompat $r10;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable $r12;
        java.util.concurrent.Executor $r13;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof android.widget.TextView;

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = (android.widget.TextView) r1;

        r3 = virtualinvoke r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z1 = r3 instanceof android.text.Spanned;

        if $z1 != 0 goto label2;

        return;

     label2:
        r4 = (android.text.Spanned) r3;

        i0 = interfaceinvoke r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r0);

        i1 = interfaceinvoke r4.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r0);

        if i0 < 0 goto label3;

        if i0 >= i1 goto label3;

        $i3 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        if i1 <= $i3 goto label4;

     label3:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextLinks", "Cannot show link toolbar. Invalid text indices");

        return;

     label4:
        $r6 = new androidx.textclassifier.TextClassification$Request$Builder;

        specialinvoke $r6.<androidx.textclassifier.TextClassification$Request$Builder: void <init>(java.lang.CharSequence,int,int)>(r3, i0, i1);

        $r7 = virtualinvoke r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan: androidx.textclassifier.TextLinks$TextLinkSpanData getTextLinkSpanData()>();

        $r8 = virtualinvoke $r7.<androidx.textclassifier.TextLinks$TextLinkSpanData: java.lang.Long getReferenceTime()>();

        $r9 = virtualinvoke $r6.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setReferenceTime(java.lang.Long)>($r8);

        $r10 = specialinvoke r0.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan: androidx.core.os.LocaleListCompat getLocales(android.widget.TextView)>(r2);

        $r11 = virtualinvoke $r9.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)>($r10);

        r5 = virtualinvoke $r11.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request build()>();

        $r13 = <androidx.textclassifier.TextLinks: java.util.concurrent.Executor sWorkerExecutor>;

        $r12 = new androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable;

        specialinvoke $r12.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan$ClassifyTextRunnable: void <init>(android.widget.TextView,androidx.textclassifier.TextLinks$DefaultTextLinkSpan,androidx.textclassifier.TextClassification$Request,android.text.Spanned,androidx.textclassifier.TextLinks$1)>(r2, r0, r5, r4, null);

        interfaceinvoke $r13.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r12);

        return;
    }

    public void onTextClassificationResult(android.widget.TextView, androidx.textclassifier.TextClassification)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan r0;
        android.widget.TextView r1;
        androidx.textclassifier.TextClassification r2;
        java.util.List r3;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.Object $r4;
        androidx.core.app.RemoteActionCompat $r5;
        android.app.PendingIntent $r6;
        java.lang.CharSequence $r7;
        androidx.textclassifier.widget.ToolbarController $r8;
        java.lang.Throwable $r9, r11;
        android.text.SpannableString r10;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: androidx.textclassifier.TextClassification;

        r3 = virtualinvoke r2.<androidx.textclassifier.TextClassification: java.util.List getActions()>();

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 23 goto label1;

        $r7 = virtualinvoke r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        r10 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($r7);

        i0 = interfaceinvoke r10.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r0);

        i1 = interfaceinvoke r10.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r0);

        $r8 = staticinvoke <androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController getInstance(android.widget.TextView)>(r1);

        virtualinvoke $r8.<androidx.textclassifier.widget.ToolbarController: void show(java.util.List,int,int)>(r3, i0, i1);

        return;

     label1:
        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

     label2:
        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (androidx.core.app.RemoteActionCompat) $r4;

        $r6 = virtualinvoke $r5.<androidx.core.app.RemoteActionCompat: android.app.PendingIntent getActionIntent()>();

        virtualinvoke $r6.<android.app.PendingIntent: void send()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r11 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextLinks", "Error handling TextLinkSpan click", r11);

     label5:
        return;

     label6:
        return;

        catch android.app.PendingIntent$CanceledException from label2 to label3 with label4;
    }

    private androidx.core.os.LocaleListCompat getLocales(android.widget.TextView)
    {
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan r0;
        android.widget.TextView r1;
        int $i0, $i1;
        java.util.Locale[] $r2, $r5;
        java.util.Locale $r3, $r6;
        androidx.core.os.LocaleListCompat $r4, $r7, $r9;
        android.os.LocaleList $r8;

        r0 := @this: androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        r1 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r8 = virtualinvoke r1.<android.widget.TextView: android.os.LocaleList getTextLocales()>();

        $r9 = staticinvoke <androidx.textclassifier.ConvertUtils: androidx.core.os.LocaleListCompat wrapLocalList(android.os.LocaleList)>($r8);

        return $r9;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label2;

        $r5 = newarray (java.util.Locale)[1];

        $r6 = virtualinvoke r1.<android.widget.TextView: java.util.Locale getTextLocale()>();

        $r5[0] = $r6;

        $r7 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>($r5);

        return $r7;

     label2:
        $r2 = newarray (java.util.Locale)[1];

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>($r2);

        return $r4;
    }

androidx.textclassifier.TextLinks$Request$Builder
<androidx.textclassifier.TextLinks$Request$Builder: java.lang.CharSequence mText>
<androidx.textclassifier.TextLinks$Request$Builder: androidx.core.os.LocaleListCompat mDefaultLocales>
<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>
<androidx.textclassifier.TextLinks$Request$Builder: java.lang.Long mReferenceTime>
<androidx.textclassifier.TextLinks$Request$Builder: android.os.Bundle mExtras>
    public void <init>(java.lang.CharSequence)
    {
        androidx.textclassifier.TextLinks$Request$Builder r0;
        java.lang.CharSequence r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.textclassifier.TextLinks$Request$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextLinks$Request$Builder: java.lang.Long mReferenceTime> = null;

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.CharSequence) $r2;

        r0.<androidx.textclassifier.TextLinks$Request$Builder: java.lang.CharSequence mText> = $r3;

        return;
    }

    public androidx.textclassifier.TextLinks$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)
    {
        androidx.textclassifier.TextLinks$Request$Builder r0;
        androidx.core.os.LocaleListCompat r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request$Builder;

        r1 := @parameter0: androidx.core.os.LocaleListCompat;

        r0.<androidx.textclassifier.TextLinks$Request$Builder: androidx.core.os.LocaleListCompat mDefaultLocales> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinks$Request$Builder setEntityConfig(androidx.textclassifier.TextClassifier$EntityConfig)
    {
        androidx.textclassifier.TextLinks$Request$Builder r0;
        androidx.textclassifier.TextClassifier$EntityConfig r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request$Builder;

        r1 := @parameter0: androidx.textclassifier.TextClassifier$EntityConfig;

        r0.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinks$Request$Builder setReferenceTime(java.lang.Long)
    {
        androidx.textclassifier.TextLinks$Request$Builder r0;
        java.lang.Long r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request$Builder;

        r1 := @parameter0: java.lang.Long;

        r0.<androidx.textclassifier.TextLinks$Request$Builder: java.lang.Long mReferenceTime> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinks$Request$Builder setExtras(android.os.Bundle)
    {
        androidx.textclassifier.TextLinks$Request$Builder r0;
        android.os.Bundle r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<androidx.textclassifier.TextLinks$Request$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinks$Request build()
    {
        androidx.textclassifier.TextLinks$Request$Builder r0;
        androidx.textclassifier.TextLinks$Request $r1;
        android.os.Bundle $r2, $r7;
        java.lang.Long $r3;
        androidx.textclassifier.TextClassifier$EntityConfig $r4;
        androidx.core.os.LocaleListCompat $r5;
        java.lang.CharSequence $r6;

        r0 := @this: androidx.textclassifier.TextLinks$Request$Builder;

        $r1 = new androidx.textclassifier.TextLinks$Request;

        $r6 = r0.<androidx.textclassifier.TextLinks$Request$Builder: java.lang.CharSequence mText>;

        $r5 = r0.<androidx.textclassifier.TextLinks$Request$Builder: androidx.core.os.LocaleListCompat mDefaultLocales>;

        $r4 = r0.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>;

        $r3 = r0.<androidx.textclassifier.TextLinks$Request$Builder: java.lang.Long mReferenceTime>;

        $r2 = r0.<androidx.textclassifier.TextLinks$Request$Builder: android.os.Bundle mExtras>;

        if $r2 != null goto label1;

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r7 = r0.<androidx.textclassifier.TextLinks$Request$Builder: android.os.Bundle mExtras>;

     label2:
        specialinvoke $r1.<androidx.textclassifier.TextLinks$Request: void <init>(java.lang.CharSequence,androidx.core.os.LocaleListCompat,androidx.textclassifier.TextClassifier$EntityConfig,java.lang.Long,android.os.Bundle)>($r6, $r5, $r4, $r3, $r7);

        return $r1;
    }

androidx.textclassifier.TextLinks$Request
<androidx.textclassifier.TextLinks$Request: java.lang.String EXTRA_TEXT>
<androidx.textclassifier.TextLinks$Request: java.lang.String EXTRA_DEFAULT_LOCALES>
<androidx.textclassifier.TextLinks$Request: java.lang.String EXTRA_ENTITY_CONFIG>
<androidx.textclassifier.TextLinks$Request: java.lang.String EXTRA_REFERENCE_TIME>
<androidx.textclassifier.TextLinks$Request: java.lang.CharSequence mText>
<androidx.textclassifier.TextLinks$Request: androidx.core.os.LocaleListCompat mDefaultLocales>
<androidx.textclassifier.TextLinks$Request: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>
<androidx.textclassifier.TextLinks$Request: java.lang.Long mReferenceTime>
<androidx.textclassifier.TextLinks$Request: android.os.Bundle mExtras>
    void <init>(java.lang.CharSequence, androidx.core.os.LocaleListCompat, androidx.textclassifier.TextClassifier$EntityConfig, java.lang.Long, android.os.Bundle)
    {
        androidx.textclassifier.TextLinks$Request r0;
        java.lang.CharSequence r1;
        androidx.core.os.LocaleListCompat r2;
        androidx.textclassifier.TextClassifier$EntityConfig r3, $r9;
        java.lang.Long r4;
        android.os.Bundle r5;
        android.text.SpannedString $r6;
        androidx.textclassifier.TextClassifier$EntityConfig$Builder $r7;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: androidx.core.os.LocaleListCompat;

        r3 := @parameter2: androidx.textclassifier.TextClassifier$EntityConfig;

        r4 := @parameter3: java.lang.Long;

        r5 := @parameter4: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextLinks$Request: java.lang.Long mReferenceTime> = null;

        $r6 = staticinvoke <android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>(r1);

        r0.<androidx.textclassifier.TextLinks$Request: java.lang.CharSequence mText> = $r6;

        r0.<androidx.textclassifier.TextLinks$Request: androidx.core.os.LocaleListCompat mDefaultLocales> = r2;

        if r3 != null goto label1;

        $r7 = new androidx.textclassifier.TextClassifier$EntityConfig$Builder;

        specialinvoke $r7.<androidx.textclassifier.TextClassifier$EntityConfig$Builder: void <init>()>();

        $r9 = virtualinvoke $r7.<androidx.textclassifier.TextClassifier$EntityConfig$Builder: androidx.textclassifier.TextClassifier$EntityConfig build()>();

        goto label2;

     label1:
        $r9 = r3;

     label2:
        r0.<androidx.textclassifier.TextLinks$Request: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig> = $r9;

        r0.<androidx.textclassifier.TextLinks$Request: java.lang.Long mReferenceTime> = r4;

        r0.<androidx.textclassifier.TextLinks$Request: android.os.Bundle mExtras> = r5;

        return;
    }

    public java.lang.CharSequence getText()
    {
        androidx.textclassifier.TextLinks$Request r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r1 = r0.<androidx.textclassifier.TextLinks$Request: java.lang.CharSequence mText>;

        return $r1;
    }

    public androidx.core.os.LocaleListCompat getDefaultLocales()
    {
        androidx.textclassifier.TextLinks$Request r0;
        androidx.core.os.LocaleListCompat $r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r1 = r0.<androidx.textclassifier.TextLinks$Request: androidx.core.os.LocaleListCompat mDefaultLocales>;

        return $r1;
    }

    public androidx.textclassifier.TextClassifier$EntityConfig getEntityConfig()
    {
        androidx.textclassifier.TextLinks$Request r0;
        androidx.textclassifier.TextClassifier$EntityConfig $r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r1 = r0.<androidx.textclassifier.TextLinks$Request: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>;

        return $r1;
    }

    public java.lang.Long getReferenceTime()
    {
        androidx.textclassifier.TextLinks$Request r0;
        java.lang.Long $r1;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r1 = r0.<androidx.textclassifier.TextLinks$Request: java.lang.Long mReferenceTime>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        androidx.textclassifier.TextLinks$Request r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r1 = r0.<androidx.textclassifier.TextLinks$Request: android.os.Bundle mExtras>;

        $r2 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r1);

        return $r2;
    }

    public android.os.Bundle toBundle()
    {
        androidx.textclassifier.TextLinks$Request r0;
        android.os.Bundle r1, $r2, $r5, $r8;
        java.lang.CharSequence $r3;
        androidx.textclassifier.TextClassifier$EntityConfig $r4;
        androidx.core.os.LocaleListCompat $r6;
        java.lang.Long $r7;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.textclassifier.TextLinks$Request: java.lang.CharSequence mText>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("text", $r3);

        $r4 = r0.<androidx.textclassifier.TextLinks$Request: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>;

        $r5 = virtualinvoke $r4.<androidx.textclassifier.TextClassifier$EntityConfig: android.os.Bundle toBundle()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("entity_config", $r5);

        $r6 = r0.<androidx.textclassifier.TextLinks$Request: androidx.core.os.LocaleListCompat mDefaultLocales>;

        staticinvoke <androidx.textclassifier.BundleUtils: void putLocaleList(android.os.Bundle,java.lang.String,androidx.core.os.LocaleListCompat)>(r1, "locales", $r6);

        $r7 = r0.<androidx.textclassifier.TextLinks$Request: java.lang.Long mReferenceTime>;

        staticinvoke <androidx.textclassifier.BundleUtils: void putLong(android.os.Bundle,java.lang.String,java.lang.Long)>(r1, "reference_time", $r7);

        $r8 = r0.<androidx.textclassifier.TextLinks$Request: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r8);

        return r1;
    }

    public static androidx.textclassifier.TextLinks$Request createFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r5, $r10;
        androidx.textclassifier.TextLinks$Request$Builder $r1, $r4, $r7, $r9, $r11;
        java.lang.CharSequence $r2;
        androidx.core.os.LocaleListCompat $r3;
        androidx.textclassifier.TextClassifier$EntityConfig $r6;
        java.lang.Long $r8;
        androidx.textclassifier.TextLinks$Request $r12;

        r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.textclassifier.TextLinks$Request$Builder;

        $r2 = virtualinvoke r0.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("text");

        specialinvoke $r1.<androidx.textclassifier.TextLinks$Request$Builder: void <init>(java.lang.CharSequence)>($r2);

        $r3 = staticinvoke <androidx.textclassifier.BundleUtils: androidx.core.os.LocaleListCompat getLocaleList(android.os.Bundle,java.lang.String)>(r0, "locales");

        $r4 = virtualinvoke $r1.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)>($r3);

        $r5 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("entity_config");

        $r6 = staticinvoke <androidx.textclassifier.TextClassifier$EntityConfig: androidx.textclassifier.TextClassifier$EntityConfig createFromBundle(android.os.Bundle)>($r5);

        $r7 = virtualinvoke $r4.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request$Builder setEntityConfig(androidx.textclassifier.TextClassifier$EntityConfig)>($r6);

        $r8 = staticinvoke <androidx.textclassifier.BundleUtils: java.lang.Long getLong(android.os.Bundle,java.lang.String)>(r0, "reference_time");

        $r9 = virtualinvoke $r7.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request$Builder setReferenceTime(java.lang.Long)>($r8);

        $r10 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        $r11 = virtualinvoke $r9.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request$Builder setExtras(android.os.Bundle)>($r10);

        $r12 = virtualinvoke $r11.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request build()>();

        return $r12;
    }

    android.view.textclassifier.TextLinks$Request toPlatform()
    {
        androidx.textclassifier.TextLinks$Request r0;
        android.view.textclassifier.TextLinks$Request$Builder $r1, $r5, $r8;
        java.lang.CharSequence $r2;
        androidx.core.os.LocaleListCompat $r3;
        android.os.LocaleList $r4;
        androidx.textclassifier.TextClassifier$EntityConfig $r6;
        android.view.textclassifier.TextClassifier$EntityConfig $r7;
        android.view.textclassifier.TextLinks$Request $r9;

        r0 := @this: androidx.textclassifier.TextLinks$Request;

        $r1 = new android.view.textclassifier.TextLinks$Request$Builder;

        $r2 = virtualinvoke r0.<androidx.textclassifier.TextLinks$Request: java.lang.CharSequence getText()>();

        specialinvoke $r1.<android.view.textclassifier.TextLinks$Request$Builder: void <init>(java.lang.CharSequence)>($r2);

        $r3 = virtualinvoke r0.<androidx.textclassifier.TextLinks$Request: androidx.core.os.LocaleListCompat getDefaultLocales()>();

        $r4 = staticinvoke <androidx.textclassifier.ConvertUtils: android.os.LocaleList unwrapLocalListCompat(androidx.core.os.LocaleListCompat)>($r3);

        $r5 = virtualinvoke $r1.<android.view.textclassifier.TextLinks$Request$Builder: android.view.textclassifier.TextLinks$Request$Builder setDefaultLocales(android.os.LocaleList)>($r4);

        $r6 = virtualinvoke r0.<androidx.textclassifier.TextLinks$Request: androidx.textclassifier.TextClassifier$EntityConfig getEntityConfig()>();

        $r7 = staticinvoke <androidx.textclassifier.ConvertUtils: android.view.textclassifier.TextClassifier$EntityConfig toPlatformEntityConfig(androidx.textclassifier.TextClassifier$EntityConfig)>($r6);

        $r8 = virtualinvoke $r5.<android.view.textclassifier.TextLinks$Request$Builder: android.view.textclassifier.TextLinks$Request$Builder setEntityConfig(android.view.textclassifier.TextClassifier$EntityConfig)>($r7);

        $r9 = virtualinvoke $r8.<android.view.textclassifier.TextLinks$Request$Builder: android.view.textclassifier.TextLinks$Request build()>();

        return $r9;
    }

    static androidx.textclassifier.TextLinks$Request fromPlatform(android.view.textclassifier.TextLinks$Request)
    {
        android.view.textclassifier.TextLinks$Request r0;
        androidx.textclassifier.TextLinks$Request$Builder $r1, $r5, $r8;
        java.lang.CharSequence $r2;
        android.os.LocaleList $r3;
        androidx.core.os.LocaleListCompat $r4;
        android.view.textclassifier.TextClassifier$EntityConfig $r6;
        androidx.textclassifier.TextClassifier$EntityConfig $r7;
        androidx.textclassifier.TextLinks$Request $r9;

        r0 := @parameter0: android.view.textclassifier.TextLinks$Request;

        $r1 = new androidx.textclassifier.TextLinks$Request$Builder;

        $r2 = virtualinvoke r0.<android.view.textclassifier.TextLinks$Request: java.lang.CharSequence getText()>();

        specialinvoke $r1.<androidx.textclassifier.TextLinks$Request$Builder: void <init>(java.lang.CharSequence)>($r2);

        $r3 = virtualinvoke r0.<android.view.textclassifier.TextLinks$Request: android.os.LocaleList getDefaultLocales()>();

        $r4 = staticinvoke <androidx.textclassifier.ConvertUtils: androidx.core.os.LocaleListCompat wrapLocalList(android.os.LocaleList)>($r3);

        $r5 = virtualinvoke $r1.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)>($r4);

        $r6 = virtualinvoke r0.<android.view.textclassifier.TextLinks$Request: android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()>();

        $r7 = staticinvoke <androidx.textclassifier.TextClassifier$EntityConfig: androidx.textclassifier.TextClassifier$EntityConfig fromPlatform(android.view.textclassifier.TextClassifier$EntityConfig)>($r6);

        $r8 = virtualinvoke $r5.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request$Builder setEntityConfig(androidx.textclassifier.TextClassifier$EntityConfig)>($r7);

        $r9 = virtualinvoke $r8.<androidx.textclassifier.TextLinks$Request$Builder: androidx.textclassifier.TextLinks$Request build()>();

        return $r9;
    }

androidx.textclassifier.TextLinks$SpanFactory
<androidx.textclassifier.TextLinks$SpanFactory: androidx.textclassifier.TextLinks$TextLinkSpan createSpan(androidx.textclassifier.TextLinks$TextLinkSpanData)>
androidx.textclassifier.TextLinks$Status
androidx.textclassifier.TextLinks$TextLink
<androidx.textclassifier.TextLinks$TextLink: java.lang.String EXTRA_ENTITY_SCORES>
<androidx.textclassifier.TextLinks$TextLink: java.lang.String EXTRA_START>
<androidx.textclassifier.TextLinks$TextLink: java.lang.String EXTRA_END>
<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>
<androidx.textclassifier.TextLinks$TextLink: int mStart>
<androidx.textclassifier.TextLinks$TextLink: int mEnd>
    void <init>(int, int, java.util.Map)
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        int i0, i1;
        java.util.Map r1;
        boolean $z0, $z1, $z2;
        androidx.textclassifier.EntityConfidence $r3;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z1);

        if i0 > i1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z2);

        r0.<androidx.textclassifier.TextLinks$TextLink: int mStart> = i0;

        r0.<androidx.textclassifier.TextLinks$TextLink: int mEnd> = i1;

        $r3 = new androidx.textclassifier.EntityConfidence;

        specialinvoke $r3.<androidx.textclassifier.EntityConfidence: void <init>(java.util.Map)>(r1);

        r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores> = $r3;

        return;
    }

    public int getStart()
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        int $i0;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        $i0 = r0.<androidx.textclassifier.TextLinks$TextLink: int mStart>;

        return $i0;
    }

    public int getEnd()
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        int $i0;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        $i0 = r0.<androidx.textclassifier.TextLinks$TextLink: int mEnd>;

        return $i0;
    }

    public int getEntityTypeCount()
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        androidx.textclassifier.EntityConfidence $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>;

        $r2 = virtualinvoke $r1.<androidx.textclassifier.EntityConfidence: java.util.List getEntities()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.String getEntityType(int)
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        int i0;
        androidx.textclassifier.EntityConfidence $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>;

        $r2 = virtualinvoke $r1.<androidx.textclassifier.EntityConfidence: java.util.List getEntities()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public float getConfidenceScore(java.lang.String)
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        java.lang.String r1;
        androidx.textclassifier.EntityConfidence $r2;
        float $f0;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>;

        $f0 = virtualinvoke $r2.<androidx.textclassifier.EntityConfidence: float getConfidenceScore(java.lang.String)>(r1);

        return $f0;
    }

    public java.lang.String toString()
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.util.Locale $r2;
        java.lang.Integer $r3, $r4;
        androidx.textclassifier.EntityConfidence $r5;
        java.lang.String $r6;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[3];

        $i0 = r0.<androidx.textclassifier.TextLinks$TextLink: int mStart>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $i1 = r0.<androidx.textclassifier.TextLinks$TextLink: int mEnd>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r4;

        $r5 = r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>;

        $r1[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "TextLink{start=%s, end=%s, entityScores=%s}", $r1);

        return $r6;
    }

    public android.os.Bundle toBundle()
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        android.os.Bundle r1, $r2;
        androidx.textclassifier.EntityConfidence $r3;
        java.util.Map $r4;
        int $i0, $i1;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>;

        $r4 = virtualinvoke $r3.<androidx.textclassifier.EntityConfidence: java.util.Map getConfidenceMap()>();

        staticinvoke <androidx.textclassifier.BundleUtils: void putMap(android.os.Bundle,java.lang.String,java.util.Map)>(r1, "scores", $r4);

        $i0 = r0.<androidx.textclassifier.TextLinks$TextLink: int mStart>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("start", $i0);

        $i1 = r0.<androidx.textclassifier.TextLinks$TextLink: int mEnd>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("end", $i1);

        return r1;
    }

    androidx.textclassifier.EntityConfidence getEntityScores()
    {
        androidx.textclassifier.TextLinks$TextLink r0;
        androidx.textclassifier.EntityConfidence $r1;

        r0 := @this: androidx.textclassifier.TextLinks$TextLink;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLink: androidx.textclassifier.EntityConfidence mEntityScores>;

        return $r1;
    }

    public static androidx.textclassifier.TextLinks$TextLink createFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.textclassifier.TextLinks$TextLink $r1;
        int $i0, $i1;
        java.util.Map $r2;

        r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.textclassifier.TextLinks$TextLink;

        $i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("start");

        $i1 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("end");

        $r2 = staticinvoke <androidx.textclassifier.BundleUtils: java.util.Map getFloatStringMapOrThrow(android.os.Bundle,java.lang.String)>(r0, "scores");

        specialinvoke $r1.<androidx.textclassifier.TextLinks$TextLink: void <init>(int,int,java.util.Map)>($i0, $i1, $r2);

        return $r1;
    }

androidx.textclassifier.TextLinks$TextLinkSpan
<androidx.textclassifier.TextLinks$TextLinkSpan: androidx.textclassifier.TextLinks$TextLinkSpanData mTextLinkSpanData>
    public void <init>(androidx.textclassifier.TextLinks$TextLinkSpanData)
    {
        androidx.textclassifier.TextLinks$TextLinkSpan r0;
        androidx.textclassifier.TextLinks$TextLinkSpanData r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.textclassifier.TextLinks$TextLinkSpan;

        r1 := @parameter0: androidx.textclassifier.TextLinks$TextLinkSpanData;

        specialinvoke r0.<android.text.style.ClickableSpan: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.textclassifier.TextLinks$TextLinkSpanData) $r2;

        r0.<androidx.textclassifier.TextLinks$TextLinkSpan: androidx.textclassifier.TextLinks$TextLinkSpanData mTextLinkSpanData> = $r3;

        return;
    }

    public final androidx.textclassifier.TextLinks$TextLinkSpanData getTextLinkSpanData()
    {
        androidx.textclassifier.TextLinks$TextLinkSpan r0;
        androidx.textclassifier.TextLinks$TextLinkSpanData $r1;

        r0 := @this: androidx.textclassifier.TextLinks$TextLinkSpan;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLinkSpan: androidx.textclassifier.TextLinks$TextLinkSpanData mTextLinkSpanData>;

        return $r1;
    }

androidx.textclassifier.TextLinks$TextLinkSpanData
<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextLinks$TextLink mTextLink>
<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextClassifier mTextClassifier>
<androidx.textclassifier.TextLinks$TextLinkSpanData: java.lang.Long mReferenceTime>
    void <init>(androidx.textclassifier.TextLinks$TextLink, androidx.textclassifier.TextClassifier, java.lang.Long)
    {
        androidx.textclassifier.TextLinks$TextLinkSpanData r0;
        androidx.textclassifier.TextLinks$TextLink r1, $r5;
        androidx.textclassifier.TextClassifier r2, $r7;
        java.lang.Long r3;
        java.lang.Object $r4, $r6;

        r0 := @this: androidx.textclassifier.TextLinks$TextLinkSpanData;

        r1 := @parameter0: androidx.textclassifier.TextLinks$TextLink;

        r2 := @parameter1: androidx.textclassifier.TextClassifier;

        r3 := @parameter2: java.lang.Long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (androidx.textclassifier.TextLinks$TextLink) $r4;

        r0.<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextLinks$TextLink mTextLink> = $r5;

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (androidx.textclassifier.TextClassifier) $r6;

        r0.<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextClassifier mTextClassifier> = $r7;

        r0.<androidx.textclassifier.TextLinks$TextLinkSpanData: java.lang.Long mReferenceTime> = r3;

        return;
    }

    public androidx.textclassifier.TextLinks$TextLink getTextLink()
    {
        androidx.textclassifier.TextLinks$TextLinkSpanData r0;
        androidx.textclassifier.TextLinks$TextLink $r1;

        r0 := @this: androidx.textclassifier.TextLinks$TextLinkSpanData;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextLinks$TextLink mTextLink>;

        return $r1;
    }

    public java.lang.Long getReferenceTime()
    {
        androidx.textclassifier.TextLinks$TextLinkSpanData r0;
        java.lang.Long $r1;

        r0 := @this: androidx.textclassifier.TextLinks$TextLinkSpanData;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLinkSpanData: java.lang.Long mReferenceTime>;

        return $r1;
    }

    androidx.textclassifier.TextClassifier getTextClassifier()
    {
        androidx.textclassifier.TextLinks$TextLinkSpanData r0;
        androidx.textclassifier.TextClassifier $r1;

        r0 := @this: androidx.textclassifier.TextLinks$TextLinkSpanData;

        $r1 = r0.<androidx.textclassifier.TextLinks$TextLinkSpanData: androidx.textclassifier.TextClassifier mTextClassifier>;

        return $r1;
    }

