androidx.mediarouter.media.MediaRouteDiscoveryRequest
<androidx.mediarouter.media.MediaRouteDiscoveryRequest: java.lang.String KEY_SELECTOR>
<androidx.mediarouter.media.MediaRouteDiscoveryRequest: java.lang.String KEY_ACTIVE_SCAN>
<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle>
<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector>
    public void <init>(androidx.mediarouter.media.MediaRouteSelector, boolean)
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        androidx.mediarouter.media.MediaRouteSelector r1;
        boolean z0;
        android.os.Bundle $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteSelector;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("selector must not be null");

        throw $r6;

     label1:
        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle> = $r2;

        r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector> = r1;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle>;

        $r4 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteSelector: android.os.Bundle asBundle()>();

        virtualinvoke $r3.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("selector", $r4);

        $r5 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle>;

        virtualinvoke $r5.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("activeScan", z0);

        return;
    }

    private void <init>(android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        android.os.Bundle r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle> = r1;

        return;
    }

    public androidx.mediarouter.media.MediaRouteSelector getSelector()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        androidx.mediarouter.media.MediaRouteSelector $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: void ensureSelector()>();

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        return $r1;
    }

    private void ensureSelector()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        androidx.mediarouter.media.MediaRouteSelector $r1, $r4, $r5, $r6;
        android.os.Bundle $r2, $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        if $r1 != null goto label1;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle>;

        $r3 = virtualinvoke $r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("selector");

        $r4 = staticinvoke <androidx.mediarouter.media.MediaRouteSelector: androidx.mediarouter.media.MediaRouteSelector fromBundle(android.os.Bundle)>($r3);

        r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector> = $r4;

        $r5 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        if $r5 != null goto label1;

        $r6 = <androidx.mediarouter.media.MediaRouteSelector: androidx.mediarouter.media.MediaRouteSelector EMPTY>;

        r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector> = $r6;

     label1:
        return;
    }

    public boolean isActiveScan()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("activeScan");

        return $z0;
    }

    public boolean isValid()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        androidx.mediarouter.media.MediaRouteSelector $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: void ensureSelector()>();

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector mSelector>;

        $z0 = virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteSelector: boolean isValid()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.mediarouter.media.MediaRouteSelector $r3, $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        if $z0 == 0 goto label3;

        r2 = (androidx.mediarouter.media.MediaRouteDiscoveryRequest) r1;

        $r3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector getSelector()>();

        $r4 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector getSelector()>();

        $z1 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteSelector: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isActiveScan()>();

        $z3 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isActiveScan()>();

        if $z2 != $z3 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        return 0;
    }

    public int hashCode()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        androidx.mediarouter.media.MediaRouteSelector $r1;
        int $i0, $i1;
        boolean $z0;
        byte $b2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $r1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector getSelector()>();

        $i0 = virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteSelector: int hashCode()>();

        $z0 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isActiveScan()>();

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $i1 = $i0 ^ $b2;

        return $i1;
    }

    public java.lang.String toString()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r8;
        androidx.mediarouter.media.MediaRouteSelector $r4;
        boolean $z0, $z1;
        java.lang.String $r11;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DiscoveryRequest{ selector=");

        $r4 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector getSelector()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", activeScan=");

        $z0 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isActiveScan()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isValid=");

        $z1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isValid()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public android.os.Bundle asBundle()
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: android.os.Bundle mBundle>;

        return $r1;
    }

    public static androidx.mediarouter.media.MediaRouteDiscoveryRequest fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r1;

        r0 := @parameter0: android.os.Bundle;

        if r0 == null goto label1;

        $r1 = new androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        specialinvoke $r1.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: void <init>(android.os.Bundle)>(r0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

