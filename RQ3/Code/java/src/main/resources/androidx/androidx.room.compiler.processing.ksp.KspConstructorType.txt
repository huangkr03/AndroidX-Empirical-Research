androidx.room.compiler.processing.ksp.KspConstructorType
<androidx.room.compiler.processing.ksp.KspConstructorType: androidx.room.compiler.processing.ksp.KspConstructorElement origin>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, androidx.room.compiler.processing.ksp.KspConstructorElement, androidx.room.compiler.processing.ksp.KspType)
    {
        androidx.room.compiler.processing.ksp.KspConstructorType r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspConstructorElement r2;
        androidx.room.compiler.processing.ksp.KspType r3;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorType;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.ksp.KspConstructorElement;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "origin");

        $r4 = (androidx.room.compiler.processing.ksp.KspExecutableElement) r2;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspExecutableElement,androidx.room.compiler.processing.ksp.KspType)>(r1, $r4, r3);

        r0.<androidx.room.compiler.processing.ksp.KspConstructorType: androidx.room.compiler.processing.ksp.KspConstructorElement origin> = r2;

        return;
    }

    public androidx.room.compiler.processing.ksp.KspConstructorElement getOrigin()
    {
        androidx.room.compiler.processing.ksp.KspConstructorType r0;
        androidx.room.compiler.processing.ksp.KspConstructorElement $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorType;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspConstructorType: androidx.room.compiler.processing.ksp.KspConstructorElement origin>;

        return $r1;
    }

    public volatile androidx.room.compiler.processing.ksp.KspExecutableElement getOrigin()
    {
        androidx.room.compiler.processing.ksp.KspConstructorType r0;
        androidx.room.compiler.processing.ksp.KspConstructorElement $r1;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspConstructorType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspConstructorType: androidx.room.compiler.processing.ksp.KspConstructorElement getOrigin()>();

        $r2 = (androidx.room.compiler.processing.ksp.KspExecutableElement) $r1;

        return $r2;
    }

