androidx.media3.transformer.Transformer
<androidx.media3.transformer.Transformer: int PROGRESS_STATE_WAITING_FOR_AVAILABILITY>
<androidx.media3.transformer.Transformer: int PROGRESS_STATE_AVAILABLE>
<androidx.media3.transformer.Transformer: int PROGRESS_STATE_UNAVAILABLE>
<androidx.media3.transformer.Transformer: int PROGRESS_STATE_NO_TRANSFORMATION>
<androidx.media3.transformer.Transformer: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>
<androidx.media3.transformer.Transformer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>
<androidx.media3.transformer.Transformer: android.content.Context context>
<androidx.media3.transformer.Transformer: androidx.media3.transformer.TransformationRequest transformationRequest>
<androidx.media3.transformer.Transformer: com.google.common.collect.ImmutableList videoEffects>
<androidx.media3.transformer.Transformer: boolean removeAudio>
<androidx.media3.transformer.Transformer: boolean removeVideo>
<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>
<androidx.media3.transformer.Transformer: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>
<androidx.media3.transformer.Transformer: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>
<androidx.media3.transformer.Transformer: androidx.media3.transformer.Muxer$Factory muxerFactory>
<androidx.media3.transformer.Transformer: android.os.Looper looper>
<androidx.media3.transformer.Transformer: androidx.media3.common.DebugViewProvider debugViewProvider>
<androidx.media3.transformer.Transformer: androidx.media3.common.util.Clock clock>
<androidx.media3.transformer.Transformer: androidx.media3.transformer.ExoPlayerAssetLoader exoPlayerAssetLoader>
<androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper muxerWrapper>
<androidx.media3.transformer.Transformer: java.lang.String outputPath>
<androidx.media3.transformer.Transformer: android.os.ParcelFileDescriptor outputParcelFileDescriptor>
<androidx.media3.transformer.Transformer: boolean transformationInProgress>
<androidx.media3.transformer.Transformer: boolean isCancelling>
    private void <init>(android.content.Context, androidx.media3.transformer.TransformationRequest, com.google.common.collect.ImmutableList, boolean, boolean, androidx.media3.common.util.ListenerSet, androidx.media3.exoplayer.source.MediaSource$Factory, androidx.media3.transformer.Codec$DecoderFactory, androidx.media3.transformer.Codec$EncoderFactory, androidx.media3.common.FrameProcessor$Factory, androidx.media3.transformer.Muxer$Factory, android.os.Looper, androidx.media3.common.DebugViewProvider, androidx.media3.common.util.Clock)
    {
        androidx.media3.transformer.Transformer r0;
        android.content.Context r1;
        androidx.media3.transformer.TransformationRequest r2;
        com.google.common.collect.ImmutableList r3;
        boolean z0, z1, $z2;
        androidx.media3.common.util.ListenerSet r4;
        androidx.media3.exoplayer.source.MediaSource$Factory r5;
        androidx.media3.transformer.Codec$DecoderFactory r6;
        androidx.media3.transformer.Codec$EncoderFactory r7;
        androidx.media3.common.FrameProcessor$Factory r8;
        androidx.media3.transformer.Muxer$Factory r9;
        android.os.Looper r10;
        androidx.media3.common.DebugViewProvider r11;
        androidx.media3.common.util.Clock r12;
        androidx.media3.transformer.ExoPlayerAssetLoader $r13;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.transformer.TransformationRequest;

        r3 := @parameter2: com.google.common.collect.ImmutableList;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: androidx.media3.common.util.ListenerSet;

        r5 := @parameter6: androidx.media3.exoplayer.source.MediaSource$Factory;

        r6 := @parameter7: androidx.media3.transformer.Codec$DecoderFactory;

        r7 := @parameter8: androidx.media3.transformer.Codec$EncoderFactory;

        r8 := @parameter9: androidx.media3.common.FrameProcessor$Factory;

        r9 := @parameter10: androidx.media3.transformer.Muxer$Factory;

        r10 := @parameter11: android.os.Looper;

        r11 := @parameter12: androidx.media3.common.DebugViewProvider;

        r12 := @parameter13: androidx.media3.common.util.Clock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        if z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z2, "Audio and video cannot both be removed.");

        r0.<androidx.media3.transformer.Transformer: android.content.Context context> = r1;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.TransformationRequest transformationRequest> = r2;

        r0.<androidx.media3.transformer.Transformer: com.google.common.collect.ImmutableList videoEffects> = r3;

        r0.<androidx.media3.transformer.Transformer: boolean removeAudio> = z0;

        r0.<androidx.media3.transformer.Transformer: boolean removeVideo> = z1;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners> = r4;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory> = r5;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = r6;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = r7;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = r8;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Muxer$Factory muxerFactory> = r9;

        r0.<androidx.media3.transformer.Transformer: android.os.Looper looper> = r10;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.common.DebugViewProvider debugViewProvider> = r11;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.Clock clock> = r12;

        $r13 = new androidx.media3.transformer.ExoPlayerAssetLoader;

        specialinvoke $r13.<androidx.media3.transformer.ExoPlayerAssetLoader: void <init>(android.content.Context,androidx.media3.transformer.TransformationRequest,com.google.common.collect.ImmutableList,boolean,boolean,androidx.media3.exoplayer.source.MediaSource$Factory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.common.FrameProcessor$Factory,android.os.Looper,androidx.media3.common.DebugViewProvider,androidx.media3.common.util.Clock)>(r1, r2, r3, z0, z1, r5, r6, r7, r8, r10, r11, r12);

        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.ExoPlayerAssetLoader exoPlayerAssetLoader> = $r13;

        return;
    }

    public androidx.media3.transformer.Transformer$Builder buildUpon()
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.Transformer$Builder $r1;

        r0 := @this: androidx.media3.transformer.Transformer;

        $r1 = new androidx.media3.transformer.Transformer$Builder;

        specialinvoke $r1.<androidx.media3.transformer.Transformer$Builder: void <init>(androidx.media3.transformer.Transformer,androidx.media3.transformer.Transformer$1)>(r0, null);

        return $r1;
    }

    public void setListener(androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.Transformer$Listener r1;
        androidx.media3.common.util.ListenerSet $r2, $r3;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        $r2 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void clear()>();

        $r3 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r3.<androidx.media3.common.util.ListenerSet: void add(java.lang.Object)>(r1);

        return;
    }

    public void addListener(androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.Transformer$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        $r2 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.Transformer$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        $r2 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void remove(java.lang.Object)>(r1);

        return;
    }

    public void removeAllListeners()
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.util.ListenerSet $r1;

        r0 := @this: androidx.media3.transformer.Transformer;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r1.<androidx.media3.common.util.ListenerSet: void clear()>();

        return;
    }

    public void startTransformation(androidx.media3.common.MediaItem, java.lang.String)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.MediaItem r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.media3.transformer.Transformer: java.lang.String outputPath> = r2;

        r0.<androidx.media3.transformer.Transformer: android.os.ParcelFileDescriptor outputParcelFileDescriptor> = null;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void startTransformationInternal(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void startTransformation(androidx.media3.common.MediaItem, android.os.ParcelFileDescriptor)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.MediaItem r1;
        android.os.ParcelFileDescriptor r2;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r0.<androidx.media3.transformer.Transformer: android.os.ParcelFileDescriptor outputParcelFileDescriptor> = r2;

        r0.<androidx.media3.transformer.Transformer: java.lang.String outputPath> = null;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void startTransformationInternal(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    private void startTransformationInternal(androidx.media3.common.MediaItem)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.transformer.Transformer$ComponentListener r2, $r7;
        androidx.media3.transformer.MuxerWrapper r3, $r9;
        androidx.media3.transformer.FallbackListener r4, $r13;
        androidx.media3.common.MediaItem$ClippingConfiguration $r5, $r6;
        boolean $z0, $z1, $z2;
        android.os.Looper $r8, $r14;
        androidx.media3.transformer.Muxer$Factory $r10;
        android.os.ParcelFileDescriptor $r11;
        java.lang.String $r12;
        androidx.media3.common.util.Clock $r15;
        androidx.media3.common.util.ListenerSet $r16;
        androidx.media3.common.util.HandlerWrapper $r17;
        androidx.media3.transformer.TransformationRequest $r18, $r21;
        androidx.media3.transformer.ExoPlayerAssetLoader $r19;
        java.lang.IllegalStateException $r20;
        java.lang.IllegalArgumentException $r22;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r6 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $r5 = <androidx.media3.common.MediaItem$ClippingConfiguration: androidx.media3.common.MediaItem$ClippingConfiguration UNSET>;

        $z0 = virtualinvoke $r6.<androidx.media3.common.MediaItem$ClippingConfiguration: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r21 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $z2 = $r21.<androidx.media3.transformer.TransformationRequest: boolean flattenForSlowMotion>;

        if $z2 == 0 goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Clipping is not supported when slow motion flattening is requested");

        throw $r22;

     label1:
        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        $z1 = r0.<androidx.media3.transformer.Transformer: boolean transformationInProgress>;

        if $z1 == 0 goto label2;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("There is already a transformation in progress.");

        throw $r20;

     label2:
        r0.<androidx.media3.transformer.Transformer: boolean transformationInProgress> = 1;

        $r7 = new androidx.media3.transformer.Transformer$ComponentListener;

        $r8 = r0.<androidx.media3.transformer.Transformer: android.os.Looper looper>;

        specialinvoke $r7.<androidx.media3.transformer.Transformer$ComponentListener: void <init>(androidx.media3.transformer.Transformer,androidx.media3.common.MediaItem,android.os.Looper)>(r0, r1, $r8);

        r2 = $r7;

        $r9 = new androidx.media3.transformer.MuxerWrapper;

        $r12 = r0.<androidx.media3.transformer.Transformer: java.lang.String outputPath>;

        $r11 = r0.<androidx.media3.transformer.Transformer: android.os.ParcelFileDescriptor outputParcelFileDescriptor>;

        $r10 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        specialinvoke $r9.<androidx.media3.transformer.MuxerWrapper: void <init>(java.lang.String,android.os.ParcelFileDescriptor,androidx.media3.transformer.Muxer$Factory,androidx.media3.transformer.Transformer$AsyncErrorListener)>($r12, $r11, $r10, r2);

        r3 = $r9;

        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper muxerWrapper> = r3;

        $r13 = new androidx.media3.transformer.FallbackListener;

        $r16 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        $r15 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.Clock clock>;

        $r14 = r0.<androidx.media3.transformer.Transformer: android.os.Looper looper>;

        $r17 = interfaceinvoke $r15.<androidx.media3.common.util.Clock: androidx.media3.common.util.HandlerWrapper createHandler(android.os.Looper,android.os.Handler$Callback)>($r14, null);

        $r18 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        specialinvoke $r13.<androidx.media3.transformer.FallbackListener: void <init>(androidx.media3.common.MediaItem,androidx.media3.common.util.ListenerSet,androidx.media3.common.util.HandlerWrapper,androidx.media3.transformer.TransformationRequest)>(r1, $r16, $r17, $r18);

        r4 = $r13;

        $r19 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.ExoPlayerAssetLoader exoPlayerAssetLoader>;

        virtualinvoke $r19.<androidx.media3.transformer.ExoPlayerAssetLoader: void start(androidx.media3.common.MediaItem,androidx.media3.transformer.MuxerWrapper,androidx.media3.transformer.ExoPlayerAssetLoader$Listener,androidx.media3.transformer.FallbackListener,androidx.media3.transformer.Transformer$AsyncErrorListener)>(r1, r3, r2, r4, r2);

        return;
    }

    public android.os.Looper getApplicationLooper()
    {
        androidx.media3.transformer.Transformer r0;
        android.os.Looper $r1;

        r0 := @this: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: android.os.Looper looper>;

        return $r1;
    }

    public int getProgress(androidx.media3.transformer.ProgressHolder)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.ProgressHolder r1;
        androidx.media3.transformer.ExoPlayerAssetLoader $r2;
        int $i0;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: androidx.media3.transformer.ProgressHolder;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        $r2 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.ExoPlayerAssetLoader exoPlayerAssetLoader>;

        $i0 = virtualinvoke $r2.<androidx.media3.transformer.ExoPlayerAssetLoader: int getProgress(androidx.media3.transformer.ProgressHolder)>(r1);

        return $i0;
    }

    public void cancel()
    {
        androidx.media3.transformer.Transformer r0;

        r0 := @this: androidx.media3.transformer.Transformer;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void verifyApplicationThread()>();

        r0.<androidx.media3.transformer.Transformer: boolean isCancelling> = 1;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void releaseResources(boolean)>(1);

        goto label1;

     label1:
        r0.<androidx.media3.transformer.Transformer: boolean isCancelling> = 0;

        return;
    }

    private void releaseResources(boolean) throws androidx.media3.transformer.TransformationException
    {
        androidx.media3.transformer.Transformer r0;
        boolean z0;
        androidx.media3.transformer.ExoPlayerAssetLoader $r1;
        androidx.media3.transformer.MuxerWrapper $r2, $r3;

        r0 := @this: androidx.media3.transformer.Transformer;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.transformer.Transformer: boolean transformationInProgress> = 0;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.ExoPlayerAssetLoader exoPlayerAssetLoader>;

        virtualinvoke $r1.<androidx.media3.transformer.ExoPlayerAssetLoader: void release()>();

        $r2 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        virtualinvoke $r3.<androidx.media3.transformer.MuxerWrapper: void release(boolean)>(z0);

        goto label1;

     label1:
        r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper muxerWrapper> = null;

     label2:
        return;
    }

    private void verifyApplicationThread()
    {
        androidx.media3.transformer.Transformer r0;
        android.os.Looper $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.media3.transformer.Transformer;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<androidx.media3.transformer.Transformer: android.os.Looper looper>;

        if $r1 == $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Transformer is accessed on the wrong thread.");

        throw $r3;

     label1:
        return;
    }

    private long getCurrentOutputFileCurrentSizeBytes()
    {
        androidx.media3.transformer.Transformer r0;
        java.lang.String $r1, $r5;
        android.os.ParcelFileDescriptor $r2, $r3;
        java.io.File $r4;
        long l0;
        byte $b1;

        r0 := @this: androidx.media3.transformer.Transformer;

        l0 = -1L;

        $r1 = r0.<androidx.media3.transformer.Transformer: java.lang.String outputPath>;

        if $r1 == null goto label1;

        $r4 = new java.io.File;

        $r5 = r0.<androidx.media3.transformer.Transformer: java.lang.String outputPath>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        l0 = virtualinvoke $r4.<java.io.File: long length()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.transformer.Transformer: android.os.ParcelFileDescriptor outputParcelFileDescriptor>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.media3.transformer.Transformer: android.os.ParcelFileDescriptor outputParcelFileDescriptor>;

        l0 = virtualinvoke $r3.<android.os.ParcelFileDescriptor: long getStatSize()>();

     label2:
        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label3;

        l0 = -1L;

     label3:
        return l0;
    }

    static android.content.Context access$000(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        android.content.Context $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: android.content.Context context>;

        return $r1;
    }

    static androidx.media3.transformer.TransformationRequest access$100(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.TransformationRequest $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        return $r1;
    }

    static com.google.common.collect.ImmutableList access$200(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        com.google.common.collect.ImmutableList $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: com.google.common.collect.ImmutableList videoEffects>;

        return $r1;
    }

    static boolean access$300(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $z0 = r0.<androidx.media3.transformer.Transformer: boolean removeAudio>;

        return $z0;
    }

    static boolean access$400(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $z0 = r0.<androidx.media3.transformer.Transformer: boolean removeVideo>;

        return $z0;
    }

    static androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.util.ListenerSet $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet listeners>;

        return $r1;
    }

    static androidx.media3.exoplayer.source.MediaSource$Factory access$600(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.exoplayer.source.MediaSource$Factory $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>;

        return $r1;
    }

    static androidx.media3.common.FrameProcessor$Factory access$700(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.FrameProcessor$Factory $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>;

        return $r1;
    }

    static androidx.media3.transformer.Muxer$Factory access$800(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.Muxer$Factory $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        return $r1;
    }

    static android.os.Looper access$900(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        android.os.Looper $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: android.os.Looper looper>;

        return $r1;
    }

    static androidx.media3.common.DebugViewProvider access$1000(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.DebugViewProvider $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.DebugViewProvider debugViewProvider>;

        return $r1;
    }

    static androidx.media3.common.util.Clock access$1100(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.common.util.Clock $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.common.util.Clock clock>;

        return $r1;
    }

    void <init>(android.content.Context, androidx.media3.transformer.TransformationRequest, com.google.common.collect.ImmutableList, boolean, boolean, androidx.media3.common.util.ListenerSet, androidx.media3.exoplayer.source.MediaSource$Factory, androidx.media3.transformer.Codec$DecoderFactory, androidx.media3.transformer.Codec$EncoderFactory, androidx.media3.common.FrameProcessor$Factory, androidx.media3.transformer.Muxer$Factory, android.os.Looper, androidx.media3.common.DebugViewProvider, androidx.media3.common.util.Clock, androidx.media3.transformer.Transformer$1)
    {
        androidx.media3.transformer.Transformer r0;
        android.content.Context r1;
        androidx.media3.transformer.TransformationRequest r2;
        com.google.common.collect.ImmutableList r3;
        boolean z0, z1;
        androidx.media3.common.util.ListenerSet r4;
        androidx.media3.exoplayer.source.MediaSource$Factory r5;
        androidx.media3.transformer.Codec$DecoderFactory r6;
        androidx.media3.transformer.Codec$EncoderFactory r7;
        androidx.media3.common.FrameProcessor$Factory r8;
        androidx.media3.transformer.Muxer$Factory r9;
        android.os.Looper r10;
        androidx.media3.common.DebugViewProvider r11;
        androidx.media3.common.util.Clock r12;
        androidx.media3.transformer.Transformer$1 r13;

        r0 := @this: androidx.media3.transformer.Transformer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.transformer.TransformationRequest;

        r3 := @parameter2: com.google.common.collect.ImmutableList;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: androidx.media3.common.util.ListenerSet;

        r5 := @parameter6: androidx.media3.exoplayer.source.MediaSource$Factory;

        r6 := @parameter7: androidx.media3.transformer.Codec$DecoderFactory;

        r7 := @parameter8: androidx.media3.transformer.Codec$EncoderFactory;

        r8 := @parameter9: androidx.media3.common.FrameProcessor$Factory;

        r9 := @parameter10: androidx.media3.transformer.Muxer$Factory;

        r10 := @parameter11: android.os.Looper;

        r11 := @parameter12: androidx.media3.common.DebugViewProvider;

        r12 := @parameter13: androidx.media3.common.util.Clock;

        r13 := @parameter14: androidx.media3.transformer.Transformer$1;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void <init>(android.content.Context,androidx.media3.transformer.TransformationRequest,com.google.common.collect.ImmutableList,boolean,boolean,androidx.media3.common.util.ListenerSet,androidx.media3.exoplayer.source.MediaSource$Factory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.common.FrameProcessor$Factory,androidx.media3.transformer.Muxer$Factory,android.os.Looper,androidx.media3.common.DebugViewProvider,androidx.media3.common.util.Clock)>(r1, r2, r3, z0, z1, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    static boolean access$1400(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $z0 = r0.<androidx.media3.transformer.Transformer: boolean isCancelling>;

        return $z0;
    }

    static androidx.media3.transformer.MuxerWrapper access$1500(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        androidx.media3.transformer.MuxerWrapper $r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $r1 = r0.<androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        return $r1;
    }

    static void access$1600(androidx.media3.transformer.Transformer, boolean) throws androidx.media3.transformer.TransformationException
    {
        androidx.media3.transformer.Transformer r0;
        boolean z0;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.transformer.Transformer: void releaseResources(boolean)>(z0);

        return;
    }

    static long access$1700(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer r0;
        long $l0;

        r0 := @parameter0: androidx.media3.transformer.Transformer;

        $l0 = specialinvoke r0.<androidx.media3.transformer.Transformer: long getCurrentOutputFileCurrentSizeBytes()>();

        return $l0;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.transformer");

        return;
    }

androidx.media3.transformer.Transformer$1
androidx.media3.transformer.Transformer$AsyncErrorListener
<androidx.media3.transformer.Transformer$AsyncErrorListener: void onTransformationException(androidx.media3.transformer.TransformationException)>
androidx.media3.transformer.Transformer$Builder
<androidx.media3.transformer.Transformer$Builder: android.content.Context context>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>
<androidx.media3.transformer.Transformer$Builder: com.google.common.collect.ImmutableList videoEffects>
<androidx.media3.transformer.Transformer$Builder: boolean removeAudio>
<androidx.media3.transformer.Transformer$Builder: boolean removeVideo>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Muxer$Factory muxerFactory>
<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.DebugViewProvider debugViewProvider>
<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.Clock clock>
    public void <init>(android.content.Context)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        android.content.Context r1, $r2, $r7, $r9;
        androidx.media3.transformer.TransformationRequest$Builder $r3;
        androidx.media3.transformer.TransformationRequest $r4;
        com.google.common.collect.ImmutableList $r5;
        androidx.media3.transformer.DefaultDecoderFactory $r6;
        androidx.media3.transformer.DefaultEncoderFactory$Builder $r8;
        androidx.media3.transformer.DefaultEncoderFactory $r10;
        androidx.media3.effect.GlEffectsFrameProcessor$Factory $r11;
        androidx.media3.transformer.DefaultMuxer$Factory $r12;
        android.os.Looper $r13, $r17;
        androidx.media3.common.DebugViewProvider $r14;
        androidx.media3.common.util.Clock $r15, $r18;
        androidx.media3.common.util.ListenerSet $r16;
        androidx.media3.common.util.ListenerSet$IterationFinishedEvent $r19;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context> = $r2;

        $r3 = new androidx.media3.transformer.TransformationRequest$Builder;

        specialinvoke $r3.<androidx.media3.transformer.TransformationRequest$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<androidx.media3.transformer.TransformationRequest$Builder: androidx.media3.transformer.TransformationRequest build()>();

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest> = $r4;

        $r5 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r0.<androidx.media3.transformer.Transformer$Builder: com.google.common.collect.ImmutableList videoEffects> = $r5;

        $r6 = new androidx.media3.transformer.DefaultDecoderFactory;

        $r7 = r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context>;

        specialinvoke $r6.<androidx.media3.transformer.DefaultDecoderFactory: void <init>(android.content.Context)>($r7);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = $r6;

        $r8 = new androidx.media3.transformer.DefaultEncoderFactory$Builder;

        $r9 = r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context>;

        specialinvoke $r8.<androidx.media3.transformer.DefaultEncoderFactory$Builder: void <init>(android.content.Context)>($r9);

        $r10 = virtualinvoke $r8.<androidx.media3.transformer.DefaultEncoderFactory$Builder: androidx.media3.transformer.DefaultEncoderFactory build()>();

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = $r10;

        $r11 = new androidx.media3.effect.GlEffectsFrameProcessor$Factory;

        specialinvoke $r11.<androidx.media3.effect.GlEffectsFrameProcessor$Factory: void <init>()>();

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = $r11;

        $r12 = new androidx.media3.transformer.DefaultMuxer$Factory;

        specialinvoke $r12.<androidx.media3.transformer.DefaultMuxer$Factory: void <init>()>();

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Muxer$Factory muxerFactory> = $r12;

        $r13 = staticinvoke <androidx.media3.common.util.Util: android.os.Looper getCurrentOrMainLooper()>();

        r0.<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper> = $r13;

        $r14 = <androidx.media3.common.DebugViewProvider: androidx.media3.common.DebugViewProvider NONE>;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.DebugViewProvider debugViewProvider> = $r14;

        $r15 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.Clock clock> = $r15;

        $r16 = new androidx.media3.common.util.ListenerSet;

        $r17 = r0.<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper>;

        $r18 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.Clock clock>;

        $r19 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$IterationFinishedEvent ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,androidx.media3.common.FlagSet), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.transformer.Transformer$Builder: void lambda$new$0(androidx.media3.transformer.Transformer$Listener,androidx.media3.common.FlagSet)>, methodtype: void __METHODTYPE__(androidx.media3.transformer.Transformer$Listener,androidx.media3.common.FlagSet));

        specialinvoke $r16.<androidx.media3.common.util.ListenerSet: void <init>(android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent)>($r17, $r18, $r19);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners> = $r16;

        return;
    }

    private void <init>(androidx.media3.transformer.Transformer)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Transformer r1;
        android.content.Context $r2;
        androidx.media3.transformer.TransformationRequest $r3;
        com.google.common.collect.ImmutableList $r4;
        boolean $z0, $z1;
        androidx.media3.common.util.ListenerSet $r5;
        androidx.media3.exoplayer.source.MediaSource$Factory $r6;
        androidx.media3.transformer.Codec$DecoderFactory $r7;
        androidx.media3.transformer.Codec$EncoderFactory $r8;
        androidx.media3.common.FrameProcessor$Factory $r9;
        androidx.media3.transformer.Muxer$Factory $r10;
        android.os.Looper $r11;
        androidx.media3.common.DebugViewProvider $r12;
        androidx.media3.common.util.Clock $r13;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Transformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.media3.transformer.Transformer: android.content.Context access$000(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context> = $r2;

        $r3 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.transformer.TransformationRequest access$100(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest> = $r3;

        $r4 = staticinvoke <androidx.media3.transformer.Transformer: com.google.common.collect.ImmutableList access$200(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: com.google.common.collect.ImmutableList videoEffects> = $r4;

        $z0 = staticinvoke <androidx.media3.transformer.Transformer: boolean access$300(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: boolean removeAudio> = $z0;

        $z1 = staticinvoke <androidx.media3.transformer.Transformer: boolean access$400(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: boolean removeVideo> = $z1;

        $r5 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners> = $r5;

        $r6 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.exoplayer.source.MediaSource$Factory access$600(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory> = $r6;

        $r7 = r1.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = $r7;

        $r8 = r1.<androidx.media3.transformer.Transformer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = $r8;

        $r9 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.FrameProcessor$Factory access$700(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = $r9;

        $r10 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.transformer.Muxer$Factory access$800(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Muxer$Factory muxerFactory> = $r10;

        $r11 = staticinvoke <androidx.media3.transformer.Transformer: android.os.Looper access$900(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper> = $r11;

        $r12 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.DebugViewProvider access$1000(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.DebugViewProvider debugViewProvider> = $r12;

        $r13 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.Clock access$1100(androidx.media3.transformer.Transformer)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.Clock clock> = $r13;

        return;
    }

    public androidx.media3.transformer.Transformer$Builder setTransformationRequest(androidx.media3.transformer.TransformationRequest)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.TransformationRequest r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.TransformationRequest;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest> = r1;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setVideoEffects(java.util.List)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        java.util.List r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r1);

        r0.<androidx.media3.transformer.Transformer$Builder: com.google.common.collect.ImmutableList videoEffects> = $r2;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setRemoveAudio(boolean)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.transformer.Transformer$Builder: boolean removeAudio> = z0;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setRemoveVideo(boolean)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        boolean z0;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.transformer.Transformer$Builder: boolean removeVideo> = z0;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setFlattenForSlowMotion(boolean)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        boolean z0;
        androidx.media3.transformer.TransformationRequest $r1, $r4;
        androidx.media3.transformer.TransformationRequest$Builder $r2, $r3;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r2 = virtualinvoke $r1.<androidx.media3.transformer.TransformationRequest: androidx.media3.transformer.TransformationRequest$Builder buildUpon()>();

        $r3 = virtualinvoke $r2.<androidx.media3.transformer.TransformationRequest$Builder: androidx.media3.transformer.TransformationRequest$Builder setFlattenForSlowMotion(boolean)>(z0);

        $r4 = virtualinvoke $r3.<androidx.media3.transformer.TransformationRequest$Builder: androidx.media3.transformer.TransformationRequest build()>();

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest> = $r4;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setListener(androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Transformer$Listener r1;
        androidx.media3.common.util.ListenerSet $r2, $r3;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void clear()>();

        $r3 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r3.<androidx.media3.common.util.ListenerSet: void add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder addListener(androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Transformer$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder removeListener(androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Transformer$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void remove(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder removeAllListeners()
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.common.util.ListenerSet $r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        $r1 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r1.<androidx.media3.common.util.ListenerSet: void clear()>();

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setMediaSourceFactory(androidx.media3.exoplayer.source.MediaSource$Factory)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.exoplayer.source.MediaSource$Factory r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$Factory;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory> = r1;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setDecoderFactory(androidx.media3.transformer.Codec$DecoderFactory)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Codec$DecoderFactory r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Codec$DecoderFactory;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = r1;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setEncoderFactory(androidx.media3.transformer.Codec$EncoderFactory)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Codec$EncoderFactory r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Codec$EncoderFactory;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = r1;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setFrameProcessorFactory(androidx.media3.common.FrameProcessor$Factory)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.common.FrameProcessor$Factory r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.common.FrameProcessor$Factory;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = r1;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setMuxerFactory(androidx.media3.transformer.Muxer$Factory)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Muxer$Factory r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Muxer$Factory;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Muxer$Factory muxerFactory> = r1;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setLooper(android.os.Looper)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        android.os.Looper r1;
        androidx.media3.common.util.ListenerSet $r2, $r4;
        androidx.media3.common.util.ListenerSet$IterationFinishedEvent $r3;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: android.os.Looper;

        r0.<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper> = r1;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        $r3 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$IterationFinishedEvent ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,androidx.media3.common.FlagSet), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.transformer.Transformer$Builder: void lambda$setLooper$1(androidx.media3.transformer.Transformer$Listener,androidx.media3.common.FlagSet)>, methodtype: void __METHODTYPE__(androidx.media3.transformer.Transformer$Listener,androidx.media3.common.FlagSet));

        $r4 = virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: androidx.media3.common.util.ListenerSet copy(android.os.Looper,androidx.media3.common.util.ListenerSet$IterationFinishedEvent)>(r1, $r3);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners> = $r4;

        return r0;
    }

    public androidx.media3.transformer.Transformer$Builder setDebugViewProvider(androidx.media3.common.DebugViewProvider)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.common.DebugViewProvider r1;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.common.DebugViewProvider;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.DebugViewProvider debugViewProvider> = r1;

        return r0;
    }

    androidx.media3.transformer.Transformer$Builder setClock(androidx.media3.common.util.Clock)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.common.util.Clock r1;
        androidx.media3.common.util.ListenerSet $r2, $r5;
        android.os.Looper $r3;
        androidx.media3.common.util.ListenerSet$IterationFinishedEvent $r4;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.common.util.Clock;

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.Clock clock> = r1;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        $r3 = r0.<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper>;

        $r4 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$IterationFinishedEvent ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,androidx.media3.common.FlagSet), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.transformer.Transformer$Builder: void lambda$setClock$2(androidx.media3.transformer.Transformer$Listener,androidx.media3.common.FlagSet)>, methodtype: void __METHODTYPE__(androidx.media3.transformer.Transformer$Listener,androidx.media3.common.FlagSet));

        $r5 = virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: androidx.media3.common.util.ListenerSet copy(android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent)>($r3, r1, $r4);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners> = $r5;

        return r0;
    }

    public androidx.media3.transformer.Transformer build()
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.extractor.DefaultExtractorsFactory r1, $r9;
        android.content.Context $r2, $r12, $r19;
        androidx.media3.transformer.TransformationRequest $r4, $r6, $r10, $r14, $r16, $r20;
        java.lang.String $r5, $r7, $r15, $r17;
        androidx.media3.exoplayer.source.MediaSource$Factory $r8, $r23;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.source.DefaultMediaSourceFactory $r11;
        androidx.media3.transformer.Transformer $r18;
        com.google.common.collect.ImmutableList $r21;
        androidx.media3.common.util.ListenerSet $r22;
        androidx.media3.transformer.Codec$DecoderFactory $r24;
        androidx.media3.transformer.Codec$EncoderFactory $r25;
        androidx.media3.common.FrameProcessor$Factory $r26;
        androidx.media3.transformer.Muxer$Factory $r27;
        android.os.Looper $r28;
        androidx.media3.common.DebugViewProvider $r29;
        androidx.media3.common.util.Clock $r30;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r5 = $r4.<androidx.media3.transformer.TransformationRequest: java.lang.String audioMimeType>;

        if $r5 == null goto label1;

        $r16 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r17 = $r16.<androidx.media3.transformer.TransformationRequest: java.lang.String audioMimeType>;

        specialinvoke r0.<androidx.media3.transformer.Transformer$Builder: void checkSampleMimeType(java.lang.String)>($r17);

     label1:
        $r6 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r7 = $r6.<androidx.media3.transformer.TransformationRequest: java.lang.String videoMimeType>;

        if $r7 == null goto label2;

        $r14 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r15 = $r14.<androidx.media3.transformer.TransformationRequest: java.lang.String videoMimeType>;

        specialinvoke r0.<androidx.media3.transformer.Transformer$Builder: void checkSampleMimeType(java.lang.String)>($r15);

     label2:
        $r8 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>;

        if $r8 != null goto label4;

        $r9 = new androidx.media3.extractor.DefaultExtractorsFactory;

        specialinvoke $r9.<androidx.media3.extractor.DefaultExtractorsFactory: void <init>()>();

        r1 = $r9;

        $r10 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $z0 = $r10.<androidx.media3.transformer.TransformationRequest: boolean flattenForSlowMotion>;

        if $z0 == 0 goto label3;

        virtualinvoke r1.<androidx.media3.extractor.DefaultExtractorsFactory: androidx.media3.extractor.DefaultExtractorsFactory setMp4ExtractorFlags(int)>(4);

     label3:
        $r11 = new androidx.media3.exoplayer.source.DefaultMediaSourceFactory;

        $r12 = r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context>;

        specialinvoke $r11.<androidx.media3.exoplayer.source.DefaultMediaSourceFactory: void <init>(android.content.Context,androidx.media3.extractor.ExtractorsFactory)>($r12, r1);

        r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory> = $r11;

     label4:
        $r18 = new androidx.media3.transformer.Transformer;

        $r19 = r0.<androidx.media3.transformer.Transformer$Builder: android.content.Context context>;

        $r20 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r21 = r0.<androidx.media3.transformer.Transformer$Builder: com.google.common.collect.ImmutableList videoEffects>;

        $z1 = r0.<androidx.media3.transformer.Transformer$Builder: boolean removeAudio>;

        $z2 = r0.<androidx.media3.transformer.Transformer$Builder: boolean removeVideo>;

        $r22 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.ListenerSet listeners>;

        $r23 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>;

        $r24 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>;

        $r25 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        $r26 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>;

        $r27 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        $r28 = r0.<androidx.media3.transformer.Transformer$Builder: android.os.Looper looper>;

        $r29 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.DebugViewProvider debugViewProvider>;

        $r30 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.common.util.Clock clock>;

        specialinvoke $r18.<androidx.media3.transformer.Transformer: void <init>(android.content.Context,androidx.media3.transformer.TransformationRequest,com.google.common.collect.ImmutableList,boolean,boolean,androidx.media3.common.util.ListenerSet,androidx.media3.exoplayer.source.MediaSource$Factory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.common.FrameProcessor$Factory,androidx.media3.transformer.Muxer$Factory,android.os.Looper,androidx.media3.common.DebugViewProvider,androidx.media3.common.util.Clock,androidx.media3.transformer.Transformer$1)>($r19, $r20, $r21, $z1, $z2, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, null);

        return $r18;
    }

    private void checkSampleMimeType(java.lang.String)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        java.lang.String r1, $r7;
        androidx.media3.transformer.Muxer$Factory $r2;
        int $i0;
        com.google.common.collect.ImmutableList $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.transformer.Transformer$Builder: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        $i0 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<androidx.media3.transformer.Muxer$Factory: com.google.common.collect.ImmutableList getSupportedSampleMimeTypes(int)>($i0);

        $z0 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: boolean contains(java.lang.Object)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported sample MIME type ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z0, $r7);

        return;
    }

    private static void lambda$setClock$2(androidx.media3.transformer.Transformer$Listener, androidx.media3.common.FlagSet)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.FlagSet r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter1: androidx.media3.common.FlagSet;

        return;
    }

    private static void lambda$setLooper$1(androidx.media3.transformer.Transformer$Listener, androidx.media3.common.FlagSet)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.FlagSet r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter1: androidx.media3.common.FlagSet;

        return;
    }

    private static void lambda$new$0(androidx.media3.transformer.Transformer$Listener, androidx.media3.common.FlagSet)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.FlagSet r1;

        r0 := @parameter0: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter1: androidx.media3.common.FlagSet;

        return;
    }

    void <init>(androidx.media3.transformer.Transformer, androidx.media3.transformer.Transformer$1)
    {
        androidx.media3.transformer.Transformer$Builder r0;
        androidx.media3.transformer.Transformer r1;
        androidx.media3.transformer.Transformer$1 r2;

        r0 := @this: androidx.media3.transformer.Transformer$Builder;

        r1 := @parameter0: androidx.media3.transformer.Transformer;

        r2 := @parameter1: androidx.media3.transformer.Transformer$1;

        specialinvoke r0.<androidx.media3.transformer.Transformer$Builder: void <init>(androidx.media3.transformer.Transformer)>(r1);

        return;
    }

androidx.media3.transformer.Transformer$ComponentListener
<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.transformer.Transformer$ComponentListener: android.os.Handler handler>
<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>
    public void <init>(androidx.media3.transformer.Transformer, androidx.media3.common.MediaItem, android.os.Looper)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.Transformer r1;
        androidx.media3.common.MediaItem r2;
        android.os.Looper r3;
        android.os.Handler $r4;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.Transformer;

        r2 := @parameter1: androidx.media3.common.MediaItem;

        r3 := @parameter2: android.os.Looper;

        r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.common.MediaItem mediaItem> = r2;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>(r3);

        r0.<androidx.media3.transformer.Transformer$ComponentListener: android.os.Handler handler> = $r4;

        return;
    }

    public void onError(java.lang.Exception)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        java.lang.Exception r1;
        androidx.media3.transformer.TransformationException r2, $r4;
        boolean $z0;
        androidx.media3.common.PlaybackException $r3;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: java.lang.Exception;

        $z0 = r1 instanceof androidx.media3.common.PlaybackException;

        if $z0 == 0 goto label1;

        $r3 = (androidx.media3.common.PlaybackException) r1;

        $r4 = staticinvoke <androidx.media3.transformer.TransformationException: androidx.media3.transformer.TransformationException createForPlaybackException(androidx.media3.common.PlaybackException)>($r3);

        goto label2;

     label1:
        $r4 = staticinvoke <androidx.media3.transformer.TransformationException: androidx.media3.transformer.TransformationException createForUnexpected(java.lang.Exception)>(r1);

     label2:
        r2 = $r4;

        specialinvoke r0.<androidx.media3.transformer.Transformer$ComponentListener: void handleTransformationException(androidx.media3.transformer.TransformationException)>(r2);

        return;
    }

    public void onEnded()
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        specialinvoke r0.<androidx.media3.transformer.Transformer$ComponentListener: void handleTransformationEnded(androidx.media3.transformer.TransformationException)>(null);

        return;
    }

    public void onTransformationException(androidx.media3.transformer.TransformationException)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.TransformationException r1;
        android.os.Looper $r2, $r4;
        androidx.media3.transformer.Transformer $r3;
        android.os.Handler $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.TransformationException;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $r4 = staticinvoke <androidx.media3.transformer.Transformer: android.os.Looper access$900(androidx.media3.transformer.Transformer)>($r3);

        if $r2 != $r4 goto label1;

        specialinvoke r0.<androidx.media3.transformer.Transformer$ComponentListener: void handleTransformationException(androidx.media3.transformer.TransformationException)>(r1);

        goto label2;

     label1:
        $r5 = r0.<androidx.media3.transformer.Transformer$ComponentListener: android.os.Handler handler>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.transformer.Transformer$ComponentListener,androidx.media3.transformer.TransformationException)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.transformer.Transformer$ComponentListener: void lambda$onTransformationException$0(androidx.media3.transformer.TransformationException)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    private void handleTransformationException(androidx.media3.transformer.TransformationException)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.TransformationException r1;
        androidx.media3.transformer.Transformer $r2, $r3, $r6;
        boolean $z0;
        androidx.media3.common.util.ListenerSet $r4, $r7;
        androidx.media3.common.util.ListenerSet$Event $r5;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.TransformationException;

        $r2 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $z0 = staticinvoke <androidx.media3.transformer.Transformer: boolean access$1400(androidx.media3.transformer.Transformer)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $r4 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)>($r3);

        $r5 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.transformer.Transformer$ComponentListener,androidx.media3.transformer.TransformationException)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.transformer.Transformer$ComponentListener: void lambda$handleTransformationException$1(androidx.media3.transformer.TransformationException,androidx.media3.transformer.Transformer$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.transformer.Transformer$Listener));

        virtualinvoke $r4.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(-1, $r5);

        $r6 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $r7 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)>($r6);

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

        goto label2;

     label1:
        specialinvoke r0.<androidx.media3.transformer.Transformer$ComponentListener: void handleTransformationEnded(androidx.media3.transformer.TransformationException)>(r1);

     label2:
        return;
    }

    private void handleTransformationEnded(androidx.media3.transformer.TransformationException)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.MuxerWrapper r1, $r6;
        androidx.media3.transformer.Transformer $r2, $r3, $r11, $r13, $r16, $r18;
        androidx.media3.transformer.TransformationResult$Builder $r4, $r7, $r8, $r9, $r10, $r12;
        java.lang.Object $r5;
        long $l0, $l4;
        int $i1, $i2, $i3;
        androidx.media3.common.util.ListenerSet $r14, $r17, $r19;
        androidx.media3.common.util.ListenerSet$Event $r15, $r20;
        java.lang.Throwable $r21, r24;
        androidx.media3.transformer.TransformationException r22, r23, r25;
        androidx.media3.transformer.TransformationResult r26;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r22 := @parameter0: androidx.media3.transformer.TransformationException;

        $r2 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        r1 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.transformer.MuxerWrapper access$1500(androidx.media3.transformer.Transformer)>($r2);

        r23 = null;

     label1:
        $r3 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        staticinvoke <androidx.media3.transformer.Transformer: void access$1600(androidx.media3.transformer.Transformer,boolean)>($r3, 0);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        r24 = $r21;

        r23 = staticinvoke <androidx.media3.transformer.TransformationException: androidx.media3.transformer.TransformationException createForUnexpected(java.lang.Exception)>(r24);

     label4:
        if r22 != null goto label5;

        r22 = r23;

     label5:
        if r22 == null goto label6;

        r25 = r22;

        $r18 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $r19 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)>($r18);

        $r20 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.transformer.Transformer$ComponentListener,androidx.media3.transformer.TransformationException)>(r0, r25) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.transformer.Transformer$ComponentListener: void lambda$handleTransformationEnded$2(androidx.media3.transformer.TransformationException,androidx.media3.transformer.Transformer$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.transformer.Transformer$Listener));

        virtualinvoke $r19.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(-1, $r20);

        goto label7;

     label6:
        $r4 = new androidx.media3.transformer.TransformationResult$Builder;

        specialinvoke $r4.<androidx.media3.transformer.TransformationResult$Builder: void <init>()>();

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (androidx.media3.transformer.MuxerWrapper) $r5;

        $l0 = virtualinvoke $r6.<androidx.media3.transformer.MuxerWrapper: long getDurationMs()>();

        $r7 = virtualinvoke $r4.<androidx.media3.transformer.TransformationResult$Builder: androidx.media3.transformer.TransformationResult$Builder setDurationMs(long)>($l0);

        $i1 = virtualinvoke r1.<androidx.media3.transformer.MuxerWrapper: int getTrackAverageBitrate(int)>(1);

        $r8 = virtualinvoke $r7.<androidx.media3.transformer.TransformationResult$Builder: androidx.media3.transformer.TransformationResult$Builder setAverageAudioBitrate(int)>($i1);

        $i2 = virtualinvoke r1.<androidx.media3.transformer.MuxerWrapper: int getTrackAverageBitrate(int)>(2);

        $r9 = virtualinvoke $r8.<androidx.media3.transformer.TransformationResult$Builder: androidx.media3.transformer.TransformationResult$Builder setAverageVideoBitrate(int)>($i2);

        $i3 = virtualinvoke r1.<androidx.media3.transformer.MuxerWrapper: int getTrackSampleCount(int)>(2);

        $r10 = virtualinvoke $r9.<androidx.media3.transformer.TransformationResult$Builder: androidx.media3.transformer.TransformationResult$Builder setVideoFrameCount(int)>($i3);

        $r11 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $l4 = staticinvoke <androidx.media3.transformer.Transformer: long access$1700(androidx.media3.transformer.Transformer)>($r11);

        $r12 = virtualinvoke $r10.<androidx.media3.transformer.TransformationResult$Builder: androidx.media3.transformer.TransformationResult$Builder setFileSizeBytes(long)>($l4);

        r26 = virtualinvoke $r12.<androidx.media3.transformer.TransformationResult$Builder: androidx.media3.transformer.TransformationResult build()>();

        $r13 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $r14 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)>($r13);

        $r15 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.transformer.Transformer$ComponentListener,androidx.media3.transformer.TransformationResult)>(r0, r26) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.transformer.Transformer$ComponentListener: void lambda$handleTransformationEnded$3(androidx.media3.transformer.TransformationResult,androidx.media3.transformer.Transformer$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.transformer.Transformer$Listener));

        virtualinvoke $r14.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(-1, $r15);

     label7:
        $r16 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.transformer.Transformer this$0>;

        $r17 = staticinvoke <androidx.media3.transformer.Transformer: androidx.media3.common.util.ListenerSet access$500(androidx.media3.transformer.Transformer)>($r16);

        virtualinvoke $r17.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void lambda$handleTransformationEnded$3(androidx.media3.transformer.TransformationResult, androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.TransformationResult r1;
        androidx.media3.transformer.Transformer$Listener r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.TransformationResult;

        r2 := @parameter1: androidx.media3.transformer.Transformer$Listener;

        $r3 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.common.MediaItem mediaItem>;

        interfaceinvoke r2.<androidx.media3.transformer.Transformer$Listener: void onTransformationCompleted(androidx.media3.common.MediaItem,androidx.media3.transformer.TransformationResult)>($r3, r1);

        return;
    }

    private void lambda$handleTransformationEnded$2(androidx.media3.transformer.TransformationException, androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.TransformationException r1;
        androidx.media3.transformer.Transformer$Listener r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.TransformationException;

        r2 := @parameter1: androidx.media3.transformer.Transformer$Listener;

        $r3 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.common.MediaItem mediaItem>;

        interfaceinvoke r2.<androidx.media3.transformer.Transformer$Listener: void onTransformationError(androidx.media3.common.MediaItem,androidx.media3.transformer.TransformationException)>($r3, r1);

        return;
    }

    private void lambda$handleTransformationException$1(androidx.media3.transformer.TransformationException, androidx.media3.transformer.Transformer$Listener)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.TransformationException r1;
        androidx.media3.transformer.Transformer$Listener r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.TransformationException;

        r2 := @parameter1: androidx.media3.transformer.Transformer$Listener;

        $r3 = r0.<androidx.media3.transformer.Transformer$ComponentListener: androidx.media3.common.MediaItem mediaItem>;

        interfaceinvoke r2.<androidx.media3.transformer.Transformer$Listener: void onTransformationError(androidx.media3.common.MediaItem,androidx.media3.transformer.TransformationException)>($r3, r1);

        return;
    }

    private void lambda$onTransformationException$0(androidx.media3.transformer.TransformationException)
    {
        androidx.media3.transformer.Transformer$ComponentListener r0;
        androidx.media3.transformer.TransformationException r1;

        r0 := @this: androidx.media3.transformer.Transformer$ComponentListener;

        r1 := @parameter0: androidx.media3.transformer.TransformationException;

        specialinvoke r0.<androidx.media3.transformer.Transformer$ComponentListener: void handleTransformationException(androidx.media3.transformer.TransformationException)>(r1);

        return;
    }

androidx.media3.transformer.Transformer$Listener
    public void onTransformationCompleted(androidx.media3.common.MediaItem)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.MediaItem r1;

        r0 := @this: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        return;
    }

    public void onTransformationCompleted(androidx.media3.common.MediaItem, androidx.media3.transformer.TransformationResult)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.transformer.TransformationResult r2;

        r0 := @this: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.transformer.TransformationResult;

        interfaceinvoke r0.<androidx.media3.transformer.Transformer$Listener: void onTransformationCompleted(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void onTransformationError(androidx.media3.common.MediaItem, java.lang.Exception)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.MediaItem r1;
        java.lang.Exception r2;
        androidx.media3.transformer.TransformationException $r3;

        r0 := @this: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: java.lang.Exception;

        $r3 = (androidx.media3.transformer.TransformationException) r2;

        interfaceinvoke r0.<androidx.media3.transformer.Transformer$Listener: void onTransformationError(androidx.media3.common.MediaItem,androidx.media3.transformer.TransformationException)>(r1, $r3);

        return;
    }

    public void onTransformationError(androidx.media3.common.MediaItem, androidx.media3.transformer.TransformationException)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.transformer.TransformationException r2;

        r0 := @this: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.transformer.TransformationException;

        return;
    }

    public void onFallbackApplied(androidx.media3.common.MediaItem, androidx.media3.transformer.TransformationRequest, androidx.media3.transformer.TransformationRequest)
    {
        androidx.media3.transformer.Transformer$Listener r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.transformer.TransformationRequest r2, r3;

        r0 := @this: androidx.media3.transformer.Transformer$Listener;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.transformer.TransformationRequest;

        r3 := @parameter2: androidx.media3.transformer.TransformationRequest;

        return;
    }

androidx.media3.transformer.Transformer$ProgressState
