androidx.camera.camera2.internal.compat.workaround.AeFpsRange
<androidx.camera.camera2.internal.compat.workaround.AeFpsRange: android.util.Range mAeTargetFpsRange>
    public void <init>(androidx.camera.core.impl.Quirks)
    {
        androidx.camera.camera2.internal.compat.workaround.AeFpsRange r0;
        androidx.camera.core.impl.Quirks r1;
        androidx.camera.camera2.internal.compat.quirk.AeFpsRangeLegacyQuirk r2;
        androidx.camera.core.impl.Quirk $r3;
        android.util.Range $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.AeFpsRange;

        r1 := @parameter0: androidx.camera.core.impl.Quirks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<androidx.camera.core.impl.Quirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/AeFpsRangeLegacyQuirk;");

        r2 = (androidx.camera.camera2.internal.compat.quirk.AeFpsRangeLegacyQuirk) $r3;

        if r2 != null goto label1;

        r0.<androidx.camera.camera2.internal.compat.workaround.AeFpsRange: android.util.Range mAeTargetFpsRange> = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<androidx.camera.camera2.internal.compat.quirk.AeFpsRangeLegacyQuirk: android.util.Range getRange()>();

        r0.<androidx.camera.camera2.internal.compat.workaround.AeFpsRange: android.util.Range mAeTargetFpsRange> = $r4;

     label2:
        return;
    }

    public void addAeFpsRangeOptions(androidx.camera.camera2.impl.Camera2ImplConfig$Builder)
    {
        androidx.camera.camera2.internal.compat.workaround.AeFpsRange r0;
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r1;
        android.util.Range $r2, $r3;
        android.hardware.camera2.CaptureRequest$Key $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.AeFpsRange;

        r1 := @parameter0: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        $r2 = r0.<androidx.camera.camera2.internal.compat.workaround.AeFpsRange: android.util.Range mAeTargetFpsRange>;

        if $r2 == null goto label1;

        $r4 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        $r3 = r0.<androidx.camera.camera2.internal.compat.workaround.AeFpsRange: android.util.Range mAeTargetFpsRange>;

        virtualinvoke r1.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.camera2.impl.Camera2ImplConfig$Builder setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r4, $r3);

     label1:
        return;
    }

