androidx.media3.test.utils.TimelineAsserts
<androidx.media3.test.utils.TimelineAsserts: int[] REPEAT_MODES>
    public static void assertEmpty(androidx.media3.common.Timeline)
    {
        androidx.media3.common.Timeline r0;
        boolean[] r1, $r4;
        int i0, $i1, $i2, i3;
        boolean z0;
        java.lang.Object[] $r2;
        int[] $r3;
        java.lang.Integer $r5, $r7, $r8, $r10;
        com.google.common.truth.IntegerSubject $r6, $r9;

        r0 := @parameter0: androidx.media3.common.Timeline;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.media3.test.utils.TimelineAsserts: void assertWindowTags(androidx.media3.common.Timeline,java.lang.Object[])>(r0, $r2);

        $r3 = newarray (int)[0];

        staticinvoke <androidx.media3.test.utils.TimelineAsserts: void assertPeriodCounts(androidx.media3.common.Timeline,int[])>(r0, $r3);

        $r4 = newarray (boolean)[2];

        $r4[0] = 0;

        $r4[1] = 1;

        r1 = $r4;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        z0 = r1[i3];

        $i1 = virtualinvoke r0.<androidx.media3.common.Timeline: int getFirstWindowIndex(boolean)>(z0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r5);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r6.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r7);

        $i2 = virtualinvoke r0.<androidx.media3.common.Timeline: int getLastWindowIndex(boolean)>(z0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r9 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r8);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r9.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r10);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public static transient void assertWindowTags(androidx.media3.common.Timeline, java.lang.Object[])
    {
        androidx.media3.common.Timeline r0;
        java.lang.Object[] r1;
        androidx.media3.common.Timeline$Window r2, $r4;
        androidx.media3.common.MediaItem$LocalConfiguration r3, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.Integer $r5, $r7;
        com.google.common.truth.IntegerSubject $r6;
        java.lang.Object $r9, $r12, $r14, $r16;
        androidx.media3.common.MediaItem $r10;
        com.google.common.truth.Subject $r11, $r15;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: java.lang.Object[];

        $r4 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r4.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = $r4;

        $i0 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r5);

        $i1 = lengthof r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r6.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r7);

        i3 = 0;

     label1:
        $i2 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i3 >= $i2 goto label3;

        virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i3, r2);

        $r9 = r1[i3];

        if $r9 == null goto label2;

        $r10 = r2.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        r3 = $r10.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r11 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>(r3);

        virtualinvoke $r11.<com.google.common.truth.Subject: void isNotNull()>();

        $r12 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>(r3);

        $r13 = (androidx.media3.common.MediaItem$LocalConfiguration) $r12;

        $r14 = $r13.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.Object tag>;

        $r15 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>($r14);

        $r16 = r1[i3];

        virtualinvoke $r15.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>($r16);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    public static transient void assertWindowIsDynamic(androidx.media3.common.Timeline, boolean[])
    {
        androidx.media3.common.Timeline r0;
        boolean[] r1;
        androidx.media3.common.Timeline$Window r2, $r3;
        int $i0, i1;
        boolean $z0, $z1;
        java.lang.Boolean $r5, $r7;
        com.google.common.truth.BooleanSubject $r6;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: boolean[];

        $r3 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r3.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = $r3;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i1, r2);

        $z0 = r2.<androidx.media3.common.Timeline$Window: boolean isDynamic>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r5);

        $z1 = r1[i1];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r6.<com.google.common.truth.BooleanSubject: void isEqualTo(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static transient void assertPreviousWindowIndices(androidx.media3.common.Timeline, int, boolean, int[])
    {
        androidx.media3.common.Timeline r0;
        int i0, $i1, $i2, $i3, i4;
        boolean z0;
        int[] r1;
        java.lang.Integer $r2, $r4;
        com.google.common.truth.IntegerSubject $r3;

        r0 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: int[];

        i4 = 0;

     label1:
        $i1 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i4 >= $i1 goto label2;

        $i2 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPreviousWindowIndex(int,int,boolean)>(i4, i0, z0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r2);

        $i3 = r1[i4];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static transient void assertNextWindowIndices(androidx.media3.common.Timeline, int, boolean, int[])
    {
        androidx.media3.common.Timeline r0;
        int i0, $i1, $i2, $i3, i4;
        boolean z0;
        int[] r1;
        java.lang.Integer $r2, $r4;
        com.google.common.truth.IntegerSubject $r3;

        r0 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: int[];

        i4 = 0;

     label1:
        $i1 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i4 >= $i1 goto label2;

        $i2 = virtualinvoke r0.<androidx.media3.common.Timeline: int getNextWindowIndex(int,int,boolean)>(i4, i0, z0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r2);

        $i3 = r1[i4];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static void assertEqualPreviousWindowIndices(androidx.media3.common.Timeline, androidx.media3.common.Timeline, int, boolean)
    {
        androidx.media3.common.Timeline r0, r1;
        int i0, $i1, $i2, $i3, i4;
        boolean z0;
        java.lang.Integer $r2, $r4;
        com.google.common.truth.IntegerSubject $r3;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: androidx.media3.common.Timeline;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i4 = 0;

     label1:
        $i1 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i4 >= $i1 goto label2;

        $i2 = virtualinvoke r1.<androidx.media3.common.Timeline: int getPreviousWindowIndex(int,int,boolean)>(i4, i0, z0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r2);

        $i3 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPreviousWindowIndex(int,int,boolean)>(i4, i0, z0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static void assertEqualNextWindowIndices(androidx.media3.common.Timeline, androidx.media3.common.Timeline, int, boolean)
    {
        androidx.media3.common.Timeline r0, r1;
        int i0, $i1, $i2, $i3, i4;
        boolean z0;
        java.lang.Integer $r2, $r4;
        com.google.common.truth.IntegerSubject $r3;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: androidx.media3.common.Timeline;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i4 = 0;

     label1:
        $i1 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i4 >= $i1 goto label2;

        $i2 = virtualinvoke r1.<androidx.media3.common.Timeline: int getNextWindowIndex(int,int,boolean)>(i4, i0, z0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r2);

        $i3 = virtualinvoke r0.<androidx.media3.common.Timeline: int getNextWindowIndex(int,int,boolean)>(i4, i0, z0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static transient void assertPeriodDurations(androidx.media3.common.Timeline, long[])
    {
        androidx.media3.common.Timeline r0;
        long[] r1;
        int i0, $i1, i4;
        androidx.media3.common.Timeline$Period r2, $r6, $r7;
        java.lang.Integer $r3, $r5;
        com.google.common.truth.IntegerSubject $r4;
        long $l2, $l3;
        java.lang.Long $r8, $r10;
        com.google.common.truth.LongSubject $r9;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: long[];

        i0 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPeriodCount()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r3);

        $i1 = lengthof r1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r4.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r5);

        $r6 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r6.<androidx.media3.common.Timeline$Period: void <init>()>();

        r2 = $r6;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r7 = virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i4, r2);

        $l2 = $r7.<androidx.media3.common.Timeline$Period: long durationUs>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r9 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.LongSubject assertThat(java.lang.Long)>($r8);

        $l3 = r1[i4];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r9.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r10);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static transient void assertPeriodCounts(androidx.media3.common.Timeline, int[])
    {
        androidx.media3.common.Timeline r0;
        int[] r1, r2, r5;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i36, $i37;
        androidx.media3.common.Timeline$Period r3, $r13;
        java.lang.Object r4, $r18, $r22;
        java.lang.Integer $r6, $r8, $r9, $r11, $r15, $r17, $r19, $r21, $r24, $r26, $r27, $r29, $r31, $r33, $r34, $r36;
        com.google.common.truth.IntegerSubject $r7, $r10, $r16, $r20, $r25, $r28, $r32, $r35;
        androidx.media3.common.Timeline$Window $r12, r37;
        com.google.common.truth.Subject $r23;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: int[];

        i0 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r6);

        $i5 = lengthof r1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r7.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r8);

        $i6 = i0 + 1;

        r2 = newarray (int)[$i6];

        r2[0] = 0;

        i32 = 0;

     label01:
        if i32 >= i0 goto label02;

        $i31 = i32 + 1;

        $i29 = r2[i32];

        $i28 = r1[i32];

        $i30 = $i29 + $i28;

        r2[$i31] = $i30;

        i32 = i32 + 1;

        goto label01;

     label02:
        $i7 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPeriodCount()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r10 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r9);

        $i8 = lengthof r2;

        $i9 = $i8 - 1;

        $i10 = r2[$i9];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r10.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r11);

        $r12 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r12.<androidx.media3.common.Timeline$Window: void <init>()>();

        r37 = $r12;

        $r13 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r13.<androidx.media3.common.Timeline$Period: void <init>()>();

        r3 = $r13;

        i33 = 0;

     label03:
        if i33 >= i0 goto label04;

        virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i33, r37);

        $i22 = r37.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        $r32 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r31);

        $i23 = r2[i33];

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        virtualinvoke $r32.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r33);

        $i24 = r37.<androidx.media3.common.Timeline$Window: int lastPeriodIndex>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        $r35 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r34);

        $i25 = i33 + 1;

        $i26 = r2[$i25];

        $i27 = $i26 - 1;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        virtualinvoke $r35.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r36);

        i33 = i33 + 1;

        goto label03;

     label04:
        i34 = 0;

        i35 = 0;

     label05:
        $i11 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPeriodCount()>();

        if i35 >= $i11 goto label14;

        virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i35, r3, 1);

     label06:
        $i12 = i34 + 1;

        $i13 = r2[$i12];

        if i35 < $i13 goto label07;

        i34 = i34 + 1;

        goto label06;

     label07:
        $i14 = r3.<androidx.media3.common.Timeline$Period: int windowIndex>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r16 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r15);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i34);

        virtualinvoke $r16.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r17);

        $r18 = r3.<androidx.media3.common.Timeline$Period: java.lang.Object uid>;

        r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r18);

        $i15 = virtualinvoke r0.<androidx.media3.common.Timeline: int getIndexOfPeriod(java.lang.Object)>(r4);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r20 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r19);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i35);

        virtualinvoke $r20.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r21);

        $r22 = virtualinvoke r0.<androidx.media3.common.Timeline: java.lang.Object getUidOfPeriod(int)>(i35);

        $r23 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>($r22);

        virtualinvoke $r23.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>(r4);

        r5 = <androidx.media3.test.utils.TimelineAsserts: int[] REPEAT_MODES>;

        i1 = lengthof r5;

        i36 = 0;

     label08:
        if i36 >= i1 goto label13;

        i2 = r5[i36];

        $i16 = i34 + 1;

        $i17 = r2[$i16];

        $i18 = $i17 - 1;

        if i35 >= $i18 goto label09;

        $i20 = virtualinvoke r0.<androidx.media3.common.Timeline: int getNextPeriodIndex(int,androidx.media3.common.Timeline$Period,androidx.media3.common.Timeline$Window,int,boolean)>(i35, r3, r37, i2, 0);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r28 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r27);

        $i21 = i35 + 1;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        virtualinvoke $r28.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r29);

        goto label12;

     label09:
        i3 = virtualinvoke r0.<androidx.media3.common.Timeline: int getNextWindowIndex(int,int,boolean)>(i34, i2, 0);

        if i3 != -1 goto label10;

        $i37 = -1;

        goto label11;

     label10:
        $i37 = r2[i3];

     label11:
        i4 = $i37;

        $i19 = virtualinvoke r0.<androidx.media3.common.Timeline: int getNextPeriodIndex(int,androidx.media3.common.Timeline$Period,androidx.media3.common.Timeline$Window,int,boolean)>(i35, r3, r37, i2, 0);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r25 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r24);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke $r25.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r26);

     label12:
        i36 = i36 + 1;

        goto label08;

     label13:
        i35 = i35 + 1;

        goto label05;

     label14:
        return;
    }

    public static transient void assertAdGroupCounts(androidx.media3.common.Timeline, int[])
    {
        androidx.media3.common.Timeline r0;
        int[] r1;
        androidx.media3.common.Timeline$Period r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.Integer $r5, $r7;
        com.google.common.truth.IntegerSubject $r6;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: int[];

        $r3 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r3.<androidx.media3.common.Timeline$Period: void <init>()>();

        r2 = $r3;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPeriodCount()>();

        if i3 >= $i0 goto label2;

        virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i3, r2);

        $i1 = virtualinvoke r2.<androidx.media3.common.Timeline$Period: int getAdGroupCount()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r5);

        $i2 = r1[i3];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r6.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public static void assertEqualsExceptIdsAndManifest(androidx.media3.common.Timeline, androidx.media3.common.Timeline)
    {
        androidx.media3.common.Timeline r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Integer $r2, $r4, $r5, $r7;
        com.google.common.truth.IntegerSubject $r3, $r6;
        androidx.media3.common.Timeline$Period $r8, $r9, $r10, $r11, r18, r19;
        androidx.media3.common.Timeline$Window $r12, $r13, $r14, $r15, r16, r17;

        r0 := @parameter0: androidx.media3.common.Timeline;

        r1 := @parameter1: androidx.media3.common.Timeline;

        $i0 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r2);

        $i1 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r3.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r4);

        i6 = 0;

     label1:
        $i2 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i6 >= $i2 goto label2;

        $r12 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r12.<androidx.media3.common.Timeline$Window: void <init>()>();

        r16 = $r12;

        $r13 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r13.<androidx.media3.common.Timeline$Window: void <init>()>();

        r17 = $r13;

        $r14 = virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long)>(i6, r16, 0L);

        $r15 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long)>(i6, r17, 0L);

        staticinvoke <androidx.media3.test.utils.TimelineAsserts: void assertWindowEqualsExceptUidAndManifest(androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Window)>($r14, $r15);

        i6 = i6 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke r1.<androidx.media3.common.Timeline: int getPeriodCount()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r5);

        $i4 = virtualinvoke r0.<androidx.media3.common.Timeline: int getPeriodCount()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r6.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r7);

        i7 = 0;

     label3:
        $i5 = virtualinvoke r1.<androidx.media3.common.Timeline: int getPeriodCount()>();

        if i7 >= $i5 goto label4;

        $r8 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r8.<androidx.media3.common.Timeline$Period: void <init>()>();

        r18 = $r8;

        $r9 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r9.<androidx.media3.common.Timeline$Period: void <init>()>();

        r19 = $r9;

        $r10 = virtualinvoke r0.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i7, r18, 0);

        $r11 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(i7, r19, 0);

        staticinvoke <androidx.media3.test.utils.TimelineAsserts: void assertPeriodEqualsExceptIds(androidx.media3.common.Timeline$Period,androidx.media3.common.Timeline$Period)>($r10, $r11);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public static void assertWindowEqualsExceptUidAndManifest(androidx.media3.common.Timeline$Window, androidx.media3.common.Timeline$Window)
    {
        androidx.media3.common.Timeline$Window r0, r1;
        java.lang.Object r2, r3, $r5, $r6;
        java.lang.Throwable r4, $r8;
        com.google.common.truth.Subject $r7;

        r0 := @parameter0: androidx.media3.common.Timeline$Window;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        r2 = r0.<androidx.media3.common.Timeline$Window: java.lang.Object uid>;

        r3 = r0.<androidx.media3.common.Timeline$Window: java.lang.Object manifest>;

     label1:
        $r5 = r1.<androidx.media3.common.Timeline$Window: java.lang.Object uid>;

        r0.<androidx.media3.common.Timeline$Window: java.lang.Object uid> = $r5;

        $r6 = r1.<androidx.media3.common.Timeline$Window: java.lang.Object manifest>;

        r0.<androidx.media3.common.Timeline$Window: java.lang.Object manifest> = $r6;

        $r7 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>(r1);

        virtualinvoke $r7.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>(r0);

     label2:
        r0.<androidx.media3.common.Timeline$Window: java.lang.Object uid> = r2;

        r0.<androidx.media3.common.Timeline$Window: java.lang.Object manifest> = r3;

        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        r0.<androidx.media3.common.Timeline$Window: java.lang.Object uid> = r2;

        r0.<androidx.media3.common.Timeline$Window: java.lang.Object manifest> = r3;

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void assertPeriodEqualsExceptIds(androidx.media3.common.Timeline$Period, androidx.media3.common.Timeline$Period)
    {
        androidx.media3.common.Timeline$Period r0, r1;
        java.lang.Object r2, r3, $r5, $r6;
        java.lang.Throwable r4, $r8;
        com.google.common.truth.Subject $r7;

        r0 := @parameter0: androidx.media3.common.Timeline$Period;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        r2 = r0.<androidx.media3.common.Timeline$Period: java.lang.Object id>;

        r3 = r0.<androidx.media3.common.Timeline$Period: java.lang.Object uid>;

     label1:
        $r5 = r1.<androidx.media3.common.Timeline$Period: java.lang.Object id>;

        r0.<androidx.media3.common.Timeline$Period: java.lang.Object id> = $r5;

        $r6 = r1.<androidx.media3.common.Timeline$Period: java.lang.Object uid>;

        r0.<androidx.media3.common.Timeline$Period: java.lang.Object uid> = $r6;

        $r7 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>(r1);

        virtualinvoke $r7.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>(r0);

     label2:
        r0.<androidx.media3.common.Timeline$Period: java.lang.Object id> = r2;

        r0.<androidx.media3.common.Timeline$Period: java.lang.Object uid> = r3;

        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        r0.<androidx.media3.common.Timeline$Period: java.lang.Object id> = r2;

        r0.<androidx.media3.common.Timeline$Period: java.lang.Object uid> = r3;

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void <init>()
    {
        androidx.media3.test.utils.TimelineAsserts r0;

        r0 := @this: androidx.media3.test.utils.TimelineAsserts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[3];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 2;

        <androidx.media3.test.utils.TimelineAsserts: int[] REPEAT_MODES> = $r0;

        return;
    }

