androidx.core.graphics.drawable.WrappedDrawableApi14
<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>
<androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor>
<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode>
<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet>
<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>
<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated>
<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>
    void <init>(androidx.core.graphics.drawable.WrappedDrawableState, android.content.res.Resources)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        androidx.core.graphics.drawable.WrappedDrawableState r1;
        android.content.res.Resources r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: androidx.core.graphics.drawable.WrappedDrawableState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState> = r1;

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)>(r2);

        return;
    }

    void <init>(android.graphics.drawable.Drawable)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable r1;
        androidx.core.graphics.drawable.WrappedDrawableState $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()>();

        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState> = $r2;

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    private void updateLocalState(android.content.res.Resources)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.content.res.Resources r1;
        androidx.core.graphics.drawable.WrappedDrawableState $r2, $r3, $r5;
        android.graphics.drawable.Drawable$ConstantState $r4, $r6;
        android.graphics.drawable.Drawable $r7;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r4 = $r3.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r6 = $r5.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState>;

        $r7 = virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(r1);

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>($r7);

     label1:
        return;
    }

    public void jumpToCurrentState()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label1:
        return;
    }

    public void setChangingConfigurations(int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>(i0);

        return;
    }

    public int getChangingConfigurations()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.core.graphics.drawable.WrappedDrawableState $r1, $r3;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $i4 = virtualinvoke $r3.<androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i1 = $i0 | $i4;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        return $i3;
    }

    public void setDither(boolean)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>(z0);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>(z0);

        return;
    }

    public void setAlpha(int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public boolean isStateful()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.content.res.ColorStateList r1, $r5;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.Drawable $r2;
        androidx.core.graphics.drawable.WrappedDrawableState $r3, $r4;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $z0 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r5 = $r4.<androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint>;

        goto label2;

     label1:
        $r5 = null;

     label2:
        r1 = $r5;

        if r1 == null goto label3;

        $z2 = virtualinvoke r1.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z2 != 0 goto label4;

     label3:
        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    public boolean setState(int[])
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0, z1, $z2, z3;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: int[];

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        $z0 = specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>(r1);

        if $z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z3 = $z2;

        return z3;
    }

    public int[] getState()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int[] $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>();

        return $r2;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r2;
    }

    public boolean setVisible(boolean, boolean)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        boolean z0, z1, $z2, $z3, $z4;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        if $z2 != 0 goto label1;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $z3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int getOpacity()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public android.graphics.Region getTransparentRegion()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Region $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $r2;
    }

    public int getIntrinsicWidth()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public int getMinimumWidth()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;
    }

    public int getMinimumHeight()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public void setAutoMirrored(boolean)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r1, z0);

        return;
    }

    public boolean isAutoMirrored()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>($r1);

        return $z0;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($r1, i0);

        return $z0;
    }

    public int getLayoutDirection()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>($r1);

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        androidx.core.graphics.drawable.WrappedDrawableState $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $z0 = virtualinvoke $r2.<androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $i0 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()>();

        $r3.<androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations> = $i0;

        $r4 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        return $r4;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r3, $r5, $r7, $r8;
        androidx.core.graphics.drawable.WrappedDrawableState $r2, $r4, $r6;
        android.graphics.drawable.Drawable$ConstantState $r10;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $z0 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated>;

        if $z0 != 0 goto label5;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label5;

        $r2 = specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()>();

        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState> = $r2;

        $r3 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        $r4 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        if $r4 == null goto label4;

        $r6 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r5 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        if $r5 == null goto label2;

        $r7 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $r10 = virtualinvoke $r7.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        goto label3;

     label2:
        $r10 = null;

     label3:
        $r6.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState> = $r10;

     label4:
        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated> = 1;

     label5:
        return r0;
    }

    private androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        androidx.core.graphics.drawable.WrappedDrawableState $r1, $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = new androidx.core.graphics.drawable.WrappedDrawableState;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        specialinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableState: void <init>(androidx.core.graphics.drawable.WrappedDrawableState)>($r2);

        return $r1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateSelf()>();

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleSelf(java.lang.Runnable,long)>(r2, l0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleSelf(java.lang.Runnable)>(r2);

        return;
    }

    protected boolean onLevelChange(int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z0;
    }

    public void setTint(int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.content.res.ColorStateList r1;
        androidx.core.graphics.drawable.WrappedDrawableState $r2;
        int[] $r3;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r2.<androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint> = r1;

        $r3 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>();

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>($r3);

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.PorterDuff$Mode r1;
        androidx.core.graphics.drawable.WrappedDrawableState $r2;
        int[] $r3;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r2.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode> = r1;

        $r3 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()>();

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>($r3);

        return;
    }

    private boolean updateTint(int[])
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        int[] r1;
        android.content.res.ColorStateList r2;
        android.graphics.PorterDuff$Mode r3, $r6;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        androidx.core.graphics.drawable.WrappedDrawableState $r4, $r5;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: int[];

        $z0 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        r2 = $r4.<androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint>;

        $r5 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        r3 = $r5.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode>;

        if r2 == null goto label4;

        if r3 == null goto label4;

        $i1 = virtualinvoke r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        i0 = virtualinvoke r2.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r1, $i1);

        $z1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet>;

        if $z1 == 0 goto label2;

        $i2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor>;

        if i0 != $i2 goto label2;

        $r6 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode>;

        if r3 == $r6 goto label3;

     label2:
        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, r3);

        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor> = i0;

        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode> = r3;

        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet> = 1;

        return 1;

     label3:
        goto label5;

     label4:
        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet> = 0;

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void clearColorFilter()>();

     label5:
        return 0;
    }

    public final android.graphics.drawable.Drawable getWrappedDrawable()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    public final void setWrappedDrawable(android.graphics.drawable.Drawable)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;
        android.graphics.drawable.Drawable r1, $r2, $r8;
        boolean $z0;
        int[] $r3;
        int $i0;
        android.graphics.Rect $r4;
        androidx.core.graphics.drawable.WrappedDrawableState $r5, $r6;
        android.graphics.drawable.Drawable$ConstantState $r7;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        $r8 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable> = r1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isVisible()>();

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>($z0, 1);

        $r3 = virtualinvoke r1.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>($r3);

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getLevel()>();

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setLevel(int)>($i0);

        $r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setBounds(android.graphics.Rect)>($r4);

        $r5 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState>;

        $r7 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r6.<androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState> = $r7;

     label2:
        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateSelf()>();

        return;
    }

    protected boolean isCompatTintEnabled()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi14 r0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi14;

        return 1;
    }

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> = $r0;

        return;
    }

