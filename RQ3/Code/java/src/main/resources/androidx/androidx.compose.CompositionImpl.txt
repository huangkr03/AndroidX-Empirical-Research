androidx.compose.CompositionImpl
<androidx.compose.CompositionImpl: androidx.compose.Recomposer recomposer>
<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function0 onDispose>
<androidx.compose.CompositionImpl: androidx.compose.SlotTable slotTable>
<androidx.compose.CompositionImpl: androidx.compose.Composer composer>
<androidx.compose.CompositionImpl: boolean isRoot>
<androidx.compose.CompositionImpl: boolean disposed>
<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function3 composable>
    public void <init>(androidx.compose.Recomposer, androidx.compose.CompositionReference, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function0)
    {
        androidx.compose.CompositionImpl r0, r8;
        androidx.compose.Recomposer r1, $r11;
        androidx.compose.CompositionReference r2, r7;
        kotlin.jvm.functions.Function2 r3;
        kotlin.jvm.functions.Function0 r4;
        androidx.compose.Composer r5, r6, r9;
        boolean z0, z1, $z3;
        androidx.compose.SlotTable $r10, $r12;
        java.lang.Object $r13;
        kotlin.jvm.functions.Function3 $r14;

        r0 := @this: androidx.compose.CompositionImpl;

        r1 := @parameter0: androidx.compose.Recomposer;

        r2 := @parameter1: androidx.compose.CompositionReference;

        r3 := @parameter2: kotlin.jvm.functions.Function2;

        r4 := @parameter3: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "recomposer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "composerFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "onDispose");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.CompositionImpl: androidx.compose.Recomposer recomposer> = r1;

        r0.<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function0 onDispose> = r4;

        $r10 = new androidx.compose.SlotTable;

        specialinvoke $r10.<androidx.compose.SlotTable: void <init>(java.lang.Object[],int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r0.<androidx.compose.CompositionImpl: androidx.compose.SlotTable slotTable> = $r10;

        $r12 = r0.<androidx.compose.CompositionImpl: androidx.compose.SlotTable slotTable>;

        $r11 = r0.<androidx.compose.CompositionImpl: androidx.compose.Recomposer recomposer>;

        $r13 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r12, $r11);

        r5 = (androidx.compose.Composer) $r13;

        r8 = r0;

        z0 = 0;

        z1 = 0;

        r6 = r5;

        virtualinvoke r6.<androidx.compose.Composer: void setParentReference$compose_runtime_release(androidx.compose.CompositionReference)>(r2);

        r7 = r2;

        if r7 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r7.<androidx.compose.CompositionReference: void registerComposer$compose_runtime_release(androidx.compose.Composer)>(r6);

     label2:
        r9 = r5;

        r8.<androidx.compose.CompositionImpl: androidx.compose.Composer composer> = r9;

        if r2 != null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<androidx.compose.CompositionImpl: boolean isRoot> = $z3;

        $r14 = staticinvoke <androidx.compose.ComposeKt: kotlin.jvm.functions.Function3 emptyContent()>();

        r0.<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function3 composable> = $r14;

        return;
    }

    public final boolean isRoot()
    {
        androidx.compose.CompositionImpl r0;
        boolean $z0;

        r0 := @this: androidx.compose.CompositionImpl;

        $z0 = r0.<androidx.compose.CompositionImpl: boolean isRoot>;

        return $z0;
    }

    public final kotlin.jvm.functions.Function3 getComposable()
    {
        androidx.compose.CompositionImpl r0;
        kotlin.jvm.functions.Function3 $r1;

        r0 := @this: androidx.compose.CompositionImpl;

        $r1 = r0.<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function3 composable>;

        return $r1;
    }

    public final void setComposable(kotlin.jvm.functions.Function3)
    {
        androidx.compose.CompositionImpl r0;
        kotlin.jvm.functions.Function3 r1;

        r0 := @this: androidx.compose.CompositionImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function3 composable> = r1;

        return;
    }

    public void setContent(kotlin.jvm.functions.Function3)
    {
        androidx.compose.CompositionImpl r0;
        kotlin.jvm.functions.Function3 r1, $r3;
        boolean z0, z1, $z3, $z4, z5;
        androidx.compose.Recomposer $r2;
        androidx.compose.Composer $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;

        r0 := @this: androidx.compose.CompositionImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        $z3 = r0.<androidx.compose.CompositionImpl: boolean disposed>;

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        z1 = 0;

        z5 = 0;

        if z0 != 0 goto label3;

        r8 = "The composition is disposed";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label3:
        virtualinvoke r0.<androidx.compose.CompositionImpl: void setComposable(kotlin.jvm.functions.Function3)>(r1);

        $r2 = r0.<androidx.compose.CompositionImpl: androidx.compose.Recomposer recomposer>;

        $r3 = virtualinvoke r0.<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function3 getComposable()>();

        $r4 = r0.<androidx.compose.CompositionImpl: androidx.compose.Composer composer>;

        virtualinvoke $r2.<androidx.compose.Recomposer: void composeInitial$compose_runtime_release(kotlin.jvm.functions.Function3,androidx.compose.Composer)>($r3, $r4);

        return;
    }

    public void dispose()
    {
        androidx.compose.CompositionImpl r0;
        boolean $z0;
        kotlin.jvm.functions.Function3 $r1;
        androidx.compose.CompositionImpl$dispose$1 $r2;
        androidx.compose.SlotTable $r3;
        kotlin.jvm.functions.Function1 $r4;
        kotlin.jvm.functions.Function0 $r6;

        r0 := @this: androidx.compose.CompositionImpl;

        $z0 = r0.<androidx.compose.CompositionImpl: boolean disposed>;

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <androidx.compose.ComposeKt: kotlin.jvm.functions.Function3 emptyContent()>();

        virtualinvoke r0.<androidx.compose.CompositionImpl: void setContent(kotlin.jvm.functions.Function3)>($r1);

        $r3 = r0.<androidx.compose.CompositionImpl: androidx.compose.SlotTable slotTable>;

        $r2 = new androidx.compose.CompositionImpl$dispose$1;

        specialinvoke $r2.<androidx.compose.CompositionImpl$dispose$1: void <init>(androidx.compose.CompositionImpl)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r2;

        virtualinvoke $r3.<androidx.compose.SlotTable: java.lang.Object read(kotlin.jvm.functions.Function1)>($r4);

        $r6 = r0.<androidx.compose.CompositionImpl: kotlin.jvm.functions.Function0 onDispose>;

        interfaceinvoke $r6.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r0.<androidx.compose.CompositionImpl: boolean disposed> = 1;

     label1:
        return;
    }

    public static final androidx.compose.SlotTable access$getSlotTable$p(androidx.compose.CompositionImpl)
    {
        androidx.compose.CompositionImpl r0;
        androidx.compose.SlotTable $r1;

        r0 := @parameter0: androidx.compose.CompositionImpl;

        $r1 = r0.<androidx.compose.CompositionImpl: androidx.compose.SlotTable slotTable>;

        return $r1;
    }

androidx.compose.CompositionImpl$dispose$1
<androidx.compose.CompositionImpl$dispose$1: androidx.compose.CompositionImpl $this>
    void <init>(androidx.compose.CompositionImpl)
    {
        androidx.compose.CompositionImpl$dispose$1 r0;
        androidx.compose.CompositionImpl $r1;

        r0 := @this: androidx.compose.CompositionImpl$dispose$1;

        $r1 := @parameter0: androidx.compose.CompositionImpl;

        r0.<androidx.compose.CompositionImpl$dispose$1: androidx.compose.CompositionImpl $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.SlotReader)
    {
        androidx.compose.CompositionImpl$dispose$1 r0;
        androidx.compose.SlotReader r1;
        int i0, i1, i2, i3;
        java.lang.Object r2;
        androidx.compose.CompositionImpl $r3;
        androidx.compose.SlotTable $r4;
        boolean $z0;
        androidx.compose.RecomposeScope $r5;

        r0 := @this: androidx.compose.CompositionImpl$dispose$1;

        r1 := @parameter0: androidx.compose.SlotReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        $r3 = r0.<androidx.compose.CompositionImpl$dispose$1: androidx.compose.CompositionImpl $this>;

        $r4 = staticinvoke <androidx.compose.CompositionImpl: androidx.compose.SlotTable access$getSlotTable$p(androidx.compose.CompositionImpl)>($r3);

        i0 = virtualinvoke $r4.<androidx.compose.SlotTable: int getSize()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label3;

        if i3 > i1 goto label3;

     label1:
        i2 = i3;

        i3 = i3 + 1;

        r2 = virtualinvoke r1.<androidx.compose.SlotReader: java.lang.Object get(int)>(i2);

        $z0 = r2 instanceof androidx.compose.RecomposeScope;

        if $z0 == 0 goto label2;

        $r5 = (androidx.compose.RecomposeScope) r2;

        virtualinvoke $r5.<androidx.compose.RecomposeScope: void setInTable(boolean)>(0);

     label2:
        if i3 <= i1 goto label1;

     label3:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.CompositionImpl$dispose$1 r0;
        java.lang.Object r1;
        androidx.compose.SlotReader $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.CompositionImpl$dispose$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.SlotReader) r1;

        virtualinvoke r0.<androidx.compose.CompositionImpl$dispose$1: void invoke(androidx.compose.SlotReader)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

