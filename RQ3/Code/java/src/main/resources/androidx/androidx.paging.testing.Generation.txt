androidx.paging.testing.Generation
<androidx.paging.testing.Generation: int id>
<androidx.paging.testing.Generation: int callbackCount>
<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>
<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>
    public void <init>(int, int, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicInteger)
    {
        androidx.paging.testing.Generation r0;
        int i0, i1;
        java.util.concurrent.atomic.AtomicReference r1;
        java.util.concurrent.atomic.AtomicInteger r2;

        r0 := @this: androidx.paging.testing.Generation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.concurrent.atomic.AtomicReference;

        r2 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callbackState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "lastAccessedIndex");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.testing.Generation: int id> = i0;

        r0.<androidx.paging.testing.Generation: int callbackCount> = i1;

        r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState> = r1;

        r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex> = r2;

        return;
    }

    public void <init>(int, int, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicInteger, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.testing.Generation r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.util.concurrent.atomic.AtomicInteger $r2, r5;
        java.util.concurrent.atomic.AtomicReference $r3, r4;

        r0 := @this: androidx.paging.testing.Generation;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        r4 := @parameter2: java.util.concurrent.atomic.AtomicReference;

        r5 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i5 = -1;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i6 = 0;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r3 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r4 = $r3;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r5 = $r2;

     label4:
        specialinvoke r0.<androidx.paging.testing.Generation: void <init>(int,int,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger)>(i5, i6, r4, r5);

        return;
    }

    public final int getId()
    {
        androidx.paging.testing.Generation r0;
        int $i0;

        r0 := @this: androidx.paging.testing.Generation;

        $i0 = r0.<androidx.paging.testing.Generation: int id>;

        return $i0;
    }

    public final int getCallbackCount()
    {
        androidx.paging.testing.Generation r0;
        int $i0;

        r0 := @this: androidx.paging.testing.Generation;

        $i0 = r0.<androidx.paging.testing.Generation: int callbackCount>;

        return $i0;
    }

    public final java.util.concurrent.atomic.AtomicReference getCallbackState()
    {
        androidx.paging.testing.Generation r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: androidx.paging.testing.Generation;

        $r1 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

        return $r1;
    }

    public final java.util.concurrent.atomic.AtomicInteger getLastAccessedIndex()
    {
        androidx.paging.testing.Generation r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: androidx.paging.testing.Generation;

        $r1 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

        return $r1;
    }

    public final void setLastAccessedIndex(java.util.concurrent.atomic.AtomicInteger)
    {
        androidx.paging.testing.Generation r0;
        java.util.concurrent.atomic.AtomicInteger r1;

        r0 := @this: androidx.paging.testing.Generation;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex> = r1;

        return;
    }

    public final int component1()
    {
        androidx.paging.testing.Generation r0;
        int $i0;

        r0 := @this: androidx.paging.testing.Generation;

        $i0 = r0.<androidx.paging.testing.Generation: int id>;

        return $i0;
    }

    public final int component2()
    {
        androidx.paging.testing.Generation r0;
        int $i0;

        r0 := @this: androidx.paging.testing.Generation;

        $i0 = r0.<androidx.paging.testing.Generation: int callbackCount>;

        return $i0;
    }

    public final java.util.concurrent.atomic.AtomicReference component3()
    {
        androidx.paging.testing.Generation r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: androidx.paging.testing.Generation;

        $r1 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

        return $r1;
    }

    public final java.util.concurrent.atomic.AtomicInteger component4()
    {
        androidx.paging.testing.Generation r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: androidx.paging.testing.Generation;

        $r1 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

        return $r1;
    }

    public final androidx.paging.testing.Generation copy(int, int, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicInteger)
    {
        androidx.paging.testing.Generation r0, $r3;
        int i0, i1;
        java.util.concurrent.atomic.AtomicReference r1;
        java.util.concurrent.atomic.AtomicInteger r2;

        r0 := @this: androidx.paging.testing.Generation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.concurrent.atomic.AtomicReference;

        r2 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callbackState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "lastAccessedIndex");

        $r3 = new androidx.paging.testing.Generation;

        specialinvoke $r3.<androidx.paging.testing.Generation: void <init>(int,int,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger)>(i0, i1, r1, r2);

        return $r3;
    }

    public static androidx.paging.testing.Generation copy$default(androidx.paging.testing.Generation, int, int, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicInteger, int, java.lang.Object)
    {
        androidx.paging.testing.Generation r0, $r2;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicReference r3;
        java.util.concurrent.atomic.AtomicInteger r4;

        r0 := @parameter0: androidx.paging.testing.Generation;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        r3 := @parameter3: java.util.concurrent.atomic.AtomicReference;

        r4 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i5 = r0.<androidx.paging.testing.Generation: int id>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i6 = r0.<androidx.paging.testing.Generation: int callbackCount>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r3 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r4 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

     label4:
        $r2 = virtualinvoke r0.<androidx.paging.testing.Generation: androidx.paging.testing.Generation copy(int,int,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger)>(i5, i6, r3, r4);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.paging.testing.Generation r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12;
        int $i0, $i1;
        java.util.concurrent.atomic.AtomicReference $r7;
        java.util.concurrent.atomic.AtomicInteger $r10;
        java.lang.String $r13;

        r0 := @this: androidx.paging.testing.Generation;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generation(id=");

        $i0 = r0.<androidx.paging.testing.Generation: int id>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callbackCount=");

        $i1 = r0.<androidx.paging.testing.Generation: int callbackCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callbackState=");

        $r7 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastAccessedIndex=");

        $r10 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public int hashCode()
    {
        androidx.paging.testing.Generation r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: androidx.paging.testing.Generation;

        $i0 = r0.<androidx.paging.testing.Generation: int id>;

        i8 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        $i2 = i8 * 31;

        $i1 = r0.<androidx.paging.testing.Generation: int callbackCount>;

        $i3 = staticinvoke <java.lang.Integer: int hashCode(int)>($i1);

        i9 = $i2 + $i3;

        $i4 = i9 * 31;

        $r1 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

        $i5 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: int hashCode()>();

        i10 = $i4 + $i5;

        $i6 = i10 * 31;

        $r2 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

        $i7 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int hashCode()>();

        i11 = $i6 + $i7;

        return i11;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.paging.testing.Generation r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        java.util.concurrent.atomic.AtomicReference $r3, $r4;
        java.util.concurrent.atomic.AtomicInteger $r5, $r6;

        r0 := @this: androidx.paging.testing.Generation;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.paging.testing.Generation;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.paging.testing.Generation) r1;

        $i1 = r0.<androidx.paging.testing.Generation: int id>;

        $i0 = r2.<androidx.paging.testing.Generation: int id>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $i3 = r0.<androidx.paging.testing.Generation: int callbackCount>;

        $i2 = r2.<androidx.paging.testing.Generation: int callbackCount>;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        $r4 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

        $r3 = r2.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicReference callbackState>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r6 = r0.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

        $r5 = r2.<androidx.paging.testing.Generation: java.util.concurrent.atomic.AtomicInteger lastAccessedIndex>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public void <init>()
    {
        androidx.paging.testing.Generation r0;

        r0 := @this: androidx.paging.testing.Generation;

        specialinvoke r0.<androidx.paging.testing.Generation: void <init>(int,int,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, null, null, 15, null);

        return;
    }

