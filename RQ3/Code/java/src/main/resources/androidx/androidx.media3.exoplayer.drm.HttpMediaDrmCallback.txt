androidx.media3.exoplayer.drm.HttpMediaDrmCallback
<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: int MAX_MANUAL_REDIRECTS>
<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: androidx.media3.datasource.DataSource$Factory dataSourceFactory>
<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.lang.String defaultLicenseUrl>
<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: boolean forceDefaultLicenseUrl>
<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>
    public void <init>(java.lang.String, androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.lang.String r1;
        androidx.media3.datasource.DataSource$Factory r2;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        specialinvoke r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: void <init>(java.lang.String,boolean,androidx.media3.datasource.DataSource$Factory)>(r1, 0, r2);

        return;
    }

    public void <init>(java.lang.String, boolean, androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        androidx.media3.datasource.DataSource$Factory r2;
        java.util.HashMap $r3;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media3.datasource.DataSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r2;

        r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.lang.String defaultLicenseUrl> = r1;

        r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: boolean forceDefaultLicenseUrl> = z0;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties> = $r3;

        return;
    }

    public void setKeyRequestProperty(java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.lang.String r1, r2;
        java.util.Map r3, $r7, $r8;
        java.lang.Throwable r4, $r10;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearKeyRequestProperty(java.lang.String)
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.lang.String r1;
        java.util.Map r2, $r5, $r6;
        java.lang.Throwable r3, $r8;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearAllKeyRequestProperties()
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.util.Map r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        $r3 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public byte[] executeProvisionRequest(java.util.UUID, androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest) throws androidx.media3.exoplayer.drm.MediaDrmCallbackException
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.util.UUID r1;
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest r2;
        java.lang.String r3, $r5, $r9;
        java.lang.StringBuilder $r4, $r6, $r7, $r10;
        byte[] $r8, $r13;
        androidx.media3.datasource.DataSource$Factory $r11;
        java.util.Map $r12;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        r1 := @parameter0: java.util.UUID;

        r2 := @parameter1: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&signedRequest=");

        $r8 = virtualinvoke r2.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: byte[] getData()>();

        $r9 = staticinvoke <androidx.media3.common.util.Util: java.lang.String fromUtf8Bytes(byte[])>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        $r12 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r13 = staticinvoke <androidx.media3.exoplayer.drm.HttpMediaDrmCallback: byte[] executePost(androidx.media3.datasource.DataSource$Factory,java.lang.String,byte[],java.util.Map)>($r11, r3, null, $r12);

        return $r13;
    }

    public byte[] executeKeyRequest(java.util.UUID, androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest) throws androidx.media3.exoplayer.drm.MediaDrmCallbackException
    {
        androidx.media3.exoplayer.drm.HttpMediaDrmCallback r0;
        java.util.UUID r1, $r8, $r9, $r28;
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest r2;
        java.util.HashMap r3, r32;
        java.lang.String r4, r26, $r27;
        java.util.Map r5, $r11, $r12;
        java.lang.Throwable r6, $r25, r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.media3.datasource.DataSource$Factory $r13;
        byte[] $r14, $r15;
        android.net.Uri $r19, $r22;
        androidx.media3.datasource.DataSpec$Builder $r20, r29;
        androidx.media3.datasource.DataSpec $r21;
        com.google.common.collect.ImmutableMap $r23;
        java.lang.IllegalStateException r30;
        androidx.media3.exoplayer.drm.MediaDrmCallbackException r31;

        r0 := @this: androidx.media3.exoplayer.drm.HttpMediaDrmCallback;

        r1 := @parameter0: java.util.UUID;

        r2 := @parameter1: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        r26 = virtualinvoke r2.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: java.lang.String getLicenseServerUrl()>();

        $z0 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: boolean forceDefaultLicenseUrl>;

        if $z0 != 0 goto label01;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r26);

        if $z3 == 0 goto label02;

     label01:
        r26 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.lang.String defaultLicenseUrl>;

     label02:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r26);

        if $z4 == 0 goto label03;

        r31 = new androidx.media3.exoplayer.drm.MediaDrmCallbackException;

        r29 = new androidx.media3.datasource.DataSpec$Builder;

        specialinvoke r29.<androidx.media3.datasource.DataSpec$Builder: void <init>()>();

        $r19 = <android.net.Uri: android.net.Uri EMPTY>;

        $r20 = virtualinvoke r29.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri)>($r19);

        $r21 = virtualinvoke $r20.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        $r22 = <android.net.Uri: android.net.Uri EMPTY>;

        $r23 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        r30 = new java.lang.IllegalStateException;

        specialinvoke r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No license URL");

        specialinvoke r31.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: void <init>(androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,java.lang.Throwable)>($r21, $r22, $r23, 0L, r30);

        r33 = (java.lang.Throwable) r31;

        throw r33;

     label03:
        r32 = new java.util.HashMap;

        specialinvoke r32.<java.util.HashMap: void <init>()>();

        r3 = r32;

        $r8 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $z1 = virtualinvoke $r8.<java.util.UUID: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label04;

        $r27 = "text/xml";

        goto label06;

     label04:
        $r9 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $z2 = virtualinvoke $r9.<java.util.UUID: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label05;

        $r27 = "application/json";

        goto label06;

     label05:
        $r27 = "application/octet-stream";

     label06:
        r4 = $r27;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", r4);

        $r28 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $z5 = virtualinvoke $r28.<java.util.UUID: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label07;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SOAPAction", "http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense");

     label07:
        $r11 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        r5 = $r11;

        entermonitor $r11;

     label08:
        $r12 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.util.Map keyRequestProperties>;

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r12);

        exitmonitor r5;

     label09:
        goto label12;

     label10:
        $r25 := @caughtexception;

        r6 = $r25;

        exitmonitor r5;

     label11:
        throw r6;

     label12:
        $r13 = r0.<androidx.media3.exoplayer.drm.HttpMediaDrmCallback: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        $r14 = virtualinvoke r2.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: byte[] getData()>();

        $r15 = staticinvoke <androidx.media3.exoplayer.drm.HttpMediaDrmCallback: byte[] executePost(androidx.media3.datasource.DataSource$Factory,java.lang.String,byte[],java.util.Map)>($r13, r26, $r14, r3);

        return $r15;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static byte[] executePost(androidx.media3.datasource.DataSource$Factory, java.lang.String, byte[], java.util.Map) throws androidx.media3.exoplayer.drm.MediaDrmCallbackException
    {
        androidx.media3.datasource.DataSource$Factory r0;
        java.lang.String r1, r6;
        byte[] r2, r29;
        java.util.Map r3, $r22;
        androidx.media3.datasource.StatsDataSource r4, r32;
        androidx.media3.datasource.DataSpec r5, r27;
        java.lang.Throwable r7, $r17, $r23, $r24, r30, r31, r40;
        androidx.media3.datasource.DataSource $r9, r36;
        androidx.media3.datasource.DataSpec$Builder $r11, $r12, $r13, $r14, $r15, $r25, $r26, r33;
        android.net.Uri $r19, $r21;
        java.lang.Object $r20;
        long $l0;
        int i1;
        androidx.media3.datasource.DataSourceInputStream r28, r34;
        androidx.media3.exoplayer.drm.MediaDrmCallbackException r35;
        java.io.Closeable r37, r38, r39;

        r0 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        r3 := @parameter3: java.util.Map;

        r32 = new androidx.media3.datasource.StatsDataSource;

        $r9 = interfaceinvoke r0.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        specialinvoke r32.<androidx.media3.datasource.StatsDataSource: void <init>(androidx.media3.datasource.DataSource)>($r9);

        r4 = r32;

        i1 = 0;

        r33 = new androidx.media3.datasource.DataSpec$Builder;

        specialinvoke r33.<androidx.media3.datasource.DataSpec$Builder: void <init>()>();

        $r11 = virtualinvoke r33.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setHttpRequestHeaders(java.util.Map)>(r3);

        $r13 = virtualinvoke $r12.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setHttpMethod(int)>(2);

        $r14 = virtualinvoke $r13.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setHttpBody(byte[])>(r2);

        $r15 = virtualinvoke $r14.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setFlags(int)>(1);

        r27 = virtualinvoke $r15.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        r5 = r27;

     label01:
        r34 = new androidx.media3.datasource.DataSourceInputStream;

        r36 = (androidx.media3.datasource.DataSource) r4;

        specialinvoke r34.<androidx.media3.datasource.DataSourceInputStream: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec)>(r36, r27);

        r28 = r34;

     label02:
        r29 = staticinvoke <androidx.media3.common.util.Util: byte[] toByteArray(java.io.InputStream)>(r28);

     label03:
        r37 = (java.io.Closeable) r28;

        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r37);

     label04:
        return r29;

     label05:
        $r24 := @caughtexception;

        r30 = $r24;

        r6 = staticinvoke <androidx.media3.exoplayer.drm.HttpMediaDrmCallback: java.lang.String getRedirectUrl(androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException,int)>(r30, i1);

        if r6 != null goto label06;

        throw r30;

     label06:
        i1 = i1 + 1;

        $r25 = virtualinvoke r27.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec$Builder buildUpon()>();

        $r26 = virtualinvoke $r25.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(java.lang.String)>(r6);

        r27 = virtualinvoke $r26.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

     label07:
        r38 = (java.io.Closeable) r28;

        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r38);

        goto label10;

     label08:
        $r23 := @caughtexception;

        r7 = $r23;

     label09:
        r39 = (java.io.Closeable) r28;

        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r39);

        throw r7;

     label10:
        goto label01;

     label11:
        $r17 := @caughtexception;

        r31 = $r17;

        r35 = new androidx.media3.exoplayer.drm.MediaDrmCallbackException;

        $r19 = virtualinvoke r4.<androidx.media3.datasource.StatsDataSource: android.net.Uri getLastOpenedUri()>();

        $r20 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r19);

        $r21 = (android.net.Uri) $r20;

        $r22 = virtualinvoke r4.<androidx.media3.datasource.StatsDataSource: java.util.Map getResponseHeaders()>();

        $l0 = virtualinvoke r4.<androidx.media3.datasource.StatsDataSource: long getBytesRead()>();

        specialinvoke r35.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: void <init>(androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,java.lang.Throwable)>(r5, $r21, $r22, $l0, r31);

        r40 = (java.lang.Throwable) r35;

        throw r40;

        catch androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Exception from label01 to label04 with label11;
        catch java.lang.Exception from label05 to label11 with label11;
    }

    private static java.lang.String getRedirectUrl(androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException, int)
    {
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r0;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2;
        java.util.Map r1;
        java.util.List r2;
        java.lang.Object $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i1 == 307 goto label1;

        $i2 = r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if $i2 != 308 goto label2;

     label1:
        if i0 >= 5 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        if z0 != 0 goto label4;

        return null;

     label4:
        r1 = r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: java.util.Map headerFields>;

        if r1 == null goto label5;

        $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Location");

        r2 = (java.util.List) $r3;

        if r2 == null goto label5;

        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        return $r5;

     label5:
        return null;
    }

