androidx.test.rule.GrantPermissionRule
<androidx.test.rule.GrantPermissionRule: androidx.test.internal.platform.content.PermissionGranter permissionGranter>
    static volatile androidx.test.internal.platform.content.PermissionGranter '-$$Nest$fgetpermissionGranter'(androidx.test.rule.GrantPermissionRule)
    {
        androidx.test.rule.GrantPermissionRule r0;
        androidx.test.internal.platform.content.PermissionGranter $r1;

        r0 := @parameter0: androidx.test.rule.GrantPermissionRule;

        $r1 = r0.<androidx.test.rule.GrantPermissionRule: androidx.test.internal.platform.content.PermissionGranter permissionGranter>;

        return $r1;
    }

    public static transient androidx.test.rule.GrantPermissionRule grant(java.lang.String[])
    {
        java.lang.String[] r0;
        androidx.test.rule.GrantPermissionRule r1, $r2;

        r0 := @parameter0: java.lang.String[];

        $r2 = new androidx.test.rule.GrantPermissionRule;

        specialinvoke $r2.<androidx.test.rule.GrantPermissionRule: void <init>()>();

        r1 = $r2;

        specialinvoke r1.<androidx.test.rule.GrantPermissionRule: void grantPermissions(java.lang.String[])>(r0);

        return r1;
    }

    transient java.util.Set satisfyPermissionDependencies(java.lang.String[])
    {
        androidx.test.rule.GrantPermissionRule r0;
        java.lang.String[] r1;
        java.util.LinkedHashSet r2, $r3;
        java.util.List $r4;
        boolean $z0;

        r0 := @this: androidx.test.rule.GrantPermissionRule;

        r1 := @parameter0: java.lang.String[];

        $r3 = new java.util.LinkedHashSet;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r4);

        r2 = $r3;

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>("android.permission.WRITE_EXTERNAL_STORAGE");

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_EXTERNAL_STORAGE");

     label1:
        return r2;
    }

    public final org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.test.rule.GrantPermissionRule r0;
        org.junit.runners.model.Statement r1;
        org.junit.runner.Description r2;
        androidx.test.rule.GrantPermissionRule$RequestPermissionStatement $r3;

        r0 := @this: androidx.test.rule.GrantPermissionRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        $r3 = new androidx.test.rule.GrantPermissionRule$RequestPermissionStatement;

        specialinvoke $r3.<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: void <init>(androidx.test.rule.GrantPermissionRule,org.junit.runners.model.Statement)>(r0, r1);

        return $r3;
    }

    private void <init>()
    {
        androidx.test.rule.GrantPermissionRule r0;
        androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 $r1;
        java.lang.Object $r2;
        androidx.test.internal.platform.content.PermissionGranter $r3;

        r0 := @this: androidx.test.rule.GrantPermissionRule;

        $r1 = <androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0: androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 INSTANCE>;

        $r2 = staticinvoke <androidx.test.internal.platform.ServiceLoaderWrapper: java.lang.Object loadSingleService(java.lang.Class,androidx.test.internal.platform.ServiceLoaderWrapper$Factory)>(class "Landroidx/test/internal/platform/content/PermissionGranter;", $r1);

        $r3 = (androidx.test.internal.platform.content.PermissionGranter) $r2;

        specialinvoke r0.<androidx.test.rule.GrantPermissionRule: void <init>(androidx.test.internal.platform.content.PermissionGranter)>($r3);

        return;
    }

    void <init>(androidx.test.internal.platform.content.PermissionGranter)
    {
        androidx.test.rule.GrantPermissionRule r0;
        androidx.test.internal.platform.content.PermissionGranter r1;

        r0 := @this: androidx.test.rule.GrantPermissionRule;

        r1 := @parameter0: androidx.test.internal.platform.content.PermissionGranter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<androidx.test.rule.GrantPermissionRule: void setPermissionGranter(androidx.test.internal.platform.content.PermissionGranter)>(r1);

        return;
    }

    private transient void grantPermissions(java.lang.String[])
    {
        androidx.test.rule.GrantPermissionRule r0;
        java.lang.String[] r1, $r4, $r6;
        java.util.Set r2;
        androidx.test.internal.platform.content.PermissionGranter $r3;
        int $i0;
        java.lang.Object[] $r5;

        r0 := @this: androidx.test.rule.GrantPermissionRule;

        r1 := @parameter0: java.lang.String[];

        r2 = virtualinvoke r0.<androidx.test.rule.GrantPermissionRule: java.util.Set satisfyPermissionDependencies(java.lang.String[])>(r1);

        $r3 = r0.<androidx.test.rule.GrantPermissionRule: androidx.test.internal.platform.content.PermissionGranter permissionGranter>;

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        interfaceinvoke $r3.<androidx.test.internal.platform.content.PermissionGranter: void addPermissions(java.lang.String[])>($r6);

        return;
    }

    void setPermissionGranter(androidx.test.internal.platform.content.PermissionGranter)
    {
        androidx.test.rule.GrantPermissionRule r0;
        androidx.test.internal.platform.content.PermissionGranter r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.rule.GrantPermissionRule;

        r1 := @parameter0: androidx.test.internal.platform.content.PermissionGranter;

        $r2 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "permissionRequester cannot be null!");

        $r3 = (androidx.test.internal.platform.content.PermissionGranter) $r2;

        r0.<androidx.test.rule.GrantPermissionRule: androidx.test.internal.platform.content.PermissionGranter permissionGranter> = $r3;

        return;
    }

androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0
<androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0: androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 INSTANCE>
    public final java.lang.Object create()
    {
        androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 r0;
        androidx.test.runner.permission.PermissionRequester $r1;
        androidx.test.internal.platform.content.PermissionGranter $r2;

        r0 := @this: androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0;

        $r1 = new androidx.test.runner.permission.PermissionRequester;

        specialinvoke $r1.<androidx.test.runner.permission.PermissionRequester: void <init>()>();

        $r2 = (androidx.test.internal.platform.content.PermissionGranter) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 $r0;

        $r0 = new androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0;

        specialinvoke $r0.<androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0: void <init>()>();

        <androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0: androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0 r0;

        r0 := @this: androidx.test.rule.GrantPermissionRule$$ExternalSyntheticLambda0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.rule.GrantPermissionRule$RequestPermissionStatement
<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: org.junit.runners.model.Statement base>
<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: androidx.test.rule.GrantPermissionRule this$0>
    public void <init>(androidx.test.rule.GrantPermissionRule, org.junit.runners.model.Statement)
    {
        androidx.test.rule.GrantPermissionRule$RequestPermissionStatement r0;
        androidx.test.rule.GrantPermissionRule r1;
        org.junit.runners.model.Statement r2;

        r0 := @this: androidx.test.rule.GrantPermissionRule$RequestPermissionStatement;

        r1 := @parameter0: androidx.test.rule.GrantPermissionRule;

        r2 := @parameter1: org.junit.runners.model.Statement;

        r0.<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: androidx.test.rule.GrantPermissionRule this$0> = r1;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        r0.<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: org.junit.runners.model.Statement base> = r2;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        androidx.test.rule.GrantPermissionRule$RequestPermissionStatement r0;
        androidx.test.rule.GrantPermissionRule $r1;
        androidx.test.internal.platform.content.PermissionGranter $r2;
        org.junit.runners.model.Statement $r3;

        r0 := @this: androidx.test.rule.GrantPermissionRule$RequestPermissionStatement;

        $r1 = r0.<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: androidx.test.rule.GrantPermissionRule this$0>;

        $r2 = staticinvoke <androidx.test.rule.GrantPermissionRule: androidx.test.internal.platform.content.PermissionGranter '-$$Nest$fgetpermissionGranter'(androidx.test.rule.GrantPermissionRule)>($r1);

        interfaceinvoke $r2.<androidx.test.internal.platform.content.PermissionGranter: void requestPermissions()>();

        $r3 = r0.<androidx.test.rule.GrantPermissionRule$RequestPermissionStatement: org.junit.runners.model.Statement base>;

        virtualinvoke $r3.<org.junit.runners.model.Statement: void evaluate()>();

        return;
    }

