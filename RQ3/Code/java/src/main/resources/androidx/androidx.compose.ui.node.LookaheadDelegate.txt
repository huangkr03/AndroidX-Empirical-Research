androidx.compose.ui.node.LookaheadDelegate
<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>
<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadScope lookaheadScope>
<androidx.compose.ui.node.LookaheadDelegate: long position>
<androidx.compose.ui.node.LookaheadDelegate: java.util.Map oldAlignmentLines>
<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl lookaheadLayoutCoordinates>
<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult _measureResult>
<androidx.compose.ui.node.LookaheadDelegate: java.util.Map cachedAlignmentLinesMap>
    public void <init>(androidx.compose.ui.node.NodeCoordinator, androidx.compose.ui.layout.LookaheadScope)
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator r1;
        androidx.compose.ui.layout.LookaheadScope r2;
        androidx.compose.ui.unit.IntOffset$Companion $r3;
        long $l0;
        androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl $r4;
        java.util.LinkedHashMap $r5;
        java.util.Map $r6;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        r1 := @parameter0: androidx.compose.ui.node.NodeCoordinator;

        r2 := @parameter1: androidx.compose.ui.layout.LookaheadScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coordinator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "lookaheadScope");

        specialinvoke r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: void <init>()>();

        r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator> = r1;

        r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadScope lookaheadScope> = r2;

        $r3 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l0 = virtualinvoke $r3.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        r0.<androidx.compose.ui.node.LookaheadDelegate: long position> = $l0;

        $r4 = new androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl;

        specialinvoke $r4.<androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl: void <init>(androidx.compose.ui.node.LookaheadDelegate)>(r0);

        r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl lookaheadLayoutCoordinates> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = (java.util.Map) $r5;

        r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map cachedAlignmentLinesMap> = $r6;

        return;
    }

    public final androidx.compose.ui.node.NodeCoordinator getCoordinator()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        return $r1;
    }

    public final androidx.compose.ui.layout.LookaheadScope getLookaheadScope()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.LookaheadScope $r1;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadScope lookaheadScope>;

        return $r1;
    }

    public androidx.compose.ui.node.LookaheadCapablePlaceable getChild()
    {
        androidx.compose.ui.node.LookaheadDelegate r0, $r4;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r3;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        return $r4;

     label1:
        $r3 = (androidx.compose.ui.node.LookaheadCapablePlaceable) null;

        return $r3;
    }

    public boolean getHasMeasureResult()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.MeasureResult $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult _measureResult>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getPosition-nOcc-ac()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        long $l0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $l0 = r0.<androidx.compose.ui.node.LookaheadDelegate: long position>;

        return $l0;
    }

    public void setPosition--gyyYBs(long)
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        long l0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        l0 := @parameter0: long;

        r0.<androidx.compose.ui.node.LookaheadDelegate: long position> = l0;

        return;
    }

    public androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.MeasureResult $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult _measureResult>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = "LookaheadDelegate has not been measured yet when measureResult is requested.";

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        return $r1;
    }

    public androidx.compose.ui.unit.LayoutDirection getLayoutDirection()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        androidx.compose.ui.unit.LayoutDirection $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        return $r2;
    }

    public float getDensity()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: float getFontScale()>();

        return $f0;
    }

    public androidx.compose.ui.node.LookaheadCapablePlaceable getParent()
    {
        androidx.compose.ui.node.LookaheadDelegate r0, $r4;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r3;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedBy$ui_release()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        return $r4;

     label1:
        $r3 = (androidx.compose.ui.node.LookaheadCapablePlaceable) null;

        return $r3;
    }

    public androidx.compose.ui.node.LayoutNode getLayoutNode()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        androidx.compose.ui.node.LayoutNode $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        return $r2;
    }

    public androidx.compose.ui.layout.LayoutCoordinates getCoordinates()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl $r1;
        androidx.compose.ui.layout.LayoutCoordinates $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl lookaheadLayoutCoordinates>;

        $r2 = (androidx.compose.ui.layout.LayoutCoordinates) $r1;

        return $r2;
    }

    public final androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl getLookaheadLayoutCoordinates()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl $r1;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadLayoutCoordinatesImpl lookaheadLayoutCoordinates>;

        return $r1;
    }

    public androidx.compose.ui.node.AlignmentLinesOwner getAlignmentLinesOwner()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        androidx.compose.ui.node.LayoutNode $r2;
        androidx.compose.ui.node.LayoutNodeLayoutDelegate $r3;
        androidx.compose.ui.node.AlignmentLinesOwner $r4;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNodeLayoutDelegate getLayoutDelegate$ui_release()>();

        $r4 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutNodeLayoutDelegate: androidx.compose.ui.node.AlignmentLinesOwner getLookaheadAlignmentLinesOwner$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        return $r4;
    }

    private final void set_measureResult(androidx.compose.ui.layout.MeasureResult)
    {
        androidx.compose.ui.node.LookaheadDelegate r0, r13;
        androidx.compose.ui.layout.MeasureResult r1, $r2, r11;
        boolean $z1, $z2, $z3, $z4, $z7, $z8;
        java.util.Map $r3, $r4, $r7, $r9, r14, $r15, r16, r17;
        androidx.compose.ui.node.AlignmentLinesOwner $r5;
        androidx.compose.ui.node.AlignmentLines $r6;
        java.util.LinkedHashMap $r8;
        androidx.compose.ui.unit.IntSize$Companion $r10;
        long $l0, $l3;
        int $i1, $i2;
        kotlin.Unit $r12;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        r1 := @parameter0: androidx.compose.ui.layout.MeasureResult;

        if r1 == null goto label01;

        r11 = r1;

        $i1 = interfaceinvoke r11.<androidx.compose.ui.layout.MeasureResult: int getWidth()>();

        $i2 = interfaceinvoke r11.<androidx.compose.ui.layout.MeasureResult: int getHeight()>();

        $l3 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i1, $i2);

        virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void setMeasuredSize-ozmzZPI(long)>($l3);

        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label02;

     label01:
        $r12 = null;

     label02:
        if $r12 != null goto label03;

        r13 = (androidx.compose.ui.node.LookaheadDelegate) r0;

        $r10 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l0 = virtualinvoke $r10.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

        virtualinvoke r13.<androidx.compose.ui.node.LookaheadDelegate: void setMeasuredSize-ozmzZPI(long)>($l0);

        goto label03;

     label03:
        $r2 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult _measureResult>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z1 != 0 goto label11;

        if r1 == null goto label11;

        r14 = r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map oldAlignmentLines>;

        if r14 == null goto label04;

        $z4 = interfaceinvoke r14.<java.util.Map: boolean isEmpty()>();

        if $z4 == 0 goto label05;

     label04:
        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        if $z7 == 0 goto label09;

        $r9 = interfaceinvoke r1.<androidx.compose.ui.layout.MeasureResult: java.util.Map getAlignmentLines()>();

        $z3 = interfaceinvoke $r9.<java.util.Map: boolean isEmpty()>();

        if $z3 != 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        if $z8 == 0 goto label11;

     label09:
        $r3 = interfaceinvoke r1.<androidx.compose.ui.layout.MeasureResult: java.util.Map getAlignmentLines()>();

        $r4 = r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map oldAlignmentLines>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z2 != 0 goto label11;

        $r5 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.AlignmentLinesOwner getAlignmentLinesOwner()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.ui.node.AlignmentLinesOwner: androidx.compose.ui.node.AlignmentLines getAlignmentLines()>();

        virtualinvoke $r6.<androidx.compose.ui.node.AlignmentLines: void onAlignmentsChanged()>();

        $r15 = r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map oldAlignmentLines>;

        if $r15 != null goto label10;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        r16 = (java.util.Map) $r8;

        r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map oldAlignmentLines> = r16;

        $r15 = r16;

     label10:
        r17 = $r15;

        interfaceinvoke r17.<java.util.Map: void clear()>();

        $r7 = interfaceinvoke r1.<androidx.compose.ui.layout.MeasureResult: java.util.Map getAlignmentLines()>();

        interfaceinvoke r17.<java.util.Map: void putAll(java.util.Map)>($r7);

     label11:
        r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult _measureResult> = r1;

        return;
    }

    protected final java.util.Map getCachedAlignmentLinesMap()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map cachedAlignmentLinesMap>;

        return $r1;
    }

    public final int getCachedAlignmentLine$ui_release(androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.AlignmentLine r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        int $i0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        r1 := @parameter0: androidx.compose.ui.layout.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        $r2 = r0.<androidx.compose.ui.node.LookaheadDelegate: java.util.Map cachedAlignmentLinesMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Integer) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = -2147483648;

     label2:
        return $i0;
    }

    public void replace$ui_release()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        long $l0;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $l0 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: long getPosition-nOcc-ac()>();

        virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void placeAt-f8xVGno(long,float,kotlin.jvm.functions.Function1)>($l0, 0.0F, null);

        return;
    }

    protected final void placeAt-f8xVGno(long, float, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        long l0, $l1;
        float f0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.node.LayoutNodeLayoutDelegate$LookaheadPassDelegate r2;
        boolean $z0, $z1;
        androidx.compose.ui.node.LayoutNode $r3;
        androidx.compose.ui.node.LayoutNodeLayoutDelegate $r4;
        androidx.compose.ui.node.NodeCoordinator $r5;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        $l1 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: long getPosition-nOcc-ac()>();

        $z0 = staticinvoke <androidx.compose.ui.unit.IntOffset: boolean equals-impl0(long,long)>($l1, l0);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void setPosition--gyyYBs(long)>(l0);

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        $r4 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNodeLayoutDelegate getLayoutDelegate$ui_release()>();

        r2 = virtualinvoke $r4.<androidx.compose.ui.node.LayoutNodeLayoutDelegate: androidx.compose.ui.node.LayoutNodeLayoutDelegate$LookaheadPassDelegate getLookaheadPassDelegate$ui_release()>();

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.compose.ui.node.LayoutNodeLayoutDelegate$LookaheadPassDelegate: void notifyChildrenUsingCoordinatesWhilePlacing()>();

     label1:
        $r5 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void invalidateAlignmentLinesFromPositionChange(androidx.compose.ui.node.NodeCoordinator)>($r5);

     label2:
        $z1 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: boolean isShallowPlacing$ui_release()>();

        if $z1 == 0 goto label3;

        return;

     label3:
        virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void placeChildren()>();

        return;
    }

    protected void placeChildren()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.layout.Placeable$PlacementScope$Companion r1, $r9, $r10, $r11, $r12, $r16, $r17;
        int i0, i1;
        androidx.compose.ui.unit.LayoutDirection r2, r4;
        androidx.compose.ui.layout.LayoutCoordinates r3;
        androidx.compose.ui.node.LayoutNodeLayoutDelegate r5;
        boolean z1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r6;
        androidx.compose.ui.layout.MeasureResult $r7, $r14;
        androidx.compose.ui.node.NodeCoordinator $r8;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r13, $r15;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        r1 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        $r7 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        i0 = interfaceinvoke $r7.<androidx.compose.ui.layout.MeasureResult: int getWidth()>();

        $r8 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        r2 = virtualinvoke $r8.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        r3 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.LayoutCoordinates access$get_coordinates$cp()>();

        $r9 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        i1 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope$Companion: int access$getParentWidth(androidx.compose.ui.layout.Placeable$PlacementScope$Companion)>($r9);

        $r10 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        r4 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope$Companion: androidx.compose.ui.unit.LayoutDirection access$getParentLayoutDirection(androidx.compose.ui.layout.Placeable$PlacementScope$Companion)>($r10);

        r5 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.node.LayoutNodeLayoutDelegate access$getLayoutDelegate$cp()>();

        $r11 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentWidth$cp(int)>(i0);

        $r12 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentLayoutDirection$cp(androidx.compose.ui.unit.LayoutDirection)>(r2);

        $r13 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        z1 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope$Companion: boolean access$configureForPlacingForAlignment(androidx.compose.ui.layout.Placeable$PlacementScope$Companion,androidx.compose.ui.node.LookaheadCapablePlaceable)>(r1, $r13);

        $r6 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        $r14 = virtualinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        interfaceinvoke $r14.<androidx.compose.ui.layout.MeasureResult: void placeChildren()>();

        $r15 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        if $r15 != null goto label1;

        goto label2;

     label1:
        virtualinvoke $r15.<androidx.compose.ui.node.LookaheadCapablePlaceable: void setPlacingForAlignment$ui_release(boolean)>(z1);

     label2:
        $r16 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentWidth$cp(int)>(i1);

        $r17 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentLayoutDirection$cp(androidx.compose.ui.unit.LayoutDirection)>(r4);

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$set_coordinates$cp(androidx.compose.ui.layout.LayoutCoordinates)>(r3);

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setLayoutDelegate$cp(androidx.compose.ui.node.LayoutNodeLayoutDelegate)>(r5);

        return;
    }

    public final androidx.compose.ui.layout.Placeable performingMeasure-K40F9xA(long, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        long l0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;
        androidx.compose.ui.layout.MeasureResult $r3;
        androidx.compose.ui.layout.Placeable $r4;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        l0 := @parameter0: long;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        staticinvoke <androidx.compose.ui.node.LookaheadDelegate: void access$setMeasurementConstraints-BRTryo0(androidx.compose.ui.node.LookaheadDelegate,long)>(r0, l0);

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (androidx.compose.ui.layout.MeasureResult) $r2;

        staticinvoke <androidx.compose.ui.node.LookaheadDelegate: void access$set_measureResult(androidx.compose.ui.node.LookaheadDelegate,androidx.compose.ui.layout.MeasureResult)>(r0, $r3);

        $r4 = (androidx.compose.ui.layout.Placeable) r0;

        return $r4;
    }

    public java.lang.Object getParentData()
    {
        androidx.compose.ui.node.LookaheadDelegate r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: java.lang.Object getParentData()>();

        return $r2;
    }

    public int minIntrinsicWidth(int)
    {
        androidx.compose.ui.node.LookaheadDelegate r0, $r3;
        int i0, $i1;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.LookaheadDelegate: int minIntrinsicWidth(int)>(i0);

        return $i1;
    }

    public int maxIntrinsicWidth(int)
    {
        androidx.compose.ui.node.LookaheadDelegate r0, $r3;
        int i0, $i1;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.LookaheadDelegate: int maxIntrinsicWidth(int)>(i0);

        return $i1;
    }

    public int minIntrinsicHeight(int)
    {
        androidx.compose.ui.node.LookaheadDelegate r0, $r3;
        int i0, $i1;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.LookaheadDelegate: int minIntrinsicHeight(int)>(i0);

        return $i1;
    }

    public int maxIntrinsicHeight(int)
    {
        androidx.compose.ui.node.LookaheadDelegate r0, $r3;
        int i0, $i1;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.LookaheadDelegate: int maxIntrinsicHeight(int)>(i0);

        return $i1;
    }

    public final long positionIn-Bjo55l4$ui_release(androidx.compose.ui.node.LookaheadDelegate)
    {
        androidx.compose.ui.node.LookaheadDelegate r0, r1, $r5, r6;
        long l0, l7;
        androidx.compose.ui.unit.IntOffset$Companion $r2;
        boolean $z1;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.compose.ui.node.NodeCoordinator $r3, $r4;

        r0 := @this: androidx.compose.ui.node.LookaheadDelegate;

        r1 := @parameter0: androidx.compose.ui.node.LookaheadDelegate;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ancestor");

        $r2 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        l7 = virtualinvoke $r2.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        r6 = r0;

     label1:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r6, r1);

        if $z1 != 0 goto label2;

        l0 = virtualinvoke r6.<androidx.compose.ui.node.LookaheadDelegate: long getPosition-nOcc-ac()>();

        $i1 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l7);

        $i2 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l0);

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l7);

        $i5 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l0);

        $i6 = $i4 + $i5;

        l7 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i3, $i6);

        $r3 = r6.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.node.NodeCoordinator coordinator>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedBy$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r4.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        r6 = $r5;

        goto label1;

     label2:
        return l7;
    }

    public static final void access$setMeasurementConstraints-BRTryo0(androidx.compose.ui.node.LookaheadDelegate, long)
    {
        androidx.compose.ui.node.LookaheadDelegate $r0;
        long l0;

        $r0 := @parameter0: androidx.compose.ui.node.LookaheadDelegate;

        l0 := @parameter1: long;

        virtualinvoke $r0.<androidx.compose.ui.node.LookaheadDelegate: void setMeasurementConstraints-BRTryo0(long)>(l0);

        return;
    }

    public static final void access$set_measureResult(androidx.compose.ui.node.LookaheadDelegate, androidx.compose.ui.layout.MeasureResult)
    {
        androidx.compose.ui.node.LookaheadDelegate $r0;
        androidx.compose.ui.layout.MeasureResult r1;

        $r0 := @parameter0: androidx.compose.ui.node.LookaheadDelegate;

        r1 := @parameter1: androidx.compose.ui.layout.MeasureResult;

        specialinvoke $r0.<androidx.compose.ui.node.LookaheadDelegate: void set_measureResult(androidx.compose.ui.layout.MeasureResult)>(r1);

        return;
    }

