androidx.tvprovider.media.tv.TvContractCompat
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String AUTHORITY>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PERMISSION_READ_TV_LISTINGS>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PATH_CHANNEL>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PATH_PROGRAM>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PATH_RECORDED_PROGRAM>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PATH_PREVIEW_PROGRAM>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PATH_WATCH_NEXT_PROGRAM>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PATH_PASSTHROUGH>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String ACTION_CHANNEL_BROWSABLE_REQUESTED>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String ACTION_REQUEST_CHANNEL_BROWSABLE>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String ACTION_PREVIEW_PROGRAM_BROWSABLE_DISABLED>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String ACTION_WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String ACTION_PREVIEW_PROGRAM_ADDED_TO_WATCH_NEXT>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String ACTION_INITIALIZE_PROGRAMS>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_CHANNEL_ID>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_PACKAGE_NAME>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_PREVIEW_PROGRAM_ID>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_WATCH_NEXT_PROGRAM_ID>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String METHOD_GET_COLUMNS>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String METHOD_ADD_COLUMN>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_EXISTING_COLUMN_NAMES>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_COLUMN_NAME>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_DATA_TYPE>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String EXTRA_DEFAULT_VALUE>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PARAM_INPUT>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PARAM_CHANNEL>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PARAM_START_TIME>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PARAM_END_TIME>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PARAM_BROWSABLE_ONLY>
<androidx.tvprovider.media.tv.TvContractCompat: java.lang.String PARAM_CANONICAL_GENRE>
    public static java.lang.String buildInputId(android.content.ComponentName)
    {
        android.content.ComponentName r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.ComponentName;

        $r1 = staticinvoke <android.media.tv.TvContract: java.lang.String buildInputId(android.content.ComponentName)>(r0);

        return $r1;
    }

    public static android.net.Uri buildChannelUri(long)
    {
        long l0;
        android.net.Uri $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelUri(long)>(l0);

        return $r0;
    }

    public static android.net.Uri buildChannelUriForPassthroughInput(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelUriForPassthroughInput(java.lang.String)>(r0);

        return $r1;
    }

    public static android.net.Uri buildChannelLogoUri(long)
    {
        long l0;
        android.net.Uri $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>(l0);

        return $r0;
    }

    public static android.net.Uri buildChannelLogoUri(android.net.Uri)
    {
        android.net.Uri r0, $r1;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(android.net.Uri)>(r0);

        return $r1;
    }

    public static android.net.Uri buildChannelsUriForInput(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String)>(r0);

        return $r1;
    }

    public static android.net.Uri buildProgramUri(long)
    {
        long l0;
        android.net.Uri $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildProgramUri(long)>(l0);

        return $r0;
    }

    public static android.net.Uri buildProgramsUriForChannel(long)
    {
        long l0;
        android.net.Uri $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long)>(l0);

        return $r0;
    }

    public static android.net.Uri buildProgramsUriForChannel(android.net.Uri)
    {
        android.net.Uri r0, $r1;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri)>(r0);

        return $r1;
    }

    public static android.net.Uri buildProgramsUriForChannel(long, long, long)
    {
        long l0, l1, l2;
        android.net.Uri $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r0 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long,long,long)>(l0, l1, l2);

        return $r0;
    }

    public static android.net.Uri buildProgramsUriForChannel(android.net.Uri, long, long)
    {
        android.net.Uri r0, $r1;
        long l0, l1;

        r0 := @parameter0: android.net.Uri;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri,long,long)>(r0, l0, l1);

        return $r1;
    }

    public static android.net.Uri buildRecordedProgramUri(long)
    {
        long l0;
        int $i1;
        android.net.Uri $r0, $r1, $r2;

        l0 := @parameter0: long;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label1;

        $r2 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildRecordedProgramUri(long)>(l0);

        return $r2;

     label1:
        $r0 = <androidx.tvprovider.media.tv.TvContractCompat$RecordedPrograms: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r0, l0);

        return $r1;
    }

    public static android.net.Uri buildPreviewProgramUri(long)
    {
        long l0;
        android.net.Uri $r0, $r1;

        l0 := @parameter0: long;

        $r0 = <androidx.tvprovider.media.tv.TvContractCompat$PreviewPrograms: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r0, l0);

        return $r1;
    }

    public static android.net.Uri buildPreviewProgramsUriForChannel(long)
    {
        long l0;
        android.net.Uri $r0, $r4;
        android.net.Uri$Builder $r1, $r3;
        java.lang.String $r2;

        l0 := @parameter0: long;

        $r0 = <androidx.tvprovider.media.tv.TvContractCompat$PreviewPrograms: android.net.Uri CONTENT_URI>;

        $r1 = virtualinvoke $r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r3 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("channel", $r2);

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r4;
    }

    public static android.net.Uri buildPreviewProgramsUriForChannel(android.net.Uri)
    {
        android.net.Uri r0, $r1;
        boolean $z0;
        long $l0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isChannelUriForTunerInput(android.net.Uri)>(r0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a channel: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        $l0 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r0);

        $r1 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: android.net.Uri buildPreviewProgramsUriForChannel(long)>($l0);

        return $r1;
    }

    public static android.net.Uri buildWatchNextProgramUri(long)
    {
        long l0;
        android.net.Uri $r0, $r1;

        l0 := @parameter0: long;

        $r0 = <androidx.tvprovider.media.tv.TvContractCompat$WatchNextPrograms: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r0, l0);

        return $r1;
    }

    private static boolean isTvUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.net.Uri;

        if r0 == null goto label1;

        $r1 = "content";

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = "android.media.tv";

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean isTwoSegmentUriStartingWith(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0;
        java.lang.String r1;
        java.util.List r2;
        int $i0;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 2 goto label1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isChannelUri(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $z2 = staticinvoke <android.media.tv.TvContract: boolean isChannelUri(android.net.Uri)>(r0);

        return $z2;

     label1:
        $z0 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isChannelUriForTunerInput(android.net.Uri)>(r0);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isChannelUriForPassthroughInput(android.net.Uri)>(r0);

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public static boolean isChannelUriForTunerInput(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $z2 = staticinvoke <android.media.tv.TvContract: boolean isChannelUriForTunerInput(android.net.Uri)>(r0);

        return $z2;

     label1:
        $z0 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTvUri(android.net.Uri)>(r0);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTwoSegmentUriStartingWith(android.net.Uri,java.lang.String)>(r0, "channel");

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static boolean isChannelUriForPassthroughInput(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $z2 = staticinvoke <android.media.tv.TvContract: boolean isChannelUriForPassthroughInput(android.net.Uri)>(r0);

        return $z2;

     label1:
        $z0 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTvUri(android.net.Uri)>(r0);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTwoSegmentUriStartingWith(android.net.Uri,java.lang.String)>(r0, "passthrough");

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static boolean isProgramUri(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $z2 = staticinvoke <android.media.tv.TvContract: boolean isProgramUri(android.net.Uri)>(r0);

        return $z2;

     label1:
        $z0 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTvUri(android.net.Uri)>(r0);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTwoSegmentUriStartingWith(android.net.Uri,java.lang.String)>(r0, "program");

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static boolean isRecordedProgramUri(android.net.Uri)
    {
        android.net.Uri r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTvUri(android.net.Uri)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <androidx.tvprovider.media.tv.TvContractCompat: boolean isTwoSegmentUriStartingWith(android.net.Uri,java.lang.String)>(r0, "recorded_program");

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static void requestChannelBrowsable(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        int $i1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 26 goto label1;

        staticinvoke <android.media.tv.TvContract: void requestChannelBrowsable(android.content.Context,long)>(r0, l0);

     label1:
        return;
    }

    private void <init>()
    {
        androidx.tvprovider.media.tv.TvContractCompat r0;

        r0 := @this: androidx.tvprovider.media.tv.TvContractCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

