androidx.compose.runtime.CompositionLocalKt
    public static final androidx.compose.runtime.ProvidableCompositionLocal compositionLocalOf(androidx.compose.runtime.SnapshotMutationPolicy, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.SnapshotMutationPolicy r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.runtime.DynamicProvidableCompositionLocal $r2;
        androidx.compose.runtime.ProvidableCompositionLocal $r3;

        r0 := @parameter0: androidx.compose.runtime.SnapshotMutationPolicy;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "policy");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "defaultFactory");

        $r2 = new androidx.compose.runtime.DynamicProvidableCompositionLocal;

        specialinvoke $r2.<androidx.compose.runtime.DynamicProvidableCompositionLocal: void <init>(androidx.compose.runtime.SnapshotMutationPolicy,kotlin.jvm.functions.Function0)>(r0, r1);

        $r3 = (androidx.compose.runtime.ProvidableCompositionLocal) $r2;

        return $r3;
    }

    public static androidx.compose.runtime.ProvidableCompositionLocal compositionLocalOf$default(androidx.compose.runtime.SnapshotMutationPolicy, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        int i0, $i1;
        java.lang.Object r1;
        androidx.compose.runtime.ProvidableCompositionLocal $r2;
        androidx.compose.runtime.SnapshotMutationPolicy r3;

        r3 := @parameter0: androidx.compose.runtime.SnapshotMutationPolicy;

        r0 := @parameter1: kotlin.jvm.functions.Function0;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

     label1:
        $r2 = staticinvoke <androidx.compose.runtime.CompositionLocalKt: androidx.compose.runtime.ProvidableCompositionLocal compositionLocalOf(androidx.compose.runtime.SnapshotMutationPolicy,kotlin.jvm.functions.Function0)>(r3, r0);

        return $r2;
    }

    public static final androidx.compose.runtime.ProvidableCompositionLocal staticCompositionLocalOf(kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.runtime.StaticProvidableCompositionLocal $r1;
        androidx.compose.runtime.ProvidableCompositionLocal $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "defaultFactory");

        $r1 = new androidx.compose.runtime.StaticProvidableCompositionLocal;

        specialinvoke $r1.<androidx.compose.runtime.StaticProvidableCompositionLocal: void <init>(kotlin.jvm.functions.Function0)>(r0);

        $r2 = (androidx.compose.runtime.ProvidableCompositionLocal) $r1;

        return $r2;
    }

    public static final void CompositionLocalProvider(androidx.compose.runtime.ProvidedValue[], kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.ProvidedValue[] r0;
        kotlin.jvm.functions.Function2 r1, $r6;
        int $i0, $i2, $i3;
        boolean $z0, $z1;
        java.lang.Integer $r2;
        androidx.compose.runtime.ScopeUpdateScope $r4;
        androidx.compose.runtime.CompositionLocalKt$CompositionLocalProvider$1 $r5;
        androidx.compose.runtime.Composer $r7, $r8;

        r0 := @parameter0: androidx.compose.runtime.ProvidedValue[];

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r7 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "values");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        $r8 = interfaceinvoke $r7.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-1390796515);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r8, "C(CompositionLocalProvider)P(1)227@9992L9:CompositionLocal.kt#9igjgp");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1390796515, $i0, -1, "androidx.compose.runtime.CompositionLocalProvider (CompositionLocal.kt:225)");

     label1:
        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void startProviders(androidx.compose.runtime.ProvidedValue[])>(r0);

        $i2 = $i0 >> 3;

        $i3 = 14 & $i2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r8, $r2);

        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void endProviders()>();

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        $r4 = interfaceinvoke $r8.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r4 != null goto label3;

        goto label4;

     label3:
        $r5 = new androidx.compose.runtime.CompositionLocalKt$CompositionLocalProvider$1;

        specialinvoke $r5.<androidx.compose.runtime.CompositionLocalKt$CompositionLocalProvider$1: void <init>(androidx.compose.runtime.ProvidedValue[],kotlin.jvm.functions.Function2,int)>(r0, r1, $i0);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        interfaceinvoke $r4.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r6);

     label4:
        return;
    }

    public static final void CompositionLocalProvider(androidx.compose.runtime.CompositionLocalContext, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.CompositionLocalContext r0;
        kotlin.jvm.functions.Function2 r1, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i12;
        androidx.compose.runtime.ProvidedValue[] r2, $r12, $r15;
        java.util.Collection r3, r7, $r28;
        java.util.Iterator r4;
        java.util.Map$Entry r5, r6;
        boolean $z2, $z3, $z5, $z6, $z7, $z9;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r8;
        java.util.ArrayList $r9;
        java.util.Set $r10;
        java.util.List $r11;
        java.lang.Object[] $r13, $r14;
        androidx.compose.runtime.CompositionLocalKt$CompositionLocalProvider$3 $r16;
        java.lang.Object $r18, $r19, $r21, $r23;
        androidx.compose.runtime.ProvidableCompositionLocal $r20;
        androidx.compose.runtime.State $r22;
        androidx.compose.runtime.ProvidedValue $r24;
        androidx.compose.runtime.Composer $r25, $r26;
        byte $b9, $b11;
        java.util.Map $r27;
        androidx.compose.runtime.ScopeUpdateScope $r29;

        r0 := @parameter0: androidx.compose.runtime.CompositionLocalContext;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r25 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        $r26 = interfaceinvoke $r25.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(1853897736);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r26, "C(CompositionLocalProvider)P(1)247@10697L209:CompositionLocal.kt#9igjgp");

        $i8 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $z7 = interfaceinvoke $r26.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z7 == 0 goto label01;

        $b9 = 4;

        goto label02;

     label01:
        $b9 = 2;

     label02:
        $i8 = $i0 | $b9;

     label03:
        $i10 = $i0 & 112;

        if $i10 != 0 goto label06;

        $i6 = $i8;

        $z6 = interfaceinvoke $r26.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        if $z6 == 0 goto label04;

        $b11 = 32;

        goto label05;

     label04:
        $b11 = 16;

     label05:
        $i8 = $i6 | $b11;

     label06:
        $i12 = $i8 & 91;

        if $i12 != 18 goto label07;

        $z5 = interfaceinvoke $r26.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z5 != 0 goto label11;

     label07:
        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label08;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1853897736, $i8, -1, "androidx.compose.runtime.CompositionLocalProvider (CompositionLocal.kt:246)");

     label08:
        $r8 = virtualinvoke r0.<androidx.compose.runtime.CompositionLocalContext: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getCompositionLocals$runtime_release()>();

        $r27 = (java.util.Map) $r8;

        $r9 = new java.util.ArrayList;

        $i2 = interfaceinvoke $r27.<java.util.Map: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = (java.util.Collection) $r9;

        $r10 = interfaceinvoke $r27.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z9 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label10;

        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r18;

        r6 = r5;

        r7 = r3;

        $r19 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r19, "null cannot be cast to non-null type androidx.compose.runtime.ProvidableCompositionLocal<kotlin.Any?>");

        $r20 = (androidx.compose.runtime.ProvidableCompositionLocal) $r19;

        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (androidx.compose.runtime.State) $r21;

        $r23 = interfaceinvoke $r22.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r24 = virtualinvoke $r20.<androidx.compose.runtime.ProvidableCompositionLocal: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>($r23);

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r24);

        goto label09;

     label10:
        $r11 = (java.util.List) r3;

        $r28 = (java.util.Collection) $r11;

        $r12 = newarray (androidx.compose.runtime.ProvidedValue)[0];

        $r13 = interfaceinvoke $r28.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r13, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r2 = (androidx.compose.runtime.ProvidedValue[]) $r13;

        $i3 = lengthof r2;

        $r14 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r2, $i3);

        $r15 = (androidx.compose.runtime.ProvidedValue[]) $r14;

        $i4 = 112 & $i8;

        $i5 = 8 | $i4;

        staticinvoke <androidx.compose.runtime.CompositionLocalKt: void CompositionLocalProvider(androidx.compose.runtime.ProvidedValue[],kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r15, r1, $r26, $i5);

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label12;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label12;

     label11:
        interfaceinvoke $r26.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label12:
        $r29 = interfaceinvoke $r26.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r29 != null goto label13;

        goto label14;

     label13:
        $r16 = new androidx.compose.runtime.CompositionLocalKt$CompositionLocalProvider$3;

        specialinvoke $r16.<androidx.compose.runtime.CompositionLocalKt$CompositionLocalProvider$3: void <init>(androidx.compose.runtime.CompositionLocalContext,kotlin.jvm.functions.Function2,int)>(r0, r1, $i0);

        $r17 = (kotlin.jvm.functions.Function2) $r16;

        interfaceinvoke $r29.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r17);

     label14:
        return;
    }

