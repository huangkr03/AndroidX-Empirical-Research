androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt
    public static final androidx.compose.runtime.State collectAsState(kotlinx.coroutines.flow.StateFlow, kotlin.coroutines.CoroutineContext, androidx.compose.runtime.Composer, int, int)
    {
        kotlinx.coroutines.flow.StateFlow $r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, i1, $i2;
        androidx.compose.runtime.State r2;
        boolean $z0, $z1;
        kotlinx.coroutines.flow.Flow $r3;
        java.lang.Object $r4;
        kotlin.coroutines.EmptyCoroutineContext $r5;
        kotlin.coroutines.CoroutineContext r6;

        $r0 := @parameter0: kotlinx.coroutines.flow.StateFlow;

        r6 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1439883919);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(collectAsState)47@1801L30:SnapshotFlow.kt#9igjgp");

        $i2 = i1 & 1;

        if $i2 == 0 goto label1;

        $r5 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        r6 = (kotlin.coroutines.CoroutineContext) $r5;

     label1:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1439883919, $i0, -1, "androidx.compose.runtime.collectAsState (SnapshotFlow.kt:45)");

     label2:
        $r3 = (kotlinx.coroutines.flow.Flow) $r0;

        $r4 = interfaceinvoke $r0.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        r2 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State collectAsState(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.coroutines.CoroutineContext,androidx.compose.runtime.Composer,int,int)>($r3, $r4, r6, $r1, 520, 0);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label3:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r2;
    }

    public static final androidx.compose.runtime.State collectAsState(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.coroutines.CoroutineContext, androidx.compose.runtime.Composer, int, int)
    {
        kotlinx.coroutines.flow.Flow $r0;
        java.lang.Object r1;
        androidx.compose.runtime.Composer $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.compose.runtime.State r3;
        boolean $z0, $z1;
        androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt$collectAsState$1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        kotlin.coroutines.EmptyCoroutineContext $r6;
        kotlin.coroutines.CoroutineContext r7;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: java.lang.Object;

        r7 := @parameter2: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter3: androidx.compose.runtime.Composer;

        $i0 := @parameter4: int;

        i1 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-606625098);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(collectAsState)P(1)62@2343L186:SnapshotFlow.kt#9igjgp");

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r6 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        r7 = (kotlin.coroutines.CoroutineContext) $r6;

     label1:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-606625098, $i0, -1, "androidx.compose.runtime.collectAsState (SnapshotFlow.kt:59)");

     label2:
        $r4 = new androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt$collectAsState$1;

        specialinvoke $r4.<androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt$collectAsState$1: void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>(r7, $r0, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $i3 = $i0 >> 3;

        $i4 = 8 & $i3;

        $i7 = 4672 | $i4;

        $i5 = $i0 >> 3;

        $i6 = 14 & $i5;

        $i8 = $i7 | $i6;

        r3 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State produceState(java.lang.Object,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>(r1, $r0, r7, $r5, $r2, $i8);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label3:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public static final kotlinx.coroutines.flow.Flow snapshotFlow(kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt$snapshotFlow$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlinx.coroutines.flow.Flow $r3;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "block");

        $r1 = new androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt$snapshotFlow$1;

        specialinvoke $r1.<androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt$snapshotFlow$1: void <init>(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>(r0, null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    private static final boolean intersects$SnapshotStateKt__SnapshotFlowKt(java.util.Set, java.util.Set)
    {
        java.util.Set $r0, r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z11;
        java.util.Collection $r2, $r3;
        java.lang.Iterable $r4, $r8;
        java.util.Iterator r5, r9;
        java.lang.Object r6, r7, r10, r11;

        $r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i0 >= $i1 goto label4;

        $r4 = (java.lang.Iterable) $r0;

        $z3 = $r4 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r3 = (java.util.Collection) $r4;

        $z5 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z7 = 0;

        goto label8;

     label1:
        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z8 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label3;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = r6;

        $z4 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r7);

        if $z4 == 0 goto label2;

        $z7 = 1;

        goto label8;

     label3:
        $z7 = 0;

        goto label8;

     label4:
        $r8 = (java.lang.Iterable) r1;

        $z0 = $r8 instanceof java.util.Collection;

        if $z0 == 0 goto label5;

        $r2 = (java.util.Collection) $r8;

        $z2 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label5;

        $z7 = 0;

        goto label8;

     label5:
        r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z11 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label7;

        r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = r10;

        $z1 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>(r11);

        if $z1 == 0 goto label6;

        $z7 = 1;

        goto label8;

     label7:
        $z7 = 0;

     label8:
        return $z7;
    }

    public static final boolean access$intersects(java.util.Set, java.util.Set)
    {
        java.util.Set $r0, r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        $z0 = staticinvoke <androidx.compose.runtime.SnapshotStateKt__SnapshotFlowKt: boolean intersects$SnapshotStateKt__SnapshotFlowKt(java.util.Set,java.util.Set)>($r0, r1);

        return $z0;
    }

