androidx.media3.extractor.text.ssa.SsaDecoder
<androidx.media3.extractor.text.ssa.SsaDecoder: java.lang.String TAG>
<androidx.media3.extractor.text.ssa.SsaDecoder: java.util.regex.Pattern SSA_TIMECODE_PATTERN>
<androidx.media3.extractor.text.ssa.SsaDecoder: java.lang.String FORMAT_LINE_PREFIX>
<androidx.media3.extractor.text.ssa.SsaDecoder: java.lang.String STYLE_LINE_PREFIX>
<androidx.media3.extractor.text.ssa.SsaDecoder: java.lang.String DIALOGUE_LINE_PREFIX>
<androidx.media3.extractor.text.ssa.SsaDecoder: float DEFAULT_MARGIN>
<androidx.media3.extractor.text.ssa.SsaDecoder: boolean haveInitializationData>
<androidx.media3.extractor.text.ssa.SsaDecoder: androidx.media3.extractor.text.ssa.SsaDialogueFormat dialogueFormatFromInitializationData>
<androidx.media3.extractor.text.ssa.SsaDecoder: java.util.Map styles>
<androidx.media3.extractor.text.ssa.SsaDecoder: float screenWidth>
<androidx.media3.extractor.text.ssa.SsaDecoder: float screenHeight>
    public void <init>()
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        specialinvoke r0.<androidx.media3.extractor.text.ssa.SsaDecoder: void <init>(java.util.List)>(null);

        return;
    }

    public void <init>(java.util.List)
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;
        java.util.List r1;
        java.lang.String r2;
        boolean $z0, $z1;
        java.lang.Object $r3, $r6, $r9;
        byte[] $r4, $r10;
        androidx.media3.extractor.text.ssa.SsaDialogueFormat $r5, $r7;
        androidx.media3.common.util.ParsableByteArray $r8;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.media3.extractor.text.SimpleSubtitleDecoder: void <init>(java.lang.String)>("SsaDecoder");

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: float screenWidth> = -3.4028235E38F;

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: float screenHeight> = -3.4028235E38F;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: boolean haveInitializationData> = 1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (byte[]) $r3;

        r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String fromUtf8Bytes(byte[])>($r4);

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Format:");

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r5 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDialogueFormat: androidx.media3.extractor.text.ssa.SsaDialogueFormat fromFormatLine(java.lang.String)>(r2);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.extractor.text.ssa.SsaDialogueFormat) $r6;

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: androidx.media3.extractor.text.ssa.SsaDialogueFormat dialogueFormatFromInitializationData> = $r7;

        $r8 = new androidx.media3.common.util.ParsableByteArray;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = (byte[]) $r9;

        specialinvoke $r8.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[])>($r10);

        specialinvoke r0.<androidx.media3.extractor.text.ssa.SsaDecoder: void parseHeader(androidx.media3.common.util.ParsableByteArray)>($r8);

        goto label2;

     label1:
        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: boolean haveInitializationData> = 0;

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: androidx.media3.extractor.text.ssa.SsaDialogueFormat dialogueFormatFromInitializationData> = null;

     label2:
        return;
    }

    protected androidx.media3.extractor.text.Subtitle decode(byte[], int, boolean)
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;
        byte[] r1;
        int i0;
        boolean z0, $z1;
        java.util.ArrayList r2, r3, $r5, $r6;
        androidx.media3.common.util.ParsableByteArray r4, $r7;
        androidx.media3.extractor.text.ssa.SsaSubtitle $r8;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        $r7 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r7.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[],int)>(r1, i0);

        r4 = $r7;

        $z1 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: boolean haveInitializationData>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<androidx.media3.extractor.text.ssa.SsaDecoder: void parseHeader(androidx.media3.common.util.ParsableByteArray)>(r4);

     label1:
        specialinvoke r0.<androidx.media3.extractor.text.ssa.SsaDecoder: void parseEventBody(androidx.media3.common.util.ParsableByteArray,java.util.List,java.util.List)>(r4, r2, r3);

        $r8 = new androidx.media3.extractor.text.ssa.SsaSubtitle;

        specialinvoke $r8.<androidx.media3.extractor.text.ssa.SsaSubtitle: void <init>(java.util.List,java.util.List)>(r2, r3);

        return $r8;
    }

    private void parseHeader(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;
        androidx.media3.common.util.ParsableByteArray r1;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map $r7;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

     label1:
        $r8 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        r2 = $r8;

        if $r8 == null goto label5;

        $r3 = "[Script Info]";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.media3.extractor.text.ssa.SsaDecoder: void parseScriptInfo(androidx.media3.common.util.ParsableByteArray)>(r1);

        goto label1;

     label2:
        $r4 = "[V4+ Styles]";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label3;

        $r7 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: java.util.Map parseStyles(androidx.media3.common.util.ParsableByteArray)>(r1);

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: java.util.Map styles> = $r7;

        goto label1;

     label3:
        $r5 = "[V4 Styles]";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label4;

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("SsaDecoder", "[V4 Styles] are not supported");

        goto label1;

     label4:
        $r6 = "[Events]";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z3 == 0 goto label1;

        return;

     label5:
        return;
    }

    private void parseScriptInfo(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;
        androidx.media3.common.util.ParsableByteArray r1;
        java.lang.String r2, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13;
        java.lang.String[] r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.Throwable $r11, $r12, r14, r15;
        byte b4;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

     label01:
        $r13 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        r2 = $r13;

        if $r13 == null goto label14;

        $i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i0 == 0 goto label02;

        $i3 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int peekUnsignedByte()>();

        if $i3 == 91 goto label14;

     label02:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i1 = lengthof r3;

        if $i1 == 2 goto label03;

        goto label01;

     label03:
        $r5 = r3[0];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r4 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r6);

        b4 = -1;

        $i2 = virtualinvoke r4.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case 1879649548: goto label04;
            case 1879649549: goto label05;
            default: goto label06;
        };

     label04:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("playresx");

        if $z1 == 0 goto label06;

        b4 = 0;

        goto label06;

     label05:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("playresy");

        if $z0 == 0 goto label06;

        b4 = 1;

     label06:
        lookupswitch(b4)
        {
            case 0: goto label07;
            case 1: goto label10;
            default: goto label13;
        };

     label07:
        $r9 = r3[1];

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r10);

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: float screenWidth> = $f1;

     label08:
        goto label13;

     label09:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label13;

     label10:
        $r7 = r3[1];

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r8);

        r0.<androidx.media3.extractor.text.ssa.SsaDecoder: float screenHeight> = $f0;

     label11:
        goto label13;

     label12:
        $r11 := @caughtexception;

        r15 = $r11;

     label13:
        goto label01;

     label14:
        return;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    private static java.util.Map parseStyles(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.common.util.ParsableByteArray r0;
        java.util.LinkedHashMap r1, $r4;
        java.lang.String r2, $r5, $r10, $r12;
        androidx.media3.extractor.text.ssa.SsaStyle r3;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r9;
        androidx.media3.extractor.text.ssa.SsaStyle$Format r11;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r1 = $r4;

        r11 = null;

     label1:
        $r12 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        r2 = $r12;

        if $r12 == null goto label6;

        $i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i0 == 0 goto label2;

        $i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int peekUnsignedByte()>();

        if $i1 == 91 goto label6;

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Format:");

        if $z0 == 0 goto label3;

        r11 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle$Format: androidx.media3.extractor.text.ssa.SsaStyle$Format fromFormatLine(java.lang.String)>(r2);

        goto label1;

     label3:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Style:");

        if $z1 == 0 goto label1;

        if r11 != null goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping \'Style:\' line before \'Format:\' line: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r10);

        goto label1;

     label4:
        r3 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: androidx.media3.extractor.text.ssa.SsaStyle fromStyleLine(java.lang.String,androidx.media3.extractor.text.ssa.SsaStyle$Format)>(r2, r11);

        if r3 == null goto label5;

        $r5 = r3.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.String name>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r3);

     label5:
        goto label1;

     label6:
        return r1;
    }

    private void parseEventBody(androidx.media3.common.util.ParsableByteArray, java.util.List, java.util.List)
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;
        androidx.media3.common.util.ParsableByteArray r1;
        java.util.List r2, r3;
        java.lang.String r4, $r8, $r11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r6, $r7;
        androidx.media3.extractor.text.ssa.SsaDialogueFormat $r9, r10;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        $z0 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: boolean haveInitializationData>;

        if $z0 == 0 goto label1;

        $r9 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: androidx.media3.extractor.text.ssa.SsaDialogueFormat dialogueFormatFromInitializationData>;

        goto label2;

     label1:
        $r9 = null;

     label2:
        r10 = $r9;

     label3:
        $r11 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        r4 = $r11;

        if $r11 == null goto label6;

        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("Format:");

        if $z1 == 0 goto label4;

        r10 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDialogueFormat: androidx.media3.extractor.text.ssa.SsaDialogueFormat fromFormatLine(java.lang.String)>(r4);

        goto label3;

     label4:
        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("Dialogue:");

        if $z2 == 0 goto label3;

        if r10 != null goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping dialogue line before complete format: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r8);

        goto label3;

     label5:
        specialinvoke r0.<androidx.media3.extractor.text.ssa.SsaDecoder: void parseDialogueLine(java.lang.String,androidx.media3.extractor.text.ssa.SsaDialogueFormat,java.util.List,java.util.List)>(r4, r10, r2, r3);

        goto label3;

     label6:
        return;
    }

    private void parseDialogueLine(java.lang.String, androidx.media3.extractor.text.ssa.SsaDialogueFormat, java.util.List, java.util.List)
    {
        androidx.media3.extractor.text.ssa.SsaDecoder r0;
        java.lang.String r1, r7, r9, $r11, $r12, $r13, $r14, $r18, $r20, $r25, $r29, $r33, $r35, $r36, $r37;
        androidx.media3.extractor.text.ssa.SsaDialogueFormat r2;
        java.util.List r3, r4, $r17;
        java.lang.String[] r5;
        long l0, l1;
        androidx.media3.extractor.text.ssa.SsaStyle r6, $r34;
        androidx.media3.extractor.text.ssa.SsaStyle$Overrides r8;
        androidx.media3.common.text.Cue r10;
        int i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, $i14, i15;
        boolean $z0;
        byte $b9, $b11;
        java.util.Map $r15, $r19;
        java.lang.Object $r16, $r21;
        java.lang.StringBuilder $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32;
        float $f0, $f1;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaDecoder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.extractor.text.ssa.SsaDialogueFormat;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("Dialogue:");

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $r11 = "Dialogue:";

        $i4 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

        $i5 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int length>;

        r5 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", $i5);

        $i7 = lengthof r5;

        $i6 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int length>;

        if $i7 == $i6 goto label1;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping dialogue line with fewer columns than format: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r33);

        return;

     label1:
        $i8 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int startTimeIndex>;

        $r13 = r5[$i8];

        l0 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: long parseTimecodeUs(java.lang.String)>($r13);

        $b9 = l0 cmp -9223372036854775807L;

        if $b9 != 0 goto label2;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping invalid timing: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r29);

        return;

     label2:
        $i10 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int endTimeIndex>;

        $r14 = r5[$i10];

        l1 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: long parseTimecodeUs(java.lang.String)>($r14);

        $b11 = l1 cmp -9223372036854775807L;

        if $b11 != 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping invalid timing: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r25);

        return;

     label3:
        $r15 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: java.util.Map styles>;

        if $r15 == null goto label4;

        $i12 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int styleIndex>;

        if $i12 == -1 goto label4;

        $r19 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: java.util.Map styles>;

        $i13 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int styleIndex>;

        $r18 = r5[$i13];

        $r20 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);

        $r34 = (androidx.media3.extractor.text.ssa.SsaStyle) $r21;

        goto label5;

     label4:
        $r34 = null;

     label5:
        r6 = $r34;

        $i14 = r2.<androidx.media3.extractor.text.ssa.SsaDialogueFormat: int textIndex>;

        r7 = r5[$i14];

        r8 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: androidx.media3.extractor.text.ssa.SsaStyle$Overrides parseFromDialogue(java.lang.String)>(r7);

        $r35 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.lang.String stripStyleOverrides(java.lang.String)>(r7);

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\N", "\n");

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\n", "\n");

        r9 = virtualinvoke $r37.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\h", "\u00a0");

        $f0 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: float screenWidth>;

        $f1 = r0.<androidx.media3.extractor.text.ssa.SsaDecoder: float screenHeight>;

        r10 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: androidx.media3.common.text.Cue createCue(java.lang.String,androidx.media3.extractor.text.ssa.SsaStyle,androidx.media3.extractor.text.ssa.SsaStyle$Overrides,float,float)>(r9, r6, r8, $f0, $f1);

        i2 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: int addCuePlacerholderByTime(long,java.util.List,java.util.List)>(l0, r4, r3);

        i3 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: int addCuePlacerholderByTime(long,java.util.List,java.util.List)>(l1, r4, r3);

        i15 = i2;

     label6:
        if i15 >= i3 goto label7;

        $r16 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i15);

        $r17 = (java.util.List) $r16;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r10);

        i15 = i15 + 1;

        goto label6;

     label7:
        return;
    }

    private static long parseTimecodeUs(java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r2;
        boolean $z0;
        java.lang.Object $r5, $r8, $r11, $r14;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, l10, l11, l12, l13;

        r0 := @parameter0: java.lang.String;

        $r2 = <androidx.media3.extractor.text.ssa.SsaDecoder: java.util.regex.Pattern SSA_TIMECODE_PATTERN>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        r1 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        return -9223372036854775807L;

     label1:
        $r4 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (java.lang.String) $r5;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $l1 = $l0 * 60L;

        $l2 = $l1 * 60L;

        l10 = $l2 * 1000000L;

        $r7 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r8;

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        $l4 = $l3 * 60L;

        $l5 = $l4 * 1000000L;

        l11 = l10 + $l5;

        $r10 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r11 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r10);

        $r12 = (java.lang.String) $r11;

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r12);

        $l7 = $l6 * 1000000L;

        l12 = l11 + $l7;

        $r13 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r14 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r13);

        $r15 = (java.lang.String) $r14;

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r15);

        $l9 = $l8 * 10000L;

        l13 = l12 + $l9;

        return l13;
    }

    private static androidx.media3.common.text.Cue createCue(java.lang.String, androidx.media3.extractor.text.ssa.SsaStyle, androidx.media3.extractor.text.ssa.SsaStyle$Overrides, float, float)
    {
        java.lang.String r0;
        androidx.media3.extractor.text.ssa.SsaStyle r1;
        androidx.media3.extractor.text.ssa.SsaStyle$Overrides r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.text.SpannableString r3, $r5;
        androidx.media3.common.text.Cue$Builder r4, $r6, $r27, $r28;
        byte $b0, $b1, $b8, $b13;
        android.graphics.PointF $r10, $r12, $r29;
        java.lang.Integer $r14, $r21, $r23, $r25;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, i15, $i16, $i17, $i18, $i19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.text.style.StrikethroughSpan $r15;
        android.text.style.UnderlineSpan $r16;
        android.text.style.StyleSpan $r17, $r18, $r19;
        android.text.style.BackgroundColorSpan $r22;
        android.text.style.ForegroundColorSpan $r24;
        android.text.Layout$Alignment $r26;
        androidx.media3.common.text.Cue $r30;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.extractor.text.ssa.SsaStyle;

        r2 := @parameter2: androidx.media3.extractor.text.ssa.SsaStyle$Overrides;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        $r5 = new android.text.SpannableString;

        specialinvoke $r5.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r0);

        r3 = $r5;

        $r6 = new androidx.media3.common.text.Cue$Builder;

        specialinvoke $r6.<androidx.media3.common.text.Cue$Builder: void <init>()>();

        r4 = virtualinvoke $r6.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setText(java.lang.CharSequence)>(r3);

        if r1 == null goto label08;

        $r14 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer primaryColor>;

        if $r14 == null goto label01;

        $r24 = new android.text.style.ForegroundColorSpan;

        $r25 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer primaryColor>;

        $i11 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        specialinvoke $r24.<android.text.style.ForegroundColorSpan: void <init>(int)>($i11);

        $i12 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r24, 0, $i12, 33);

     label01:
        $i2 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: int borderStyle>;

        if $i2 != 3 goto label02;

        $r21 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer outlineColor>;

        if $r21 == null goto label02;

        $r22 = new android.text.style.BackgroundColorSpan;

        $r23 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer outlineColor>;

        $i9 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        specialinvoke $r22.<android.text.style.BackgroundColorSpan: void <init>(int)>($i9);

        $i10 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r22, 0, $i10, 33);

     label02:
        $f8 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: float fontSize>;

        $b13 = $f8 cmpl -3.4028235E38F;

        if $b13 == 0 goto label03;

        $b8 = f1 cmpl -3.4028235E38F;

        if $b8 == 0 goto label03;

        $f6 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: float fontSize>;

        $f7 = $f6 / f1;

        virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setTextSize(float,int)>($f7, 1);

     label03:
        $z4 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: boolean bold>;

        if $z4 == 0 goto label04;

        $z3 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: boolean italic>;

        if $z3 == 0 goto label04;

        $r19 = new android.text.style.StyleSpan;

        specialinvoke $r19.<android.text.style.StyleSpan: void <init>(int)>(3);

        $i7 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r19, 0, $i7, 33);

        goto label06;

     label04:
        $z0 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: boolean bold>;

        if $z0 == 0 goto label05;

        $r18 = new android.text.style.StyleSpan;

        specialinvoke $r18.<android.text.style.StyleSpan: void <init>(int)>(1);

        $i6 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r18, 0, $i6, 33);

        goto label06;

     label05:
        $z1 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: boolean italic>;

        if $z1 == 0 goto label06;

        $r17 = new android.text.style.StyleSpan;

        specialinvoke $r17.<android.text.style.StyleSpan: void <init>(int)>(2);

        $i5 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r17, 0, $i5, 33);

     label06:
        $z5 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: boolean underline>;

        if $z5 == 0 goto label07;

        $r16 = new android.text.style.UnderlineSpan;

        specialinvoke $r16.<android.text.style.UnderlineSpan: void <init>()>();

        $i4 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r16, 0, $i4, 33);

     label07:
        $z2 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: boolean strikeout>;

        if $z2 == 0 goto label08;

        $r15 = new android.text.style.StrikethroughSpan;

        specialinvoke $r15.<android.text.style.StrikethroughSpan: void <init>()>();

        $i3 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r15, 0, $i3, 33);

     label08:
        $i14 = r2.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: int alignment>;

        if $i14 == -1 goto label09;

        i15 = r2.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: int alignment>;

        goto label11;

     label09:
        if r1 == null goto label10;

        i15 = r1.<androidx.media3.extractor.text.ssa.SsaStyle: int alignment>;

        goto label11;

     label10:
        i15 = -1;

     label11:
        $r26 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: android.text.Layout$Alignment toTextAlignment(int)>(i15);

        $r27 = virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setTextAlignment(android.text.Layout$Alignment)>($r26);

        $i16 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: int toPositionAnchor(int)>(i15);

        $r28 = virtualinvoke $r27.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPositionAnchor(int)>($i16);

        $i17 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: int toLineAnchor(int)>(i15);

        virtualinvoke $r28.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLineAnchor(int)>($i17);

        $r29 = r2.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: android.graphics.PointF position>;

        if $r29 == null goto label12;

        $b0 = f1 cmpl -3.4028235E38F;

        if $b0 == 0 goto label12;

        $b1 = f0 cmpl -3.4028235E38F;

        if $b1 == 0 goto label12;

        $r10 = r2.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: android.graphics.PointF position>;

        $f2 = $r10.<android.graphics.PointF: float x>;

        $f3 = $f2 / f0;

        virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPosition(float)>($f3);

        $r12 = r2.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: android.graphics.PointF position>;

        $f4 = $r12.<android.graphics.PointF: float y>;

        $f5 = $f4 / f1;

        virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLine(float,int)>($f5, 0);

        goto label13;

     label12:
        $i18 = virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: int getPositionAnchor()>();

        $f9 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: float computeDefaultLineOrPosition(int)>($i18);

        virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPosition(float)>($f9);

        $i19 = virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: int getLineAnchor()>();

        $f10 = staticinvoke <androidx.media3.extractor.text.ssa.SsaDecoder: float computeDefaultLineOrPosition(int)>($i19);

        virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLine(float,int)>($f10, 0);

     label13:
        $r30 = virtualinvoke r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue build()>();

        return $r30;
    }

    private static android.text.Layout$Alignment toTextAlignment(int)
    {
        int i0;
        android.text.Layout$Alignment $r0, $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label4;
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label3;
            default: goto label5;
        };

     label1:
        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r2;

     label2:
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        return $r1;

     label3:
        $r0 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        return $r0;

     label4:
        return null;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown alignment: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r6);

        return null;
    }

    private static int toLineAnchor(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label4;
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            default: goto label5;
        };

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return -2147483648;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown alignment: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r3);

        return -2147483648;
    }

    private static int toPositionAnchor(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label4;
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label3;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return -2147483648;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown alignment: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaDecoder", $r3);

        return -2147483648;
    }

    private static float computeDefaultLineOrPosition(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -2147483648: goto label4;
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return 0.05F;

     label2:
        return 0.5F;

     label3:
        return 0.95F;

     label4:
        return -3.4028235E38F;
    }

    private static int addCuePlacerholderByTime(long, java.util.List, java.util.List)
    {
        long l0, $l4, $l6;
        java.util.List r0, r1;
        int $i1, $i2, $i3, i8, i9;
        java.lang.Long $r2, $r7, $r9;
        java.lang.Object $r3, $r6, $r8;
        java.util.Collection $r4;
        byte $b5, $b7;
        java.util.ArrayList $r10;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: java.util.List;

        i8 = 0;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i9 = $i1 - 1;

     label1:
        if i9 < 0 goto label4;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i9);

        $r7 = (java.lang.Long) $r6;

        $l4 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $b5 = $l4 cmp l0;

        if $b5 != 0 goto label2;

        return i9;

     label2:
        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i9);

        $r9 = (java.lang.Long) $r8;

        $l6 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $b7 = $l6 cmp l0;

        if $b7 >= 0 goto label3;

        i8 = i9 + 1;

        goto label4;

     label3:
        i9 = i9 + -1;

        goto label1;

     label4:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>(i8, $r2);

        $i3 = i8;

        if i8 != 0 goto label5;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        goto label6;

     label5:
        $r10 = new java.util.ArrayList;

        $i2 = i8 - 1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (java.util.Collection) $r3;

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

     label6:
        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>($i3, $r10);

        return i8;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:(\\d+):)?(\\d+):(\\d+)[:.](\\d+)");

        <androidx.media3.extractor.text.ssa.SsaDecoder: java.util.regex.Pattern SSA_TIMECODE_PATTERN> = $r0;

        return;
    }

