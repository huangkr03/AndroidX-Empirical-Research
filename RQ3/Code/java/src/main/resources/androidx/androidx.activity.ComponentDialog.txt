androidx.activity.ComponentDialog
<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry _lifecycleRegistry>
<androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher>
    public void <init>(android.content.Context, int)
    {
        androidx.activity.ComponentDialog r0;
        android.content.Context r1;
        int i0;
        androidx.activity.OnBackPressedDispatcher $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,int)>(r1, i0);

        $r2 = new androidx.activity.OnBackPressedDispatcher;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.activity.ComponentDialog)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.activity.ComponentDialog: void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog)>, methodtype: void __METHODTYPE__());

        specialinvoke $r2.<androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)>($r3);

        r0.<androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher> = $r2;

        return;
    }

    public void <init>(android.content.Context, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.ComponentDialog r0;
        android.content.Context r1;
        int i0, $i1, i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.content.Context;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        specialinvoke r0.<androidx.activity.ComponentDialog: void <init>(android.content.Context,int)>(r1, i2);

        return;
    }

    private final androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()
    {
        androidx.activity.ComponentDialog r0;
        androidx.lifecycle.LifecycleRegistry r1, r2, $r3, $r5;
        androidx.lifecycle.LifecycleOwner $r4;

        r0 := @this: androidx.activity.ComponentDialog;

        $r5 = r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry _lifecycleRegistry>;

        if $r5 != null goto label1;

        $r3 = new androidx.lifecycle.LifecycleRegistry;

        $r4 = (androidx.lifecycle.LifecycleOwner) r0;

        specialinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r4);

        r1 = $r3;

        r2 = r1;

        r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry _lifecycleRegistry> = r2;

        $r5 = r1;

     label1:
        return $r5;
    }

    public final androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.activity.ComponentDialog r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.Lifecycle $r2;

        r0 := @this: androidx.activity.ComponentDialog;

        $r1 = specialinvoke r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        $r2 = (androidx.lifecycle.Lifecycle) $r1;

        return $r2;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.activity.ComponentDialog r0;
        android.os.Bundle r1;
        int $i0;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.lifecycle.Lifecycle$Event $r3;
        androidx.activity.OnBackPressedDispatcher $r4;
        android.window.OnBackInvokedDispatcher $r5;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Dialog: void onCreate(android.os.Bundle)>(r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label1;

        $r4 = r0.<androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher>;

        $r5 = virtualinvoke r0.<androidx.activity.ComponentDialog: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher()>();

        virtualinvoke $r4.<androidx.activity.OnBackPressedDispatcher: void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)>($r5);

     label1:
        $r2 = specialinvoke r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r3);

        return;
    }

    protected void onStart()
    {
        androidx.activity.ComponentDialog r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.Lifecycle$Event $r2;

        r0 := @this: androidx.activity.ComponentDialog;

        specialinvoke r0.<android.app.Dialog: void onStart()>();

        $r1 = specialinvoke r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        virtualinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        return;
    }

    protected void onStop()
    {
        androidx.activity.ComponentDialog r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.Lifecycle$Event $r2;

        r0 := @this: androidx.activity.ComponentDialog;

        $r1 = specialinvoke r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()>();

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        virtualinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        r0.<androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry _lifecycleRegistry> = null;

        specialinvoke r0.<android.app.Dialog: void onStop()>();

        return;
    }

    private static void getOnBackPressedDispatcher$annotations()
    {
        return;
    }

    public final androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
    {
        androidx.activity.ComponentDialog r0;
        androidx.activity.OnBackPressedDispatcher $r1;

        r0 := @this: androidx.activity.ComponentDialog;

        $r1 = r0.<androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher>;

        return $r1;
    }

    public void onBackPressed()
    {
        androidx.activity.ComponentDialog r0;
        androidx.activity.OnBackPressedDispatcher $r1;

        r0 := @this: androidx.activity.ComponentDialog;

        $r1 = r0.<androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher>;

        virtualinvoke $r1.<androidx.activity.OnBackPressedDispatcher: void onBackPressed()>();

        return;
    }

    public void setContentView(int)
    {
        androidx.activity.ComponentDialog r0;
        int i0;

        r0 := @this: androidx.activity.ComponentDialog;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.activity.ComponentDialog: void initViewTreeOwners()>();

        specialinvoke r0.<android.app.Dialog: void setContentView(int)>(i0);

        return;
    }

    public void setContentView(android.view.View)
    {
        androidx.activity.ComponentDialog r0;
        android.view.View r1;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<androidx.activity.ComponentDialog: void initViewTreeOwners()>();

        specialinvoke r0.<android.app.Dialog: void setContentView(android.view.View)>(r1);

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.activity.ComponentDialog r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<androidx.activity.ComponentDialog: void initViewTreeOwners()>();

        specialinvoke r0.<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.activity.ComponentDialog r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<androidx.activity.ComponentDialog: void initViewTreeOwners()>();

        specialinvoke r0.<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    private final void initViewTreeOwners()
    {
        androidx.activity.ComponentDialog r0;
        android.view.Window $r1, $r4;
        android.view.View $r2, $r5;
        androidx.lifecycle.LifecycleOwner $r3;
        androidx.activity.OnBackPressedDispatcherOwner $r6;

        r0 := @this: androidx.activity.ComponentDialog;

        $r1 = virtualinvoke r0.<androidx.activity.ComponentDialog: android.view.Window getWindow()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $r3 = (androidx.lifecycle.LifecycleOwner) r0;

        staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>($r2, $r3);

        $r4 = virtualinvoke r0.<androidx.activity.ComponentDialog: android.view.Window getWindow()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r4.<android.view.Window: android.view.View getDecorView()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "window!!.decorView");

        $r6 = (androidx.activity.OnBackPressedDispatcherOwner) r0;

        staticinvoke <androidx.activity.ViewTreeOnBackPressedDispatcherOwner: void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner)>($r5, $r6);

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.activity.ComponentDialog r0;
        android.content.Context r1;

        r0 := @this: androidx.activity.ComponentDialog;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.activity.ComponentDialog: void <init>(android.content.Context,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, 0, 2, null);

        return;
    }

    private static final void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog)
    {
        androidx.activity.ComponentDialog r0;

        r0 := @parameter0: androidx.activity.ComponentDialog;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        specialinvoke r0.<android.app.Dialog: void onBackPressed()>();

        return;
    }

