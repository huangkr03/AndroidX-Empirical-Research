androidx.compose.ui.tooling.data.SlotTreeKt
<androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect emptyBox>
<androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.Regex tokenizer>
<androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.Regex parametersInformationTokenizer>
<androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String parameterPrefix>
<androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String internalFieldPrefix>
<androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String defaultFieldName>
<androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String changedFieldName>
<androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String jacocoDataField>
<androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String recomposeScopeNameSuffix>
<androidx.compose.ui.tooling.data.SlotTreeKt: int BITS_PER_SLOT>
<androidx.compose.ui.tooling.data.SlotTreeKt: int SLOT_MASK>
<androidx.compose.ui.tooling.data.SlotTreeKt: int STATIC_BITS>
<androidx.compose.ui.tooling.data.SlotTreeKt: int STABLE_BITS>
    public static final androidx.compose.ui.unit.IntRect getEmptyBox()
    {
        androidx.compose.ui.unit.IntRect $r0;

        $r0 = <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect emptyBox>;

        return $r0;
    }

    private static final boolean isNumber(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final int number(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        int $i0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r3 = (java.lang.String) $r2;

        $i0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int parseToInt(java.lang.String)>($r3);

        return $i0;
    }

    private static final java.lang.String getText(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private static final boolean isChar(kotlin.text.MatchResult, java.lang.String)
    {
        kotlin.text.MatchResult $r0;
        java.lang.String r1, $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>($r0);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        return $z0;
    }

    private static final boolean isFileName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(4);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final boolean isParameterInformation(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(5);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final boolean isCallWithName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(6);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final java.lang.String callName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(8);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private static final boolean isANumber(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final boolean isClassName(kotlin.text.MatchResult)
    {
        kotlin.text.MatchResult $r0;
        kotlin.text.MatchGroupCollection $r1;
        kotlin.text.MatchGroup $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.text.MatchResult;

        $r1 = interfaceinvoke $r0.<kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()>();

        $r2 = interfaceinvoke $r1.<kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)>(2);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final int parseToInt(java.lang.String)
    {
        java.lang.String $r0;
        int i0;
        java.lang.Throwable r1, $r2, r5;
        androidx.compose.ui.tooling.data.ParseError r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        r4 = new androidx.compose.ui.tooling.data.ParseError;

        specialinvoke r4.<androidx.compose.ui.tooling.data.ParseError: void <init>()>();

        r5 = (java.lang.Throwable) r4;

        throw r5;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static final int parseToInt(java.lang.String, int)
    {
        java.lang.String $r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2, r5;
        androidx.compose.ui.tooling.data.ParseError r4;

        $r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $i2 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>(i0);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, $i2);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        r4 = new androidx.compose.ui.tooling.data.ParseError;

        specialinvoke r4.<androidx.compose.ui.tooling.data.ParseError: void <init>()>();

        r5 = (java.lang.Throwable) r4;

        throw r5;

     label4:
        return i1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static final java.util.List parseParameters(java.lang.String)
    {
        java.lang.String r0, $r30, r31;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r4;
        java.util.List r2, r3, $r27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.CharSequence $r5;
        kotlin.text.Regex $r6;
        kotlin.text.MatchResult $r7;
        java.lang.Integer $r8, $r9, $r10, $r11, $r19;
        kotlin.jvm.internal.Ref$IntRef $r12, r29;
        java.util.ArrayList $r13;
        androidx.compose.ui.tooling.data.Parameter $r14, $r18, $r22;
        java.lang.Object $r15, $r23;
        java.lang.Number $r16, $r24;
        boolean $z2, $z3, $z4, $z8;
        java.lang.Throwable $r26, r32;
        java.lang.Integer[] r28;

        r0 := @parameter0: java.lang.String;

        $r4 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r4.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r4;

        $r6 = <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.Regex parametersInformationTokenizer>;

        $r5 = (java.lang.CharSequence) r0;

        $r7 = staticinvoke <kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)>($r6, $r5, 0, 2, null);

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        r28 = newarray (java.lang.Integer)[4];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r28[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r28[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r28[2] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r28[3] = $r11;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>(r28);

        $r12 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r12.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r29 = $r12;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        r29.<kotlin.jvm.internal.Ref$IntRef: int element> = $i2;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r13;

     label01:
        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, "P");

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, "(");

     label02:
        $z8 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, ")");

        if $z8 != 0 goto label08;

        $z2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, "!");

        if $z2 == 0 goto label04;

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        i8 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int parseParameters$expectNumber(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        $i6 = $i5 + i8;

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: void parseParameters$ensureIndexes(kotlin.jvm.internal.Ref$IntRef,java.util.List,int)>(r29, r2, $i6);

        i9 = 0;

     label03:
        if i9 >= i8 goto label02;

        i0 = i9;

        $r22 = new androidx.compose.ui.tooling.data.Parameter;

        $r23 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $r24 = (java.lang.Number) $r23;

        $i7 = virtualinvoke $r24.<java.lang.Number: int intValue()>();

        specialinvoke $r22.<androidx.compose.ui.tooling.data.Parameter: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i7, null, 2, null);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r22);

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        i9 = i9 + 1;

        goto label03;

     label04:
        $z3 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, ",");

        if $z3 == 0 goto label05;

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        goto label02;

     label05:
        i10 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int parseParameters$expectNumber(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        $z4 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean parseParameters$isClassName(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        if $z4 == 0 goto label06;

        $r30 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String parseParameters$expectClassName(kotlin.jvm.internal.Ref$ObjectRef)>(r1);

        goto label07;

     label06:
        $r30 = null;

     label07:
        r31 = $r30;

        $r18 = new androidx.compose.ui.tooling.data.Parameter;

        specialinvoke $r18.<androidx.compose.ui.tooling.data.Parameter: void <init>(int,java.lang.String)>(i10, r31);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18);

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: void parseParameters$ensureIndexes(kotlin.jvm.internal.Ref$IntRef,java.util.List,int)>(r29, r2, i10);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>($r19);

        goto label02;

     label08:
        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String)>(r1, ")");

     label09:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 <= 0 goto label10;

        $r14 = new androidx.compose.ui.tooling.data.Parameter;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $r16 = (java.lang.Number) $r15;

        $i4 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        specialinvoke $r14.<androidx.compose.ui.tooling.data.Parameter: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i4, null, 2, null);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14);

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        goto label09;

     label10:
        return r3;

     label11:
        $r26 := @caughtexception;

        r32 = $r26;

        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r27;

        catch java.lang.NumberFormatException from label01 to label11 with label11;
    }

    private static final androidx.compose.ui.tooling.data.SourceInformationContext sourceInformationContextOf(java.lang.String, androidx.compose.ui.tooling.data.SourceInformationContext)
    {
        java.lang.String r0, r5, $r12, $r16, $r21, r26, r28, $r33, $r34;
        androidx.compose.ui.tooling.data.SourceInformationContext r1, $r32;
        kotlin.jvm.internal.Ref$ObjectRef r2, $r6;
        java.util.List r3, r27;
        kotlin.text.MatchResult r4, $r9;
        java.lang.CharSequence $r7, $r17;
        kotlin.text.Regex $r8;
        java.util.ArrayList $r10;
        java.lang.Object $r11, $r13, $r31;
        boolean $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12;
        androidx.compose.ui.tooling.data.SourceLocationInfo $r14, r29;
        kotlin.ranges.IntRange $r15, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, $i10;
        java.lang.Throwable $r25, r30;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.compose.ui.tooling.data.SourceInformationContext;

        $r6 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r6.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r2 = $r6;

        $r8 = <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.Regex tokenizer>;

        $r7 = (java.lang.CharSequence) r0;

        $r9 = staticinvoke <kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)>($r8, $r7, 0, 2, null);

        r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r10;

        i7 = -1;

        z10 = 0;

        r26 = null;

        r27 = null;

        r28 = null;

        i8 = -1;

     label01:
        $r11 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r11 == null goto label19;

        $r13 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r13);

        r4 = (kotlin.text.MatchResult) $r13;

        $z1 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r4);

        if $z1 != 0 goto label02;

        $z3 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r4, "@");

        if $z3 == 0 goto label04;

     label02:
        $r14 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.SourceLocationInfo sourceInformationContextOf$parseLocation(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        if $r14 == null goto label03;

        r29 = $r14;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r29);

        goto label18;

     label03:
        goto label18;

     label04:
        $z4 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r4, "C");

        if $z4 == 0 goto label05;

        z10 = 1;

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label18;

     label05:
        $z5 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isCallWithName(kotlin.text.MatchResult)>(r4);

        if $z5 == 0 goto label06;

        z10 = 1;

        r26 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String callName(kotlin.text.MatchResult)>(r4);

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label18;

     label06:
        $z6 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isParameterInformation(kotlin.text.MatchResult)>(r4);

        if $z6 == 0 goto label07;

        $r21 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r4);

        r27 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.util.List parseParameters(java.lang.String)>($r21);

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label18;

     label07:
        $z7 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r4, "*");

        if $z7 == 0 goto label08;

        i7 = interfaceinvoke r3.<java.util.List: int size()>();

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label18;

     label08:
        $z8 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r4, ",");

        if $z8 == 0 goto label09;

        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r2);

        goto label18;

     label09:
        $z9 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isFileName(kotlin.text.MatchResult)>(r4);

        if $z9 == 0 goto label17;

        $r15 = interfaceinvoke r4.<kotlin.text.MatchResult: kotlin.ranges.IntRange getRange()>();

        $i0 = virtualinvoke $r15.<kotlin.ranges.IntRange: int getLast()>();

        $i1 = $i0 + 1;

        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "this as java.lang.String).substring(startIndex)");

        r28 = $r16;

        r5 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String)>(r28, "#", "");

        $r17 = (java.lang.CharSequence) r5;

        $i2 = interfaceinvoke $r17.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        if $z11 == 0 goto label16;

        $i3 = virtualinvoke r28.<java.lang.String: int length()>();

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        $i5 = $i3 - $i4;

        $i6 = $i5 - 1;

        $r18 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i6);

        r28 = staticinvoke <kotlin.text.StringsKt: java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)>(r28, $r18);

     label12:
        i9 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int parseToInt(java.lang.String,int)>(r5, 36);

     label13:
        goto label15;

     label14:
        $r25 := @caughtexception;

        r30 = $r25;

        i9 = -1;

     label15:
        i8 = i9;

     label16:
        goto label19;

     label17:
        goto label19;

     label18:
        $r31 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, $r31);

        if $z12 == 0 goto label01;

        return null;

     label19:
        $r32 = new androidx.compose.ui.tooling.data.SourceInformationContext;

        $r33 = r26;

        $r34 = r28;

        if r28 != null goto label21;

        if r1 == null goto label20;

        $r12 = virtualinvoke r1.<androidx.compose.ui.tooling.data.SourceInformationContext: java.lang.String getSourceFile()>();

        $r34 = $r12;

        goto label21;

     label20:
        $r34 = null;

     label21:
        if r28 == null goto label22;

        $i10 = i8;

        goto label24;

     label22:
        if r1 == null goto label23;

        $i10 = virtualinvoke r1.<androidx.compose.ui.tooling.data.SourceInformationContext: int getPackageHash()>();

        goto label24;

     label23:
        $i10 = i8;

     label24:
        specialinvoke $r32.<androidx.compose.ui.tooling.data.SourceInformationContext: void <init>(java.lang.String,java.lang.String,int,java.util.List,int,java.util.List,boolean)>($r33, $r34, $i10, r3, i7, r27, z10);

        return $r32;

        catch java.lang.NumberFormatException from label12 to label13 with label14;
    }

    static androidx.compose.ui.tooling.data.SourceInformationContext sourceInformationContextOf$default(java.lang.String, androidx.compose.ui.tooling.data.SourceInformationContext, int, java.lang.Object)
    {
        java.lang.String r0;
        int i0, $i1;
        java.lang.Object r1;
        androidx.compose.ui.tooling.data.SourceInformationContext $r2, r3;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: androidx.compose.ui.tooling.data.SourceInformationContext;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.SourceInformationContext sourceInformationContextOf(java.lang.String,androidx.compose.ui.tooling.data.SourceInformationContext)>(r0, r3);

        return $r2;
    }

    private static final androidx.compose.ui.tooling.data.Group getGroup(androidx.compose.runtime.tooling.CompositionGroup, androidx.compose.ui.tooling.data.SourceInformationContext)
    {
        androidx.compose.runtime.tooling.CompositionGroup $r0, r33;
        androidx.compose.ui.tooling.data.SourceInformationContext r1, r3, $r30;
        java.lang.Object r2, r4, $r22, $r27, r40, r43, $r59;
        java.util.List r5, $r16, r31, $r34, $r35, $r60;
        androidx.compose.ui.tooling.data.SourceLocation r6, $r48;
        androidx.compose.ui.tooling.data.Group r7, $r28, $r49;
        java.util.Collection r8, $r12, $r20, $r21, r38, $r61, $r62;
        java.lang.String $r9, $r17, r29, $r54, $r57;
        java.util.ArrayList $r10, $r11, $r15;
        java.lang.Iterable $r13, $r14, $r37, $r41;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z12, z16, $z17, $z18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.ui.tooling.data.NodeGroup $r19;
        java.lang.UnsupportedOperationException $r23;
        androidx.compose.ui.unit.IntRect $r24, $r36, $r44, r45, r46;
        androidx.compose.ui.layout.LayoutInfo $r25, $r26;
        java.util.Iterator $r32, r39, $r42;
        androidx.compose.ui.tooling.data.CallGroup $r50;
        java.lang.CharSequence $r58;

        $r0 := @parameter0: androidx.compose.runtime.tooling.CompositionGroup;

        r1 := @parameter1: androidx.compose.ui.tooling.data.SourceInformationContext;

        r2 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.Object getKey()>();

        $r9 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.String getSourceInfo()>();

        if $r9 == null goto label01;

        r29 = $r9;

        $r30 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.SourceInformationContext sourceInformationContextOf(java.lang.String,androidx.compose.ui.tooling.data.SourceInformationContext)>(r29, r1);

        goto label02;

     label01:
        $r30 = null;

     label02:
        r3 = $r30;

        r4 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.Object getNode()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r5 = (java.util.List) $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r31 = (java.util.List) $r11;

        $r12 = (java.util.Collection) r5;

        $r13 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.Iterable getData()>();

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r12, $r13);

        $r14 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.Iterable getCompositionGroups()>();

        $r32 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z12 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label04;

        $r27 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (androidx.compose.runtime.tooling.CompositionGroup) $r27;

        $r28 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.Group getGroup(androidx.compose.runtime.tooling.CompositionGroup,androidx.compose.ui.tooling.data.SourceInformationContext)>(r33, r3);

        interfaceinvoke r31.<java.util.List: boolean add(java.lang.Object)>($r28);

        goto label03;

     label04:
        $z2 = r4 instanceof androidx.compose.ui.layout.LayoutInfo;

        if $z2 == 0 goto label05;

        $r26 = (androidx.compose.ui.layout.LayoutInfo) r4;

        $r34 = interfaceinvoke $r26.<androidx.compose.ui.layout.LayoutInfo: java.util.List getModifierInfo()>();

        goto label06;

     label05:
        $r34 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label06:
        $r35 = $r34;

        $z3 = r4 instanceof androidx.compose.ui.layout.LayoutInfo;

        if $z3 == 0 goto label07;

        $r25 = (androidx.compose.ui.layout.LayoutInfo) r4;

        $r36 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect boundsOfLayoutNode(androidx.compose.ui.layout.LayoutInfo)>($r25);

        goto label14;

     label07:
        $z4 = interfaceinvoke r31.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label08;

        $r36 = <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect emptyBox>;

        goto label14;

     label08:
        $r37 = (java.lang.Iterable) r31;

        $r15 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r37, 10);

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0);

        r38 = (java.util.Collection) $r15;

        r39 = interfaceinvoke $r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        r40 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.compose.ui.tooling.data.Group) r40;

        r8 = r38;

        $r24 = virtualinvoke r7.<androidx.compose.ui.tooling.data.Group: androidx.compose.ui.unit.IntRect getBox()>();

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r24);

        goto label09;

     label10:
        $r16 = (java.util.List) r38;

        $r41 = (java.lang.Iterable) $r16;

        $r42 = interfaceinvoke $r41.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z6 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label11;

        $r23 = new java.lang.UnsupportedOperationException;

        specialinvoke $r23.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty collection can\'t be reduced.");

        throw $r23;

     label11:
        r43 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

     label12:
        $z7 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r22 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        $r44 = (androidx.compose.ui.unit.IntRect) $r22;

        r45 = (androidx.compose.ui.unit.IntRect) r43;

        z16 = 0;

        r43 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect union(androidx.compose.ui.unit.IntRect,androidx.compose.ui.unit.IntRect)>($r44, r45);

        goto label12;

     label13:
        $r36 = (androidx.compose.ui.unit.IntRect) r43;

     label14:
        r46 = $r36;

        if r3 == null goto label16;

        $z8 = virtualinvoke r3.<androidx.compose.ui.tooling.data.SourceInformationContext: boolean isCall()>();

        if $z8 != 1 goto label15;

        $z17 = 1;

        goto label17;

     label15:
        $z17 = 0;

        goto label17;

     label16:
        $z17 = 0;

     label17:
        if $z17 == 0 goto label19;

        if r1 == null goto label18;

        $r48 = virtualinvoke r1.<androidx.compose.ui.tooling.data.SourceInformationContext: androidx.compose.ui.tooling.data.SourceLocation nextSourceLocation()>();

        goto label20;

     label18:
        $r48 = null;

        goto label20;

     label19:
        $r48 = (androidx.compose.ui.tooling.data.SourceLocation) null;

     label20:
        r6 = $r48;

        if r4 == null goto label21;

        $r19 = new androidx.compose.ui.tooling.data.NodeGroup;

        $r21 = (java.util.Collection) r5;

        $r20 = (java.util.Collection) r31;

        specialinvoke $r19.<androidx.compose.ui.tooling.data.NodeGroup: void <init>(java.lang.Object,java.lang.Object,androidx.compose.ui.unit.IntRect,java.util.Collection,java.util.List,java.util.Collection)>(r2, r4, r46, $r21, $r35, $r20);

        $r49 = (androidx.compose.ui.tooling.data.Group) $r19;

        goto label32;

     label21:
        $r50 = new androidx.compose.ui.tooling.data.CallGroup;

        if r3 == null goto label22;

        $r17 = virtualinvoke r3.<androidx.compose.ui.tooling.data.SourceInformationContext: java.lang.String getName()>();

        $r54 = $r17;

        goto label23;

     label22:
        $r54 = null;

     label23:
        if r3 == null goto label24;

        $r57 = virtualinvoke r3.<androidx.compose.ui.tooling.data.SourceInformationContext: java.lang.String getName()>();

        goto label25;

     label24:
        $r57 = null;

     label25:
        $r58 = (java.lang.CharSequence) $r57;

        if $r58 == null goto label26;

        $i7 = interfaceinvoke $r58.<java.lang.CharSequence: int length()>();

        if $i7 != 0 goto label27;

     label26:
        $z18 = 1;

        goto label28;

     label27:
        $z18 = 0;

     label28:
        if $z18 != 0 goto label30;

        $i1 = virtualinvoke r46.<androidx.compose.ui.unit.IntRect: int getBottom()>();

        $i2 = virtualinvoke r46.<androidx.compose.ui.unit.IntRect: int getTop()>();

        $i3 = $i1 - $i2;

        if $i3 > 0 goto label29;

        $i4 = virtualinvoke r46.<androidx.compose.ui.unit.IntRect: int getRight()>();

        $i5 = virtualinvoke r46.<androidx.compose.ui.unit.IntRect: int getLeft()>();

        $i6 = $i4 - $i5;

        if $i6 <= 0 goto label30;

     label29:
        $r59 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.Object getIdentity()>();

        goto label31;

     label30:
        $r59 = null;

     label31:
        $r60 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.util.List extractParameterInfo(java.util.List,androidx.compose.ui.tooling.data.SourceInformationContext)>(r5, r3);

        $r61 = (java.util.Collection) r5;

        $r62 = (java.util.Collection) r31;

        specialinvoke $r50.<androidx.compose.ui.tooling.data.CallGroup: void <init>(java.lang.Object,java.lang.String,androidx.compose.ui.unit.IntRect,androidx.compose.ui.tooling.data.SourceLocation,java.lang.Object,java.util.List,java.util.Collection,java.util.Collection)>(r2, $r54, r46, r6, $r59, $r60, $r61, $r62);

        $r49 = (androidx.compose.ui.tooling.data.Group) $r50;

     label32:
        return $r49;
    }

    private static final androidx.compose.ui.unit.IntRect boundsOfLayoutNode(androidx.compose.ui.layout.LayoutInfo)
    {
        androidx.compose.ui.layout.LayoutInfo r0;
        long l0, l1;
        int i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        androidx.compose.ui.layout.LayoutCoordinates $r1, $r2;
        float $f0, $f1;
        androidx.compose.ui.unit.IntRect $r3, $r4;

        r0 := @parameter0: androidx.compose.ui.layout.LayoutInfo;

        $z0 = interfaceinvoke r0.<androidx.compose.ui.layout.LayoutInfo: boolean isAttached()>();

        if $z0 != 0 goto label1;

        $r4 = new androidx.compose.ui.unit.IntRect;

        $i8 = interfaceinvoke r0.<androidx.compose.ui.layout.LayoutInfo: int getWidth()>();

        $i9 = interfaceinvoke r0.<androidx.compose.ui.layout.LayoutInfo: int getHeight()>();

        specialinvoke $r4.<androidx.compose.ui.unit.IntRect: void <init>(int,int,int,int)>(0, 0, $i8, $i9);

        return $r4;

     label1:
        $r1 = interfaceinvoke r0.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        l0 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: long positionInWindow(androidx.compose.ui.layout.LayoutCoordinates)>($r1);

        $r2 = interfaceinvoke r0.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        l1 = interfaceinvoke $r2.<androidx.compose.ui.layout.LayoutCoordinates: long getSize-YbymL2g()>();

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        i3 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l1);

        i4 = i2 + $i6;

        $i7 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>(l1);

        i5 = i3 + $i7;

        $r3 = new androidx.compose.ui.unit.IntRect;

        specialinvoke $r3.<androidx.compose.ui.unit.IntRect: void <init>(int,int,int,int)>(i2, i3, i4, i5);

        return $r3;
    }

    public static final java.lang.Object mapTree(androidx.compose.runtime.tooling.CompositionData, kotlin.jvm.functions.Function3, androidx.compose.ui.tooling.data.ContextCache)
    {
        androidx.compose.runtime.tooling.CompositionData $r0;
        kotlin.jvm.functions.Function3 r1;
        androidx.compose.ui.tooling.data.ContextCache r2;
        androidx.compose.runtime.tooling.CompositionGroup r3, $r8;
        androidx.compose.ui.tooling.data.CompositionCallStack r4, $r9;
        java.util.List r5;
        java.lang.Iterable $r6;
        java.lang.Object $r7, $r13;
        java.util.Map $r10;
        java.util.ArrayList $r11;

        $r0 := @parameter0: androidx.compose.runtime.tooling.CompositionData;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        r2 := @parameter2: androidx.compose.ui.tooling.data.ContextCache;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "cache");

        $r6 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionData: java.lang.Iterable getCompositionGroups()>();

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)>($r6);

        $r8 = (androidx.compose.runtime.tooling.CompositionGroup) $r7;

        if $r8 != null goto label1;

        return null;

     label1:
        r3 = $r8;

        $r9 = new androidx.compose.ui.tooling.data.CompositionCallStack;

        $r10 = virtualinvoke r2.<androidx.compose.ui.tooling.data.ContextCache: java.util.Map getContexts$ui_tooling_data_release()>();

        specialinvoke $r9.<androidx.compose.ui.tooling.data.CompositionCallStack: void <init>(kotlin.jvm.functions.Function3,java.util.Map)>(r1, $r10);

        r4 = $r9;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r5 = (java.util.List) $r11;

        virtualinvoke r4.<androidx.compose.ui.tooling.data.CompositionCallStack: androidx.compose.ui.unit.IntRect convert(androidx.compose.runtime.tooling.CompositionGroup,int,java.util.List)>(r3, 0, r5);

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>(r5);

        return $r13;
    }

    public static java.lang.Object mapTree$default(androidx.compose.runtime.tooling.CompositionData, kotlin.jvm.functions.Function3, androidx.compose.ui.tooling.data.ContextCache, int, java.lang.Object)
    {
        androidx.compose.runtime.tooling.CompositionData r0;
        kotlin.jvm.functions.Function3 r1;
        int i0, $i1;
        java.lang.Object r2, $r3;
        androidx.compose.ui.tooling.data.ContextCache $r4, r5;

        r0 := @parameter0: androidx.compose.runtime.tooling.CompositionData;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        r5 := @parameter2: androidx.compose.ui.tooling.data.ContextCache;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r4 = new androidx.compose.ui.tooling.data.ContextCache;

        specialinvoke $r4.<androidx.compose.ui.tooling.data.ContextCache: void <init>()>();

        r5 = $r4;

     label1:
        $r3 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.Object mapTree(androidx.compose.runtime.tooling.CompositionData,kotlin.jvm.functions.Function3,androidx.compose.ui.tooling.data.ContextCache)>(r0, r1, r5);

        return $r3;
    }

    public static final java.util.List findParameters(androidx.compose.runtime.tooling.CompositionGroup, androidx.compose.ui.tooling.data.ContextCache)
    {
        androidx.compose.runtime.tooling.CompositionGroup $r0;
        androidx.compose.ui.tooling.data.ContextCache r1;
        java.lang.String r2, $r6;
        androidx.compose.ui.tooling.data.SourceInformationContext r3, $r9, $r10;
        java.util.Map $r4;
        java.lang.Object r5, $r11, r12;
        boolean $z1;
        java.util.List $r8, r14, $r17;
        java.util.ArrayList $r13;
        java.util.Collection $r15;
        java.lang.Iterable $r16;

        $r0 := @parameter0: androidx.compose.runtime.tooling.CompositionGroup;

        r1 := @parameter1: androidx.compose.ui.tooling.data.ContextCache;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r6 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.String getSourceInfo()>();

        if $r6 != null goto label1;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r8;

     label1:
        r2 = $r6;

        if r1 != null goto label2;

        $r9 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.SourceInformationContext sourceInformationContextOf$default(java.lang.String,androidx.compose.ui.tooling.data.SourceInformationContext,int,java.lang.Object)>(r2, null, 2, null);

        goto label6;

     label2:
        $r4 = virtualinvoke r1.<androidx.compose.ui.tooling.data.ContextCache: java.util.Map getContexts$ui_tooling_data_release()>();

        r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if r5 != null goto label3;

        $r10 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.SourceInformationContext sourceInformationContextOf$default(java.lang.String,androidx.compose.ui.tooling.data.SourceInformationContext,int,java.lang.Object)>(r2, null, 2, null);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r10);

        $r11 = $r10;

        goto label4;

     label3:
        $r11 = r5;

     label4:
        r12 = $r11;

        $z1 = r12 instanceof androidx.compose.ui.tooling.data.SourceInformationContext;

        if $z1 == 0 goto label5;

        $r9 = (androidx.compose.ui.tooling.data.SourceInformationContext) r12;

        goto label6;

     label5:
        $r9 = null;

     label6:
        r3 = $r9;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r14 = (java.util.List) $r13;

        $r15 = (java.util.Collection) r14;

        $r16 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionGroup: java.lang.Iterable getData()>();

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r15, $r16);

        $r17 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.util.List extractParameterInfo(java.util.List,androidx.compose.ui.tooling.data.SourceInformationContext)>(r14, r3);

        return $r17;
    }

    public static java.util.List findParameters$default(androidx.compose.runtime.tooling.CompositionGroup, androidx.compose.ui.tooling.data.ContextCache, int, java.lang.Object)
    {
        androidx.compose.runtime.tooling.CompositionGroup r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.List $r2;
        androidx.compose.ui.tooling.data.ContextCache r3;

        r0 := @parameter0: androidx.compose.runtime.tooling.CompositionGroup;

        r3 := @parameter1: androidx.compose.ui.tooling.data.ContextCache;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.util.List findParameters(androidx.compose.runtime.tooling.CompositionGroup,androidx.compose.ui.tooling.data.ContextCache)>(r0, r3);

        return $r2;
    }

    public static final androidx.compose.ui.tooling.data.Group asTree(androidx.compose.runtime.tooling.CompositionData)
    {
        androidx.compose.runtime.tooling.CompositionData $r0;
        java.lang.Iterable $r1;
        java.lang.Object $r2;
        androidx.compose.runtime.tooling.CompositionGroup $r3;
        androidx.compose.ui.tooling.data.EmptyGroup $r4;
        androidx.compose.ui.tooling.data.Group $r5;

        $r0 := @parameter0: androidx.compose.runtime.tooling.CompositionData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.compose.runtime.tooling.CompositionData: java.lang.Iterable getCompositionGroups()>();

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)>($r1);

        $r3 = (androidx.compose.runtime.tooling.CompositionGroup) $r2;

        if $r3 == null goto label1;

        $r5 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.tooling.data.Group getGroup(androidx.compose.runtime.tooling.CompositionGroup,androidx.compose.ui.tooling.data.SourceInformationContext)>($r3, null);

        if $r5 != null goto label2;

     label1:
        $r4 = <androidx.compose.ui.tooling.data.EmptyGroup: androidx.compose.ui.tooling.data.EmptyGroup INSTANCE>;

        $r5 = (androidx.compose.ui.tooling.data.Group) $r4;

     label2:
        return $r5;
    }

    public static final androidx.compose.ui.unit.IntRect union(androidx.compose.ui.unit.IntRect, androidx.compose.ui.unit.IntRect)
    {
        androidx.compose.ui.unit.IntRect $r0, r1, $r2, $r3, $r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1;

        $r0 := @parameter0: androidx.compose.ui.unit.IntRect;

        r1 := @parameter1: androidx.compose.ui.unit.IntRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect emptyBox>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r2);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect emptyBox>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z1 == 0 goto label2;

        return $r0;

     label2:
        $i4 = virtualinvoke $r0.<androidx.compose.ui.unit.IntRect: int getLeft()>();

        $i5 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getLeft()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $i6 = virtualinvoke $r0.<androidx.compose.ui.unit.IntRect: int getTop()>();

        $i7 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getTop()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        $i8 = virtualinvoke $r0.<androidx.compose.ui.unit.IntRect: int getBottom()>();

        $i9 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getBottom()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $i10 = virtualinvoke $r0.<androidx.compose.ui.unit.IntRect: int getRight()>();

        $i11 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getRight()>();

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i11);

        $r4 = new androidx.compose.ui.unit.IntRect;

        specialinvoke $r4.<androidx.compose.ui.unit.IntRect: void <init>(int,int,int,int)>(i0, i1, i3, i2);

        return $r4;
    }

    private static final java.lang.String keyPosition(java.lang.Object)
    {
        java.lang.Object r0, r1, $r3, $r5;
        boolean $z0, $z1;
        androidx.compose.ui.tooling.data.JoinedKey $r2, $r4;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        r1 = r0;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r6 = (java.lang.String) r0;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.compose.ui.tooling.data.JoinedKey;

        if $z1 == 0 goto label2;

        $r2 = (androidx.compose.ui.tooling.data.JoinedKey) r0;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.tooling.data.JoinedKey: java.lang.Object getLeft()>();

        $r6 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String keyPosition(java.lang.Object)>($r3);

        if $r6 != null goto label3;

        $r4 = (androidx.compose.ui.tooling.data.JoinedKey) r0;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.tooling.data.JoinedKey: java.lang.Object getRight()>();

        $r6 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String keyPosition(java.lang.Object)>($r5);

        goto label3;

     label2:
        $r6 = null;

     label3:
        return $r6;
    }

    private static final java.util.List extractParameterInfo(java.util.List, androidx.compose.ui.tooling.data.SourceInformationContext)
    {
        java.util.List r0, r3, $r9, $r42, $r43, $r44, $r55;
        androidx.compose.ui.tooling.data.SourceInformationContext r1;
        java.lang.Object r2, $r13, $r15, $r19, $r21, r29, r30, $r31, $r33, r39, r48;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i22, $i23;
        boolean z0, z1, z2, $z3, $z4, $z6, $z8, $z9, $z10, $z11, $z14, $z18, $z21, $z22, $z23, $z24, $z25, $z28;
        java.lang.String r4, $r14, $r16, $r17, $r18, $r25, $r51, $r53;
        byte b3;
        java.util.Collection $r5, r38;
        java.lang.Class $r6, $r24, r34;
        java.lang.reflect.Field[] $r7;
        java.util.ArrayList $r8, $r12;
        androidx.compose.ui.tooling.data.SlotTreeKt$extractParameterInfo$$inlined$sortedBy$1 $r10;
        java.util.Comparator $r11;
        java.lang.Integer $r20, $r22;
        java.lang.Throwable $r26;
        java.lang.Iterable $r27, $r41;
        java.util.Iterator r28;
        java.lang.reflect.Field $r32, r35, r36, r40, r47;
        java.lang.Object[] $r37;
        androidx.compose.ui.tooling.data.Parameter $r45, r46;
        androidx.compose.ui.tooling.data.ParameterInformation $r50;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.compose.ui.tooling.data.SourceInformationContext;

        $r5 = (java.util.Collection) r0;

        $z3 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label01;

        $z11 = 1;

        goto label02;

     label01:
        $z11 = 0;

     label02:
        if $z11 == 0 goto label36;

        $r27 = (java.lang.Iterable) r0;

        r28 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r30 = r29;

        if r30 == null goto label04;

        $r24 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "it.javaClass.name");

        $z10 = staticinvoke <kotlin.text.StringsKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r25, ".RecomposeScopeImpl", 0, 2, null);

        if $z10 == 0 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        if $z14 == 0 goto label03;

        $r31 = r29;

        goto label07;

     label06:
        $r31 = null;

     label07:
        r2 = $r31;

        if r2 == null goto label36;

     label08:
        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.reflect.Field accessibleField(java.lang.Class,java.lang.String)>($r6, "block");

        if $r32 == null goto label36;

        $r33 = virtualinvoke $r32.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if $r33 == null goto label36;

        r34 = virtualinvoke $r33.<java.lang.Object: java.lang.Class getClass()>();

        r35 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.reflect.Field accessibleField(java.lang.Class,java.lang.String)>(r34, "$$default");

        r36 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.reflect.Field accessibleField(java.lang.Class,java.lang.String)>(r34, "$$changed");

        if r35 == null goto label09;

        $r21 = virtualinvoke r35.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r33);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r21, "null cannot be cast to non-null type kotlin.Int");

        $r22 = (java.lang.Integer) $r21;

        $i16 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        goto label10;

     label09:
        $i16 = 0;

     label10:
        $i17 = $i16;

        if r36 == null goto label11;

        $r19 = virtualinvoke r36.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r33);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r19, "null cannot be cast to non-null type kotlin.Int");

        $r20 = (java.lang.Integer) $r19;

        $i18 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        goto label12;

     label11:
        $i18 = 0;

     label12:
        i0 = $i18;

        $r7 = virtualinvoke r34.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "blockClass.declaredFields");

        $r37 = (java.lang.Object[]) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r38 = (java.util.Collection) $r8;

        $i19 = 0;

        i20 = lengthof $r37;

     label13:
        if $i19 >= i20 goto label17;

        r39 = $r37[$i19];

        r40 = (java.lang.reflect.Field) r39;

        $r16 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "it.name");

        $z6 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r16, "$", 0, 2, null);

        if $z6 == 0 goto label14;

        $r17 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "it.name");

        $z8 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r17, "$$", 0, 2, null);

        if $z8 != 0 goto label14;

        $r18 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "it.name");

        $z9 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r18, "$jacoco", 0, 2, null);

        if $z9 != 0 goto label14;

        $z18 = 1;

        goto label15;

     label14:
        $z18 = 0;

     label15:
        if $z18 == 0 goto label16;

        interfaceinvoke r38.<java.util.Collection: boolean add(java.lang.Object)>(r39);

     label16:
        $i19 = $i19 + 1;

        goto label13;

     label17:
        $r9 = (java.util.List) r38;

        $r41 = (java.lang.Iterable) $r9;

        $r10 = new androidx.compose.ui.tooling.data.SlotTreeKt$extractParameterInfo$$inlined$sortedBy$1;

        specialinvoke $r10.<androidx.compose.ui.tooling.data.SlotTreeKt$extractParameterInfo$$inlined$sortedBy$1: void <init>()>();

        $r11 = (java.util.Comparator) $r10;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r41, $r11);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r42 = (java.util.List) $r12;

        if r1 == null goto label18;

        $r43 = virtualinvoke r1.<androidx.compose.ui.tooling.data.SourceInformationContext: java.util.List getParameters()>();

        if $r43 != null goto label19;

     label18:
        $r43 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label19:
        $r44 = $r43;

        $i21 = interfaceinvoke r3.<java.util.List: int size()>();

        i22 = 0;

     label20:
        if i22 >= $i21 goto label34;

        $i23 = i22;

        $i4 = interfaceinvoke $r44.<java.util.List: int size()>();

        if i22 >= $i4 goto label21;

        $r15 = interfaceinvoke $r44.<java.util.List: java.lang.Object get(int)>(i22);

        $r45 = (androidx.compose.ui.tooling.data.Parameter) $r15;

        goto label22;

     label21:
        $r45 = new androidx.compose.ui.tooling.data.Parameter;

        specialinvoke $r45.<androidx.compose.ui.tooling.data.Parameter: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i22, null, 2, null);

     label22:
        r46 = $r45;

        $i5 = virtualinvoke r46.<androidx.compose.ui.tooling.data.Parameter: int getSortedIndex()>();

        $i6 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i5 >= $i6 goto label33;

        $i7 = virtualinvoke r46.<androidx.compose.ui.tooling.data.Parameter: int getSortedIndex()>();

        $r13 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i7);

        r47 = (java.lang.reflect.Field) $r13;

        virtualinvoke r47.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        r48 = virtualinvoke r47.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r33);

        $i8 = 1 << $i23;

        $i9 = $i8 & $i17;

        if $i9 == 0 goto label23;

        $z21 = 1;

        goto label24;

     label23:
        $z21 = 0;

     label24:
        $z22 = $z21;

        $i10 = $i23 * 3;

        i1 = $i10 + 1;

        $i11 = 7 << i1;

        $i12 = $i11 & i0;

        i2 = $i12 >> i1;

        $i13 = i2 & 3;

        if $i13 != 3 goto label25;

        $z23 = 1;

        goto label26;

     label25:
        $z23 = 0;

     label26:
        z0 = $z23;

        $i14 = i2 & 3;

        if $i14 != 0 goto label27;

        $z24 = 1;

        goto label28;

     label27:
        $z24 = 0;

     label28:
        z1 = $z24;

        $i15 = i2 & 4;

        if $i15 != 0 goto label29;

        $z25 = 1;

        goto label30;

     label29:
        $z25 = 0;

     label30:
        z2 = $z25;

        $r50 = new androidx.compose.ui.tooling.data.ParameterInformation;

        $r14 = virtualinvoke r47.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "field.name");

        r4 = $r14;

        b3 = 1;

        $r51 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(b3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r51, "this as java.lang.String).substring(startIndex)");

        if z1 == 0 goto label31;

        if $z22 != 0 goto label31;

        $z28 = 1;

        goto label32;

     label31:
        $z28 = 0;

     label32:
        $r53 = virtualinvoke r46.<androidx.compose.ui.tooling.data.Parameter: java.lang.String getInlineClass()>();

        specialinvoke $r50.<androidx.compose.ui.tooling.data.ParameterInformation: void <init>(java.lang.String,java.lang.Object,boolean,boolean,boolean,java.lang.String,boolean)>($r51, r48, $z22, z0, $z28, $r53, z2);

        interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>($r50);

     label33:
        i22 = i22 + 1;

        goto label20;

     label34:
        return $r42;

     label35:
        $r26 := @caughtexception;

     label36:
        $r55 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r55;

        catch java.lang.Throwable from label08 to label35 with label35;
    }

    public static final java.lang.String getPosition(androidx.compose.ui.tooling.data.Group)
    {
        androidx.compose.ui.tooling.data.Group $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.compose.ui.tooling.data.Group;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.tooling.data.Group: java.lang.Object getKey()>();

        $r2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String keyPosition(java.lang.Object)>($r1);

        return $r2;
    }

    public static void getPosition$annotations(androidx.compose.ui.tooling.data.Group)
    {
        androidx.compose.ui.tooling.data.Group r0;

        r0 := @parameter0: androidx.compose.ui.tooling.data.Group;

        return;
    }

    private static final java.lang.reflect.Field accessibleField(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.String r1, $r6;
        java.lang.reflect.Field r2, r4, $r10;
        int i0, $i1;
        java.lang.Object r3, $r8;
        java.lang.reflect.Field[] $r5;
        boolean $z1;
        java.lang.Object[] $r7;

        $r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "declaredFields");

        $r7 = (java.lang.Object[]) $r5;

        $i1 = 0;

        i0 = lengthof $r7;

     label1:
        if $i1 >= i0 goto label3;

        r3 = $r7[$i1];

        r4 = (java.lang.reflect.Field) r3;

        $r6 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r1);

        if $z1 == 0 goto label2;

        $r8 = r3;

        goto label4;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r8 = null;

     label4:
        r2 = (java.lang.reflect.Field) $r8;

        if r2 == null goto label5;

        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r10 = r2;

        goto label6;

     label5:
        $r10 = null;

     label6:
        return $r10;
    }

    private static final java.lang.String replacePrefix(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, r1, r2, $r5, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r0, r1, 0, 2, null);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "this as java.lang.String).substring(startIndex)");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r7 = $r0;

     label2:
        return $r7;
    }

    private static final kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        kotlin.text.MatchResult r1, $r3, $r5, $r6;
        java.lang.Object $r2, $r4;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r3 = (kotlin.text.MatchResult) $r2;

        if $r3 == null goto label1;

        r1 = $r3;

        $r6 = interfaceinvoke r1.<kotlin.text.MatchResult: kotlin.text.MatchResult next()>();

        r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r6;

        goto label1;

     label1:
        $r4 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r5 = (kotlin.text.MatchResult) $r4;

        return $r5;
    }

    private static final int parseParameters$expectNumber(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        kotlin.text.MatchResult r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.String $r5;
        int $i0;
        androidx.compose.ui.tooling.data.ParseError r6;
        java.lang.Throwable r7;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r2;

        if r1 == null goto label1;

        $z0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isANumber(kotlin.text.MatchResult)>(r1);

        if $z0 != 0 goto label2;

     label1:
        r6 = new androidx.compose.ui.tooling.data.ParseError;

        specialinvoke r6.<androidx.compose.ui.tooling.data.ParseError: void <init>()>();

        r7 = (java.lang.Throwable) r6;

        throw r7;

     label2:
        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

        $r5 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r1);

        $i0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int parseToInt(java.lang.String)>($r5);

        return $i0;
    }

    private static final java.lang.String parseParameters$expectClassName(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        kotlin.text.MatchResult r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.String $r5, $r6, $r7;
        androidx.compose.ui.tooling.data.ParseError r8;
        java.lang.Throwable r9;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r2;

        if r1 == null goto label1;

        $z0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isClassName(kotlin.text.MatchResult)>(r1);

        if $z0 != 0 goto label2;

     label1:
        r8 = new androidx.compose.ui.tooling.data.ParseError;

        specialinvoke r8.<androidx.compose.ui.tooling.data.ParseError: void <init>()>();

        r9 = (java.lang.Throwable) r8;

        throw r9;

     label2:
        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

        $r5 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "this as java.lang.String).substring(startIndex)");

        $r7 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String replacePrefix(java.lang.String,java.lang.String,java.lang.String)>($r6, "c#", "androidx.compose.");

        return $r7;
    }

    private static final void parseParameters$expect(kotlin.jvm.internal.Ref$ObjectRef, java.lang.String)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        java.lang.String r1, $r5;
        kotlin.text.MatchResult r2;
        java.lang.Object $r3;
        boolean $z0;
        androidx.compose.ui.tooling.data.ParseError r7;
        java.lang.Throwable r8;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r2 = (kotlin.text.MatchResult) $r3;

        if r2 == null goto label1;

        $r5 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r2);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z0 != 0 goto label2;

     label1:
        r7 = new androidx.compose.ui.tooling.data.ParseError;

        specialinvoke r7.<androidx.compose.ui.tooling.data.ParseError: void <init>()>();

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label2:
        staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult parseParameters$next(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

        return;
    }

    private static final boolean parseParameters$isChar(kotlin.jvm.internal.Ref$ObjectRef, java.lang.String)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        java.lang.String r1, $r4;
        kotlin.text.MatchResult r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r2 = (kotlin.text.MatchResult) $r3;

        if r2 == null goto label1;

        $r4 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.lang.String getText(kotlin.text.MatchResult)>(r2);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static final boolean parseParameters$isClassName(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        kotlin.text.MatchResult r1;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r1 = (kotlin.text.MatchResult) $r2;

        if r1 == null goto label1;

        $z0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isClassName(kotlin.text.MatchResult)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static final void parseParameters$ensureIndexes(kotlin.jvm.internal.Ref$IntRef, java.util.List, int)
    {
        kotlin.jvm.internal.Ref$IntRef r0;
        java.util.List r1;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        byte b2;
        java.lang.Integer $r2;

        r0 := @parameter0: kotlin.jvm.internal.Ref$IntRef;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $i5 = r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        i1 = i0 - $i5;

        if i1 <= 0 goto label5;

        b2 = 4;

        if i1 >= b2 goto label1;

        $i11 = b2;

        goto label2;

     label1:
        $i11 = i1;

     label2:
        i3 = $i11;

        i12 = 0;

     label3:
        if i12 >= i3 goto label4;

        i4 = i12;

        $i8 = r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i9 = i4 + $i8;

        $i10 = $i9 + 1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i12 = i12 + 1;

        goto label3;

     label4:
        $i6 = r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i7 = $i6 + i3;

        r0.<kotlin.jvm.internal.Ref$IntRef: int element> = $i7;

     label5:
        return;
    }

    private static final kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        kotlin.text.MatchResult r1, $r3, $r5, $r6;
        java.lang.Object $r2, $r4;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r3 = (kotlin.text.MatchResult) $r2;

        if $r3 == null goto label1;

        r1 = $r3;

        $r6 = interfaceinvoke r1.<kotlin.text.MatchResult: kotlin.text.MatchResult next()>();

        r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r6;

        goto label1;

     label1:
        $r4 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r5 = (kotlin.text.MatchResult) $r4;

        return $r5;
    }

    private static final androidx.compose.ui.tooling.data.SourceLocationInfo sourceInformationContextOf$parseLocation(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlin.jvm.internal.Ref$ObjectRef r0;
        java.lang.Object $r1;
        androidx.compose.ui.tooling.data.SourceLocationInfo $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer r3, r4, r5;
        kotlin.text.MatchResult r6, r7, r8, r9;

        r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r3 = null;

        r4 = null;

        r5 = null;

        $r1 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r6 = (kotlin.text.MatchResult) $r1;

        if r6 == null goto label1;

        $z4 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r6);

        if $z4 == 0 goto label1;

        $i2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int number(kotlin.text.MatchResult)>(r6);

        $i3 = $i2 + 1;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r6 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

     label1:
        if r6 == null goto label6;

        $z0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r6, "@");

        if $z0 == 0 goto label6;

        r7 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

        if r7 == null goto label2;

        $z1 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r7);

        if $z1 != 0 goto label3;

     label2:
        return null;

     label3:
        $i0 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int number(kotlin.text.MatchResult)>(r7);

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r8 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

        if r8 == null goto label6;

        $z2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isChar(kotlin.text.MatchResult,java.lang.String)>(r8, "L");

        if $z2 == 0 goto label6;

        r9 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.MatchResult sourceInformationContextOf$next-4(kotlin.jvm.internal.Ref$ObjectRef)>(r0);

        if r9 == null goto label4;

        $z3 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: boolean isNumber(kotlin.text.MatchResult)>(r9);

        if $z3 != 0 goto label5;

     label4:
        return null;

     label5:
        $i1 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: int number(kotlin.text.MatchResult)>(r9);

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label6:
        if r3 == null goto label7;

        if r4 == null goto label7;

        if r5 == null goto label7;

        $r2 = new androidx.compose.ui.tooling.data.SourceLocationInfo;

        specialinvoke $r2.<androidx.compose.ui.tooling.data.SourceLocationInfo: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer)>(r3, r4, r5);

        return $r2;

     label7:
        return null;
    }

    public static final java.util.List access$extractParameterInfo(java.util.List, androidx.compose.ui.tooling.data.SourceInformationContext)
    {
        java.util.List r0, $r2;
        androidx.compose.ui.tooling.data.SourceInformationContext r1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.compose.ui.tooling.data.SourceInformationContext;

        $r2 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: java.util.List extractParameterInfo(java.util.List,androidx.compose.ui.tooling.data.SourceInformationContext)>(r0, r1);

        return $r2;
    }

    public static final androidx.compose.ui.unit.IntRect access$boundsOfLayoutNode(androidx.compose.ui.layout.LayoutInfo)
    {
        androidx.compose.ui.layout.LayoutInfo r0;
        androidx.compose.ui.unit.IntRect $r1;

        r0 := @parameter0: androidx.compose.ui.layout.LayoutInfo;

        $r1 = staticinvoke <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect boundsOfLayoutNode(androidx.compose.ui.layout.LayoutInfo)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.ui.unit.IntRect $r0;
        kotlin.text.Regex $r1, $r2;

        $r0 = new androidx.compose.ui.unit.IntRect;

        specialinvoke $r0.<androidx.compose.ui.unit.IntRect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        <androidx.compose.ui.tooling.data.SlotTreeKt: androidx.compose.ui.unit.IntRect emptyBox> = $r0;

        $r1 = new kotlin.text.Regex;

        specialinvoke $r1.<kotlin.text.Regex: void <init>(java.lang.String)>("(\\d+)|([,])|([*])|([:])|L|(P\\([^)]*\\))|(C(\\(([^)]*)\\))?)|@");

        <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.Regex tokenizer> = $r1;

        $r2 = new kotlin.text.Regex;

        specialinvoke $r2.<kotlin.text.Regex: void <init>(java.lang.String)>("(\\d+)|,|[!P()]|:([^,!)]+)");

        <androidx.compose.ui.tooling.data.SlotTreeKt: kotlin.text.Regex parametersInformationTokenizer> = $r2;

        return;
    }

