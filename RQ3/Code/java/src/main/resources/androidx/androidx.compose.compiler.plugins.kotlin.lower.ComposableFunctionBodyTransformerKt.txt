androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt
<androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: int BITS_PER_INT>
<androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: int SLOTS_PER_INT>
    public static final int bitsForSlot(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i1 % 15;

        $i3 = i2 * 2;

        $i4 = $i3 + 1;

        $i5 = i0 << $i4;

        return $i5;
    }

    public static final int defaultsParamIndex(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 / 31;

        return $i1;
    }

    public static final int defaultsBitIndex(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 % 31;

        return $i1;
    }

    public static final int getThisParamCount(org.jetbrains.kotlin.ir.declarations.IrFunction)
    {
        org.jetbrains.kotlin.ir.declarations.IrFunction $r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter $r1, $r2;
        byte $b2, $b3;
        int $i4;

        $r0 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$thisParamCount");

        $r1 = interfaceinvoke $r0.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.ir.declarations.IrValueParameter getDispatchReceiverParameter()>();

        if $r1 == null goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $r2 = interfaceinvoke $r0.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.ir.declarations.IrValueParameter getExtensionReceiverParameter()>();

        if $r2 == null goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        $i4 = $b2 + $b3;

        return $i4;
    }

    public static final int changedParamCount(int, int)
    {
        int i0, i1, i2, $i3;
        double d0, $d1, $d2, $d3;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        i2 = i0 + i1;

        $d2 = (double) i2;

        $d1 = (double) 15;

        d0 = $d2 / $d1;

        z0 = 0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $i3 = (int) $d3;

        return $i3;
    }

    public static final int changedParamCountFromTotal(int)
    {
        int i0, i1, i2, i3, i4;

        i0 := @parameter0: int;

        i1 = i0;

        i2 = i1 + -1;

        i3 = i2 + -1;

        i4 = 0;

     label1:
        i3 = i3 - 15;

        i4 = i4 + 1;

        if i3 > 0 goto label1;

        return i4;
    }

    public static final int defaultParamCount(int)
    {
        int i0, $i1;
        double d0, $d1, $d2, $d3;
        boolean z0;

        i0 := @parameter0: int;

        $d2 = (double) i0;

        $d1 = (double) 31;

        d0 = $d2 / $d1;

        z0 = 0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $i1 = (int) $d3;

        return $i1;
    }

    public static final int composeSyntheticParamCount(int, int, boolean)
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i2 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: int changedParamCount(int,int)>(i0, i1);

        $i3 = 1 + $i2;

        if z0 == 0 goto label1;

        $i5 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: int defaultParamCount(int)>(i0);

        goto label2;

     label1:
        $i5 = 0;

     label2:
        $i4 = $i3 + $i5;

        return $i4;
    }

    public static int composeSyntheticParamCount$default(int, int, boolean, int, java.lang.Object)
    {
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.Object r0;
        boolean z0;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        r0 := @parameter4: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        i5 = 0;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        z0 = 0;

     label2:
        $i4 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: int composeSyntheticParamCount(int,int,boolean)>(i0, i5, z0);

        return $i4;
    }

    private static final java.lang.String replacePrefix(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, r1, r2, r3, $r6, $r9;
        int i0;
        boolean z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.NullPointerException $r8;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z1 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r0, r1, 0, 2, null);

        if $z1 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = $r0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = 0;

        if r3 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r8;

     label1:
        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "(this as java.lang.String).substring(startIndex)");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r9 = $r0;

     label3:
        return $r9;
    }

    private static final boolean isLambda(org.jetbrains.kotlin.ir.declarations.IrFunction)
    {
        org.jetbrains.kotlin.ir.declarations.IrFunction $r0;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor $r1;
        org.jetbrains.kotlin.name.Name $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        $r1 = interfaceinvoke $r0.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.descriptors.FunctionDescriptor: org.jetbrains.kotlin.name.Name getName()>();

        $r3 = virtualinvoke $r2.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, "<anonymous>");

        return $z0;
    }

    public static final void forEachWith(java.util.List, java.util.List, java.util.List, kotlin.jvm.functions.Function3)
    {
        java.util.List r0, r1, r2;
        kotlin.jvm.functions.Function3 r3;
        int i0, i1;
        java.util.Collection $r4;
        java.lang.Object $r5, $r6, $r7;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "a");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "b");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "c");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "fn");

        i1 = 0;

        $r4 = (java.util.Collection) r0;

        i0 = interfaceinvoke $r4.<java.util.Collection: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        interfaceinvoke r3.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final java.lang.String access$replacePrefix(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, r1, r2, $r3;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: java.lang.String replacePrefix(java.lang.String,java.lang.String,java.lang.String)>($r0, r1, r2);

        return $r3;
    }

    public static final boolean access$isLambda(org.jetbrains.kotlin.ir.declarations.IrFunction)
    {
        org.jetbrains.kotlin.ir.declarations.IrFunction $r0;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        $z0 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformerKt: boolean isLambda(org.jetbrains.kotlin.ir.declarations.IrFunction)>($r0);

        return $z0;
    }

