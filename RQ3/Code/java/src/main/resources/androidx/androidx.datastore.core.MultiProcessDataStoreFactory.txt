androidx.datastore.core.MultiProcessDataStoreFactory
<androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.MultiProcessDataStoreFactory INSTANCE>
    private void <init>()
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Storage, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Storage r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        java.util.List r3, r6;
        kotlinx.coroutines.CoroutineScope r4;
        kotlin.jvm.functions.Function0 r5;
        androidx.datastore.core.CorruptionHandler r7, $r13;
        androidx.datastore.core.DataMigrationInitializer$Companion $r8;
        kotlin.jvm.functions.Function2 $r9;
        androidx.datastore.core.handlers.NoOpCorruptionHandler $r10;
        androidx.datastore.core.MultiProcessDataStore $r11;
        androidx.datastore.core.DataStore $r12;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Storage;

        r2 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: kotlinx.coroutines.CoroutineScope;

        r5 := @parameter4: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "storage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "produceFile");

        $r8 = <androidx.datastore.core.DataMigrationInitializer: androidx.datastore.core.DataMigrationInitializer$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.datastore.core.DataMigrationInitializer$Companion: kotlin.jvm.functions.Function2 getInitializer(java.util.List)>(r3);

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r9);

        if r2 == null goto label1;

        $r13 = (androidx.datastore.core.CorruptionHandler) r2;

        goto label2;

     label1:
        $r10 = new androidx.datastore.core.handlers.NoOpCorruptionHandler;

        specialinvoke $r10.<androidx.datastore.core.handlers.NoOpCorruptionHandler: void <init>()>();

        $r13 = (androidx.datastore.core.CorruptionHandler) $r10;

     label2:
        r7 = $r13;

        $r11 = new androidx.datastore.core.MultiProcessDataStore;

        specialinvoke $r11.<androidx.datastore.core.MultiProcessDataStore: void <init>(androidx.datastore.core.Storage,java.util.List,androidx.datastore.core.CorruptionHandler,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r1, r6, r7, r4, r5);

        $r12 = (androidx.datastore.core.DataStore) $r11;

        return $r12;
    }

    public static androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory, androidx.datastore.core.Storage, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Storage r1;
        kotlin.jvm.functions.Function0 r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3;
        androidx.datastore.core.DataStore $r4;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlinx.coroutines.CompletableJob $r6;
        kotlin.coroutines.CoroutineContext $r7, $r8;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r9;
        java.util.List r10;
        kotlinx.coroutines.CoroutineScope r11;

        r0 := @parameter0: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter1: androidx.datastore.core.Storage;

        r9 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r10 := @parameter3: java.util.List;

        r11 := @parameter4: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter5: kotlin.jvm.functions.Function0;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r9 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r6 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        r11 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r8);

     label3:
        $r4 = virtualinvoke r0.<androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create(androidx.datastore.core.Storage,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r1, r9, r10, r11, r2);

        return $r4;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Serializer r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        java.util.List r3, $r11;
        kotlinx.coroutines.CoroutineScope r4;
        kotlin.jvm.functions.Function0 r5;
        androidx.datastore.core.MultiProcessDataStore $r6;
        androidx.datastore.core.FileStorage $r7;
        androidx.datastore.core.DataMigrationInitializer$Companion $r8;
        androidx.datastore.core.Storage $r9;
        kotlin.jvm.functions.Function2 $r10;
        androidx.datastore.core.handlers.NoOpCorruptionHandler $r12;
        androidx.datastore.core.DataStore $r13;
        androidx.datastore.core.CorruptionHandler $r14;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Serializer;

        r2 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: kotlinx.coroutines.CoroutineScope;

        r5 := @parameter4: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "produceFile");

        $r6 = new androidx.datastore.core.MultiProcessDataStore;

        $r7 = new androidx.datastore.core.FileStorage;

        specialinvoke $r7.<androidx.datastore.core.FileStorage: void <init>(androidx.datastore.core.Serializer,kotlin.jvm.functions.Function0)>(r1, r5);

        $r9 = (androidx.datastore.core.Storage) $r7;

        $r8 = <androidx.datastore.core.DataMigrationInitializer: androidx.datastore.core.DataMigrationInitializer$Companion Companion>;

        $r10 = virtualinvoke $r8.<androidx.datastore.core.DataMigrationInitializer$Companion: kotlin.jvm.functions.Function2 getInitializer(java.util.List)>(r3);

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r10);

        if r2 == null goto label1;

        $r14 = (androidx.datastore.core.CorruptionHandler) r2;

        goto label2;

     label1:
        $r12 = new androidx.datastore.core.handlers.NoOpCorruptionHandler;

        specialinvoke $r12.<androidx.datastore.core.handlers.NoOpCorruptionHandler: void <init>()>();

        $r14 = (androidx.datastore.core.CorruptionHandler) $r12;

     label2:
        specialinvoke $r6.<androidx.datastore.core.MultiProcessDataStore: void <init>(androidx.datastore.core.Storage,java.util.List,androidx.datastore.core.CorruptionHandler,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>($r9, $r11, $r14, r4, r5);

        $r13 = (androidx.datastore.core.DataStore) $r6;

        return $r13;
    }

    public static androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Serializer r1;
        kotlin.jvm.functions.Function0 r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3;
        androidx.datastore.core.DataStore $r4;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlinx.coroutines.CompletableJob $r6;
        kotlin.coroutines.CoroutineContext $r7, $r8;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r9;
        java.util.List r10;
        kotlinx.coroutines.CoroutineScope r11;

        r0 := @parameter0: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter1: androidx.datastore.core.Serializer;

        r9 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r10 := @parameter3: java.util.List;

        r11 := @parameter4: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter5: kotlin.jvm.functions.Function0;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r9 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r6 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        r11 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r8);

     label3:
        $r4 = virtualinvoke r0.<androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create(androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r1, r9, r10, r11, r2);

        return $r4;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Storage, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Storage r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        java.util.List r3;
        kotlin.jvm.functions.Function0 r4;
        androidx.datastore.core.DataStore $r5;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Storage;

        r2 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "storage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "produceFile");

        $r5 = staticinvoke <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory,androidx.datastore.core.Storage,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, r2, r3, null, r4, 8, null);

        return $r5;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Storage, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Storage r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        kotlin.jvm.functions.Function0 r3;
        androidx.datastore.core.DataStore $r4;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Storage;

        r2 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "storage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "produceFile");

        $r4 = staticinvoke <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory,androidx.datastore.core.Storage,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, r2, null, null, r3, 12, null);

        return $r4;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Storage, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Storage r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.datastore.core.DataStore $r3;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Storage;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "storage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "produceFile");

        $r3 = staticinvoke <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory,androidx.datastore.core.Storage,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, null, null, null, r2, 14, null);

        return $r3;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Serializer r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        java.util.List r3;
        kotlin.jvm.functions.Function0 r4;
        androidx.datastore.core.DataStore $r5;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Serializer;

        r2 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "produceFile");

        $r5 = staticinvoke <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, r2, r3, null, r4, 8, null);

        return $r5;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Serializer r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        kotlin.jvm.functions.Function0 r3;
        androidx.datastore.core.DataStore $r4;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Serializer;

        r2 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "produceFile");

        $r4 = staticinvoke <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, r2, null, null, r3, 12, null);

        return $r4;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.Serializer, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.MultiProcessDataStoreFactory r0;
        androidx.datastore.core.Serializer r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.datastore.core.DataStore $r3;

        r0 := @this: androidx.datastore.core.MultiProcessDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.Serializer;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "produceFile");

        $r3 = staticinvoke <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.core.MultiProcessDataStoreFactory,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, null, null, null, r2, 14, null);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.datastore.core.MultiProcessDataStoreFactory $r0;

        $r0 = new androidx.datastore.core.MultiProcessDataStoreFactory;

        specialinvoke $r0.<androidx.datastore.core.MultiProcessDataStoreFactory: void <init>()>();

        <androidx.datastore.core.MultiProcessDataStoreFactory: androidx.datastore.core.MultiProcessDataStoreFactory INSTANCE> = $r0;

        return;
    }

