androidx.compose.animation.core.DecayAnimation
<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>
<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>
<androidx.compose.animation.core.DecayAnimation: java.lang.Object initialValue>
<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>
<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>
<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector endVelocity>
<androidx.compose.animation.core.DecayAnimation: java.lang.Object targetValue>
<androidx.compose.animation.core.DecayAnimation: long durationNanos>
<androidx.compose.animation.core.DecayAnimation: boolean isInfinite>
<androidx.compose.animation.core.DecayAnimation: int $stable>
    public void <init>(androidx.compose.animation.core.VectorizedDecayAnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.DecayAnimation r0;
        androidx.compose.animation.core.VectorizedDecayAnimationSpec r1, $r14, $r18, $r19, $r26, $r27;
        androidx.compose.animation.core.TwoWayConverter r2, $r5, $r11;
        java.lang.Object r3, $r7, $r8, $r16;
        androidx.compose.animation.core.AnimationVector r4, $r9, $r10, $r13, $r15, $r17, $r20, $r21, $r22, $r23, $r24, $r25;
        int i0, i3;
        kotlin.jvm.functions.Function1 $r6, $r12;
        long $l1, $l2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        r1 := @parameter0: androidx.compose.animation.core.VectorizedDecayAnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "initialVelocityVector");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec> = r1;

        r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter> = r2;

        r0.<androidx.compose.animation.core.DecayAnimation: java.lang.Object initialValue> = r3;

        $r5 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r7 = r0.<androidx.compose.animation.core.DecayAnimation: java.lang.Object initialValue>;

        $r8 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r9 = (androidx.compose.animation.core.AnimationVector) $r8;

        r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector> = $r9;

        $r10 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector copy(androidx.compose.animation.core.AnimationVector)>(r4);

        r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector> = $r10;

        $r11 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r12 = interfaceinvoke $r11.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r14 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $r13 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r15 = interfaceinvoke $r14.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: androidx.compose.animation.core.AnimationVector getTargetValue(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($r13, r4);

        $r16 = interfaceinvoke $r12.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        r0.<androidx.compose.animation.core.DecayAnimation: java.lang.Object targetValue> = $r16;

        $r18 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $r17 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $l1 = interfaceinvoke $r18.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: long getDurationNanos(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($r17, r4);

        r0.<androidx.compose.animation.core.DecayAnimation: long durationNanos> = $l1;

        $r19 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $l2 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: long getDurationNanos()>();

        $r20 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r21 = interfaceinvoke $r19.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($l2, $r20, r4);

        $r22 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector copy(androidx.compose.animation.core.AnimationVector)>($r21);

        r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector endVelocity> = $r22;

        i3 = 0;

        $r23 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector endVelocity>;

        i0 = virtualinvoke $r23.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label1:
        if i3 >= i0 goto label2;

        $r25 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector endVelocity>;

        $r24 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector endVelocity>;

        $f0 = virtualinvoke $r24.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $r26 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $f1 = interfaceinvoke $r26.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: float getAbsVelocityThreshold()>();

        $f2 = neg $f1;

        $r27 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $f3 = interfaceinvoke $r27.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: float getAbsVelocityThreshold()>();

        $f4 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>($f0, $f2, $f3);

        virtualinvoke $r25.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i3, $f4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public androidx.compose.animation.core.TwoWayConverter getTypeConverter()
    {
        androidx.compose.animation.core.DecayAnimation r0;
        androidx.compose.animation.core.TwoWayConverter $r1;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        $r1 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        return $r1;
    }

    public final java.lang.Object getInitialValue()
    {
        androidx.compose.animation.core.DecayAnimation r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        $r1 = r0.<androidx.compose.animation.core.DecayAnimation: java.lang.Object initialValue>;

        return $r1;
    }

    public final androidx.compose.animation.core.AnimationVector getInitialVelocityVector()
    {
        androidx.compose.animation.core.DecayAnimation r0;
        androidx.compose.animation.core.AnimationVector $r1;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        $r1 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        return $r1;
    }

    public java.lang.Object getTargetValue()
    {
        androidx.compose.animation.core.DecayAnimation r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        $r1 = r0.<androidx.compose.animation.core.DecayAnimation: java.lang.Object targetValue>;

        return $r1;
    }

    public long getDurationNanos()
    {
        androidx.compose.animation.core.DecayAnimation r0;
        long $l0;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        $l0 = r0.<androidx.compose.animation.core.DecayAnimation: long durationNanos>;

        return $l0;
    }

    public boolean isInfinite()
    {
        androidx.compose.animation.core.DecayAnimation r0;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        $z0 = r0.<androidx.compose.animation.core.DecayAnimation: boolean isInfinite>;

        return $z0;
    }

    public void <init>(androidx.compose.animation.core.DecayAnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.DecayAnimation r0;
        androidx.compose.animation.core.DecayAnimationSpec r1;
        androidx.compose.animation.core.TwoWayConverter r2;
        java.lang.Object r3;
        androidx.compose.animation.core.AnimationVector r4;
        androidx.compose.animation.core.VectorizedDecayAnimationSpec $r5;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        r1 := @parameter0: androidx.compose.animation.core.DecayAnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "initialVelocityVector");

        $r5 = interfaceinvoke r1.<androidx.compose.animation.core.DecayAnimationSpec: androidx.compose.animation.core.VectorizedDecayAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)>(r2);

        specialinvoke r0.<androidx.compose.animation.core.DecayAnimation: void <init>(androidx.compose.animation.core.VectorizedDecayAnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector)>($r5, r2, r3, r4);

        return;
    }

    public void <init>(androidx.compose.animation.core.DecayAnimationSpec, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.DecayAnimation r0;
        androidx.compose.animation.core.DecayAnimationSpec r1;
        androidx.compose.animation.core.TwoWayConverter r2;
        java.lang.Object r3, r4, $r7;
        androidx.compose.animation.core.VectorizedDecayAnimationSpec $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.animation.core.AnimationVector $r8;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        r1 := @parameter0: androidx.compose.animation.core.DecayAnimationSpec;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        $r5 = interfaceinvoke r1.<androidx.compose.animation.core.DecayAnimationSpec: androidx.compose.animation.core.VectorizedDecayAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)>(r2);

        $r6 = interfaceinvoke r2.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r7 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        $r8 = (androidx.compose.animation.core.AnimationVector) $r7;

        specialinvoke r0.<androidx.compose.animation.core.DecayAnimation: void <init>(androidx.compose.animation.core.VectorizedDecayAnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector)>($r5, r2, r3, $r8);

        return;
    }

    public java.lang.Object getValueFromNanos(long)
    {
        androidx.compose.animation.core.DecayAnimation r0;
        long l0;
        boolean $z0;
        java.lang.Object $r1, $r8;
        androidx.compose.animation.core.TwoWayConverter $r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.compose.animation.core.AnimationVector $r4, $r5, $r7;
        androidx.compose.animation.core.VectorizedDecayAnimationSpec $r6;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: boolean isFinishedFromNanos(long)>(l0);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r3 = interfaceinvoke $r2.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r6 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $r5 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r4 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        $r7 = interfaceinvoke $r6.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, $r5, $r4);

        $r8 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        return $r8;

     label1:
        $r1 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: java.lang.Object getTargetValue()>();

        return $r1;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityVectorFromNanos(long)
    {
        androidx.compose.animation.core.DecayAnimation r0;
        long l0;
        boolean $z0;
        androidx.compose.animation.core.AnimationVector $r1, $r2, $r3, $r5;
        androidx.compose.animation.core.VectorizedDecayAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.DecayAnimation;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<androidx.compose.animation.core.DecayAnimation: boolean isFinishedFromNanos(long)>(l0);

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.VectorizedDecayAnimationSpec animationSpec>;

        $r3 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialValueVector>;

        $r2 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector initialVelocityVector>;

        $r5 = interfaceinvoke $r4.<androidx.compose.animation.core.VectorizedDecayAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, $r3, $r2);

        return $r5;

     label1:
        $r1 = r0.<androidx.compose.animation.core.DecayAnimation: androidx.compose.animation.core.AnimationVector endVelocity>;

        return $r1;
    }

    static void <clinit>()
    {
        return;
    }

