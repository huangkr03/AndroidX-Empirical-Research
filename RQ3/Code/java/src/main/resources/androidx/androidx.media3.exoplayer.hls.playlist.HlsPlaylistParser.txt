androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String LOG_TAG>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String PLAYLIST_HEADER>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_PREFIX>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_VERSION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_PLAYLIST_TYPE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_DEFINE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_SERVER_CONTROL>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_STREAM_INF>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_PART_INF>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_PART>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_I_FRAME_STREAM_INF>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_IFRAME>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_MEDIA>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_TARGET_DURATION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_DISCONTINUITY>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_DISCONTINUITY_SEQUENCE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_PROGRAM_DATE_TIME>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_INIT_SEGMENT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_INDEPENDENT_SEGMENTS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_MEDIA_DURATION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_MEDIA_SEQUENCE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_START>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_ENDLIST>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_KEY>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_SESSION_KEY>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_BYTERANGE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_GAP>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_SKIP>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_PRELOAD_HINT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TAG_RENDITION_REPORT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TYPE_AUDIO>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TYPE_VIDEO>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TYPE_SUBTITLES>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TYPE_CLOSED_CAPTIONS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TYPE_PART>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String TYPE_MAP>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String METHOD_NONE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String METHOD_AES_128>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String METHOD_SAMPLE_AES>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String METHOD_SAMPLE_AES_CENC>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String METHOD_SAMPLE_AES_CTR>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String KEYFORMAT_PLAYREADY>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String KEYFORMAT_IDENTITY>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String KEYFORMAT_WIDEVINE_PSSH_BINARY>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String KEYFORMAT_WIDEVINE_PSSH_JSON>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String BOOLEAN_TRUE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String BOOLEAN_FALSE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String ATTR_CLOSED_CAPTIONS_NONE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AVERAGE_BANDWIDTH>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VIDEO>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUDIO>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SUBTITLES>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CLOSED_CAPTIONS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BANDWIDTH>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHANNELS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CODECS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_RESOLUTION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FRAME_RATE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TARGET_DURATION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_DURATION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PART_TARGET_DURATION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VERSION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PLAYLIST_TYPE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_SKIP_UNTIL>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_SKIP_DATE_RANGES>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SKIPPED_SEGMENTS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_HOLD_BACK>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PART_HOLD_BACK>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_BLOCK_RELOAD>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_SEQUENCE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_DURATION>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_TITLE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LAST_MSN>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LAST_PART>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TIME_OFFSET>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_BYTERANGE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE_START>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE_LENGTH>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_METHOD>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMAT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMATVERSIONS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IV>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TYPE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PRELOAD_HINT_TYPE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LANGUAGE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_NAME>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GROUP_ID>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHARACTERISTICS>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INSTREAM_ID>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUTOSELECT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_DEFAULT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FORCED>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INDEPENDENT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GAP>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PRECISE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VALUE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IMPORT>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VARIABLE_REFERENCE>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist previousMediaPlaylist>
    public void <init>()
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser r0;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser;

        $r1 = <androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist EMPTY>;

        specialinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>($r1, null);

        return;
    }

    public void <init>(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser r0;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist r1;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist> = r1;

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist previousMediaPlaylist> = r2;

        return;
    }

    public androidx.media3.exoplayer.hls.playlist.HlsPlaylist parse(android.net.Uri, java.io.InputStream) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        java.io.BufferedReader r3, $r6;
        java.util.ArrayDeque r4, $r8;
        java.lang.Throwable r5, $r13;
        java.io.InputStreamReader $r7;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        androidx.media3.common.ParserException $r9, $r12;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator $r10, $r20;
        java.lang.String $r11, $r14, r15, r16, $r21;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist r17, $r18;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist $r19, r22;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.io.InputStream;

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        r3 = $r6;

        $r8 = new java.util.ArrayDeque;

        specialinvoke $r8.<java.util.ArrayDeque: void <init>()>();

        r4 = $r8;

     label01:
        $z0 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean checkPlaylistHeader(java.io.BufferedReader)>(r3);

        if $z0 != 0 goto label02;

        $r12 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("Input does not start with the #EXTM3U header.", null);

        throw $r12;

     label02:
        $r14 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r15 = $r14;

        if $r14 == null goto label09;

        r16 = virtualinvoke r15.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r16.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label03;

        goto label02;

     label03:
        $z2 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-STREAM-INF");

        if $z2 == 0 goto label05;

        interfaceinvoke r4.<java.util.Queue: boolean add(java.lang.Object)>(r16);

        $r10 = new androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        specialinvoke $r10.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: void <init>(java.util.Queue,java.io.BufferedReader)>(r4, r3);

        $r11 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        r17 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist parseMultivariantPlaylist(androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator,java.lang.String)>($r10, $r11);

     label04:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r3);

        return r17;

     label05:
        $z3 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-TARGETDURATION");

        if $z3 != 0 goto label06;

        $z5 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-MEDIA-SEQUENCE");

        if $z5 != 0 goto label06;

        $z6 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("#EXTINF");

        if $z6 != 0 goto label06;

        $z7 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-KEY");

        if $z7 != 0 goto label06;

        $z8 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-BYTERANGE");

        if $z8 != 0 goto label06;

        $z9 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-DISCONTINUITY");

        if $z9 != 0 goto label06;

        $z10 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-DISCONTINUITY-SEQUENCE");

        if $z10 != 0 goto label06;

        $z11 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-ENDLIST");

        if $z11 == 0 goto label08;

     label06:
        interfaceinvoke r4.<java.util.Queue: boolean add(java.lang.Object)>(r16);

        $r18 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist>;

        $r19 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist previousMediaPlaylist>;

        $r20 = new androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        specialinvoke $r20.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: void <init>(java.util.Queue,java.io.BufferedReader)>(r4, r3);

        $r21 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        r22 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist parseMediaPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator,java.lang.String)>($r18, $r19, $r20, $r21);

     label07:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r3);

        return r22;

     label08:
        interfaceinvoke r4.<java.util.Queue: boolean add(java.lang.Object)>(r16);

        goto label02;

     label09:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r3);

        goto label12;

     label10:
        $r13 := @caughtexception;

        r5 = $r13;

     label11:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r3);

        throw r5;

     label12:
        $r9 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("Failed to parse the playlist, could not identify any tags.", null);

        throw $r9;

        catch java.lang.Throwable from label01 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static boolean checkPlaylistHeader(java.io.BufferedReader) throws java.io.IOException
    {
        java.io.BufferedReader r0;
        int i0, $i2, $i3, i4, i5, i6, i7;
        java.lang.String $r1, $r2;
        boolean $z0;
        char $c1;

        r0 := @parameter0: java.io.BufferedReader;

        i4 = virtualinvoke r0.<java.io.BufferedReader: int read()>();

        if i4 != 239 goto label3;

        $i2 = virtualinvoke r0.<java.io.BufferedReader: int read()>();

        if $i2 != 187 goto label1;

        $i3 = virtualinvoke r0.<java.io.BufferedReader: int read()>();

        if $i3 == 191 goto label2;

     label1:
        return 0;

     label2:
        i4 = virtualinvoke r0.<java.io.BufferedReader: int read()>();

     label3:
        i5 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int skipIgnorableWhitespace(java.io.BufferedReader,boolean,int)>(r0, 1, i4);

        $r1 = "#EXTM3U";

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i6 = 0;

     label4:
        if i6 >= i0 goto label6;

        $r2 = "#EXTM3U";

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i6);

        if i5 == $c1 goto label5;

        return 0;

     label5:
        i5 = virtualinvoke r0.<java.io.BufferedReader: int read()>();

        i6 = i6 + 1;

        goto label4;

     label6:
        i7 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int skipIgnorableWhitespace(java.io.BufferedReader,boolean,int)>(r0, 0, i5);

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean isLinebreak(int)>(i7);

        return $z0;
    }

    private static int skipIgnorableWhitespace(java.io.BufferedReader, boolean, int) throws java.io.IOException
    {
        java.io.BufferedReader r0;
        boolean z0, $z1, $z2;
        int i0;

        r0 := @parameter0: java.io.BufferedReader;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

     label1:
        if i0 == -1 goto label3;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(i0);

        if $z1 == 0 goto label3;

        if z0 != 0 goto label2;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean isLinebreak(int)>(i0);

        if $z2 != 0 goto label3;

     label2:
        i0 = virtualinvoke r0.<java.io.BufferedReader: int read()>();

        goto label1;

     label3:
        return i0;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist parseMultivariantPlaylist(androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator, java.lang.String) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator r0;
        java.lang.String r1, $r34, $r41, $r49, $r54, $r60, $r68, $r70, $r73, $r78, $r80, $r110, $r128, $r129, $r130, $r136, $r138, r142, r143, r145, r146, r147, r148, r150, r151, r152, r153, r154, r156, r165, r166, r167, r169, r173, r176, r177, r179, r180, r181, r183, r184, r185;
        java.util.HashMap r2, r3, r186, r187;
        java.util.ArrayList r4, r5, r6, r7, r8, r9, r10, r11, $r92, r158, r159, r188, r189, r190, r191, r192, r193, r194, r195, r199, r201, r212;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant r12, $r100, r161, r174, r178, r182, r198;
        boolean $z0, $z1, $z2, $z6, $z7, $z9, $z10, $z11, $z12, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, z27, z28, z29, $z30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i17, i18;
        java.lang.Object $r26, $r85, $r91, $r93, $r122, r141;
        java.util.regex.Pattern $r27, $r28, $r40, $r42, $r47, $r48, $r62, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r127, $r131, $r132, $r135, $r137;
        java.lang.StringBuilder $r31, $r32, $r33, r206;
        androidx.media3.common.Format$Builder $r35, $r36, $r37, $r38, $r39, $r50, $r55, $r79, $r81, $r82, $r83, $r98, $r99, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, r168, r197, r205;
        java.lang.Object[] $r44, $r96;
        java.util.List $r46, $r94, r216, r217;
        androidx.media3.common.Format $r52, $r58, $r59, $r66, $r72, $r77, $r87, $r97, r140, r157, r164, r175;
        java.lang.String[] $r67, r149;
        float $f0, f1;
        android.net.Uri $r86, $r90, r155, $r170, r171;
        androidx.media3.common.Metadata $r88, r163, r172, r204, r208;
        androidx.media3.common.ParserException $r126;
        androidx.media3.common.DrmInitData$SchemeData[] $r134;
        androidx.media3.common.DrmInitData$SchemeData r144;
        java.util.HashSet r160, r202;
        androidx.media3.exoplayer.hls.HlsTrackMetadataEntry r162, r203, r207;
        byte b16;
        androidx.media3.common.DrmInitData r196;
        androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo r200;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition r209, r210, r211;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist r213;
        androidx.media3.common.Metadata$Entry[] r214, r215;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        r1 := @parameter1: java.lang.String;

        r186 = new java.util.HashMap;

        specialinvoke r186.<java.util.HashMap: void <init>()>();

        r2 = r186;

        r187 = new java.util.HashMap;

        specialinvoke r187.<java.util.HashMap: void <init>()>();

        r3 = r187;

        r188 = new java.util.ArrayList;

        specialinvoke r188.<java.util.ArrayList: void <init>()>();

        r4 = r188;

        r189 = new java.util.ArrayList;

        specialinvoke r189.<java.util.ArrayList: void <init>()>();

        r5 = r189;

        r190 = new java.util.ArrayList;

        specialinvoke r190.<java.util.ArrayList: void <init>()>();

        r6 = r190;

        r191 = new java.util.ArrayList;

        specialinvoke r191.<java.util.ArrayList: void <init>()>();

        r7 = r191;

        r192 = new java.util.ArrayList;

        specialinvoke r192.<java.util.ArrayList: void <init>()>();

        r8 = r192;

        r193 = new java.util.ArrayList;

        specialinvoke r193.<java.util.ArrayList: void <init>()>();

        r9 = r193;

        r194 = new java.util.ArrayList;

        specialinvoke r194.<java.util.ArrayList: void <init>()>();

        r10 = r194;

        r195 = new java.util.ArrayList;

        specialinvoke r195.<java.util.ArrayList: void <init>()>();

        r11 = r195;

        r140 = null;

        r141 = null;

        z27 = 0;

        z28 = 0;

     label01:
        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        r142 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next()>();

        $z14 = virtualinvoke r142.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT");

        if $z14 == 0 goto label02;

        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r142);

     label02:
        z29 = virtualinvoke r142.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-I-FRAME-STREAM-INF");

        $z15 = virtualinvoke r142.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-DEFINE");

        if $z15 == 0 goto label03;

        $r135 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_NAME>;

        $r136 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r135, r3);

        $r137 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VALUE>;

        $r138 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r137, r3);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r136, $r138);

        goto label20;

     label03:
        $z16 = virtualinvoke r142.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-INDEPENDENT-SEGMENTS");

        if $z16 == 0 goto label04;

        z28 = 1;

        goto label20;

     label04:
        $z17 = virtualinvoke r142.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-MEDIA");

        if $z17 == 0 goto label05;

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r142);

        goto label20;

     label05:
        $z18 = virtualinvoke r142.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-SESSION-KEY");

        if $z18 == 0 goto label07;

        $r131 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMAT>;

        r143 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map)>(r142, $r131, "identity", r3);

        r144 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.common.DrmInitData$SchemeData parseDrmSchemeData(java.lang.String,java.lang.String,java.util.Map)>(r142, r143, r3);

        if r144 == null goto label06;

        $r132 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_METHOD>;

        r145 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r132, r3);

        r146 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseEncryptionScheme(java.lang.String)>(r145);

        r196 = new androidx.media3.common.DrmInitData;

        $r134 = newarray (androidx.media3.common.DrmInitData$SchemeData)[1];

        $r134[0] = r144;

        specialinvoke r196.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r146, $r134);

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r196);

     label06:
        goto label20;

     label07:
        $z19 = virtualinvoke r142.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-STREAM-INF");

        if $z19 != 0 goto label08;

        if z29 == 0 goto label20;

     label08:
        $z20 = virtualinvoke r142.<java.lang.String: boolean contains(java.lang.CharSequence)>("CLOSED-CAPTIONS=NONE");

        z27 = z27 | $z20;

        if z29 == 0 goto label09;

        $i8 = 16384;

        goto label10;

     label09:
        $i8 = 0;

     label10:
        i9 = $i8;

        $r101 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BANDWIDTH>;

        i10 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseIntAttr(java.lang.String,java.util.regex.Pattern)>(r142, $r101);

        $r102 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AVERAGE_BANDWIDTH>;

        i11 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseOptionalIntAttr(java.lang.String,java.util.regex.Pattern,int)>(r142, $r102, -1);

        $r103 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CODECS>;

        r147 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r103, r3);

        $r104 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_RESOLUTION>;

        r148 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r104, r3);

        if r148 == null goto label13;

        r149 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r148, "x");

        $r129 = r149[0];

        i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r129);

        $r130 = r149[1];

        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r130);

        if i12 <= 0 goto label11;

        if i13 > 0 goto label12;

     label11:
        i12 = -1;

        i13 = -1;

     label12:
        goto label14;

     label13:
        i12 = -1;

        i13 = -1;

     label14:
        f1 = -1.0F;

        $r105 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FRAME_RATE>;

        r150 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r105, r3);

        if r150 == null goto label15;

        f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r150);

     label15:
        $r106 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VIDEO>;

        r151 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r106, r3);

        $r107 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUDIO>;

        r152 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r107, r3);

        $r108 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SUBTITLES>;

        r153 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r108, r3);

        $r109 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CLOSED_CAPTIONS>;

        r154 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r109, r3);

        if z29 == 0 goto label16;

        $r127 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        $r128 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r142, $r127, r3);

        r155 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>(r1, $r128);

        goto label18;

     label16:
        $z21 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: boolean hasNext()>();

        if $z21 != 0 goto label17;

        $r126 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("#EXT-X-STREAM-INF must be followed by another line", null);

        throw $r126;

     label17:
        $r110 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next()>();

        r156 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String replaceVariableReferences(java.lang.String,java.util.Map)>($r110, r3);

        r155 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>(r1, r156);

     label18:
        r197 = new androidx.media3.common.Format$Builder;

        specialinvoke r197.<androidx.media3.common.Format$Builder: void <init>()>();

        $i7 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r112 = virtualinvoke r197.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(int)>($i7);

        $r113 = virtualinvoke $r112.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>("application/x-mpegURL");

        $r114 = virtualinvoke $r113.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r147);

        $r115 = virtualinvoke $r114.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAverageBitrate(int)>(i11);

        $r116 = virtualinvoke $r115.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPeakBitrate(int)>(i10);

        $r117 = virtualinvoke $r116.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>(i12);

        $r118 = virtualinvoke $r117.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>(i13);

        $r119 = virtualinvoke $r118.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setFrameRate(float)>(f1);

        $r120 = virtualinvoke $r119.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>(i9);

        r157 = virtualinvoke $r120.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r198 = new androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant;

        specialinvoke r198.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: void <init>(android.net.Uri,androidx.media3.common.Format,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r155, r157, r151, r152, r153, r154);

        r12 = r198;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r122 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r155);

        r158 = (java.util.ArrayList) $r122;

        if r158 != null goto label19;

        r199 = new java.util.ArrayList;

        specialinvoke r199.<java.util.ArrayList: void <init>()>();

        r158 = r199;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r155, r158);

     label19:
        r200 = new androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo;

        specialinvoke r200.<androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(i11, i10, r151, r152, r153, r154);

        virtualinvoke r158.<java.util.ArrayList: boolean add(java.lang.Object)>(r200);

     label20:
        goto label01;

     label21:
        r201 = new java.util.ArrayList;

        specialinvoke r201.<java.util.ArrayList: void <init>()>();

        r159 = r201;

        r202 = new java.util.HashSet;

        specialinvoke r202.<java.util.HashSet: void <init>()>();

        r160 = r202;

        i14 = 0;

     label22:
        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i14 >= $i0 goto label26;

        $r85 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r161 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r85;

        $r86 = r161.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: android.net.Uri url>;

        $z12 = virtualinvoke r160.<java.util.HashSet: boolean add(java.lang.Object)>($r86);

        if $z12 == 0 goto label25;

        $r87 = r161.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: androidx.media3.common.Format format>;

        $r88 = $r87.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        if $r88 != null goto label23;

        $z30 = 1;

        goto label24;

     label23:
        $z30 = 0;

     label24:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z30);

        r203 = new androidx.media3.exoplayer.hls.HlsTrackMetadataEntry;

        $r90 = r161.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: android.net.Uri url>;

        $r91 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r90);

        $r92 = (java.util.ArrayList) $r91;

        $r93 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r92);

        $r94 = (java.util.List) $r93;

        specialinvoke r203.<androidx.media3.exoplayer.hls.HlsTrackMetadataEntry: void <init>(java.lang.String,java.lang.String,java.util.List)>(null, null, $r94);

        r162 = r203;

        r204 = new androidx.media3.common.Metadata;

        $r96 = newarray (androidx.media3.common.Metadata$Entry)[1];

        $r96[0] = r162;

        r214 = (androidx.media3.common.Metadata$Entry[]) $r96;

        specialinvoke r204.<androidx.media3.common.Metadata: void <init>(androidx.media3.common.Metadata$Entry[])>(r214);

        r163 = r204;

        $r97 = r161.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: androidx.media3.common.Format format>;

        $r98 = virtualinvoke $r97.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $r99 = virtualinvoke $r98.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r163);

        r164 = virtualinvoke $r99.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        $r100 = virtualinvoke r161.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant copyWithFormat(androidx.media3.common.Format)>(r164);

        virtualinvoke r159.<java.util.ArrayList: boolean add(java.lang.Object)>($r100);

     label25:
        i14 = i14 + 1;

        goto label22;

     label26:
        i15 = 0;

     label27:
        $i1 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if i15 >= $i1 goto label51;

        $r26 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r165 = (java.lang.String) $r26;

        $r27 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GROUP_ID>;

        r166 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r27, r3);

        $r28 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_NAME>;

        r167 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r28, r3);

        r205 = new androidx.media3.common.Format$Builder;

        specialinvoke r205.<androidx.media3.common.Format$Builder: void <init>()>();

        r206 = new java.lang.StringBuilder;

        specialinvoke r206.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r166);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r167);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = virtualinvoke r205.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>(r167);

        $r37 = virtualinvoke $r36.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>("application/x-mpegURL");

        $i2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseSelectionFlags(java.lang.String)>(r165);

        $r38 = virtualinvoke $r37.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSelectionFlags(int)>($i2);

        $i3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseRoleFlags(java.lang.String,java.util.Map)>(r165, r3);

        $r39 = virtualinvoke $r38.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>($i3);

        $r40 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LANGUAGE>;

        $r41 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r40, r3);

        r168 = virtualinvoke $r39.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r41);

        $r42 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r169 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r42, r3);

        if r169 != null goto label28;

        $r170 = null;

        goto label29;

     label28:
        $r170 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>(r1, r169);

     label29:
        r171 = $r170;

        r208 = new androidx.media3.common.Metadata;

        $r44 = newarray (androidx.media3.common.Metadata$Entry)[1];

        r207 = new androidx.media3.exoplayer.hls.HlsTrackMetadataEntry;

        $r46 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r207.<androidx.media3.exoplayer.hls.HlsTrackMetadataEntry: void <init>(java.lang.String,java.lang.String,java.util.List)>(r166, r167, $r46);

        $r44[0] = r207;

        r215 = (androidx.media3.common.Metadata$Entry[]) $r44;

        specialinvoke r208.<androidx.media3.common.Metadata: void <init>(androidx.media3.common.Metadata$Entry[])>(r215);

        r172 = r208;

        $r47 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TYPE>;

        r173 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r47, r3);

        b16 = -1;

        $i4 = virtualinvoke r173.<java.lang.String: int hashCode()>();

        lookupswitch($i4)
        {
            case -959297733: goto label32;
            case -333210994: goto label33;
            case 62628790: goto label31;
            case 81665115: goto label30;
            default: goto label34;
        };

     label30:
        $z1 = virtualinvoke r173.<java.lang.String: boolean equals(java.lang.Object)>("VIDEO");

        if $z1 == 0 goto label34;

        b16 = 0;

        goto label34;

     label31:
        $z9 = virtualinvoke r173.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO");

        if $z9 == 0 goto label34;

        b16 = 1;

        goto label34;

     label32:
        $z11 = virtualinvoke r173.<java.lang.String: boolean equals(java.lang.Object)>("SUBTITLES");

        if $z11 == 0 goto label34;

        b16 = 2;

        goto label34;

     label33:
        $z10 = virtualinvoke r173.<java.lang.String: boolean equals(java.lang.Object)>("CLOSED-CAPTIONS");

        if $z10 == 0 goto label34;

        b16 = 3;

     label34:
        tableswitch(b16)
        {
            case 0: goto label35;
            case 1: goto label38;
            case 2: goto label42;
            case 3: goto label46;
            default: goto label50;
        };

     label35:
        r174 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithVideoGroup(java.util.ArrayList,java.lang.String)>(r4, r166);

        if r174 == null goto label36;

        r175 = r174.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: androidx.media3.common.Format format>;

        $r78 = r175.<androidx.media3.common.Format: java.lang.String codecs>;

        r176 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getCodecsOfType(java.lang.String,int)>($r78, 2);

        $r79 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r176);

        $r80 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getMediaMimeType(java.lang.String)>(r176);

        $r81 = virtualinvoke $r79.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>($r80);

        $i5 = r175.<androidx.media3.common.Format: int width>;

        $r82 = virtualinvoke $r81.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i5);

        $i6 = r175.<androidx.media3.common.Format: int height>;

        $r83 = virtualinvoke $r82.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i6);

        $f0 = r175.<androidx.media3.common.Format: float frameRate>;

        virtualinvoke $r83.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setFrameRate(float)>($f0);

     label36:
        if r171 != null goto label37;

        goto label50;

     label37:
        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r172);

        r209 = new androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition;

        $r77 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        specialinvoke r209.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition: void <init>(android.net.Uri,androidx.media3.common.Format,java.lang.String,java.lang.String)>(r171, $r77, r166, r167);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r209);

        goto label50;

     label38:
        r177 = null;

        r178 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithAudioGroup(java.util.ArrayList,java.lang.String)>(r4, r166);

        if r178 == null goto label39;

        $r72 = r178.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: androidx.media3.common.Format format>;

        $r73 = $r72.<androidx.media3.common.Format: java.lang.String codecs>;

        r179 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getCodecsOfType(java.lang.String,int)>($r73, 1);

        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r179);

        r177 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getMediaMimeType(java.lang.String)>(r179);

     label39:
        $r62 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHANNELS>;

        r180 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r62, r3);

        if r180 == null goto label40;

        $r67 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitAtFirst(java.lang.String,java.lang.String)>(r180, "/");

        $r68 = $r67[0];

        i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r68);

        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>(i17);

        $r70 = "audio/eac3";

        $z6 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>(r177);

        if $z6 == 0 goto label40;

        $z7 = virtualinvoke r180.<java.lang.String: boolean endsWith(java.lang.String)>("/JOC");

        if $z7 == 0 goto label40;

        r177 = "audio/eac3-joc";

        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>("ec+3");

     label40:
        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r177);

        if r171 == null goto label41;

        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r172);

        r210 = new androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition;

        $r66 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        specialinvoke r210.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition: void <init>(android.net.Uri,androidx.media3.common.Format,java.lang.String,java.lang.String)>(r171, $r66, r166, r167);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r210);

        goto label50;

     label41:
        if r178 == null goto label50;

        r140 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        goto label50;

     label42:
        r181 = null;

        r182 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithSubtitleGroup(java.util.ArrayList,java.lang.String)>(r4, r166);

        if r182 == null goto label43;

        $r59 = r182.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: androidx.media3.common.Format format>;

        $r60 = $r59.<androidx.media3.common.Format: java.lang.String codecs>;

        r183 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getCodecsOfType(java.lang.String,int)>($r60, 3);

        virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r183);

        r181 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getMediaMimeType(java.lang.String)>(r183);

     label43:
        if r181 != null goto label44;

        r181 = "text/vtt";

     label44:
        $r55 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r181);

        virtualinvoke $r55.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r172);

        if r171 == null goto label45;

        r211 = new androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition;

        $r58 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        specialinvoke r211.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition: void <init>(android.net.Uri,androidx.media3.common.Format,java.lang.String,java.lang.String)>(r171, $r58, r166, r167);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r211);

        goto label50;

     label45:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("HlsPlaylistParser", "EXT-X-MEDIA tag with missing mandatory URI attribute: skipping");

        goto label50;

     label46:
        $r48 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INSTREAM_ID>;

        r184 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r165, $r48, r3);

        $z2 = virtualinvoke r184.<java.lang.String: boolean startsWith(java.lang.String)>("CC");

        if $z2 == 0 goto label47;

        r185 = "application/cea-608";

        $r54 = virtualinvoke r184.<java.lang.String: java.lang.String substring(int)>(2);

        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r54);

        goto label48;

     label47:
        r185 = "application/cea-708";

        $r49 = virtualinvoke r184.<java.lang.String: java.lang.String substring(int)>(7);

        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r49);

     label48:
        if r141 != null goto label49;

        r212 = new java.util.ArrayList;

        specialinvoke r212.<java.util.ArrayList: void <init>()>();

        r141 = r212;

     label49:
        $r50 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r185);

        virtualinvoke $r50.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAccessibilityChannel(int)>(i18);

        $r52 = virtualinvoke r168.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r216 = (java.util.List) r141;

        interfaceinvoke r216.<java.util.List: boolean add(java.lang.Object)>($r52);

        goto label50;

     label50:
        i15 = i15 + 1;

        goto label27;

     label51:
        if z27 == 0 goto label52;

        r141 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label52:
        r213 = new androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist;

        r217 = (java.util.List) r141;

        specialinvoke r213.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: void <init>(java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,androidx.media3.common.Format,java.util.List,boolean,java.util.Map,java.util.List)>(r1, r11, r159, r5, r6, r7, r8, r140, r217, z28, r3, r10);

        return r213;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithAudioGroup(java.util.ArrayList, java.lang.String)
    {
        java.util.ArrayList r0;
        java.lang.String r1, $r4;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r3;

        $r4 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: java.lang.String audioGroupId>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithVideoGroup(java.util.ArrayList, java.lang.String)
    {
        java.util.ArrayList r0;
        java.lang.String r1, $r4;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r3;

        $r4 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: java.lang.String videoGroupId>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithSubtitleGroup(java.util.ArrayList, java.lang.String)
    {
        java.util.ArrayList r0;
        java.lang.String r1, $r4;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant) $r3;

        $r4 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant: java.lang.String subtitleGroupId>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist parseMediaPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator, java.lang.String) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1, $r131, r185;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator r2;
        java.lang.String r3, r10, $r45, $r46, $r48, $r56, $r65, $r67, $r68, $r70, $r71, $r74, $r76, $r78, $r85, $r86, $r87, $r92, $r94, $r106, $r107, $r112, $r113, r117, r120, r121, r122, r124, r125, r126, r128, r129, r133, r134, r136, r138, r140, r141, r142, r144, r145, r148, r152, r153;
        java.util.HashMap r4, r5, r157, r164, r165, r183;
        java.util.ArrayList r6, r7, r8, r115, r166, r167, r168, r169, r182;
        java.util.TreeMap r9, r171;
        int $i0, $i2, $i5, $i7, $i12, $i13, $i19, $i22, $i26, $i27, $i29, $i30, $i31, $i32, $i40, $i41, $i42, $i43, $i46, i47, i50, i54, i55, i64, i67, i68, i69, i70, i73, i82, i84;
        byte $b1, $b10, $b11, $b17, $b18, $b20, $b24, $b25, $b34, $b37, $b45, $b63, $b76, $b80, $b81;
        long $l3, $l4, $l6, $l8, $l9, $l14, $l15, $l16, $l23, $l28, $l33, $l35, $l36, $l38, $l39, $l44, l48, l49, l51, l52, l53, l56, l57, l58, l59, l60, l61, l62, $l65, $l66, l71, l72, l74, l75, $l77, l78, l79, l83;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z33, $z35, $z36, $z37, $z38, $z40, $z41, $z42, $z44, $z45, $z46, $z47, z49, z50, z51, z52, z53, z54, $z55, $z56, z57, $z59, z60, z61, $z62, $z63;
        java.lang.Object $r23, $r25, $r27, $r84, $r97, $r130, $r159, r160;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r26, $r54, r114, r132, r154, $r156, r172, r179, r181;
        java.util.Collection $r32, $r41, $r58;
        androidx.media3.common.DrmInitData$SchemeData[] $r33, $r42, $r59, r143, r150, r155;
        java.lang.Object[] $r34, $r43, $r60;
        java.util.regex.Pattern $r38, $r39, $r40, $r47, $r49, $r50, $r51, $r62, $r63, $r64, $r69, $r72, $r73, $r75, $r79, $r80, $r88, $r89, $r90, $r91, $r93, $r99, $r100, $r101, $r102, $r103, $r108, $r109, $r110, $r111, $r146, $r147;
        double $d0, $d1, $d2, $d3, $d4, d5;
        androidx.media3.common.DrmInitData $r55, r119, r123, r175, r177, r180;
        java.util.List $r82, $r83, r187;
        java.util.Map $r96;
        androidx.media3.common.ParserException $r105;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part r116, r176, r178;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl r118, r170;
        java.lang.String[] r127, r137, r149;
        androidx.media3.common.DrmInitData$SchemeData r135;
        android.net.Uri r139, $r161, $r163;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport r158, r174, r184;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException r173;
        java.lang.Throwable r186;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist;

        r1 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        r3 := @parameter3: java.lang.String;

        i47 = 0;

        l48 = -9223372036854775807L;

        l49 = 0L;

        i50 = 1;

        l51 = -9223372036854775807L;

        l52 = -9223372036854775807L;

        z49 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: boolean hasIndependentSegments>;

        z50 = 0;

        r114 = null;

        r164 = new java.util.HashMap;

        specialinvoke r164.<java.util.HashMap: void <init>()>();

        r4 = r164;

        r165 = new java.util.HashMap;

        specialinvoke r165.<java.util.HashMap: void <init>()>();

        r5 = r165;

        r166 = new java.util.ArrayList;

        specialinvoke r166.<java.util.ArrayList: void <init>()>();

        r6 = r166;

        r167 = new java.util.ArrayList;

        specialinvoke r167.<java.util.ArrayList: void <init>()>();

        r115 = r167;

        r116 = null;

        r168 = new java.util.ArrayList;

        specialinvoke r168.<java.util.ArrayList: void <init>()>();

        r7 = r168;

        r169 = new java.util.ArrayList;

        specialinvoke r169.<java.util.ArrayList: void <init>()>();

        r8 = r169;

        l53 = 0L;

        r117 = "";

        z51 = 0;

        i54 = 0;

        i55 = 0;

        l56 = 0L;

        l57 = 0L;

        z52 = 0;

        l58 = 0L;

        l59 = -1L;

        l60 = 0L;

        l61 = 0L;

        z53 = 0;

        l62 = 0L;

        z54 = 0;

        r170 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl;

        specialinvoke r170.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: void <init>(long,boolean,long,long,boolean)>(-9223372036854775807L, 0, -9223372036854775807L, -9223372036854775807L, 0);

        r118 = r170;

        r119 = null;

        r120 = null;

        r121 = null;

        r171 = new java.util.TreeMap;

        specialinvoke r171.<java.util.TreeMap: void <init>()>();

        r9 = r171;

        r122 = null;

        r123 = null;

     label01:
        $z55 = virtualinvoke r2.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: boolean hasNext()>();

        if $z55 == 0 goto label69;

        r10 = virtualinvoke r2.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next()>();

        $z7 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT");

        if $z7 == 0 goto label02;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r10);

     label02:
        $z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-PLAYLIST-TYPE");

        if $z8 == 0 goto label05;

        $r111 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PLAYLIST_TYPE>;

        r124 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r111, r4);

        $r112 = "VOD";

        $z46 = virtualinvoke $r112.<java.lang.String: boolean equals(java.lang.Object)>(r124);

        if $z46 == 0 goto label03;

        i47 = 1;

        goto label04;

     label03:
        $r113 = "EVENT";

        $z47 = virtualinvoke $r113.<java.lang.String: boolean equals(java.lang.Object)>(r124);

        if $z47 == 0 goto label04;

        i47 = 2;

     label04:
        goto label01;

     label05:
        $z9 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-I-FRAMES-ONLY");

        if $z9 == 0 goto label06;

        z53 = 1;

        goto label01;

     label06:
        $z10 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-START");

        if $z10 == 0 goto label07;

        $r109 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TIME_OFFSET>;

        $d3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: double parseDoubleAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r109);

        $d4 = $d3 * 1000000.0;

        l48 = (long) $d4;

        $r110 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PRECISE>;

        z52 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r10, $r110, 0);

        goto label01;

     label07:
        $z11 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-SERVER-CONTROL");

        if $z11 == 0 goto label08;

        r118 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl parseServerControl(java.lang.String)>(r10);

        goto label01;

     label08:
        $z12 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-PART-INF");

        if $z12 == 0 goto label09;

        $r108 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PART_TARGET_DURATION>;

        d5 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: double parseDoubleAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r108);

        $d2 = d5 * 1000000.0;

        l52 = (long) $d2;

        goto label01;

     label09:
        $z13 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-MAP");

        if $z13 == 0 goto label14;

        $r102 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r125 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r102, r4);

        $r103 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_BYTERANGE>;

        r126 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r103, r4);

        if r126 == null goto label10;

        r127 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r126, "@");

        $r106 = r127[0];

        l59 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r106);

        $i46 = lengthof r127;

        if $i46 <= 1 goto label10;

        $r107 = r127[1];

        l58 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r107);

     label10:
        $b63 = l59 cmp -1L;

        if $b63 != 0 goto label11;

        l58 = 0L;

     label11:
        if r120 == null goto label12;

        if r121 != null goto label12;

        $r105 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("The encryption IV attribute must be present when an initialization segment is encrypted with METHOD=AES-128.", null);

        throw $r105;

     label12:
        r172 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment;

        specialinvoke r172.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: void <init>(java.lang.String,long,long,java.lang.String,java.lang.String)>(r125, l58, l59, r120, r121);

        r114 = r172;

        $b45 = l59 cmp -1L;

        if $b45 == 0 goto label13;

        l58 = l58 + l59;

     label13:
        l59 = -1L;

        goto label01;

     label14:
        $z14 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-TARGETDURATION");

        if $z14 == 0 goto label15;

        $r101 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TARGET_DURATION>;

        $i43 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseIntAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r101);

        $l44 = (long) $i43;

        l51 = $l44 * 1000000L;

        goto label01;

     label15:
        $z15 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-MEDIA-SEQUENCE");

        if $z15 == 0 goto label16;

        $r100 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_SEQUENCE>;

        l49 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: long parseLongAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r100);

        l62 = l49;

        goto label01;

     label16:
        $z16 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-VERSION");

        if $z16 == 0 goto label17;

        $r99 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VERSION>;

        i50 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseIntAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r99);

        goto label01;

     label17:
        $z17 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-DEFINE");

        if $z17 == 0 goto label21;

        $r90 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IMPORT>;

        r128 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r90, r4);

        if r128 == null goto label19;

        $r96 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.Map variableDefinitions>;

        $r97 = interfaceinvoke $r96.<java.util.Map: java.lang.Object get(java.lang.Object)>(r128);

        r129 = (java.lang.String) $r97;

        if r129 == null goto label18;

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r128, r129);

     label18:
        goto label20;

     label19:
        $r91 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_NAME>;

        $r92 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r91, r4);

        $r93 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VALUE>;

        $r94 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r93, r4);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r92, $r94);

     label20:
        goto label01;

     label21:
        $z18 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXTINF");

        if $z18 == 0 goto label22;

        $r88 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_DURATION>;

        l53 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: long parseTimeSecondsToUs(java.lang.String,java.util.regex.Pattern)>(r10, $r88);

        $r89 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_TITLE>;

        r117 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map)>(r10, $r89, "", r4);

        goto label01;

     label22:
        $z19 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-SKIP");

        if $z19 == 0 goto label33;

        $r80 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SKIPPED_SEGMENTS>;

        i64 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseIntAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r80);

        if r1 == null goto label23;

        $z45 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z45 == 0 goto label23;

        $z56 = 1;

        goto label24;

     label23:
        $z56 = 0;

     label24:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z56);

        $r130 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>(r1);

        $r131 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) $r130;

        $l65 = $r131.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l66 = l49 - $l65;

        i67 = (int) $l66;

        i68 = i67 + i64;

        if i67 < 0 goto label25;

        $r82 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i32 = interfaceinvoke $r82.<java.util.List: int size()>();

        if i68 <= $i32 goto label26;

     label25:
        r173 = new androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException;

        specialinvoke r173.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException: void <init>()>();

        r186 = (java.lang.Throwable) r173;

        throw r186;

     label26:
        i69 = i67;

     label27:
        if i69 >= i68 goto label32;

        $r83 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r84 = interfaceinvoke $r83.<java.util.List: java.lang.Object get(int)>(i69);

        r132 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r84;

        $l33 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $b34 = l49 cmp $l33;

        if $b34 == 0 goto label28;

        $i40 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int discontinuitySequence>;

        $i42 = $i40 - i54;

        $i41 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: int relativeDiscontinuitySequence>;

        i70 = $i42 + $i41;

        r132 = virtualinvoke r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment copyWith(long,int)>(l57, i70);

     label28:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r132);

        $l35 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long durationUs>;

        l57 = l57 + $l35;

        l60 = l57;

        $l36 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeLength>;

        $b37 = $l36 cmp -1L;

        if $b37 == 0 goto label29;

        $l39 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeOffset>;

        $l38 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeLength>;

        l58 = $l39 + $l38;

     label29:
        i55 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: int relativeDiscontinuitySequence>;

        r114 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment initializationSegment>;

        r123 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: androidx.media3.common.DrmInitData drmInitData>;

        r120 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String fullSegmentEncryptionKeyUri>;

        $r85 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String encryptionIV>;

        if $r85 == null goto label30;

        $r86 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String encryptionIV>;

        $r87 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l62);

        $z44 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>($r87);

        if $z44 != 0 goto label31;

     label30:
        r121 = r132.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String encryptionIV>;

     label31:
        l62 = l62 + 1L;

        i69 = i69 + 1;

        goto label27;

     label32:
        goto label01;

     label33:
        $z20 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-KEY");

        if $z20 == 0 goto label38;

        $r72 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_METHOD>;

        r133 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r72, r4);

        $r73 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMAT>;

        r134 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map)>(r10, $r73, "identity", r4);

        r120 = null;

        r121 = null;

        $r74 = "NONE";

        $z40 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>(r133);

        if $z40 == 0 goto label34;

        virtualinvoke r9.<java.util.TreeMap: void clear()>();

        r123 = null;

        goto label37;

     label34:
        $r75 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IV>;

        r121 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r75, r4);

        $r76 = "identity";

        $z41 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r134);

        if $z41 == 0 goto label35;

        $r78 = "AES-128";

        $z42 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>(r133);

        if $z42 == 0 goto label37;

        $r79 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r120 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r79, r4);

        goto label37;

     label35:
        if r122 != null goto label36;

        r122 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseEncryptionScheme(java.lang.String)>(r133);

     label36:
        r135 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.common.DrmInitData$SchemeData parseDrmSchemeData(java.lang.String,java.lang.String,java.util.Map)>(r10, r134, r4);

        if r135 == null goto label37;

        r123 = null;

        virtualinvoke r9.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r134, r135);

     label37:
        goto label01;

     label38:
        $z21 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-BYTERANGE");

        if $z21 == 0 goto label40;

        $r69 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE>;

        r136 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r69, r4);

        r137 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r136, "@");

        $r70 = r137[0];

        l59 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r70);

        $i31 = lengthof r137;

        if $i31 <= 1 goto label39;

        $r71 = r137[1];

        l58 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r71);

     label39:
        goto label01;

     label40:
        $z22 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-DISCONTINUITY-SEQUENCE");

        if $z22 == 0 goto label41;

        z51 = 1;

        $i29 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(58);

        $i30 = $i29 + 1;

        $r68 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i30);

        i54 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r68);

        goto label01;

     label41:
        $z23 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-DISCONTINUITY");

        if $z23 == 0 goto label42;

        i55 = i55 + 1;

        goto label01;

     label42:
        $z24 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-PROGRAM-DATE-TIME");

        if $z24 == 0 goto label43;

        $b25 = l56 cmp 0L;

        if $b25 != 0 goto label01;

        $i26 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(58);

        $i27 = $i26 + 1;

        $r67 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i27);

        $l28 = staticinvoke <androidx.media3.common.util.Util: long parseXsDateTime(java.lang.String)>($r67);

        l71 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l28);

        l56 = l71 - l57;

        goto label01;

     label43:
        $z25 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-GAP");

        if $z25 == 0 goto label44;

        z54 = 1;

        goto label01;

     label44:
        $z26 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-INDEPENDENT-SEGMENTS");

        if $z26 == 0 goto label45;

        z49 = 1;

        goto label01;

     label45:
        $z27 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("#EXT-X-ENDLIST");

        if $z27 == 0 goto label46;

        z50 = 1;

        goto label01;

     label46:
        $z28 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-RENDITION-REPORT");

        if $z28 == 0 goto label47;

        $r62 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LAST_MSN>;

        l72 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: long parseOptionalLongAttr(java.lang.String,java.util.regex.Pattern,long)>(r10, $r62, -1L);

        $r63 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LAST_PART>;

        i73 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: int parseOptionalIntAttr(java.lang.String,java.util.regex.Pattern,int)>(r10, $r63, -1);

        $r64 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r138 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r64, r4);

        $r65 = staticinvoke <androidx.media3.common.util.UriUtil: java.lang.String resolve(java.lang.String,java.lang.String)>(r3, r138);

        r139 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r65);

        r174 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport;

        specialinvoke r174.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: void <init>(android.net.Uri,long,int)>(r139, l72, i73);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r174);

        goto label01;

     label47:
        $z29 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-PRELOAD-HINT");

        if $z29 == 0 goto label55;

        if r116 == null goto label48;

        goto label01;

     label48:
        $r47 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PRELOAD_HINT_TYPE>;

        r140 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r47, r4);

        $r48 = "PART";

        $z37 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>(r140);

        if $z37 != 0 goto label49;

        goto label01;

     label49:
        $r49 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r141 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r49, r4);

        $r50 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE_START>;

        l74 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: long parseOptionalLongAttr(java.lang.String,java.util.regex.Pattern,long)>(r10, $r50, -1L);

        $r51 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE_LENGTH>;

        l75 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: long parseOptionalLongAttr(java.lang.String,java.util.regex.Pattern,long)>(r10, $r51, -1L);

        r142 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String getSegmentEncryptionIV(long,java.lang.String,java.lang.String)>(l62, r120, r121);

        if r123 != null goto label50;

        $z38 = virtualinvoke r9.<java.util.TreeMap: boolean isEmpty()>();

        if $z38 != 0 goto label50;

        $r58 = virtualinvoke r9.<java.util.TreeMap: java.util.Collection values()>();

        $r59 = newarray (androidx.media3.common.DrmInitData$SchemeData)[0];

        $r60 = interfaceinvoke $r58.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r59);

        r143 = (androidx.media3.common.DrmInitData$SchemeData[]) $r60;

        r175 = new androidx.media3.common.DrmInitData;

        specialinvoke r175.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r122, r143);

        r123 = r175;

        if r119 != null goto label50;

        r119 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.common.DrmInitData getPlaylistProtectionSchemes(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r122, r143);

     label50:
        $b76 = l74 cmp -1L;

        if $b76 == 0 goto label51;

        $b24 = l75 cmp -1L;

        if $b24 == 0 goto label54;

     label51:
        r176 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part;

        $r54 = r114;

        $i22 = i55;

        $l23 = l60;

        $r55 = r123;

        $r56 = r120;

        $b20 = l74 cmp -1L;

        if $b20 == 0 goto label52;

        $l77 = l74;

        goto label53;

     label52:
        $l77 = 0L;

     label53:
        specialinvoke r176.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>(r141, $r54, 0L, $i22, $l23, $r55, $r56, r142, $l77, l75, 0, 0, 1);

        r116 = r176;

     label54:
        goto label01;

     label55:
        $z30 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#EXT-X-PART");

        if $z30 == 0 goto label62;

        r144 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String getSegmentEncryptionIV(long,java.lang.String,java.lang.String)>(l62, r120, r121);

        $r38 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r145 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r38, r4);

        $r39 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_DURATION>;

        $d0 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: double parseDoubleAttr(java.lang.String,java.util.regex.Pattern)>(r10, $r39);

        $d1 = $d0 * 1000000.0;

        l78 = (long) $d1;

        $r40 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INDEPENDENT>;

        z57 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r10, $r40, 0);

        if z49 == 0 goto label56;

        $z36 = interfaceinvoke r115.<java.util.List: boolean isEmpty()>();

        if $z36 == 0 goto label56;

        $z59 = 1;

        goto label57;

     label56:
        $z59 = 0;

     label57:
        z60 = z57 | $z59;

        $r146 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GAP>;

        z61 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r10, $r146, 0);

        $r147 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_BYTERANGE>;

        r148 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r10, $r147, r4);

        l79 = -1L;

        if r148 == null goto label58;

        r149 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r148, "@");

        $r45 = r149[0];

        l79 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r45);

        $i19 = lengthof r149;

        if $i19 <= 1 goto label58;

        $r46 = r149[1];

        l61 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r46);

     label58:
        $b80 = l79 cmp -1L;

        if $b80 != 0 goto label59;

        l61 = 0L;

     label59:
        if r123 != null goto label60;

        $z35 = virtualinvoke r9.<java.util.TreeMap: boolean isEmpty()>();

        if $z35 != 0 goto label60;

        $r41 = virtualinvoke r9.<java.util.TreeMap: java.util.Collection values()>();

        $r42 = newarray (androidx.media3.common.DrmInitData$SchemeData)[0];

        $r43 = interfaceinvoke $r41.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r42);

        r150 = (androidx.media3.common.DrmInitData$SchemeData[]) $r43;

        r177 = new androidx.media3.common.DrmInitData;

        specialinvoke r177.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r122, r150);

        r123 = r177;

        if r119 != null goto label60;

        r119 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.common.DrmInitData getPlaylistProtectionSchemes(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r122, r150);

     label60:
        r178 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part;

        specialinvoke r178.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>(r145, r114, l78, i55, l60, r123, r120, r144, l61, l79, z61, z60, 0);

        interfaceinvoke r115.<java.util.List: boolean add(java.lang.Object)>(r178);

        l60 = l60 + l78;

        $b81 = l79 cmp -1L;

        if $b81 == 0 goto label61;

        l61 = l61 + l79;

     label61:
        goto label01;

     label62:
        $z31 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z31 != 0 goto label01;

        r152 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String getSegmentEncryptionIV(long,java.lang.String,java.lang.String)>(l62, r120, r121);

        l62 = l62 + 1L;

        r153 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String replaceVariableReferences(java.lang.String,java.util.Map)>(r10, r4);

        $r27 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r153);

        r154 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r27;

        $b17 = l59 cmp -1L;

        if $b17 != 0 goto label63;

        l58 = 0L;

        goto label64;

     label63:
        if z53 == 0 goto label64;

        if r114 != null goto label64;

        if r154 != null goto label64;

        r179 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment;

        specialinvoke r179.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: void <init>(java.lang.String,long,long,java.lang.String,java.lang.String)>(r153, 0L, l58, null, null);

        r154 = r179;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r153, r154);

     label64:
        if r123 != null goto label65;

        $z33 = virtualinvoke r9.<java.util.TreeMap: boolean isEmpty()>();

        if $z33 != 0 goto label65;

        $r32 = virtualinvoke r9.<java.util.TreeMap: java.util.Collection values()>();

        $r33 = newarray (androidx.media3.common.DrmInitData$SchemeData)[0];

        $r34 = interfaceinvoke $r32.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r33);

        r155 = (androidx.media3.common.DrmInitData$SchemeData[]) $r34;

        r180 = new androidx.media3.common.DrmInitData;

        specialinvoke r180.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r122, r155);

        r123 = r180;

        if r119 != null goto label65;

        r119 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.common.DrmInitData getPlaylistProtectionSchemes(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r122, r155);

     label65:
        r181 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment;

        if r114 == null goto label66;

        $r156 = r114;

        goto label67;

     label66:
        $r156 = r154;

     label67:
        specialinvoke r181.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,java.lang.String,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean,java.util.List)>(r153, $r156, r117, l53, i55, l57, r123, r120, r152, l58, l59, z54, r115);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r181);

        l57 = l57 + l53;

        l60 = l57;

        l53 = 0L;

        r117 = "";

        r182 = new java.util.ArrayList;

        specialinvoke r182.<java.util.ArrayList: void <init>()>();

        r115 = r182;

        $b18 = l59 cmp -1L;

        if $b18 == 0 goto label68;

        l58 = l58 + l59;

     label68:
        l59 = -1L;

        z54 = 0;

        goto label01;

     label69:
        r183 = new java.util.HashMap;

        specialinvoke r183.<java.util.HashMap: void <init>()>();

        r157 = r183;

        i82 = 0;

     label70:
        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        if i82 >= $i0 goto label77;

        $r23 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i82);

        r158 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport) $r23;

        l83 = r158.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: long lastMediaSequence>;

        $b10 = l83 cmp -1L;

        if $b10 != 0 goto label73;

        $i13 = interfaceinvoke r6.<java.util.List: int size()>();

        $l14 = (long) $i13;

        $l15 = l49 + $l14;

        $z6 = interfaceinvoke r115.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label71;

        $z62 = 1;

        goto label72;

     label71:
        $z62 = 0;

     label72:
        $l16 = (long) $z62;

        l83 = $l15 - $l16;

     label73:
        i84 = r158.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: int lastPartIndex>;

        if i84 != -1 goto label76;

        $b11 = l52 cmp -9223372036854775807L;

        if $b11 == 0 goto label76;

        $z5 = interfaceinvoke r115.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label74;

        $r25 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>(r6);

        $r26 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r25;

        $r159 = $r26.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        goto label75;

     label74:
        $r159 = r115;

     label75:
        r160 = $r159;

        r187 = (java.util.List) r160;

        $i12 = interfaceinvoke r187.<java.util.List: int size()>();

        i84 = $i12 - 1;

     label76:
        $r161 = r158.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: android.net.Uri playlistUri>;

        r184 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport;

        $r163 = r158.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: android.net.Uri playlistUri>;

        specialinvoke r184.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport: void <init>(android.net.Uri,long,int)>($r163, l83, i84);

        interfaceinvoke r157.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r161, r184);

        i82 = i82 + 1;

        goto label70;

     label77:
        if r116 == null goto label78;

        interfaceinvoke r115.<java.util.List: boolean add(java.lang.Object)>(r116);

     label78:
        r185 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $i2 = i47;

        $l3 = l48;

        $z0 = z52;

        $l4 = l56;

        $z1 = z51;

        $i5 = i54;

        $l6 = l49;

        $i7 = i50;

        $l8 = l51;

        $l9 = l52;

        $z2 = z49;

        $z3 = z50;

        $b1 = l56 cmp 0L;

        if $b1 == 0 goto label79;

        $z63 = 1;

        goto label80;

     label79:
        $z63 = 0;

     label80:
        specialinvoke r185.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: void <init>(int,java.lang.String,java.util.List,long,boolean,long,boolean,int,long,int,long,long,boolean,boolean,boolean,androidx.media3.common.DrmInitData,java.util.List,java.util.List,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl,java.util.Map)>($i2, r3, r8, $l3, $z0, $l4, $z1, $i5, $l6, $i7, $l8, $l9, $z2, $z3, $z63, r119, r6, r115, r118, r157);

        return r185;
    }

    private static androidx.media3.common.DrmInitData getPlaylistProtectionSchemes(java.lang.String, androidx.media3.common.DrmInitData$SchemeData[])
    {
        java.lang.String r0;
        androidx.media3.common.DrmInitData$SchemeData[] r1, r2;
        int $i0, $i1, i2;
        androidx.media3.common.DrmInitData $r3;
        androidx.media3.common.DrmInitData$SchemeData $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.common.DrmInitData$SchemeData[];

        $i0 = lengthof r1;

        r2 = newarray (androidx.media3.common.DrmInitData$SchemeData)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r4 = r1[i2];

        $r5 = virtualinvoke $r4.<androidx.media3.common.DrmInitData$SchemeData: androidx.media3.common.DrmInitData$SchemeData copyWithData(byte[])>(null);

        r2[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new androidx.media3.common.DrmInitData;

        specialinvoke $r3.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r0, r2);

        return $r3;
    }

    private static java.lang.String getSegmentEncryptionIV(long, java.lang.String, java.lang.String)
    {
        long l0;
        java.lang.String r0, r1, $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        if r1 == null goto label2;

        return r1;

     label2:
        $r2 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        return $r2;
    }

    private static int parseSelectionFlags(java.lang.String)
    {
        java.lang.String r0;
        java.util.regex.Pattern $r1, $r2, $r3;
        boolean $z0, $z1, $z2;
        byte b0;

        r0 := @parameter0: java.lang.String;

        b0 = 0;

        $r1 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_DEFAULT>;

        $z0 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r0, $r1, 0);

        if $z0 == 0 goto label1;

        b0 = b0 | 1;

     label1:
        $r2 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FORCED>;

        $z1 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r0, $r2, 0);

        if $z1 == 0 goto label2;

        b0 = b0 | 2;

     label2:
        $r3 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUTOSELECT>;

        $z2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r0, $r3, 0);

        if $z2 == 0 goto label3;

        b0 = b0 | 4;

     label3:
        return b0;
    }

    private static int parseRoleFlags(java.lang.String, java.util.Map)
    {
        java.lang.String r0, r2;
        java.util.Map r1;
        java.lang.String[] r3;
        java.util.regex.Pattern $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        short s0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $r4 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHARACTERISTICS>;

        r2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, $r4, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r2, ",");

        s0 = 0;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean contains(java.lang.Object[],java.lang.Object)>(r3, "public.accessibility.describes-video");

        if $z1 == 0 goto label2;

        s0 = s0 | 512;

     label2:
        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean contains(java.lang.Object[],java.lang.Object)>(r3, "public.accessibility.transcribes-spoken-dialog");

        if $z2 == 0 goto label3;

        s0 = s0 | 4096;

     label3:
        $z3 = staticinvoke <androidx.media3.common.util.Util: boolean contains(java.lang.Object[],java.lang.Object)>(r3, "public.accessibility.describes-music-and-sound");

        if $z3 == 0 goto label4;

        s0 = s0 | 1024;

     label4:
        $z4 = staticinvoke <androidx.media3.common.util.Util: boolean contains(java.lang.Object[],java.lang.Object)>(r3, "public.easy-to-read");

        if $z4 == 0 goto label5;

        s0 = s0 | 8192;

     label5:
        return s0;
    }

    private static androidx.media3.common.DrmInitData$SchemeData parseDrmSchemeData(java.lang.String, java.lang.String, java.util.Map) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, r1, r3, $r7, $r8, $r9, $r10, $r12, $r22, r24, r25;
        java.util.Map r2;
        byte[] r4, r5, $r18, $r23;
        java.util.regex.Pattern $r6, $r11, $r19;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.util.UUID $r13, $r15, $r17, $r21;
        androidx.media3.common.DrmInitData$SchemeData $r14, $r16, $r20;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Map;

        $r6 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMATVERSIONS>;

        r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map)>(r0, $r6, "1", r2);

        $r7 = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r19 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r24 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, $r19, r2);

        $r20 = new androidx.media3.common.DrmInitData$SchemeData;

        $r21 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $i1 = virtualinvoke r24.<java.lang.String: int indexOf(int)>(44);

        $r22 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i1);

        $r23 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r22, 0);

        specialinvoke $r20.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,byte[])>($r21, "video/mp4", $r23);

        return $r20;

     label1:
        $r8 = "com.widevine";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r16 = new androidx.media3.common.DrmInitData$SchemeData;

        $r17 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $r18 = staticinvoke <androidx.media3.common.util.Util: byte[] getUtf8Bytes(java.lang.String)>(r0);

        specialinvoke $r16.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,byte[])>($r17, "hls", $r18);

        return $r16;

     label2:
        $r9 = "com.microsoft.playready";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r10 = "1";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label3;

        $r11 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI>;

        r25 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, $r11, r2);

        $i0 = virtualinvoke r25.<java.lang.String: int indexOf(int)>(44);

        $r12 = virtualinvoke r25.<java.lang.String: java.lang.String substring(int)>($i0);

        r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r12, 0);

        $r13 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        r5 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,byte[])>($r13, r4);

        $r14 = new androidx.media3.common.DrmInitData$SchemeData;

        $r15 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        specialinvoke $r14.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,byte[])>($r15, "video/mp4", r5);

        return $r14;

     label3:
        return null;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl parseServerControl(java.lang.String)
    {
        java.lang.String r0;
        double d0, d1, d2, $d3, $d4, $d5;
        long l0, l1, l2, $l6, $l7, $l8;
        boolean z0, z1;
        java.util.regex.Pattern $r1, $r2, $r3, $r4, $r5;
        byte $b3, $b4, $b5;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl $r6;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_SKIP_UNTIL>;

        d0 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: double parseOptionalDoubleAttr(java.lang.String,java.util.regex.Pattern,double)>(r0, $r1, -9.223372036854776E18);

        $b3 = d0 cmpl -9.223372036854776E18;

        if $b3 != 0 goto label1;

        $l6 = -9223372036854775807L;

        goto label2;

     label1:
        $d3 = d0 * 1000000.0;

        $l6 = (long) $d3;

     label2:
        l0 = $l6;

        $r2 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_SKIP_DATE_RANGES>;

        z0 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r0, $r2, 0);

        $r3 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_HOLD_BACK>;

        d1 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: double parseOptionalDoubleAttr(java.lang.String,java.util.regex.Pattern,double)>(r0, $r3, -9.223372036854776E18);

        $b4 = d1 cmpl -9.223372036854776E18;

        if $b4 != 0 goto label3;

        $l7 = -9223372036854775807L;

        goto label4;

     label3:
        $d4 = d1 * 1000000.0;

        $l7 = (long) $d4;

     label4:
        l1 = $l7;

        $r4 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PART_HOLD_BACK>;

        d2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: double parseOptionalDoubleAttr(java.lang.String,java.util.regex.Pattern,double)>(r0, $r4, -9.223372036854776E18);

        $b5 = d2 cmpl -9.223372036854776E18;

        if $b5 != 0 goto label5;

        $l8 = -9223372036854775807L;

        goto label6;

     label5:
        $d5 = d2 * 1000000.0;

        $l8 = (long) $d5;

     label6:
        l2 = $l8;

        $r5 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_BLOCK_RELOAD>;

        z1 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)>(r0, $r5, 0);

        $r6 = new androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl;

        specialinvoke $r6.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: void <init>(long,boolean,long,long,boolean)>(l0, z0, l1, l2, z1);

        return $r6;
    }

    private static java.lang.String parseEncryptionScheme(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = "SAMPLE-AES-CENC";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "SAMPLE-AES-CTR";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $r3 = "cenc";

        goto label3;

     label2:
        $r3 = "cbcs";

     label3:
        return $r3;
    }

    private static int parseIntAttr(java.lang.String, java.util.regex.Pattern) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern r1;
        java.util.Map $r2;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, r1, $r2);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        return $i0;
    }

    private static int parseOptionalIntAttr(java.lang.String, java.util.regex.Pattern, int)
    {
        java.lang.String r0, $r3, $r5;
        java.util.regex.Pattern r1;
        int i0, $i1;
        java.util.regex.Matcher r2;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        i0 := @parameter2: int;

        r2 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        return $i1;

     label1:
        return i0;
    }

    private static long parseLongAttr(java.lang.String, java.util.regex.Pattern) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern r1;
        java.util.Map $r2;
        long $l0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, r1, $r2);

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        return $l0;
    }

    private static long parseOptionalLongAttr(java.lang.String, java.util.regex.Pattern, long)
    {
        java.lang.String r0, $r3, $r5;
        java.util.regex.Pattern r1;
        long l0, $l1;
        java.util.regex.Matcher r2;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        l0 := @parameter2: long;

        r2 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        return $l1;

     label1:
        return l0;
    }

    private static long parseTimeSecondsToUs(java.lang.String, java.util.regex.Pattern) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, r2;
        java.util.regex.Pattern r1;
        java.math.BigDecimal r3, $r5, $r6, $r7;
        java.util.Map $r4;
        long $l0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r2 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, r1, $r4);

        $r5 = new java.math.BigDecimal;

        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>(r2);

        r3 = $r5;

        $r6 = new java.math.BigDecimal;

        specialinvoke $r6.<java.math.BigDecimal: void <init>(long)>(1000000L);

        $r7 = virtualinvoke r3.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r6);

        $l0 = virtualinvoke $r7.<java.math.BigDecimal: long longValue()>();

        return $l0;
    }

    private static double parseDoubleAttr(java.lang.String, java.util.regex.Pattern) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern r1;
        java.util.Map $r2;
        double $d0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, r1, $r2);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        return $d0;
    }

    private static java.lang.String parseStringAttr(java.lang.String, java.util.regex.Pattern, java.util.Map) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, r3, $r6, $r10;
        java.util.regex.Pattern r1;
        java.util.Map r2;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        androidx.media3.common.ParserException $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.util.Map;

        r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)>(r0, r1, r2);

        if r3 == null goto label1;

        return r3;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t match ");

        $r6 = virtualinvoke r1.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r10, null);

        throw $r11;
    }

    private static java.lang.String parseOptionalStringAttr(java.lang.String, java.util.regex.Pattern, java.util.Map)
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern r1;
        java.util.Map r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.util.Map;

        $r3 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map)>(r0, r1, null, r2);

        return $r3;
    }

    private static java.lang.String parseOptionalStringAttr(java.lang.String, java.util.regex.Pattern, java.lang.String, java.util.Map)
    {
        java.lang.String r0, r2, r5, $r6, $r8, $r9;
        java.util.regex.Pattern r1;
        java.util.Map r3;
        java.util.regex.Matcher r4;
        boolean $z0, $z1;
        java.lang.Object $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.Map;

        r4 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (java.lang.String) $r7;

        goto label2;

     label1:
        $r8 = r2;

     label2:
        r5 = $r8;

        $z1 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        if r5 != null goto label4;

     label3:
        $r9 = r5;

        goto label5;

     label4:
        $r9 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.lang.String replaceVariableReferences(java.lang.String,java.util.Map)>(r5, r3);

     label5:
        return $r9;
    }

    private static double parseOptionalDoubleAttr(java.lang.String, java.util.regex.Pattern, double)
    {
        java.lang.String r0, $r3, $r5;
        java.util.regex.Pattern r1;
        double d0, $d1;
        java.util.regex.Matcher r2;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        d0 := @parameter2: double;

        r2 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        return $d1;

     label1:
        return d0;
    }

    private static java.lang.String replaceVariableReferences(java.lang.String, java.util.Map)
    {
        java.lang.String r0, r4, $r8, $r10, $r11;
        java.util.Map r1;
        java.util.regex.Matcher r2;
        java.lang.StringBuffer r3, $r6;
        java.util.regex.Pattern $r5;
        boolean $z0, $z1;
        java.lang.Object $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $r5 = <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VARIABLE_REFERENCE>;

        r2 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        r3 = $r6;

     label1:
        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>($r10);

        virtualinvoke r2.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r3, $r11);

     label2:
        goto label1;

     label3:
        virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r3);

        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    private static boolean parseOptionalBooleanAttribute(java.lang.String, java.util.regex.Pattern, boolean)
    {
        java.lang.String r0, $r3, $r4;
        java.util.regex.Pattern r1;
        boolean z0, $z1, $z2;
        java.util.regex.Matcher r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label1;

        $r3 = "YES";

        $r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z2;

     label1:
        return z0;
    }

    private static java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)
    {
        java.lang.String r0, $r8;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.util.regex.Pattern $r9;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NO");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("YES");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r8);

        return $r9;
    }

    public volatile java.lang.Object parse(android.net.Uri, java.io.InputStream) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylist $r3;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.io.InputStream;

        $r3 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: androidx.media3.exoplayer.hls.playlist.HlsPlaylist parse(android.net.Uri,java.io.InputStream)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("AVERAGE-BANDWIDTH=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AVERAGE_BANDWIDTH> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("VIDEO=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VIDEO> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("AUDIO=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUDIO> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("SUBTITLES=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SUBTITLES> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("CLOSED-CAPTIONS=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CLOSED_CAPTIONS> = $r4;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^-]BANDWIDTH=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BANDWIDTH> = $r5;

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("CHANNELS=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHANNELS> = $r6;

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("CODECS=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CODECS> = $r7;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("RESOLUTION=(\\d+x\\d+)");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_RESOLUTION> = $r8;

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("FRAME-RATE=([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FRAME_RATE> = $r9;

        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXT-X-TARGETDURATION:(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TARGET_DURATION> = $r10;

        $r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("DURATION=([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_DURATION> = $r11;

        $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("PART-TARGET=([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PART_TARGET_DURATION> = $r12;

        $r13 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXT-X-VERSION:(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VERSION> = $r13;

        $r14 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXT-X-PLAYLIST-TYPE:(.+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PLAYLIST_TYPE> = $r14;

        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("CAN-SKIP-UNTIL=([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_SKIP_UNTIL> = $r15;

        $r16 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("CAN-SKIP-DATERANGES");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_SKIP_DATE_RANGES> = $r16;

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("SKIPPED-SEGMENTS=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SKIPPED_SEGMENTS> = $r17;

        $r18 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[:|,]HOLD-BACK=([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_HOLD_BACK> = $r18;

        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("PART-HOLD-BACK=([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PART_HOLD_BACK> = $r19;

        $r20 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("CAN-BLOCK-RELOAD");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CAN_BLOCK_RELOAD> = $r20;

        $r21 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXT-X-MEDIA-SEQUENCE:(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_SEQUENCE> = $r21;

        $r22 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXTINF:([\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_DURATION> = $r22;

        $r23 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXTINF:[\\d\\.]+\\b,(.+)");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_TITLE> = $r23;

        $r24 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("LAST-MSN=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LAST_MSN> = $r24;

        $r25 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("LAST-PART=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LAST_PART> = $r25;

        $r26 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("TIME-OFFSET=(-?[\\d\\.]+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TIME_OFFSET> = $r26;

        $r27 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("#EXT-X-BYTERANGE:(\\d+(?:@\\d+)?)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE> = $r27;

        $r28 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("BYTERANGE=\"(\\d+(?:@\\d+)?)\\b\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_BYTERANGE> = $r28;

        $r29 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("BYTERANGE-START=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE_START> = $r29;

        $r30 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("BYTERANGE-LENGTH=(\\d+)\\b");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE_LENGTH> = $r30;

        $r31 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("METHOD=(NONE|AES-128|SAMPLE-AES|SAMPLE-AES-CENC|SAMPLE-AES-CTR)\\s*(?:,|$)");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_METHOD> = $r31;

        $r32 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("KEYFORMAT=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMAT> = $r32;

        $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("KEYFORMATVERSIONS=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMATVERSIONS> = $r33;

        $r34 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("URI=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI> = $r34;

        $r35 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("IV=([^,.*]+)");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IV> = $r35;

        $r36 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("TYPE=(AUDIO|VIDEO|SUBTITLES|CLOSED-CAPTIONS)");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TYPE> = $r36;

        $r37 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("TYPE=(PART|MAP)");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PRELOAD_HINT_TYPE> = $r37;

        $r38 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("LANGUAGE=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LANGUAGE> = $r38;

        $r39 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("NAME=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_NAME> = $r39;

        $r40 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("GROUP-ID=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GROUP_ID> = $r40;

        $r41 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("CHARACTERISTICS=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHARACTERISTICS> = $r41;

        $r42 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("INSTREAM-ID=\"((?:CC|SERVICE)\\d+)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INSTREAM_ID> = $r42;

        $r43 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("AUTOSELECT");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUTOSELECT> = $r43;

        $r44 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("DEFAULT");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_DEFAULT> = $r44;

        $r45 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("FORCED");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FORCED> = $r45;

        $r46 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("INDEPENDENT");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INDEPENDENT> = $r46;

        $r47 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("GAP");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GAP> = $r47;

        $r48 = staticinvoke <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)>("PRECISE");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PRECISE> = $r48;

        $r49 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("VALUE=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VALUE> = $r49;

        $r50 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("IMPORT=\"(.+?)\"");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IMPORT> = $r50;

        $r51 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\{\\$([a-zA-Z0-9\\-_]+)\\}");

        <androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VARIABLE_REFERENCE> = $r51;

        return;
    }

androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException
    public void <init>()
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException r0;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        return;
    }

androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.io.BufferedReader reader>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.util.Queue extraLines>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next>
    public void <init>(java.util.Queue, java.io.BufferedReader)
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator r0;
        java.util.Queue r1;
        java.io.BufferedReader r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        r1 := @parameter0: java.util.Queue;

        r2 := @parameter1: java.io.BufferedReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.util.Queue extraLines> = r1;

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.io.BufferedReader reader> = r2;

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator r0;
        java.lang.String $r1, $r4, $r5, $r6, $r7, $r10, $r12;
        java.util.Queue $r2, $r8;
        boolean $z0, $z1;
        java.io.BufferedReader $r3;
        java.lang.Object $r9, $r11;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.util.Queue extraLines>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.util.Queue extraLines>;

        $r9 = interfaceinvoke $r8.<java.util.Queue: java.lang.Object poll()>();

        $r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r10);

        $r12 = (java.lang.String) $r11;

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next> = $r12;

        return 1;

     label2:
        $r3 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.io.BufferedReader reader>;

        $r4 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next> = $r4;

        if $r4 == null goto label3;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next> = $r6;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        return 1;

     label3:
        return 0;
    }

    public java.lang.String next() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator r0;
        java.lang.String r1;
        boolean $z0;
        java.util.NoSuchElementException $r2;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next>;

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next> = null;

        return r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;
    }

