androidx.compose.ui.platform.ComposeView
<androidx.compose.ui.platform.ComposeView: androidx.compose.runtime.MutableState content>
<androidx.compose.ui.platform.ComposeView: boolean shouldCreateCompositionOnAttachedToWindow>
<androidx.compose.ui.platform.ComposeView: int $stable>
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.compose.ui.platform.ComposeView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        androidx.compose.runtime.MutableState $r3;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.compose.ui.platform.ComposeView: androidx.compose.runtime.MutableState content> = $r3;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.platform.ComposeView r0;
        android.content.Context r1;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        android.util.AttributeSet r3;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: android.util.AttributeSet;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        i3 = 0;

     label2:
        specialinvoke r0.<androidx.compose.ui.platform.ComposeView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r3, i3);

        return;
    }

    protected boolean getShouldCreateCompositionOnAttachedToWindow()
    {
        androidx.compose.ui.platform.ComposeView r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        $z0 = r0.<androidx.compose.ui.platform.ComposeView: boolean shouldCreateCompositionOnAttachedToWindow>;

        return $z0;
    }

    protected static void getShouldCreateCompositionOnAttachedToWindow$annotations()
    {
        return;
    }

    public void Content(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.platform.ComposeView r0;
        int $i0;
        boolean $z0, $z1;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function2 $r3, $r8;
        java.lang.Integer $r4;
        androidx.compose.runtime.ScopeUpdateScope $r6;
        androidx.compose.ui.platform.ComposeView$Content$1 $r7;
        androidx.compose.runtime.Composer $r9, $r10;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        $r9 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r10 = interfaceinvoke $r9.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(420213850);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r10, "C(Content)403@15629L8:ComposeView.android.kt#itgzvw");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(420213850, $i0, -1, "androidx.compose.ui.platform.ComposeView.Content (ComposeView.android.kt:402)");

     label1:
        $r1 = r0.<androidx.compose.ui.platform.ComposeView: androidx.compose.runtime.MutableState content>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        if $r3 != null goto label2;

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r10, $r4);

     label3:
        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label4:
        $r6 = interfaceinvoke $r10.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r6 != null goto label5;

        goto label6;

     label5:
        $r7 = new androidx.compose.ui.platform.ComposeView$Content$1;

        specialinvoke $r7.<androidx.compose.ui.platform.ComposeView$Content$1: void <init>(androidx.compose.ui.platform.ComposeView,int)>(r0, $i0);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        interfaceinvoke $r6.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r8);

     label6:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        androidx.compose.ui.platform.ComposeView r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "javaClass.name");

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;
    }

    public final void setContent(kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.platform.ComposeView r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.runtime.MutableState $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        r0.<androidx.compose.ui.platform.ComposeView: boolean shouldCreateCompositionOnAttachedToWindow> = 1;

        $r2 = r0.<androidx.compose.ui.platform.ComposeView: androidx.compose.runtime.MutableState content>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<androidx.compose.ui.platform.ComposeView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.compose.ui.platform.ComposeView: void createComposition()>();

     label1:
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.compose.ui.platform.ComposeView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.compose.ui.platform.ComposeView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, 0, 4, null);

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.compose.ui.platform.ComposeView r0;
        android.content.Context r1;

        r0 := @this: androidx.compose.ui.platform.ComposeView;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.compose.ui.platform.ComposeView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 0, 6, null);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.platform.ComposeView: int $stable> = 8;

        return;
    }

androidx.compose.ui.platform.ComposeView$Content$1
<androidx.compose.ui.platform.ComposeView$Content$1: androidx.compose.ui.platform.ComposeView $tmp1_rcvr>
<androidx.compose.ui.platform.ComposeView$Content$1: int $$changed>
    void <init>(androidx.compose.ui.platform.ComposeView, int)
    {
        androidx.compose.ui.platform.ComposeView$Content$1 r0;
        androidx.compose.ui.platform.ComposeView $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.ComposeView$Content$1;

        $r1 := @parameter0: androidx.compose.ui.platform.ComposeView;

        $i0 := @parameter1: int;

        r0.<androidx.compose.ui.platform.ComposeView$Content$1: androidx.compose.ui.platform.ComposeView $tmp1_rcvr> = $r1;

        r0.<androidx.compose.ui.platform.ComposeView$Content$1: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.platform.ComposeView$Content$1 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        androidx.compose.ui.platform.ComposeView $r2;

        r0 := @this: androidx.compose.ui.platform.ComposeView$Content$1;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.compose.ui.platform.ComposeView$Content$1: androidx.compose.ui.platform.ComposeView $tmp1_rcvr>;

        $i1 = r0.<androidx.compose.ui.platform.ComposeView$Content$1: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r2.<androidx.compose.ui.platform.ComposeView: void Content(androidx.compose.runtime.Composer,int)>($r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.platform.ComposeView$Content$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.platform.ComposeView$Content$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.platform.ComposeView$Content$1: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

