androidx.activity.result.ActivityResultRegistry
<androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_REGISTERED_RCS>
<androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_REGISTERED_KEYS>
<androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_LAUNCHED_KEYS>
<androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_PENDING_RESULTS>
<androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_RANDOM_OBJECT>
<androidx.activity.result.ActivityResultRegistry: java.lang.String LOG_TAG>
<androidx.activity.result.ActivityResultRegistry: int INITIAL_REQUEST_CODE_VALUE>
<androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom>
<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>
<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>
<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers>
<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>
<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>
<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>
<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>
    public void <init>()
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.util.Random $r1;
        java.util.HashMap $r2, $r3, $r4, $r6, $r7;
        java.util.ArrayList $r5;
        android.os.Bundle $r8;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults> = $r7;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults> = $r8;

        return;
    }

<androidx.activity.result.ActivityResultRegistry: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>
    public final androidx.activity.result.ActivityResultLauncher register(java.lang.String, androidx.lifecycle.LifecycleOwner, androidx.activity.result.contract.ActivityResultContract, androidx.activity.result.ActivityResultCallback)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.lang.String r1, $r24;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.activity.result.contract.ActivityResultContract r3;
        androidx.activity.result.ActivityResultCallback r4;
        androidx.lifecycle.Lifecycle r5;
        androidx.activity.result.ActivityResultRegistry$1 r6, $r11;
        androidx.lifecycle.Lifecycle$State $r7, $r8, $r21;
        boolean $z0;
        java.util.Map $r9, $r12;
        java.lang.Object $r10;
        androidx.activity.result.ActivityResultRegistry$2 $r14;
        androidx.activity.result.ActivityResultRegistry$LifecycleContainer $r15, r25;
        java.lang.IllegalStateException $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22, $r23;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter2: androidx.activity.result.contract.ActivityResultContract;

        r4 := @parameter3: androidx.activity.result.ActivityResultCallback;

        r5 = interfaceinvoke r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r7 = virtualinvoke r5.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r8 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z0 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r8);

        if $z0 == 0 goto label1;

        $r16 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LifecycleOwner ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is attempting to register while current state is ");

        $r21 = virtualinvoke r5.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". LifecycleOwners must call register before they are STARTED.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label1:
        specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)>(r1);

        $r9 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r25 = (androidx.activity.result.ActivityResultRegistry$LifecycleContainer) $r10;

        if r25 != null goto label2;

        $r15 = new androidx.activity.result.ActivityResultRegistry$LifecycleContainer;

        specialinvoke $r15.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void <init>(androidx.lifecycle.Lifecycle)>(r5);

        r25 = $r15;

     label2:
        $r11 = new androidx.activity.result.ActivityResultRegistry$1;

        specialinvoke $r11.<androidx.activity.result.ActivityResultRegistry$1: void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)>(r0, r1, r4, r3);

        r6 = $r11;

        virtualinvoke r25.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void addObserver(androidx.lifecycle.LifecycleEventObserver)>(r6);

        $r12 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r25);

        $r14 = new androidx.activity.result.ActivityResultRegistry$2;

        specialinvoke $r14.<androidx.activity.result.ActivityResultRegistry$2: void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract)>(r0, r1, r3);

        return $r14;
    }

    public final androidx.activity.result.ActivityResultLauncher register(java.lang.String, androidx.activity.result.contract.ActivityResultContract, androidx.activity.result.ActivityResultCallback)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.lang.String r1;
        androidx.activity.result.contract.ActivityResultContract r2;
        androidx.activity.result.ActivityResultCallback r3;
        androidx.activity.result.ActivityResultRegistry$CallbackAndContract $r4;
        java.util.Map $r5, $r7, $r14, $r15;
        boolean $z0;
        android.os.Bundle $r8, $r11;
        android.os.Parcelable $r9;
        androidx.activity.result.ActivityResultRegistry$3 $r10;
        int $i0;
        android.content.Intent $r12;
        java.lang.Object $r13, r17;
        androidx.activity.result.ActivityResult r18;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.activity.result.contract.ActivityResultContract;

        r3 := @parameter2: androidx.activity.result.ActivityResultCallback;

        specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)>(r1);

        $r5 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>;

        $r4 = new androidx.activity.result.ActivityResultRegistry$CallbackAndContract;

        specialinvoke $r4.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)>(r3, r2);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r7 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r14 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        r17 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r15 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        interfaceinvoke r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>(r17);

     label1:
        $r8 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r9 = virtualinvoke $r8.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>(r1);

        r18 = (androidx.activity.result.ActivityResult) $r9;

        if r18 == null goto label2;

        $r11 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        virtualinvoke $r11.<android.os.Bundle: void remove(java.lang.String)>(r1);

        $i0 = virtualinvoke r18.<androidx.activity.result.ActivityResult: int getResultCode()>();

        $r12 = virtualinvoke r18.<androidx.activity.result.ActivityResult: android.content.Intent getData()>();

        $r13 = virtualinvoke r2.<androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)>($i0, $r12);

        interfaceinvoke r3.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r13);

     label2:
        $r10 = new androidx.activity.result.ActivityResultRegistry$3;

        specialinvoke $r10.<androidx.activity.result.ActivityResultRegistry$3: void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract)>(r0, r1, r2);

        return $r10;
    }

    final void unregister(java.lang.String)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.lang.String r1, $r16, $r25;
        java.util.ArrayList $r2;
        boolean $z0, $z1, $z2;
        android.os.Bundle $r4, $r13, $r17;
        java.util.Map $r5, $r7, $r22, $r26, $r28, $r30, $r33, $r34;
        java.lang.Object $r6, $r23, $r29;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r18, $r19, $r20, $r21, $r24;
        android.os.Parcelable $r14;
        java.lang.Integer r32;
        androidx.activity.result.ActivityResultRegistry$LifecycleContainer r35;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r28 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r32 = (java.lang.Integer) $r29;

        if r32 == null goto label1;

        $r30 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r32);

     label1:
        $r33 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>;

        interfaceinvoke $r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r34 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        $z2 = interfaceinvoke $r34.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping pending result for request ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityResultRegistry", $r25);

        $r26 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        $r4 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $z1 = virtualinvoke $r4.<android.os.Bundle: boolean containsKey(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping pending result for request ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r14 = virtualinvoke $r13.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityResultRegistry", $r16);

        $r17 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        virtualinvoke $r17.<android.os.Bundle: void remove(java.lang.String)>(r1);

     label3:
        $r5 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r35 = (androidx.activity.result.ActivityResultRegistry$LifecycleContainer) $r6;

        if r35 == null goto label4;

        virtualinvoke r35.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void clearObservers()>();

        $r7 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        return;
    }

    public final void onSaveInstanceState(android.os.Bundle)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        android.os.Bundle r1, $r10, $r12;
        java.util.ArrayList $r2, $r5, $r8, $r9;
        java.util.Map $r3, $r6;
        java.util.Collection $r4;
        java.util.Set $r7;
        java.lang.Object $r11;
        java.util.Random $r13;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        virtualinvoke r1.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>("KEY_COMPONENT_ACTIVITY_REGISTERED_RCS", $r2);

        $r5 = new java.util.ArrayList;

        $r6 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        virtualinvoke r1.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("KEY_COMPONENT_ACTIVITY_REGISTERED_KEYS", $r5);

        $r8 = new java.util.ArrayList;

        $r9 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        virtualinvoke r1.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("KEY_COMPONENT_ACTIVITY_LAUNCHED_KEYS", $r8);

        $r10 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r11 = virtualinvoke $r10.<android.os.Bundle: java.lang.Object clone()>();

        $r12 = (android.os.Bundle) $r11;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("KEY_COMPONENT_ACTIVITY_PENDING_RESULT", $r12);

        $r13 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom>;

        virtualinvoke r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("KEY_COMPONENT_ACTIVITY_RANDOM_OBJECT", $r13);

        return;
    }

    public final void onRestoreInstanceState(android.os.Bundle)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        android.os.Bundle r1, $r9, $r10, $r15;
        java.util.ArrayList r2, r3, $r6;
        java.lang.String r4, $r21;
        java.lang.Integer r5, $r19;
        java.io.Serializable $r7;
        java.util.Random $r8;
        int $i0, i1, $i2;
        java.lang.Object $r11, $r14, $r18, $r20;
        java.util.Map $r12, $r13, $r16;
        boolean $z0, $z1;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>("KEY_COMPONENT_ACTIVITY_REGISTERED_RCS");

        r3 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("KEY_COMPONENT_ACTIVITY_REGISTERED_KEYS");

        if r3 == null goto label2;

        if r2 != null goto label3;

     label2:
        return;

     label3:
        $r6 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("KEY_COMPONENT_ACTIVITY_LAUNCHED_KEYS");

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys> = $r6;

        $r7 = virtualinvoke r1.<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>("KEY_COMPONENT_ACTIVITY_RANDOM_OBJECT");

        $r8 = (java.util.Random) $r7;

        r0.<androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom> = $r8;

        $r9 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r10 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("KEY_COMPONENT_ACTIVITY_PENDING_RESULT");

        virtualinvoke $r9.<android.os.Bundle: void putAll(android.os.Bundle)>($r10);

        i1 = 0;

     label4:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label6;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (java.lang.String) $r11;

        $r12 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $z0 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label5;

        $r13 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        r5 = (java.lang.Integer) $r14;

        $r15 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $z1 = virtualinvoke $r15.<android.os.Bundle: boolean containsKey(java.lang.String)>(r4);

        if $z1 != 0 goto label5;

        $r16 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

     label5:
        $r18 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r19 = (java.lang.Integer) $r18;

        $i2 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $r20 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r21 = (java.lang.String) $r20;

        specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)>($i2, $r21);

        i1 = i1 + 1;

        goto label4;

     label6:
        return;
    }

    public final boolean dispatchResult(int, int, android.content.Intent)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        int i0, i1;
        android.content.Intent r1;
        java.lang.String r2;
        java.util.Map $r3, $r6;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r7;
        androidx.activity.result.ActivityResultRegistry$CallbackAndContract $r8;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        $r3 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (java.lang.String) $r5;

        if r2 != null goto label1;

        return 0;

     label1:
        $r6 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (androidx.activity.result.ActivityResultRegistry$CallbackAndContract) $r7;

        specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract)>(r2, i1, r1, $r8);

        return 1;
    }

    public final boolean dispatchResult(int, java.lang.Object)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        int i0;
        java.lang.Object r1, $r7, $r9;
        java.lang.String r2;
        androidx.activity.result.ActivityResultRegistry$CallbackAndContract r3;
        androidx.activity.result.ActivityResultCallback r4, $r13;
        java.util.Map $r5, $r8, $r11;
        java.lang.Integer $r6;
        android.os.Bundle $r10;
        java.util.ArrayList $r14;
        boolean $z0;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r5 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (java.lang.String) $r7;

        if r2 != null goto label1;

        return 0;

     label1:
        $r8 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (androidx.activity.result.ActivityResultRegistry$CallbackAndContract) $r9;

        if r3 == null goto label2;

        $r13 = r3.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback>;

        if $r13 != null goto label3;

     label2:
        $r10 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        virtualinvoke $r10.<android.os.Bundle: void remove(java.lang.String)>(r2);

        $r11 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        goto label4;

     label3:
        r4 = r3.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback>;

        $r14 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $z0 = virtualinvoke $r14.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        interfaceinvoke r4.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>(r1);

     label4:
        return 1;
    }

    private void doDispatch(java.lang.String, int, android.content.Intent, androidx.activity.result.ActivityResultRegistry$CallbackAndContract)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.lang.String r1;
        int i0;
        android.content.Intent r2;
        androidx.activity.result.ActivityResultRegistry$CallbackAndContract r3;
        androidx.activity.result.ActivityResultCallback r4, $r7;
        androidx.activity.result.contract.ActivityResultContract r5;
        java.util.ArrayList $r8, $r10;
        boolean $z0;
        java.lang.Object $r9;
        java.util.Map $r11;
        android.os.Bundle $r12;
        androidx.activity.result.ActivityResult $r13;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: androidx.activity.result.ActivityResultRegistry$CallbackAndContract;

        if r3 == null goto label1;

        $r7 = r3.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback>;

        if $r7 == null goto label1;

        $r8 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r4 = r3.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback>;

        r5 = r3.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.contract.ActivityResultContract mContract>;

        $r9 = virtualinvoke r5.<androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)>(i0, r2);

        interfaceinvoke r4.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r9);

        $r10 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r11 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r12 = r0.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r13 = new androidx.activity.result.ActivityResult;

        specialinvoke $r13.<androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>(i0, r2);

        virtualinvoke $r12.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>(r1, $r13);

     label2:
        return;
    }

    private void registerKey(java.lang.String)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.lang.String r1;
        java.lang.Integer r2;
        int i0;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        return;

     label1:
        i0 = specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()>();

        specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)>(i0, r1);

        return;
    }

    private int generateRandomNumber()
    {
        androidx.activity.result.ActivityResultRegistry r0;
        java.util.Random $r1, $r4;
        int $i0, $i1, i2;
        java.util.Map $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        $r1 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom>;

        $i0 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(2147418112);

        i2 = $i0 + 65536;

     label1:
        $r2 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom>;

        $i1 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>(2147418112);

        i2 = $i1 + 65536;

        goto label1;

     label2:
        return i2;
    }

    private void bindRcKey(int, java.lang.String)
    {
        androidx.activity.result.ActivityResultRegistry r0;
        int i0;
        java.lang.String r1;
        java.util.Map $r2, $r5;
        java.lang.Integer $r3, $r6;

        r0 := @this: androidx.activity.result.ActivityResultRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r5 = r0.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return;
    }

androidx.activity.result.ActivityResultRegistry$1
<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>
<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback>
<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract>
<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>
    void <init>(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.ActivityResultCallback, androidx.activity.result.contract.ActivityResultContract)
    {
        androidx.activity.result.ActivityResultRegistry$1 r0;
        androidx.activity.result.ActivityResultRegistry r1;
        java.lang.String r2;
        androidx.activity.result.ActivityResultCallback r3;
        androidx.activity.result.contract.ActivityResultContract r4;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$1;

        r1 := @parameter0: androidx.activity.result.ActivityResultRegistry;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.activity.result.ActivityResultCallback;

        r4 := @parameter3: androidx.activity.result.contract.ActivityResultContract;

        r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0> = r1;

        r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key> = r2;

        r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback> = r3;

        r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.activity.result.ActivityResultRegistry$1 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6, $r9, $r17, $r20, $r23, $r27, $r34, $r37;
        androidx.activity.result.ActivityResultRegistry $r7, $r8, $r12, $r19, $r22, $r26, $r33, $r36;
        java.util.Map $r10, $r16, $r21, $r35, $r38;
        androidx.activity.result.ActivityResultRegistry$CallbackAndContract $r13;
        androidx.activity.result.contract.ActivityResultContract $r14, $r30;
        androidx.activity.result.ActivityResultCallback $r15, $r29, $r40;
        android.os.Bundle $r24, $r28;
        android.os.Parcelable $r25;
        int $i0;
        android.content.Intent $r31;
        java.lang.Object $r32, r41;
        androidx.activity.result.ActivityResult r42;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$1;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        $z0 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle$Event: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r12 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r16 = $r12.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>;

        $r17 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        $r13 = new androidx.activity.result.ActivityResultRegistry$CallbackAndContract;

        $r15 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback>;

        $r14 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract>;

        specialinvoke $r13.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)>($r15, $r14);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r13);

        $r19 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r21 = $r19.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        $r20 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        $z3 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>($r20);

        if $z3 == 0 goto label1;

        $r33 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r35 = $r33.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        $r34 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        r41 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34);

        $r36 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r38 = $r36.<androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults>;

        $r37 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r37);

        $r40 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback>;

        interfaceinvoke $r40.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>(r41);

     label1:
        $r22 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r24 = $r22.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r23 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        $r25 = virtualinvoke $r24.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r23);

        r42 = (androidx.activity.result.ActivityResult) $r25;

        if r42 == null goto label2;

        $r26 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r28 = $r26.<androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults>;

        $r27 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        virtualinvoke $r28.<android.os.Bundle: void remove(java.lang.String)>($r27);

        $r29 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback>;

        $r30 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract>;

        $i0 = virtualinvoke r42.<androidx.activity.result.ActivityResult: int getResultCode()>();

        $r31 = virtualinvoke r42.<androidx.activity.result.ActivityResult: android.content.Intent getData()>();

        $r32 = virtualinvoke $r30.<androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)>($i0, $r31);

        interfaceinvoke $r29.<androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)>($r32);

     label2:
        goto label5;

     label3:
        $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        $z1 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$Event: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        $r8 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r10 = $r8.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback>;

        $r9 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

        goto label5;

     label4:
        $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        $z2 = virtualinvoke $r5.<androidx.lifecycle.Lifecycle$Event: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label5;

        $r7 = r0.<androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0>;

        $r6 = r0.<androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key>;

        virtualinvoke $r7.<androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)>($r6);

     label5:
        return;
    }

androidx.activity.result.ActivityResultRegistry$2
<androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key>
<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract val$contract>
<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0>
    void <init>(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.contract.ActivityResultContract)
    {
        androidx.activity.result.ActivityResultRegistry$2 r0;
        androidx.activity.result.ActivityResultRegistry r1;
        java.lang.String r2;
        androidx.activity.result.contract.ActivityResultContract r3;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$2;

        r1 := @parameter0: androidx.activity.result.ActivityResultRegistry;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.activity.result.contract.ActivityResultContract;

        r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0> = r1;

        r0.<androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key> = r2;

        r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract val$contract> = r3;

        specialinvoke r0.<androidx.activity.result.ActivityResultLauncher: void <init>()>();

        return;
    }

    public void launch(java.lang.Object, androidx.core.app.ActivityOptionsCompat)
    {
        androidx.activity.result.ActivityResultRegistry$2 r0;
        java.lang.Object r1, $r8;
        androidx.core.app.ActivityOptionsCompat r2;
        java.lang.Integer r3;
        java.lang.Throwable r4, $r23;
        androidx.activity.result.ActivityResultRegistry $r5, $r9, $r12, $r24;
        java.lang.String $r6, $r10, $r22, $r25;
        java.util.Map $r7;
        java.util.ArrayList $r11, $r26;
        int $i0;
        androidx.activity.result.contract.ActivityResultContract $r13, $r17;
        java.lang.IllegalStateException $r14;
        java.lang.StringBuilder $r15, $r16, $r18, $r19, $r20, $r21;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.core.app.ActivityOptionsCompat;

        $r5 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0>;

        $r7 = $r5.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r6 = r0.<androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (java.lang.Integer) $r8;

        if r3 != null goto label1;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to launch an unregistered ActivityResultLauncher with contract ");

        $r17 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract val$contract>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and input ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". You must ensure the ActivityResultLauncher is registered before calling launch().");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label1:
        $r9 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0>;

        $r11 = $r9.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $r10 = r0.<androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label2:
        $r12 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r13 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract val$contract>;

        virtualinvoke $r12.<androidx.activity.result.ActivityResultRegistry: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>($i0, $r13, r1, r2);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        r4 = $r23;

        $r24 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0>;

        $r26 = $r24.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $r25 = r0.<androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key>;

        virtualinvoke $r26.<java.util.ArrayList: boolean remove(java.lang.Object)>($r25);

        throw r4;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void unregister()
    {
        androidx.activity.result.ActivityResultRegistry$2 r0;
        java.lang.String $r1;
        androidx.activity.result.ActivityResultRegistry $r2;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$2;

        $r2 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0>;

        $r1 = r0.<androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key>;

        virtualinvoke $r2.<androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)>($r1);

        return;
    }

    public androidx.activity.result.contract.ActivityResultContract getContract()
    {
        androidx.activity.result.ActivityResultRegistry$2 r0;
        androidx.activity.result.contract.ActivityResultContract $r1;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$2;

        $r1 = r0.<androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract val$contract>;

        return $r1;
    }

androidx.activity.result.ActivityResultRegistry$3
<androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key>
<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract>
<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0>
    void <init>(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.contract.ActivityResultContract)
    {
        androidx.activity.result.ActivityResultRegistry$3 r0;
        androidx.activity.result.ActivityResultRegistry r1;
        java.lang.String r2;
        androidx.activity.result.contract.ActivityResultContract r3;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$3;

        r1 := @parameter0: androidx.activity.result.ActivityResultRegistry;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.activity.result.contract.ActivityResultContract;

        r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0> = r1;

        r0.<androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key> = r2;

        r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract> = r3;

        specialinvoke r0.<androidx.activity.result.ActivityResultLauncher: void <init>()>();

        return;
    }

    public void launch(java.lang.Object, androidx.core.app.ActivityOptionsCompat)
    {
        androidx.activity.result.ActivityResultRegistry$3 r0;
        java.lang.Object r1, $r8;
        androidx.core.app.ActivityOptionsCompat r2;
        java.lang.Integer r3;
        java.lang.Throwable r4, $r23;
        androidx.activity.result.ActivityResultRegistry $r5, $r9, $r12, $r24;
        java.lang.String $r6, $r10, $r22, $r25;
        java.util.Map $r7;
        java.util.ArrayList $r11, $r26;
        int $i0;
        androidx.activity.result.contract.ActivityResultContract $r13, $r17;
        java.lang.IllegalStateException $r14;
        java.lang.StringBuilder $r15, $r16, $r18, $r19, $r20, $r21;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.core.app.ActivityOptionsCompat;

        $r5 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0>;

        $r7 = $r5.<androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc>;

        $r6 = r0.<androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (java.lang.Integer) $r8;

        if r3 != null goto label1;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to launch an unregistered ActivityResultLauncher with contract ");

        $r17 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and input ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". You must ensure the ActivityResultLauncher is registered before calling launch().");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label1:
        $r9 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0>;

        $r11 = $r9.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $r10 = r0.<androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label2:
        $r12 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r13 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract>;

        virtualinvoke $r12.<androidx.activity.result.ActivityResultRegistry: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>($i0, $r13, r1, r2);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        r4 = $r23;

        $r24 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0>;

        $r26 = $r24.<androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys>;

        $r25 = r0.<androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key>;

        virtualinvoke $r26.<java.util.ArrayList: boolean remove(java.lang.Object)>($r25);

        throw r4;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void unregister()
    {
        androidx.activity.result.ActivityResultRegistry$3 r0;
        java.lang.String $r1;
        androidx.activity.result.ActivityResultRegistry $r2;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$3;

        $r2 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0>;

        $r1 = r0.<androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key>;

        virtualinvoke $r2.<androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)>($r1);

        return;
    }

    public androidx.activity.result.contract.ActivityResultContract getContract()
    {
        androidx.activity.result.ActivityResultRegistry$3 r0;
        androidx.activity.result.contract.ActivityResultContract $r1;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$3;

        $r1 = r0.<androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract>;

        return $r1;
    }

androidx.activity.result.ActivityResultRegistry$CallbackAndContract
<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback>
<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.contract.ActivityResultContract mContract>
    void <init>(androidx.activity.result.ActivityResultCallback, androidx.activity.result.contract.ActivityResultContract)
    {
        androidx.activity.result.ActivityResultRegistry$CallbackAndContract r0;
        androidx.activity.result.ActivityResultCallback r1;
        androidx.activity.result.contract.ActivityResultContract r2;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$CallbackAndContract;

        r1 := @parameter0: androidx.activity.result.ActivityResultCallback;

        r2 := @parameter1: androidx.activity.result.contract.ActivityResultContract;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback> = r1;

        r0.<androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.contract.ActivityResultContract mContract> = r2;

        return;
    }

androidx.activity.result.ActivityResultRegistry$LifecycleContainer
<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle>
<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers>
    void <init>(androidx.lifecycle.Lifecycle)
    {
        androidx.activity.result.ActivityResultRegistry$LifecycleContainer r0;
        androidx.lifecycle.Lifecycle r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$LifecycleContainer;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers> = $r2;

        return;
    }

    void addObserver(androidx.lifecycle.LifecycleEventObserver)
    {
        androidx.activity.result.ActivityResultRegistry$LifecycleContainer r0;
        androidx.lifecycle.LifecycleEventObserver r1;
        androidx.lifecycle.Lifecycle $r2;
        java.util.ArrayList $r3;
        androidx.lifecycle.LifecycleObserver r4;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$LifecycleContainer;

        r1 := @parameter0: androidx.lifecycle.LifecycleEventObserver;

        $r2 = r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle>;

        r4 = (androidx.lifecycle.LifecycleObserver) r1;

        virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r4);

        $r3 = r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void clearObservers()
    {
        androidx.activity.result.ActivityResultRegistry$LifecycleContainer r0;
        java.util.Iterator r1;
        androidx.lifecycle.LifecycleEventObserver r2;
        java.util.ArrayList $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        androidx.lifecycle.Lifecycle $r6;
        androidx.lifecycle.LifecycleObserver r7;

        r0 := @this: androidx.activity.result.ActivityResultRegistry$LifecycleContainer;

        $r3 = r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.lifecycle.LifecycleEventObserver) $r5;

        $r6 = r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle>;

        r7 = (androidx.lifecycle.LifecycleObserver) r2;

        virtualinvoke $r6.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r7);

        goto label1;

     label2:
        $r4 = r0.<androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        return;
    }

