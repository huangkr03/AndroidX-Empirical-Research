androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter
<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: androidx.concurrent.futures.ResolvableFuture mFuture>
<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: java.util.function.Function mValueMapper>
    public void <init>(androidx.concurrent.futures.ResolvableFuture, java.util.function.Function)
    {
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter r0;
        androidx.concurrent.futures.ResolvableFuture r1, $r4;
        java.util.function.Function r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter;

        r1 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r2 := @parameter1: java.util.function.Function;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.concurrent.futures.ResolvableFuture) $r3;

        r0.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: androidx.concurrent.futures.ResolvableFuture mFuture> = $r4;

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (java.util.function.Function) $r5;

        r0.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: java.util.function.Function mValueMapper> = $r6;

        return;
    }

    public void onResult(android.app.appsearch.AppSearchBatchResult)
    {
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter r0;
        android.app.appsearch.AppSearchBatchResult r1;
        androidx.appsearch.app.AppSearchBatchResult r2;
        java.util.function.Function $r3;
        androidx.concurrent.futures.ResolvableFuture $r4;

        r0 := @this: androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter;

        r1 := @parameter0: android.app.appsearch.AppSearchBatchResult;

        $r3 = r0.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: java.util.function.Function mValueMapper>;

        r2 = staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: androidx.appsearch.app.AppSearchBatchResult platformAppSearchBatchResultToJetpack(android.app.appsearch.AppSearchBatchResult,java.util.function.Function)>(r1, $r3);

        $r4 = r0.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: androidx.concurrent.futures.ResolvableFuture mFuture>;

        virtualinvoke $r4.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(r2);

        return;
    }

    public void onSystemError(java.lang.Throwable)
    {
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter r0;
        java.lang.Throwable r1;
        androidx.concurrent.futures.ResolvableFuture $r2;

        r0 := @this: androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: androidx.concurrent.futures.ResolvableFuture mFuture>;

        virtualinvoke $r2.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>(r1);

        return;
    }

    public static androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter forSameValueType(androidx.concurrent.futures.ResolvableFuture)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter $r1;
        java.util.function.Function $r2;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        $r1 = new androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter;

        $r2 = staticinvoke <java.util.function.Function: java.util.function.Function identity()>();

        specialinvoke $r1.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: void <init>(androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r0, $r2);

        return $r1;
    }

