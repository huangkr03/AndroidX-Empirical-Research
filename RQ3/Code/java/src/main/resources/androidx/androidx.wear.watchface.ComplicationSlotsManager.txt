androidx.wear.watchface.ComplicationSlotsManager
<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>
<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchState watchState>
<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>
<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.Renderer renderer>
<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>
<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map lastComplicationTapDownEvents>
<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map initialComplicationConfigs>
<androidx.wear.watchface.ComplicationSlotsManager: java.util.HashSet complicationListeners>
    public void <init>(java.util.Collection, androidx.wear.watchface.style.CurrentUserStyleRepository)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0, r24, r33;
        java.util.Collection r1;
        androidx.wear.watchface.style.CurrentUserStyleRepository r2, $r9, $r17;
        androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig r3, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.util.LinkedHashMap $r4, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, z12, $z15;
        java.util.HashMap $r5;
        java.util.Map $r6, r25, r29, r31, r34, r38, r42, r43, r50;
        java.util.HashSet $r8;
        androidx.wear.watchface.style.UserStyleSchema $r10;
        java.util.List $r11;
        java.util.Set $r12;
        java.lang.Object $r13, $r14, r27, r36, r46, $r48;
        kotlin.jvm.internal.Ref$ObjectRef $r15;
        androidx.wear.watchface.ComplicationSlotsManager$1 $r16;
        androidx.wear.watchface.style.CurrentUserStyleRepository$UserStyleChangeListener $r18;
        androidx.wear.complications.ComplicationSlotBounds $r20;
        java.lang.Iterable $r23, $r32, $r44;
        java.util.Iterator $r26, $r35, $r45, $r51;
        androidx.wear.watchface.ComplicationSlot r28, r37, r40, $r54;
        java.lang.Integer r30, r39, r41;
        androidx.wear.watchface.style.UserStyleSetting $r47, $r49;
        java.util.Map$Entry r52, r53;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: androidx.wear.watchface.style.CurrentUserStyleRepository;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "complicationSlotCollection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "currentUserStyleRepository");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository> = r2;

        $r23 = (java.lang.Iterable) r1;

        r24 = r0;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r23, 10);

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 16);

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(int)>(i7);

        r25 = (java.util.Map) $r4;

        $r26 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (androidx.wear.watchface.ComplicationSlot) r27;

        r29 = r25;

        $i6 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, r27);

        goto label01;

     label02:
        r31 = r25;

        r24.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots> = r31;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = (java.util.Map) $r5;

        r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map lastComplicationTapDownEvents> = $r6;

        $r32 = (java.lang.Iterable) r1;

        r33 = r0;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r32, 10);

        $i3 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i2);

        i8 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i3, 16);

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(int)>(i8);

        r34 = (java.util.Map) $r7;

        $r35 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (androidx.wear.watchface.ComplicationSlot) r36;

        r38 = r34;

        $i4 = virtualinvoke r37.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r40 = (androidx.wear.watchface.ComplicationSlot) r36;

        r41 = r39;

        r42 = r38;

        $r19 = new androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig;

        $r20 = virtualinvoke r40.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds getComplicationSlotBounds()>();

        $z4 = virtualinvoke r40.<androidx.wear.watchface.ComplicationSlot: boolean isEnabled()>();

        $i5 = virtualinvoke r40.<androidx.wear.watchface.ComplicationSlot: int getAccessibilityTraversalIndex()>();

        specialinvoke $r19.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: void <init>(androidx.wear.complications.ComplicationSlotBounds,boolean,int)>($r20, $z4, $i5);

        r3 = $r19;

        interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r3);

        goto label03;

     label04:
        r43 = r34;

        r33.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map initialComplicationConfigs> = r43;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.HashSet complicationListeners> = $r8;

        $r9 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>;

        $r10 = virtualinvoke $r9.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyleSchema getSchema()>();

        $r11 = virtualinvoke $r10.<androidx.wear.watchface.style.UserStyleSchema: java.util.List getUserStyleSettings()>();

        $r44 = (java.lang.Iterable) $r11;

        z12 = 0;

        $r45 = interfaceinvoke $r44.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        r46 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        $r47 = (androidx.wear.watchface.style.UserStyleSetting) r46;

        $z3 = $r47 instanceof androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting;

        if $z3 == 0 goto label05;

        $r48 = r46;

        goto label07;

     label06:
        $r48 = null;

     label07:
        $r49 = (androidx.wear.watchface.style.UserStyleSetting) $r48;

        if $r49 == null goto label08;

        $r15 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r15.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r17 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>;

        $r16 = new androidx.wear.watchface.ComplicationSlotsManager$1;

        specialinvoke $r16.<androidx.wear.watchface.ComplicationSlotsManager$1: void <init>(androidx.wear.watchface.style.UserStyleSetting,kotlin.jvm.internal.Ref$ObjectRef,androidx.wear.watchface.ComplicationSlotsManager)>($r49, $r15, r0);

        $r18 = (androidx.wear.watchface.style.CurrentUserStyleRepository$UserStyleChangeListener) $r16;

        virtualinvoke $r17.<androidx.wear.watchface.style.CurrentUserStyleRepository: void addUserStyleChangeListener(androidx.wear.watchface.style.CurrentUserStyleRepository$UserStyleChangeListener)>($r18);

     label08:
        r50 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r12 = interfaceinvoke r50.<java.util.Map: java.util.Set entrySet()>();

        $r51 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z15 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label10;

        $r13 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        r52 = (java.util.Map$Entry) $r13;

        r53 = r52;

        $r14 = interfaceinvoke r53.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r54 = (androidx.wear.watchface.ComplicationSlot) $r14;

        virtualinvoke $r54.<androidx.wear.watchface.ComplicationSlot: void setComplicationSlotsManager$wear_watchface_release(androidx.wear.watchface.ComplicationSlotsManager)>(r0);

        goto label09;

     label10:
        return;
    }

    public final androidx.wear.watchface.WatchState getWatchState()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.WatchState r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchState watchState>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchState");

        return null;
    }

    public final void setWatchState(androidx.wear.watchface.WatchState)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.WatchState r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.WatchState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchState watchState> = r1;

        return;
    }

    public static void getWatchState$annotations()
    {
        return;
    }

    public final androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.Renderer r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.Renderer renderer>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("renderer");

        return null;
    }

    public final void setRenderer$wear_watchface_release(androidx.wear.watchface.Renderer)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.Renderer r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.Renderer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.Renderer renderer> = r1;

        return;
    }

    public final java.util.Map getComplicationSlots()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.util.Map $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        return $r1;
    }

    public final java.util.Map getLastComplicationTapDownEvents()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.util.Map $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map lastComplicationTapDownEvents>;

        return $r1;
    }

    public void <init>(java.util.Collection, androidx.wear.watchface.style.CurrentUserStyleRepository, androidx.wear.watchface.Renderer)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.util.Collection r1;
        androidx.wear.watchface.style.CurrentUserStyleRepository r2;
        androidx.wear.watchface.Renderer r3;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: androidx.wear.watchface.style.CurrentUserStyleRepository;

        r3 := @parameter2: androidx.wear.watchface.Renderer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "complicationSlotCollection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "currentUserStyleRepository");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "renderer");

        specialinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: void <init>(java.util.Collection,androidx.wear.watchface.style.CurrentUserStyleRepository)>(r1, r2);

        virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: void setRenderer$wear_watchface_release(androidx.wear.watchface.Renderer)>(r3);

        return;
    }

    public final void init$wear_watchface_release(androidx.wear.watchface.WatchFaceHostApi, androidx.wear.watchface.Renderer, androidx.wear.watchface.ComplicationSlot$InvalidateListener)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.WatchFaceHostApi r1;
        androidx.wear.watchface.Renderer r2;
        androidx.wear.watchface.ComplicationSlot$InvalidateListener r3;
        java.io.Closeable r4;
        boolean z0, z2, $z3, z4, z5;
        java.util.Iterator r5;
        java.util.Map$Entry r6, r17;
        androidx.wear.utility.TraceEvent $r7, r15;
        java.util.Set $r8;
        java.lang.Object $r9, $r10;
        androidx.wear.watchface.CanvasComplication $r11;
        java.lang.Throwable $r12, $r13, r14, r20, r21, r22;
        java.util.Map r16;
        androidx.wear.watchface.ComplicationSlot r18;
        kotlin.Unit r19;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.WatchFaceHostApi;

        r2 := @parameter1: androidx.wear.watchface.Renderer;

        r3 := @parameter2: androidx.wear.watchface.ComplicationSlot$InvalidateListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "watchFaceHostApi");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "renderer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "complicationSlotInvalidateListener");

        $r7 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r7.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("ComplicationSlotsManager.init");

        r4 = (java.io.Closeable) $r7;

        z0 = 0;

        z4 = 0;

        r14 = (java.lang.Throwable) null;

     label1:
        r15 = (androidx.wear.utility.TraceEvent) r4;

        r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi> = r1;

        virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: void setRenderer$wear_watchface_release(androidx.wear.watchface.Renderer)>(r2);

        r16 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getComplicationSlots()>();

        z5 = 0;

        $r8 = interfaceinvoke r16.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r9;

        r6 = r17;

        z2 = 0;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (androidx.wear.watchface.ComplicationSlot) $r10;

        virtualinvoke r18.<androidx.wear.watchface.ComplicationSlot: void init$wear_watchface_release(androidx.wear.watchface.ComplicationSlot$InvalidateListener)>(r3);

        $r11 = virtualinvoke r18.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        interfaceinvoke $r11.<androidx.wear.watchface.CanvasComplication: void onRendererCreated(androidx.wear.watchface.Renderer)>(r2);

        goto label2;

     label3:
        virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: void onComplicationsUpdated$wear_watchface_release()>();

        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r4, r14);

        goto label8;

     label5:
        $r12 := @caughtexception;

        r20 = $r12;

        r21 = r20;

        throw r20;

     label6:
        $r13 := @caughtexception;

        r22 = $r13;

     label7:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r4, r21);

        throw r22;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final void applyComplicationSlotsStyleCategoryOption$wear_watchface_release(androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption r1;
        java.util.Iterator r2, r3;
        boolean z0, $z2, $z3, z4, z5, z6, z7, $z8, $z9;
        java.lang.Object r4, $r7, $r8, $r10, $r14, $r25;
        androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay r5, r26, r28, r32, r35;
        java.util.Set $r6;
        java.lang.Number $r9;
        java.util.Collection $r11;
        java.util.Map $r12, r18;
        java.lang.Integer $r13, $r36, r37;
        int $i0, i1, $i2;
        java.util.Map$Entry r19, r20, r21;
        androidx.wear.watchface.ComplicationSlot r22;
        java.lang.Iterable r23, r24;
        androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig r27;
        androidx.wear.complications.ComplicationSlotBounds $r29, r30, $r31;
        java.lang.Boolean $r33, r34;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "styleOption");

        r18 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        z4 = 0;

        $r6 = interfaceinvoke r18.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r7;

        r20 = r19;

        z5 = 0;

        $r8 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Number) $r8;

        i1 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        r21 = r19;

        z6 = 0;

        $r10 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (androidx.wear.watchface.ComplicationSlot) $r10;

        $r11 = virtualinvoke r1.<androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption: java.util.Collection getComplicationSlotOverlays()>();

        r23 = (java.lang.Iterable) $r11;

        z7 = 0;

        r24 = r23;

        z0 = 0;

        r3 = interfaceinvoke r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay) r4;

        $i0 = virtualinvoke r5.<androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay: int getComplicationSlotId()>();

        if $i0 != i1 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        if $z8 == 0 goto label02;

        $r25 = r4;

        goto label06;

     label05:
        $r25 = null;

     label06:
        r26 = (androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay) $r25;

        $r12 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map initialComplicationConfigs>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r14);

        r27 = (androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig) $r14;

        r28 = r26;

        if r28 != null goto label07;

        $r29 = null;

        goto label08;

     label07:
        $r29 = virtualinvoke r28.<androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay: androidx.wear.complications.ComplicationSlotBounds getComplicationSlotBounds()>();

     label08:
        r30 = $r29;

        if r30 != null goto label09;

        $r31 = virtualinvoke r27.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: androidx.wear.complications.ComplicationSlotBounds getComplicationSlotBounds()>();

        goto label10;

     label09:
        $r31 = r30;

     label10:
        virtualinvoke r22.<androidx.wear.watchface.ComplicationSlot: void setComplicationSlotBounds$wear_watchface_release(androidx.wear.complications.ComplicationSlotBounds)>($r31);

        r32 = r26;

        if r32 != null goto label11;

        $r33 = null;

        goto label12;

     label11:
        $r33 = virtualinvoke r32.<androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay: java.lang.Boolean isEnabled()>();

     label12:
        r34 = $r33;

        if r34 != null goto label13;

        $z9 = virtualinvoke r27.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: boolean getEnabled()>();

        goto label14;

     label13:
        $z9 = virtualinvoke r34.<java.lang.Boolean: boolean booleanValue()>();

     label14:
        virtualinvoke r22.<androidx.wear.watchface.ComplicationSlot: void setEnabled$wear_watchface_release(boolean)>($z9);

        r35 = r26;

        if r35 != null goto label15;

        $r36 = null;

        goto label16;

     label15:
        $r36 = virtualinvoke r35.<androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotOverlay: java.lang.Integer getAccessibilityTraversalIndex()>();

     label16:
        r37 = $r36;

        if r37 != null goto label17;

        $i2 = virtualinvoke r27.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: int getAccessibilityTraversalIndex()>();

        goto label18;

     label17:
        $i2 = virtualinvoke r37.<java.lang.Integer: int intValue()>();

     label18:
        virtualinvoke r22.<androidx.wear.watchface.ComplicationSlot: void setAccessibilityTraversalIndex$wear_watchface_release(int)>($i2);

        goto label01;

     label19:
        virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: void onComplicationsUpdated$wear_watchface_release()>();

        return;
    }

    public final androidx.wear.watchface.ComplicationSlot get(int)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        androidx.wear.watchface.ComplicationSlot $r4;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (androidx.wear.watchface.ComplicationSlot) $r3;

        return $r4;
    }

    public final void onComplicationsUpdated$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.io.Closeable r1;
        boolean z0, z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, z15, z16, z17, z18, $z19, $z20, $z21;
        java.util.List r2, $r16;
        androidx.wear.utility.TraceEvent $r3, r22;
        androidx.wear.watchface.WatchFaceHostApi $r4, r29, $r30, r31, $r32, r33, $r34;
        java.util.ArrayList $r5, $r15;
        java.util.Set $r6;
        java.util.Collection $r7;
        int[] $r8;
        java.lang.Object $r9, $r10, $r12;
        java.lang.Number $r11;
        java.lang.Integer $r13;
        int $i0, $i1, $i2, i3;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r14, $r17;
        androidx.wear.complications.data.ComplicationType $r18;
        java.lang.Throwable $r19, $r20, r21, r36, r37, r38;
        java.util.Map r23;
        java.util.Iterator r24;
        java.util.Map$Entry r25, r26, r27;
        androidx.wear.watchface.ComplicationSlot r28;
        kotlin.Unit r35;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        $r3 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r3.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("ComplicationSlotsManager.updateComplications");

        r1 = (java.io.Closeable) $r3;

        z0 = 0;

        z13 = 0;

        r21 = (java.lang.Throwable) null;

     label01:
        r22 = (androidx.wear.utility.TraceEvent) r1;

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if $r4 != null goto label03;

     label02:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r21);

        return;

     label03:
        z14 = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r5;

        z15 = 0;

        z16 = 0;

        r23 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getComplicationSlots()>();

        z17 = 0;

        $r6 = interfaceinvoke r23.<java.util.Map: java.util.Set entrySet()>();

        r24 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r9 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.util.Map$Entry) $r9;

        r26 = r25;

        z18 = 0;

        $r10 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.Number) $r10;

        i3 = virtualinvoke $r11.<java.lang.Number: int intValue()>();

        r27 = r25;

        z2 = 0;

        $r12 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        r28 = (androidx.wear.watchface.ComplicationSlot) $r12;

        if z15 != 0 goto label05;

        $z12 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getEnabledDirty$wear_watchface_release()>();

        if $z12 == 0 goto label06;

     label05:
        $z19 = 1;

        goto label07;

     label06:
        $z19 = 0;

     label07:
        z15 = $z19;

        if z16 != 0 goto label08;

        $z11 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getEnabledDirty$wear_watchface_release()>();

        if $z11 == 0 goto label09;

     label08:
        $z20 = 1;

        goto label10;

     label09:
        $z20 = 0;

     label10:
        z16 = $z20;

        $z4 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean isEnabled()>();

        if $z4 == 0 goto label18;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13);

        if z16 != 0 goto label11;

        $z8 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getDataDirty$wear_watchface_release()>();

        if $z8 != 0 goto label11;

        $z9 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getComplicationBoundsDirty$wear_watchface_release()>();

        if $z9 != 0 goto label11;

        $z10 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getAccessibilityTraversalIndexDirty$wear_watchface_release()>();

        if $z10 == 0 goto label12;

     label11:
        $z21 = 1;

        goto label13;

     label12:
        $z21 = 0;

     label13:
        z16 = $z21;

        $z6 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getDefaultDataSourcePolicyDirty$wear_watchface_release()>();

        if $z6 != 0 goto label14;

        $z7 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: boolean getDefaultDataSourceTypeDirty$wear_watchface_release()>();

        if $z7 == 0 goto label17;

     label14:
        r29 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if r29 != null goto label15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchFaceHostApi");

        $r30 = null;

        goto label16;

     label15:
        $r30 = r29;

     label16:
        $i0 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        $r14 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $r15 = virtualinvoke $r14.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: java.util.ArrayList dataSourcesAsList()>();

        $r16 = (java.util.List) $r15;

        $r17 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $i1 = virtualinvoke $r17.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: int getSystemDataSourceFallback()>();

        $r18 = virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType getDefaultDataSourceType()>();

        $i2 = virtualinvoke $r18.<androidx.wear.complications.data.ComplicationType: int toWireComplicationType()>();

        interfaceinvoke $r30.<androidx.wear.watchface.WatchFaceHostApi: void setDefaultComplicationDataSourceWithFallbacks(int,java.util.List,int,int)>($i0, $r16, $i1, $i2);

     label17:
        virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: void setDataDirty$wear_watchface_release(boolean)>(0);

        virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: void setComplicationBoundsDirty$wear_watchface_release(boolean)>(0);

        virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: void setSupportedTypesDirty$wear_watchface_release(boolean)>(0);

        virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: void setDefaultDataSourcePolicyDirty$wear_watchface_release(boolean)>(0);

        virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: void setDefaultDataSourceTypeDirty$wear_watchface_release(boolean)>(0);

     label18:
        virtualinvoke r28.<androidx.wear.watchface.ComplicationSlot: void setEnabledDirty$wear_watchface_release(boolean)>(0);

        goto label04;

     label19:
        if z15 == 0 goto label22;

        r31 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if r31 != null goto label20;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchFaceHostApi");

        $r32 = null;

        goto label21;

     label20:
        $r32 = r31;

     label21:
        $r7 = (java.util.Collection) r2;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: int[] toIntArray(java.util.Collection)>($r7);

        interfaceinvoke $r32.<androidx.wear.watchface.WatchFaceHostApi: void setActiveComplicationSlots(int[])>($r8);

     label22:
        if z16 == 0 goto label25;

        r33 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if r33 != null goto label23;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchFaceHostApi");

        $r34 = null;

        goto label24;

     label23:
        $r34 = r33;

     label24:
        interfaceinvoke $r34.<androidx.wear.watchface.WatchFaceHostApi: void updateContentDescriptionLabels()>();

     label25:
        r35 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label26:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r21);

        goto label30;

     label27:
        $r20 := @caughtexception;

        r36 = $r20;

        r37 = r36;

        throw r36;

     label28:
        $r19 := @caughtexception;

        r38 = $r19;

     label29:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r37);

        throw r38;

     label30:
        return;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    public final void onComplicationDataUpdate$wear_watchface_release(int, androidx.wear.complications.data.ComplicationData)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        int i0;
        androidx.wear.complications.data.ComplicationData r1, $r11;
        androidx.wear.watchface.ComplicationSlot r2, r3;
        java.util.Map $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2;
        androidx.wear.watchface.CanvasComplication $r7, $r10;
        androidx.wear.watchface.ObservableWatchData $r8;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r9;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.complications.data.ComplicationData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (androidx.wear.watchface.ComplicationSlot) $r6;

        if r3 != null goto label1;

        return;

     label1:
        r2 = r3;

        $z0 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: boolean getDataDirty$wear_watchface_release()>();

        if $z0 != 0 goto label2;

        $r10 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $r11 = interfaceinvoke $r10.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, r1);

        if $z1 != 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: void setDataDirty$wear_watchface_release(boolean)>($z2);

        $r7 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        interfaceinvoke $r7.<androidx.wear.watchface.CanvasComplication: void loadData(androidx.wear.complications.data.ComplicationData,boolean)>(r1, 1);

        $r8 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData getComplicationData()>();

        $r9 = (androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData) $r8;

        virtualinvoke $r9.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final void setComplicationDataUpdateSync$wear_watchface_release(int, androidx.wear.complications.data.ComplicationData)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        int i0;
        androidx.wear.complications.data.ComplicationData r1;
        androidx.wear.watchface.ComplicationSlot r2, r3;
        java.util.Map $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        androidx.wear.watchface.CanvasComplication $r7;
        androidx.wear.watchface.ObservableWatchData $r8;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r9;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.complications.data.ComplicationData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (androidx.wear.watchface.ComplicationSlot) $r6;

        if r3 != null goto label1;

        return;

     label1:
        r2 = r3;

        $r7 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        interfaceinvoke $r7.<androidx.wear.watchface.CanvasComplication: void loadData(androidx.wear.complications.data.ComplicationData,boolean)>(r1, 0);

        $r8 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData getComplicationData()>();

        $r9 = (androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData) $r8;

        virtualinvoke $r9.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final void clearComplicationData$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2, r13;
        boolean z0, $z1, z2;
        java.util.Set $r3;
        java.lang.Object $r4, $r5;
        androidx.wear.watchface.CanvasComplication $r6;
        androidx.wear.complications.data.NoDataComplicationData $r7, $r10;
        androidx.wear.complications.data.ComplicationData $r8;
        androidx.wear.watchface.ObservableWatchData $r9;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r11;
        java.util.Map r12;
        androidx.wear.watchface.ComplicationSlot r14;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r12 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        z2 = 0;

        $r3 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r4;

        r2 = r13;

        z0 = 0;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r14 = (androidx.wear.watchface.ComplicationSlot) $r5;

        $r6 = virtualinvoke r14.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $r7 = new androidx.wear.complications.data.NoDataComplicationData;

        specialinvoke $r7.<androidx.wear.complications.data.NoDataComplicationData: void <init>()>();

        $r8 = (androidx.wear.complications.data.ComplicationData) $r7;

        interfaceinvoke $r6.<androidx.wear.watchface.CanvasComplication: void loadData(androidx.wear.complications.data.ComplicationData,boolean)>($r8, 0);

        $r9 = virtualinvoke r14.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData getComplicationData()>();

        $r11 = (androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData) $r9;

        $r10 = new androidx.wear.complications.data.NoDataComplicationData;

        specialinvoke $r10.<androidx.wear.complications.data.NoDataComplicationData: void <init>()>();

        virtualinvoke $r11.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void setValue(java.lang.Object)>($r10);

        goto label1;

     label2:
        return;
    }

    public final androidx.wear.watchface.ComplicationSlot getComplicationSlotAt(int, int)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        int i0, i1;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.wear.watchface.ComplicationSlot r4, $r7, r11;
        java.util.Map $r5;
        java.util.Collection $r6;
        boolean $z2, $z3, $z4, $z5;
        androidx.wear.watchface.ComplicationTapFilter $r8;
        androidx.wear.watchface.Renderer $r9;
        android.graphics.Rect $r10;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        $r1 = (java.lang.Iterable) $r6;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.wear.watchface.ComplicationSlot) r3;

        $z3 = virtualinvoke r4.<androidx.wear.watchface.ComplicationSlot: boolean isEnabled()>();

        if $z3 == 0 goto label2;

        $r8 = virtualinvoke r4.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationTapFilter getTapFilter()>();

        $r9 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r10 = virtualinvoke $r9.<androidx.wear.watchface.Renderer: android.graphics.Rect getScreenBounds()>();

        $z4 = interfaceinvoke $r8.<androidx.wear.watchface.ComplicationTapFilter: boolean hitTest(androidx.wear.watchface.ComplicationSlot,android.graphics.Rect,int,int)>(r4, $r10, i0, i1);

        if $z4 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label1;

        r11 = (androidx.wear.watchface.ComplicationSlot) r3;

        return r11;

     label4:
        $r7 = (androidx.wear.watchface.ComplicationSlot) null;

        return $r7;
    }

    public final androidx.wear.watchface.ComplicationSlot getBackgroundComplicationSlot()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.util.Map$Entry r1, r5;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r8, $r9, $r11;
        java.util.Map $r6;
        java.util.Set $r7;
        boolean $z2, $z3;
        androidx.wear.watchface.ComplicationSlot $r10, $r12;
        int $i0;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        $r6 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r7;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) r4;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (androidx.wear.watchface.ComplicationSlot) $r9;

        $i0 = virtualinvoke $r10.<androidx.wear.watchface.ComplicationSlot: int getBoundsType()>();

        if $i0 != 1 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label1;

        $r11 = r4;

        goto label5;

     label4:
        $r11 = null;

     label5:
        r1 = (java.util.Map$Entry) $r11;

        if r1 != null goto label6;

        $r12 = null;

        goto label7;

     label6:
        $r8 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (androidx.wear.watchface.ComplicationSlot) $r8;

     label7:
        return $r12;
    }

    public final void onComplicationSlotSingleTapped$wear_watchface_release(int)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        int i0;
        androidx.wear.complications.data.ComplicationData r1, $r17, r18;
        androidx.wear.watchface.CanvasComplication r2;
        java.util.Map $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r8;
        androidx.wear.complications.data.ComplicationType $r6, $r7;
        android.content.Context $r9, $r10, $r11;
        android.content.ComponentName $r12;
        android.content.Intent $r13, $r14;
        java.lang.Throwable $r15, r26;
        androidx.wear.watchface.ComplicationSlot r16;
        androidx.wear.watchface.WatchFaceHostApi r19, $r20, r21, $r22, r23, $r24;
        android.app.PendingIntent r25;
        java.util.HashSet $r27;
        java.util.Iterator r28;
        boolean $z0;
        androidx.wear.watchface.ComplicationSlotsManager$TapCallback r29;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r16 = (androidx.wear.watchface.ComplicationSlot) $r5;

        if r16 != null goto label01;

        $r17 = null;

        goto label03;

     label01:
        r2 = virtualinvoke r16.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        if r2 != null goto label02;

        $r17 = null;

        goto label03;

     label02:
        $r17 = interfaceinvoke r2.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

     label03:
        r18 = $r17;

        if r18 != null goto label04;

        return;

     label04:
        r1 = r18;

        $r6 = virtualinvoke r1.<androidx.wear.complications.data.ComplicationData: androidx.wear.complications.data.ComplicationType getType()>();

        $r7 = <androidx.wear.complications.data.ComplicationType: androidx.wear.complications.data.ComplicationType NO_PERMISSION>;

        if $r6 != $r7 goto label11;

        r19 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if r19 != null goto label05;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchFaceHostApi");

        $r20 = null;

        goto label06;

     label05:
        $r20 = r19;

     label06:
        $r9 = interfaceinvoke $r20.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        r21 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if r21 != null goto label07;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchFaceHostApi");

        $r22 = null;

        goto label08;

     label07:
        $r22 = r21;

     label08:
        $r10 = interfaceinvoke $r22.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        r23 = r0.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        if r23 != null goto label09;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("watchFaceHostApi");

        $r24 = null;

        goto label10;

     label09:
        $r24 = r23;

     label10:
        $r11 = interfaceinvoke $r24.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        $r12 = staticinvoke <androidx.wear.watchface.ComplicationSlotsManagerKt: android.content.ComponentName access$getComponentName(android.content.Context)>($r11);

        $r13 = staticinvoke <androidx.wear.watchface.ComplicationHelperActivity: android.content.Intent createPermissionRequestHelperIntent(android.content.Context,android.content.ComponentName)>($r10, $r12);

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r9.<android.content.Context: void startActivity(android.content.Intent)>($r14);

        return;

     label11:
        r25 = virtualinvoke r1.<androidx.wear.complications.data.ComplicationData: android.app.PendingIntent getTapAction()>();

        if r25 != null goto label12;

        goto label15;

     label12:
        virtualinvoke r25.<android.app.PendingIntent: void send()>();

     label13:
        goto label15;

     label14:
        $r15 := @caughtexception;

        r26 = $r15;

     label15:
        $r27 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.HashSet complicationListeners>;

        r28 = virtualinvoke $r27.<java.util.HashSet: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r8 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (androidx.wear.watchface.ComplicationSlotsManager$TapCallback) $r8;

        interfaceinvoke r29.<androidx.wear.watchface.ComplicationSlotsManager$TapCallback: void onComplicationSlotTapped(int)>(i0);

        goto label16;

     label17:
        return;

        catch android.app.PendingIntent$CanceledException from label11 to label13 with label14;
    }

    public final void onTapDown$wear_watchface_release(int, androidx.wear.watchface.TapEvent)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        int i0;
        androidx.wear.watchface.TapEvent r1;
        java.util.Map r2, $r4;
        java.lang.Integer r3;
        boolean z0;
        java.util.HashMap $r5;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.watchface.TapEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tapEvent");

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map lastComplicationTapDownEvents>;

        $r5 = (java.util.HashMap) $r4;

        r2 = (java.util.Map) $r5;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        z0 = 0;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

        return;
    }

    public final void addTapListener(androidx.wear.watchface.ComplicationSlotsManager$TapCallback)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.ComplicationSlotsManager$TapCallback r1;
        java.util.HashSet $r2;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.ComplicationSlotsManager$TapCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tapCallback");

        $r2 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.HashSet complicationListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeTapListener(androidx.wear.watchface.ComplicationSlotsManager$TapCallback)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.ComplicationSlotsManager$TapCallback r1;
        java.util.HashSet $r2;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.ComplicationSlotsManager$TapCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tapCallback");

        $r2 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.HashSet complicationListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public final void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        androidx.wear.watchface.IndentingPrintWriter r1, r6;
        java.util.Map r2, $r26, $r30;
        boolean z0, $z2, $z3;
        java.util.Iterator r3, $r31;
        java.util.Map$Entry r4, r5, r32;
        java.lang.String r7, r8, $r13, $r14;
        java.util.ArrayList $r9;
        int $i0, $i1;
        java.util.Set $r10, $r15;
        java.lang.CharSequence $r11;
        java.lang.Iterable $r12;
        java.lang.Object $r16, $r17, $r18, $r20, $r24;
        java.lang.StringBuilder $r19, $r22, $r23, $r25;
        java.lang.Number $r21;
        java.util.Collection r27, r28;
        java.util.List r29;
        androidx.wear.watchface.ComplicationSlot $r33;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        r1 := @parameter0: androidx.wear.watchface.IndentingPrintWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>("ComplicationSlotsManager:");

        $r26 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map lastComplicationTapDownEvents>;

        r7 = "lastComplicationTapDownEvents=";

        r6 = r1;

        $r9 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r26.<java.util.Map: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r27 = (java.util.Collection) $r9;

        r2 = $r26;

        z0 = 0;

        $r10 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r18;

        r5 = r4;

        r28 = r27;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.Number) $r20;

        $i1 = virtualinvoke $r21.<java.lang.Number: int intValue()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r24 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        r8 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r28.<java.util.Collection: boolean add(java.lang.Object)>(r8);

        goto label1;

     label2:
        r29 = (java.util.List) r27;

        $r12 = (java.lang.Iterable) r29;

        $r11 = (java.lang.CharSequence) ", ";

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r12, $r11, null, null, 0, null, null, 62, null);

        $r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r7, $r13);

        virtualinvoke r6.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void increaseIndent()>();

        $r30 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r15 = interfaceinvoke $r30.<java.util.Map: java.util.Set entrySet()>();

        $r31 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r16 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (androidx.wear.watchface.ComplicationSlot) $r17;

        virtualinvoke $r33.<androidx.wear.watchface.ComplicationSlot: void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)>(r1);

        goto label3;

     label4:
        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void decreaseIndent()>();

        return;
    }

    public final androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat[] getDefaultProviderPolicies$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlotsManager r0;
        java.util.Collection r1, r6, $r31;
        java.util.Map r2, $r30;
        boolean z1, $z3;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat r7, $r16;
        java.util.ArrayList $r8, $r22;
        int $i0, $i1, $i2, $i3;
        java.util.Set $r9;
        java.util.List $r10, $r23;
        androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat[] $r11, $r13;
        java.lang.Object[] $r12;
        java.lang.NullPointerException $r14;
        java.lang.Object $r15, $r17, $r19, $r24, $r27;
        java.lang.Number $r18;
        androidx.wear.watchface.ComplicationSlot $r20, $r25, $r28;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r21, $r26;
        androidx.wear.complications.data.ComplicationType $r29;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager;

        $r30 = r0.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map complicationSlots>;

        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r30.<java.util.Map: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = (java.util.Collection) $r8;

        r2 = $r30;

        z1 = 0;

        $r9 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r15;

        r5 = r4;

        r6 = r1;

        $r16 = new androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat;

        $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.Number) $r17;

        $i1 = virtualinvoke $r18.<java.lang.Number: int intValue()>();

        $r19 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (androidx.wear.watchface.ComplicationSlot) $r19;

        $r21 = virtualinvoke $r20.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $r22 = virtualinvoke $r21.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: java.util.ArrayList dataSourcesAsList()>();

        $r23 = (java.util.List) $r22;

        $r24 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (androidx.wear.watchface.ComplicationSlot) $r24;

        $r26 = virtualinvoke $r25.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $i2 = virtualinvoke $r26.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: int getSystemDataSourceFallback()>();

        $r27 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (androidx.wear.watchface.ComplicationSlot) $r27;

        $r29 = virtualinvoke $r28.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType getDefaultDataSourceType()>();

        $i3 = virtualinvoke $r29.<androidx.wear.complications.data.ComplicationType: int toWireComplicationType()>();

        specialinvoke $r16.<androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat: void <init>(int,java.util.List,int,int)>($i1, $r23, $i2, $i3);

        r7 = $r16;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label1;

     label2:
        $r10 = (java.util.List) r1;

        $r31 = (java.util.Collection) $r10;

        $r11 = newarray (androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat)[0];

        $r12 = interfaceinvoke $r31.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        if $r12 != null goto label3;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r14;

     label3:
        $r13 = (androidx.wear.watchface.control.data.IdTypeAndDefaultProviderPolicyWireFormat[]) $r12;

        return $r13;
    }

androidx.wear.watchface.ComplicationSlotsManager$1
<androidx.wear.watchface.ComplicationSlotsManager$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>
<androidx.wear.watchface.ComplicationSlotsManager$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>
<androidx.wear.watchface.ComplicationSlotsManager$1: androidx.wear.watchface.ComplicationSlotsManager this$0>
    void <init>(androidx.wear.watchface.style.UserStyleSetting, kotlin.jvm.internal.Ref$ObjectRef, androidx.wear.watchface.ComplicationSlotsManager)
    {
        androidx.wear.watchface.ComplicationSlotsManager$1 r0;
        androidx.wear.watchface.style.UserStyleSetting $r1;
        kotlin.jvm.internal.Ref$ObjectRef $r2;
        androidx.wear.watchface.ComplicationSlotsManager $r3;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$1;

        $r1 := @parameter0: androidx.wear.watchface.style.UserStyleSetting;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$ObjectRef;

        $r3 := @parameter2: androidx.wear.watchface.ComplicationSlotsManager;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory> = $r1;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption> = $r2;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$1: androidx.wear.watchface.ComplicationSlotsManager this$0> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onUserStyleChanged(androidx.wear.watchface.style.UserStyle)
    {
        androidx.wear.watchface.ComplicationSlotsManager$1 r0;
        androidx.wear.watchface.style.UserStyle r1;
        androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption r2;
        androidx.wear.watchface.style.UserStyleSetting $r3;
        java.lang.Object $r4, $r7;
        androidx.wear.watchface.style.UserStyleSetting$Option $r5;
        kotlin.jvm.internal.Ref$ObjectRef $r6, $r8;
        boolean $z0;
        androidx.wear.watchface.ComplicationSlotsManager $r9;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$1;

        r1 := @parameter0: androidx.wear.watchface.style.UserStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "userStyle");

        $r3 = r0.<androidx.wear.watchface.ComplicationSlotsManager$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>;

        $r4 = virtualinvoke r1.<androidx.wear.watchface.style.UserStyle: java.lang.Object get(java.lang.Object)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r5 = (androidx.wear.watchface.style.UserStyleSetting$Option) $r4;

        r2 = (androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption) $r5;

        $r6 = r0.<androidx.wear.watchface.ComplicationSlotsManager$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>;

        $r7 = $r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r2);

        if $z0 != 0 goto label1;

        $r8 = r0.<androidx.wear.watchface.ComplicationSlotsManager$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>;

        $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r2;

        $r9 = r0.<androidx.wear.watchface.ComplicationSlotsManager$1: androidx.wear.watchface.ComplicationSlotsManager this$0>;

        virtualinvoke $r9.<androidx.wear.watchface.ComplicationSlotsManager: void applyComplicationSlotsStyleCategoryOption$wear_watchface_release(androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption)>(r2);

     label1:
        return;
    }

androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig
<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>
<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: boolean enabled>
<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: int accessibilityTraversalIndex>
    public void <init>(androidx.wear.complications.ComplicationSlotBounds, boolean, int)
    {
        androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig r0;
        androidx.wear.complications.ComplicationSlotBounds r1;
        boolean z0;
        int i0;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig;

        r1 := @parameter0: androidx.wear.complications.ComplicationSlotBounds;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "complicationSlotBounds");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds> = r1;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: boolean enabled> = z0;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: int accessibilityTraversalIndex> = i0;

        return;
    }

    public final androidx.wear.complications.ComplicationSlotBounds getComplicationSlotBounds()
    {
        androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig r0;
        androidx.wear.complications.ComplicationSlotBounds $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>;

        return $r1;
    }

    public final boolean getEnabled()
    {
        androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: boolean enabled>;

        return $z0;
    }

    public final int getAccessibilityTraversalIndex()
    {
        androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig;

        $i0 = r0.<androidx.wear.watchface.ComplicationSlotsManager$InitialComplicationConfig: int accessibilityTraversalIndex>;

        return $i0;
    }

androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: androidx.wear.watchface.ComplicationSlotsManager this$0>
    void <init>(androidx.wear.watchface.style.UserStyleSetting, kotlin.jvm.internal.Ref$ObjectRef, androidx.wear.watchface.ComplicationSlotsManager)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1 r0;
        androidx.wear.watchface.style.UserStyleSetting $r1;
        kotlin.jvm.internal.Ref$ObjectRef $r2;
        androidx.wear.watchface.ComplicationSlotsManager $r3;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1;

        $r1 := @parameter0: androidx.wear.watchface.style.UserStyleSetting;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$ObjectRef;

        $r3 := @parameter2: androidx.wear.watchface.ComplicationSlotsManager;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory> = $r1;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption> = $r2;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: androidx.wear.watchface.ComplicationSlotsManager this$0> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(androidx.wear.watchface.style.UserStyle, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1 r0;
        androidx.wear.watchface.style.UserStyle r1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption r3;
        androidx.wear.watchface.style.UserStyleSetting $r4;
        java.lang.Object $r5, $r8;
        androidx.wear.watchface.style.UserStyleSetting$Option $r6;
        kotlin.jvm.internal.Ref$ObjectRef $r7, $r10;
        boolean $z0;
        kotlin.Unit $r9;
        androidx.wear.watchface.ComplicationSlotsManager $r11;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1;

        r1 := @parameter0: androidx.wear.watchface.style.UserStyle;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>;

        $r5 = virtualinvoke r1.<androidx.wear.watchface.style.UserStyle: java.lang.Object get(java.lang.Object)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        $r6 = (androidx.wear.watchface.style.UserStyleSetting$Option) $r5;

        r3 = (androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption) $r6;

        $r7 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>;

        $r8 = $r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r3);

        if $z0 != 0 goto label1;

        $r10 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>;

        $r10.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r3;

        $r11 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: androidx.wear.watchface.ComplicationSlotsManager this$0>;

        virtualinvoke $r11.<androidx.wear.watchface.ComplicationSlotsManager: void applyComplicationSlotsStyleCategoryOption$watchface_release(androidx.wear.watchface.style.UserStyleSetting$ComplicationSlotsUserStyleSetting$ComplicationSlotsOption)>(r3);

     label1:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.watchface.style.UserStyle $r3;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (androidx.wear.watchface.style.UserStyle) r1;

        $r4 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: java.lang.Object emit(androidx.wear.watchface.style.UserStyle,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: int label>
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.ComplicationSlotsManager this$0>
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>
<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>
    void <init>(androidx.wear.watchface.ComplicationSlotsManager, androidx.wear.watchface.style.UserStyleSetting, kotlin.jvm.internal.Ref$ObjectRef, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1 r0;
        androidx.wear.watchface.ComplicationSlotsManager $r1;
        androidx.wear.watchface.style.UserStyleSetting $r2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1;

        $r1 := @parameter0: androidx.wear.watchface.ComplicationSlotsManager;

        $r2 := @parameter1: androidx.wear.watchface.style.UserStyleSetting;

        $r3 := @parameter2: kotlin.jvm.internal.Ref$ObjectRef;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.ComplicationSlotsManager this$0> = $r1;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory> = $r2;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1 r0;
        java.lang.Object $r1, r2, $r13;
        int $i0;
        kotlin.KotlinNothingValueException $r3;
        androidx.wear.watchface.ComplicationSlotsManager $r4, $r8;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r5;
        kotlinx.coroutines.flow.StateFlow $r6;
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1 $r7;
        kotlin.jvm.internal.Ref$ObjectRef $r9;
        androidx.wear.watchface.style.UserStyleSetting $r10;
        kotlinx.coroutines.flow.FlowCollector $r11;
        kotlin.coroutines.Continuation $r12;
        java.lang.IllegalStateException $r14;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.ComplicationSlotsManager this$0>;

        $r5 = staticinvoke <androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.style.CurrentUserStyleRepository access$getCurrentUserStyleRepository$p(androidx.wear.watchface.ComplicationSlotsManager)>($r4);

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.style.CurrentUserStyleRepository: kotlinx.coroutines.flow.StateFlow getUserStyle()>();

        $r7 = new androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1;

        $r10 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>;

        $r9 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>;

        $r8 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.ComplicationSlotsManager this$0>;

        specialinvoke $r7.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1$1: void <init>(androidx.wear.watchface.style.UserStyleSetting,kotlin.jvm.internal.Ref$ObjectRef,androidx.wear.watchface.ComplicationSlotsManager)>($r10, $r9, $r8);

        $r11 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r12 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: int label> = 1;

        $r13 = interfaceinvoke $r6.<kotlinx.coroutines.flow.StateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r11, $r12);

        if $r13 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;

     label4:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r14;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        kotlin.jvm.internal.Ref$ObjectRef $r4;
        androidx.wear.watchface.style.UserStyleSetting $r5;
        androidx.wear.watchface.ComplicationSlotsManager $r6;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1;

        $r6 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.ComplicationSlotsManager this$0>;

        $r5 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: androidx.wear.watchface.style.UserStyleSetting $complicationsStyleCategory>;

        $r4 = r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: kotlin.jvm.internal.Ref$ObjectRef $previousOption>;

        specialinvoke $r3.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: void <init>(androidx.wear.watchface.ComplicationSlotsManager,androidx.wear.watchface.style.UserStyleSetting,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $r2);

        $r7 = (kotlin.coroutines.Continuation) $r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlotsManager$listenForStyleChanges$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.ComplicationSlotsManager$TapCallback$DefaultImpls
    public static void onComplicationSlotTapped(androidx.wear.watchface.ComplicationSlotsManager$TapCallback, int)
    {
        androidx.wear.watchface.ComplicationSlotsManager$TapCallback r0;
        int i0;

        r0 := @parameter0: androidx.wear.watchface.ComplicationSlotsManager$TapCallback;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        return;
    }

androidx.wear.watchface.ComplicationSlotsManager$TapCallback
<androidx.wear.watchface.ComplicationSlotsManager$TapCallback: void onComplicationSlotTapped(int)>
