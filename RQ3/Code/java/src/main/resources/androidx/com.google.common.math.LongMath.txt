com.google.common.math.LongMath
<com.google.common.math.LongMath: int[] biggestBinomials>
<com.google.common.math.LongMath: int[] biggestSimpleBinomials>
<com.google.common.math.LongMath: long[] factorials>
<com.google.common.math.LongMath: long[] halfPowersOf10>
<com.google.common.math.LongMath: byte[] maxLog10ForLeadingZeros>
<com.google.common.math.LongMath: long[][] millerRabinBaseSets>
<com.google.common.math.LongMath: long[] powersOf10>
    static void <clinit>()
    {
        byte[] $r0;
        long[] $r1;
        int[] $r2;
        long[][] $r3;

        $r0 = newarray (byte)[64];

        $r0[0] = 19;

        $r0[1] = 18;

        $r0[2] = 18;

        $r0[3] = 18;

        $r0[4] = 18;

        $r0[5] = 17;

        $r0[6] = 17;

        $r0[7] = 17;

        $r0[8] = 16;

        $r0[9] = 16;

        $r0[10] = 16;

        $r0[11] = 15;

        $r0[12] = 15;

        $r0[13] = 15;

        $r0[14] = 15;

        $r0[15] = 14;

        $r0[16] = 14;

        $r0[17] = 14;

        $r0[18] = 13;

        $r0[19] = 13;

        $r0[20] = 13;

        $r0[21] = 12;

        $r0[22] = 12;

        $r0[23] = 12;

        $r0[24] = 12;

        $r0[25] = 11;

        $r0[26] = 11;

        $r0[27] = 11;

        $r0[28] = 10;

        $r0[29] = 10;

        $r0[30] = 10;

        $r0[31] = 9;

        $r0[32] = 9;

        $r0[33] = 9;

        $r0[34] = 9;

        $r0[35] = 8;

        $r0[36] = 8;

        $r0[37] = 8;

        $r0[38] = 7;

        $r0[39] = 7;

        $r0[40] = 7;

        $r0[41] = 6;

        $r0[42] = 6;

        $r0[43] = 6;

        $r0[44] = 6;

        $r0[45] = 5;

        $r0[46] = 5;

        $r0[47] = 5;

        $r0[48] = 4;

        $r0[49] = 4;

        $r0[50] = 4;

        $r0[51] = 3;

        $r0[52] = 3;

        $r0[53] = 3;

        $r0[54] = 3;

        $r0[55] = 2;

        $r0[56] = 2;

        $r0[57] = 2;

        $r0[58] = 1;

        $r0[59] = 1;

        $r0[60] = 1;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 0;

        <com.google.common.math.LongMath: byte[] maxLog10ForLeadingZeros> = $r0;

        $r1 = newarray (long)[19];

        $r1[0] = 1L;

        $r1[1] = 10L;

        $r1[2] = 100L;

        $r1[3] = 1000L;

        $r1[4] = 10000L;

        $r1[5] = 100000L;

        $r1[6] = 1000000L;

        $r1[7] = 10000000L;

        $r1[8] = 100000000L;

        $r1[9] = 1000000000L;

        $r1[10] = 10000000000L;

        $r1[11] = 100000000000L;

        $r1[12] = 1000000000000L;

        $r1[13] = 10000000000000L;

        $r1[14] = 100000000000000L;

        $r1[15] = 1000000000000000L;

        $r1[16] = 10000000000000000L;

        $r1[17] = 100000000000000000L;

        $r1[18] = 1000000000000000000L;

        <com.google.common.math.LongMath: long[] powersOf10> = $r1;

        $r1 = newarray (long)[19];

        $r1[0] = 3L;

        $r1[1] = 31L;

        $r1[2] = 316L;

        $r1[3] = 3162L;

        $r1[4] = 31622L;

        $r1[5] = 316227L;

        $r1[6] = 3162277L;

        $r1[7] = 31622776L;

        $r1[8] = 316227766L;

        $r1[9] = 3162277660L;

        $r1[10] = 31622776601L;

        $r1[11] = 316227766016L;

        $r1[12] = 3162277660168L;

        $r1[13] = 31622776601683L;

        $r1[14] = 316227766016837L;

        $r1[15] = 3162277660168379L;

        $r1[16] = 31622776601683793L;

        $r1[17] = 316227766016837933L;

        $r1[18] = 3162277660168379331L;

        <com.google.common.math.LongMath: long[] halfPowersOf10> = $r1;

        $r1 = newarray (long)[21];

        $r1[0] = 1L;

        $r1[1] = 1L;

        $r1[2] = 2L;

        $r1[3] = 6L;

        $r1[4] = 24L;

        $r1[5] = 120L;

        $r1[6] = 720L;

        $r1[7] = 5040L;

        $r1[8] = 40320L;

        $r1[9] = 362880L;

        $r1[10] = 3628800L;

        $r1[11] = 39916800L;

        $r1[12] = 479001600L;

        $r1[13] = 6227020800L;

        $r1[14] = 87178291200L;

        $r1[15] = 1307674368000L;

        $r1[16] = 20922789888000L;

        $r1[17] = 355687428096000L;

        $r1[18] = 6402373705728000L;

        $r1[19] = 121645100408832000L;

        $r1[20] = 2432902008176640000L;

        <com.google.common.math.LongMath: long[] factorials> = $r1;

        $r2 = newarray (int)[34];

        $r2[0] = 2147483647;

        $r2[1] = 2147483647;

        $r2[2] = 2147483647;

        $r2[3] = 3810779;

        $r2[4] = 121977;

        $r2[5] = 16175;

        $r2[6] = 4337;

        $r2[7] = 1733;

        $r2[8] = 887;

        $r2[9] = 534;

        $r2[10] = 361;

        $r2[11] = 265;

        $r2[12] = 206;

        $r2[13] = 169;

        $r2[14] = 143;

        $r2[15] = 125;

        $r2[16] = 111;

        $r2[17] = 101;

        $r2[18] = 94;

        $r2[19] = 88;

        $r2[20] = 83;

        $r2[21] = 79;

        $r2[22] = 76;

        $r2[23] = 74;

        $r2[24] = 72;

        $r2[25] = 70;

        $r2[26] = 69;

        $r2[27] = 68;

        $r2[28] = 67;

        $r2[29] = 67;

        $r2[30] = 66;

        $r2[31] = 66;

        $r2[32] = 66;

        $r2[33] = 66;

        <com.google.common.math.LongMath: int[] biggestBinomials> = $r2;

        $r2 = newarray (int)[31];

        $r2[0] = 2147483647;

        $r2[1] = 2147483647;

        $r2[2] = 2147483647;

        $r2[3] = 2642246;

        $r2[4] = 86251;

        $r2[5] = 11724;

        $r2[6] = 3218;

        $r2[7] = 1313;

        $r2[8] = 684;

        $r2[9] = 419;

        $r2[10] = 287;

        $r2[11] = 214;

        $r2[12] = 169;

        $r2[13] = 139;

        $r2[14] = 119;

        $r2[15] = 105;

        $r2[16] = 95;

        $r2[17] = 87;

        $r2[18] = 81;

        $r2[19] = 76;

        $r2[20] = 73;

        $r2[21] = 70;

        $r2[22] = 68;

        $r2[23] = 66;

        $r2[24] = 64;

        $r2[25] = 63;

        $r2[26] = 62;

        $r2[27] = 62;

        $r2[28] = 61;

        $r2[29] = 61;

        $r2[30] = 61;

        <com.google.common.math.LongMath: int[] biggestSimpleBinomials> = $r2;

        $r3 = newarray (long[])[7];

        $r1 = newarray (long)[2];

        $r1[0] = 291830L;

        $r1[1] = 126401071349994536L;

        $r3[0] = $r1;

        $r1 = newarray (long)[3];

        $r1[0] = 885594168L;

        $r1[1] = 725270293939359937L;

        $r1[2] = 3569819667048198375L;

        $r3[1] = $r1;

        $r1 = newarray (long)[4];

        $r1[0] = 273919523040L;

        $r1[1] = 15L;

        $r1[2] = 7363882082L;

        $r1[3] = 992620450144556L;

        $r3[2] = $r1;

        $r1 = newarray (long)[5];

        $r1[0] = 47636622961200L;

        $r1[1] = 2L;

        $r1[2] = 2570940L;

        $r1[3] = 211991001L;

        $r1[4] = 3749873356L;

        $r3[3] = $r1;

        $r1 = newarray (long)[6];

        $r1[0] = 7999252175582850L;

        $r1[1] = 2L;

        $r1[2] = 4130806001517L;

        $r1[3] = 149795463772692060L;

        $r1[4] = 186635894390467037L;

        $r1[5] = 3967304179347715805L;

        $r3[4] = $r1;

        $r1 = newarray (long)[7];

        $r1[0] = 585226005592931976L;

        $r1[1] = 2L;

        $r1[2] = 123635709730000L;

        $r1[3] = 9233062284813009L;

        $r1[4] = 43835965440333360L;

        $r1[5] = 761179012939631437L;

        $r1[6] = 1263739024124850375L;

        $r3[5] = $r1;

        $r1 = newarray (long)[8];

        $r1[0] = 9223372036854775807L;

        $r1[1] = 2L;

        $r1[2] = 325L;

        $r1[3] = 9375L;

        $r1[4] = 28178L;

        $r1[5] = 450775L;

        $r1[6] = 9780504L;

        $r1[7] = 1795265022L;

        $r3[6] = $r1;

        <com.google.common.math.LongMath: long[][] millerRabinBaseSets> = $r3;

        return;
    }

    public static long checkedAdd(long, long)
    {
        long $l0, $l1, $l2, $l4;
        byte $b3;
        boolean $z0, $z1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = $l0 + $l1;

        $l4 = $l0 ^ $l1;

        $z0 = 1;

        $b3 = $l4 cmp 0L;

        if $b3 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $l4 = $l0 ^ $l2;

        $b3 = $l4 cmp 0L;

        if $b3 < 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $z0 = $z1 | $z0;

        staticinvoke <com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)>($z0, "checkedAdd", $l0, $l1);

        return $l2;
    }

