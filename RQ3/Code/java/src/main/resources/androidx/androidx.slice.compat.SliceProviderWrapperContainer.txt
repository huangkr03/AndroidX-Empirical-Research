androidx.slice.compat.SliceProviderWrapperContainer
    private void <init>()
    {
        androidx.slice.compat.SliceProviderWrapperContainer r0;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper
<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: java.lang.String TAG>
<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>
    public void <init>(androidx.slice.SliceProvider, java.lang.String[])
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        androidx.slice.SliceProvider r1;
        java.lang.String[] r2;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: androidx.slice.SliceProvider;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<android.app.slice.SliceProvider: void <init>(java.lang.String[])>(r2);

        r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider> = r1;

        return;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;
        androidx.slice.SliceProvider $r3;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        $r3 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        virtualinvoke $r3.<androidx.slice.SliceProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r1, r2);

        specialinvoke r0.<android.app.slice.SliceProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r1, r2);

        return;
    }

    public boolean onCreate()
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        return 1;
    }

    public android.app.slice.Slice onBindSlice(android.net.Uri, java.util.Set)
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        android.net.Uri r1;
        java.util.Set r2, $r4;
        java.lang.Throwable r3, $r7, $r14, r16;
        androidx.slice.SliceProvider $r5;
        androidx.slice.Slice $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        java.lang.String $r10, $r13;
        android.app.slice.Slice r15;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.Set;

        $r4 = staticinvoke <androidx.slice.SliceConvert: java.util.Set wrap(java.util.Set)>(r2);

        staticinvoke <androidx.slice.SliceProvider: void setSpecs(java.util.Set)>($r4);

     label1:
        $r5 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        $r6 = virtualinvoke $r5.<androidx.slice.SliceProvider: androidx.slice.Slice onBindSlice(android.net.Uri)>(r1);

        r15 = staticinvoke <androidx.slice.SliceConvert: android.app.slice.Slice unwrap(androidx.slice.Slice)>($r6);

     label2:
        staticinvoke <androidx.slice.SliceProvider: void setSpecs(java.util.Set)>(null);

        return r15;

     label3:
        $r7 := @caughtexception;

        r16 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slice with URI ");

        $r10 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SliceProviderWrapper", $r13, r16);

     label4:
        staticinvoke <androidx.slice.SliceProvider: void setSpecs(java.util.Set)>(null);

        return null;

     label5:
        $r14 := @caughtexception;

        r3 = $r14;

     label6:
        staticinvoke <androidx.slice.SliceProvider: void setSpecs(java.util.Set)>(null);

        throw r3;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onSlicePinned(android.net.Uri)
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        android.net.Uri r1;
        androidx.slice.SliceProvider $r2, $r3;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        virtualinvoke $r2.<androidx.slice.SliceProvider: void onSlicePinned(android.net.Uri)>(r1);

        $r3 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        virtualinvoke $r3.<androidx.slice.SliceProvider: void handleSlicePinned(android.net.Uri)>(r1);

        return;
    }

    public void onSliceUnpinned(android.net.Uri)
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        android.net.Uri r1;
        androidx.slice.SliceProvider $r2, $r3;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        virtualinvoke $r2.<androidx.slice.SliceProvider: void onSliceUnpinned(android.net.Uri)>(r1);

        $r3 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        virtualinvoke $r3.<androidx.slice.SliceProvider: void handleSliceUnpinned(android.net.Uri)>(r1);

        return;
    }

    public java.util.Collection onGetSliceDescendants(android.net.Uri)
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        android.net.Uri r1;
        androidx.slice.SliceProvider $r2;
        java.util.Collection $r3;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        $r3 = virtualinvoke $r2.<androidx.slice.SliceProvider: java.util.Collection onGetSliceDescendants(android.net.Uri)>(r1);

        return $r3;
    }

    public android.net.Uri onMapIntentToUri(android.content.Intent)
    {
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper r0;
        android.content.Intent r1;
        androidx.slice.SliceProvider $r2;
        android.net.Uri $r3;

        r0 := @this: androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: androidx.slice.SliceProvider mSliceProvider>;

        $r3 = virtualinvoke $r2.<androidx.slice.SliceProvider: android.net.Uri onMapIntentToUri(android.content.Intent)>(r1);

        return $r3;
    }

