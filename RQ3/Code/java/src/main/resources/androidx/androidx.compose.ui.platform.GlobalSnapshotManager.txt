androidx.compose.ui.platform.GlobalSnapshotManager
<androidx.compose.ui.platform.GlobalSnapshotManager: androidx.compose.ui.platform.GlobalSnapshotManager INSTANCE>
<androidx.compose.ui.platform.GlobalSnapshotManager: java.util.concurrent.atomic.AtomicBoolean started>
    private void <init>()
    {
        androidx.compose.ui.platform.GlobalSnapshotManager r0;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void ensureStarted()
    {
        androidx.compose.ui.platform.GlobalSnapshotManager r0;
        kotlinx.coroutines.channels.Channel r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        androidx.compose.ui.platform.AndroidUiDispatcher$Companion $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1 $r6;
        kotlin.jvm.functions.Function2 $r7;
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2 $r9;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r10;
        kotlin.jvm.functions.Function1 $r11;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager;

        $r2 = <androidx.compose.ui.platform.GlobalSnapshotManager: java.util.concurrent.atomic.AtomicBoolean started>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        r1 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(-1, null, null, 6, null);

        $r3 = <androidx.compose.ui.platform.AndroidUiDispatcher: androidx.compose.ui.platform.AndroidUiDispatcher$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.platform.AndroidUiDispatcher$Companion: kotlin.coroutines.CoroutineContext getMain()>();

        $r5 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r4);

        $r6 = new androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        specialinvoke $r6.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: void <init>(kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>(r1, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r5, null, null, $r7, 3, null);

        $r10 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        $r9 = new androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2;

        specialinvoke $r9.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2: void <init>(kotlinx.coroutines.channels.Channel)>(r1);

        $r11 = (kotlin.jvm.functions.Function1) $r9;

        virtualinvoke $r10.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.ObserverHandle registerGlobalWriteObserver(kotlin.jvm.functions.Function1)>($r11);

     label1:
        return;
    }

    static void <clinit>()
    {
        androidx.compose.ui.platform.GlobalSnapshotManager $r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        $r0 = new androidx.compose.ui.platform.GlobalSnapshotManager;

        specialinvoke $r0.<androidx.compose.ui.platform.GlobalSnapshotManager: void <init>()>();

        <androidx.compose.ui.platform.GlobalSnapshotManager: androidx.compose.ui.platform.GlobalSnapshotManager INSTANCE> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <androidx.compose.ui.platform.GlobalSnapshotManager: java.util.concurrent.atomic.AtomicBoolean started> = $r1;

        return;
    }

androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1
<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object L$0>
<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object L$1>
<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: int label>
<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: kotlinx.coroutines.channels.Channel $channel>
    void <init>(kotlinx.coroutines.channels.Channel, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1 r0;
        kotlinx.coroutines.channels.Channel $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        $r1 := @parameter0: kotlinx.coroutines.channels.Channel;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: kotlinx.coroutines.channels.Channel $channel> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1 r0;
        java.lang.Object $r1, r2, r3, $r4, $r5, $r16;
        int $i0;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Unit $r7, $r8;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r9;
        kotlinx.coroutines.channels.Channel $r10;
        java.lang.Throwable $r12, $r13, r18;
        kotlinx.coroutines.channels.ReceiveChannel $r14;
        kotlinx.coroutines.channels.ChannelIterator r15;
        java.lang.IllegalStateException r20;
        kotlin.coroutines.Continuation r21;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label05;
            default: goto label13;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r10 = r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: kotlinx.coroutines.channels.Channel $channel>;

        $r14 = (kotlinx.coroutines.channels.ReceiveChannel) $r10;

     label02:
        r15 = interfaceinvoke $r14.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label03:
        r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object L$0> = $r14;

        r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object L$1> = r15;

        r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: int label> = 1;

        r21 = (kotlin.coroutines.Continuation) r0;

        $r16 = interfaceinvoke r15.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>(r21);

     label04:
        if $r16 != r3 goto label07;

        return r3;

     label05:
        $r4 = r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object L$1>;

        r15 = (kotlinx.coroutines.channels.ChannelIterator) $r4;

        $r5 = r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object L$0>;

        $r14 = (kotlinx.coroutines.channels.ReceiveChannel) $r5;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r16 = $r1;

     label07:
        $r6 = (java.lang.Boolean) $r16;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label08;

        r2 = interfaceinvoke r15.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        $r8 = (kotlin.Unit) r2;

        $r9 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        virtualinvoke $r9.<androidx.compose.runtime.snapshots.Snapshot$Companion: void sendApplyNotifications()>();

        goto label03;

     label08:
        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r14, null);

        goto label12;

     label09:
        $r12 := @caughtexception;

        r18 = $r12;

        throw $r12;

     label10:
        $r13 := @caughtexception;

     label11:
        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r14, r18);

        throw $r13;

     label12:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;

     label13:
        r20 = new java.lang.IllegalStateException;

        specialinvoke r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r20;

        catch java.lang.Throwable from label02 to label04 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        kotlinx.coroutines.channels.Channel $r4;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        $r4 = r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: kotlinx.coroutines.channels.Channel $channel>;

        specialinvoke $r3.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: void <init>(kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2
<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2: kotlinx.coroutines.channels.Channel $channel>
    void <init>(kotlinx.coroutines.channels.Channel)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2 r0;
        kotlinx.coroutines.channels.Channel $r1;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2;

        $r1 := @parameter0: kotlinx.coroutines.channels.Channel;

        r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2: kotlinx.coroutines.channels.Channel $channel> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Object)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2 r0;
        java.lang.Object r1;
        kotlin.Unit $r2;
        kotlinx.coroutines.channels.Channel $r3;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2: kotlinx.coroutines.channels.Channel $channel>;

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r3.<kotlinx.coroutines.channels.Channel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>($r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2 r0;
        java.lang.Object r1;
        kotlin.Unit $r2;

        r0 := @this: androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.compose.ui.platform.GlobalSnapshotManager$ensureStarted$2: void invoke(java.lang.Object)>(r1);

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r2;
    }

