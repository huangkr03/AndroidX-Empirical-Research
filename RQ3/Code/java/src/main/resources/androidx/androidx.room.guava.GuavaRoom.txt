androidx.room.guava.GuavaRoom
<androidx.room.guava.GuavaRoom: java.util.concurrent.Executor sDirectExecutor>
    private void <init>()
    {
        androidx.room.guava.GuavaRoom r0;

        r0 := @this: androidx.room.guava.GuavaRoom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Callable, androidx.room.RoomSQLiteQuery, boolean)
    {
        java.util.concurrent.Callable r0;
        androidx.room.RoomSQLiteQuery r1;
        boolean z0;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: java.util.concurrent.Callable;

        r1 := @parameter1: androidx.room.RoomSQLiteQuery;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>();

        $r3 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.room.RoomSQLiteQuery,boolean,android.os.CancellationSignal)>($r2, r0, r1, z0, null);

        return $r3;
    }

    public static com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase, java.util.concurrent.Callable, androidx.room.RoomSQLiteQuery, boolean)
    {
        androidx.room.RoomDatabase r0;
        java.util.concurrent.Callable r1;
        androidx.room.RoomSQLiteQuery r2;
        boolean z0;
        java.util.concurrent.Executor $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.room.RoomDatabase;

        r1 := @parameter1: java.util.concurrent.Callable;

        r2 := @parameter2: androidx.room.RoomSQLiteQuery;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<androidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()>();

        $r4 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.room.RoomSQLiteQuery,boolean,android.os.CancellationSignal)>($r3, r1, r2, z0, null);

        return $r4;
    }

    public static com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase, boolean, java.util.concurrent.Callable, androidx.room.RoomSQLiteQuery, boolean)
    {
        androidx.room.RoomDatabase r0;
        boolean z0, z1;
        java.util.concurrent.Callable r1;
        androidx.room.RoomSQLiteQuery r2;
        java.util.concurrent.Executor $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.concurrent.Callable;

        r2 := @parameter3: androidx.room.RoomSQLiteQuery;

        z1 := @parameter4: boolean;

        $r3 = staticinvoke <androidx.room.guava.GuavaRoom: java.util.concurrent.Executor getExecutor(androidx.room.RoomDatabase,boolean)>(r0, z0);

        $r4 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.room.RoomSQLiteQuery,boolean,android.os.CancellationSignal)>($r3, r1, r2, z1, null);

        return $r4;
    }

    public static com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase, boolean, java.util.concurrent.Callable, androidx.room.RoomSQLiteQuery, boolean, android.os.CancellationSignal)
    {
        androidx.room.RoomDatabase r0;
        boolean z0, z1;
        java.util.concurrent.Callable r1;
        androidx.room.RoomSQLiteQuery r2;
        android.os.CancellationSignal r3;
        java.util.concurrent.Executor $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.concurrent.Callable;

        r2 := @parameter3: androidx.room.RoomSQLiteQuery;

        z1 := @parameter4: boolean;

        r3 := @parameter5: android.os.CancellationSignal;

        $r4 = staticinvoke <androidx.room.guava.GuavaRoom: java.util.concurrent.Executor getExecutor(androidx.room.RoomDatabase,boolean)>(r0, z0);

        $r5 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.room.RoomSQLiteQuery,boolean,android.os.CancellationSignal)>($r4, r1, r2, z1, r3);

        return $r5;
    }

    private static com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor, java.util.concurrent.Callable, androidx.room.RoomSQLiteQuery, boolean, android.os.CancellationSignal)
    {
        java.util.concurrent.Executor r0, $r6, $r8;
        java.util.concurrent.Callable r1;
        androidx.room.RoomSQLiteQuery r2;
        boolean z0;
        android.os.CancellationSignal r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        androidx.room.guava.GuavaRoom$2 $r5;
        int $i0;
        androidx.room.guava.GuavaRoom$1 $r7;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.concurrent.Callable;

        r2 := @parameter2: androidx.room.RoomSQLiteQuery;

        z0 := @parameter3: boolean;

        r3 := @parameter4: android.os.CancellationSignal;

        r4 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor,java.util.concurrent.Callable)>(r0, r1);

        if r3 == null goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $r7 = new androidx.room.guava.GuavaRoom$1;

        specialinvoke $r7.<androidx.room.guava.GuavaRoom$1: void <init>(com.google.common.util.concurrent.ListenableFuture,android.os.CancellationSignal)>(r4, r3);

        $r8 = <androidx.room.guava.GuavaRoom: java.util.concurrent.Executor sDirectExecutor>;

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r7, $r8);

     label1:
        if z0 == 0 goto label2;

        $r5 = new androidx.room.guava.GuavaRoom$2;

        specialinvoke $r5.<androidx.room.guava.GuavaRoom$2: void <init>(androidx.room.RoomSQLiteQuery)>(r2);

        $r6 = <androidx.room.guava.GuavaRoom: java.util.concurrent.Executor sDirectExecutor>;

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r5, $r6);

     label2:
        return r4;
    }

    public static com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase, java.util.concurrent.Callable)
    {
        androidx.room.RoomDatabase r0;
        java.util.concurrent.Callable r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @parameter0: androidx.room.RoomDatabase;

        r1 := @parameter1: java.util.concurrent.Callable;

        $r2 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable)>(r0, 0, r1);

        return $r2;
    }

    public static com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase, boolean, java.util.concurrent.Callable)
    {
        androidx.room.RoomDatabase r0;
        boolean z0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.concurrent.Callable;

        $r2 = staticinvoke <androidx.room.guava.GuavaRoom: java.util.concurrent.Executor getExecutor(androidx.room.RoomDatabase,boolean)>(r0, z0);

        $r3 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r2, r1);

        return $r3;
    }

    private static com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.util.concurrent.Executor, java.util.concurrent.Callable)
    {
        java.util.concurrent.Executor r0;
        java.util.concurrent.Callable r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        androidx.room.guava.GuavaRoom$3 $r3;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.concurrent.Callable;

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r3 = new androidx.room.guava.GuavaRoom$3;

        specialinvoke $r3.<androidx.room.guava.GuavaRoom$3: void <init>(java.util.concurrent.Callable,androidx.concurrent.futures.ResolvableFuture)>(r1, r2);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return r2;
    }

    private static java.util.concurrent.Executor getExecutor(androidx.room.RoomDatabase, boolean)
    {
        androidx.room.RoomDatabase r0;
        boolean z0;
        java.util.concurrent.Executor $r1, $r2;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.room.RoomDatabase: java.util.concurrent.Executor getTransactionExecutor()>();

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<androidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.guava.GuavaRoom$4 $r0;

        $r0 = new androidx.room.guava.GuavaRoom$4;

        specialinvoke $r0.<androidx.room.guava.GuavaRoom$4: void <init>()>();

        <androidx.room.guava.GuavaRoom: java.util.concurrent.Executor sDirectExecutor> = $r0;

        return;
    }

androidx.room.guava.GuavaRoom$1
<androidx.room.guava.GuavaRoom$1: com.google.common.util.concurrent.ListenableFuture val$future>
<androidx.room.guava.GuavaRoom$1: android.os.CancellationSignal val$cancellationSignal>
    void <init>(com.google.common.util.concurrent.ListenableFuture, android.os.CancellationSignal)
    {
        androidx.room.guava.GuavaRoom$1 r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        android.os.CancellationSignal r2;

        r0 := @this: androidx.room.guava.GuavaRoom$1;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: android.os.CancellationSignal;

        r0.<androidx.room.guava.GuavaRoom$1: com.google.common.util.concurrent.ListenableFuture val$future> = r1;

        r0.<androidx.room.guava.GuavaRoom$1: android.os.CancellationSignal val$cancellationSignal> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.room.guava.GuavaRoom$1 r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        boolean $z0;
        android.os.CancellationSignal $r2;

        r0 := @this: androidx.room.guava.GuavaRoom$1;

        $r1 = r0.<androidx.room.guava.GuavaRoom$1: com.google.common.util.concurrent.ListenableFuture val$future>;

        $z0 = interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.room.guava.GuavaRoom$1: android.os.CancellationSignal val$cancellationSignal>;

        staticinvoke <androidx.sqlite.db.SupportSQLiteCompat$Api16Impl: void cancel(android.os.CancellationSignal)>($r2);

     label1:
        return;
    }

androidx.room.guava.GuavaRoom$2
<androidx.room.guava.GuavaRoom$2: androidx.room.RoomSQLiteQuery val$query>
    void <init>(androidx.room.RoomSQLiteQuery)
    {
        androidx.room.guava.GuavaRoom$2 r0;
        androidx.room.RoomSQLiteQuery r1;

        r0 := @this: androidx.room.guava.GuavaRoom$2;

        r1 := @parameter0: androidx.room.RoomSQLiteQuery;

        r0.<androidx.room.guava.GuavaRoom$2: androidx.room.RoomSQLiteQuery val$query> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.room.guava.GuavaRoom$2 r0;
        androidx.room.RoomSQLiteQuery $r1;

        r0 := @this: androidx.room.guava.GuavaRoom$2;

        $r1 = r0.<androidx.room.guava.GuavaRoom$2: androidx.room.RoomSQLiteQuery val$query>;

        virtualinvoke $r1.<androidx.room.RoomSQLiteQuery: void release()>();

        return;
    }

androidx.room.guava.GuavaRoom$3
<androidx.room.guava.GuavaRoom$3: java.util.concurrent.Callable val$callable>
<androidx.room.guava.GuavaRoom$3: androidx.concurrent.futures.ResolvableFuture val$future>
    void <init>(java.util.concurrent.Callable, androidx.concurrent.futures.ResolvableFuture)
    {
        androidx.room.guava.GuavaRoom$3 r0;
        java.util.concurrent.Callable r1;
        androidx.concurrent.futures.ResolvableFuture r2;

        r0 := @this: androidx.room.guava.GuavaRoom$3;

        r1 := @parameter0: java.util.concurrent.Callable;

        r2 := @parameter1: androidx.concurrent.futures.ResolvableFuture;

        r0.<androidx.room.guava.GuavaRoom$3: java.util.concurrent.Callable val$callable> = r1;

        r0.<androidx.room.guava.GuavaRoom$3: androidx.concurrent.futures.ResolvableFuture val$future> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.room.guava.GuavaRoom$3 r0;
        java.util.concurrent.Callable $r1;
        androidx.concurrent.futures.ResolvableFuture $r2, $r4;
        java.lang.Throwable $r3, r6;
        java.lang.Object r5;

        r0 := @this: androidx.room.guava.GuavaRoom$3;

     label1:
        $r1 = r0.<androidx.room.guava.GuavaRoom$3: java.util.concurrent.Callable val$callable>;

        r5 = interfaceinvoke $r1.<java.util.concurrent.Callable: java.lang.Object call()>();

        $r2 = r0.<androidx.room.guava.GuavaRoom$3: androidx.concurrent.futures.ResolvableFuture val$future>;

        virtualinvoke $r2.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(r5);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r6 = $r3;

        $r4 = r0.<androidx.room.guava.GuavaRoom$3: androidx.concurrent.futures.ResolvableFuture val$future>;

        virtualinvoke $r4.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>(r6);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

androidx.room.guava.GuavaRoom$4
    void <init>()
    {
        androidx.room.guava.GuavaRoom$4 r0;

        r0 := @this: androidx.room.guava.GuavaRoom$4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.room.guava.GuavaRoom$4 r0;
        java.lang.Runnable r1;

        r0 := @this: androidx.room.guava.GuavaRoom$4;

        r1 := @parameter0: java.lang.Runnable;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        return;
    }

