androidx.compose.ui.focus.FocusPropertiesKt
<androidx.compose.ui.focus.FocusPropertiesKt: androidx.compose.ui.modifier.ProvidableModifierLocal ModifierLocalFocusProperties>
    public static final androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusProperties()
    {
        androidx.compose.ui.modifier.ProvidableModifierLocal $r0;

        $r0 = <androidx.compose.ui.focus.FocusPropertiesKt: androidx.compose.ui.modifier.ProvidableModifierLocal ModifierLocalFocusProperties>;

        return $r0;
    }

    public static final androidx.compose.ui.Modifier focusProperties(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.Modifier $r0, $r3, $r4;
        kotlin.jvm.functions.Function1 r1, $r8;
        androidx.compose.ui.focus.FocusPropertiesModifier $r2;
        boolean $z1;
        androidx.compose.ui.focus.FocusPropertiesKt$focusProperties$$inlined$debugInspectorInfo$1 $r5;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r2 = new androidx.compose.ui.focus.FocusPropertiesModifier;

        $z1 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: boolean isDebugInspectorInfoEnabled()>();

        if $z1 == 0 goto label1;

        $r5 = new androidx.compose.ui.focus.FocusPropertiesKt$focusProperties$$inlined$debugInspectorInfo$1;

        specialinvoke $r5.<androidx.compose.ui.focus.FocusPropertiesKt$focusProperties$$inlined$debugInspectorInfo$1: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r8 = (kotlin.jvm.functions.Function1) $r5;

        goto label2;

     label1:
        $r8 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: kotlin.jvm.functions.Function1 getNoInspectorInfo()>();

     label2:
        specialinvoke $r2.<androidx.compose.ui.focus.FocusPropertiesModifier: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, $r8);

        $r3 = (androidx.compose.ui.Modifier) $r2;

        $r4 = interfaceinvoke $r0.<androidx.compose.ui.Modifier: androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier)>($r3);

        return $r4;
    }

    public static final void setUpdatedProperties(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusProperties)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusProperties r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: androidx.compose.ui.focus.FocusProperties;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "properties");

        $z0 = interfaceinvoke r1.<androidx.compose.ui.focus.FocusProperties: boolean getCanFocus()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void activateNode(androidx.compose.ui.focus.FocusModifier)>($r0);

        goto label2;

     label1:
        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void deactivateNode(androidx.compose.ui.focus.FocusModifier)>($r0);

     label2:
        return;
    }

    public static final void clear(androidx.compose.ui.focus.FocusProperties)
    {
        androidx.compose.ui.focus.FocusProperties $r0;
        androidx.compose.ui.focus.FocusRequester$Companion $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        androidx.compose.ui.focus.FocusRequester $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        androidx.compose.ui.focus.FocusPropertiesKt$clear$1 $r17;
        kotlin.jvm.functions.Function1 $r18, $r20;
        androidx.compose.ui.focus.FocusPropertiesKt$clear$2 $r19;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusProperties;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setCanFocus(boolean)>(1);

        $r1 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setNext(androidx.compose.ui.focus.FocusRequester)>($r2);

        $r3 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setPrevious(androidx.compose.ui.focus.FocusRequester)>($r4);

        $r5 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setUp(androidx.compose.ui.focus.FocusRequester)>($r6);

        $r7 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setDown(androidx.compose.ui.focus.FocusRequester)>($r8);

        $r9 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setLeft(androidx.compose.ui.focus.FocusRequester)>($r10);

        $r11 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r12 = virtualinvoke $r11.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setRight(androidx.compose.ui.focus.FocusRequester)>($r12);

        $r13 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r14 = virtualinvoke $r13.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setStart(androidx.compose.ui.focus.FocusRequester)>($r14);

        $r15 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r16 = virtualinvoke $r15.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setEnd(androidx.compose.ui.focus.FocusRequester)>($r16);

        $r17 = <androidx.compose.ui.focus.FocusPropertiesKt$clear$1: androidx.compose.ui.focus.FocusPropertiesKt$clear$1 INSTANCE>;

        $r18 = (kotlin.jvm.functions.Function1) $r17;

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setEnter(kotlin.jvm.functions.Function1)>($r18);

        $r19 = <androidx.compose.ui.focus.FocusPropertiesKt$clear$2: androidx.compose.ui.focus.FocusPropertiesKt$clear$2 INSTANCE>;

        $r20 = (kotlin.jvm.functions.Function1) $r19;

        interfaceinvoke $r0.<androidx.compose.ui.focus.FocusProperties: void setExit(kotlin.jvm.functions.Function1)>($r20);

        return;
    }

    public static final void refreshFocusProperties(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.node.NodeCoordinator r1, $r2;
        androidx.compose.ui.focus.FocusProperties $r3, $r12;
        androidx.compose.ui.node.LayoutNode $r4;
        androidx.compose.ui.node.Owner $r5;
        androidx.compose.ui.node.OwnerSnapshotObserver $r6;
        androidx.compose.ui.focus.FocusModifier$Companion $r7;
        androidx.compose.ui.node.OwnerScope $r8;
        kotlin.jvm.functions.Function1 $r9;
        androidx.compose.ui.focus.FocusPropertiesKt$refreshFocusProperties$1 $r10;
        kotlin.jvm.functions.Function0 $r11;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r2 != null goto label1;

        return;

     label1:
        r1 = $r2;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusProperties getFocusProperties()>();

        staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: void clear(androidx.compose.ui.focus.FocusProperties)>($r3);

        $r4 = virtualinvoke r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        $r5 = virtualinvoke $r4.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        if $r5 == null goto label2;

        $r6 = interfaceinvoke $r5.<androidx.compose.ui.node.Owner: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()>();

        if $r6 == null goto label2;

        $r8 = (androidx.compose.ui.node.OwnerScope) $r0;

        $r7 = <androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier$Companion Companion>;

        $r9 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusModifier$Companion: kotlin.jvm.functions.Function1 getRefreshFocusProperties()>();

        $r10 = new androidx.compose.ui.focus.FocusPropertiesKt$refreshFocusProperties$1;

        specialinvoke $r10.<androidx.compose.ui.focus.FocusPropertiesKt$refreshFocusProperties$1: void <init>(androidx.compose.ui.focus.FocusModifier)>($r0);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        virtualinvoke $r6.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r8, $r9, $r11);

        goto label2;

     label2:
        $r12 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusProperties getFocusProperties()>();

        staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: void setUpdatedProperties(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusProperties)>($r0, $r12);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusPropertiesKt$ModifierLocalFocusProperties$1 $r0;
        kotlin.jvm.functions.Function0 $r1;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r2;

        $r0 = <androidx.compose.ui.focus.FocusPropertiesKt$ModifierLocalFocusProperties$1: androidx.compose.ui.focus.FocusPropertiesKt$ModifierLocalFocusProperties$1 INSTANCE>;

        $r1 = (kotlin.jvm.functions.Function0) $r0;

        $r2 = staticinvoke <androidx.compose.ui.modifier.ModifierLocalKt: androidx.compose.ui.modifier.ProvidableModifierLocal modifierLocalOf(kotlin.jvm.functions.Function0)>($r1);

        <androidx.compose.ui.focus.FocusPropertiesKt: androidx.compose.ui.modifier.ProvidableModifierLocal ModifierLocalFocusProperties> = $r2;

        return;
    }

