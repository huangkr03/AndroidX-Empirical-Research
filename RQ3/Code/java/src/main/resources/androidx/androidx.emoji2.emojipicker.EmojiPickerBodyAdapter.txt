androidx.emoji2.emojipicker.EmojiPickerBodyAdapter
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.content.Context context>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: int emojiGridColumns>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Float emojiGridRows>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function2 onEmojiPickedListener>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.view.LayoutInflater layoutInflater>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellWidth>
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellHeight>
    public void <init>(android.content.Context, int, java.lang.Float, androidx.emoji2.emojipicker.StickyVariantProvider, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function2)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        android.content.Context r1, $r6;
        int i0;
        java.lang.Float r2;
        androidx.emoji2.emojipicker.StickyVariantProvider r3;
        kotlin.jvm.functions.Function0 r4;
        kotlin.jvm.functions.Function2 r5;
        android.view.LayoutInflater $r7;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Float;

        r3 := @parameter3: androidx.emoji2.emojipicker.StickyVariantProvider;

        r4 := @parameter4: kotlin.jvm.functions.Function0;

        r5 := @parameter5: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "stickyVariantProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "emojiPickerItemsProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "onEmojiPickedListener");

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void <init>()>();

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.content.Context context> = r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: int emojiGridColumns> = i0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Float emojiGridRows> = r2;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider> = r3;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider> = r4;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function2 onEmojiPickedListener> = r5;

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.content.Context context>;

        $r7 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "from(context)");

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.view.LayoutInflater layoutInflater> = $r7;

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0, r2, $r22;
        android.view.ViewGroup r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0, f1, $f2;
        androidx.emoji2.emojipicker.EmojiViewHolder $r3;
        java.lang.Integer $r4, $r6, $r21, $r23;
        android.content.Context $r5;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3 $r7;
        android.view.LayoutInflater $r8;
        androidx.emoji2.emojipicker.StickyVariantProvider $r9;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4 $r10;
        kotlin.jvm.functions.Function2 $r11, $r12;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2 $r13;
        kotlin.jvm.functions.Function1 $r14;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 $r15, $r16;
        kotlin.NoWhenBranchMatchedException $r17;
        java.lang.Float $r18;
        java.lang.Number $r19;
        androidx.emoji2.emojipicker.Extensions $r24;
        androidx.emoji2.emojipicker.ItemType $r25;
        int[] $r26;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r27;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        $r21 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellWidth>;

        if $r21 != null goto label1;

        $i7 = specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: int getParentWidth(android.view.ViewGroup)>(r1);

        $i8 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: int emojiGridColumns>;

        $i9 = $i7 / $i8;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

     label1:
        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellWidth> = $r21;

        $r22 = r0;

        $r23 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellHeight>;

        if $r23 != null goto label4;

        $r18 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Float emojiGridRows>;

        if $r18 == null goto label2;

        $r19 = (java.lang.Number) $r18;

        f0 = virtualinvoke $r19.<java.lang.Number: float floatValue()>();

        r2 = r0;

        $i5 = specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: int getEmojiCellTotalHeight(android.view.ViewGroup)>(r1);

        $f2 = (float) $i5;

        f1 = $f2 / f0;

        $r22 = r2;

        $i6 = (int) f1;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        goto label3;

     label2:
        $r23 = null;

     label3:
        if $r23 != null goto label4;

        $r23 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellWidth>;

     label4:
        $r22.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellHeight> = $r23;

        $r24 = <androidx.emoji2.emojipicker.Extensions: androidx.emoji2.emojipicker.Extensions INSTANCE>;

        $r25 = virtualinvoke $r24.<androidx.emoji2.emojipicker.Extensions: androidx.emoji2.emojipicker.ItemType toItemType$emoji2_emojipicker_release(int)>(i0);

        $r26 = <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i10 = virtualinvoke $r25.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        $i11 = $r26[$i10];

        tableswitch($i11)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label8;
        };

     label5:
        $i4 = <androidx.emoji2.emojipicker.R$layout: int category_text_view>;

        $r16 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 createSimpleHolder$default(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter,int,android.view.ViewGroup,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r0, $i4, r1, null, 4, null);

        $r27 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r16;

        goto label9;

     label6:
        $i3 = <androidx.emoji2.emojipicker.R$layout: int empty_category_text_view>;

        $r13 = new androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2;

        specialinvoke $r13.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2: void <init>(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)>(r0);

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        $r15 = specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 createSimpleHolder(int,android.view.ViewGroup,kotlin.jvm.functions.Function1)>($i3, r1, $r14);

        $r27 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r15;

        goto label9;

     label7:
        $r3 = new androidx.emoji2.emojipicker.EmojiViewHolder;

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.content.Context context>;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellWidth>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellHeight>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r8 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.view.LayoutInflater layoutInflater>;

        $r9 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider>;

        $r7 = new androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3;

        specialinvoke $r7.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3: void <init>(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)>(r0);

        $r11 = (kotlin.jvm.functions.Function2) $r7;

        $r10 = new androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4;

        specialinvoke $r10.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4: void <init>(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)>(r0);

        $r12 = (kotlin.jvm.functions.Function2) $r10;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiViewHolder: void <init>(android.content.Context,int,int,android.view.LayoutInflater,androidx.emoji2.emojipicker.StickyVariantProvider,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)>($r5, $i1, $i2, $r8, $r9, $r11, $r12);

        $r27 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r3;

        goto label9;

     label8:
        $r17 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r17.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r17;

     label9:
        return $r27;
    }

    public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.emoji2.emojipicker.ItemViewData r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        androidx.emoji2.emojipicker.EmojiPickerItems $r5;
        androidx.emoji2.emojipicker.Extensions $r6;
        androidx.emoji2.emojipicker.ItemType $r7;
        int[] $r8;
        androidx.emoji2.emojipicker.EmojiViewHolder $r9;
        androidx.emoji2.emojipicker.EmojiViewData $r10;
        java.lang.String $r11, $r16, $r22;
        android.view.View $r12, $r13, $r18, $r19;
        android.widget.TextView $r14, $r20;
        androidx.emoji2.emojipicker.PlaceholderText $r15;
        java.lang.CharSequence $r17, $r23;
        androidx.emoji2.emojipicker.CategoryTitle $r21;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "viewHolder");

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider>;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerItems) $r4;

        r2 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerItems: androidx.emoji2.emojipicker.ItemViewData getBodyItem(int)>(i0);

        $r6 = <androidx.emoji2.emojipicker.Extensions: androidx.emoji2.emojipicker.Extensions INSTANCE>;

        $i1 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: int getItemViewType(int)>(i0);

        $r7 = virtualinvoke $r6.<androidx.emoji2.emojipicker.Extensions: androidx.emoji2.emojipicker.ItemType toItemType$emoji2_emojipicker_release(int)>($i1);

        $r8 = <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke $r7.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        $i3 = $r8[$i2];

        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r18 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i5 = <androidx.emoji2.emojipicker.R$id: int category_name>;

        $r19 = staticinvoke <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>($r18, $i5);

        $r20 = (android.widget.TextView) $r19;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.emoji2.emojipicker.CategoryTitle");

        $r21 = (androidx.emoji2.emojipicker.CategoryTitle) r2;

        $r22 = virtualinvoke $r21.<androidx.emoji2.emojipicker.CategoryTitle: java.lang.String getTitle()>();

        $r23 = (java.lang.CharSequence) $r22;

        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>($r23);

        goto label4;

     label2:
        $r12 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i4 = <androidx.emoji2.emojipicker.R$id: int emoji_picker_empty_category_view>;

        $r13 = staticinvoke <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>($r12, $i4);

        $r14 = (android.widget.TextView) $r13;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.emoji2.emojipicker.PlaceholderText");

        $r15 = (androidx.emoji2.emojipicker.PlaceholderText) r2;

        $r16 = virtualinvoke $r15.<androidx.emoji2.emojipicker.PlaceholderText: java.lang.String getText()>();

        $r17 = (java.lang.CharSequence) $r16;

        virtualinvoke $r14.<android.widget.TextView: void setText(java.lang.CharSequence)>($r17);

        goto label4;

     label3:
        $r9 = (androidx.emoji2.emojipicker.EmojiViewHolder) r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.emoji2.emojipicker.EmojiViewData");

        $r10 = (androidx.emoji2.emojipicker.EmojiViewData) r2;

        $r11 = virtualinvoke $r10.<androidx.emoji2.emojipicker.EmojiViewData: java.lang.String getEmoji()>();

        virtualinvoke $r9.<androidx.emoji2.emojipicker.EmojiViewHolder: void bindEmoji(java.lang.String)>($r11);

     label4:
        return;
    }

    public long getItemId(int)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        int i0, $i1;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.Object $r2;
        androidx.emoji2.emojipicker.EmojiPickerItems $r3;
        androidx.emoji2.emojipicker.ItemViewData $r4;
        long $l2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider>;

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (androidx.emoji2.emojipicker.EmojiPickerItems) $r2;

        $r4 = virtualinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerItems: androidx.emoji2.emojipicker.ItemViewData getBodyItem(int)>(i0);

        $i1 = virtualinvoke $r4.<androidx.emoji2.emojipicker.ItemViewData: int hashCode()>();

        $l2 = (long) $i1;

        return $l2;
    }

    public int getItemCount()
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.Object $r2;
        androidx.emoji2.emojipicker.EmojiPickerItems $r3;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        $r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider>;

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (androidx.emoji2.emojipicker.EmojiPickerItems) $r2;

        $i0 = virtualinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerItems: int getSize()>();

        return $i0;
    }

    public int getItemViewType(int)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        int i0, $i1;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.Object $r2;
        androidx.emoji2.emojipicker.EmojiPickerItems $r3;
        androidx.emoji2.emojipicker.ItemViewData $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider>;

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (androidx.emoji2.emojipicker.EmojiPickerItems) $r2;

        $r4 = virtualinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerItems: androidx.emoji2.emojipicker.ItemViewData getBodyItem(int)>(i0);

        $i1 = virtualinvoke $r4.<androidx.emoji2.emojipicker.ItemViewData: int getViewType()>();

        return $i1;
    }

    private final int getParentWidth(android.view.ViewGroup)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        android.view.ViewGroup r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.view.ViewGroup: int getPaddingRight()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    private final int getEmojiCellTotalHeight(android.view.ViewGroup)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        android.view.ViewGroup r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.Context $r2, $r4;
        android.content.res.Resources $r3, $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getMeasuredHeight()>();

        $r2 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <androidx.emoji2.emojipicker.R$dimen: int emoji_picker_category_name_height>;

        $i2 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i3 = $i2 * 2;

        $i4 = $i0 - $i3;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $i5 = <androidx.emoji2.emojipicker.R$dimen: int emoji_picker_category_name_padding_top>;

        $i6 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>($i5);

        $i7 = $i4 - $i6;

        return $i7;
    }

    private final androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 createSimpleHolder(int, android.view.ViewGroup, kotlin.jvm.functions.Function1)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        int i0;
        android.view.ViewGroup r1;
        kotlin.jvm.functions.Function1 r2;
        android.view.View r3, r4, r5;
        android.view.LayoutInflater $r6;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 $r8;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewGroup;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: android.view.LayoutInflater layoutInflater>;

        r4 = virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, r1, 0);

        r5 = r4;

        $r7 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r7.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke r5.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r7);

        if r2 == null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "it");

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        goto label1;

     label1:
        r3 = r4;

        $r8 = new androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1;

        specialinvoke $r8.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1: void <init>(android.view.View)>(r3);

        return $r8;
    }

    static androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 createSimpleHolder$default(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter, int, android.view.ViewGroup, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r0;
        int i0, i1, $i2;
        android.view.ViewGroup r1;
        java.lang.Object r2;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 $r3;
        kotlin.jvm.functions.Function1 r4;

        r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.ViewGroup;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r4 = null;

     label1:
        $r3 = specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 createSimpleHolder(int,android.view.ViewGroup,kotlin.jvm.functions.Function1)>(i0, r1, r4);

        return $r3;
    }

    public static final java.lang.Integer access$getEmojiCellHeight$p(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r0;
        java.lang.Integer $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer emojiCellHeight>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function2 access$getOnEmojiPickedListener$p(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r0;
        kotlin.jvm.functions.Function2 $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function2 onEmojiPickedListener>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getEmojiPickerItemsProvider$p(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 emojiPickerItemsProvider>;

        return $r1;
    }

androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1
    void <init>(android.view.View)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1 r0;
        android.view.View $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$createSimpleHolder$1;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>($r1);

        return;
    }

androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2 r0;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(android.view.View)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2 r0;
        android.view.View $r1;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2;

        $r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$createSimpleHolder");

        $r2 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>;

        $r3 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: java.lang.Integer access$getEmojiCellHeight$p(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<android.view.View: void setMinimumHeight(int)>($i0);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2 r0;
        java.lang.Object r1;
        android.view.View $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$2: void invoke(android.view.View)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3 r0;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.emoji2.emojipicker.EmojiViewHolder, androidx.emoji2.emojipicker.EmojiViewItem)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3 r0;
        androidx.emoji2.emojipicker.EmojiViewHolder $r1;
        androidx.emoji2.emojipicker.EmojiViewItem r2;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r3, $r5;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiViewHolder;

        r2 := @parameter1: androidx.emoji2.emojipicker.EmojiViewItem;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$$receiver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "emojiViewItem");

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>;

        $r4 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function2 access$getOnEmojiPickedListener$p(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)>($r3);

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>;

        interfaceinvoke $r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3 r0;
        java.lang.Object r1, r2;
        androidx.emoji2.emojipicker.EmojiViewItem $r3;
        androidx.emoji2.emojipicker.EmojiViewHolder $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.emoji2.emojipicker.EmojiViewHolder) r1;

        $r3 = (androidx.emoji2.emojipicker.EmojiViewItem) r2;

        virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$3: void invoke(androidx.emoji2.emojipicker.EmojiViewHolder,androidx.emoji2.emojipicker.EmojiViewItem)>($r4, $r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4 r0;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.emoji2.emojipicker.EmojiViewHolder, java.lang.String)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4 r0;
        androidx.emoji2.emojipicker.EmojiViewHolder $r1;
        java.lang.String r2, r3, $r21, $r26;
        java.lang.Iterable $r4;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r5, $r15;
        java.util.Iterator r6;
        java.lang.Object r7, $r12, $r14, $r17, $r22, $r25;
        int i0, i1, $i2, i3;
        androidx.emoji2.emojipicker.ItemViewData r8;
        java.util.List r9, $r13;
        androidx.emoji2.emojipicker.BundledEmojiListLoader $r10, $r18;
        java.util.Map $r11, $r19;
        kotlin.jvm.functions.Function0 $r16;
        boolean $z2, $z3, $z4, $z5;
        androidx.emoji2.emojipicker.EmojiViewData $r20, $r23, $r24;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiViewHolder;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$$receiver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "emoji");

        $r10 = <androidx.emoji2.emojipicker.BundledEmojiListLoader: androidx.emoji2.emojipicker.BundledEmojiListLoader INSTANCE>;

        $r11 = virtualinvoke $r10.<androidx.emoji2.emojipicker.BundledEmojiListLoader: java.util.Map getEmojiVariantsLookup$emoji2_emojipicker_release()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r12);

        $r13 = (java.util.List) $r12;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (java.lang.String) $r14;

        $r15 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>;

        $r16 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: kotlin.jvm.functions.Function0 access$getEmojiPickerItemsProvider$p(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter)>($r15);

        $r17 = interfaceinvoke $r16.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = (java.lang.Iterable) $r17;

        r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter this$0>;

        i3 = 0;

        r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i3;

        i3 = i3 + 1;

        i0 = $i2;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r8 = (androidx.emoji2.emojipicker.ItemViewData) r7;

        i1 = i0;

        $z3 = r8 instanceof androidx.emoji2.emojipicker.EmojiViewData;

        if $z3 == 0 goto label5;

        $r18 = <androidx.emoji2.emojipicker.BundledEmojiListLoader: androidx.emoji2.emojipicker.BundledEmojiListLoader INSTANCE>;

        $r19 = virtualinvoke $r18.<androidx.emoji2.emojipicker.BundledEmojiListLoader: java.util.Map getEmojiVariantsLookup$emoji2_emojipicker_release()>();

        $r20 = (androidx.emoji2.emojipicker.EmojiViewData) r8;

        $r21 = virtualinvoke $r20.<androidx.emoji2.emojipicker.EmojiViewData: java.lang.String getEmoji()>();

        $r22 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);

        r9 = (java.util.List) $r22;

        if r9 == null goto label3;

        $r25 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(0);

        $r26 = (java.lang.String) $r25;

        goto label4;

     label3:
        $r26 = null;

     label4:
        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r26, r3);

        if $z4 == 0 goto label5;

        $r23 = (androidx.emoji2.emojipicker.EmojiViewData) r8;

        $z5 = virtualinvoke $r23.<androidx.emoji2.emojipicker.EmojiViewData: boolean getUpdateToSticky()>();

        if $z5 == 0 goto label5;

        $r24 = (androidx.emoji2.emojipicker.EmojiViewData) r8;

        virtualinvoke $r24.<androidx.emoji2.emojipicker.EmojiViewData: void setEmoji(java.lang.String)>(r2);

        virtualinvoke r5.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void notifyItemChanged(int)>(i1);

     label5:
        goto label1;

     label6:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4 r0;
        java.lang.Object r1, r2;
        java.lang.String $r3;
        androidx.emoji2.emojipicker.EmojiViewHolder $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.emoji2.emojipicker.EmojiViewHolder) r1;

        $r3 = (java.lang.String) r2;

        virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$onCreateViewHolder$4: void invoke(androidx.emoji2.emojipicker.EmojiViewHolder,java.lang.String)>($r4, $r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$WhenMappings
<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.emoji2.emojipicker.ItemType[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.emoji2.emojipicker.ItemType $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, r8, r9, r10;

        $r1 = staticinvoke <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType CATEGORY_TITLE>;

        $i1 = virtualinvoke $r2.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        r8 = $r7;

     label04:
        $r3 = <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType PLACEHOLDER_TEXT>;

        $i2 = virtualinvoke $r3.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r5 := @caughtexception;

        r9 = $r5;

     label07:
        $r4 = <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType EMOJI>;

        $i3 = virtualinvoke $r4.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        r10 = $r6;

     label10:
        <androidx.emoji2.emojipicker.EmojiPickerBodyAdapter$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

