androidx.test.internal.platform.reflect.ReflectiveField
<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.String className>
<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.String fieldName>
<androidx.test.internal.platform.reflect.ReflectiveField: boolean initialized>
<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.reflect.Field field>
    public java.lang.Object get(java.lang.Object) throws androidx.test.internal.platform.reflect.ReflectionException
    {
        androidx.test.internal.platform.reflect.ReflectiveField r0;
        java.lang.Object r1, $r3;
        java.lang.reflect.Field $r2;
        java.lang.Throwable $r4, $r6, $r8, r10, r11, r12, r16, r17, r18;
        androidx.test.internal.platform.reflect.ReflectionException r13, r14, r15;

        r0 := @this: androidx.test.internal.platform.reflect.ReflectiveField;

        r1 := @parameter0: java.lang.Object;

     label1:
        specialinvoke r0.<androidx.test.internal.platform.reflect.ReflectiveField: void initIfNecessary()>();

        $r2 = r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.reflect.Field field>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        r10 = $r6;

        r13 = new androidx.test.internal.platform.reflect.ReflectionException;

        specialinvoke r13.<androidx.test.internal.platform.reflect.ReflectionException: void <init>(java.lang.Exception)>(r10);

        r16 = (java.lang.Throwable) r13;

        throw r16;

     label4:
        $r4 := @caughtexception;

        r11 = $r4;

        r14 = new androidx.test.internal.platform.reflect.ReflectionException;

        specialinvoke r14.<androidx.test.internal.platform.reflect.ReflectionException: void <init>(java.lang.Exception)>(r11);

        r17 = (java.lang.Throwable) r14;

        throw r17;

     label5:
        $r8 := @caughtexception;

        r12 = $r8;

        r15 = new androidx.test.internal.platform.reflect.ReflectionException;

        specialinvoke r15.<androidx.test.internal.platform.reflect.ReflectionException: void <init>(java.lang.Exception)>(r12);

        r18 = (java.lang.Throwable) r15;

        throw r18;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.internal.platform.reflect.ReflectiveField r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.test.internal.platform.reflect.ReflectiveField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.internal.platform.reflect.ReflectiveField: boolean initialized> = 0;

        r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.String className> = r1;

        r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.String fieldName> = r2;

        return;
    }

    private synchronized void initIfNecessary() throws java.lang.ClassNotFoundException, java.lang.NoSuchFieldException
    {
        androidx.test.internal.platform.reflect.ReflectiveField r0;
        boolean $z0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;
        java.lang.reflect.Field $r4, $r5;

        r0 := @this: androidx.test.internal.platform.reflect.ReflectiveField;

        $z0 = r0.<androidx.test.internal.platform.reflect.ReflectiveField: boolean initialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.String className>;

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r3 = r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.String fieldName>;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r3);

        r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.reflect.Field field> = $r4;

        $r5 = r0.<androidx.test.internal.platform.reflect.ReflectiveField: java.lang.reflect.Field field>;

        virtualinvoke $r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        r0.<androidx.test.internal.platform.reflect.ReflectiveField: boolean initialized> = 1;

        return;
    }

