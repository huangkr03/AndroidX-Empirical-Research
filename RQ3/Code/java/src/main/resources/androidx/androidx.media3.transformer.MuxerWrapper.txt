androidx.media3.transformer.MuxerWrapper
<androidx.media3.transformer.MuxerWrapper: long MAX_TRACK_WRITE_AHEAD_US>
<androidx.media3.transformer.MuxerWrapper: java.lang.String outputPath>
<androidx.media3.transformer.MuxerWrapper: android.os.ParcelFileDescriptor outputParcelFileDescriptor>
<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer$Factory muxerFactory>
<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener>
<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>
<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToSampleCount>
<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>
<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToBytesWritten>
<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledExecutorService abortScheduledExecutorService>
<androidx.media3.transformer.MuxerWrapper: int trackCount>
<androidx.media3.transformer.MuxerWrapper: int trackFormatCount>
<androidx.media3.transformer.MuxerWrapper: boolean isReady>
<androidx.media3.transformer.MuxerWrapper: int previousTrackType>
<androidx.media3.transformer.MuxerWrapper: long minTrackTimeUs>
<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledFuture abortScheduledFuture>
<androidx.media3.transformer.MuxerWrapper: boolean isAborted>
<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>
    public void <init>(java.lang.String, android.os.ParcelFileDescriptor, androidx.media3.transformer.Muxer$Factory, androidx.media3.transformer.Transformer$AsyncErrorListener)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2;
        androidx.media3.transformer.Muxer$Factory r3;
        androidx.media3.transformer.Transformer$AsyncErrorListener r4;
        android.util.SparseIntArray $r5, $r6;
        android.util.SparseLongArray $r7, $r8;
        java.util.concurrent.ScheduledExecutorService $r9;
        java.lang.NullPointerException $r10;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: androidx.media3.transformer.Muxer$Factory;

        r4 := @parameter3: androidx.media3.transformer.Transformer$AsyncErrorListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        if r2 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Both output path and ParcelFileDescriptor are null");

        throw $r10;

     label1:
        r0.<androidx.media3.transformer.MuxerWrapper: java.lang.String outputPath> = r1;

        r0.<androidx.media3.transformer.MuxerWrapper: android.os.ParcelFileDescriptor outputParcelFileDescriptor> = r2;

        r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer$Factory muxerFactory> = r3;

        r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener> = r4;

        $r5 = new android.util.SparseIntArray;

        specialinvoke $r5.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex> = $r5;

        $r6 = new android.util.SparseIntArray;

        specialinvoke $r6.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToSampleCount> = $r6;

        $r7 = new android.util.SparseLongArray;

        specialinvoke $r7.<android.util.SparseLongArray: void <init>()>();

        r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs> = $r7;

        $r8 = new android.util.SparseLongArray;

        specialinvoke $r8.<android.util.SparseLongArray: void <init>()>();

        r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToBytesWritten> = $r8;

        r0.<androidx.media3.transformer.MuxerWrapper: int previousTrackType> = -2;

        $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>();

        r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledExecutorService abortScheduledExecutorService> = $r9;

        return;
    }

    public void registerTrack()
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        $i0 = r0.<androidx.media3.transformer.MuxerWrapper: int trackFormatCount>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z0, "Tracks cannot be registered after track formats have been added.");

        $i1 = r0.<androidx.media3.transformer.MuxerWrapper: int trackCount>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.transformer.MuxerWrapper: int trackCount> = $i2;

        return;
    }

    public boolean supportsSampleMimeType(java.lang.String)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        java.lang.String r1;
        int i0;
        com.google.common.collect.ImmutableList $r2;
        boolean $z0;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>(r1);

        $r2 = virtualinvoke r0.<androidx.media3.transformer.MuxerWrapper: com.google.common.collect.ImmutableList getSupportedSampleMimeTypes(int)>(i0);

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public com.google.common.collect.ImmutableList getSupportedSampleMimeTypes(int)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int i0;
        androidx.media3.transformer.Muxer$Factory $r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        $r2 = interfaceinvoke $r1.<androidx.media3.transformer.Muxer$Factory: com.google.common.collect.ImmutableList getSupportedSampleMimeTypes(int)>(i0);

        return $r2;
    }

    public void addTrackFormat(androidx.media3.common.Format) throws androidx.media3.transformer.Muxer$MuxerException
    {
        androidx.media3.transformer.MuxerWrapper r0;
        androidx.media3.common.Format r1;
        java.lang.String r2, $r6, $r11;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        android.util.SparseIntArray $r7, $r13, $r14;
        androidx.media3.transformer.Muxer $r12;
        android.util.SparseLongArray $r15, $r16;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        r1 := @parameter0: androidx.media3.common.Format;

        $i2 = r0.<androidx.media3.transformer.MuxerWrapper: int trackCount>;

        if $i2 <= 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z2, "All tracks should be registered before the formats are added.");

        $i4 = r0.<androidx.media3.transformer.MuxerWrapper: int trackFormatCount>;

        $i3 = r0.<androidx.media3.transformer.MuxerWrapper: int trackCount>;

        if $i4 >= $i3 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z3, "All track formats have already been added.");

        r2 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        z0 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>(r2);

        z1 = staticinvoke <androidx.media3.common.MimeTypes: boolean isVideo(java.lang.String)>(r2);

        if z0 != 0 goto label05;

        if z1 == 0 goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported track format: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z4, $r6);

        i0 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>(r2);

        $r7 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>;

        $i5 = virtualinvoke $r7.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if $i5 != -1 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is already a track of type ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z5, $r11);

        specialinvoke r0.<androidx.media3.transformer.MuxerWrapper: void ensureMuxerInitialized()>();

        $r12 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        i1 = interfaceinvoke $r12.<androidx.media3.transformer.Muxer: int addTrack(androidx.media3.common.Format)>(r1);

        $r13 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>;

        virtualinvoke $r13.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        $r14 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToSampleCount>;

        virtualinvoke $r14.<android.util.SparseIntArray: void put(int,int)>(i0, 0);

        $r15 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        virtualinvoke $r15.<android.util.SparseLongArray: void put(int,long)>(i0, 0L);

        $r16 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToBytesWritten>;

        virtualinvoke $r16.<android.util.SparseLongArray: void put(int,long)>(i0, 0L);

        $i6 = r0.<androidx.media3.transformer.MuxerWrapper: int trackFormatCount>;

        $i7 = $i6 + 1;

        r0.<androidx.media3.transformer.MuxerWrapper: int trackFormatCount> = $i7;

        $i9 = r0.<androidx.media3.transformer.MuxerWrapper: int trackFormatCount>;

        $i8 = r0.<androidx.media3.transformer.MuxerWrapper: int trackCount>;

        if $i9 != $i8 goto label10;

        r0.<androidx.media3.transformer.MuxerWrapper: boolean isReady> = 1;

        specialinvoke r0.<androidx.media3.transformer.MuxerWrapper: void resetAbortTimer()>();

     label10:
        return;
    }

    public boolean writeSample(int, java.nio.ByteBuffer, boolean, long) throws androidx.media3.transformer.Muxer$MuxerException
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int i0, i2, $i3, $i4, $i6;
        java.nio.ByteBuffer r1;
        boolean z0, $z1, $z2;
        long l1, $l5, $l7, $l8, $l9;
        android.util.SparseIntArray $r2, $r7, $r8;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        android.util.SparseLongArray $r9, $r10, $r11, $r15;
        byte $b10;
        androidx.media3.transformer.Muxer $r12, $r14;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.ByteBuffer;

        z0 := @parameter2: boolean;

        l1 := @parameter3: long;

        $r2 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>;

        i2 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i2 == -1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write sample because there is no track of type ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z2, $r6);

        $z1 = specialinvoke r0.<androidx.media3.transformer.MuxerWrapper: boolean canWriteSampleOfType(int)>(i0);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r8 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToSampleCount>;

        $r7 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToSampleCount>;

        $i3 = virtualinvoke $r7.<android.util.SparseIntArray: int get(int)>(i0);

        $i4 = $i3 + 1;

        virtualinvoke $r8.<android.util.SparseIntArray: void put(int,int)>(i0, $i4);

        $r10 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToBytesWritten>;

        $r9 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToBytesWritten>;

        $l5 = virtualinvoke $r9.<android.util.SparseLongArray: long get(int)>(i0);

        $i6 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $l7 = (long) $i6;

        $l8 = $l5 + $l7;

        virtualinvoke $r10.<android.util.SparseLongArray: void put(int,long)>(i0, $l8);

        $r11 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        $l9 = virtualinvoke $r11.<android.util.SparseLongArray: long get(int)>(i0);

        $b10 = $l9 cmp l1;

        if $b10 >= 0 goto label4;

        $r15 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        virtualinvoke $r15.<android.util.SparseLongArray: void put(int,long)>(i0, l1);

     label4:
        $r12 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        specialinvoke r0.<androidx.media3.transformer.MuxerWrapper: void resetAbortTimer()>();

        $r14 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        interfaceinvoke $r14.<androidx.media3.transformer.Muxer: void writeSampleData(int,java.nio.ByteBuffer,boolean,long)>(i2, r1, z0, l1);

        r0.<androidx.media3.transformer.MuxerWrapper: int previousTrackType> = i0;

        return 1;
    }

    public void endTrack(int)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int i0, $i1;
        android.util.SparseIntArray $r1, $r2;
        java.util.concurrent.ScheduledExecutorService $r3;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>;

        virtualinvoke $r1.<android.util.SparseIntArray: void delete(int)>(i0);

        $r2 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        if $i1 != 0 goto label1;

        $r3 = r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledExecutorService abortScheduledExecutorService>;

        interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.List shutdownNow()>();

     label1:
        return;
    }

    public void release(boolean) throws androidx.media3.transformer.Muxer$MuxerException
    {
        androidx.media3.transformer.MuxerWrapper r0;
        boolean z0;
        java.util.concurrent.ScheduledExecutorService $r1;
        androidx.media3.transformer.Muxer $r3, $r4;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.transformer.MuxerWrapper: boolean isReady> = 0;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledExecutorService abortScheduledExecutorService>;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.List shutdownNow()>();

        $r3 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        interfaceinvoke $r4.<androidx.media3.transformer.Muxer: void release(boolean)>(z0);

     label1:
        return;
    }

    public int getTrackCount()
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        $i0 = r0.<androidx.media3.transformer.MuxerWrapper: int trackCount>;

        return $i0;
    }

    public int getTrackAverageBitrate(int)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int i0, $i6;
        long l1, l2, $l5;
        android.util.SparseLongArray $r1, $r2;
        byte $b3, $b4;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        l1 = virtualinvoke $r1.<android.util.SparseLongArray: long get(int,long)>(i0, -1L);

        $r2 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToBytesWritten>;

        l2 = virtualinvoke $r2.<android.util.SparseLongArray: long get(int,long)>(i0, -1L);

        $b3 = l1 cmp 0L;

        if $b3 <= 0 goto label1;

        $b4 = l2 cmp 0L;

        if $b4 > 0 goto label2;

     label1:
        return -2147483647;

     label2:
        $l5 = staticinvoke <androidx.media3.common.util.Util: long scaleLargeTimestamp(long,long,long)>(l2, 8000000L, l1);

        $i6 = (int) $l5;

        return $i6;
    }

    public int getTrackSampleCount(int)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int i0, $i1;
        android.util.SparseIntArray $r1;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToSampleCount>;

        $i1 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        return $i1;
    }

    public long getDurationMs()
    {
        androidx.media3.transformer.MuxerWrapper r0;
        android.util.SparseLongArray $r1;
        long $l0, $l1;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        $l0 = staticinvoke <androidx.media3.common.util.Util: long maxValue(android.util.SparseLongArray)>($r1);

        $l1 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l0);

        return $l1;
    }

    private boolean canWriteSampleOfType(int)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        int i0, $i3, $i4;
        long l1, $l5, $l6, $l7, $l9;
        android.util.SparseLongArray $r1, $r3;
        byte $b2, $b8;
        boolean $z0, $z1, $z2;
        android.util.SparseIntArray $r2;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        l1 = virtualinvoke $r1.<android.util.SparseLongArray: long get(int,long)>(i0, -9223372036854775807L);

        $b2 = l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        $z0 = r0.<androidx.media3.transformer.MuxerWrapper: boolean isReady>;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseIntArray trackTypeToIndex>;

        $i3 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        if $i3 != 1 goto label4;

        return 1;

     label4:
        $i4 = r0.<androidx.media3.transformer.MuxerWrapper: int previousTrackType>;

        if i0 == $i4 goto label5;

        $r3 = r0.<androidx.media3.transformer.MuxerWrapper: android.util.SparseLongArray trackTypeToTimeUs>;

        $l9 = staticinvoke <androidx.media3.common.util.Util: long minValue(android.util.SparseLongArray)>($r3);

        r0.<androidx.media3.transformer.MuxerWrapper: long minTrackTimeUs> = $l9;

     label5:
        $l5 = r0.<androidx.media3.transformer.MuxerWrapper: long minTrackTimeUs>;

        $l7 = l1 - $l5;

        $l6 = <androidx.media3.transformer.MuxerWrapper: long MAX_TRACK_WRITE_AHEAD_US>;

        $b8 = $l7 cmp $l6;

        if $b8 > 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    private void resetAbortTimer()
    {
        androidx.media3.transformer.MuxerWrapper r0;
        long l0;
        androidx.media3.transformer.Muxer $r1;
        byte $b1;
        java.util.concurrent.ScheduledFuture $r2, $r6, $r7;
        java.util.concurrent.ScheduledExecutorService $r3;
        java.lang.Runnable $r4;
        java.util.concurrent.TimeUnit $r5;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        l0 = interfaceinvoke $r1.<androidx.media3.transformer.Muxer: long getMaxDelayBetweenSamplesMs()>();

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledFuture abortScheduledFuture>;

        if $r2 == null goto label2;

        $r7 = r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledFuture abortScheduledFuture>;

        interfaceinvoke $r7.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

     label2:
        $r3 = r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledExecutorService abortScheduledExecutorService>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.transformer.MuxerWrapper,long)>(r0, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.transformer.MuxerWrapper: void lambda$resetAbortTimer$0(long)>, methodtype: void __METHODTYPE__());

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r6 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r4, l0, $r5);

        r0.<androidx.media3.transformer.MuxerWrapper: java.util.concurrent.ScheduledFuture abortScheduledFuture> = $r6;

        return;
    }

    private void ensureMuxerInitialized() throws androidx.media3.transformer.Muxer$MuxerException
    {
        androidx.media3.transformer.MuxerWrapper r0;
        androidx.media3.transformer.Muxer $r1, $r7, $r10;
        java.lang.String $r2, $r8;
        android.os.ParcelFileDescriptor $r3, $r5;
        androidx.media3.transformer.Muxer$Factory $r6, $r9;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        $r1 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer>;

        if $r1 != null goto label2;

        $r2 = r0.<androidx.media3.transformer.MuxerWrapper: java.lang.String outputPath>;

        if $r2 == null goto label1;

        $r9 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        $r8 = r0.<androidx.media3.transformer.MuxerWrapper: java.lang.String outputPath>;

        $r10 = interfaceinvoke $r9.<androidx.media3.transformer.Muxer$Factory: androidx.media3.transformer.Muxer create(java.lang.String)>($r8);

        r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer> = $r10;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.transformer.MuxerWrapper: android.os.ParcelFileDescriptor outputParcelFileDescriptor>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r6 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer$Factory muxerFactory>;

        $r5 = r0.<androidx.media3.transformer.MuxerWrapper: android.os.ParcelFileDescriptor outputParcelFileDescriptor>;

        $r7 = interfaceinvoke $r6.<androidx.media3.transformer.Muxer$Factory: androidx.media3.transformer.Muxer create(android.os.ParcelFileDescriptor)>($r5);

        r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Muxer muxer> = $r7;

     label2:
        return;
    }

    private void lambda$resetAbortTimer$0(long)
    {
        androidx.media3.transformer.MuxerWrapper r0;
        long l0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        androidx.media3.transformer.Transformer$AsyncErrorListener $r3;
        java.lang.String $r7;
        androidx.media3.transformer.TransformationException $r8;

        r0 := @this: androidx.media3.transformer.MuxerWrapper;

        l0 := @parameter0: long;

        $z0 = r0.<androidx.media3.transformer.MuxerWrapper: boolean isAborted>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.media3.transformer.MuxerWrapper: boolean isAborted> = 1;

        $r3 = r0.<androidx.media3.transformer.MuxerWrapper: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener>;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No output sample written in the last ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" milliseconds. Aborting transformation.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r8 = staticinvoke <androidx.media3.transformer.TransformationException: androidx.media3.transformer.TransformationException createForMuxer(java.lang.Throwable,int)>($r1, 6001);

        interfaceinvoke $r3.<androidx.media3.transformer.Transformer$AsyncErrorListener: void onTransformationException(androidx.media3.transformer.TransformationException)>($r8);

        return;
    }

    static void <clinit>()
    {
        long $l0;

        $l0 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(500L);

        <androidx.media3.transformer.MuxerWrapper: long MAX_TRACK_WRITE_AHEAD_US> = $l0;

        return;
    }

