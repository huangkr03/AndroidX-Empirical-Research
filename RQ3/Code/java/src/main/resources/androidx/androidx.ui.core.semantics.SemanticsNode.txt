androidx.ui.core.semantics.SemanticsNode
<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode$Companion Companion>
<androidx.ui.core.semantics.SemanticsNode: int id>
<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration unmergedConfig>
<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode componentNode>
<androidx.ui.core.semantics.SemanticsNode: boolean dirty>
<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsOwner owner>
<androidx.ui.core.semantics.SemanticsNode: int lastIdentifier>
    public void <init>(int, androidx.ui.core.semantics.SemanticsConfiguration, androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        int i0;
        androidx.ui.core.semantics.SemanticsConfiguration r1;
        androidx.ui.core.ComponentNode r2;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.semantics.SemanticsConfiguration;

        r2 := @parameter2: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "unmergedConfig");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "componentNode");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.semantics.SemanticsNode: int id> = i0;

        r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration unmergedConfig> = r1;

        r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode componentNode> = r2;

        return;
    }

    public final int getId()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        int $i0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $i0 = r0.<androidx.ui.core.semantics.SemanticsNode: int id>;

        return $i0;
    }

    public final androidx.ui.core.semantics.SemanticsConfiguration getUnmergedConfig()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsConfiguration $r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r1 = r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration unmergedConfig>;

        return $r1;
    }

    public final androidx.ui.core.ComponentNode getComponentNode()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.ComponentNode $r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r1 = r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode componentNode>;

        return $r1;
    }

    public final void setComponentNode(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.ComponentNode r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode componentNode> = r1;

        return;
    }

    public void <init>(androidx.ui.core.semantics.SemanticsConfiguration, androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsConfiguration r1;
        androidx.ui.core.ComponentNode r2;
        androidx.ui.core.semantics.SemanticsNode$Companion $r3;
        int $i0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: androidx.ui.core.semantics.SemanticsConfiguration;

        r2 := @parameter1: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "unmergedConfig");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "componentNode");

        $r3 = <androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode$Companion Companion>;

        $i0 = virtualinvoke $r3.<androidx.ui.core.semantics.SemanticsNode$Companion: int generateNewId()>();

        specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: void <init>(int,androidx.ui.core.semantics.SemanticsConfiguration,androidx.ui.core.ComponentNode)>($i0, r1, r2);

        return;
    }

    public final androidx.ui.unit.IntPxSize getSize()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.ComponentNode $r2;
        androidx.ui.core.LayoutCoordinates $r3;
        androidx.ui.unit.IntPxSize $r4;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r2 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode getComponentNode()>();

        r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode access$requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r2);

        $r3 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutCoordinates getCoordinates()>();

        $r4 = interfaceinvoke $r3.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.IntPxSize getSize()>();

        return $r4;
    }

    public final androidx.ui.unit.PxBounds getBoundsInRoot()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.ComponentNode $r2;
        androidx.ui.core.LayoutCoordinates $r3;
        androidx.ui.unit.PxBounds $r4;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r2 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode getComponentNode()>();

        r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode access$requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r2);

        $r3 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutCoordinates getCoordinates()>();

        $r4 = staticinvoke <androidx.ui.core.LayoutCoordinatesKt: androidx.ui.unit.PxBounds getBoundsInRoot(androidx.ui.core.LayoutCoordinates)>($r3);

        return $r4;
    }

    public final androidx.ui.unit.PxBounds getGlobalBounds()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.ComponentNode $r2;
        androidx.ui.core.LayoutCoordinates $r3;
        androidx.ui.unit.PxBounds $r4;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r2 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode getComponentNode()>();

        r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode access$requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r2);

        $r3 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutCoordinates getCoordinates()>();

        $r4 = staticinvoke <androidx.ui.core.LayoutCoordinatesKt: androidx.ui.unit.PxBounds getGlobalBounds(androidx.ui.core.LayoutCoordinates)>($r3);

        return $r4;
    }

    public final androidx.ui.unit.PxPosition getGlobalPosition()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.LayoutCoordinates $r2;
        androidx.ui.core.ComponentNode $r3;
        androidx.ui.unit.PxPosition$Companion $r4;
        androidx.ui.unit.PxPosition $r5, $r6;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r3 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode getComponentNode()>();

        r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode access$requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r3);

        $r2 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutCoordinates getCoordinates()>();

        $r4 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        $r6 = interfaceinvoke $r2.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.PxPosition localToGlobal(androidx.ui.unit.PxPosition)>($r5);

        return $r6;
    }

    public final boolean isSemanticBoundary()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsConfiguration $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getUnmergedConfig()>();

        $z0 = virtualinvoke $r1.<androidx.ui.core.semantics.SemanticsConfiguration: boolean isSemanticBoundary()>();

        return $z0;
    }

    public final androidx.ui.core.semantics.SemanticsConfiguration getConfig()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsConfiguration $r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration buildMergedConfig$default(androidx.ui.core.semantics.SemanticsNode,androidx.ui.core.semantics.SemanticsNode,androidx.ui.core.semantics.SemanticsConfiguration,boolean,int,java.lang.Object)>(r0, null, null, 0, 7, null);

        return $r1;
    }

    private final androidx.ui.core.semantics.SemanticsConfiguration buildMergedConfig(androidx.ui.core.semantics.SemanticsNode, androidx.ui.core.semantics.SemanticsConfiguration, boolean)
    {
        androidx.ui.core.semantics.SemanticsNode r0, r1, r14;
        androidx.ui.core.semantics.SemanticsConfiguration r2, $r3, $r10, r12;
        boolean z0, z1, $z3, $z4, $z5, z6, z7, z8, $z9;
        java.util.List $r4;
        java.lang.Object $r5;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r11;
        java.lang.Throwable $r9;
        java.util.Iterator r13;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: androidx.ui.core.semantics.SemanticsNode;

        r2 := @parameter1: androidx.ui.core.semantics.SemanticsConfiguration;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label01;

        $z4 = specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: boolean getMergeAllDescendantsIntoThisNode()>();

        if $z4 == 0 goto label02;

     label01:
        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z1 = $z5;

        if r2 == null goto label04;

        if r1 != null goto label06;

     label04:
        z6 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: boolean isSemanticBoundary()>();

        z7 = 0;

        z8 = 0;

        if z6 != 0 goto label05;

        r11 = "Attempting to build a merged configuration starting from a node that is not a semantic boundary";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label05:
        $r3 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getUnmergedConfig()>();

        r12 = virtualinvoke $r3.<androidx.ui.core.semantics.SemanticsConfiguration: androidx.ui.core.semantics.SemanticsConfiguration copy()>();

        goto label07;

     label06:
        r12 = r2;

        $r10 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getUnmergedConfig()>();

        virtualinvoke r12.<androidx.ui.core.semantics.SemanticsConfiguration: void absorb$ui_platform_release(androidx.ui.core.semantics.SemanticsConfiguration,boolean)>($r10, z1);

     label07:
        $r4 = specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List unmergedChildren()>();

        r13 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z9 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label10;

        $r5 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.ui.core.semantics.SemanticsNode) $r5;

        $z3 = virtualinvoke r14.<androidx.ui.core.semantics.SemanticsNode: boolean isSemanticBoundary()>();

        if $z3 == 0 goto label09;

        if z1 != 0 goto label09;

        goto label08;

     label09:
        specialinvoke r14.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration buildMergedConfig(androidx.ui.core.semantics.SemanticsNode,androidx.ui.core.semantics.SemanticsConfiguration,boolean)>(r0, r12, z1);

        goto label08;

     label10:
        return r12;
    }

    static androidx.ui.core.semantics.SemanticsConfiguration buildMergedConfig$default(androidx.ui.core.semantics.SemanticsNode, androidx.ui.core.semantics.SemanticsNode, androidx.ui.core.semantics.SemanticsConfiguration, boolean, int, java.lang.Object)
    {
        androidx.ui.core.semantics.SemanticsNode r0, r3;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        androidx.ui.core.semantics.SemanticsConfiguration $r2, r4;
        boolean z0;

        r0 := @parameter0: androidx.ui.core.semantics.SemanticsNode;

        r3 := @parameter1: androidx.ui.core.semantics.SemanticsNode;

        r4 := @parameter2: androidx.ui.core.semantics.SemanticsConfiguration;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = (androidx.ui.core.semantics.SemanticsNode) null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = (androidx.ui.core.semantics.SemanticsConfiguration) null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        z0 = 0;

     label3:
        $r2 = specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration buildMergedConfig(androidx.ui.core.semantics.SemanticsNode,androidx.ui.core.semantics.SemanticsConfiguration,boolean)>(r3, r4, z0);

        return $r2;
    }

    private final boolean getMergeAllDescendantsIntoThisNode()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsConfiguration $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getUnmergedConfig()>();

        $z0 = virtualinvoke $r1.<androidx.ui.core.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        return $z0;
    }

    private final java.util.List unmergedChildren()
    {
        androidx.ui.core.semantics.SemanticsNode r0, $r7;
        java.util.List r1, r2, $r10, r11, $r12;
        java.util.ArrayList $r3;
        androidx.ui.core.ComponentNode $r4, $r5;
        java.lang.Object $r6;
        boolean z1, $z2;
        androidx.ui.core.LayoutNode r8, r9;
        java.util.Iterator r13;
        androidx.ui.core.semantics.SemanticsWrapper r14;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        z1 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r3;

        $r4 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode getComponentNode()>();

        r8 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode access$findFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r4);

        r9 = r8;

        if r9 != null goto label1;

        $r10 = (java.util.List) null;

        goto label2;

     label1:
        $r5 = (androidx.ui.core.ComponentNode) r9;

        $r10 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: java.util.List access$findOneLayerOfSemanticsWrappers(androidx.ui.core.ComponentNode)>($r5);

     label2:
        r11 = $r10;

        if r11 != null goto label3;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label4;

     label3:
        $r12 = r11;

     label4:
        r2 = $r12;

        r13 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.ui.core.semantics.SemanticsWrapper) $r6;

        $r7 = virtualinvoke r14.<androidx.ui.core.semantics.SemanticsWrapper: androidx.ui.core.semantics.SemanticsNode semanticsNode()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label5;

     label6:
        return r1;
    }

    public final java.util.List getChildren()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        boolean z0, z1, z3;
        java.util.List $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        z0 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: boolean isSemanticBoundary()>();

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        r5 = "Requested merged children from a node that is not a semantic boundary";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label1:
        $r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNode: java.util.List buildMergedChildren$default(androidx.ui.core.semantics.SemanticsNode,java.util.List,int,java.lang.Object)>(r0, null, 1, null);

        return $r1;
    }

    private final java.util.List buildMergedChildren(java.util.List)
    {
        androidx.ui.core.semantics.SemanticsNode r0, r12;
        java.util.List r1, r2, $r4, $r8, r9, $r10;
        java.util.Collection r3;
        boolean z0, $z1, $z2, z4, $z5;
        java.lang.Object $r5;
        java.util.ArrayList $r7;
        java.util.Iterator r11;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: java.util.List;

        $z1 = specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: boolean getMergeAllDescendantsIntoThisNode()>();

        if $z1 == 0 goto label1;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r8;

     label1:
        r9 = r1;

        if r9 != null goto label2;

        z4 = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r10 = (java.util.List) $r7;

        goto label3;

     label2:
        $r10 = r9;

     label3:
        r2 = $r10;

        $r4 = specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List unmergedChildren()>();

        r11 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (androidx.ui.core.semantics.SemanticsNode) $r5;

        $z2 = virtualinvoke r12.<androidx.ui.core.semantics.SemanticsNode: boolean isSemanticBoundary()>();

        if $z2 == 0 goto label5;

        r3 = (java.util.Collection) r2;

        z0 = 0;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r12);

        goto label6;

     label5:
        specialinvoke r12.<androidx.ui.core.semantics.SemanticsNode: java.util.List buildMergedChildren(java.util.List)>(r2);

     label6:
        goto label4;

     label7:
        return r2;
    }

    static java.util.List buildMergedChildren$default(androidx.ui.core.semantics.SemanticsNode, java.util.List, int, java.lang.Object)
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.List $r2, r3;

        r0 := @parameter0: androidx.ui.core.semantics.SemanticsNode;

        r3 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = (java.util.List) null;

     label1:
        $r2 = specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List buildMergedChildren(java.util.List)>(r3);

        return $r2;
    }

    public final boolean getHasChildren()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        java.util.Collection r1;
        boolean z0, $z1, $z2;
        java.util.List $r2;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r2 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        r1 = (java.util.Collection) $r2;

        z0 = 0;

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private final void visitChildren(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.semantics.SemanticsNode r0, r5;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r7;
        java.util.List $r6;
        boolean $z2, $z3;
        java.lang.Boolean $r8;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r6 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        $r2 = (java.lang.Iterable) $r6;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.core.semantics.SemanticsNode) r4;

        $r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r8 = (java.lang.Boolean) $r7;

        $z3 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public final boolean visitDescendants$ui_platform_release(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.semantics.SemanticsNode r0, r5;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r7;
        java.util.List $r6;
        boolean $z2, $z3, $z4;
        java.lang.Boolean $r8;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "visitor");

        $r6 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        $r2 = (java.lang.Iterable) $r6;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.core.semantics.SemanticsNode) r4;

        $r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r8 = (java.lang.Boolean) $r7;

        $z3 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label2;

        $z4 = virtualinvoke r5.<androidx.ui.core.semantics.SemanticsNode: boolean visitDescendants$ui_platform_release(kotlin.jvm.functions.Function1)>(r1);

        if $z4 != 0 goto label3;

     label2:
        return 0;

     label3:
        goto label1;

     label4:
        return 1;
    }

    public final androidx.ui.core.semantics.SemanticsOwner getOwner$ui_platform_release()
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsOwner $r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r1 = r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsOwner owner>;

        return $r1;
    }

    public final void setOwner$ui_platform_release(androidx.ui.core.semantics.SemanticsOwner)
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.core.semantics.SemanticsOwner r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: androidx.ui.core.semantics.SemanticsOwner;

        r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsOwner owner> = r1;

        return;
    }

    public final androidx.ui.core.semantics.SemanticsNode getParent()
    {
        androidx.ui.core.semantics.SemanticsNode r0, $r12;
        androidx.ui.core.ComponentNode r1, r2, $r3, r8, $r9;
        androidx.ui.core.semantics.SemanticsNode$parent$node$1 $r4;
        kotlin.jvm.functions.Function1 $r5, $r7;
        androidx.ui.core.semantics.SemanticsNode$parent$node$2 $r6;
        androidx.ui.core.semantics.SemanticsWrapper $r10, r11;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        $r3 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.ComponentNode getComponentNode()>();

        $r4 = new androidx.ui.core.semantics.SemanticsNode$parent$node$1;

        specialinvoke $r4.<androidx.ui.core.semantics.SemanticsNode$parent$node$1: void <init>()>();

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r8 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.ComponentNode findClosestParentNode(androidx.ui.core.ComponentNode,kotlin.jvm.functions.Function1)>($r3, $r5);

        if r8 != null goto label1;

        $r9 = (androidx.ui.core.ComponentNode) null;

        goto label2;

     label1:
        $r6 = new androidx.ui.core.semantics.SemanticsNode$parent$node$2;

        specialinvoke $r6.<androidx.ui.core.semantics.SemanticsNode$parent$node$2: void <init>()>();

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r9 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.ComponentNode access$findHighestConsecutiveAncestor(androidx.ui.core.ComponentNode,kotlin.jvm.functions.Function1)>(r8, $r7);

     label2:
        r1 = $r9;

        r2 = r1;

        if r2 != null goto label3;

        $r10 = (androidx.ui.core.semantics.SemanticsWrapper) null;

        goto label4;

     label3:
        $r10 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>(r2);

     label4:
        r11 = $r10;

        if r11 != null goto label5;

        $r12 = (androidx.ui.core.semantics.SemanticsNode) null;

        goto label6;

     label5:
        $r12 = virtualinvoke r11.<androidx.ui.core.semantics.SemanticsWrapper: androidx.ui.core.semantics.SemanticsNode semanticsNode()>();

     label6:
        return $r12;
    }

    public final boolean canPerformAction$ui_platform_release(androidx.ui.semantics.SemanticsPropertyKey)
    {
        androidx.ui.core.semantics.SemanticsNode r0;
        androidx.ui.semantics.SemanticsPropertyKey r1;
        androidx.ui.core.semantics.SemanticsConfiguration $r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter0: androidx.ui.semantics.SemanticsPropertyKey;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "action");

        $r2 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $z0 = virtualinvoke $r2.<androidx.ui.core.semantics.SemanticsConfiguration: boolean contains(androidx.ui.semantics.SemanticsPropertyKey)>(r1);

        return $z0;
    }

    public static final void access$setLastIdentifier$cp$s2081234671(int)
    {
        int i0;

        i0 := @parameter0: int;

        <androidx.ui.core.semantics.SemanticsNode: int lastIdentifier> = i0;

        return;
    }

    public static final int access$getLastIdentifier$cp$s2081234671()
    {
        int $i0;

        $i0 = <androidx.ui.core.semantics.SemanticsNode: int lastIdentifier>;

        return $i0;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.semantics.SemanticsNode$Companion $r0;

        $r0 = new androidx.ui.core.semantics.SemanticsNode$Companion;

        specialinvoke $r0.<androidx.ui.core.semantics.SemanticsNode$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode$Companion Companion> = $r0;

        <androidx.ui.core.semantics.SemanticsNode: int lastIdentifier> = 2;

        return;
    }

androidx.ui.core.semantics.SemanticsNode$Companion
    private void <init>()
    {
        androidx.ui.core.semantics.SemanticsNode$Companion r0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int generateNewId()
    {
        androidx.ui.core.semantics.SemanticsNode$Companion r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$Companion;

        r1 = r0;

        $i0 = staticinvoke <androidx.ui.core.semantics.SemanticsNode: int access$getLastIdentifier$cp$s2081234671()>();

        $i1 = $i0 + 1;

        staticinvoke <androidx.ui.core.semantics.SemanticsNode: void access$setLastIdentifier$cp$s2081234671(int)>($i1);

        $i2 = staticinvoke <androidx.ui.core.semantics.SemanticsNode: int access$getLastIdentifier$cp$s2081234671()>();

        return $i2;
    }

    public final androidx.ui.core.semantics.SemanticsNode root$ui_platform_release(androidx.ui.core.semantics.SemanticsOwner, androidx.ui.core.semantics.SemanticsConfiguration, androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.semantics.SemanticsNode$Companion r0;
        androidx.ui.core.semantics.SemanticsOwner r1;
        androidx.ui.core.semantics.SemanticsConfiguration r2;
        androidx.ui.core.ComponentNode r3;
        androidx.ui.core.semantics.SemanticsNode r4, $r5;
        int $i0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$Companion;

        r1 := @parameter0: androidx.ui.core.semantics.SemanticsOwner;

        r2 := @parameter1: androidx.ui.core.semantics.SemanticsConfiguration;

        r3 := @parameter2: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "componentNode");

        $r5 = new androidx.ui.core.semantics.SemanticsNode;

        $i0 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode$Companion: int generateNewId()>();

        specialinvoke $r5.<androidx.ui.core.semantics.SemanticsNode: void <init>(int,androidx.ui.core.semantics.SemanticsConfiguration,androidx.ui.core.ComponentNode)>($i0, r2, r3);

        r4 = $r5;

        virtualinvoke r4.<androidx.ui.core.semantics.SemanticsNode: void setOwner$ui_platform_release(androidx.ui.core.semantics.SemanticsOwner)>(r1);

        return r4;
    }

    public final void debugResetSemanticsIdCounter$ui_platform_release()
    {
        androidx.ui.core.semantics.SemanticsNode$Companion r0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$Companion;

        staticinvoke <androidx.ui.core.semantics.SemanticsNode: void access$setLastIdentifier$cp$s2081234671(int)>(0);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.semantics.SemanticsNode$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.semantics.SemanticsNode$Companion: void <init>()>();

        return;
    }

androidx.ui.core.semantics.SemanticsNode$parent$node$1
    void <init>()
    {
        androidx.ui.core.semantics.SemanticsNode$parent$node$1 r0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$parent$node$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final boolean invoke(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.semantics.SemanticsNode$parent$node$1 r0;
        androidx.ui.core.ComponentNode r1;
        androidx.ui.core.semantics.SemanticsWrapper $r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$parent$node$1;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.semantics.SemanticsNode$parent$node$1 r0;
        java.lang.Object r1;
        androidx.ui.core.ComponentNode $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$parent$node$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.ComponentNode) r1;

        $z0 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode$parent$node$1: boolean invoke(androidx.ui.core.ComponentNode)>($r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

androidx.ui.core.semantics.SemanticsNode$parent$node$2
    void <init>()
    {
        androidx.ui.core.semantics.SemanticsNode$parent$node$2 r0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$parent$node$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final boolean invoke(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.semantics.SemanticsNode$parent$node$2 r0;
        androidx.ui.core.ComponentNode r1;
        androidx.ui.core.semantics.SemanticsWrapper $r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$parent$node$2;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.semantics.SemanticsNode$parent$node$2 r0;
        java.lang.Object r1;
        androidx.ui.core.ComponentNode $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: androidx.ui.core.semantics.SemanticsNode$parent$node$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.ComponentNode) r1;

        $z0 = virtualinvoke r0.<androidx.ui.core.semantics.SemanticsNode$parent$node$2: boolean invoke(androidx.ui.core.ComponentNode)>($r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

