androidx.constraintlayout.core.motion.utils.MonotonicCurveFit
<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: java.lang.String TAG>
<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>
<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>
<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>
<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: boolean mExtrapolate>
<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>
    public void <init>(double[], double[][])
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        double[] r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        double[][] r2, r3, r4;
        int i0, i1, $i2, $i3, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, d27;
        byte $b4, $b6;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[][];

        specialinvoke r0.<androidx.constraintlayout.core.motion.utils.CurveFit: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: boolean mExtrapolate> = 1;

        i0 = lengthof r1;

        $r5 = r2[0];

        i1 = lengthof $r5;

        $r6 = newarray (double)[i1];

        r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp> = $r6;

        $i2 = i0 - 1;

        r3 = newmultiarray (double)[$i2][i1];

        r4 = newmultiarray (double)[i0][i1];

        i15 = 0;

     label01:
        if i15 >= i1 goto label06;

        i16 = 0;

     label02:
        $i9 = i0 - 1;

        if i16 >= $i9 goto label05;

        $i12 = i16 + 1;

        $d16 = r1[$i12];

        $d15 = r1[i16];

        d26 = $d16 - $d15;

        $r22 = r3[i16];

        $i13 = i16 + 1;

        $r20 = r2[$i13];

        $d18 = $r20[i15];

        $r21 = r2[i16];

        $d17 = $r21[i15];

        $d19 = $d18 - $d17;

        $d20 = $d19 / d26;

        $r22[i15] = $d20;

        if i16 != 0 goto label03;

        $r27 = r4[i16];

        $r26 = r3[i16];

        $d25 = $r26[i15];

        $r27[i15] = $d25;

        goto label04;

     label03:
        $r25 = r4[i16];

        $i14 = i16 - 1;

        $r23 = r3[$i14];

        $d22 = $r23[i15];

        $r24 = r3[i16];

        $d21 = $r24[i15];

        $d23 = $d22 + $d21;

        $d24 = $d23 * 0.5;

        $r25[i15] = $d24;

     label04:
        i16 = i16 + 1;

        goto label02;

     label05:
        $i10 = i0 - 1;

        $r19 = r4[$i10];

        $i11 = i0 - 2;

        $r18 = r3[$i11];

        $d14 = $r18[i15];

        $r19[i15] = $d14;

        i15 = i15 + 1;

        goto label01;

     label06:
        i17 = 0;

     label07:
        $i3 = i0 - 1;

        if i17 >= $i3 goto label12;

        i18 = 0;

     label08:
        if i18 >= i1 goto label11;

        $r7 = r3[i17];

        $d3 = $r7[i18];

        $b4 = $d3 cmpl 0.0;

        if $b4 != 0 goto label09;

        $r16 = r4[i17];

        $r16[i18] = 0.0;

        $i8 = i17 + 1;

        $r17 = r4[$i8];

        $r17[i18] = 0.0;

        goto label10;

     label09:
        $r8 = r4[i17];

        $d5 = $r8[i18];

        $r9 = r3[i17];

        $d4 = $r9[i18];

        d27 = $d5 / $d4;

        $i5 = i17 + 1;

        $r10 = r4[$i5];

        $d7 = $r10[i18];

        $r11 = r3[i17];

        $d6 = $r11[i18];

        d0 = $d7 / $d6;

        d1 = staticinvoke <java.lang.Math: double hypot(double,double)>(d27, d0);

        $b6 = d1 cmpl 9.0;

        if $b6 <= 0 goto label10;

        d2 = 3.0 / d1;

        $r13 = r4[i17];

        $d9 = d2 * d27;

        $r12 = r3[i17];

        $d8 = $r12[i18];

        $d10 = $d9 * $d8;

        $r13[i18] = $d10;

        $i7 = i17 + 1;

        $r15 = r4[$i7];

        $d12 = d2 * d0;

        $r14 = r3[i17];

        $d11 = $r14[i18];

        $d13 = $d12 * $d11;

        $r15[i18] = $d13;

     label10:
        i18 = i18 + 1;

        goto label08;

     label11:
        i17 = i17 + 1;

        goto label07;

     label12:
        r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT> = r1;

        r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY> = r2;

        r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent> = r4;

        return;
    }

    public void getPos(double, double[])
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34;
        double[] r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39;
        int i0, i1, $i3, $i6, $i8, $i9, $i10, $i11, $i13, $i15, $i16, $i17, i18, i19, i20, i21, i22, $i23, i24, i25;
        double[][] $r3, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r30, $r36;
        boolean $z0;
        byte $b2, $b4, $b5, $b7, $b12, $b14;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        i0 = lengthof $r2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r4 = $r3[0];

        i1 = lengthof $r4;

        $z0 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: boolean mExtrapolate>;

        if $z0 == 0 goto label06;

        $r26 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d18 = $r26[0];

        $b12 = d0 cmpg $d18;

        if $b12 > 0 goto label03;

        $r34 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d27 = $r34[0];

        $r35 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: void getSlope(double,double[])>($d27, $r35);

        i18 = 0;

     label01:
        if i18 >= i1 goto label02;

        $r36 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r37 = $r36[0];

        $d32 = $r37[i18];

        $r38 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d28 = $r38[0];

        $d30 = d0 - $d28;

        $r39 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        $d29 = $r39[i18];

        $d31 = $d30 * $d29;

        $d33 = $d32 + $d31;

        r1[i18] = $d33;

        i18 = i18 + 1;

        goto label01;

     label02:
        return;

     label03:
        $r27 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i13 = i0 - 1;

        $d19 = $r27[$i13];

        $b14 = d0 cmpl $d19;

        if $b14 < 0 goto label12;

        $r28 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i15 = i0 - 1;

        $d20 = $r28[$i15];

        $r29 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: void getSlope(double,double[])>($d20, $r29);

        i19 = 0;

     label04:
        if i19 >= i1 goto label05;

        $r30 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i16 = i0 - 1;

        $r31 = $r30[$i16];

        $d25 = $r31[i19];

        $r32 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i17 = i0 - 1;

        $d21 = $r32[$i17];

        $d23 = d0 - $d21;

        $r33 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        $d22 = $r33[i19];

        $d24 = $d23 * $d22;

        $d26 = $d25 + $d24;

        r1[i19] = $d26;

        i19 = i19 + 1;

        goto label04;

     label05:
        return;

     label06:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d6 = $r5[0];

        $b2 = d0 cmpg $d6;

        if $b2 > 0 goto label09;

        i20 = 0;

     label07:
        if i20 >= i1 goto label08;

        $r24 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r25 = $r24[0];

        $d17 = $r25[i20];

        r1[i20] = $d17;

        i20 = i20 + 1;

        goto label07;

     label08:
        return;

     label09:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i3 = i0 - 1;

        $d7 = $r6[$i3];

        $b4 = d0 cmpl $d7;

        if $b4 < 0 goto label12;

        i21 = 0;

     label10:
        if i21 >= i1 goto label11;

        $r22 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i11 = i0 - 1;

        $r23 = $r22[$i11];

        $d16 = $r23[i21];

        r1[i21] = $d16;

        i21 = i21 + 1;

        goto label10;

     label11:
        return;

     label12:
        i22 = 0;

     label13:
        $i23 = i0 - 1;

        if i22 >= $i23 goto label19;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d8 = $r7[i22];

        $b5 = d0 cmpl $d8;

        if $b5 != 0 goto label15;

        i24 = 0;

     label14:
        if i24 >= i1 goto label15;

        $r20 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r21 = $r20[i22];

        $d15 = $r21[i24];

        r1[i24] = $d15;

        i24 = i24 + 1;

        goto label14;

     label15:
        $r8 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i6 = i22 + 1;

        $d9 = $r8[$i6];

        $b7 = d0 cmpg $d9;

        if $b7 >= 0 goto label18;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i8 = i22 + 1;

        $d11 = $r9[$i8];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d10 = $r10[i22];

        d34 = $d11 - $d10;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d12 = $r11[i22];

        $d13 = d0 - $d12;

        d1 = $d13 / d34;

        i25 = 0;

     label16:
        if i25 >= i1 goto label17;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r13 = $r12[i22];

        d2 = $r13[i25];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i9 = i22 + 1;

        $r15 = $r14[$i9];

        d3 = $r15[i25];

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $r17 = $r16[i22];

        d4 = $r17[i25];

        $r18 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $i10 = i22 + 1;

        $r19 = $r18[$i10];

        d5 = $r19[i25];

        $d14 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double interpolate(double,double,double,double,double,double)>(d34, d1, d2, d3, d4, d5);

        r1[i25] = $d14;

        i25 = i25 + 1;

        goto label16;

     label17:
        return;

     label18:
        i22 = i22 + 1;

        goto label13;

     label19:
        return;
    }

    public void getPos(double, float[])
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34;
        float[] r1;
        int i0, i1, $i3, $i6, $i8, $i9, $i10, $i11, $i13, $i15, $i16, $i17, i18, i19, i20, i21, i22, $i23, i24, i25;
        double[] $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39;
        double[][] $r3, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r30, $r36;
        boolean $z0;
        byte $b2, $b4, $b5, $b7, $b12, $b14;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        d0 := @parameter0: double;

        r1 := @parameter1: float[];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        i0 = lengthof $r2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r4 = $r3[0];

        i1 = lengthof $r4;

        $z0 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: boolean mExtrapolate>;

        if $z0 == 0 goto label06;

        $r26 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d18 = $r26[0];

        $b12 = d0 cmpg $d18;

        if $b12 > 0 goto label03;

        $r34 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d27 = $r34[0];

        $r35 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: void getSlope(double,double[])>($d27, $r35);

        i18 = 0;

     label01:
        if i18 >= i1 goto label02;

        $r36 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r37 = $r36[0];

        $d32 = $r37[i18];

        $r38 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d28 = $r38[0];

        $d30 = d0 - $d28;

        $r39 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        $d29 = $r39[i18];

        $d31 = $d30 * $d29;

        $d33 = $d32 + $d31;

        $f5 = (float) $d33;

        r1[i18] = $f5;

        i18 = i18 + 1;

        goto label01;

     label02:
        return;

     label03:
        $r27 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i13 = i0 - 1;

        $d19 = $r27[$i13];

        $b14 = d0 cmpl $d19;

        if $b14 < 0 goto label12;

        $r28 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i15 = i0 - 1;

        $d20 = $r28[$i15];

        $r29 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: void getSlope(double,double[])>($d20, $r29);

        i19 = 0;

     label04:
        if i19 >= i1 goto label05;

        $r30 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i16 = i0 - 1;

        $r31 = $r30[$i16];

        $d25 = $r31[i19];

        $r32 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i17 = i0 - 1;

        $d21 = $r32[$i17];

        $d23 = d0 - $d21;

        $r33 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mSlopeTemp>;

        $d22 = $r33[i19];

        $d24 = $d23 * $d22;

        $d26 = $d25 + $d24;

        $f4 = (float) $d26;

        r1[i19] = $f4;

        i19 = i19 + 1;

        goto label04;

     label05:
        return;

     label06:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d6 = $r5[0];

        $b2 = d0 cmpg $d6;

        if $b2 > 0 goto label09;

        i20 = 0;

     label07:
        if i20 >= i1 goto label08;

        $r24 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r25 = $r24[0];

        $d17 = $r25[i20];

        $f3 = (float) $d17;

        r1[i20] = $f3;

        i20 = i20 + 1;

        goto label07;

     label08:
        return;

     label09:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i3 = i0 - 1;

        $d7 = $r6[$i3];

        $b4 = d0 cmpl $d7;

        if $b4 < 0 goto label12;

        i21 = 0;

     label10:
        if i21 >= i1 goto label11;

        $r22 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i11 = i0 - 1;

        $r23 = $r22[$i11];

        $d16 = $r23[i21];

        $f2 = (float) $d16;

        r1[i21] = $f2;

        i21 = i21 + 1;

        goto label10;

     label11:
        return;

     label12:
        i22 = 0;

     label13:
        $i23 = i0 - 1;

        if i22 >= $i23 goto label19;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d8 = $r7[i22];

        $b5 = d0 cmpl $d8;

        if $b5 != 0 goto label15;

        i24 = 0;

     label14:
        if i24 >= i1 goto label15;

        $r20 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r21 = $r20[i22];

        $d15 = $r21[i24];

        $f1 = (float) $d15;

        r1[i24] = $f1;

        i24 = i24 + 1;

        goto label14;

     label15:
        $r8 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i6 = i22 + 1;

        $d9 = $r8[$i6];

        $b7 = d0 cmpg $d9;

        if $b7 >= 0 goto label18;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i8 = i22 + 1;

        $d11 = $r9[$i8];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d10 = $r10[i22];

        d34 = $d11 - $d10;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d12 = $r11[i22];

        $d13 = d0 - $d12;

        d1 = $d13 / d34;

        i25 = 0;

     label16:
        if i25 >= i1 goto label17;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r13 = $r12[i22];

        d2 = $r13[i25];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i9 = i22 + 1;

        $r15 = $r14[$i9];

        d3 = $r15[i25];

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $r17 = $r16[i22];

        d4 = $r17[i25];

        $r18 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $i10 = i22 + 1;

        $r19 = $r18[$i10];

        d5 = $r19[i25];

        $d14 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double interpolate(double,double,double,double,double,double)>(d34, d1, d2, d3, d4, d5);

        $f0 = (float) $d14;

        r1[i25] = $f0;

        i25 = i25 + 1;

        goto label16;

     label17:
        return;

     label18:
        i22 = i22 + 1;

        goto label13;

     label19:
        return;
    }

    public double getPos(double, int)
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34;
        int i0, i1, $i3, $i6, $i8, $i9, $i10, $i11, $i13, $i15, $i16, $i17, i18, $i19;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32;
        boolean $z0;
        byte $b2, $b4, $b5, $b7, $b12, $b14;
        double[][] $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r25, $r29;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        i1 = lengthof $r1;

        $z0 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: boolean mExtrapolate>;

        if $z0 == 0 goto label2;

        $r23 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d19 = $r23[0];

        $b12 = d0 cmpg $d19;

        if $b12 > 0 goto label1;

        $r29 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r30 = $r29[0];

        $d30 = $r30[i0];

        $r31 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d28 = $r31[0];

        $d31 = d0 - $d28;

        $r32 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d29 = $r32[0];

        $d32 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getSlope(double,int)>($d29, i0);

        $d33 = $d31 * $d32;

        $d34 = $d30 + $d33;

        return $d34;

     label1:
        $r24 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i13 = i1 - 1;

        $d20 = $r24[$i13];

        $b14 = d0 cmpl $d20;

        if $b14 < 0 goto label4;

        $r25 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i15 = i1 - 1;

        $r26 = $r25[$i15];

        $d23 = $r26[i0];

        $r27 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i16 = i1 - 1;

        $d21 = $r27[$i16];

        $d24 = d0 - $d21;

        $r28 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i17 = i1 - 1;

        $d22 = $r28[$i17];

        $d25 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getSlope(double,int)>($d22, i0);

        $d26 = $d24 * $d25;

        $d27 = $d23 + $d26;

        return $d27;

     label2:
        $r2 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d7 = $r2[0];

        $b2 = d0 cmpg $d7;

        if $b2 > 0 goto label3;

        $r21 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r22 = $r21[0];

        $d18 = $r22[i0];

        return $d18;

     label3:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i3 = i1 - 1;

        $d8 = $r3[$i3];

        $b4 = d0 cmpl $d8;

        if $b4 < 0 goto label4;

        $r19 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i11 = i1 - 1;

        $r20 = $r19[$i11];

        $d17 = $r20[i0];

        return $d17;

     label4:
        i18 = 0;

     label5:
        $i19 = i1 - 1;

        if i18 >= $i19 goto label8;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d9 = $r4[i18];

        $b5 = d0 cmpl $d9;

        if $b5 != 0 goto label6;

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r18 = $r17[i18];

        $d16 = $r18[i0];

        return $d16;

     label6:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i6 = i18 + 1;

        $d10 = $r5[$i6];

        $b7 = d0 cmpg $d10;

        if $b7 >= 0 goto label7;

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i8 = i18 + 1;

        $d12 = $r6[$i8];

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d11 = $r7[i18];

        d1 = $d12 - $d11;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d13 = $r8[i18];

        $d14 = d0 - $d13;

        d2 = $d14 / d1;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r10 = $r9[i18];

        d3 = $r10[i0];

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i9 = i18 + 1;

        $r12 = $r11[$i9];

        d4 = $r12[i0];

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $r14 = $r13[i18];

        d5 = $r14[i0];

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $i10 = i18 + 1;

        $r16 = $r15[$i10];

        d6 = $r16[i0];

        $d15 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double interpolate(double,double,double,double,double,double)>(d1, d2, d3, d4, d5, d6);

        return $d15;

     label7:
        i18 = i18 + 1;

        goto label5;

     label8:
        return 0.0;
    }

    public void getSlope(double, double[])
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        double[] r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r16, $r18, $r19, $r20;
        int i0, i1, $i3, $i5, $i7, $i8, $i9, $i10, i11, $i12, i13;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15;
        double[][] $r3, $r11, $r13, $r15, $r17;
        byte $b2, $b4, $b6;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        d15 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        i0 = lengthof $r2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r4 = $r3[0];

        i1 = lengthof $r4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d6 = $r5[0];

        $b2 = d15 cmpg $d6;

        if $b2 > 0 goto label1;

        $r20 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        d15 = $r20[0];

        goto label2;

     label1:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i3 = i0 - 1;

        $d7 = $r6[$i3];

        $b4 = d15 cmpl $d7;

        if $b4 < 0 goto label2;

        $r19 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i10 = i0 - 1;

        d15 = $r19[$i10];

     label2:
        i11 = 0;

     label3:
        $i12 = i0 - 1;

        if i11 >= $i12 goto label7;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i5 = i11 + 1;

        $d8 = $r7[$i5];

        $b6 = d15 cmpg $d8;

        if $b6 > 0 goto label6;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i7 = i11 + 1;

        $d10 = $r8[$i7];

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d9 = $r9[i11];

        d0 = $d10 - $d9;

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d11 = $r10[i11];

        $d12 = d15 - $d11;

        d1 = $d12 / d0;

        i13 = 0;

     label4:
        if i13 >= i1 goto label5;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r12 = $r11[i11];

        d2 = $r12[i13];

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i8 = i11 + 1;

        $r14 = $r13[$i8];

        d3 = $r14[i13];

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $r16 = $r15[i11];

        d4 = $r16[i13];

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $i9 = i11 + 1;

        $r18 = $r17[$i9];

        d5 = $r18[i13];

        $d13 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double diff(double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5);

        $d14 = $d13 / d0;

        r1[i13] = $d14;

        i13 = i13 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        i11 = i11 + 1;

        goto label3;

     label7:
        return;
    }

    public double getSlope(double, int)
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        int i0, i1, $i3, $i5, $i7, $i8, $i9, $i10, i11, $i12;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r13, $r15, $r16, $r17;
        byte $b2, $b4, $b6;
        double[][] $r8, $r10, $r12, $r14;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        d15 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        i1 = lengthof $r1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d6 = $r2[0];

        $b2 = d15 cmpg $d6;

        if $b2 >= 0 goto label1;

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        d15 = $r17[0];

        goto label2;

     label1:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i3 = i1 - 1;

        $d7 = $r3[$i3];

        $b4 = d15 cmpl $d7;

        if $b4 < 0 goto label2;

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i10 = i1 - 1;

        d15 = $r16[$i10];

     label2:
        i11 = 0;

     label3:
        $i12 = i1 - 1;

        if i11 >= $i12 goto label5;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i5 = i11 + 1;

        $d8 = $r4[$i5];

        $b6 = d15 cmpg $d8;

        if $b6 > 0 goto label4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $i7 = i11 + 1;

        $d10 = $r5[$i7];

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d9 = $r6[i11];

        d0 = $d10 - $d9;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        $d11 = $r7[i11];

        $d12 = d15 - $d11;

        d1 = $d12 / d0;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $r9 = $r8[i11];

        d2 = $r9[i0];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mY>;

        $i8 = i11 + 1;

        $r11 = $r10[$i8];

        d3 = $r11[i0];

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $r13 = $r12[i11];

        d4 = $r13[i0];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[][] mTangent>;

        $i9 = i11 + 1;

        $r15 = $r14[$i9];

        d5 = $r15[i0];

        $d13 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double diff(double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5);

        $d14 = $d13 / d0;

        return $d14;

     label4:
        i11 = i11 + 1;

        goto label3;

     label5:
        return 0.0;
    }

    public double[] getTimePoints()
    {
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r0;
        double[] $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double[] mT>;

        return $r1;
    }

    private static double interpolate(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 = d1 * d1;

        d7 = d6 * d1;

        $d8 = -2.0 * d7;

        $d11 = $d8 * d3;

        $d9 = 3.0 * d6;

        $d10 = $d9 * d3;

        $d14 = $d11 + $d10;

        $d12 = 2.0 * d7;

        $d13 = $d12 * d2;

        $d17 = $d14 + $d13;

        $d15 = 3.0 * d6;

        $d16 = $d15 * d2;

        $d18 = $d17 - $d16;

        $d21 = $d18 + d2;

        $d19 = d0 * d5;

        $d20 = $d19 * d7;

        $d24 = $d21 + $d20;

        $d22 = d0 * d4;

        $d23 = $d22 * d7;

        $d27 = $d24 + $d23;

        $d25 = d0 * d5;

        $d26 = $d25 * d6;

        $d31 = $d27 - $d26;

        $d28 = 2.0 * d0;

        $d29 = $d28 * d4;

        $d30 = $d29 * d6;

        $d34 = $d31 - $d30;

        $d32 = d0 * d4;

        $d33 = $d32 * d1;

        $d35 = $d34 + $d33;

        return $d35;
    }

    private static double diff(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 = d1 * d1;

        $d7 = -6.0 * d6;

        $d10 = $d7 * d3;

        $d8 = 6.0 * d1;

        $d9 = $d8 * d3;

        $d13 = $d10 + $d9;

        $d11 = 6.0 * d6;

        $d12 = $d11 * d2;

        $d16 = $d13 + $d12;

        $d14 = 6.0 * d1;

        $d15 = $d14 * d2;

        $d20 = $d16 - $d15;

        $d17 = 3.0 * d0;

        $d18 = $d17 * d5;

        $d19 = $d18 * d6;

        $d24 = $d20 + $d19;

        $d21 = 3.0 * d0;

        $d22 = $d21 * d4;

        $d23 = $d22 * d6;

        $d28 = $d24 + $d23;

        $d25 = 2.0 * d0;

        $d26 = $d25 * d5;

        $d27 = $d26 * d1;

        $d32 = $d28 - $d27;

        $d29 = 4.0 * d0;

        $d30 = $d29 * d4;

        $d31 = $d30 * d1;

        $d34 = $d32 - $d31;

        $d33 = d0 * d4;

        $d35 = $d34 + $d33;

        return $d35;
    }

    public static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit buildWave(java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r6, r7, r8;
        double[] r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        double $d0, $d1;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r5;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        r2 = newarray (double)[$i1];

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        i5 = $i2 + 1;

        i6 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(44, i5);

        i7 = 0;

     label1:
        if i6 == -1 goto label2;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, i6);

        r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i3 = i7;

        i7 = i7 + 1;

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r7);

        r2[$i3] = $d1;

        $i4 = i6 + 1;

        i5 = $i4;

        i6 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(44, $i4);

        goto label1;

     label2:
        i8 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(41, i5);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, i8);

        r8 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        i9 = i7 + 1;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r8);

        r2[i7] = $d0;

        $r4 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, i9);

        $r5 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit buildWave(double[])>($r4);

        return $r5;
    }

    private static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit buildWave(double[])
    {
        double[] r0, r2, $r4, $r5, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        double[][] r1;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r3;

        r0 := @parameter0: double[];

        $i2 = lengthof r0;

        $i3 = $i2 * 3;

        i0 = $i3 - 2;

        $i4 = lengthof r0;

        i1 = $i4 - 1;

        $d2 = (double) i1;

        d0 = 1.0 / $d2;

        r1 = newmultiarray (double)[i0][1];

        r2 = newarray (double)[i0];

        i14 = 0;

     label1:
        $i5 = lengthof r0;

        if i14 >= $i5 goto label3;

        d1 = r0[i14];

        $i6 = i14 + i1;

        $r4 = r1[$i6];

        $r4[0] = d1;

        $i7 = i14 + i1;

        $d3 = (double) i14;

        $d4 = $d3 * d0;

        r2[$i7] = $d4;

        if i14 <= 0 goto label2;

        $i8 = i1 * 2;

        $i9 = i14 + $i8;

        $r5 = r1[$i9];

        $d5 = d1 + 1.0;

        $r5[0] = $d5;

        $i10 = i1 * 2;

        $i11 = i14 + $i10;

        $d6 = (double) i14;

        $d7 = $d6 * d0;

        $d8 = $d7 + 1.0;

        r2[$i11] = $d8;

        $i12 = i14 - 1;

        $r6 = r1[$i12];

        $d9 = d1 - 1.0;

        $d10 = $d9 - d0;

        $r6[0] = $d10;

        $i13 = i14 - 1;

        $d11 = (double) i14;

        $d12 = $d11 * d0;

        $d13 = $d12 + -1.0;

        $d14 = $d13 - d0;

        r2[$i13] = $d14;

     label2:
        i14 = i14 + 1;

        goto label1;

     label3:
        $r3 = new androidx.constraintlayout.core.motion.utils.MonotonicCurveFit;

        specialinvoke $r3.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: void <init>(double[],double[][])>(r2, r1);

        return $r3;
    }

