androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory
<androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory: int INTERLEAVED_CHANNELS_PER_TRACK>
<androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory: long timeoutMs>
    public void <init>(long)
    {
        androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory: long timeoutMs> = l0;

        return;
    }

    public androidx.media3.exoplayer.rtsp.RtpDataChannel createAndOpenDataChannel(int)
    {
        androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory r0;
        int i0, $i2;
        androidx.media3.exoplayer.rtsp.TransferRtpDataChannel r1, $r2;
        long $l1;
        androidx.media3.datasource.DataSpec $r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory;

        i0 := @parameter0: int;

        $r2 = new androidx.media3.exoplayer.rtsp.TransferRtpDataChannel;

        $l1 = r0.<androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory: long timeoutMs>;

        specialinvoke $r2.<androidx.media3.exoplayer.rtsp.TransferRtpDataChannel: void <init>(long)>($l1);

        r1 = $r2;

        $i2 = i0 * 2;

        $r3 = staticinvoke <androidx.media3.exoplayer.rtsp.RtpUtils: androidx.media3.datasource.DataSpec getIncomingRtpDataSpec(int)>($i2);

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.TransferRtpDataChannel: long open(androidx.media3.datasource.DataSpec)>($r3);

        return r1;
    }

