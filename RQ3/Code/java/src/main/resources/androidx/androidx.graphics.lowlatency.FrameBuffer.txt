androidx.graphics.lowlatency.FrameBuffer
<androidx.graphics.lowlatency.FrameBuffer: androidx.graphics.opengl.egl.EGLSpec egl>
<androidx.graphics.lowlatency.FrameBuffer: android.hardware.HardwareBuffer hardwareBuffer>
<androidx.graphics.lowlatency.FrameBuffer: androidx.opengl.EGLImageKHR eglImage>
<androidx.graphics.lowlatency.FrameBuffer: int texture>
<androidx.graphics.lowlatency.FrameBuffer: int frameBuffer>
<androidx.graphics.lowlatency.FrameBuffer: boolean isClosed>
<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>
    public void <init>(androidx.graphics.opengl.egl.EGLSpec, android.hardware.HardwareBuffer)
    {
        androidx.graphics.lowlatency.FrameBuffer r0;
        androidx.graphics.opengl.egl.EGLSpec r1, $r6;
        android.hardware.HardwareBuffer r2, $r5;
        androidx.opengl.EGLImageKHR r3, $r7;
        int[] $r4, $r8, $r9, $r11, $r12;
        int $i0, $i1, $i2;
        androidx.opengl.EGLExt$Companion $r10;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: androidx.graphics.lowlatency.FrameBuffer;

        r1 := @parameter0: androidx.graphics.opengl.egl.EGLSpec;

        r2 := @parameter1: android.hardware.HardwareBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "egl");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "hardwareBuffer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.graphics.lowlatency.FrameBuffer: androidx.graphics.opengl.egl.EGLSpec egl> = r1;

        r0.<androidx.graphics.lowlatency.FrameBuffer: android.hardware.HardwareBuffer hardwareBuffer> = r2;

        r0.<androidx.graphics.lowlatency.FrameBuffer: int texture> = -1;

        r0.<androidx.graphics.lowlatency.FrameBuffer: int frameBuffer> = -1;

        $r4 = newarray (int)[1];

        r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer> = $r4;

        $r6 = r0.<androidx.graphics.lowlatency.FrameBuffer: androidx.graphics.opengl.egl.EGLSpec egl>;

        $r5 = r0.<androidx.graphics.lowlatency.FrameBuffer: android.hardware.HardwareBuffer hardwareBuffer>;

        $r7 = interfaceinvoke $r6.<androidx.graphics.opengl.egl.EGLSpec: androidx.opengl.EGLImageKHR eglCreateImageFromHardwareBuffer(android.hardware.HardwareBuffer)>($r5);

        if $r7 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to create EGLImage from HardwareBuffer");

        throw $r13;

     label1:
        r3 = $r7;

        r0.<androidx.graphics.lowlatency.FrameBuffer: androidx.opengl.EGLImageKHR eglImage> = r3;

        $r8 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        staticinvoke <android.opengl.GLES20: void glGenTextures(int,int[],int)>(1, $r8, 0);

        $r9 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        $i0 = $r9[0];

        r0.<androidx.graphics.lowlatency.FrameBuffer: int texture> = $i0;

        $i1 = r0.<androidx.graphics.lowlatency.FrameBuffer: int texture>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>(3553, $i1);

        $r10 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        virtualinvoke $r10.<androidx.opengl.EGLExt$Companion: void glEGLImageTargetTexture2DOES(int,androidx.opengl.EGLImageKHR)>(3553, r3);

        $r11 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        staticinvoke <android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>(1, $r11, 0);

        $r12 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        $i2 = $r12[0];

        r0.<androidx.graphics.lowlatency.FrameBuffer: int frameBuffer> = $i2;

        return;
    }

    public final android.hardware.HardwareBuffer getHardwareBuffer()
    {
        androidx.graphics.lowlatency.FrameBuffer r0;
        android.hardware.HardwareBuffer $r1;

        r0 := @this: androidx.graphics.lowlatency.FrameBuffer;

        $r1 = r0.<androidx.graphics.lowlatency.FrameBuffer: android.hardware.HardwareBuffer hardwareBuffer>;

        return $r1;
    }

    public final boolean isClosed()
    {
        androidx.graphics.lowlatency.FrameBuffer r0;
        boolean $z0;

        r0 := @this: androidx.graphics.lowlatency.FrameBuffer;

        $z0 = r0.<androidx.graphics.lowlatency.FrameBuffer: boolean isClosed>;

        return $z0;
    }

    public final void makeCurrent()
    {
        androidx.graphics.lowlatency.FrameBuffer r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.graphics.lowlatency.FrameBuffer;

        $z0 = r0.<androidx.graphics.lowlatency.FrameBuffer: boolean isClosed>;

        if $z0 != 0 goto label1;

        $i0 = r0.<androidx.graphics.lowlatency.FrameBuffer: int frameBuffer>;

        staticinvoke <android.opengl.GLES20: void glBindFramebuffer(int,int)>(36160, $i0);

        $i1 = r0.<androidx.graphics.lowlatency.FrameBuffer: int texture>;

        staticinvoke <android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>(36160, 36064, 3553, $i1, 0);

     label1:
        return;
    }

    public void close()
    {
        androidx.graphics.lowlatency.FrameBuffer r0;
        androidx.opengl.EGLImageKHR r1, $r6;
        int $i0, $i1;
        int[] $r2, $r3, $r4, $r5;
        android.hardware.HardwareBuffer $r7;
        androidx.graphics.opengl.egl.EGLSpec $r8;

        r0 := @this: androidx.graphics.lowlatency.FrameBuffer;

        $r2 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        $i0 = r0.<androidx.graphics.lowlatency.FrameBuffer: int frameBuffer>;

        $r2[0] = $i0;

        $r3 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        staticinvoke <android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>(1, $r3, 0);

        r0.<androidx.graphics.lowlatency.FrameBuffer: int frameBuffer> = -1;

        $r4 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        $i1 = r0.<androidx.graphics.lowlatency.FrameBuffer: int texture>;

        $r4[0] = $i1;

        $r5 = r0.<androidx.graphics.lowlatency.FrameBuffer: int[] buffer>;

        staticinvoke <android.opengl.GLES20: void glDeleteTextures(int,int[],int)>(1, $r5, 0);

        r0.<androidx.graphics.lowlatency.FrameBuffer: int texture> = -1;

        $r6 = r0.<androidx.graphics.lowlatency.FrameBuffer: androidx.opengl.EGLImageKHR eglImage>;

        if $r6 == null goto label1;

        r1 = $r6;

        $r8 = r0.<androidx.graphics.lowlatency.FrameBuffer: androidx.graphics.opengl.egl.EGLSpec egl>;

        interfaceinvoke $r8.<androidx.graphics.opengl.egl.EGLSpec: boolean eglDestroyImageKHR(androidx.opengl.EGLImageKHR)>(r1);

        goto label1;

     label1:
        r0.<androidx.graphics.lowlatency.FrameBuffer: androidx.opengl.EGLImageKHR eglImage> = null;

        $r7 = r0.<androidx.graphics.lowlatency.FrameBuffer: android.hardware.HardwareBuffer hardwareBuffer>;

        virtualinvoke $r7.<android.hardware.HardwareBuffer: void close()>();

        r0.<androidx.graphics.lowlatency.FrameBuffer: boolean isClosed> = 1;

        return;
    }

