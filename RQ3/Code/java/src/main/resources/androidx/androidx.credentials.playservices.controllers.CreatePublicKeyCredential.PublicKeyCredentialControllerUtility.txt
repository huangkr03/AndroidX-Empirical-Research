androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility
<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion Companion>
<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: int FLAGS>
<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.lang.String TAG>
<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.util.LinkedHashMap orderedErrorCodeToExceptions>
    public void <init>()
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility r0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions convert(androidx.credentials.CreatePublicKeyCredentialRequest)
    {
        androidx.credentials.CreatePublicKeyCredentialRequest r0;
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion $r1;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions $r2;

        r0 := @parameter0: androidx.credentials.CreatePublicKeyCredentialRequest;

        $r1 = <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions convert(androidx.credentials.CreatePublicKeyCredentialRequest)>(r0);

        return $r2;
    }

    public static final java.lang.String access$getTAG$cp()
    {
        java.lang.String $r0;

        $r0 = <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.lang.String TAG>;

        return $r0;
    }

    public static final java.util.LinkedHashMap access$getOrderedErrorCodeToExceptions$cp()
    {
        java.util.LinkedHashMap $r0;

        $r0 = <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.util.LinkedHashMap orderedErrorCodeToExceptions>;

        return $r0;
    }

    static void <clinit>()
    {
        kotlin.Pair[] r0;
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        androidx.credentials.exceptions.domerrors.UnknownError $r4;
        com.google.android.gms.fido.fido2.api.common.ErrorCode $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35;
        kotlin.Pair $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36;
        androidx.credentials.exceptions.domerrors.AbortError $r7;
        androidx.credentials.exceptions.domerrors.NotReadableError $r10;
        androidx.credentials.exceptions.domerrors.ConstraintError $r13;
        androidx.credentials.exceptions.domerrors.DataError $r16;
        androidx.credentials.exceptions.domerrors.InvalidStateError $r19;
        androidx.credentials.exceptions.domerrors.NetworkError $r22;
        androidx.credentials.exceptions.domerrors.NotAllowedError $r25;
        androidx.credentials.exceptions.domerrors.NotSupportedError $r28;
        androidx.credentials.exceptions.domerrors.SecurityError $r31;
        androidx.credentials.exceptions.domerrors.TimeoutError $r34;
        java.util.LinkedHashMap $r37;

        $r1 = new androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        specialinvoke $r1.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion Companion> = $r1;

        $r2 = class "Landroidx/credentials/playservices/controllers/CreatePublicKeyCredential/PublicKeyCredentialControllerUtility;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.lang.String TAG> = $r3;

        r0 = newarray (kotlin.Pair)[11];

        $r5 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode UNKNOWN_ERR>;

        $r4 = new androidx.credentials.exceptions.domerrors.UnknownError;

        specialinvoke $r4.<androidx.credentials.exceptions.domerrors.UnknownError: void <init>()>();

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        r0[0] = $r6;

        $r8 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode ABORT_ERR>;

        $r7 = new androidx.credentials.exceptions.domerrors.AbortError;

        specialinvoke $r7.<androidx.credentials.exceptions.domerrors.AbortError: void <init>()>();

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r8, $r7);

        r0[1] = $r9;

        $r11 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode ATTESTATION_NOT_PRIVATE_ERR>;

        $r10 = new androidx.credentials.exceptions.domerrors.NotReadableError;

        specialinvoke $r10.<androidx.credentials.exceptions.domerrors.NotReadableError: void <init>()>();

        $r12 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r11, $r10);

        r0[2] = $r12;

        $r14 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode CONSTRAINT_ERR>;

        $r13 = new androidx.credentials.exceptions.domerrors.ConstraintError;

        specialinvoke $r13.<androidx.credentials.exceptions.domerrors.ConstraintError: void <init>()>();

        $r15 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r14, $r13);

        r0[3] = $r15;

        $r17 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode DATA_ERR>;

        $r16 = new androidx.credentials.exceptions.domerrors.DataError;

        specialinvoke $r16.<androidx.credentials.exceptions.domerrors.DataError: void <init>()>();

        $r18 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r17, $r16);

        r0[4] = $r18;

        $r20 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode ENCODING_ERR>;

        $r19 = new androidx.credentials.exceptions.domerrors.InvalidStateError;

        specialinvoke $r19.<androidx.credentials.exceptions.domerrors.InvalidStateError: void <init>()>();

        $r21 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r20, $r19);

        r0[5] = $r21;

        $r23 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode NETWORK_ERR>;

        $r22 = new androidx.credentials.exceptions.domerrors.NetworkError;

        specialinvoke $r22.<androidx.credentials.exceptions.domerrors.NetworkError: void <init>()>();

        $r24 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r23, $r22);

        r0[6] = $r24;

        $r26 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode NOT_ALLOWED_ERR>;

        $r25 = new androidx.credentials.exceptions.domerrors.NotAllowedError;

        specialinvoke $r25.<androidx.credentials.exceptions.domerrors.NotAllowedError: void <init>()>();

        $r27 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r26, $r25);

        r0[7] = $r27;

        $r29 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode NOT_SUPPORTED_ERR>;

        $r28 = new androidx.credentials.exceptions.domerrors.NotSupportedError;

        specialinvoke $r28.<androidx.credentials.exceptions.domerrors.NotSupportedError: void <init>()>();

        $r30 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r29, $r28);

        r0[8] = $r30;

        $r32 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode SECURITY_ERR>;

        $r31 = new androidx.credentials.exceptions.domerrors.SecurityError;

        specialinvoke $r31.<androidx.credentials.exceptions.domerrors.SecurityError: void <init>()>();

        $r33 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r32, $r31);

        r0[9] = $r33;

        $r35 = <com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode TIMEOUT_ERR>;

        $r34 = new androidx.credentials.exceptions.domerrors.TimeoutError;

        specialinvoke $r34.<androidx.credentials.exceptions.domerrors.TimeoutError: void <init>()>();

        $r36 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r35, $r34);

        r0[10] = $r36;

        $r37 = staticinvoke <kotlin.collections.MapsKt: java.util.LinkedHashMap linkedMapOf(kotlin.Pair[])>(r0);

        <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.util.LinkedHashMap orderedErrorCodeToExceptions> = $r37;

        return;
    }

androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion
    private void <init>()
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions convert(androidx.credentials.CreatePublicKeyCredentialRequest)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        androidx.credentials.CreatePublicKeyCredentialRequest r1;
        java.lang.String r2;
        org.json.JSONObject r3, $r5;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r4, $r6;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions $r7;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: androidx.credentials.CreatePublicKeyCredentialRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        r2 = virtualinvoke r1.<androidx.credentials.CreatePublicKeyCredentialRequest: java.lang.String getRequestJson()>();

        $r5 = new org.json.JSONObject;

        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>(r2);

        r3 = $r5;

        $r6 = new com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        specialinvoke $r6.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: void <init>()>();

        r4 = $r6;

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void parseRequiredChallengeAndUser$credentials_play_services_auth_release(org.json.JSONObject,com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)>(r3, r4);

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void parseRequiredRpAndParams$credentials_play_services_auth_release(org.json.JSONObject,com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)>(r3, r4);

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void parseOptionalWithRequiredDefaultsAttestationAndExcludeCredentials$credentials_play_services_auth_release(org.json.JSONObject,com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)>(r3, r4);

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void parseOptionalTimeout$credentials_play_services_auth_release(org.json.JSONObject,com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)>(r3, r4);

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void parseOptionalAuthenticatorSelection$credentials_play_services_auth_release(org.json.JSONObject,com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)>(r3, r4);

        virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void parseOptionalExtensions$credentials_play_services_auth_release(org.json.JSONObject,com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)>(r3, r4);

        $r7 = virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "builder.build()");

        return $r7;
    }

    public final java.lang.String toCreatePasskeyResponseJson(com.google.android.gms.fido.fido2.api.common.PublicKeyCredential)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredential r1;
        org.json.JSONObject r2, r4, $r7, $r24;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorResponse r3, $r8;
        java.lang.String[] r5;
        org.json.JSONArray r6, $r34;
        boolean $z0;
        java.lang.String $r9, $r13, $r15, $r16, $r19, $r21, $r23, $r27, $r31;
        java.lang.StringBuilder $r10, $r11, $r14;
        java.lang.Class $r12;
        byte[] $r18, $r26, $r30;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse $r25, $r29, $r33;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: com.google.android.gms.fido.fido2.api.common.PublicKeyCredential;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "cred");

        $r7 = new org.json.JSONObject;

        specialinvoke $r7.<org.json.JSONObject: void <init>()>();

        r2 = $r7;

        $r8 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: com.google.android.gms.fido.fido2.api.common.AuthenticatorResponse getResponse()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "cred.response");

        r3 = $r8;

        $z0 = r3 instanceof com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse;

        if $z0 == 0 goto label1;

        $r24 = new org.json.JSONObject;

        specialinvoke $r24.<org.json.JSONObject: void <init>()>();

        r4 = $r24;

        $r25 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse) r3;

        $r26 = virtualinvoke $r25.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse: byte[] getClientDataJSON()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "authenticatorResponse.clientDataJSON");

        $r27 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r26);

        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("clientDataJSON", $r27);

        $r29 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse) r3;

        $r30 = virtualinvoke $r29.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse: byte[] getAttestationObject()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "authenticatorResponse.attestationObject");

        $r31 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r30);

        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("attestationObject", $r31);

        $r33 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse) r3;

        r5 = specialinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String[] convertToProperNamingScheme(com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse)>($r33);

        $r34 = new org.json.JSONArray;

        specialinvoke $r34.<org.json.JSONArray: void <init>(java.lang.Object)>(r5);

        r6 = $r34;

        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("transports", r6);

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("response", r4);

        goto label2;

     label1:
        $r9 = staticinvoke <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.lang.String access$getTAG$cp()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authenticator response expected registration response but got: ");

        $r12 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, $r15);

     label2:
        specialinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void addOptionalAuthenticatorAttachmentAndExtensions(com.google.android.gms.fido.fido2.api.common.PublicKeyCredential,org.json.JSONObject)>(r1, r2);

        $r16 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: java.lang.String getId()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("id", $r16);

        $r18 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: byte[] getRawId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "cred.rawId");

        $r19 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r18);

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("rawId", $r19);

        $r21 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: java.lang.String getType()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("type", $r21);

        $r23 = virtualinvoke r2.<org.json.JSONObject: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "json.toString()");

        return $r23;
    }

    private final java.lang.String[] convertToProperNamingScheme(com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse r1;
        java.lang.String[] r2, $r4;
        int i0, i1, i2;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse;

        $r4 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse: java.lang.String[] getTransports()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "authenticatorResponse.transports");

        r2 = $r4;

        i1 = 0;

        i2 = 0;

        i0 = lengthof r2;

     label1:
        if i2 >= i0 goto label3;

        r3 = r2[i2];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "cable");

        if $z0 == 0 goto label2;

        r2[i1] = "hybrid";

     label2:
        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label1;

     label3:
        return r2;
    }

    private final void addOptionalAuthenticatorAttachmentAndExtensions(com.google.android.gms.fido.fido2.api.common.PublicKeyCredential, org.json.JSONObject)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredential r1;
        org.json.JSONObject r2, r9, $r14;
        java.lang.String r3, $r23, $r27;
        com.google.android.gms.fido.fido2.api.common.AuthenticationExtensionsClientOutputs r4;
        java.util.List r5;
        org.json.JSONArray r6, $r11;
        java.util.Iterator r7;
        com.google.android.gms.fido.fido2.api.common.UvmEntry r8;
        com.google.android.gms.fido.fido2.api.common.UvmEntries $r10, r28;
        boolean $z0;
        java.lang.Object $r13;
        int $i0;
        short $s1, $s2;
        java.lang.Short $r16, $r18;
        java.lang.Throwable $r22, r29;
        java.lang.StringBuilder $r24, $r25, $r26;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: com.google.android.gms.fido.fido2.api.common.PublicKeyCredential;

        r2 := @parameter1: org.json.JSONObject;

        r3 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: java.lang.String getAuthenticatorAttachment()>();

        r4 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: com.google.android.gms.fido.fido2.api.common.AuthenticationExtensionsClientOutputs getClientExtensionResults()>();

        if r3 == null goto label1;

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("authenticatorAttachment", r3);

     label1:
        if r4 == null goto label7;

     label2:
        $r10 = virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticationExtensionsClientOutputs: com.google.android.gms.fido.fido2.api.common.UvmEntries getUvmEntries()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "clientExtensionResults.uvmEntries");

        r28 = $r10;

        r5 = virtualinvoke r28.<com.google.android.gms.fido.fido2.api.common.UvmEntries: java.util.List getUvmEntryList()>();

        if r5 == null goto label7;

        $r11 = new org.json.JSONArray;

        specialinvoke $r11.<org.json.JSONArray: void <init>()>();

        r6 = $r11;

        r7 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.android.gms.fido.fido2.api.common.UvmEntry) $r13;

        $r14 = new org.json.JSONObject;

        specialinvoke $r14.<org.json.JSONObject: void <init>()>();

        r9 = $r14;

        $i0 = virtualinvoke r8.<com.google.android.gms.fido.fido2.api.common.UvmEntry: int getUserVerificationMethod()>();

        virtualinvoke r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("userVerificationMethod", $i0);

        $s1 = virtualinvoke r8.<com.google.android.gms.fido.fido2.api.common.UvmEntry: short getKeyProtectionType()>();

        $r16 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        virtualinvoke r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("keyProtectionType", $r16);

        $s2 = virtualinvoke r8.<com.google.android.gms.fido.fido2.api.common.UvmEntry: short getMatcherProtectionType()>();

        $r18 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("matcherProtectionType", $r18);

        virtualinvoke r6.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r9);

        goto label3;

     label4:
        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("uvm", r6);

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;

        r29 = $r22;

        $r23 = staticinvoke <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.lang.String access$getTAG$cp()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClientExtensionResults faced possible implementation inconsistency in uvmEntries - ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r23, $r27);

     label7:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
    }

    public final java.lang.String toAssertPasskeyResponse(com.google.android.gms.auth.api.identity.SignInCredential)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0, $r40;
        com.google.android.gms.auth.api.identity.SignInCredential r1;
        org.json.JSONObject r2, r5, $r7, $r23;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredential r3;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorResponse r4, $r44;
        byte[] r6, $r17, $r25, $r29, $r33, $r37, $r41;
        boolean $z1;
        java.lang.String $r8, $r12, $r14, $r15, $r18, $r20, $r22, $r26, $r30, $r34, $r42;
        java.lang.StringBuilder $r9, $r10, $r13;
        java.lang.Class $r11;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse $r24, $r28, $r32, $r36, $r39;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: com.google.android.gms.auth.api.identity.SignInCredential;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "cred");

        $r7 = new org.json.JSONObject;

        specialinvoke $r7.<org.json.JSONObject: void <init>()>();

        r2 = $r7;

        r3 = virtualinvoke r1.<com.google.android.gms.auth.api.identity.SignInCredential: com.google.android.gms.fido.fido2.api.common.PublicKeyCredential getPublicKeyCredential()>();

        if r3 == null goto label1;

        $r44 = virtualinvoke r3.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: com.google.android.gms.fido.fido2.api.common.AuthenticatorResponse getResponse()>();

        goto label2;

     label1:
        $r44 = null;

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r44);

        r4 = $r44;

        $z1 = r4 instanceof com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse;

        if $z1 == 0 goto label4;

        $r23 = new org.json.JSONObject;

        specialinvoke $r23.<org.json.JSONObject: void <init>()>();

        r5 = $r23;

        $r24 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse) r4;

        $r25 = virtualinvoke $r24.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse: byte[] getClientDataJSON()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "authenticatorResponse.clientDataJSON");

        $r26 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r25);

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("clientDataJSON", $r26);

        $r28 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse) r4;

        $r29 = virtualinvoke $r28.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse: byte[] getAuthenticatorData()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "authenticatorResponse.authenticatorData");

        $r30 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r29);

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("authenticatorData", $r30);

        $r32 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse) r4;

        $r33 = virtualinvoke $r32.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse: byte[] getSignature()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "authenticatorResponse.signature");

        $r34 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r33);

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("signature", $r34);

        $r36 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse) r4;

        $r37 = virtualinvoke $r36.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse: byte[] getUserHandle()>();

        if $r37 == null goto label3;

        r6 = $r37;

        $r40 = <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion Companion>;

        $r39 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse) r4;

        $r41 = virtualinvoke $r39.<com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse: byte[] getUserHandle()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r41);

        $r42 = virtualinvoke $r40.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r41);

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("userHandle", $r42);

        goto label3;

     label3:
        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("response", r5);

        goto label5;

     label4:
        $r8 = staticinvoke <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.lang.String access$getTAG$cp()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AuthenticatorResponse expected assertion response but got: ");

        $r11 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, $r14);

     label5:
        $r15 = virtualinvoke r3.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: java.lang.String getId()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("id", $r15);

        $r17 = virtualinvoke r3.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: byte[] getRawId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "publicKeyCred.rawId");

        $r18 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.lang.String b64Encode(byte[])>($r17);

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("rawId", $r18);

        $r20 = virtualinvoke r3.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: java.lang.String getType()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("type", $r20);

        $r22 = virtualinvoke r2.<org.json.JSONObject: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "json.toString()");

        return $r22;
    }

    public final com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions convertToPlayAuthPasskeyRequest(androidx.credentials.GetPublicKeyCredentialOption)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        androidx.credentials.GetPublicKeyCredentialOption r1;
        org.json.JSONObject r2, $r5;
        java.lang.String r3, $r6;
        byte[] r4;
        java.lang.CharSequence $r7;
        int $i0;
        com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder $r8, $r9, $r10, $r11;
        com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions $r12;
        org.json.JSONException $r13;
        boolean $z0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: androidx.credentials.GetPublicKeyCredentialOption;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r5 = new org.json.JSONObject;

        $r6 = virtualinvoke r1.<androidx.credentials.GetPublicKeyCredentialOption: java.lang.String getRequestJson()>();

        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        r3 = virtualinvoke r2.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("rpId", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "rpId");

        $r7 = (java.lang.CharSequence) r3;

        $i0 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r13 = new org.json.JSONException;

        specialinvoke $r13.<org.json.JSONException: void <init>(java.lang.String)>("GetPublicKeyCredentialOption - rpId not specified in the request or is unexpectedly empty");

        throw $r13;

     label3:
        r4 = specialinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: byte[] getChallenge(org.json.JSONObject)>(r2);

        $r8 = new com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder;

        specialinvoke $r8.<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder: void <init>()>();

        $r9 = virtualinvoke $r8.<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder setSupported(boolean)>(1);

        $r10 = virtualinvoke $r9.<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder setRpId(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder setChallenge(byte[])>(r4);

        $r12 = virtualinvoke $r11.<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasskeysRequestOptions build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "Builder()\n              \u2026\n                .build()");

        return $r12;
    }

    private final byte[] getChallenge(org.json.JSONObject)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1;
        java.lang.String r2;
        java.lang.CharSequence $r3;
        int $i0;
        byte[] $r4;
        org.json.JSONException $r5;
        boolean $z0;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 = virtualinvoke r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("challenge", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "challengeB64");

        $r3 = (java.lang.CharSequence) r2;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r5 = new org.json.JSONException;

        specialinvoke $r5.<org.json.JSONException: void <init>(java.lang.String)>("Challenge not found in request or is unexpectedly empty");

        throw $r5;

     label3:
        $r4 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: byte[] b64Decode(java.lang.String)>(r2);

        return $r4;
    }

    public final androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialException publicKeyCredentialResponseContainsError(com.google.android.gms.fido.fido2.api.common.PublicKeyCredential)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredential r1;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorResponse r2, $r6;
        com.google.android.gms.fido.fido2.api.common.ErrorCode r3, $r8;
        androidx.credentials.exceptions.domerrors.DomError r4, $r18;
        java.lang.String r5, $r21;
        boolean $z0;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse $r7, $r11;
        java.util.LinkedHashMap $r9;
        java.lang.Object $r10;
        androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException $r12, $r15, r23;
        java.lang.CharSequence $r13, $r22;
        androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialException $r14;
        androidx.credentials.exceptions.domerrors.UnknownError $r16;
        java.lang.StringBuilder $r17, $r19, $r20;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: com.google.android.gms.fido.fido2.api.common.PublicKeyCredential;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "cred");

        $r6 = virtualinvoke r1.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: com.google.android.gms.fido.fido2.api.common.AuthenticatorResponse getResponse()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "cred.response");

        r2 = $r6;

        $z0 = r2 instanceof com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse;

        if $z0 == 0 goto label3;

        $r7 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse) r2;

        $r8 = virtualinvoke $r7.<com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse: com.google.android.gms.fido.fido2.api.common.ErrorCode getErrorCode()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "authenticatorResponse.errorCode");

        r3 = $r8;

        $r9 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: java.util.LinkedHashMap getOrderedErrorCodeToExceptions$credentials_play_services_auth_release()>();

        $r10 = virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (androidx.credentials.exceptions.domerrors.DomError) $r10;

        $r11 = (com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse) r2;

        r5 = virtualinvoke $r11.<com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse: java.lang.String getErrorMessage()>();

        if r4 != null goto label1;

        $r15 = new androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException;

        $r16 = new androidx.credentials.exceptions.domerrors.UnknownError;

        specialinvoke $r16.<androidx.credentials.exceptions.domerrors.UnknownError: void <init>()>();

        $r18 = (androidx.credentials.exceptions.domerrors.DomError) $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown fido gms exception - ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = (java.lang.CharSequence) $r21;

        specialinvoke $r15.<androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException: void <init>(androidx.credentials.exceptions.domerrors.DomError,java.lang.CharSequence)>($r18, $r22);

        r23 = $r15;

        goto label2;

     label1:
        $r12 = new androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException;

        $r13 = (java.lang.CharSequence) r5;

        specialinvoke $r12.<androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException: void <init>(androidx.credentials.exceptions.domerrors.DomError,java.lang.CharSequence)>(r4, $r13);

        r23 = $r12;

     label2:
        $r14 = (androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialException) r23;

        return $r14;

     label3:
        return null;
    }

    public final void parseOptionalExtensions$credentials_play_services_auth_release(org.json.JSONObject, com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1, r3;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r2;
        com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder r4, $r6;
        java.lang.String r5;
        boolean z0, z1, $z2, $z3;
        java.lang.CharSequence $r7;
        int $i0;
        com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions $r8;
        com.google.android.gms.fido.fido2.api.common.UserVerificationMethodExtension $r10;
        com.google.android.gms.fido.fido2.api.common.GoogleThirdPartyPaymentExtension $r12;
        com.google.android.gms.fido.fido2.api.common.FidoAppIdExtension $r14;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        $z2 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("extensions");

        if $z2 == 0 goto label6;

        r3 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("extensions");

        $r6 = new com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder;

        specialinvoke $r6.<com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder: void <init>()>();

        r4 = $r6;

        r5 = virtualinvoke r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("appid", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "appIdExtension");

        $r7 = (java.lang.CharSequence) r5;

        $i0 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $r14 = new com.google.android.gms.fido.fido2.api.common.FidoAppIdExtension;

        specialinvoke $r14.<com.google.android.gms.fido.fido2.api.common.FidoAppIdExtension: void <init>(java.lang.String)>(r5);

        virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder setFido2Extension(com.google.android.gms.fido.fido2.api.common.FidoAppIdExtension)>($r14);

     label3:
        z0 = virtualinvoke r3.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("thirdPartyPayment", 0);

        if z0 == 0 goto label4;

        $r12 = new com.google.android.gms.fido.fido2.api.common.GoogleThirdPartyPaymentExtension;

        specialinvoke $r12.<com.google.android.gms.fido.fido2.api.common.GoogleThirdPartyPaymentExtension: void <init>(boolean)>(1);

        virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder setGoogleThirdPartyPaymentExtension(com.google.android.gms.fido.fido2.api.common.GoogleThirdPartyPaymentExtension)>($r12);

     label4:
        z1 = virtualinvoke r3.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("uvm", 0);

        if z1 == 0 goto label5;

        $r10 = new com.google.android.gms.fido.fido2.api.common.UserVerificationMethodExtension;

        specialinvoke $r10.<com.google.android.gms.fido.fido2.api.common.UserVerificationMethodExtension: void <init>(boolean)>(1);

        virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder setUserVerificationMethodExtension(com.google.android.gms.fido.fido2.api.common.UserVerificationMethodExtension)>($r10);

     label5:
        $r8 = virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions build()>();

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setAuthenticationExtensions(com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions)>($r8);

     label6:
        return;
    }

    public final void parseOptionalAuthenticatorSelection$credentials_play_services_auth_release(org.json.JSONObject, com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1, r3;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r2;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder r4, $r7, $r10;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r5, r6;
        java.lang.CharSequence $r8, $r12;
        int $i0, $i1;
        java.lang.Boolean $r9;
        com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria $r13;
        com.google.android.gms.fido.fido2.api.common.Attachment $r15;
        com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement r17;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        $z1 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("authenticatorSelection");

        if $z1 == 0 goto label7;

        r3 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("authenticatorSelection");

        $r7 = new com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder;

        specialinvoke $r7.<com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder: void <init>()>();

        r4 = $r7;

        z0 = virtualinvoke r3.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("requireResidentKey", 0);

        r5 = virtualinvoke r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("residentKey", "");

        r17 = null;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "residentKey");

        $r8 = (java.lang.CharSequence) r5;

        $i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label3;

        r17 = staticinvoke <com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement: com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement fromString(java.lang.String)>(r5);

     label3:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r10 = virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder setRequireResidentKey(java.lang.Boolean)>($r9);

        virtualinvoke $r10.<com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder setResidentKeyRequirement(com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement)>(r17);

        r6 = virtualinvoke r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("authenticatorAttachment", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "authenticatorAttachmentString");

        $r12 = (java.lang.CharSequence) r6;

        $i1 = interfaceinvoke $r12.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        if $z3 == 0 goto label6;

        $r15 = staticinvoke <com.google.android.gms.fido.fido2.api.common.Attachment: com.google.android.gms.fido.fido2.api.common.Attachment fromString(java.lang.String)>(r6);

        virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder setAttachment(com.google.android.gms.fido.fido2.api.common.Attachment)>($r15);

     label6:
        $r13 = virtualinvoke r4.<com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria$Builder: com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria build()>();

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setAuthenticatorSelection(com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria)>($r13);

     label7:
        return;
    }

    public final void parseOptionalTimeout$credentials_play_services_auth_release(org.json.JSONObject, com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r2;
        double d0, $d1, $d2;
        boolean $z0;
        long $l0;
        java.lang.Double $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        $z0 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("timeout");

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("timeout");

        $d2 = (double) $l0;

        $d1 = (double) 1000;

        d0 = $d2 / $d1;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setTimeoutSeconds(java.lang.Double)>($r3);

     label1:
        return;
    }

    public final void parseOptionalWithRequiredDefaultsAttestationAndExcludeCredentials$credentials_play_services_auth_release(org.json.JSONObject, com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1, r4;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r2;
        java.util.List r3, r30;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        byte[] r5;
        java.lang.String r6, $r15, $r21, $r27, r31;
        org.json.JSONArray r7, r29;
        java.lang.Throwable r8, $r23;
        java.util.ArrayList $r9, $r19, $r20;
        boolean $z0, $z1, $z4, $z5, $z6;
        java.lang.CharSequence $r11, $r17, $r28;
        com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference $r12;
        org.json.JSONException $r16;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor $r18;
        com.google.android.gms.fido.common.Transport $r22;
        androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException $r24;
        androidx.credentials.exceptions.domerrors.EncodingError $r25;
        androidx.credentials.exceptions.domerrors.DomError $r26;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        $z0 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("excludeCredentials");

        if $z0 == 0 goto label14;

        r29 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("excludeCredentials");

        i5 = 0;

        i0 = virtualinvoke r29.<org.json.JSONArray: int length()>();

     label01:
        if i5 >= i0 goto label14;

        r4 = virtualinvoke r29.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i5);

        $r15 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "descriptorJSON.getString(\"id\")");

        r5 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: byte[] b64Decode(java.lang.String)>($r15);

        r6 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("type");

        $i3 = lengthof r5;

        if $i3 != 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        if $z4 != 0 goto label06;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "descriptorType");

        $r17 = (java.lang.CharSequence) r6;

        $i4 = interfaceinvoke $r17.<java.lang.CharSequence: int length()>();

        if $i4 != 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        if $z5 == 0 goto label07;

     label06:
        $r16 = new org.json.JSONException;

        specialinvoke $r16.<org.json.JSONException: void <init>(java.lang.String)>("PublicKeyCredentialDescriptor id or type value not found or unexpectedly empty");

        throw $r16;

     label07:
        r30 = null;

        $z1 = virtualinvoke r4.<org.json.JSONObject: boolean has(java.lang.String)>("transports");

        if $z1 == 0 goto label13;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r30 = (java.util.List) $r19;

        r7 = virtualinvoke r4.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("transports");

        i6 = 0;

        i1 = virtualinvoke r7.<org.json.JSONArray: int length()>();

     label08:
        if i6 >= i1 goto label13;

     label09:
        $r20 = (java.util.ArrayList) r30;

        $r21 = virtualinvoke r7.<org.json.JSONArray: java.lang.String getString(int)>(i6);

        $r22 = staticinvoke <com.google.android.gms.fido.common.Transport: com.google.android.gms.fido.common.Transport fromString(java.lang.String)>($r21);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "fromString(\n            \u2026rTransports.getString(j))");

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label10:
        goto label12;

     label11:
        $r23 := @caughtexception;

        r8 = $r23;

        $r24 = new androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException;

        $r25 = new androidx.credentials.exceptions.domerrors.EncodingError;

        specialinvoke $r25.<androidx.credentials.exceptions.domerrors.EncodingError: void <init>()>();

        $r26 = (androidx.credentials.exceptions.domerrors.DomError) $r25;

        $r27 = virtualinvoke r8.<com.google.android.gms.fido.common.Transport$UnsupportedTransportException: java.lang.String getMessage()>();

        $r28 = (java.lang.CharSequence) $r27;

        specialinvoke $r24.<androidx.credentials.exceptions.publickeycredential.CreatePublicKeyCredentialDomException: void <init>(androidx.credentials.exceptions.domerrors.DomError,java.lang.CharSequence)>($r26, $r28);

        throw $r24;

     label12:
        i6 = i6 + 1;

        goto label08;

     label13:
        $r18 = new com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor;

        specialinvoke $r18.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor: void <init>(java.lang.String,byte[],java.util.List)>(r6, r5, r30);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18);

        i5 = i5 + 1;

        goto label01;

     label14:
        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setExcludeList(java.util.List)>(r3);

        r31 = virtualinvoke r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("attestation", "none");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r31, "attestationString");

        $r11 = (java.lang.CharSequence) r31;

        $i2 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        if $i2 != 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        if $z6 == 0 goto label17;

        r31 = "none";

     label17:
        $r12 = staticinvoke <com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference: com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference fromString(java.lang.String)>(r31);

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setAttestationConveyancePreference(com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference)>($r12);

        return;

        catch com.google.android.gms.fido.common.Transport$UnsupportedTransportException from label09 to label10 with label11;
    }

    public final void parseRequiredRpAndParams$credentials_play_services_auth_release(org.json.JSONObject, com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1, r3, r8;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r2;
        java.lang.String r4, r5, r9, r21;
        org.json.JSONArray r6;
        java.util.List r7;
        int i0, i1, $i2, $i3, $i4, $i6, i7;
        java.lang.CharSequence $r10, $r11, $r13, $r18;
        org.json.JSONException $r12, $r20;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRpEntity $r14;
        java.util.ArrayList $r16;
        long $l5;
        boolean $z0, $z2, $z3, $z4, $z5;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialParameters $r19;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        r3 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("rp");

        r4 = virtualinvoke r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

        r5 = virtualinvoke r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("name", "");

        r21 = virtualinvoke r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("icon", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r21);

        $r10 = (java.lang.CharSequence) r21;

        $i2 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        if $i2 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        if $z2 == 0 goto label03;

        r21 = null;

     label03:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "rpName");

        $r11 = (java.lang.CharSequence) r5;

        $i3 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        if $i3 != 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        if $z3 != 0 goto label08;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "rpId");

        $r13 = (java.lang.CharSequence) r4;

        $i4 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        if $i4 != 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        if $z4 == 0 goto label09;

     label08:
        $r12 = new org.json.JSONException;

        specialinvoke $r12.<org.json.JSONException: void <init>(java.lang.String)>("PublicKeyCredentialCreationOptions rp ID or rp name are missing or unexpectedly empty");

        throw $r12;

     label09:
        $r14 = new com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRpEntity;

        specialinvoke $r14.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRpEntity: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r4, r5, r21);

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setRp(com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRpEntity)>($r14);

        r6 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("pubKeyCredParams");

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r7 = (java.util.List) $r16;

        i7 = 0;

        i0 = virtualinvoke r6.<org.json.JSONArray: int length()>();

     label10:
        if i7 >= i0 goto label15;

        r8 = virtualinvoke r6.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i7);

        $l5 = virtualinvoke r8.<org.json.JSONObject: long getLong(java.lang.String)>("alg");

        i1 = (int) $l5;

        r9 = virtualinvoke r8.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("type", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r9, "typeParam");

        $r18 = (java.lang.CharSequence) r9;

        $i6 = interfaceinvoke $r18.<java.lang.CharSequence: int length()>();

        if $i6 != 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        if $z5 == 0 goto label13;

        $r20 = new org.json.JSONException;

        specialinvoke $r20.<org.json.JSONException: void <init>(java.lang.String)>("PublicKeyCredentialCreationOptions PublicKeyCredentialParameter type missing or unexpectedly empty");

        throw $r20;

     label13:
        $z0 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: boolean checkAlgSupported(int)>(i1);

        if $z0 == 0 goto label14;

        $r19 = new com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialParameters;

        specialinvoke $r19.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialParameters: void <init>(java.lang.String,int)>(r9, i1);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r19);

     label14:
        i7 = i7 + 1;

        goto label10;

     label15:
        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setParameters(java.util.List)>(r7);

        return;
    }

    public final void parseRequiredChallengeAndUser$credentials_play_services_auth_release(org.json.JSONObject, com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        org.json.JSONObject r1, r4;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder r2;
        byte[] r3, r5;
        java.lang.String r6, r7, r8, $r10;
        java.lang.CharSequence $r11, $r12;
        int $i0, $i1, $i2;
        com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity $r13;
        boolean $z0, $z1, $z2;
        org.json.JSONException $r15;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        r3 = specialinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: byte[] getChallenge(org.json.JSONObject)>(r1);

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setChallenge(byte[])>(r3);

        r4 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("user");

        $r10 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "user.getString(\"id\")");

        r5 = virtualinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: byte[] b64Decode(java.lang.String)>($r10);

        r6 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        r7 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("displayName");

        r8 = virtualinvoke r4.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("icon", "");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "displayName");

        $r11 = (java.lang.CharSequence) r7;

        $i0 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label7;

        $i1 = lengthof r5;

        if $i1 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z1 != 0 goto label7;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "userName");

        $r12 = (java.lang.CharSequence) r6;

        $i2 = interfaceinvoke $r12.<java.lang.CharSequence: int length()>();

        if $i2 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        if $z2 == 0 goto label8;

     label7:
        $r15 = new org.json.JSONException;

        specialinvoke $r15.<org.json.JSONException: void <init>(java.lang.String)>("PublicKeyCredentialCreationOptions UserEntity missing one or more of displayName, userId or userName, or they are unexpectedly empty");

        throw $r15;

     label8:
        $r13 = new com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity;

        specialinvoke $r13.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String)>(r5, r6, r8, r7);

        virtualinvoke r2.<com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions$Builder setUser(com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity)>($r13);

        return;
    }

    public final byte[] b64Decode(java.lang.String)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "str");

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r1, 11);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "decode(str, FLAGS)");

        return $r2;
    }

    public final java.lang.String b64Encode(byte[])
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        byte[] r1;
        java.lang.String $r2;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r1, 11);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "encodeToString(data, FLAGS)");

        return $r2;
    }

    public final boolean checkAlgSupported(int)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        int i0;
        java.lang.Throwable r1, $r3;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        i0 := @parameter0: int;

     label1:
        staticinvoke <com.google.android.gms.fido.fido2.api.common.COSEAlgorithmIdentifier: com.google.android.gms.fido.fido2.api.common.COSEAlgorithmIdentifier fromCoseValue(int)>(i0);

        return 1;

     label2:
        $r3 := @caughtexception;

        r1 = $r3;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public final java.util.LinkedHashMap getOrderedErrorCodeToExceptions$credentials_play_services_auth_release()
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        $r1 = staticinvoke <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility: java.util.LinkedHashMap access$getOrderedErrorCodeToExceptions$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.PublicKeyCredentialControllerUtility$Companion: void <init>()>();

        return;
    }

