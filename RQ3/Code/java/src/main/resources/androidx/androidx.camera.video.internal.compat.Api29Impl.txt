androidx.camera.video.internal.compat.Api29Impl
    private void <init>()
    {
        androidx.camera.video.internal.compat.Api29Impl r0;

        r0 := @this: androidx.camera.video.internal.compat.Api29Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerAudioRecordingCallback(android.media.AudioRecord, java.util.concurrent.Executor, android.media.AudioManager$AudioRecordingCallback)
    {
        android.media.AudioRecord r0;
        java.util.concurrent.Executor r1;
        android.media.AudioManager$AudioRecordingCallback r2;

        r0 := @parameter0: android.media.AudioRecord;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.media.AudioManager$AudioRecordingCallback;

        virtualinvoke r0.<android.media.AudioRecord: void registerAudioRecordingCallback(java.util.concurrent.Executor,android.media.AudioManager$AudioRecordingCallback)>(r1, r2);

        return;
    }

    public static void unregisterAudioRecordingCallback(android.media.AudioRecord, android.media.AudioManager$AudioRecordingCallback)
    {
        android.media.AudioRecord r0;
        android.media.AudioManager$AudioRecordingCallback r1;

        r0 := @parameter0: android.media.AudioRecord;

        r1 := @parameter1: android.media.AudioManager$AudioRecordingCallback;

        virtualinvoke r0.<android.media.AudioRecord: void unregisterAudioRecordingCallback(android.media.AudioManager$AudioRecordingCallback)>(r1);

        return;
    }

    public static boolean isClientSilenced(android.media.AudioRecordingConfiguration)
    {
        android.media.AudioRecordingConfiguration r0;
        boolean $z0;

        r0 := @parameter0: android.media.AudioRecordingConfiguration;

        $z0 = virtualinvoke r0.<android.media.AudioRecordingConfiguration: boolean isClientSilenced()>();

        return $z0;
    }

