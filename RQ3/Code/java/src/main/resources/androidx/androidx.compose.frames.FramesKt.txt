androidx.compose.frames.FramesKt
<androidx.compose.frames.FramesKt: int INVALID_FRAME>
<androidx.compose.frames.FramesKt: int CREATION_FRAME>
<androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>
<androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadReadObservers>
<androidx.compose.frames.FramesKt: java.lang.Object sync>
<androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>
<androidx.compose.frames.FramesKt: int maxFrameId>
<androidx.compose.frames.FramesKt: java.util.List commitListeners>
    public static final void observeAllReads(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function1 r0;
        kotlin.jvm.functions.Function0 r1;
        java.util.List r2;
        java.lang.Throwable r3, $r7;
        androidx.compose.ThreadLocal $r4;
        java.lang.Object $r5;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "readObserver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r4 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadReadObservers>;

        $r5 = virtualinvoke $r4.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        r2 = (java.util.List) $r5;

     label1:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static final void validateNotInFrame()
    {
        androidx.compose.ThreadLocal $r0;
        java.lang.Object $r1;
        androidx.compose.frames.Frame $r2;
        java.lang.IllegalStateException $r3;

        $r0 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        $r1 = virtualinvoke $r0.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        $r2 = (androidx.compose.frames.Frame) $r1;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("In an existing frame");

        throw $r3;

     label1:
        return;
    }

    public static final androidx.compose.frames.Frame currentFrame()
    {
        androidx.compose.frames.Frame r0;
        androidx.compose.ThreadLocal $r1;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3;

        $r1 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        $r2 = virtualinvoke $r1.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        r0 = (androidx.compose.frames.Frame) $r2;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not in a frame");

        throw $r3;

     label1:
        return r0;
    }

    public static final boolean getInFrame()
    {
        androidx.compose.ThreadLocal $r0;
        java.lang.Object $r1;
        androidx.compose.frames.Frame $r2;
        boolean $z0;

        $r0 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        $r1 = virtualinvoke $r0.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        $r2 = (androidx.compose.frames.Frame) $r1;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final androidx.compose.frames.Frame open(boolean, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2)
    {
        boolean z0, z2, z5;
        kotlin.jvm.functions.Function1 r0;
        kotlin.jvm.functions.Function2 r1;
        java.util.List r2;
        java.lang.Object r3, $r7;
        int i0, $i1, i2;
        androidx.compose.frames.Frame r4, r5, $r8;
        androidx.compose.ThreadLocal $r6, $r11;
        androidx.compose.frames.FrameIdSet $r9, $r10, r13;
        java.lang.Throwable $r12, r14;

        z0 := @parameter0: boolean;

        r0 := @parameter1: kotlin.jvm.functions.Function1;

        r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <androidx.compose.frames.FramesKt: void validateNotInFrame()>();

        $r6 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadReadObservers>;

        $r7 = virtualinvoke $r6.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        r2 = (java.util.List) $r7;

        r3 = <androidx.compose.frames.FramesKt: java.lang.Object sync>;

        z2 = 0;

        z5 = 0;

        entermonitor r3;

     label1:
        i2 = <androidx.compose.frames.FramesKt: int maxFrameId>;

        $i1 = i2 + 1;

        <androidx.compose.frames.FramesKt: int maxFrameId> = $i1;

        i0 = i2;

        r13 = <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>;

        $r8 = new androidx.compose.frames.Frame;

        specialinvoke $r8.<androidx.compose.frames.Frame: void <init>(int,androidx.compose.frames.FrameIdSet,boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,java.util.List)>(i0, r13, z0, r0, r1, r2);

        r4 = $r8;

        $r9 = <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>;

        $r10 = virtualinvoke $r9.<androidx.compose.frames.FrameIdSet: androidx.compose.frames.FrameIdSet set(int)>(i0);

        <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames> = $r10;

        $r11 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        virtualinvoke $r11.<androidx.compose.ThreadLocal: void set(java.lang.Object)>(r4);

        r5 = r4;

     label2:
        exitmonitor r3;

        return r5;

     label3:
        $r12 := @caughtexception;

        r14 = $r12;

     label4:
        exitmonitor r3;

        throw r14;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final androidx.compose.frames.Frame open(boolean)
    {
        boolean z0;
        kotlin.jvm.functions.Function2 $r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.frames.Frame $r2;

        z0 := @parameter0: boolean;

        $r1 = (kotlin.jvm.functions.Function1) null;

        $r0 = (kotlin.jvm.functions.Function2) null;

        $r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame open(boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>(z0, $r1, $r0);

        return $r2;
    }

    public static androidx.compose.frames.Frame open$default(boolean, int, java.lang.Object)
    {
        int i0, $i1;
        java.lang.Object r0;
        androidx.compose.frames.Frame $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $r1 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame open(boolean)>(z0);

        return $r1;
    }

    public static final androidx.compose.frames.Frame open(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function1 r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.frames.Frame $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame open(boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>(0, r0, r1);

        return $r2;
    }

    public static androidx.compose.frames.Frame open$default(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        int i0, $i1, $i2;
        java.lang.Object r0;
        androidx.compose.frames.Frame $r1;
        kotlin.jvm.functions.Function1 r2;
        kotlin.jvm.functions.Function2 r3;

        r2 := @parameter0: kotlin.jvm.functions.Function1;

        r3 := @parameter1: kotlin.jvm.functions.Function2;

        i0 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = (kotlin.jvm.functions.Function1) null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = (kotlin.jvm.functions.Function2) null;

     label2:
        $r1 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame open(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>(r2, r3);

        return $r1;
    }

    public static final kotlin.Unit commitHandler()
    {
        androidx.compose.frames.Frame r0, r1, r2;
        boolean z0, z1;
        androidx.compose.ThreadLocal $r3;
        java.lang.Object $r4;
        kotlin.Unit $r5;

        $r3 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        $r4 = virtualinvoke $r3.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        r0 = (androidx.compose.frames.Frame) $r4;

        if r0 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        r1 = r0;

        z0 = 0;

        z1 = 0;

        r2 = r1;

        staticinvoke <androidx.compose.frames.FramesKt: void commit(androidx.compose.frames.Frame)>(r2);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        return $r5;
    }

    public static final void commit()
    {
        androidx.compose.frames.Frame $r0;

        $r0 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        staticinvoke <androidx.compose.frames.FramesKt: void commit(androidx.compose.frames.Frame)>($r0);

        return;
    }

    public static final boolean wasModified(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Boolean r1, $r5;
        java.util.HashSet r2;
        androidx.compose.frames.Frame $r3;
        java.lang.Iterable $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        r2 = virtualinvoke $r3.<androidx.compose.frames.Frame: java.util.HashSet getModified$compose_runtime_release()>();

        if r2 != null goto label1;

        $r5 = (java.lang.Boolean) null;

        goto label2;

     label1:
        $r4 = (java.lang.Iterable) r2;

        $z0 = staticinvoke <kotlin.collections.CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)>($r4, r0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label2:
        r1 = $r5;

        if r1 != null goto label3;

        $z1 = 0;

        goto label4;

     label3:
        $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

     label4:
        return $z1;
    }

    public static final kotlin.jvm.functions.Function0 registerCommitObserver(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 r0;
        java.lang.Object r1;
        boolean z1, z4, z5;
        java.util.List $r2;
        androidx.compose.frames.FramesKt$registerCommitObserver$2 $r3;
        kotlin.jvm.functions.Function0 $r4;
        java.lang.Throwable $r5, r6;

        r0 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "observer");

        r1 = <androidx.compose.frames.FramesKt: java.lang.Object sync>;

        z1 = 0;

        z5 = 0;

        entermonitor r1;

     label1:
        $r2 = <androidx.compose.frames.FramesKt: java.util.List commitListeners>;

        z4 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label2:
        exitmonitor r1;

        goto label5;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

     label4:
        exitmonitor r1;

        throw r6;

     label5:
        $r3 = new androidx.compose.frames.FramesKt$registerCommitObserver$2;

        specialinvoke $r3.<androidx.compose.frames.FramesKt$registerCommitObserver$2: void <init>(kotlin.jvm.functions.Function2)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final void commit(androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Frame r0;
        java.util.HashSet r1, $r11;
        int i0, i1, $i2;
        java.util.List r2, r6, $r12, $r20;
        boolean z0, $z3, $z4, $z5, z7, $z8;
        androidx.compose.frames.FrameIdSet r3, r4, $r7, $r10;
        java.util.Iterator r5, r21, r26;
        java.lang.Object $r8, $r14, r19;
        java.lang.Iterable $r13;
        androidx.compose.frames.Record $r15, $r16, r24;
        java.lang.IllegalStateException $r17;
        java.lang.Throwable $r18, r25;
        androidx.compose.frames.Framed r22, r23;
        kotlin.jvm.functions.Function2 $r27;

        r0 := @parameter0: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "frame");

        r1 = virtualinvoke r0.<androidx.compose.frames.Frame: java.util.HashSet getModified$compose_runtime_release()>();

        i0 = virtualinvoke r0.<androidx.compose.frames.Frame: int getId()>();

        r19 = <androidx.compose.frames.FramesKt: java.lang.Object sync>;

        z0 = 0;

        z7 = 0;

        entermonitor r19;

     label01:
        $r7 = <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>;

        $z3 = virtualinvoke $r7.<androidx.compose.frames.FrameIdSet: boolean get(int)>(i0);

        if $z3 != 0 goto label02;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Frame not open");

        throw $r17;

     label02:
        if r1 == null goto label03;

        $i2 = virtualinvoke r1.<java.util.HashSet: int size()>();

        if $i2 != 0 goto label04;

     label03:
        staticinvoke <androidx.compose.frames.FramesKt: void closeFrame(androidx.compose.frames.Frame)>(r0);

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label07;

     label04:
        r3 = <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>;

        i1 = <androidx.compose.frames.FramesKt: int maxFrameId>;

        $r10 = virtualinvoke r0.<androidx.compose.frames.Frame: androidx.compose.frames.FrameIdSet getInvalid$compose_runtime_release()>();

        r4 = virtualinvoke $r10.<androidx.compose.frames.FrameIdSet: androidx.compose.frames.FrameIdSet set(int)>(i0);

        $r11 = virtualinvoke r0.<androidx.compose.frames.Frame: java.util.HashSet getModified$compose_runtime_release()>();

        r21 = virtualinvoke $r11.<java.util.HashSet: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r21, "frame.modified");

        r5 = r21;

     label05:
        $z8 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label06;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r22 = (androidx.compose.frames.Framed) $r14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r22, "frame.modified");

        r23 = r22;

        r24 = interfaceinvoke r23.<androidx.compose.frames.Framed: androidx.compose.frames.Record getFirstFrameRecord()>();

        $r15 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record readable(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>(r24, i1, r3);

        $r16 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record readable(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>(r24, i0, r4);

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r16);

        if $z5 != 0 goto label05;

        staticinvoke <androidx.compose.frames.FramesKt: void abort(androidx.compose.frames.Frame)>(r0);

        goto label05;

     label06:
        staticinvoke <androidx.compose.frames.FramesKt: void closeFrame(androidx.compose.frames.Frame)>(r0);

        $r12 = <androidx.compose.frames.FramesKt: java.util.List commitListeners>;

        $r13 = (java.lang.Iterable) $r12;

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r13);

     label07:
        r6 = $r20;

     label08:
        exitmonitor r19;

        goto label11;

     label09:
        $r18 := @caughtexception;

        r25 = $r18;

     label10:
        exitmonitor r19;

        throw r25;

     label11:
        r2 = r6;

        if r1 == null goto label13;

        r26 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r8 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r27 = (kotlin.jvm.functions.Function2) $r8;

        interfaceinvoke $r27.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, r0);

        goto label12;

     label13:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static final void validateOpen(androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Frame r0;
        androidx.compose.frames.FrameIdSet $r1;
        int $i0;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: androidx.compose.frames.Frame;

        $r1 = <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>;

        $i0 = virtualinvoke r0.<androidx.compose.frames.Frame: int getId()>();

        $z0 = virtualinvoke $r1.<androidx.compose.frames.FrameIdSet: boolean get(int)>($i0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Frame not open");

        throw $r2;

     label1:
        return;
    }

    public static final void abort()
    {
        androidx.compose.frames.Frame $r0;

        $r0 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        staticinvoke <androidx.compose.frames.FramesKt: void abort(androidx.compose.frames.Frame)>($r0);

        return;
    }

    public static final void abort(androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Frame r0;
        androidx.compose.frames.FrameAborted r2;
        java.lang.Throwable r3;

        r0 := @parameter0: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "frame");

        staticinvoke <androidx.compose.frames.FramesKt: void abortHandler(androidx.compose.frames.Frame)>(r0);

        r2 = new androidx.compose.frames.FrameAborted;

        specialinvoke r2.<androidx.compose.frames.FrameAborted: void <init>(androidx.compose.frames.Frame)>(r0);

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public static final void abortHandler()
    {
        androidx.compose.frames.Frame r0, r1, r2;
        boolean z0, z1;
        androidx.compose.ThreadLocal $r3;
        java.lang.Object $r4;

        $r3 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        $r4 = virtualinvoke $r3.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        r0 = (androidx.compose.frames.Frame) $r4;

        if r0 != null goto label1;

        goto label2;

     label1:
        r1 = r0;

        z0 = 0;

        z1 = 0;

        r2 = r1;

        staticinvoke <androidx.compose.frames.FramesKt: void abortHandler(androidx.compose.frames.Frame)>(r2);

     label2:
        return;
    }

    public static final void abortHandler(androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Frame r0;
        java.util.HashSet r1, r2, r3;
        boolean z0, z1, $z3;
        int i0, $i1;
        java.util.Iterator r4, r6;
        java.lang.Object $r5;
        androidx.compose.frames.Framed r7, r8;
        androidx.compose.frames.Record r9;

        r0 := @parameter0: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "frame");

        staticinvoke <androidx.compose.frames.FramesKt: void validateOpen(androidx.compose.frames.Frame)>(r0);

        r1 = virtualinvoke r0.<androidx.compose.frames.Frame: java.util.HashSet getModified$compose_runtime_release()>();

        if r1 != null goto label1;

        goto label5;

     label1:
        r2 = r1;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        i0 = virtualinvoke r0.<androidx.compose.frames.Frame: int getId()>();

        r6 = virtualinvoke r3.<java.util.HashSet: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "modified");

        r4 = r6;

     label2:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.compose.frames.Framed) $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "modified");

        r8 = r7;

        r9 = interfaceinvoke r8.<androidx.compose.frames.Framed: androidx.compose.frames.Record getFirstFrameRecord()>();

     label3:
        if r9 == null goto label2;

        $i1 = interfaceinvoke r9.<androidx.compose.frames.Record: int getFrameId()>();

        if $i1 != i0 goto label4;

        interfaceinvoke r9.<androidx.compose.frames.Record: void setFrameId(int)>(0);

        goto label2;

     label4:
        r9 = interfaceinvoke r9.<androidx.compose.frames.Record: androidx.compose.frames.Record getNext()>();

        goto label3;

     label5:
        staticinvoke <androidx.compose.frames.FramesKt: void closeFrame(androidx.compose.frames.Frame)>(r0);

        return;
    }

    public static final androidx.compose.frames.Frame suspend()
    {
        androidx.compose.frames.Frame r0;
        androidx.compose.ThreadLocal $r1;

        r0 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        $r1 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        virtualinvoke $r1.<androidx.compose.ThreadLocal: void set(java.lang.Object)>(null);

        return r0;
    }

    public static final void restore(androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Frame r0;
        androidx.compose.ThreadLocal $r1, $r4;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @parameter0: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "frame");

        staticinvoke <androidx.compose.frames.FramesKt: void validateNotInFrame()>();

        staticinvoke <androidx.compose.frames.FramesKt: void validateOpen(androidx.compose.frames.Frame)>(r0);

        $r1 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadReadObservers>;

        $r2 = virtualinvoke $r1.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.util.List) $r2;

        virtualinvoke r0.<androidx.compose.frames.Frame: void setThreadReadObservers$compose_runtime_release(java.util.List)>($r3);

        $r4 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        virtualinvoke $r4.<androidx.compose.ThreadLocal: void set(java.lang.Object)>(r0);

        return;
    }

    private static final void closeFrame(androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Frame r0;
        java.lang.Object r1;
        boolean z1, z4;
        kotlin.Unit r2;
        androidx.compose.frames.FrameIdSet $r3, $r4;
        int $i0;
        androidx.compose.ThreadLocal $r5;
        java.lang.Throwable $r6, r7;

        r0 := @parameter0: androidx.compose.frames.Frame;

        r1 = <androidx.compose.frames.FramesKt: java.lang.Object sync>;

        z1 = 0;

        z4 = 0;

        entermonitor r1;

     label1:
        $r3 = <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames>;

        $i0 = virtualinvoke r0.<androidx.compose.frames.Frame: int getId()>();

        $r4 = virtualinvoke $r3.<androidx.compose.frames.FrameIdSet: androidx.compose.frames.FrameIdSet clear(int)>($i0);

        <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames> = $r4;

        r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        exitmonitor r1;

        goto label5;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

     label4:
        exitmonitor r1;

        throw r7;

     label5:
        $r5 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        virtualinvoke $r5.<androidx.compose.ThreadLocal: void set(java.lang.Object)>(null);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static final boolean valid(int, int, androidx.compose.frames.FrameIdSet)
    {
        int i0, i1;
        androidx.compose.frames.FrameIdSet r0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.compose.frames.FrameIdSet;

        if i1 == 0 goto label1;

        if i1 > i0 goto label1;

        $z0 = virtualinvoke r0.<androidx.compose.frames.FrameIdSet: boolean get(int)>(i1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static final boolean valid(androidx.compose.frames.Record, int, androidx.compose.frames.FrameIdSet)
    {
        androidx.compose.frames.Record r0;
        int i0, $i1;
        androidx.compose.frames.FrameIdSet r1;
        boolean $z0;

        r0 := @parameter0: androidx.compose.frames.Record;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.frames.FrameIdSet;

        $i1 = interfaceinvoke r0.<androidx.compose.frames.Record: int getFrameId()>();

        $z0 = staticinvoke <androidx.compose.frames.FramesKt: boolean valid(int,int,androidx.compose.frames.FrameIdSet)>(i0, $i1, r1);

        return $z0;
    }

    private static final androidx.compose.frames.Record readable(androidx.compose.frames.Record, int, androidx.compose.frames.FrameIdSet)
    {
        androidx.compose.frames.Record r0, r2, r4, r5, $r6;
        int i0, $i1, $i2;
        androidx.compose.frames.FrameIdSet r1;
        java.lang.IllegalStateException $r3;
        boolean $z0;

        r0 := @parameter0: androidx.compose.frames.Record;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.frames.FrameIdSet;

        r4 = r0;

        r5 = (androidx.compose.frames.Record) null;

     label1:
        if r4 == null goto label6;

        $z0 = staticinvoke <androidx.compose.frames.FramesKt: boolean valid(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>(r4, i0, r1);

        if $z0 == 0 goto label5;

        if r5 != null goto label2;

        $r6 = r4;

        goto label4;

     label2:
        $i1 = interfaceinvoke r5.<androidx.compose.frames.Record: int getFrameId()>();

        $i2 = interfaceinvoke r4.<androidx.compose.frames.Record: int getFrameId()>();

        if $i1 >= $i2 goto label3;

        $r6 = r4;

        goto label4;

     label3:
        $r6 = r5;

     label4:
        r5 = $r6;

     label5:
        r4 = interfaceinvoke r4.<androidx.compose.frames.Record: androidx.compose.frames.Record getNext()>();

        goto label1;

     label6:
        if r5 == null goto label7;

        r2 = r5;

        return r2;

     label7:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not find a current");

        throw $r3;
    }

    public static final androidx.compose.frames.Record readable(androidx.compose.frames.Record, androidx.compose.frames.Framed)
    {
        androidx.compose.frames.Record $r0, $r5;
        androidx.compose.frames.Framed r1;
        androidx.compose.frames.Frame r2;
        boolean $z0, $z1, z2, $z3;
        int $i0;
        androidx.compose.frames.FrameIdSet $r4;
        java.lang.Object $r6;
        kotlin.jvm.functions.Function1 r8, r12;
        java.util.List r9;
        java.util.Collection r10;
        java.util.Iterator r11;

        $r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: androidx.compose.frames.Framed;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "framed");

        r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        r8 = virtualinvoke r2.<androidx.compose.frames.Frame: kotlin.jvm.functions.Function1 getReadObserver$compose_runtime_release()>();

        if r8 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r8.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label2:
        r9 = virtualinvoke r2.<androidx.compose.frames.Frame: java.util.List getThreadReadObservers$compose_runtime_release()>();

        r10 = (java.util.Collection) r9;

        z2 = 0;

        $z0 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        if $z3 == 0 goto label6;

        r11 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (kotlin.jvm.functions.Function1) $r6;

        interfaceinvoke r12.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        goto label5;

     label6:
        $i0 = virtualinvoke r2.<androidx.compose.frames.Frame: int getId()>();

        $r4 = virtualinvoke r2.<androidx.compose.frames.Frame: androidx.compose.frames.FrameIdSet getInvalid$compose_runtime_release()>();

        $r5 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record readable(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>($r0, $i0, $r4);

        return $r5;
    }

    public static final androidx.compose.frames.Record _readable(androidx.compose.frames.Record, androidx.compose.frames.Framed)
    {
        androidx.compose.frames.Record r0, $r2;
        androidx.compose.frames.Framed r1;

        r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: androidx.compose.frames.Framed;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "r");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "framed");

        $r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record readable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>(r0, r1);

        return $r2;
    }

    public static final androidx.compose.frames.Record _writable(androidx.compose.frames.Record, androidx.compose.frames.Framed)
    {
        androidx.compose.frames.Record r0, $r2;
        androidx.compose.frames.Framed r1;

        r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: androidx.compose.frames.Framed;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "r");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "framed");

        $r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record writable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>(r0, r1);

        return $r2;
    }

    public static final kotlin.Unit _created(androidx.compose.frames.Framed)
    {
        androidx.compose.frames.Framed r0;
        kotlin.jvm.functions.Function2 r1, r2, $r8, r10;
        boolean z0, z1;
        androidx.compose.ThreadLocal $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        androidx.compose.frames.Frame r7;
        kotlin.Unit $r9;

        r0 := @parameter0: androidx.compose.frames.Framed;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "framed");

        $r3 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        $r4 = virtualinvoke $r3.<androidx.compose.ThreadLocal: java.lang.Object get()>();

        r7 = (androidx.compose.frames.Frame) $r4;

        if r7 != null goto label1;

        $r8 = (kotlin.jvm.functions.Function2) null;

        goto label2;

     label1:
        $r8 = virtualinvoke r7.<androidx.compose.frames.Frame: kotlin.jvm.functions.Function2 getWriteObserver$compose_runtime_release()>();

     label2:
        r1 = $r8;

        if r1 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        r10 = r1;

        z0 = 0;

        z1 = 0;

        r2 = r10;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r0, $r5);

        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        return $r9;
    }

    public static final androidx.compose.frames.Record writable(androidx.compose.frames.Record, androidx.compose.frames.Framed)
    {
        androidx.compose.frames.Record $r0, $r3;
        androidx.compose.frames.Framed r1;
        androidx.compose.frames.Frame $r2;

        $r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: androidx.compose.frames.Framed;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "framed");

        $r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record writable(androidx.compose.frames.Record,androidx.compose.frames.Framed,androidx.compose.frames.Frame)>($r0, r1, $r2);

        return $r3;
    }

    private static final androidx.compose.frames.Record used(androidx.compose.frames.Framed, int, androidx.compose.frames.FrameIdSet)
    {
        androidx.compose.frames.Framed r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.compose.frames.FrameIdSet r1;
        androidx.compose.frames.Record $r2, r3, r4, $r5;
        boolean $z0;

        r0 := @parameter0: androidx.compose.frames.Framed;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.frames.FrameIdSet;

        r3 = interfaceinvoke r0.<androidx.compose.frames.Framed: androidx.compose.frames.Record getFirstFrameRecord()>();

        r4 = (androidx.compose.frames.Record) null;

     label1:
        if r3 == null goto label7;

        i1 = interfaceinvoke r3.<androidx.compose.frames.Record: int getFrameId()>();

        if i1 != 0 goto label2;

        return r3;

     label2:
        $i2 = i0 - 1;

        $z0 = staticinvoke <androidx.compose.frames.FramesKt: boolean valid(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>(r3, $i2, r1);

        if $z0 == 0 goto label6;

        if r4 != null goto label3;

        r4 = r3;

        goto label6;

     label3:
        $i3 = interfaceinvoke r3.<androidx.compose.frames.Record: int getFrameId()>();

        $i4 = interfaceinvoke r4.<androidx.compose.frames.Record: int getFrameId()>();

        if $i3 >= $i4 goto label4;

        $r5 = r3;

        goto label5;

     label4:
        $r5 = r4;

     label5:
        return $r5;

     label6:
        r3 = interfaceinvoke r3.<androidx.compose.frames.Record: androidx.compose.frames.Record getNext()>();

        goto label1;

     label7:
        $r2 = (androidx.compose.frames.Record) null;

        return $r2;
    }

    public static final androidx.compose.frames.Record writable(androidx.compose.frames.Record, androidx.compose.frames.Framed, androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Record $r0, r3, r4, r5, r15, $r16, r17, r18, $r20, r22;
        androidx.compose.frames.Framed r1;
        androidx.compose.frames.Frame r2;
        int i0, $i1, $i2;
        boolean $z1, z3, z4, z7, z8, z9, z11, z13, z14;
        androidx.compose.frames.FrameIdSet $r6, $r9;
        java.lang.Boolean $r7;
        java.lang.IllegalStateException $r11;
        java.lang.Throwable $r12, r21;
        kotlin.jvm.functions.Function2 r13, r14;
        java.util.HashSet $r23;

        $r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: androidx.compose.frames.Framed;

        r2 := @parameter2: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "framed");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "frame");

        $z1 = virtualinvoke r2.<androidx.compose.frames.Frame: boolean getReadonly()>();

        if $z1 == 0 goto label01;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("In a readonly frame");

        throw $r11;

     label01:
        i0 = virtualinvoke r2.<androidx.compose.frames.Frame: int getId()>();

        $r6 = virtualinvoke r2.<androidx.compose.frames.Frame: androidx.compose.frames.FrameIdSet getInvalid$compose_runtime_release()>();

        r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record readable(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>($r0, i0, $r6);

        $i1 = interfaceinvoke r3.<androidx.compose.frames.Record: int getFrameId()>();

        $i2 = virtualinvoke r2.<androidx.compose.frames.Frame: int getId()>();

        if $i1 != $i2 goto label02;

        return r3;

     label02:
        r13 = virtualinvoke r2.<androidx.compose.frames.Frame: kotlin.jvm.functions.Function2 getWriteObserver$compose_runtime_release()>();

        if r13 != null goto label03;

        goto label04;

     label03:
        z3 = 0;

        z4 = 0;

        r14 = r13;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r14.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, $r7);

     label04:
        z7 = 0;

        z8 = 0;

        entermonitor r1;

     label05:
        z9 = 0;

        $r9 = virtualinvoke r2.<androidx.compose.frames.Frame: androidx.compose.frames.FrameIdSet getInvalid$compose_runtime_release()>();

        r15 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record used(androidx.compose.frames.Framed,int,androidx.compose.frames.FrameIdSet)>(r1, i0, $r9);

        if r15 != null goto label06;

        $r16 = (androidx.compose.frames.Record) null;

        goto label07;

     label06:
        r17 = r15;

        z11 = 0;

        interfaceinvoke r17.<androidx.compose.frames.Record: void setFrameId(int)>(2147483647);

        $r16 = r17;

     label07:
        r4 = $r16;

        if r4 != null goto label08;

        r18 = interfaceinvoke r3.<androidx.compose.frames.Record: androidx.compose.frames.Record create()>();

        z13 = 0;

        z14 = 0;

        interfaceinvoke r18.<androidx.compose.frames.Record: void setFrameId(int)>(2147483647);

        interfaceinvoke r1.<androidx.compose.frames.Framed: void prependFrameRecord(androidx.compose.frames.Record)>(r18);

        $r20 = r18;

        goto label09;

     label08:
        $r20 = r4;

     label09:
        r5 = $r20;

     label10:
        exitmonitor r1;

        goto label13;

     label11:
        $r12 := @caughtexception;

        r21 = $r12;

     label12:
        exitmonitor r1;

        throw r21;

     label13:
        r22 = r5;

        interfaceinvoke r22.<androidx.compose.frames.Record: void assign(androidx.compose.frames.Record)>(r3);

        interfaceinvoke r22.<androidx.compose.frames.Record: void setFrameId(int)>(i0);

        $r23 = virtualinvoke r2.<androidx.compose.frames.Frame: java.util.HashSet getModified$compose_runtime_release()>();

        if $r23 != null goto label14;

        goto label15;

     label14:
        virtualinvoke $r23.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label15:
        return r22;

        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static final androidx.compose.frames.Record current(androidx.compose.frames.Record, androidx.compose.frames.Frame)
    {
        androidx.compose.frames.Record r0, $r3;
        androidx.compose.frames.Frame r1;
        int $i0;
        androidx.compose.frames.FrameIdSet $r2;

        r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "r");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frame");

        $i0 = virtualinvoke r1.<androidx.compose.frames.Frame: int getId()>();

        $r2 = virtualinvoke r1.<androidx.compose.frames.Frame: androidx.compose.frames.FrameIdSet getInvalid$compose_runtime_release()>();

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record readable(androidx.compose.frames.Record,int,androidx.compose.frames.FrameIdSet)>(r0, $i0, $r2);

        return $r3;
    }

    public static final void withCurrent(androidx.compose.frames.Record, kotlin.jvm.functions.Function1)
    {
        androidx.compose.frames.Record $r0, $r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.frames.Frame $r2;

        $r0 := @parameter0: androidx.compose.frames.Record;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Frame currentFrame()>();

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record current(androidx.compose.frames.Record,androidx.compose.frames.Frame)>($r0, $r2);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return;
    }

    public static final androidx.compose.ThreadLocal access$getThreadFrame$cp$s-1580310321()
    {
        androidx.compose.ThreadLocal $r0;

        $r0 = <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame>;

        return $r0;
    }

    public static final java.lang.Object access$getSync$cp$s-1580310321()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.frames.FramesKt: java.lang.Object sync>;

        return $r0;
    }

    public static final java.util.List access$getCommitListeners$cp$s-1580310321()
    {
        java.util.List $r0;

        $r0 = <androidx.compose.frames.FramesKt: java.util.List commitListeners>;

        return $r0;
    }

    public static final void <clinit>()
    {
        boolean z0;
        androidx.compose.ThreadLocal $r0, $r1;
        androidx.compose.frames.FramesKt$threadReadObservers$1 $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        androidx.compose.frames.FrameIdSet$Companion $r5;
        androidx.compose.frames.FrameIdSet $r6;
        java.util.ArrayList $r7;
        java.util.List $r8;

        $r0 = staticinvoke <androidx.compose.ExpectKt: androidx.compose.ThreadLocal ThreadLocal()>();

        <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadFrame> = $r0;

        $r1 = new androidx.compose.ThreadLocal;

        $r2 = new androidx.compose.frames.FramesKt$threadReadObservers$1;

        specialinvoke $r2.<androidx.compose.frames.FramesKt$threadReadObservers$1: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        specialinvoke $r1.<androidx.compose.ThreadLocal: void <init>(kotlin.jvm.functions.Function0)>($r3);

        <androidx.compose.frames.FramesKt: androidx.compose.ThreadLocal threadReadObservers> = $r1;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        <androidx.compose.frames.FramesKt: java.lang.Object sync> = $r4;

        $r5 = <androidx.compose.frames.FrameIdSet: androidx.compose.frames.FrameIdSet$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.frames.FrameIdSet$Companion: androidx.compose.frames.FrameIdSet getEMPTY()>();

        <androidx.compose.frames.FramesKt: androidx.compose.frames.FrameIdSet openFrames> = $r6;

        <androidx.compose.frames.FramesKt: int maxFrameId> = 2;

        z0 = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = (java.util.List) $r7;

        <androidx.compose.frames.FramesKt: java.util.List commitListeners> = $r8;

        return;
    }

