androidx.compose.ui.semantics.SemanticsOwner
<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.node.LayoutNode rootNode>
<androidx.compose.ui.semantics.SemanticsOwner: int $stable>
    public void <init>(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.semantics.SemanticsOwner r0;
        androidx.compose.ui.node.LayoutNode r1;

        r0 := @this: androidx.compose.ui.semantics.SemanticsOwner;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rootNode");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.node.LayoutNode rootNode> = r1;

        return;
    }

    public final androidx.compose.ui.semantics.SemanticsNode getRootSemanticsNode()
    {
        androidx.compose.ui.semantics.SemanticsOwner r0;
        androidx.compose.ui.semantics.SemanticsNode $r1;
        androidx.compose.ui.node.LayoutNode $r2;
        androidx.compose.ui.node.SemanticsModifierNode $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsOwner;

        $r1 = new androidx.compose.ui.semantics.SemanticsNode;

        $r2 = r0.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.node.LayoutNode rootNode>;

        $r3 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        specialinvoke $r1.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, 1, null, 4, null);

        return $r1;
    }

    public final androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()
    {
        androidx.compose.ui.semantics.SemanticsOwner r0;
        androidx.compose.ui.semantics.SemanticsNode $r1;
        androidx.compose.ui.node.LayoutNode $r2;
        androidx.compose.ui.node.SemanticsModifierNode $r3;

        r0 := @this: androidx.compose.ui.semantics.SemanticsOwner;

        $r1 = new androidx.compose.ui.semantics.SemanticsNode;

        $r2 = r0.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.node.LayoutNode rootNode>;

        $r3 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        specialinvoke $r1.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, 0, null, 4, null);

        return $r1;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.semantics.SemanticsOwner: int $stable> = 8;

        return;
    }

