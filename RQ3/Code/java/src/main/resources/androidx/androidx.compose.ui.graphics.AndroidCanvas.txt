androidx.compose.ui.graphics.AndroidCanvas
<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>
<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Rect srcRect>
<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Rect dstRect>
    public void <init>()
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2, $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.compose.ui.graphics.AndroidCanvas_androidKt: android.graphics.Canvas access$getEmptyCanvas$p()>();

        r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Rect srcRect> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Rect dstRect> = $r3;

        return;
    }

    public final android.graphics.Canvas getInternalCanvas()
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        return $r1;
    }

    public final void setInternalCanvas(android.graphics.Canvas)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas> = r1;

        return;
    }

    public static void getInternalCanvas$annotations()
    {
        return;
    }

    public void save()
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        return;
    }

    public void restore()
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void saveLayer(androidx.compose.ui.geometry.Rect, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        androidx.compose.ui.geometry.Rect r1;
        androidx.compose.ui.graphics.Paint r2;
        android.graphics.Canvas $r3;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r4;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        r2 := @parameter1: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $f0 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $f2 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $r4 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r3.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f0, $f1, $f2, $f3, $r4, 31);

        return;
    }

    public void translate(float, float)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(f0, f1);

        return;
    }

    public void scale(float, float)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float)>(f0, f1);

        return;
    }

    public void rotate(float)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(f0);

        return;
    }

    public void skew(float, float)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: void skew(float,float)>(f0, f1);

        return;
    }

    public void concat-58bKbWc(float[])
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float[] r1;
        android.graphics.Matrix r2, $r3;
        boolean $z0;
        android.graphics.Canvas $r4;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matrix");

        $z0 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: boolean isIdentity-58bKbWc(float[])>(r1);

        if $z0 != 0 goto label1;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r2 = $r3;

        staticinvoke <androidx.compose.ui.graphics.AndroidMatrixConversions_androidKt: void setFrom-EL8BTi8(android.graphics.Matrix,float[])>(r2, r1);

        $r4 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r4.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r2);

     label1:
        return;
    }

    public void clipRect-N_I0leg(float, float, float, float, int)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1, f2, f3;
        int i0;
        android.graphics.Canvas $r1;
        android.graphics.Region$Op $r2;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r2 = virtualinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Region$Op toRegionOp--7u2Bmg(int)>(i0);

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region$Op)>(f0, f1, f2, f3, $r2);

        return;
    }

    public void clipPath-mtrdD-E(androidx.compose.ui.graphics.Path, int)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        androidx.compose.ui.graphics.Path r1;
        int i0;
        boolean $z1;
        java.lang.UnsupportedOperationException $r3;
        android.graphics.Canvas $r4;
        androidx.compose.ui.graphics.AndroidPath $r5;
        android.graphics.Path $r6;
        android.graphics.Region$Op $r7;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: androidx.compose.ui.graphics.Path;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        $r4 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $z1 = r1 instanceof androidx.compose.ui.graphics.AndroidPath;

        if $z1 == 0 goto label1;

        $r5 = (androidx.compose.ui.graphics.AndroidPath) r1;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        goto label2;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to obtain android.graphics.Path");

        throw $r3;

     label2:
        $r7 = virtualinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Region$Op toRegionOp--7u2Bmg(int)>(i0);

        virtualinvoke $r4.<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>($r6, $r7);

        return;
    }

    public final android.graphics.Region$Op toRegionOp--7u2Bmg(int)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        int $i0, $i1;
        androidx.compose.ui.graphics.ClipOp$Companion $r1;
        boolean $z0;
        android.graphics.Region$Op $r2;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        $i0 := @parameter0: int;

        $r1 = <androidx.compose.ui.graphics.ClipOp: androidx.compose.ui.graphics.ClipOp$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.graphics.ClipOp$Companion: int getDifference-rtfAjoo()>();

        $z0 = staticinvoke <androidx.compose.ui.graphics.ClipOp: boolean equals-impl0(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        $r2 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        goto label2;

     label1:
        $r2 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

     label2:
        return $r2;
    }

    public void drawLine-Wko1d7g(long, long, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        long l0, l1;
        androidx.compose.ui.graphics.Paint r1;
        android.graphics.Canvas $r2;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $r3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r2.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        return;
    }

    public void drawRect(float, float, float, float, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1, f2, f3;
        androidx.compose.ui.graphics.Paint r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r2.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f3, $r3);

        return;
    }

    public void drawRoundRect(float, float, float, float, float, float, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1, f2, f3, f4, f5;
        androidx.compose.ui.graphics.Paint r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        r1 := @parameter6: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r2.<android.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f3, f4, f5, $r3);

        return;
    }

    public void drawOval(float, float, float, float, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1, f2, f3;
        androidx.compose.ui.graphics.Paint r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r2.<android.graphics.Canvas: void drawOval(float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f3, $r3);

        return;
    }

    public void drawCircle-9KIMszo(long, float, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        long l0;
        float f0, $f1, $f2;
        androidx.compose.ui.graphics.Paint r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $r3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f2, f0, $r3);

        return;
    }

    public void drawArc(float, float, float, float, float, float, boolean, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float f0, f1, f2, f3, f4, f5;
        boolean z0;
        androidx.compose.ui.graphics.Paint r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        z0 := @parameter6: boolean;

        r1 := @parameter7: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r2 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r2.<android.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>(f0, f1, f2, f3, f4, f5, z0, $r3);

        return;
    }

    public void drawPath(androidx.compose.ui.graphics.Path, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        androidx.compose.ui.graphics.Path r1;
        androidx.compose.ui.graphics.Paint r2;
        boolean $z1;
        java.lang.UnsupportedOperationException $r4;
        android.graphics.Canvas $r5;
        androidx.compose.ui.graphics.AndroidPath $r6;
        android.graphics.Path $r7;
        android.graphics.Paint $r8;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: androidx.compose.ui.graphics.Path;

        r2 := @parameter1: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r5 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $z1 = r1 instanceof androidx.compose.ui.graphics.AndroidPath;

        if $z1 == 0 goto label1;

        $r6 = (androidx.compose.ui.graphics.AndroidPath) r1;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        goto label2;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to obtain android.graphics.Path");

        throw $r4;

     label2:
        $r8 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r5.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r8);

        return;
    }

    public void drawImage-d-4ec7I(androidx.compose.ui.graphics.ImageBitmap, long, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        androidx.compose.ui.graphics.ImageBitmap r1;
        long l0;
        androidx.compose.ui.graphics.Paint r2;
        android.graphics.Canvas $r3;
        android.graphics.Bitmap $r4;
        float $f0, $f1;
        android.graphics.Paint $r5;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: androidx.compose.ui.graphics.ImageBitmap;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r4 = staticinvoke <androidx.compose.ui.graphics.AndroidImageBitmap_androidKt: android.graphics.Bitmap asAndroidBitmap(androidx.compose.ui.graphics.ImageBitmap)>(r1);

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $r5 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r4, $f0, $f1, $r5);

        return;
    }

    public void drawImageRect-HPBpro0(androidx.compose.ui.graphics.ImageBitmap, long, long, long, long, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        androidx.compose.ui.graphics.ImageBitmap r1;
        long l0, l1, l2, l3;
        androidx.compose.ui.graphics.Paint r2;
        kotlin.Unit r3, r11;
        android.graphics.Canvas $r4, r10, r16;
        android.graphics.Bitmap $r5, r9, r15;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.Paint $r6;
        android.graphics.Rect r7, r12, r14;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: androidx.compose.ui.graphics.ImageBitmap;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r2 := @parameter5: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r5 = staticinvoke <androidx.compose.ui.graphics.AndroidImageBitmap_androidKt: android.graphics.Bitmap asAndroidBitmap(androidx.compose.ui.graphics.ImageBitmap)>(r1);

        r7 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Rect srcRect>;

        r9 = $r5;

        r10 = $r4;

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l0);

        r7.<android.graphics.Rect: int left> = $i4;

        $i5 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l0);

        r7.<android.graphics.Rect: int top> = $i5;

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l0);

        $i7 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l1);

        $i8 = $i6 + $i7;

        r7.<android.graphics.Rect: int right> = $i8;

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l0);

        $i10 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>(l1);

        $i11 = $i9 + $i10;

        r7.<android.graphics.Rect: int bottom> = $i11;

        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r12 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Rect dstRect>;

        r14 = r7;

        r15 = r9;

        r16 = r10;

        $i12 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l2);

        r12.<android.graphics.Rect: int left> = $i12;

        $i13 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l2);

        r12.<android.graphics.Rect: int top> = $i13;

        $i14 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l2);

        $i15 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l3);

        $i16 = $i14 + $i15;

        r12.<android.graphics.Rect: int right> = $i16;

        $i17 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l2);

        $i18 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>(l3);

        $i19 = $i17 + $i18;

        r12.<android.graphics.Rect: int bottom> = $i19;

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke r16.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>(r15, r14, r12, $r6);

        return;
    }

    public void drawPoints-O7TthRY(int, java.util.List, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.List r1;
        androidx.compose.ui.graphics.Paint r2;
        androidx.compose.ui.graphics.PointMode$Companion $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "points");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        i1 = i0;

        $r3 = <androidx.compose.ui.graphics.PointMode: androidx.compose.ui.graphics.PointMode$Companion Companion>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.graphics.PointMode$Companion: int getLines-r_lszbg()>();

        $z0 = staticinvoke <androidx.compose.ui.graphics.PointMode: boolean equals-impl0(int,int)>(i1, $i2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: void drawLines(java.util.List,androidx.compose.ui.graphics.Paint,int)>(r1, r2, 2);

        goto label3;

     label1:
        $r4 = <androidx.compose.ui.graphics.PointMode: androidx.compose.ui.graphics.PointMode$Companion Companion>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.graphics.PointMode$Companion: int getPolygon-r_lszbg()>();

        $z1 = staticinvoke <androidx.compose.ui.graphics.PointMode: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label2;

        specialinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: void drawLines(java.util.List,androidx.compose.ui.graphics.Paint,int)>(r1, r2, 1);

        goto label3;

     label2:
        $r5 = <androidx.compose.ui.graphics.PointMode: androidx.compose.ui.graphics.PointMode$Companion Companion>;

        $i4 = virtualinvoke $r5.<androidx.compose.ui.graphics.PointMode$Companion: int getPoints-r_lszbg()>();

        $z2 = staticinvoke <androidx.compose.ui.graphics.PointMode: boolean equals-impl0(int,int)>(i1, $i4);

        if $z2 == 0 goto label3;

        specialinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: void drawPoints(java.util.List,androidx.compose.ui.graphics.Paint)>(r1, r2);

     label3:
        return;
    }

    public void enableZ()
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas $r1;
        androidx.compose.ui.graphics.CanvasUtils $r2;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        $r2 = <androidx.compose.ui.graphics.CanvasUtils: androidx.compose.ui.graphics.CanvasUtils INSTANCE>;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r2.<androidx.compose.ui.graphics.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>($r1, 1);

        return;
    }

    public void disableZ()
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        android.graphics.Canvas $r1;
        androidx.compose.ui.graphics.CanvasUtils $r2;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        $r2 = <androidx.compose.ui.graphics.CanvasUtils: androidx.compose.ui.graphics.CanvasUtils INSTANCE>;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        virtualinvoke $r2.<androidx.compose.ui.graphics.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>($r1, 0);

        return;
    }

    private final void drawPoints(java.util.List, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        java.util.List r1;
        androidx.compose.ui.graphics.Paint r2;
        int i0, i2;
        java.lang.Object r4;
        long l1;
        androidx.compose.ui.geometry.Offset $r5;
        android.graphics.Canvas $r6;
        float $f0, $f1;
        android.graphics.Paint $r7;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.compose.ui.graphics.Paint;

        i2 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label2;

        r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (androidx.compose.ui.geometry.Offset) r4;

        l1 = virtualinvoke $r5.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $r6 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $r7 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r6.<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>($f0, $f1, $r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private final void drawLines(java.util.List, androidx.compose.ui.graphics.Paint, int)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        java.util.List r1;
        androidx.compose.ui.graphics.Paint r2;
        int i0, i1, i2, $i5, $i6, $i7, i8, $i9;
        kotlin.ranges.IntProgression r3, $r5;
        long l3, l4;
        kotlin.ranges.IntRange $r4;
        java.lang.Object $r6, $r8;
        androidx.compose.ui.geometry.Offset $r7, $r9;
        android.graphics.Canvas $r10;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r11;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.compose.ui.graphics.Paint;

        i0 := @parameter2: int;

        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i5 < 2 goto label3;

        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        $r4 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i7);

        $r5 = (kotlin.ranges.IntProgression) $r4;

        r3 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)>($r5, i0);

        i8 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getFirst()>();

        i1 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getLast()>();

        i2 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getStep()>();

        if i2 <= 0 goto label1;

        if i8 <= i1 goto label2;

     label1:
        if i2 >= 0 goto label3;

        if i1 > i8 goto label3;

     label2:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        $r7 = (androidx.compose.ui.geometry.Offset) $r6;

        l3 = virtualinvoke $r7.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $i9 = i8 + 1;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i9);

        $r9 = (androidx.compose.ui.geometry.Offset) $r8;

        l4 = virtualinvoke $r9.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $r10 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l4);

        $f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l4);

        $r11 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r10.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r11);

        if i8 == i1 goto label3;

        i8 = i8 + i2;

        goto label2;

     label3:
        return;
    }

    public void drawRawPoints-O7TthRY(int, float[], androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float[] r1;
        androidx.compose.ui.graphics.Paint r2;
        androidx.compose.ui.graphics.PointMode$Companion $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        r2 := @parameter2: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "points");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $i2 = lengthof r1;

        $i3 = $i2 % 2;

        if $i3 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("points must have an even number of values");

        throw $r6;

     label1:
        i1 = i0;

        $r3 = <androidx.compose.ui.graphics.PointMode: androidx.compose.ui.graphics.PointMode$Companion Companion>;

        $i4 = virtualinvoke $r3.<androidx.compose.ui.graphics.PointMode$Companion: int getLines-r_lszbg()>();

        $z0 = staticinvoke <androidx.compose.ui.graphics.PointMode: boolean equals-impl0(int,int)>(i1, $i4);

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: void drawRawLines(float[],androidx.compose.ui.graphics.Paint,int)>(r1, r2, 2);

        goto label4;

     label2:
        $r4 = <androidx.compose.ui.graphics.PointMode: androidx.compose.ui.graphics.PointMode$Companion Companion>;

        $i5 = virtualinvoke $r4.<androidx.compose.ui.graphics.PointMode$Companion: int getPolygon-r_lszbg()>();

        $z1 = staticinvoke <androidx.compose.ui.graphics.PointMode: boolean equals-impl0(int,int)>(i1, $i5);

        if $z1 == 0 goto label3;

        specialinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: void drawRawLines(float[],androidx.compose.ui.graphics.Paint,int)>(r1, r2, 1);

        goto label4;

     label3:
        $r5 = <androidx.compose.ui.graphics.PointMode: androidx.compose.ui.graphics.PointMode$Companion Companion>;

        $i6 = virtualinvoke $r5.<androidx.compose.ui.graphics.PointMode$Companion: int getPoints-r_lszbg()>();

        $z2 = staticinvoke <androidx.compose.ui.graphics.PointMode: boolean equals-impl0(int,int)>(i1, $i6);

        if $z2 == 0 goto label4;

        specialinvoke r0.<androidx.compose.ui.graphics.AndroidCanvas: void drawRawPoints(float[],androidx.compose.ui.graphics.Paint,int)>(r1, r2, 2);

     label4:
        return;
    }

    private final void drawRawPoints(float[], androidx.compose.ui.graphics.Paint, int)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float[] r1;
        androidx.compose.ui.graphics.Paint r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8;
        kotlin.ranges.IntProgression r3, $r5;
        float f0, f1;
        kotlin.ranges.IntRange $r4;
        android.graphics.Canvas $r6;
        android.graphics.Paint $r7;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: float[];

        r2 := @parameter1: androidx.compose.ui.graphics.Paint;

        i0 := @parameter2: int;

        $i3 = lengthof r1;

        $i4 = $i3 % 2;

        if $i4 != 0 goto label3;

        $i5 = lengthof r1;

        $i6 = $i5 - 1;

        $r4 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i6);

        $r5 = (kotlin.ranges.IntProgression) $r4;

        r3 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)>($r5, i0);

        i7 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getFirst()>();

        i1 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getLast()>();

        i2 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getStep()>();

        if i2 <= 0 goto label1;

        if i7 <= i1 goto label2;

     label1:
        if i2 >= 0 goto label3;

        if i1 > i7 goto label3;

     label2:
        f0 = r1[i7];

        $i8 = i7 + 1;

        f1 = r1[$i8];

        $r6 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r7 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r6.<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>(f0, f1, $r7);

        if i7 == i1 goto label3;

        i7 = i7 + i2;

        goto label2;

     label3:
        return;
    }

    private final void drawRawLines(float[], androidx.compose.ui.graphics.Paint, int)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        float[] r1;
        androidx.compose.ui.graphics.Paint r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        kotlin.ranges.IntProgression r3, $r5;
        float f0, f1, f2, f3;
        kotlin.ranges.IntRange $r4;
        android.graphics.Canvas $r6;
        android.graphics.Paint $r7;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: float[];

        r2 := @parameter1: androidx.compose.ui.graphics.Paint;

        i0 := @parameter2: int;

        $i3 = lengthof r1;

        if $i3 < 4 goto label3;

        $i4 = lengthof r1;

        $i5 = $i4 % 2;

        if $i5 != 0 goto label3;

        $i6 = lengthof r1;

        $i7 = $i6 - 3;

        $r4 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i7);

        $r5 = (kotlin.ranges.IntProgression) $r4;

        $i8 = i0 * 2;

        r3 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)>($r5, $i8);

        i9 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getFirst()>();

        i1 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getLast()>();

        i2 = virtualinvoke r3.<kotlin.ranges.IntProgression: int getStep()>();

        if i2 <= 0 goto label1;

        if i9 <= i1 goto label2;

     label1:
        if i2 >= 0 goto label3;

        if i1 > i9 goto label3;

     label2:
        f0 = r1[i9];

        $i10 = i9 + 1;

        f1 = r1[$i10];

        $i11 = i9 + 2;

        f2 = r1[$i11];

        $i12 = i9 + 3;

        f3 = r1[$i12];

        $r6 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $r7 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r6.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f3, $r7);

        if i9 == i1 goto label3;

        i9 = i9 + i2;

        goto label2;

     label3:
        return;
    }

    public void drawVertices-TPEHhCM(androidx.compose.ui.graphics.Vertices, int, androidx.compose.ui.graphics.Paint)
    {
        androidx.compose.ui.graphics.AndroidCanvas r0;
        androidx.compose.ui.graphics.Vertices r1;
        int i0, $i1, $i2, $i3;
        androidx.compose.ui.graphics.Paint r2;
        android.graphics.Canvas $r3;
        android.graphics.Canvas$VertexMode $r4;
        float[] $r5, $r6, $r7;
        int[] $r8;
        short[] $r9, $r10;
        android.graphics.Paint $r11;

        r0 := @this: androidx.compose.ui.graphics.AndroidCanvas;

        r1 := @parameter0: androidx.compose.ui.graphics.Vertices;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.compose.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "vertices");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r3 = r0.<androidx.compose.ui.graphics.AndroidCanvas: android.graphics.Canvas internalCanvas>;

        $i1 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: int getVertexMode-c2xauaI()>();

        $r4 = staticinvoke <androidx.compose.ui.graphics.AndroidVertexMode_androidKt: android.graphics.Canvas$VertexMode toAndroidVertexMode-JOOmi9M(int)>($i1);

        $r5 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: float[] getPositions()>();

        $i2 = lengthof $r5;

        $r6 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: float[] getPositions()>();

        $r7 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: float[] getTextureCoordinates()>();

        $r8 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: int[] getColors()>();

        $r9 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: short[] getIndices()>();

        $r10 = virtualinvoke r1.<androidx.compose.ui.graphics.Vertices: short[] getIndices()>();

        $i3 = lengthof $r10;

        $r11 = interfaceinvoke r2.<androidx.compose.ui.graphics.Paint: android.graphics.Paint asFrameworkPaint()>();

        virtualinvoke $r3.<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>($r4, $i2, $r6, 0, $r7, 0, $r8, 0, $r9, 0, $i3, $r11);

        return;
    }

