androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation
<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion Companion>
<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.lang.String label>
<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: androidx.compose.animation.tooling.ComposeAnimationType type>
<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.lang.Object animationObject>
<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.util.Set states>
<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: boolean apiAvailable>
    private void <init>(java.lang.String)
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation r0;
        java.lang.String r1;
        androidx.compose.animation.tooling.ComposeAnimationType $r2;
        java.lang.Integer $r3;
        java.util.Set $r4;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.lang.String label> = r1;

        $r2 = <androidx.compose.animation.tooling.ComposeAnimationType: androidx.compose.animation.tooling.ComposeAnimationType UNSUPPORTED>;

        r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: androidx.compose.animation.tooling.ComposeAnimationType type> = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.lang.Object animationObject> = $r3;

        $r4 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.util.Set states> = $r4;

        return;
    }

    public java.lang.String getLabel()
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        $r1 = r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.lang.String label>;

        return $r1;
    }

    public androidx.compose.animation.tooling.ComposeAnimationType getType()
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation r0;
        androidx.compose.animation.tooling.ComposeAnimationType $r1;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        $r1 = r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: androidx.compose.animation.tooling.ComposeAnimationType type>;

        return $r1;
    }

    public java.lang.Object getAnimationObject()
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        $r1 = r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.lang.Object animationObject>;

        return $r1;
    }

    public java.util.Set getStates()
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        $r1 = r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: java.util.Set states>;

        return $r1;
    }

    public static final boolean access$getApiAvailable$cp()
    {
        boolean $z0;

        $z0 = <androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: boolean apiAvailable>;

        return $z0;
    }

    public void <init>(java.lang.String, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation r0;
        java.lang.String r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: void <init>(java.lang.String)>(r1);

        return;
    }

    public static final void access$setApiAvailable$cp(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: boolean apiAvailable> = z0;

        return;
    }

    static void <clinit>()
    {
        androidx.compose.animation.tooling.ComposeAnimationType[] $r0;
        int i0, i1;
        androidx.compose.animation.tooling.ComposeAnimationType r1, r2;
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion $r3;
        java.lang.String $r4;
        boolean $z2, $z3;

        $r3 = new androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion;

        specialinvoke $r3.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion Companion> = $r3;

        $r0 = staticinvoke <androidx.compose.animation.tooling.ComposeAnimationType: androidx.compose.animation.tooling.ComposeAnimationType[] values()>();

        i1 = 0;

        i0 = lengthof $r0;

     label1:
        if i1 >= i0 goto label3;

        r1 = $r0[i1];

        r2 = r1;

        $r4 = virtualinvoke r2.<androidx.compose.animation.tooling.ComposeAnimationType: java.lang.String name()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, "UNSUPPORTED");

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z3 = 0;

     label4:
        <androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: boolean apiAvailable> = $z3;

        return;
    }

androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion
    private void <init>()
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion r0;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean getApiAvailable()
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion;

        $z0 = staticinvoke <androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: boolean access$getApiAvailable$cp()>();

        return $z0;
    }

    public final androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation create(java.lang.String)
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion r0;
        java.lang.String r1;
        boolean $z0;
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation $r2;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion: boolean getApiAvailable()>();

        if $z0 == 0 goto label1;

        $r2 = new androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation;

        specialinvoke $r2.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: void <init>(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final void testOverrideAvailability(boolean)
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion;

        z0 := @parameter0: boolean;

        staticinvoke <androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation: void access$setApiAvailable$cp(boolean)>(z0);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.tooling.animation.UnsupportedComposeAnimation$Companion: void <init>()>();

        return;
    }

