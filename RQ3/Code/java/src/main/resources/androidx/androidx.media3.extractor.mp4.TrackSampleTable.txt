androidx.media3.extractor.mp4.TrackSampleTable
<androidx.media3.extractor.mp4.TrackSampleTable: androidx.media3.extractor.mp4.Track track>
<androidx.media3.extractor.mp4.TrackSampleTable: int sampleCount>
<androidx.media3.extractor.mp4.TrackSampleTable: long[] offsets>
<androidx.media3.extractor.mp4.TrackSampleTable: int[] sizes>
<androidx.media3.extractor.mp4.TrackSampleTable: int maximumSize>
<androidx.media3.extractor.mp4.TrackSampleTable: long[] timestampsUs>
<androidx.media3.extractor.mp4.TrackSampleTable: int[] flags>
<androidx.media3.extractor.mp4.TrackSampleTable: long durationUs>
    public void <init>(androidx.media3.extractor.mp4.Track, long[], int[], int, long[], int[], long)
    {
        androidx.media3.extractor.mp4.TrackSampleTable r0;
        androidx.media3.extractor.mp4.Track r1;
        long[] r2, r4;
        int[] r3, r5;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long l1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.extractor.mp4.TrackSampleTable;

        r1 := @parameter0: androidx.media3.extractor.mp4.Track;

        r2 := @parameter1: long[];

        r3 := @parameter2: int[];

        i0 := @parameter3: int;

        r4 := @parameter4: long[];

        r5 := @parameter5: int[];

        l1 := @parameter6: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = lengthof r3;

        $i2 = lengthof r4;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $i5 = lengthof r2;

        $i4 = lengthof r4;

        if $i5 != $i4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $i7 = lengthof r5;

        $i6 = lengthof r4;

        if $i7 != $i6 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: androidx.media3.extractor.mp4.Track track> = r1;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: long[] offsets> = r2;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: int[] sizes> = r3;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: int maximumSize> = i0;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: long[] timestampsUs> = r4;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: int[] flags> = r5;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: long durationUs> = l1;

        $i8 = lengthof r2;

        r0.<androidx.media3.extractor.mp4.TrackSampleTable: int sampleCount> = $i8;

        $i9 = lengthof r5;

        if $i9 <= 0 goto label7;

        $i10 = lengthof r5;

        $i11 = $i10 - 1;

        $i12 = r5[$i11];

        $i13 = $i12 | 536870912;

        r5[$i11] = $i13;

     label7:
        return;
    }

    public int getIndexOfEarlierOrEqualSynchronizationSample(long)
    {
        androidx.media3.extractor.mp4.TrackSampleTable r0;
        long l0;
        int i1, $i2, $i3, i4;
        long[] $r1;
        int[] $r2;

        r0 := @this: androidx.media3.extractor.mp4.TrackSampleTable;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.extractor.mp4.TrackSampleTable: long[] timestampsUs>;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(long[],long,boolean,boolean)>($r1, l0, 1, 0);

        i4 = i1;

     label1:
        if i4 < 0 goto label3;

        $r2 = r0.<androidx.media3.extractor.mp4.TrackSampleTable: int[] flags>;

        $i2 = $r2[i4];

        $i3 = $i2 & 1;

        if $i3 == 0 goto label2;

        return i4;

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int getIndexOfLaterOrEqualSynchronizationSample(long)
    {
        androidx.media3.extractor.mp4.TrackSampleTable r0;
        long l0;
        int i1, $i2, $i3, $i4, i5;
        long[] $r1, $r2;
        int[] $r3;

        r0 := @this: androidx.media3.extractor.mp4.TrackSampleTable;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.extractor.mp4.TrackSampleTable: long[] timestampsUs>;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchCeil(long[],long,boolean,boolean)>($r1, l0, 1, 0);

        i5 = i1;

     label1:
        $r2 = r0.<androidx.media3.extractor.mp4.TrackSampleTable: long[] timestampsUs>;

        $i2 = lengthof $r2;

        if i5 >= $i2 goto label3;

        $r3 = r0.<androidx.media3.extractor.mp4.TrackSampleTable: int[] flags>;

        $i3 = $r3[i5];

        $i4 = $i3 & 1;

        if $i4 == 0 goto label2;

        return i5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return -1;
    }

