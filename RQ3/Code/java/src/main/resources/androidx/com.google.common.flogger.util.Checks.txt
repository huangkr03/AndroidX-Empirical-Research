com.google.common.flogger.util.Checks
    public static void checkArgument(boolean, java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static java.lang.String checkMetadataIdentifier(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        char $c0;
        int $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <com.google.common.flogger.util.Checks: boolean isLetter(char)>($c0);

        if $z0 == 0 goto label6;

        $i1 = 1;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label5;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $z0 = staticinvoke <com.google.common.flogger.util.Checks: boolean isLetter(char)>($c0);

        if $z0 != 0 goto label4;

        if $c0 < 48 goto label2;

        if $c0 <= 57 goto label4;

     label2:
        if $c0 != 95 goto label3;

        goto label4;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("identifier must contain only ASCII letters, digits or underscore: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return $r0;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("identifier must start with an ASCII letter: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;

     label7:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("identifier must not be empty");

        goto label8;

     label8:
        throw $r1;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.NullPointerException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not be null");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static void checkState(boolean, java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    private static boolean isLetter(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 97 goto label1;

        if $c0 <= 122 goto label2;

     label1:
        if $c0 < 65 goto label3;

        if $c0 > 90 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

