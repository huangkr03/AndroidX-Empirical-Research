androidx.test.espresso.action.AdapterViewProtocols
<androidx.test.espresso.action.AdapterViewProtocols: int FULLY_RENDERED_PERCENTAGE_CUTOFF>
<androidx.test.espresso.action.AdapterViewProtocols: androidx.test.espresso.action.AdapterViewProtocol STANDARD_PROTOCOL>
    public static androidx.test.espresso.action.AdapterViewProtocol standardProtocol()
    {
        androidx.test.espresso.action.AdapterViewProtocol $r0;

        $r0 = <androidx.test.espresso.action.AdapterViewProtocols: androidx.test.espresso.action.AdapterViewProtocol STANDARD_PROTOCOL>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;

        r0 = new androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        specialinvoke r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol: void <init>()>();

        <androidx.test.espresso.action.AdapterViewProtocols: androidx.test.espresso.action.AdapterViewProtocol STANDARD_PROTOCOL> = r0;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.action.AdapterViewProtocols r0;

        r0 := @this: androidx.test.espresso.action.AdapterViewProtocols;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction-IA
androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction
<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>
<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position>
    public java.lang.Object getData()
    {
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r0;
        int i0, $i1;
        java.lang.StringBuilder r1, $r5, $r6;
        java.lang.Object $r2, $r3, $r8;
        boolean $z0, $z1;
        android.database.Cursor $r4;
        java.lang.String $r7;

        r0 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        $r2 = r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>;

        $z0 = $r2 instanceof android.database.Cursor;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>;

        $r4 = (android.database.Cursor) $r3;

        $i1 = r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position>;

        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToPosition(int)>($i1);

        if $z1 != 0 goto label1;

        i0 = r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move cursor to position: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("StdAdapterViewProtocol", $r7);

     label1:
        $r8 = r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>;

        return $r8;
    }

    private void <init>(java.lang.Object, int)
    {
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r0;
        java.lang.Object r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label2;

        z0 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "position must be >= 0");

        r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition> = r1;

        r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position> = i0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    void <init>(java.lang.Object, int, androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction-IA)
    {
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r0;
        java.lang.Object r1;
        int i0;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction-IA r2;

        r0 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction-IA;

        specialinvoke r0.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: void <init>(java.lang.Object,int)>(r1, i0);

        return;
    }

androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol
<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol: java.lang.String TAG>
    public androidx.test.espresso.util.EspressoOptional getDataRenderedByView(android.widget.AdapterView, android.view.View)
    {
        android.widget.AdapterView r0;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r1;
        android.view.ViewParent $r2;
        androidx.test.espresso.util.EspressoOptional $r3, $r9;
        java.lang.Object $r4;
        androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder $r5, $r7, r12;
        java.lang.Integer $r6;
        androidx.test.espresso.action.AdapterViewProtocol$AdaptedData $r8;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r10;
        android.view.View r11;
        int i0;

        r10 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r0 := @parameter0: android.widget.AdapterView;

        r11 := @parameter1: android.view.View;

        $r2 = virtualinvoke r11.<android.view.View: android.view.ViewParent getParent()>();

        if r0 != $r2 goto label1;

        i0 = virtualinvoke r0.<android.widget.AdapterView: int getPositionForView(android.view.View)>(r11);

        if i0 == -1 goto label1;

        r12 = new androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder;

        specialinvoke r12.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: void <init>()>();

        r1 = new androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        $r4 = virtualinvoke r0.<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>(i0);

        specialinvoke r1.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: void <init>(java.lang.Object,int,androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction-IA)>($r4, i0, null);

        $r5 = virtualinvoke r12.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withDataFunction(androidx.test.espresso.action.AdapterViewProtocol$DataFunction)>(r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withOpaqueToken(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData build()>();

        $r9 = staticinvoke <androidx.test.espresso.util.EspressoOptional: androidx.test.espresso.util.EspressoOptional of(java.lang.Object)>($r8);

        return $r9;

     label1:
        $r3 = staticinvoke <androidx.test.espresso.util.EspressoOptional: androidx.test.espresso.util.EspressoOptional absent()>();

        return $r3;
    }

    public java.lang.Iterable getDataInAdapterView(android.widget.AdapterView)
    {
        android.widget.AdapterView r0;
        java.util.ArrayList r1;
        java.lang.Object r2;
        androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder r3, $r5, $r7, r10;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r4, r11;
        int $i0, i1;
        java.lang.Integer $r6;
        androidx.test.espresso.action.AdapterViewProtocol$AdaptedData $r8;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r9;
        java.util.List r12;
        java.lang.Iterable r13;

        r9 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r0 := @parameter0: android.widget.AdapterView;

        r1 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.widget.AdapterView: int getCount()>();

        if i1 >= $i0 goto label2;

        r2 = virtualinvoke r0.<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>(i1);

        r10 = new androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder;

        r3 = r10;

        specialinvoke r10.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: void <init>()>();

        r11 = new androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        r4 = r11;

        specialinvoke r11.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: void <init>(java.lang.Object,int,androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction-IA)>(r2, i1, null);

        $r5 = virtualinvoke r3.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withDataFunction(androidx.test.espresso.action.AdapterViewProtocol$DataFunction)>(r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = virtualinvoke $r5.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withOpaqueToken(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData build()>();

        r12 = (java.util.List) r1;

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        r13 = (java.lang.Iterable) r1;

        return r13;
    }

    public void <init>()
    {
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;

        r0 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void makeDataRenderedWithinAdapterView(android.widget.AdapterView, androidx.test.espresso.action.AdapterViewProtocol$AdaptedData)
    {
        android.widget.AdapterView r0;
        java.lang.Object $r1, $r2;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Integer $r3;
        int $i0, $i1, $i2, i3, $i4;
        android.widget.AdapterViewAnimator $r4;
        android.widget.AdapterViewFlipper $r5;
        android.widget.AbsListView $r6, $r7;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r8;
        androidx.test.espresso.action.AdapterViewProtocol$AdaptedData r9;

        r8 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r0 := @parameter0: android.widget.AdapterView;

        r9 := @parameter1: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData;

        $r1 = r9.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $z0 = $r1 instanceof java.lang.Integer;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Not my data: %s", r9);

        $r2 = r9.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $r3 = (java.lang.Integer) $r2;

        i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 7 goto label8;

        $z1 = r0 instanceof android.widget.AbsListView;

        if $z1 == 0 goto label7;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 <= 10 goto label6;

        $r7 = (android.widget.AbsListView) r0;

        $i2 = virtualinvoke r0.<android.widget.AdapterView: int getPaddingTop()>();

        virtualinvoke $r7.<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>(i3, $i2, 0);

     label1:
        z4 = 1;

     label2:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 <= 10 goto label4;

        $z2 = r0 instanceof android.widget.AdapterViewAnimator;

        if $z2 == 0 goto label4;

        $z3 = r0 instanceof android.widget.AdapterViewFlipper;

        if $z3 == 0 goto label3;

        $r5 = (android.widget.AdapterViewFlipper) r0;

        virtualinvoke $r5.<android.widget.AdapterViewFlipper: void stopFlipping()>();

     label3:
        $r4 = (android.widget.AdapterViewAnimator) r0;

        virtualinvoke $r4.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>(i3);

        z4 = 1;

     label4:
        if z4 != 0 goto label5;

        virtualinvoke r0.<android.widget.AdapterView: void setSelection(int)>(i3);

        return;

     label5:
        return;

     label6:
        $r6 = (android.widget.AbsListView) r0;

        virtualinvoke $r6.<android.widget.AbsListView: void smoothScrollToPosition(int)>(i3);

        goto label1;

     label7:
        z4 = 0;

        goto label2;

     label8:
        z4 = 0;

        goto label4;
    }

    public boolean isDataRenderedWithinAdapterView(android.widget.AdapterView, androidx.test.espresso.action.AdapterViewProtocol$AdaptedData)
    {
        android.widget.AdapterView r0;
        java.lang.Object $r1, $r2;
        boolean $z0, $z1, z2;
        java.lang.Integer $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        androidx.test.espresso.core.internal.deps.guava.collect.Range $r6;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r8;
        androidx.test.espresso.action.AdapterViewProtocol$AdaptedData r9;
        java.lang.Comparable r10, r11, r12;

        r8 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r0 := @parameter0: android.widget.AdapterView;

        r9 := @parameter1: androidx.test.espresso.action.AdapterViewProtocol$AdaptedData;

        $r1 = r9.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $z0 = $r1 instanceof java.lang.Integer;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Not my data: %s", r9);

        $r2 = r9.<androidx.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $r3 = (java.lang.Integer) $r2;

        i6 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i0 = virtualinvoke r0.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = virtualinvoke r0.<android.widget.AdapterView: int getLastVisiblePosition()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r10 = (java.lang.Comparable) $r4;

        r11 = (java.lang.Comparable) $r5;

        $r6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Range: androidx.test.espresso.core.internal.deps.guava.collect.Range closed(java.lang.Comparable,java.lang.Comparable)>(r10, r11);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        r12 = (java.lang.Comparable) $r7;

        $z1 = virtualinvoke $r6.<androidx.test.espresso.core.internal.deps.guava.collect.Range: boolean contains(java.lang.Comparable)>(r12);

        if $z1 == 0 goto label4;

        $i2 = virtualinvoke r0.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        $i3 = virtualinvoke r0.<android.widget.AdapterView: int getLastVisiblePosition()>();

        if $i2 != $i3 goto label3;

        z2 = 1;

     label1:
        if z2 == 0 goto label2;

        virtualinvoke r0.<android.widget.AdapterView: void setSelection(int)>(i6);

     label2:
        return z2;

     label3:
        $i4 = virtualinvoke r0.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        $i5 = i6 - $i4;

        z2 = specialinvoke r8.<androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol: boolean isElementFullyRendered(android.widget.AdapterView,int)>(r0, $i5);

        goto label1;

     label4:
        z2 = 0;

        goto label1;
    }

    private boolean isElementFullyRendered(android.widget.AdapterView, int)
    {
        android.widget.AdapterView r0;
        int i0;
        org.hamcrest.Matcher $r1;
        boolean $z0;
        androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r2;
        android.view.View r3;

        r2 := @this: androidx.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r0 := @parameter0: android.widget.AdapterView;

        i0 := @parameter1: int;

        r3 = virtualinvoke r0.<android.widget.AdapterView: android.view.View getChildAt(int)>(i0);

        $r1 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayingAtLeast(int)>(90);

        $z0 = interfaceinvoke $r1.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        return $z0;
    }

