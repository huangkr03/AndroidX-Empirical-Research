androidx.camera.core.impl.ConstantObservable
<androidx.camera.core.impl.ConstantObservable: androidx.camera.core.impl.ConstantObservable NULL_OBSERVABLE>
<androidx.camera.core.impl.ConstantObservable: java.lang.String TAG>
<androidx.camera.core.impl.ConstantObservable: com.google.common.util.concurrent.ListenableFuture mValueFuture>
    public static androidx.camera.core.impl.Observable withValue(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.camera.core.impl.ConstantObservable r1, $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        r1 = <androidx.camera.core.impl.ConstantObservable: androidx.camera.core.impl.ConstantObservable NULL_OBSERVABLE>;

        return r1;

     label1:
        $r2 = new androidx.camera.core.impl.ConstantObservable;

        specialinvoke $r2.<androidx.camera.core.impl.ConstantObservable: void <init>(java.lang.Object)>(r0);

        return $r2;
    }

    private void <init>(java.lang.Object)
    {
        androidx.camera.core.impl.ConstantObservable r0;
        java.lang.Object r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.camera.core.impl.ConstantObservable;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r1);

        r0.<androidx.camera.core.impl.ConstantObservable: com.google.common.util.concurrent.ListenableFuture mValueFuture> = $r2;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture fetchData()
    {
        androidx.camera.core.impl.ConstantObservable r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.impl.ConstantObservable;

        $r1 = r0.<androidx.camera.core.impl.ConstantObservable: com.google.common.util.concurrent.ListenableFuture mValueFuture>;

        return $r1;
    }

    public void addObserver(java.util.concurrent.Executor, androidx.camera.core.impl.Observable$Observer)
    {
        androidx.camera.core.impl.ConstantObservable r0;
        java.util.concurrent.Executor r1;
        androidx.camera.core.impl.Observable$Observer r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.camera.core.impl.ConstantObservable;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.core.impl.Observable$Observer;

        $r3 = r0.<androidx.camera.core.impl.ConstantObservable: com.google.common.util.concurrent.ListenableFuture mValueFuture>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.impl.ConstantObservable,androidx.camera.core.impl.Observable$Observer)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.ConstantObservable: void lambda$addObserver$0(androidx.camera.core.impl.Observable$Observer)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r4, r1);

        return;
    }

    public void removeObserver(androidx.camera.core.impl.Observable$Observer)
    {
        androidx.camera.core.impl.ConstantObservable r0;
        androidx.camera.core.impl.Observable$Observer r1;

        r0 := @this: androidx.camera.core.impl.ConstantObservable;

        r1 := @parameter0: androidx.camera.core.impl.Observable$Observer;

        return;
    }

    private void lambda$addObserver$0(androidx.camera.core.impl.Observable$Observer)
    {
        androidx.camera.core.impl.ConstantObservable r0;
        androidx.camera.core.impl.Observable$Observer r1;
        java.lang.Throwable r2, $r5;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.core.impl.ConstantObservable;

        r1 := @parameter0: androidx.camera.core.impl.Observable$Observer;

     label1:
        $r3 = r0.<androidx.camera.core.impl.ConstantObservable: com.google.common.util.concurrent.ListenableFuture mValueFuture>;

        $r4 = interfaceinvoke $r3.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        interfaceinvoke r1.<androidx.camera.core.impl.Observable$Observer: void onNewData(java.lang.Object)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        interfaceinvoke r1.<androidx.camera.core.impl.Observable$Observer: void onError(java.lang.Throwable)>(r2);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.ConstantObservable $r0;

        $r0 = new androidx.camera.core.impl.ConstantObservable;

        specialinvoke $r0.<androidx.camera.core.impl.ConstantObservable: void <init>(java.lang.Object)>(null);

        <androidx.camera.core.impl.ConstantObservable: androidx.camera.core.impl.ConstantObservable NULL_OBSERVABLE> = $r0;

        return;
    }

