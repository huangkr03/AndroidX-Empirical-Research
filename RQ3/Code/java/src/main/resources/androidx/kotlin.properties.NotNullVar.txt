kotlin.properties.NotNullVar
<kotlin.properties.NotNullVar: java.lang.Object value>
    public void <init>()
    {
        kotlin.properties.NotNullVar $r0;

        $r0 := @this: kotlin.properties.NotNullVar;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object getValue(java.lang.Object, kotlin.reflect.KProperty)
    {
        kotlin.properties.NotNullVar $r0;
        java.lang.Object $r1;
        kotlin.reflect.KProperty $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: kotlin.properties.NotNullVar;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.reflect.KProperty;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "property");

        $r1 = $r0.<kotlin.properties.NotNullVar: java.lang.Object value>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ");

        $r5 = interfaceinvoke $r2.<kotlin.reflect.KProperty: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be initialized before get.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public void setValue(java.lang.Object, kotlin.reflect.KProperty, java.lang.Object)
    {
        kotlin.properties.NotNullVar $r0;
        kotlin.reflect.KProperty $r1;
        java.lang.Object $r2, $r3;

        $r0 := @this: kotlin.properties.NotNullVar;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.reflect.KProperty;

        $r2 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "property");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "value");

        $r0.<kotlin.properties.NotNullVar: java.lang.Object value> = $r2;

        return;
    }

