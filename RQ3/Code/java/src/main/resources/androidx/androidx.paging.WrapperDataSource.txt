androidx.paging.WrapperDataSource
<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>
<androidx.paging.WrapperDataSource: androidx.arch.core.util.Function listFunction>
<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>
    public void <init>(androidx.paging.DataSource, androidx.arch.core.util.Function)
    {
        androidx.paging.WrapperDataSource r0;
        androidx.paging.DataSource r1, $r5;
        androidx.arch.core.util.Function r2;
        androidx.paging.DataSource$KeyType r3, $r4;
        int i0, $i1;
        int[] $r6;
        java.util.IdentityHashMap $r8;

        r0 := @this: androidx.paging.WrapperDataSource;

        r1 := @parameter0: androidx.paging.DataSource;

        r2 := @parameter1: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "listFunction");

        $r4 = virtualinvoke r1.<androidx.paging.DataSource: androidx.paging.DataSource$KeyType getType$paging_common()>();

        specialinvoke r0.<androidx.paging.DataSource: void <init>(androidx.paging.DataSource$KeyType)>($r4);

        r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source> = r1;

        r0.<androidx.paging.WrapperDataSource: androidx.arch.core.util.Function listFunction> = r2;

        $r5 = r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        r3 = virtualinvoke $r5.<androidx.paging.DataSource: androidx.paging.DataSource$KeyType getType$paging_common()>();

        $r6 = <androidx.paging.WrapperDataSource$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r3.<androidx.paging.DataSource$KeyType: int ordinal()>();

        i0 = $r6[$i1];

        if i0 != 1 goto label1;

        $r8 = new java.util.IdentityHashMap;

        specialinvoke $r8.<java.util.IdentityHashMap: void <init>()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap> = $r8;

        return;
    }

    public void addInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)
    {
        androidx.paging.WrapperDataSource r0;
        androidx.paging.DataSource$InvalidatedCallback r1;
        androidx.paging.DataSource $r2;

        r0 := @this: androidx.paging.WrapperDataSource;

        r1 := @parameter0: androidx.paging.DataSource$InvalidatedCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onInvalidatedCallback");

        $r2 = r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        virtualinvoke $r2.<androidx.paging.DataSource: void addInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)>(r1);

        return;
    }

    public void removeInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)
    {
        androidx.paging.WrapperDataSource r0;
        androidx.paging.DataSource$InvalidatedCallback r1;
        androidx.paging.DataSource $r2;

        r0 := @this: androidx.paging.WrapperDataSource;

        r1 := @parameter0: androidx.paging.DataSource$InvalidatedCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onInvalidatedCallback");

        $r2 = r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        virtualinvoke $r2.<androidx.paging.DataSource: void removeInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)>(r1);

        return;
    }

    public void invalidate()
    {
        androidx.paging.WrapperDataSource r0;
        androidx.paging.DataSource $r1;

        r0 := @this: androidx.paging.WrapperDataSource;

        $r1 = r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        virtualinvoke $r1.<androidx.paging.DataSource: void invalidate()>();

        return;
    }

    public boolean isInvalid()
    {
        androidx.paging.WrapperDataSource r0;
        androidx.paging.DataSource $r1;
        boolean $z0;

        r0 := @this: androidx.paging.WrapperDataSource;

        $r1 = r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        $z0 = virtualinvoke $r1.<androidx.paging.DataSource: boolean isInvalid()>();

        return $z0;
    }

    public java.lang.Object getKeyInternal$paging_common(java.lang.Object)
    {
        androidx.paging.WrapperDataSource r0;
        java.lang.Object r1, r3, r4, $r8;
        java.util.IdentityHashMap r2, $r5, $r7;
        boolean z0, z2;
        java.lang.IllegalStateException $r6;
        java.lang.Throwable $r9, r10;

        r0 := @this: androidx.paging.WrapperDataSource;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "item");

        $r5 = r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>;

        if $r5 == null goto label5;

        r2 = r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>;

        z0 = 0;

        z2 = 0;

        entermonitor r2;

     label1:
        $r7 = r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>;

        $r8 = virtualinvoke $r7.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r8);

        r3 = $r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "keyMap[item]!!");

        r4 = r3;

     label2:
        exitmonitor r2;

        return r4;

     label3:
        $r9 := @caughtexception;

        r10 = $r9;

     label4:
        exitmonitor r2;

        throw r10;

     label5:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get key by item in non-item keyed DataSource");

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void stashKeysIfNeeded(java.util.List, java.util.List)
    {
        androidx.paging.WrapperDataSource r0;
        java.util.List r1, r2;
        java.util.IdentityHashMap r3, $r7, $r8;
        boolean z0, z2, z3;
        int i0, i1, $i2, i3;
        java.util.Map r4;
        java.lang.Object r5, r6, $r11;
        androidx.paging.DataSource $r9;
        androidx.paging.ItemKeyedDataSource $r10;
        java.lang.Throwable $r13, r15;
        kotlin.Unit r14;

        r0 := @this: androidx.paging.WrapperDataSource;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "dest");

        $r7 = r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>;

        if $r7 == null goto label7;

        r3 = r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>;

        z0 = 0;

        z3 = 0;

        entermonitor r3;

     label1:
        i3 = 0;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        i0 = $i2 + -1;

        if i3 > i0 goto label3;

     label2:
        i1 = i3;

        i3 = i3 + 1;

        $r8 = r0.<androidx.paging.WrapperDataSource: java.util.IdentityHashMap keyMap>;

        r4 = (java.util.Map) $r8;

        r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = r0.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        $r10 = (androidx.paging.ItemKeyedDataSource) $r9;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = virtualinvoke $r10.<androidx.paging.ItemKeyedDataSource: java.lang.Object getKey(java.lang.Object)>($r11);

        z2 = 0;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        if i3 <= i0 goto label2;

     label3:
        r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r3;

        goto label7;

     label5:
        $r13 := @caughtexception;

        r15 = $r13;

     label6:
        exitmonitor r3;

        throw r15;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.Object load$paging_common(androidx.paging.DataSource$Params, kotlin.coroutines.Continuation)
    {
        androidx.paging.WrapperDataSource r0;
        androidx.paging.DataSource$Params r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.paging.WrapperDataSource;

        r1 := @parameter0: androidx.paging.DataSource$Params;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <androidx.paging.WrapperDataSource: java.lang.Object load$suspendImpl(androidx.paging.WrapperDataSource,androidx.paging.DataSource$Params,kotlin.coroutines.Continuation)>(r0, r1, $r2);

        return $r3;
    }

    static java.lang.Object load$suspendImpl(androidx.paging.WrapperDataSource, androidx.paging.DataSource$Params, kotlin.coroutines.Continuation)
    {
        androidx.paging.DataSource$Params r0;
        kotlin.coroutines.Continuation r1, r19;
        androidx.paging.DataSource$BaseResult r2, r3;
        java.lang.Object $r4, r5, $r7, $r16;
        boolean $z0;
        androidx.arch.core.util.Function $r8;
        androidx.paging.DataSource$BaseResult$Companion $r9;
        java.util.List $r10, $r11;
        androidx.paging.DataSource $r12;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.paging.WrapperDataSource r14;
        androidx.paging.WrapperDataSource$load$1 $r15, r17;
        java.lang.IllegalStateException r18;

        r14 := @parameter0: androidx.paging.WrapperDataSource;

        r0 := @parameter1: androidx.paging.DataSource$Params;

        r1 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.paging.WrapperDataSource$load$1;

        if $z0 == 0 goto label1;

        $r15 = (androidx.paging.WrapperDataSource$load$1) r1;

        $i0 = $r15.<androidx.paging.WrapperDataSource$load$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r15.<androidx.paging.WrapperDataSource$load$1: int label>;

        $i3 = $i2 - -2147483648;

        $r15.<androidx.paging.WrapperDataSource$load$1: int label> = $i3;

        goto label2;

     label1:
        r17 = new androidx.paging.WrapperDataSource$load$1;

        specialinvoke r17.<androidx.paging.WrapperDataSource$load$1: void <init>(androidx.paging.WrapperDataSource,kotlin.coroutines.Continuation)>(r14, r1);

        $r15 = r17;

     label2:
        $r4 = $r15.<androidx.paging.WrapperDataSource$load$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r15.<androidx.paging.WrapperDataSource$load$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r12 = r14.<androidx.paging.WrapperDataSource: androidx.paging.DataSource source>;

        $r15.<androidx.paging.WrapperDataSource$load$1: java.lang.Object L$0> = r14;

        $r15.<androidx.paging.WrapperDataSource$load$1: int label> = 1;

        r19 = (kotlin.coroutines.Continuation) $r15;

        $r16 = virtualinvoke $r12.<androidx.paging.DataSource: java.lang.Object load$paging_common(androidx.paging.DataSource$Params,kotlin.coroutines.Continuation)>(r0, r19);

        if $r16 != r5 goto label5;

        return r5;

     label4:
        $r7 = $r15.<androidx.paging.WrapperDataSource$load$1: java.lang.Object L$0>;

        r14 = (androidx.paging.WrapperDataSource) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r16 = $r4;

     label5:
        r2 = (androidx.paging.DataSource$BaseResult) $r16;

        $r9 = <androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion>;

        $r8 = r14.<androidx.paging.WrapperDataSource: androidx.arch.core.util.Function listFunction>;

        r3 = virtualinvoke $r9.<androidx.paging.DataSource$BaseResult$Companion: androidx.paging.DataSource$BaseResult convert$paging_common(androidx.paging.DataSource$BaseResult,androidx.arch.core.util.Function)>(r2, $r8);

        $r11 = r2.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $r10 = r3.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        virtualinvoke r14.<androidx.paging.WrapperDataSource: void stashKeysIfNeeded(java.util.List,java.util.List)>($r11, $r10);

        return r3;

     label6:
        r18 = new java.lang.IllegalStateException;

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r18;
    }

androidx.paging.WrapperDataSource$load$1
<androidx.paging.WrapperDataSource$load$1: java.lang.Object L$0>
<androidx.paging.WrapperDataSource$load$1: java.lang.Object result>
<androidx.paging.WrapperDataSource$load$1: androidx.paging.WrapperDataSource this$0>
<androidx.paging.WrapperDataSource$load$1: int label>
    void <init>(androidx.paging.WrapperDataSource, kotlin.coroutines.Continuation)
    {
        androidx.paging.WrapperDataSource$load$1 r0;
        androidx.paging.WrapperDataSource r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.WrapperDataSource$load$1;

        r1 := @parameter0: androidx.paging.WrapperDataSource;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.WrapperDataSource$load$1: androidx.paging.WrapperDataSource this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.WrapperDataSource$load$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.WrapperDataSource $r3;

        r0 := @this: androidx.paging.WrapperDataSource$load$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.WrapperDataSource$load$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.WrapperDataSource$load$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.WrapperDataSource$load$1: int label> = $i1;

        $r3 = r0.<androidx.paging.WrapperDataSource$load$1: androidx.paging.WrapperDataSource this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = staticinvoke <androidx.paging.WrapperDataSource: java.lang.Object load$suspendImpl(androidx.paging.WrapperDataSource,androidx.paging.DataSource$Params,kotlin.coroutines.Continuation)>($r3, null, $r2);

        return $r4;
    }

androidx.paging.WrapperDataSource$WhenMappings
<androidx.paging.WrapperDataSource$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.paging.DataSource$KeyType[] $r1;
        int $i0, $i1;
        androidx.paging.DataSource$KeyType $r2;

        $r1 = staticinvoke <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType ITEM_KEYED>;

        $i1 = virtualinvoke $r2.<androidx.paging.DataSource$KeyType: int ordinal()>();

        r0[$i1] = 1;

        <androidx.paging.WrapperDataSource$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

