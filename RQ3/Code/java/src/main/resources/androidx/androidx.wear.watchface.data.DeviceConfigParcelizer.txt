androidx.wear.watchface.data.DeviceConfigParcelizer
    public void <init>()
    {
        androidx.wear.watchface.data.DeviceConfigParcelizer r0;

        r0 := @this: androidx.wear.watchface.data.DeviceConfigParcelizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.wear.watchface.data.DeviceConfig read(androidx.versionedparcelable.VersionedParcel)
    {
        androidx.versionedparcelable.VersionedParcel r0;
        androidx.wear.watchface.data.DeviceConfig r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l2, $l3;

        r0 := @parameter0: androidx.versionedparcelable.VersionedParcel;

        $r2 = new androidx.wear.watchface.data.DeviceConfig;

        specialinvoke $r2.<androidx.wear.watchface.data.DeviceConfig: void <init>()>();

        r1 = $r2;

        $z0 = r1.<androidx.wear.watchface.data.DeviceConfig: boolean mHasLowBitAmbient>;

        $z1 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)>($z0, 1);

        r1.<androidx.wear.watchface.data.DeviceConfig: boolean mHasLowBitAmbient> = $z1;

        $z2 = r1.<androidx.wear.watchface.data.DeviceConfig: boolean mHasBurnInProtection>;

        $z3 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)>($z2, 2);

        r1.<androidx.wear.watchface.data.DeviceConfig: boolean mHasBurnInProtection> = $z3;

        $l0 = r1.<androidx.wear.watchface.data.DeviceConfig: long mAnalogPreviewReferenceTimeMillis>;

        $l1 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: long readLong(long,int)>($l0, 4);

        r1.<androidx.wear.watchface.data.DeviceConfig: long mAnalogPreviewReferenceTimeMillis> = $l1;

        $l2 = r1.<androidx.wear.watchface.data.DeviceConfig: long mDigitalPreviewReferenceTimeMillis>;

        $l3 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: long readLong(long,int)>($l2, 5);

        r1.<androidx.wear.watchface.data.DeviceConfig: long mDigitalPreviewReferenceTimeMillis> = $l3;

        return r1;
    }

    public static void write(androidx.wear.watchface.data.DeviceConfig, androidx.versionedparcelable.VersionedParcel)
    {
        androidx.wear.watchface.data.DeviceConfig r0;
        androidx.versionedparcelable.VersionedParcel r1;
        boolean $z0, $z1;
        long $l0, $l1;

        r0 := @parameter0: androidx.wear.watchface.data.DeviceConfig;

        r1 := @parameter1: androidx.versionedparcelable.VersionedParcel;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)>(1, 0);

        $z0 = r0.<androidx.wear.watchface.data.DeviceConfig: boolean mHasLowBitAmbient>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)>($z0, 1);

        $z1 = r0.<androidx.wear.watchface.data.DeviceConfig: boolean mHasBurnInProtection>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)>($z1, 2);

        $l0 = r0.<androidx.wear.watchface.data.DeviceConfig: long mAnalogPreviewReferenceTimeMillis>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)>($l0, 4);

        $l1 = r0.<androidx.wear.watchface.data.DeviceConfig: long mDigitalPreviewReferenceTimeMillis>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)>($l1, 5);

        return;
    }

