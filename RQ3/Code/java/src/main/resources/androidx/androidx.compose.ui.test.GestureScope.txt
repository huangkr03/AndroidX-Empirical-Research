androidx.compose.ui.test.GestureScope
<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScopeImpl delegateScopeImpl>
<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScope delegateScope>
<androidx.compose.ui.test.GestureScope: long visibleSize>
<androidx.compose.ui.test.GestureScope: int $stable>
    public void <init>(androidx.compose.ui.semantics.SemanticsNode, androidx.compose.ui.test.TestContext)
    {
        androidx.compose.ui.test.GestureScope r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.test.TestContext r2;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r3, $r4;
        androidx.compose.ui.test.MultiModalInjectionScope $r5, $r6;
        long $l0;

        r0 := @this: androidx.compose.ui.test.GestureScope;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r2 := @parameter1: androidx.compose.ui.test.TestContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "testContext");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.compose.ui.test.MultiModalInjectionScopeImpl;

        specialinvoke $r3.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: void <init>(androidx.compose.ui.semantics.SemanticsNode,androidx.compose.ui.test.TestContext)>(r1, r2);

        r0.<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScopeImpl delegateScopeImpl> = $r3;

        $r4 = r0.<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScopeImpl delegateScopeImpl>;

        $r5 = (androidx.compose.ui.test.MultiModalInjectionScope) $r4;

        r0.<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScope delegateScope> = $r5;

        $r6 = r0.<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScope delegateScope>;

        $l0 = interfaceinvoke $r6.<androidx.compose.ui.test.MultiModalInjectionScope: long getVisibleSize-YbymL2g()>();

        r0.<androidx.compose.ui.test.GestureScope: long visibleSize> = $l0;

        return;
    }

    public final androidx.compose.ui.test.MultiModalInjectionScope getDelegateScope()
    {
        androidx.compose.ui.test.GestureScope r0;
        androidx.compose.ui.test.MultiModalInjectionScope $r1;

        r0 := @this: androidx.compose.ui.test.GestureScope;

        $r1 = r0.<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScope delegateScope>;

        return $r1;
    }

    public static void getDelegateScope$annotations()
    {
        return;
    }

    public final long getVisibleSize-YbymL2g()
    {
        androidx.compose.ui.test.GestureScope r0;
        long $l0;

        r0 := @this: androidx.compose.ui.test.GestureScope;

        $l0 = r0.<androidx.compose.ui.test.GestureScope: long visibleSize>;

        return $l0;
    }

    public final void dispose$ui_test_release()
    {
        androidx.compose.ui.test.GestureScope r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.GestureScope;

        $r1 = r0.<androidx.compose.ui.test.GestureScope: androidx.compose.ui.test.MultiModalInjectionScopeImpl delegateScopeImpl>;

        virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: void dispose$ui_test_release()>();

        return;
    }

    static void <clinit>()
    {
        return;
    }

