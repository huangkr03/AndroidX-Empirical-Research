androidx.compose.runtime.ParcelableSnapshotMutableState
<androidx.compose.runtime.ParcelableSnapshotMutableState: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion Companion>
<androidx.compose.runtime.ParcelableSnapshotMutableState: int PolicyNeverEquals>
<androidx.compose.runtime.ParcelableSnapshotMutableState: int PolicyStructuralEquality>
<androidx.compose.runtime.ParcelableSnapshotMutableState: int PolicyReferentialEquality>
<androidx.compose.runtime.ParcelableSnapshotMutableState: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.lang.Object, androidx.compose.runtime.SnapshotMutationPolicy)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState r0;
        java.lang.Object r1;
        androidx.compose.runtime.SnapshotMutationPolicy r2;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.runtime.SnapshotMutationPolicy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "policy");

        specialinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl: void <init>(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy)>(r1, r2);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState r0;
        android.os.Parcel r1;
        int i0;
        androidx.compose.runtime.SnapshotMutationPolicy r2, $r4, $r5, $r6;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;
        byte $b1;
        java.lang.IllegalStateException r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parcel");

        $r3 = virtualinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState: java.lang.Object getValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeValue(java.lang.Object)>($r3);

        r2 = virtualinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy neverEqualPolicy()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label4;

     label1:
        $r5 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z1 == 0 goto label2;

        $b1 = 1;

        goto label4;

     label2:
        $r6 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy referentialEqualityPolicy()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z2 == 0 goto label3;

        $b1 = 2;

        goto label4;

     label3:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Only known types of MutableState\'s SnapshotMutationPolicy are supported");

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        return;
    }

    public int describeContents()
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState r0;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState;

        return 0;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion $r0;
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.compose.runtime.ParcelableSnapshotMutableState$Companion;

        specialinvoke $r0.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.runtime.ParcelableSnapshotMutableState: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion Companion> = $r0;

        $r1 = new androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.compose.runtime.ParcelableSnapshotMutableState: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1
    void <init>()
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.compose.runtime.ParcelableSnapshotMutableState createFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2, $r12;
        java.lang.Object r3;
        int i0;
        java.lang.StringBuilder $r6, $r7, $r8, r16;
        java.lang.String $r9;
        java.lang.Class $r10;
        androidx.compose.runtime.SnapshotMutationPolicy $r15;
        java.lang.IllegalStateException r17;
        androidx.compose.runtime.ParcelableSnapshotMutableState r18;
        java.lang.Throwable r19;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parcel");

        $r12 = r2;

        if r2 != null goto label1;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>($r12);

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r18 = new androidx.compose.runtime.ParcelableSnapshotMutableState;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        $r15 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy neverEqualPolicy()>();

        goto label6;

     label3:
        $r15 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

        goto label6;

     label4:
        $r15 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy referentialEqualityPolicy()>();

        goto label6;

     label5:
        r17 = new java.lang.IllegalStateException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported MutableState policy ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was restored");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label6:
        specialinvoke r18.<androidx.compose.runtime.ParcelableSnapshotMutableState: void <init>(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy)>(r3, $r15);

        return r18;
    }

    public androidx.compose.runtime.ParcelableSnapshotMutableState createFromParcel(android.os.Parcel)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.compose.runtime.ParcelableSnapshotMutableState $r2;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parcel");

        $r2 = virtualinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1: androidx.compose.runtime.ParcelableSnapshotMutableState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r1, null);

        return $r2;
    }

    public androidx.compose.runtime.ParcelableSnapshotMutableState[] newArray(int)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;
        int i0;
        androidx.compose.runtime.ParcelableSnapshotMutableState[] $r1;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.compose.runtime.ParcelableSnapshotMutableState)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        androidx.compose.runtime.ParcelableSnapshotMutableState $r3;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1: androidx.compose.runtime.ParcelableSnapshotMutableState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.compose.runtime.ParcelableSnapshotMutableState $r2;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1: androidx.compose.runtime.ParcelableSnapshotMutableState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1 r0;
        int i0;
        androidx.compose.runtime.ParcelableSnapshotMutableState[] $r1;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion$CREATOR$1: androidx.compose.runtime.ParcelableSnapshotMutableState[] newArray(int)>(i0);

        return $r1;
    }

androidx.compose.runtime.ParcelableSnapshotMutableState$Companion
    private void <init>()
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion r0;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getCREATOR$annotations()
    {
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.runtime.ParcelableSnapshotMutableState$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.runtime.ParcelableSnapshotMutableState$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.runtime.ParcelableSnapshotMutableState$Companion: void <init>()>();

        return;
    }

