kotlinx.coroutines.internal.ScopeCoroutine
<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>
    public void <init>(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlin.coroutines.Continuation $r2;

        $r0 := @this: kotlinx.coroutines.internal.ScopeCoroutine;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "uCont");

        specialinvoke $r0.<kotlinx.coroutines.AbstractCoroutine: void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean)>($r1, 1, 1);

        $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont> = $r2;

        return;
    }

    protected void afterCompletion(java.lang.Object)
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2, $r3;

        $r0 := @this: kotlinx.coroutines.internal.ScopeCoroutine;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r2);

        $r3 = $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>;

        $r1 = staticinvoke <kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r3);

        staticinvoke <kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r2, $r1, null, 2, null);

        return;
    }

    protected void afterResume(java.lang.Object)
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @this: kotlinx.coroutines.internal.ScopeCoroutine;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>;

        $r2 = staticinvoke <kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)>($r2, $r1);

        interfaceinvoke $r1.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r2);

        return;
    }

    public final kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;
        boolean $z0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r2;

        $r0 := @this: kotlinx.coroutines.internal.ScopeCoroutine;

        $r1 = $r0.<kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont>;

        $z0 = $r1 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 == 0 goto label1;

        $r2 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r1;

        return $r2;

     label1:
        return null;
    }

    public final java.lang.StackTraceElement getStackTraceElement()
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;

        $r0 := @this: kotlinx.coroutines.internal.ScopeCoroutine;

        return null;
    }

    protected final boolean isScopedCoroutine()
    {
        kotlinx.coroutines.internal.ScopeCoroutine $r0;

        $r0 := @this: kotlinx.coroutines.internal.ScopeCoroutine;

        return 1;
    }

