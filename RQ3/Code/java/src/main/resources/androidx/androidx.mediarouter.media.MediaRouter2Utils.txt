androidx.mediarouter.media.MediaRouter2Utils
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String FEATURE_EMPTY>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String FEATURE_REMOTE_GROUP_PLAYBACK>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_EXTRAS>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_CONTROL_FILTERS>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_DEVICE_TYPE>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_PLAYBACK_TYPE>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_ORIGINAL_ROUTE_ID>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_MESSENGER>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_SESSION_NAME>
<androidx.mediarouter.media.MediaRouter2Utils: java.lang.String KEY_GROUP_ROUTE>
    private void <init>()
    {
        androidx.mediarouter.media.MediaRouter2Utils r0;

        r0 := @this: androidx.mediarouter.media.MediaRouter2Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.media.MediaRoute2Info toFwkMediaRoute2Info(androidx.mediarouter.media.MediaRouteDescriptor)
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.media.MediaRoute2Info$Builder r1, $r3, $r7, $r8, $r9, $r10, $r11, $r14;
        android.os.Bundle r2, $r17, $r18;
        java.lang.String $r4, $r5, $r6, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.List $r12, $r20, $r23, $r28;
        java.util.Collection $r13;
        android.net.Uri $r15;
        java.util.ArrayList $r19;
        boolean $z0, $z1;
        android.media.MediaRoute2Info $r24;

        r0 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new android.media.MediaRoute2Info$Builder;

        $r4 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $r5 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        specialinvoke $r3.<android.media.MediaRoute2Info$Builder: void <init>(java.lang.String,java.lang.CharSequence)>($r4, $r5);

        $r6 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getDescription()>();

        $r7 = virtualinvoke $r3.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setDescription(java.lang.CharSequence)>($r6);

        $i0 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getConnectionState()>();

        $r8 = virtualinvoke $r7.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setConnectionState(int)>($i0);

        $i1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeHandling()>();

        $r9 = virtualinvoke $r8.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolumeHandling(int)>($i1);

        $i2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolume()>();

        $r10 = virtualinvoke $r9.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolume(int)>($i2);

        $i3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeMax()>();

        $r11 = virtualinvoke $r10.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolumeMax(int)>($i3);

        $r12 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getControlFilters()>();

        $r13 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.util.Collection toFeatures(java.util.List)>($r12);

        $r14 = virtualinvoke $r11.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeatures(java.util.Collection)>($r13);

        $r15 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.net.Uri getIconUri()>();

        r1 = virtualinvoke $r14.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setIconUri(android.net.Uri)>($r15);

        $i4 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getDeviceType()>();

        lookupswitch($i4)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        virtualinvoke r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.REMOTE_VIDEO_PLAYBACK");

     label3:
        virtualinvoke r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.REMOTE_AUDIO_PLAYBACK");

     label4:
        $r28 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z1 = interfaceinvoke $r28.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        virtualinvoke r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.REMOTE_GROUP_PLAYBACK");

     label5:
        $r17 = new android.os.Bundle;

        specialinvoke $r17.<android.os.Bundle: void <init>()>();

        r2 = $r17;

        $r18 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle getExtras()>();

        virtualinvoke r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("androidx.mediarouter.media.KEY_EXTRAS", $r18);

        $r19 = new java.util.ArrayList;

        $r20 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getControlFilters()>();

        specialinvoke $r19.<java.util.ArrayList: void <init>(java.util.Collection)>($r20);

        virtualinvoke r2.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("androidx.mediarouter.media.KEY_CONTROL_FILTERS", $r19);

        $i5 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getDeviceType()>();

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("androidx.mediarouter.media.KEY_DEVICE_TYPE", $i5);

        $i6 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getPlaybackType()>();

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("androidx.mediarouter.media.KEY_PLAYBACK_TYPE", $i6);

        $r21 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.mediarouter.media.KEY_ORIGINAL_ROUTE_ID", $r21);

        virtualinvoke r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setExtras(android.os.Bundle)>(r2);

        $r23 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getControlFilters()>();

        $z0 = interfaceinvoke $r23.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        virtualinvoke r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.EMPTY");

     label6:
        $r24 = virtualinvoke r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info build()>();

        return $r24;
    }

    public static androidx.mediarouter.media.MediaRouteDescriptor toMediaRouteDescriptor(android.media.MediaRoute2Info)
    {
        android.media.MediaRoute2Info r0;
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r1, $r6, $r10, $r11, $r12, $r13, $r15, $r16;
        java.lang.CharSequence r2, $r8;
        android.net.Uri r3;
        android.os.Bundle r4, $r14, $r17;
        java.util.ArrayList r5;
        java.lang.String $r7, $r9, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        androidx.mediarouter.media.MediaRouteDescriptor $r21;

        r0 := @parameter0: android.media.MediaRoute2Info;

        if r0 != null goto label1;

        return null;

     label1:
        $r6 = new androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        $r7 = virtualinvoke r0.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $r8 = virtualinvoke r0.<android.media.MediaRoute2Info: java.lang.CharSequence getName()>();

        $r9 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r6.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: void <init>(java.lang.String,java.lang.String)>($r7, $r9);

        $i0 = virtualinvoke r0.<android.media.MediaRoute2Info: int getConnectionState()>();

        $r10 = virtualinvoke $r6.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setConnectionState(int)>($i0);

        $i1 = virtualinvoke r0.<android.media.MediaRoute2Info: int getVolumeHandling()>();

        $r11 = virtualinvoke $r10.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolumeHandling(int)>($i1);

        $i2 = virtualinvoke r0.<android.media.MediaRoute2Info: int getVolumeMax()>();

        $r12 = virtualinvoke $r11.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolumeMax(int)>($i2);

        $i3 = virtualinvoke r0.<android.media.MediaRoute2Info: int getVolume()>();

        $r13 = virtualinvoke $r12.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolume(int)>($i3);

        $r14 = virtualinvoke r0.<android.media.MediaRoute2Info: android.os.Bundle getExtras()>();

        $r15 = virtualinvoke $r13.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setExtras(android.os.Bundle)>($r14);

        $r16 = virtualinvoke $r15.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setEnabled(boolean)>(1);

        r1 = virtualinvoke $r16.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setCanDisconnect(boolean)>(0);

        r2 = virtualinvoke r0.<android.media.MediaRoute2Info: java.lang.CharSequence getDescription()>();

        if r2 == null goto label2;

        $r24 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setDescription(java.lang.String)>($r24);

     label2:
        r3 = virtualinvoke r0.<android.media.MediaRoute2Info: android.net.Uri getIconUri()>();

        if r3 == null goto label3;

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setIconUri(android.net.Uri)>(r3);

     label3:
        r4 = virtualinvoke r0.<android.media.MediaRoute2Info: android.os.Bundle getExtras()>();

        if r4 == null goto label4;

        $z0 = virtualinvoke r4.<android.os.Bundle: boolean containsKey(java.lang.String)>("androidx.mediarouter.media.KEY_EXTRAS");

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r4.<android.os.Bundle: boolean containsKey(java.lang.String)>("androidx.mediarouter.media.KEY_DEVICE_TYPE");

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r4.<android.os.Bundle: boolean containsKey(java.lang.String)>("androidx.mediarouter.media.KEY_CONTROL_FILTERS");

        if $z2 != 0 goto label5;

     label4:
        return null;

     label5:
        $r17 = virtualinvoke r4.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("androidx.mediarouter.media.KEY_EXTRAS");

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setExtras(android.os.Bundle)>($r17);

        $i4 = virtualinvoke r4.<android.os.Bundle: int getInt(java.lang.String,int)>("androidx.mediarouter.media.KEY_DEVICE_TYPE", 0);

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setDeviceType(int)>($i4);

        $i5 = virtualinvoke r4.<android.os.Bundle: int getInt(java.lang.String,int)>("androidx.mediarouter.media.KEY_PLAYBACK_TYPE", 1);

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setPlaybackType(int)>($i5);

        r5 = virtualinvoke r4.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("androidx.mediarouter.media.KEY_CONTROL_FILTERS");

        if r5 == null goto label6;

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder addControlFilters(java.util.Collection)>(r5);

     label6:
        $r21 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor build()>();

        return $r21;
    }

    static java.util.Collection toFeatures(java.util.List)
    {
        java.util.List r0;
        java.util.HashSet r1, $r4;
        java.util.Iterator r2;
        android.content.IntentFilter r3;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;

        r0 := @parameter0: java.util.List;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.IntentFilter) $r5;

        i0 = virtualinvoke r3.<android.content.IntentFilter: int countCategories()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r6 = virtualinvoke r3.<android.content.IntentFilter: java.lang.String getCategory(int)>(i1);

        $r7 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.lang.String toRouteFeature(java.lang.String)>($r6);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        return r1;
    }

    static java.util.List toControlFilters(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.ArrayList r1, $r6, $r11;
        android.util.ArraySet r2, $r7;
        java.util.Iterator r3;
        java.lang.String r4, $r10;
        android.content.IntentFilter r5, $r9;
        java.lang.Object $r8;
        boolean $z0, $z3;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        return $r11;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r2 = $r7;

        r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        goto label2;

     label3:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r4);

        $r9 = new android.content.IntentFilter;

        specialinvoke $r9.<android.content.IntentFilter: void <init>()>();

        r5 = $r9;

        $r10 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.lang.String toControlCategory(java.lang.String)>(r4);

        virtualinvoke r5.<android.content.IntentFilter: void addCategory(java.lang.String)>($r10);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label2;

     label4:
        return r1;
    }

    static java.util.List getRouteIds(java.util.List)
    {
        java.util.List r0;
        java.util.ArrayList r1, $r4, $r7;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        java.lang.Object $r5;
        java.lang.String $r6;
        boolean $z1;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        return $r7;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r5;

        if r3 != null goto label3;

        goto label2;

     label3:
        $r6 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label4:
        return r1;
    }

    static androidx.mediarouter.media.MediaRouteDiscoveryRequest toMediaRouteDiscoveryRequest(android.media.RouteDiscoveryPreference)
    {
        android.media.RouteDiscoveryPreference r0;
        java.util.ArrayList r1, $r3;
        java.lang.String r2, $r9;
        java.util.List $r4;
        boolean $z0, $z1;
        androidx.mediarouter.media.MediaRouteSelector$Builder $r5, $r6;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r7;
        java.lang.Object $r8;
        java.util.Iterator r10;
        androidx.mediarouter.media.MediaRouteSelector r11;

        r0 := @parameter0: android.media.RouteDiscoveryPreference;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r8;

        $r9 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.lang.String toControlCategory(java.lang.String)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r5 = new androidx.mediarouter.media.MediaRouteSelector$Builder;

        specialinvoke $r5.<androidx.mediarouter.media.MediaRouteSelector$Builder: void <init>()>();

        $r6 = virtualinvoke $r5.<androidx.mediarouter.media.MediaRouteSelector$Builder: androidx.mediarouter.media.MediaRouteSelector$Builder addControlCategories(java.util.Collection)>(r1);

        r11 = virtualinvoke $r6.<androidx.mediarouter.media.MediaRouteSelector$Builder: androidx.mediarouter.media.MediaRouteSelector build()>();

        $r7 = new androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $z1 = virtualinvoke r0.<android.media.RouteDiscoveryPreference: boolean shouldPerformActiveScan()>();

        specialinvoke $r7.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: void <init>(androidx.mediarouter.media.MediaRouteSelector,boolean)>(r11, $z1);

        return $r7;
    }

    static android.media.RouteDiscoveryPreference toDiscoveryPreference(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList r1, $r5, $r7;
        java.util.Iterator r2;
        java.lang.String r3, $r13;
        android.media.RouteDiscoveryPreference$Builder $r4, $r10;
        android.media.RouteDiscoveryPreference $r6, $r11;
        androidx.mediarouter.media.MediaRouteSelector $r8;
        java.util.List $r9;
        java.lang.Object $r12;

        r0 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        if r0 == null goto label1;

        $z1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isValid()>();

        if $z1 != 0 goto label2;

     label1:
        $r4 = new android.media.RouteDiscoveryPreference$Builder;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        specialinvoke $r4.<android.media.RouteDiscoveryPreference$Builder: void <init>(java.util.List,boolean)>($r5, 0);

        $r6 = virtualinvoke $r4.<android.media.RouteDiscoveryPreference$Builder: android.media.RouteDiscoveryPreference build()>();

        return $r6;

     label2:
        z0 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isActiveScan()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = $r7;

        $r8 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector getSelector()>();

        $r9 = virtualinvoke $r8.<androidx.mediarouter.media.MediaRouteSelector: java.util.List getControlCategories()>();

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r12;

        $r13 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.lang.String toRouteFeature(java.lang.String)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label3;

     label4:
        $r10 = new android.media.RouteDiscoveryPreference$Builder;

        specialinvoke $r10.<android.media.RouteDiscoveryPreference$Builder: void <init>(java.util.List,boolean)>(r1, z0);

        $r11 = virtualinvoke $r10.<android.media.RouteDiscoveryPreference$Builder: android.media.RouteDiscoveryPreference build()>();

        return $r11;
    }

    static java.lang.String toRouteFeature(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0, $z1, $z2;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2065577523: goto label3;
            case 956939050: goto label1;
            case 975975375: goto label2;
            default: goto label4;
        };

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.intent.category.LIVE_AUDIO");

        if $z1 == 0 goto label4;

        b1 = 0;

        goto label4;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.intent.category.LIVE_VIDEO");

        if $z0 == 0 goto label4;

        b1 = 1;

        goto label4;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.intent.category.REMOTE_PLAYBACK");

        if $z2 == 0 goto label4;

        b1 = 2;

     label4:
        tableswitch(b1)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label8;
        };

     label5:
        return "android.media.route.feature.LIVE_AUDIO";

     label6:
        return "android.media.route.feature.LIVE_VIDEO";

     label7:
        return "android.media.route.feature.REMOTE_PLAYBACK";

     label8:
        return r0;
    }

    static java.lang.String toControlCategory(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0, $z1, $z2;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 94496206: goto label3;
            case 1328964233: goto label1;
            case 1348000558: goto label2;
            default: goto label4;
        };

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.route.feature.LIVE_AUDIO");

        if $z1 == 0 goto label4;

        b1 = 0;

        goto label4;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.route.feature.LIVE_VIDEO");

        if $z0 == 0 goto label4;

        b1 = 1;

        goto label4;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.route.feature.REMOTE_PLAYBACK");

        if $z2 == 0 goto label4;

        b1 = 2;

     label4:
        tableswitch(b1)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label8;
        };

     label5:
        return "android.media.intent.category.LIVE_AUDIO";

     label6:
        return "android.media.intent.category.LIVE_VIDEO";

     label7:
        return "android.media.intent.category.REMOTE_PLAYBACK";

     label8:
        return r0;
    }

