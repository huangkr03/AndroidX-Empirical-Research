androidx.compose.ui.window.PopupLayout
<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function0 onDismissRequest>
<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties>
<androidx.compose.ui.window.PopupLayout: java.lang.String testTag>
<androidx.compose.ui.window.PopupLayout: android.view.View composeView>
<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper>
<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager>
<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>
<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider positionProvider>
<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection parentLayoutDirection>
<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState popupContentSize$delegate>
<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState parentLayoutCoordinates$delegate>
<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntRect parentBounds>
<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.State canCalculatePosition$delegate>
<androidx.compose.ui.window.PopupLayout: float maxSupportedElevation>
<androidx.compose.ui.window.PopupLayout: android.graphics.Rect previousWindowVisibleFrame>
<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState content$delegate>
<androidx.compose.ui.window.PopupLayout: boolean shouldCreateCompositionOnAttachedToWindow>
<androidx.compose.ui.window.PopupLayout: int[] locationOnScreen>
    public void <init>(kotlin.jvm.functions.Function0, androidx.compose.ui.window.PopupProperties, java.lang.String, android.view.View, androidx.compose.ui.unit.Density, androidx.compose.ui.window.PopupPositionProvider, java.util.UUID, androidx.compose.ui.window.PopupLayoutHelper)
    {
        androidx.compose.ui.window.PopupLayout r0;
        kotlin.jvm.functions.Function0 r1, $r19;
        androidx.compose.ui.window.PopupProperties r2;
        java.lang.String r3, $r34;
        android.view.View r4, $r10, $r22, $r23, $r25, $r26, $r28, $r29;
        androidx.compose.ui.unit.Density r5;
        androidx.compose.ui.window.PopupPositionProvider r6;
        java.util.UUID r7;
        androidx.compose.ui.window.PopupLayoutHelper r8;
        android.content.Context $r9, $r11;
        java.lang.Object $r12;
        android.view.WindowManager $r13;
        android.view.WindowManager$LayoutParams $r14;
        androidx.compose.ui.unit.LayoutDirection $r15;
        androidx.compose.runtime.MutableState $r16, $r17, $r39;
        androidx.compose.ui.window.PopupLayout$canCalculatePosition$2 $r18;
        androidx.compose.runtime.State $r20;
        float $f0, $f1, $f2, $f3;
        android.graphics.Rect $r21;
        androidx.lifecycle.LifecycleOwner $r24;
        androidx.lifecycle.ViewModelStoreOwner $r27;
        androidx.savedstate.SavedStateRegistryOwner $r30;
        java.lang.StringBuilder $r31, $r32, $r33;
        int $i0;
        androidx.compose.ui.window.PopupLayout$2 $r35;
        android.view.ViewOutlineProvider $r36;
        androidx.compose.ui.window.ComposableSingletons$AndroidPopup_androidKt $r37;
        kotlin.jvm.functions.Function2 $r38;
        int[] $r40;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.compose.ui.window.PopupProperties;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.view.View;

        r5 := @parameter4: androidx.compose.ui.unit.Density;

        r6 := @parameter5: androidx.compose.ui.window.PopupPositionProvider;

        r7 := @parameter6: java.util.UUID;

        r8 := @parameter7: androidx.compose.ui.window.PopupLayoutHelper;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "properties");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "testTag");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "composeView");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "density");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "initialPositionProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "popupId");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "popupLayoutHelper");

        $r9 = virtualinvoke r4.<android.view.View: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "composeView.context");

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r9, null, 0, 6, null);

        r0.<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function0 onDismissRequest> = r1;

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties> = r2;

        r0.<androidx.compose.ui.window.PopupLayout: java.lang.String testTag> = r3;

        r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView> = r4;

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper> = r8;

        $r10 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r11 = virtualinvoke $r10.<android.view.View: android.content.Context getContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r12, "null cannot be cast to non-null type android.view.WindowManager");

        $r13 = (android.view.WindowManager) $r12;

        r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager> = $r13;

        $r14 = specialinvoke r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams createLayoutParams()>();

        r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params> = $r14;

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider positionProvider> = r6;

        $r15 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection parentLayoutDirection> = $r15;

        $r16 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState popupContentSize$delegate> = $r16;

        $r17 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState parentLayoutCoordinates$delegate> = $r17;

        $r18 = new androidx.compose.ui.window.PopupLayout$canCalculatePosition$2;

        specialinvoke $r18.<androidx.compose.ui.window.PopupLayout$canCalculatePosition$2: void <init>(androidx.compose.ui.window.PopupLayout)>(r0);

        $r19 = (kotlin.jvm.functions.Function0) $r18;

        $r20 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State derivedStateOf(kotlin.jvm.functions.Function0)>($r19);

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.State canCalculatePosition$delegate> = $r20;

        $f0 = (float) 8;

        $f1 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f0);

        r0.<androidx.compose.ui.window.PopupLayout: float maxSupportedElevation> = $f1;

        $r21 = new android.graphics.Rect;

        specialinvoke $r21.<android.graphics.Rect: void <init>()>();

        r0.<androidx.compose.ui.window.PopupLayout: android.graphics.Rect previousWindowVisibleFrame> = $r21;

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void setId(int)>(16908290);

        $r23 = (android.view.View) r0;

        $r22 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r24 = staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: androidx.lifecycle.LifecycleOwner get(android.view.View)>($r22);

        staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>($r23, $r24);

        $r26 = (android.view.View) r0;

        $r25 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r27 = staticinvoke <androidx.lifecycle.ViewTreeViewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner get(android.view.View)>($r25);

        staticinvoke <androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)>($r26, $r27);

        $r29 = (android.view.View) r0;

        $r28 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r30 = staticinvoke <androidx.savedstate.ViewTreeSavedStateRegistryOwner: androidx.savedstate.SavedStateRegistryOwner get(android.view.View)>($r28);

        staticinvoke <androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)>($r29, $r30);

        $i0 = <androidx.compose.ui.R$id: int compose_view_saveable_id_tag>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Popup:");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void setTag(int,java.lang.Object)>($i0, $r34);

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void setClipChildren(boolean)>(0);

        $f2 = r0.<androidx.compose.ui.window.PopupLayout: float maxSupportedElevation>;

        $f3 = interfaceinvoke r5.<androidx.compose.ui.unit.Density: float toPx-0680j_4(float)>($f2);

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void setElevation(float)>($f3);

        $r35 = new androidx.compose.ui.window.PopupLayout$2;

        specialinvoke $r35.<androidx.compose.ui.window.PopupLayout$2: void <init>()>();

        $r36 = (android.view.ViewOutlineProvider) $r35;

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void setOutlineProvider(android.view.ViewOutlineProvider)>($r36);

        $r37 = <androidx.compose.ui.window.ComposableSingletons$AndroidPopup_androidKt: androidx.compose.ui.window.ComposableSingletons$AndroidPopup_androidKt INSTANCE>;

        $r38 = virtualinvoke $r37.<androidx.compose.ui.window.ComposableSingletons$AndroidPopup_androidKt: kotlin.jvm.functions.Function2 getLambda-1$ui_release()>();

        $r39 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r38, null, 2, null);

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState content$delegate> = $r39;

        $r40 = newarray (int)[2];

        r0.<androidx.compose.ui.window.PopupLayout: int[] locationOnScreen> = $r40;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function0, androidx.compose.ui.window.PopupProperties, java.lang.String, android.view.View, androidx.compose.ui.unit.Density, androidx.compose.ui.window.PopupPositionProvider, java.util.UUID, androidx.compose.ui.window.PopupLayoutHelper, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.window.PopupLayout r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.window.PopupProperties r2;
        java.lang.String r3;
        android.view.View r4;
        androidx.compose.ui.unit.Density r5;
        androidx.compose.ui.window.PopupPositionProvider r6;
        java.util.UUID r7;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r8;
        androidx.compose.ui.window.PopupLayoutHelperImpl $r9;
        androidx.compose.ui.window.PopupLayoutHelperImpl29 $r10;
        androidx.compose.ui.window.PopupLayoutHelper r11, $r12;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.compose.ui.window.PopupProperties;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.view.View;

        r5 := @parameter4: androidx.compose.ui.unit.Density;

        r6 := @parameter5: androidx.compose.ui.window.PopupPositionProvider;

        r7 := @parameter6: java.util.UUID;

        r11 := @parameter7: androidx.compose.ui.window.PopupLayoutHelper;

        i0 := @parameter8: int;

        r8 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 128;

        if $i1 == 0 goto label3;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 29 goto label1;

        $r10 = new androidx.compose.ui.window.PopupLayoutHelperImpl29;

        specialinvoke $r10.<androidx.compose.ui.window.PopupLayoutHelperImpl29: void <init>()>();

        $r12 = (androidx.compose.ui.window.PopupLayoutHelper) $r10;

        goto label2;

     label1:
        $r9 = new androidx.compose.ui.window.PopupLayoutHelperImpl;

        specialinvoke $r9.<androidx.compose.ui.window.PopupLayoutHelperImpl: void <init>()>();

        $r12 = (androidx.compose.ui.window.PopupLayoutHelper) $r9;

     label2:
        r11 = $r12;

     label3:
        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void <init>(kotlin.jvm.functions.Function0,androidx.compose.ui.window.PopupProperties,java.lang.String,android.view.View,androidx.compose.ui.unit.Density,androidx.compose.ui.window.PopupPositionProvider,java.util.UUID,androidx.compose.ui.window.PopupLayoutHelper)>(r1, r2, r3, r4, r5, r6, r7, r11);

        return;
    }

    public final java.lang.String getTestTag()
    {
        androidx.compose.ui.window.PopupLayout r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: java.lang.String testTag>;

        return $r1;
    }

    public final void setTestTag(java.lang.String)
    {
        androidx.compose.ui.window.PopupLayout r0;
        java.lang.String r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.window.PopupLayout: java.lang.String testTag> = r1;

        return;
    }

    public final android.view.WindowManager$LayoutParams getParams$ui_release()
    {
        androidx.compose.ui.window.PopupLayout r0;
        android.view.WindowManager$LayoutParams $r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        return $r1;
    }

    public static void getParams$ui_release$annotations()
    {
        return;
    }

    public final androidx.compose.ui.window.PopupPositionProvider getPositionProvider()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.window.PopupPositionProvider $r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider positionProvider>;

        return $r1;
    }

    public final void setPositionProvider(androidx.compose.ui.window.PopupPositionProvider)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.window.PopupPositionProvider r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.window.PopupPositionProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider positionProvider> = r1;

        return;
    }

    public final androidx.compose.ui.unit.LayoutDirection getParentLayoutDirection()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.unit.LayoutDirection $r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection parentLayoutDirection>;

        return $r1;
    }

    public final void setParentLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.unit.LayoutDirection r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.unit.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection parentLayoutDirection> = r1;

        return;
    }

    public final androidx.compose.ui.unit.IntSize getPopupContentSize-bOM6tXw()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.ui.unit.IntSize $r4;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState popupContentSize$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.ui.unit.IntSize) $r3;

        return $r4;
    }

    public final void setPopupContentSize-fhxjrPA(androidx.compose.ui.unit.IntSize)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.unit.IntSize r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.unit.IntSize;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState popupContentSize$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    private final androidx.compose.ui.layout.LayoutCoordinates getParentLayoutCoordinates()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.ui.layout.LayoutCoordinates $r4;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState parentLayoutCoordinates$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.ui.layout.LayoutCoordinates) $r3;

        return $r4;
    }

    private final void setParentLayoutCoordinates(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState parentLayoutCoordinates$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final boolean getCanCalculatePosition()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.runtime.State $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.State canCalculatePosition$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public androidx.compose.ui.platform.AbstractComposeView getSubCompositionView()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.platform.AbstractComposeView $r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = (androidx.compose.ui.platform.AbstractComposeView) r0;

        return $r1;
    }

    private final kotlin.jvm.functions.Function2 getContent()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState content$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        return $r4;
    }

    private final void setContent(kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.window.PopupLayout r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.runtime.MutableState content$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    protected boolean getShouldCreateCompositionOnAttachedToWindow()
    {
        androidx.compose.ui.window.PopupLayout r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $z0 = r0.<androidx.compose.ui.window.PopupLayout: boolean shouldCreateCompositionOnAttachedToWindow>;

        return $z0;
    }

    public final void show()
    {
        androidx.compose.ui.window.PopupLayout r0;
        android.view.WindowManager$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.View $r3;
        android.view.WindowManager $r4;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager>;

        $r3 = (android.view.View) r0;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $r2 = (android.view.ViewGroup$LayoutParams) $r1;

        interfaceinvoke $r4.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r2);

        return;
    }

    public final void setContent(androidx.compose.runtime.CompositionContext, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.runtime.CompositionContext r1;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.runtime.CompositionContext;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void setParentCompositionContext(androidx.compose.runtime.CompositionContext)>(r1);

        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void setContent(kotlin.jvm.functions.Function2)>(r2);

        r0.<androidx.compose.ui.window.PopupLayout: boolean shouldCreateCompositionOnAttachedToWindow> = 1;

        return;
    }

    public void Content(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.window.PopupLayout r0;
        int $i0;
        boolean $z0, $z1;
        kotlin.jvm.functions.Function2 $r1, $r6;
        java.lang.Integer $r2;
        androidx.compose.runtime.ScopeUpdateScope $r4;
        androidx.compose.ui.window.PopupLayout$Content$4 $r5;
        androidx.compose.runtime.Composer $r7, $r8;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r7 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r8 = interfaceinvoke $r7.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-857613600);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r8, "C(Content)462@19067L9:AndroidPopup.android.kt#2oxthz");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-857613600, $i0, -1, "androidx.compose.ui.window.PopupLayout.Content (AndroidPopup.android.kt:461)");

     label1:
        $r1 = specialinvoke r0.<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function2 getContent()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r8, $r2);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        $r4 = interfaceinvoke $r8.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r4 != null goto label3;

        goto label4;

     label3:
        $r5 = new androidx.compose.ui.window.PopupLayout$Content$4;

        specialinvoke $r5.<androidx.compose.ui.window.PopupLayout$Content$4: void <init>(androidx.compose.ui.window.PopupLayout,int)>(r0, $i0);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        interfaceinvoke $r4.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r6);

     label4:
        return;
    }

    public void internalOnMeasure$ui_release(int, int)
    {
        androidx.compose.ui.window.PopupLayout r0;
        int i0, i1, i2, i3, $i4, $i5;
        androidx.compose.ui.window.PopupProperties $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.window.PopupProperties: boolean getUsePlatformDefaultWidth()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void internalOnMeasure$ui_release(int,int)>(i0, i1);

        goto label2;

     label1:
        $i4 = specialinvoke r0.<androidx.compose.ui.window.PopupLayout: int getDisplayWidth()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, -2147483648);

        $i5 = specialinvoke r0.<androidx.compose.ui.window.PopupLayout: int getDisplayHeight()>();

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, -2147483648);

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void internalOnMeasure$ui_release(int,int)>(i2, i3);

     label2:
        return;
    }

    public void internalOnLayout$ui_release(boolean, int, int, int, int)
    {
        androidx.compose.ui.window.PopupLayout r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5;
        android.view.View r1, $r2, $r7;
        android.view.WindowManager$LayoutParams $r3, $r4, $r5;
        android.view.ViewGroup$LayoutParams $r6;
        android.view.WindowManager $r8;
        androidx.compose.ui.window.PopupLayoutHelper $r9;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void internalOnLayout$ui_release(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $r2 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.view.View getChildAt(int)>(0);

        if $r2 != null goto label1;

        return;

     label1:
        r1 = $r2;

        $r3 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i4 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $r3.<android.view.WindowManager$LayoutParams: int width> = $i4;

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i5 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r4.<android.view.WindowManager$LayoutParams: int height> = $i5;

        $r9 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper>;

        $r8 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager>;

        $r7 = (android.view.View) r0;

        $r5 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $r6 = (android.view.ViewGroup$LayoutParams) $r5;

        interfaceinvoke $r9.<androidx.compose.ui.window.PopupLayoutHelper: void updateViewLayout(android.view.WindowManager,android.view.View,android.view.ViewGroup$LayoutParams)>($r8, $r7, $r6);

        return;
    }

    private final int getDisplayWidth()
    {
        androidx.compose.ui.window.PopupLayout r0;
        float f0, $f1, $f2;
        android.content.Context $r1, $r4;
        android.content.res.Resources $r2, $r5;
        android.util.DisplayMetrics $r3;
        android.content.res.Configuration $r6;
        int $i0, $i1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r3.<android.util.DisplayMetrics: float density>;

        $r4 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r6.<android.content.res.Configuration: int screenWidthDp>;

        $f1 = (float) $i0;

        $f2 = $f1 * f0;

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        return $i1;
    }

    private final int getDisplayHeight()
    {
        androidx.compose.ui.window.PopupLayout r0;
        float f0, $f1, $f2;
        android.content.Context $r1, $r4;
        android.content.res.Resources $r2, $r5;
        android.util.DisplayMetrics $r3;
        android.content.res.Configuration $r6;
        int $i0, $i1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r3.<android.util.DisplayMetrics: float density>;

        $r4 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r6.<android.content.res.Configuration: int screenHeightDp>;

        $f1 = (float) $i0;

        $f2 = $f1 * f0;

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        return $i1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.compose.ui.window.PopupLayout r0;
        android.view.KeyEvent r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.ui.window.PopupProperties $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.KeyEvent$DispatcherState $r3, r6, r7;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: android.view.KeyEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 4 goto label5;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties>;

        $z0 = virtualinvoke $r2.<androidx.compose.ui.window.PopupProperties: boolean getDismissOnBackPress()>();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if $r3 != null goto label1;

        $z3 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z3;

     label1:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label3;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label3;

        r6 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r6 == null goto label2;

        virtualinvoke r6.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

        goto label2;

     label2:
        return 1;

     label3:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 1 goto label5;

        r7 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r7 == null goto label5;

        $z1 = virtualinvoke r7.<android.view.KeyEvent$DispatcherState: boolean isTracking(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z2 != 0 goto label5;

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function0 onDismissRequest>;

        if $r4 == null goto label4;

        interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label4;

     label4:
        return 1;

     label5:
        $z4 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z4;
    }

    private final void setIsFocusable(boolean)
    {
        androidx.compose.ui.window.PopupLayout r0;
        boolean z0;
        android.view.WindowManager$LayoutParams $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 | 8;

        goto label2;

     label1:
        $r1 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i0 = $r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i0 & -9;

     label2:
        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void applyNewFlags(int)>($i2);

        return;
    }

    private final void setSecurePolicy(androidx.compose.ui.window.SecureFlagPolicy)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.window.SecureFlagPolicy r1;
        boolean z0, $z1;
        android.view.View $r2;
        android.view.WindowManager$LayoutParams $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.window.SecureFlagPolicy;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $z1 = staticinvoke <androidx.compose.ui.window.AndroidPopup_androidKt: boolean isFlagSecureEnabled(android.view.View)>($r2);

        z0 = staticinvoke <androidx.compose.ui.window.SecureFlagPolicy_androidKt: boolean shouldApplySecureFlag(androidx.compose.ui.window.SecureFlagPolicy,boolean)>(r1, $z1);

        if z0 == 0 goto label1;

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i1 = $r4.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 | 8192;

        goto label2;

     label1:
        $r3 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i0 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i0 & -8193;

     label2:
        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void applyNewFlags(int)>($i2);

        return;
    }

    private final void setClippingEnabled(boolean)
    {
        androidx.compose.ui.window.PopupLayout r0;
        boolean z0;
        android.view.WindowManager$LayoutParams $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 & -513;

        goto label2;

     label1:
        $r1 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i0 = $r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i0 | 512;

     label2:
        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void applyNewFlags(int)>($i2);

        return;
    }

    public final void updateParameters(kotlin.jvm.functions.Function0, androidx.compose.ui.window.PopupProperties, java.lang.String, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.ui.window.PopupLayout r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.window.PopupProperties r2;
        java.lang.String r3;
        androidx.compose.ui.unit.LayoutDirection r4;
        boolean $z0, $z1;
        androidx.compose.ui.window.SecureFlagPolicy $r5;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.compose.ui.window.PopupProperties;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.compose.ui.unit.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "properties");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "testTag");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "layoutDirection");

        r0.<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function0 onDismissRequest> = r1;

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties> = r2;

        r0.<androidx.compose.ui.window.PopupLayout: java.lang.String testTag> = r3;

        $z0 = virtualinvoke r2.<androidx.compose.ui.window.PopupProperties: boolean getFocusable()>();

        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void setIsFocusable(boolean)>($z0);

        $r5 = virtualinvoke r2.<androidx.compose.ui.window.PopupProperties: androidx.compose.ui.window.SecureFlagPolicy getSecurePolicy()>();

        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void setSecurePolicy(androidx.compose.ui.window.SecureFlagPolicy)>($r5);

        $z1 = virtualinvoke r2.<androidx.compose.ui.window.PopupProperties: boolean getClippingEnabled()>();

        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void setClippingEnabled(boolean)>($z1);

        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void superSetLayoutDirection(androidx.compose.ui.unit.LayoutDirection)>(r4);

        return;
    }

    private final void applyNewFlags(int)
    {
        androidx.compose.ui.window.PopupLayout r0;
        int i0;
        android.view.WindowManager$LayoutParams $r1, $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.view.View $r4;
        android.view.WindowManager $r5;
        androidx.compose.ui.window.PopupLayoutHelper $r6;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $r1.<android.view.WindowManager$LayoutParams: int flags> = i0;

        $r6 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper>;

        $r5 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager>;

        $r4 = (android.view.View) r0;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $r3 = (android.view.ViewGroup$LayoutParams) $r2;

        interfaceinvoke $r6.<androidx.compose.ui.window.PopupLayoutHelper: void updateViewLayout(android.view.WindowManager,android.view.View,android.view.ViewGroup$LayoutParams)>($r5, $r4, $r3);

        return;
    }

    public final void updateParentLayoutCoordinates(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parentLayoutCoordinates");

        specialinvoke r0.<androidx.compose.ui.window.PopupLayout: void setParentLayoutCoordinates(androidx.compose.ui.layout.LayoutCoordinates)>(r1);

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void updateParentBounds$ui_release()>();

        return;
    }

    public final void pollForLocationOnScreenChange()
    {
        androidx.compose.ui.window.PopupLayout r0;
        int[] r1, $r2, $r4, $r5;
        int i0, i1, $i2, $i3;
        android.view.View $r3;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 = r0.<androidx.compose.ui.window.PopupLayout: int[] locationOnScreen>;

        i0 = r1[0];

        i1 = r1[1];

        $r3 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: int[] locationOnScreen>;

        virtualinvoke $r3.<android.view.View: void getLocationOnScreen(int[])>($r2);

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: int[] locationOnScreen>;

        $i2 = $r4[0];

        if i0 != $i2 goto label1;

        $r5 = r0.<androidx.compose.ui.window.PopupLayout: int[] locationOnScreen>;

        $i3 = $r5[1];

        if i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void updateParentBounds$ui_release()>();

     label2:
        return;
    }

    public final void updateParentBounds$ui_release()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.layout.LayoutCoordinates r1, $r3;
        long l0, l1, l2;
        androidx.compose.ui.unit.IntRect r2, $r4;
        float $f0, $f1;
        int $i3, $i4;
        boolean $z0;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r3 = specialinvoke r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.layout.LayoutCoordinates getParentLayoutCoordinates()>();

        if $r3 != null goto label1;

        return;

     label1:
        r1 = $r3;

        l0 = interfaceinvoke r1.<androidx.compose.ui.layout.LayoutCoordinates: long getSize-YbymL2g()>();

        l1 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: long positionInWindow(androidx.compose.ui.layout.LayoutCoordinates)>(r1);

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $i3 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        l2 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i3, $i4);

        r2 = staticinvoke <androidx.compose.ui.unit.IntRectKt: androidx.compose.ui.unit.IntRect IntRect-VbeCjmY(long,long)>(l2, l0);

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntRect parentBounds>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z0 != 0 goto label2;

        r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntRect parentBounds> = r2;

        virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: void updatePosition()>();

     label2:
        return;
    }

    public final void updatePosition()
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.unit.IntRect r1, r3, $r4;
        long l0, l1, l2;
        android.graphics.Rect r2;
        androidx.compose.ui.unit.IntSize $r5;
        android.view.View $r6, $r15, $r19;
        androidx.compose.ui.window.PopupLayoutHelper $r7, $r17, $r18;
        int $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.compose.ui.unit.LayoutDirection $r8;
        androidx.compose.ui.window.PopupPositionProvider $r9;
        android.view.WindowManager$LayoutParams $r10, $r11, $r13;
        androidx.compose.ui.window.PopupProperties $r12;
        boolean $z1;
        android.view.ViewGroup$LayoutParams $r14;
        android.view.WindowManager $r16;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntRect parentBounds>;

        if $r4 != null goto label1;

        return;

     label1:
        r1 = $r4;

        $r5 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntSize getPopupContentSize-bOM6tXw()>();

        if $r5 == null goto label2;

        goto label3;

     label2:
        return;

     label3:
        l0 = virtualinvoke $r5.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        r2 = r0.<androidx.compose.ui.window.PopupLayout: android.graphics.Rect previousWindowVisibleFrame>;

        $r7 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper>;

        $r6 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        interfaceinvoke $r7.<androidx.compose.ui.window.PopupLayoutHelper: void getWindowVisibleDisplayFrame(android.view.View,android.graphics.Rect)>($r6, r2);

        r3 = staticinvoke <androidx.compose.ui.window.AndroidPopup_androidKt: androidx.compose.ui.unit.IntRect access$toIntBounds(android.graphics.Rect)>(r2);

        $i3 = virtualinvoke r3.<androidx.compose.ui.unit.IntRect: int getWidth()>();

        $i4 = virtualinvoke r3.<androidx.compose.ui.unit.IntRect: int getHeight()>();

        l1 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i3, $i4);

        $r9 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider positionProvider>;

        $r8 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection parentLayoutDirection>;

        l2 = interfaceinvoke $r9.<androidx.compose.ui.window.PopupPositionProvider: long calculatePosition-llwVHH4(androidx.compose.ui.unit.IntRect,long,androidx.compose.ui.unit.LayoutDirection,long)>(r1, l1, $r8, l0);

        $r10 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i5 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l2);

        $r10.<android.view.WindowManager$LayoutParams: int x> = $i5;

        $r11 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l2);

        $r11.<android.view.WindowManager$LayoutParams: int y> = $i6;

        $r12 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties>;

        $z1 = virtualinvoke $r12.<androidx.compose.ui.window.PopupProperties: boolean getExcludeFromSystemGesture()>();

        if $z1 == 0 goto label4;

        $r18 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper>;

        $r19 = (android.view.View) r0;

        $i7 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l1);

        $i8 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>(l1);

        interfaceinvoke $r18.<androidx.compose.ui.window.PopupLayoutHelper: void setGestureExclusionRects(android.view.View,int,int)>($r19, $i7, $i8);

     label4:
        $r17 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupLayoutHelper popupLayoutHelper>;

        $r16 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager>;

        $r15 = (android.view.View) r0;

        $r13 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams params>;

        $r14 = (android.view.ViewGroup$LayoutParams) $r13;

        interfaceinvoke $r17.<androidx.compose.ui.window.PopupLayoutHelper: void updateViewLayout(android.view.WindowManager,android.view.View,android.view.ViewGroup$LayoutParams)>($r16, $r15, $r14);

        return;
    }

    public final void dismiss()
    {
        androidx.compose.ui.window.PopupLayout r0;
        android.view.View $r1, $r2;
        android.view.WindowManager $r3;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r1 = (android.view.View) r0;

        staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>($r1, null);

        $r3 = r0.<androidx.compose.ui.window.PopupLayout: android.view.WindowManager windowManager>;

        $r2 = (android.view.View) r0;

        interfaceinvoke $r3.<android.view.WindowManager: void removeViewImmediate(android.view.View)>($r2);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.compose.ui.window.PopupLayout r0;
        android.view.MotionEvent r1;
        androidx.compose.ui.window.PopupProperties $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        kotlin.jvm.functions.Function0 $r3, $r7;
        int $i0, $i2, $i5, $i7;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b1, $b3, $b4, $b6;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupProperties properties>;

        $z0 = virtualinvoke $r2.<androidx.compose.ui.window.PopupProperties: boolean getDismissOnClickOutside()>();

        if $z0 != 0 goto label01;

        $z2 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label01:
        if r1 == null goto label03;

        $i7 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i7 != 0 goto label02;

        $z3 = 1;

        goto label04;

     label02:
        $z3 = 0;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        if $z3 == 0 goto label07;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $b1 = $f0 cmpg 0.0F;

        if $b1 < 0 goto label05;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i2 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: int getWidth()>();

        $f2 = (float) $i2;

        $b3 = $f1 cmpl $f2;

        if $b3 >= 0 goto label05;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $b4 = $f3 cmpg 0.0F;

        if $b4 < 0 goto label05;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i5 = virtualinvoke r0.<androidx.compose.ui.window.PopupLayout: int getHeight()>();

        $f5 = (float) $i5;

        $b6 = $f4 cmpl $f5;

        if $b6 < 0 goto label07;

     label05:
        $r7 = r0.<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function0 onDismissRequest>;

        if $r7 == null goto label06;

        interfaceinvoke $r7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label06;

     label06:
        return 1;

     label07:
        if r1 == null goto label09;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 4 goto label08;

        $z4 = 1;

        goto label10;

     label08:
        $z4 = 0;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        if $z4 == 0 goto label12;

        $r3 = r0.<androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function0 onDismissRequest>;

        if $r3 == null goto label11;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label11;

     label11:
        return 1;

     label12:
        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void setLayoutDirection(int)
    {
        androidx.compose.ui.window.PopupLayout r0;
        int i0;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        i0 := @parameter0: int;

        return;
    }

    private final void superSetLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.ui.window.PopupLayout r0;
        androidx.compose.ui.unit.LayoutDirection r1;
        byte b0, $b3;
        int[] $r2;
        int $i1, $i2;
        kotlin.NoWhenBranchMatchedException $r3;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        r1 := @parameter0: androidx.compose.ui.unit.LayoutDirection;

        $r2 = <androidx.compose.ui.window.PopupLayout$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r1.<androidx.compose.ui.unit.LayoutDirection: int ordinal()>();

        $i2 = $r2[$i1];

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $b3 = 0;

        goto label4;

     label2:
        $b3 = 1;

        goto label4;

     label3:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label4:
        b0 = $b3;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void setLayoutDirection(int)>(b0);

        return;
    }

    private final android.view.WindowManager$LayoutParams createLayoutParams()
    {
        androidx.compose.ui.window.PopupLayout r0;
        android.view.WindowManager$LayoutParams r1, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r4, $r6;
        android.os.IBinder $r5;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        java.lang.String $r9;
        java.lang.CharSequence $r10;

        r0 := @this: androidx.compose.ui.window.PopupLayout;

        $r3 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r3.<android.view.WindowManager$LayoutParams: void <init>()>();

        r1 = $r3;

        r1.<android.view.WindowManager$LayoutParams: int gravity> = 8388659;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = $i0 & -8552473;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i1;

        $i2 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = $i2 | 262144;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        r1.<android.view.WindowManager$LayoutParams: int type> = 1002;

        $r4 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.os.IBinder getApplicationWindowToken()>();

        r1.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r5;

        r1.<android.view.WindowManager$LayoutParams: int width> = -2;

        r1.<android.view.WindowManager$LayoutParams: int height> = -2;

        r1.<android.view.WindowManager$LayoutParams: int format> = -3;

        $r6 = r0.<androidx.compose.ui.window.PopupLayout: android.view.View composeView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = <androidx.compose.ui.R$string: int default_popup_window_title>;

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>($i4);

        $r10 = (java.lang.CharSequence) $r9;

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r10);

        return r1;
    }

    public static final androidx.compose.ui.layout.LayoutCoordinates access$getParentLayoutCoordinates(androidx.compose.ui.window.PopupLayout)
    {
        androidx.compose.ui.window.PopupLayout $r0;
        androidx.compose.ui.layout.LayoutCoordinates $r1;

        $r0 := @parameter0: androidx.compose.ui.window.PopupLayout;

        $r1 = specialinvoke $r0.<androidx.compose.ui.window.PopupLayout: androidx.compose.ui.layout.LayoutCoordinates getParentLayoutCoordinates()>();

        return $r1;
    }

