com.google.common.flogger.LogContext
<com.google.common.flogger.LogContext: java.lang.String LITERAL_VALUE_MESSAGE>
<com.google.common.flogger.LogContext: java.lang.Object[] args>
<com.google.common.flogger.LogContext: java.util.logging.Level level>
<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite>
<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>
<com.google.common.flogger.LogContext: com.google.common.flogger.backend.TemplateContext templateContext>
<com.google.common.flogger.LogContext: long timestampNanos>
    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>()>();

        <com.google.common.flogger.LogContext: java.lang.String LITERAL_VALUE_MESSAGE> = $r0;

        return;
    }

    protected void <init>(java.util.logging.Level, boolean)
    {
        com.google.common.flogger.LogContext $r0;
        java.util.logging.Level $r1;
        boolean $z0;
        long $l0;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 := @parameter0: java.util.logging.Level;

        $z0 := @parameter1: boolean;

        $l0 = staticinvoke <com.google.common.flogger.backend.Platform: long getCurrentTimeNanos()>();

        specialinvoke $r0.<com.google.common.flogger.LogContext: void <init>(java.util.logging.Level,boolean,long)>($r1, $z0, $l0);

        return;
    }

    protected void <init>(java.util.logging.Level, boolean, long)
    {
        com.google.common.flogger.LogContext $r0;
        long $l0;
        java.lang.Object $r1;
        java.util.logging.Level $r2;
        boolean $z0;
        com.google.common.flogger.MetadataKey $r3;
        java.lang.Boolean $r4;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r2 := @parameter0: java.util.logging.Level;

        $z0 := @parameter1: boolean;

        $l0 := @parameter2: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata> = null;

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite> = null;

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.TemplateContext templateContext> = null;

        $r0.<com.google.common.flogger.LogContext: java.lang.Object[] args> = null;

        $r1 = staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r2, "level");

        $r2 = (java.util.logging.Level) $r1;

        $r0.<com.google.common.flogger.LogContext: java.util.logging.Level level> = $r2;

        $r0.<com.google.common.flogger.LogContext: long timestampNanos> = $l0;

        if $z0 == 0 goto label1;

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey WAS_FORCED>;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r0.<com.google.common.flogger.LogContext: void addMetadata(com.google.common.flogger.MetadataKey,java.lang.Object)>($r3, $r4);

     label1:
        return;
    }

    private transient void logImpl(java.lang.String, java.lang.Object[])
    {
        com.google.common.flogger.LogContext $r0;
        boolean $z0;
        java.lang.String $r1, $r5;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.google.common.flogger.LazyArg $r4;
        com.google.common.flogger.backend.TemplateContext $r6;
        com.google.common.flogger.parser.MessageParser $r7;
        com.google.common.flogger.context.Tags $r8, $r9, $r12;
        com.google.common.flogger.backend.Metadata $r10;
        com.google.common.flogger.MetadataKey $r11;
        com.google.common.flogger.AbstractLogger $r13;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        $r0.<com.google.common.flogger.LogContext: java.lang.Object[] args> = $r2;

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r3 = $r2[$i0];

        $z0 = $r3 instanceof com.google.common.flogger.LazyArg;

        if $z0 == 0 goto label2;

        $r4 = (com.google.common.flogger.LazyArg) $r3;

        $r3 = interfaceinvoke $r4.<com.google.common.flogger.LazyArg: java.lang.Object evaluate()>();

        $r2[$i0] = $r3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r5 = <com.google.common.flogger.LogContext: java.lang.String LITERAL_VALUE_MESSAGE>;

        if $r1 == $r5 goto label4;

        $r6 = new com.google.common.flogger.backend.TemplateContext;

        $r7 = virtualinvoke $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.parser.MessageParser getMessageParser()>();

        specialinvoke $r6.<com.google.common.flogger.backend.TemplateContext: void <init>(com.google.common.flogger.parser.MessageParser,java.lang.String)>($r7, $r1);

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.TemplateContext templateContext> = $r6;

     label4:
        $r8 = staticinvoke <com.google.common.flogger.backend.Platform: com.google.common.flogger.context.Tags getInjectedTags()>();

        $r9 = $r8;

        $z0 = virtualinvoke $r8.<com.google.common.flogger.context.Tags: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r10 = virtualinvoke $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.Metadata getMetadata()>();

        $r11 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey TAGS>;

        $r3 = virtualinvoke $r10.<com.google.common.flogger.backend.Metadata: java.lang.Object findValue(com.google.common.flogger.MetadataKey)>($r11);

        $r12 = (com.google.common.flogger.context.Tags) $r3;

        if $r12 == null goto label5;

        $r9 = virtualinvoke $r8.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags merge(com.google.common.flogger.context.Tags)>($r12);

     label5:
        $r11 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey TAGS>;

        virtualinvoke $r0.<com.google.common.flogger.LogContext: void addMetadata(com.google.common.flogger.MetadataKey,java.lang.Object)>($r11, $r9);

     label6:
        $r13 = virtualinvoke $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.AbstractLogger getLogger()>();

        virtualinvoke $r13.<com.google.common.flogger.AbstractLogger: void write(com.google.common.flogger.backend.LogData)>($r0);

        return;
    }

    private boolean shouldLog()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.LogSite $r1, $r4;
        com.google.common.flogger.backend.Platform$LogCallerFinder $r2;
        java.lang.Object $r3;
        com.google.common.flogger.LogSiteKey $r5;
        com.google.common.flogger.LogContext$MutableMetadata $r6;
        int $i0;
        boolean $z0;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.google.common.flogger.backend.Platform: com.google.common.flogger.backend.Platform$LogCallerFinder getCallerFinder()>();

        $r1 = virtualinvoke $r2.<com.google.common.flogger.backend.Platform$LogCallerFinder: com.google.common.flogger.LogSite findLogSite(java.lang.Class,int)>(class "Lcom/google/common/flogger/LogContext;", 1);

        $r3 = staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r1, "logger backend must not return a null LogSite");

        $r1 = (com.google.common.flogger.LogSite) $r3;

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite> = $r1;

     label1:
        $r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite>;

        $r4 = <com.google.common.flogger.LogSite: com.google.common.flogger.LogSite INVALID>;

        if $r1 == $r4 goto label2;

        $r5 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite>;

        $r6 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        if $r6 == null goto label3;

        $i0 = virtualinvoke $r6.<com.google.common.flogger.LogContext$MutableMetadata: int size()>();

        if $i0 <= 0 goto label3;

        $r6 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        $r5 = staticinvoke <com.google.common.flogger.LogContext: com.google.common.flogger.LogSiteKey specializeLogSiteKeyFromMetadata(com.google.common.flogger.LogSiteKey,com.google.common.flogger.backend.Metadata)>($r5, $r6);

        goto label3;

     label2:
        $r5 = null;

     label3:
        $z0 = virtualinvoke $r0.<com.google.common.flogger.LogContext: boolean postProcess(com.google.common.flogger.LogSiteKey)>($r5);

        return $z0;
    }

    static com.google.common.flogger.LogSiteKey specializeLogSiteKeyFromMetadata(com.google.common.flogger.LogSiteKey, com.google.common.flogger.backend.Metadata)
    {
        com.google.common.flogger.backend.Metadata $r0;
        com.google.common.flogger.LogSiteKey $r1;
        int $i0, $i1;
        com.google.common.flogger.MetadataKey $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.google.common.flogger.LoggingScope $r5;

        $r1 := @parameter0: com.google.common.flogger.LogSiteKey;

        $r0 := @parameter1: com.google.common.flogger.backend.Metadata;

        staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r1, "logSiteKey");

        $i0 = virtualinvoke $r0.<com.google.common.flogger.backend.Metadata: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey LOG_SITE_GROUPING_KEY>;

        $r3 = virtualinvoke $r0.<com.google.common.flogger.backend.Metadata: com.google.common.flogger.MetadataKey getKey(int)>($i1);

        $z0 = virtualinvoke $r2.<com.google.common.flogger.MetadataKey: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r0.<com.google.common.flogger.backend.Metadata: java.lang.Object getValue(int)>($i1);

        $z0 = $r4 instanceof com.google.common.flogger.LoggingScope;

        if $z0 == 0 goto label2;

        $r5 = (com.google.common.flogger.LoggingScope) $r4;

        $r1 = virtualinvoke $r5.<com.google.common.flogger.LoggingScope: com.google.common.flogger.LogSiteKey specialize(com.google.common.flogger.LogSiteKey)>($r1);

        goto label3;

     label2:
        $r1 = staticinvoke <com.google.common.flogger.SpecializedLogSiteKey: com.google.common.flogger.LogSiteKey of(com.google.common.flogger.LogSiteKey,java.lang.Object)>($r1, $r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return $r1;
    }

    protected final void addMetadata(com.google.common.flogger.MetadataKey, java.lang.Object)
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.MetadataKey $r1;
        java.lang.Object $r2;
        com.google.common.flogger.LogContext$MutableMetadata $r3;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 := @parameter0: com.google.common.flogger.MetadataKey;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        if $r3 != null goto label1;

        $r3 = new com.google.common.flogger.LogContext$MutableMetadata;

        specialinvoke $r3.<com.google.common.flogger.LogContext$MutableMetadata: void <init>()>();

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata> = $r3;

     label1:
        $r3 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        virtualinvoke $r3.<com.google.common.flogger.LogContext$MutableMetadata: void addValue(com.google.common.flogger.MetadataKey,java.lang.Object)>($r1, $r2);

        return;
    }

<com.google.common.flogger.LogContext: com.google.common.flogger.LoggingApi api()>
    public final java.lang.Object[] getArguments()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.backend.TemplateContext $r1;
        java.lang.IllegalStateException $r2;
        java.lang.Object[] r3;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.TemplateContext templateContext>;

        if $r1 == null goto label1;

        r3 = $r0.<com.google.common.flogger.LogContext: java.lang.Object[] args>;

        return r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot get arguments unless a template context exists");

        throw $r2;
    }

    public final java.util.logging.Level getLevel()
    {
        com.google.common.flogger.LogContext $r0;
        java.util.logging.Level r1;

        $r0 := @this: com.google.common.flogger.LogContext;

        r1 = $r0.<com.google.common.flogger.LogContext: java.util.logging.Level level>;

        return r1;
    }

    public final java.lang.Object getLiteralArgument()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.backend.TemplateContext $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.TemplateContext templateContext>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.google.common.flogger.LogContext: java.lang.Object[] args>;

        $r3 = $r2[0];

        return $r3;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot get literal argument if a template context exists");

        throw $r4;
    }

    public final com.google.common.flogger.LogSite getLogSite()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.LogSite $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot request log site information prior to postProcess()");

        throw $r2;
    }

<com.google.common.flogger.LogContext: com.google.common.flogger.AbstractLogger getLogger()>
<com.google.common.flogger.LogContext: com.google.common.flogger.parser.MessageParser getMessageParser()>
    public final com.google.common.flogger.backend.Metadata getMetadata()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.backend.Metadata $r1;
        com.google.common.flogger.LogContext$MutableMetadata $r2;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = staticinvoke <com.google.common.flogger.backend.Metadata: com.google.common.flogger.backend.Metadata empty()>();

        return $r1;
    }

    public final com.google.common.flogger.backend.TemplateContext getTemplateContext()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.backend.TemplateContext r1;

        $r0 := @this: com.google.common.flogger.LogContext;

        r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.TemplateContext templateContext>;

        return r1;
    }

    public final long getTimestampNanos()
    {
        com.google.common.flogger.LogContext $r0;
        long l0;

        $r0 := @this: com.google.common.flogger.LogContext;

        l0 = $r0.<com.google.common.flogger.LogContext: long timestampNanos>;

        return l0;
    }

    public final void log(java.lang.String)
    {
        com.google.common.flogger.LogContext $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.Object[] $r3;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r0.<com.google.common.flogger.LogContext: boolean shouldLog()>();

        if $z0 == 0 goto label1;

        $r2 = <com.google.common.flogger.LogContext: java.lang.String LITERAL_VALUE_MESSAGE>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        specialinvoke $r0.<com.google.common.flogger.LogContext: void logImpl(java.lang.String,java.lang.Object[])>($r2, $r3);

     label1:
        return;
    }

    protected boolean postProcess(com.google.common.flogger.LogSiteKey)
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.LogSiteKey $r1;
        com.google.common.flogger.LogContext$MutableMetadata $r2;
        com.google.common.flogger.MetadataKey $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        com.google.common.flogger.LogSiteStats$RateLimitPeriod $r6;
        com.google.common.flogger.LogSiteStats $r7;
        int $i0;
        boolean $z0;
        long $l1;
        com.google.common.flogger.StackSize $r8;
        com.google.common.flogger.LogSiteStackTrace $r9;
        com.google.common.flogger.backend.Metadata $r10;
        java.lang.Throwable $r11;
        java.lang.StackTraceElement[] $r12;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 := @parameter0: com.google.common.flogger.LogSiteKey;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        if $r2 == null goto label3;

        if $r1 == null goto label2;

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey LOG_EVERY_N>;

        $r4 = virtualinvoke $r2.<com.google.common.flogger.LogContext$MutableMetadata: java.lang.Object findValue(com.google.common.flogger.MetadataKey)>($r3);

        $r5 = (java.lang.Integer) $r4;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey LOG_AT_MOST_EVERY>;

        $r4 = virtualinvoke $r2.<com.google.common.flogger.LogContext$MutableMetadata: java.lang.Object findValue(com.google.common.flogger.MetadataKey)>($r3);

        $r6 = (com.google.common.flogger.LogSiteStats$RateLimitPeriod) $r4;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        $r7 = staticinvoke <com.google.common.flogger.LogSiteStats: com.google.common.flogger.LogSiteStats getStatsForKey(com.google.common.flogger.LogSiteKey,com.google.common.flogger.backend.Metadata)>($r1, $r2);

        if $r5 == null goto label1;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $z0 = virtualinvoke $r7.<com.google.common.flogger.LogSiteStats: boolean incrementAndCheckInvocationCount(int)>($i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if $r6 == null goto label2;

        $l1 = virtualinvoke $r0.<com.google.common.flogger.LogContext: long getTimestampNanos()>();

        $z0 = virtualinvoke $r7.<com.google.common.flogger.LogSiteStats: boolean checkLastTimestamp(long,com.google.common.flogger.LogSiteStats$RateLimitPeriod)>($l1, $r6);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey CONTEXT_STACK_SIZE>;

        $r4 = virtualinvoke $r2.<com.google.common.flogger.LogContext$MutableMetadata: java.lang.Object findValue(com.google.common.flogger.MetadataKey)>($r3);

        $r8 = (com.google.common.flogger.StackSize) $r4;

        if $r8 == null goto label3;

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey CONTEXT_STACK_SIZE>;

        virtualinvoke $r0.<com.google.common.flogger.LogContext: void removeMetadata(com.google.common.flogger.MetadataKey)>($r3);

        $r9 = new com.google.common.flogger.LogSiteStackTrace;

        $r10 = virtualinvoke $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.backend.Metadata getMetadata()>();

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey LOG_CAUSE>;

        $r4 = virtualinvoke $r10.<com.google.common.flogger.backend.Metadata: java.lang.Object findValue(com.google.common.flogger.MetadataKey)>($r3);

        $r11 = (java.lang.Throwable) $r4;

        $i0 = virtualinvoke $r8.<com.google.common.flogger.StackSize: int getMaxDepth()>();

        $r12 = staticinvoke <com.google.common.flogger.util.CallerFinder: java.lang.StackTraceElement[] getStackForCallerOf(java.lang.Class,int,int)>(class "Lcom/google/common/flogger/LogContext;", $i0, 1);

        specialinvoke $r9.<com.google.common.flogger.LogSiteStackTrace: void <init>(java.lang.Throwable,com.google.common.flogger.StackSize,java.lang.StackTraceElement[])>($r11, $r8, $r12);

        $r3 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey LOG_CAUSE>;

        virtualinvoke $r0.<com.google.common.flogger.LogContext: void addMetadata(com.google.common.flogger.MetadataKey,java.lang.Object)>($r3, $r9);

     label3:
        return 1;
    }

    protected final void removeMetadata(com.google.common.flogger.MetadataKey)
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.MetadataKey $r1;
        com.google.common.flogger.LogContext$MutableMetadata $r2;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r1 := @parameter0: com.google.common.flogger.MetadataKey;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.google.common.flogger.LogContext$MutableMetadata: void removeAllValues(com.google.common.flogger.MetadataKey)>($r1);

     label1:
        return;
    }

    public final boolean wasForced()
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.MetadataKey $r1;
        com.google.common.flogger.LogContext$MutableMetadata $r2;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        if $r2 == null goto label1;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogContext$MutableMetadata metadata>;

        $r1 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey WAS_FORCED>;

        $r4 = virtualinvoke $r2.<com.google.common.flogger.LogContext$MutableMetadata: java.lang.Object findValue(com.google.common.flogger.MetadataKey)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final com.google.common.flogger.LoggingApi withInjectedLogSite(com.google.common.flogger.LogSite)
    {
        com.google.common.flogger.LogContext $r0;
        com.google.common.flogger.LogSite $r1, $r3;
        com.google.common.flogger.LoggingApi $r2;

        $r0 := @this: com.google.common.flogger.LogContext;

        $r3 := @parameter0: com.google.common.flogger.LogSite;

        $r1 = $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite>;

        if $r1 != null goto label1;

        if $r3 == null goto label1;

        $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LogSite logSite> = $r3;

     label1:
        $r2 = virtualinvoke $r0.<com.google.common.flogger.LogContext: com.google.common.flogger.LoggingApi api()>();

        return $r2;
    }

