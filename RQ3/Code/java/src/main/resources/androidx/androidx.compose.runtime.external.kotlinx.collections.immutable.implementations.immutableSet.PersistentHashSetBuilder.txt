androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int modCount>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet r1, $r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r4;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "set");

        specialinvoke r0.<kotlin.collections.AbstractMutableSet: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set> = r1;

        $r2 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        specialinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership> = $r2;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set>;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = $r4;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set>;

        $i0 = virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: int size()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size> = $i0;

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership>;

        return $r1;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        return $r1;
    }

    public final int getModCount$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int modCount>;

        return $i0;
    }

    public int getSize()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size>;

        return $i0;
    }

    public void setSize(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        int i0, i1, $i2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size> = i0;

        i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int modCount>;

        $i2 = i1 + 1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int modCount> = $i2;

        return;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet build()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet $r1, $r6, $r8;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r2, $r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r4;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set>;

        $r3 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        if $r2 != $r3 goto label1;

        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set>;

        goto label2;

     label1:
        $r4 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        specialinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownership> = $r4;

        $r8 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        specialinvoke $r8.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int)>($r5, $i0);

     label2:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set> = $r8;

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet set>;

        return $r6;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r2;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $z0 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean contains(int,java.lang.Object,int)>($i0, r1, 0);

        return $z0;
    }

    public boolean add(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $r3 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAdd(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($i2, r1, 0, r0);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = $r3;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if i0 == $i1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0, $r9;
        java.util.Collection r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet r2, $r8;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r3, $r5;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r4, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z0 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet;

        if $z0 == 0 goto label01;

        $r8 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet) r1;

        goto label02;

     label01:
        $r8 = null;

     label02:
        if $r8 != null goto label06;

        $z2 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        if $z2 == 0 goto label03;

        $r9 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder) r1;

        goto label04;

     label03:
        $r9 = null;

     label04:
        if $r9 == null goto label05;

        $r8 = virtualinvoke $r9.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet build()>();

        goto label06;

     label05:
        $r8 = null;

     label06:
        r2 = $r8;

        if r2 == null goto label10;

        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        r3 = $r5;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        r4 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAddAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($r7, 0, r3, r0);

        $i2 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i3 = i0 + $i2;

        $i4 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        i1 = $i3 - $i4;

        if i0 == i1 goto label07;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = r4;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>(i1);

     label07:
        $i5 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if i0 == $i5 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        return $z3;

     label10:
        $z1 = specialinvoke r0.<kotlin.collections.AbstractMutableSet: boolean addAll(java.util.Collection)>(r1);

        return $z1;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0, $r10;
        java.util.Collection r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet r2, $r9;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r3, $r5;
        int i0, i1, $i2;
        java.lang.Object r4;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r6, $r7, $r8;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z0 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet;

        if $z0 == 0 goto label01;

        $r9 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet) r1;

        goto label02;

     label01:
        $r9 = null;

     label02:
        if $r9 != null goto label06;

        $z2 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        if $z2 == 0 goto label03;

        $r10 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder) r1;

        goto label04;

     label03:
        $r10 = null;

     label04:
        if $r10 == null goto label05;

        $r9 = virtualinvoke $r10.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet build()>();

        goto label06;

     label05:
        $r9 = null;

     label06:
        r2 = $r9;

        if r2 == null goto label11;

        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        r3 = $r5;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        r4 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object mutableRetainAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($r7, 0, r3, r0);

        i1 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        if i1 != 0 goto label07;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void clear()>();

        goto label08;

     label07:
        if i1 == i0 goto label08;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r4, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder>");

        $r8 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r4;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = $r8;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>(i1);

     label08:
        $i2 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if i0 == $i2 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        return $z3;

     label11:
        $z1 = specialinvoke r0.<kotlin.collections.AbstractMutableSet: boolean retainAll(java.util.Collection)>(r1);

        return $z1;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0, $r10;
        java.util.Collection r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet r2, $r9;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r3, $r5;
        int i0, i1, $i2, $i3;
        java.lang.Object r4;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r6, $r7, $r8;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z0 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet;

        if $z0 == 0 goto label01;

        $r9 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet) r1;

        goto label02;

     label01:
        $r9 = null;

     label02:
        if $r9 != null goto label06;

        $z2 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        if $z2 == 0 goto label03;

        $r10 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder) r1;

        goto label04;

     label03:
        $r10 = null;

     label04:
        if $r10 == null goto label05;

        $r9 = virtualinvoke $r10.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet build()>();

        goto label06;

     label05:
        $r9 = null;

     label06:
        r2 = $r9;

        if r2 == null goto label11;

        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        r3 = $r5;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        r4 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object mutableRemoveAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($r7, 0, r3, r0);

        $i2 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        i1 = i0 - $i2;

        if i1 != 0 goto label07;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void clear()>();

        goto label08;

     label07:
        if i1 == i0 goto label08;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r4, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder>");

        $r8 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r4;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = $r8;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>(i1);

     label08:
        $i3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if i0 == $i3 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        return $z3;

     label11:
        $z1 = specialinvoke r0.<kotlin.collections.AbstractMutableSet: boolean removeAll(java.util.Collection)>(r1);

        return $z1;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0, $r2;
        java.util.Collection r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r3, $r4, $r6, $r7;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet $r5;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z0 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet;

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $r5 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet) r1;

        $r7 = virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        $z4 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean containsAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int)>($r7, 0);

        return $z4;

     label1:
        $z1 = r1 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        if $z1 == 0 goto label2;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder) r1;

        $r3 = $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        $z3 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean containsAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int)>($r3, 0);

        return $z3;

     label2:
        $z2 = specialinvoke r0.<kotlin.collections.AbstractMutableSet: boolean containsAll(java.util.Collection)>(r1);

        return $z2;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node>;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $r3 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableRemove(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($i2, r1, 0, r0);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = $r3;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if i0 == $i1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public void clear()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r1 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getEMPTY$runtime_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder>");

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode node> = $r2;

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>(0);

        return;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentSet build()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentSet $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet build()>();

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentSet) $r1;

        return $r2;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentCollection build()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentCollection $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSet build()>();

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentCollection) $r1;

        return $r2;
    }

