androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: androidx.compose.animation.core.SpringSpec InterruptionSpec>
    private static final int getLinesMainAxisSizesSum(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int, int, int, java.util.List)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, i1, i2, i3, $i4, $i5, i6, i7;
        java.util.List r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.util.List;

        i6 = i0;

        i7 = 0;

     label1:
        if i6 > i1 goto label3;

        $i4 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int firstIndexInNextLineAfter(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>($r0, i6);

        i3 = $i4 - 1;

        if i3 > i1 goto label2;

        $i5 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int getLineSize(java.util.List,int,int)>(r1, i3, i2);

        i7 = i7 + $i5;

     label2:
        i6 = i3 + 1;

        goto label1;

     label3:
        return i7;
    }

    private static final int getLineSize(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        androidx.compose.foundation.lazy.grid.LazyGridPositionedItem r1, $r3, $r5, $r7, $r9, r12;
        boolean $z0;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r11;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r0);

        $r3 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r2;

        $i2 = virtualinvoke $r3.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        if i0 < $i2 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r0);

        $r5 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r4;

        $i3 = virtualinvoke $r5.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        if i0 <= $i3 goto label2;

     label1:
        return i1;

     label2:
        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r0);

        $r7 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r6;

        $i4 = virtualinvoke $r7.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        $i5 = i0 - $i4;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r0);

        $r9 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r8;

        $i6 = virtualinvoke $r9.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        $i7 = $i6 - i0;

        if $i5 >= $i7 goto label5;

        i14 = 0;

        i15 = interfaceinvoke $r0.<java.util.List: int size()>();

     label3:
        if i14 >= i15 goto label8;

        $r11 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i14);

        r1 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r11;

        $i11 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        if $i11 != i0 goto label4;

        $i13 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getLineMainAxisSizeWithSpacings()>();

        return $i13;

     label4:
        $i12 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        if $i12 > i0 goto label8;

        i14 = i14 + 1;

        goto label3;

     label5:
        i16 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

     label6:
        if -1 >= i16 goto label8;

        $r10 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i16);

        r12 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r10;

        $i8 = virtualinvoke r12.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        if $i8 != i0 goto label7;

        $i10 = virtualinvoke r12.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getLineMainAxisSizeWithSpacings()>();

        return $i10;

     label7:
        $i9 = virtualinvoke r12.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        if $i9 < i0 goto label8;

        i16 = i16 + -1;

        goto label6;

     label8:
        return i1;
    }

    private static final int lastIndexInPreviousLineBefore(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, $i1, $i2;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        $i1 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int firstIndexInLineContaining(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>($r0, i0);

        $i2 = $i1 - 1;

        return $i2;
    }

    private static final int firstIndexInNextLineAfter(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r1;
        java.util.List $r2;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        $i2 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i0 < $i2 goto label1;

        $i5 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int firstIndexInLineContaining(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>($r0, i0);

        $i6 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getSlotsPerLine()>();

        $i7 = $i5 + $i6;

        goto label2;

     label1:
        i1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getLineIndexOfItem--_Ze7BM(int)>(i0);

        r1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration getLineConfiguration(int)>(i1);

        $i3 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int getFirstItemIndex()>();

        $r2 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List getSpans()>();

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i7 = $i3 + $i4;

     label2:
        return $i7;
    }

    private static final int firstIndexInLineContaining(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i0 < $i1 goto label1;

        i6 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int getFirstIndexInNextLineAfterTheLastKnownOne(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)>($r0);

        $i2 = i0 - i6;

        $i3 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getSlotsPerLine()>();

        i7 = $i2 / $i3;

        $i4 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getSlotsPerLine()>();

        $i5 = $i4 * i7;

        $i8 = i6 + $i5;

        goto label2;

     label1:
        i9 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getLineIndexOfItem--_Ze7BM(int)>(i0);

        r1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration getLineConfiguration(int)>(i9);

        $i8 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int getFirstItemIndex()>();

     label2:
        return $i8;
    }

    private static final int getFirstIndexInNextLineAfterTheLastKnownOne(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r1;
        java.util.List $r2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        java.lang.Object r3;
        long l1;
        androidx.compose.foundation.lazy.grid.GridItemSpan $r4;
        boolean z2;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        $i2 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        $i3 = $i2 - 1;

        $i4 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getLineIndexOfItem--_Ze7BM(int)>($i3);

        r1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration getLineConfiguration(int)>($i4);

        i10 = 0;

        z2 = 0;

        $i5 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int getFirstItemIndex()>();

        i11 = $i5 - 1;

        $r2 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List getSpans()>();

        i12 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i12 >= i0 goto label2;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i12);

        $r4 = (androidx.compose.foundation.lazy.grid.GridItemSpan) r3;

        l1 = virtualinvoke $r4.<androidx.compose.foundation.lazy.grid.GridItemSpan: long unbox-impl()>();

        $i9 = staticinvoke <androidx.compose.foundation.lazy.grid.GridItemSpan: int getCurrentLineSpan-impl(long)>(l1);

        i10 = i10 + $i9;

        i11 = i11 + 1;

        i12 = i12 + 1;

        goto label1;

     label2:
        $i6 = virtualinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getSlotsPerLine()>();

        $i7 = $i6 - i10;

        $i8 = $i7 + 1;

        i13 = i11 + $i8;

        return i13;
    }

    public static final int access$firstIndexInNextLineAfter(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, $i1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        $i1 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int firstIndexInNextLineAfter(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>($r0, i0);

        return $i1;
    }

    public static final int access$lastIndexInPreviousLineBefore(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, $i1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        $i1 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int lastIndexInPreviousLineBefore(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>($r0, i0);

        return $i1;
    }

    public static final int access$getLinesMainAxisSizesSum(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, int, int, int, java.util.List)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider $r0;
        int i0, i1, i2, $i3;
        java.util.List r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.util.List;

        $i3 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int getLinesMainAxisSizesSum(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int,int,int,java.util.List)>($r0, i0, i1, i2, r1);

        return $i3;
    }

    public static final androidx.compose.animation.core.SpringSpec access$getInterruptionSpec$p()
    {
        androidx.compose.animation.core.SpringSpec $r0;

        $r0 = <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: androidx.compose.animation.core.SpringSpec InterruptionSpec>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.unit.IntOffset$Companion $r0;
        long $l0;
        androidx.compose.ui.unit.IntOffset $r1;
        androidx.compose.animation.core.SpringSpec $r2;

        $r0 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l0 = staticinvoke <androidx.compose.animation.core.VisibilityThresholdsKt: long getVisibilityThreshold(androidx.compose.ui.unit.IntOffset$Companion)>($r0);

        $r1 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l0);

        $r2 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 400.0F, $r1, 1, null);

        <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: androidx.compose.animation.core.SpringSpec InterruptionSpec> = $r2;

        return;
    }

