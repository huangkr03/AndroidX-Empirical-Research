androidx.ui.material.ObservableColorPalette
<androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primary$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primaryVariant$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondary$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondaryVariant$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState background$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState surface$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState error$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onPrimary$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSecondary$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onBackground$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSurface$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onError$delegate>
<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState isLight$delegate>
    private void <init>(long, long, long, long, long, long, long, long, long, long, long, long, boolean)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11;
        boolean z0;
        androidx.ui.graphics.Color $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34;
        kotlin.jvm.functions.Function2 $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38;
        androidx.compose.MutableState $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39;
        java.lang.Boolean $r37;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        l8 := @parameter8: long;

        l9 := @parameter9: long;

        l10 := @parameter10: long;

        l11 := @parameter11: long;

        z0 := @parameter12: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        $r2 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r3 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r1, $r2);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primary$delegate> = $r3;

        $r4 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l1);

        $r5 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r6 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r4, $r5);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primaryVariant$delegate> = $r6;

        $r7 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l2);

        $r8 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r9 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r7, $r8);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondary$delegate> = $r9;

        $r10 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l3);

        $r11 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r12 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r10, $r11);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondaryVariant$delegate> = $r12;

        $r13 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l4);

        $r14 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r15 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r13, $r14);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState background$delegate> = $r15;

        $r16 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l5);

        $r17 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r18 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r16, $r17);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState surface$delegate> = $r18;

        $r19 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l6);

        $r20 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r21 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r19, $r20);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState error$delegate> = $r21;

        $r22 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l7);

        $r23 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r24 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r22, $r23);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onPrimary$delegate> = $r24;

        $r25 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l8);

        $r26 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r27 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r25, $r26);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSecondary$delegate> = $r27;

        $r28 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l9);

        $r29 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r30 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r28, $r29);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onBackground$delegate> = $r30;

        $r31 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l10);

        $r32 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r33 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r31, $r32);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSurface$delegate> = $r33;

        $r34 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l11);

        $r35 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r36 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r34, $r35);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onError$delegate> = $r36;

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r38 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r39 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>($r37, $r38);

        r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState isLight$delegate> = $r39;

        return;
    }

    public void <init>(androidx.ui.material.ColorPalette)
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.ui.material.ColorPalette r1;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11;
        boolean $z0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        r1 := @parameter0: androidx.ui.material.ColorPalette;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "colorPalette");

        $l0 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getPrimary()>();

        $l1 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getPrimaryVariant()>();

        $l2 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getSecondary()>();

        $l3 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getSecondaryVariant()>();

        $l4 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getBackground()>();

        $l5 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getSurface()>();

        $l6 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getError()>();

        $l7 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getOnPrimary()>();

        $l8 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getOnSecondary()>();

        $l9 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getOnBackground()>();

        $l10 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getOnSurface()>();

        $l11 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: long getOnError()>();

        $z0 = interfaceinvoke r1.<androidx.ui.material.ColorPalette: boolean isLight()>();

        specialinvoke r0.<androidx.ui.material.ObservableColorPalette: void <init>(long,long,long,long,long,long,long,long,long,long,long,long,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>($l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $z0, null);

        return;
    }

    public long getPrimary()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primary$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setPrimary(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primary$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getPrimaryVariant()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primaryVariant$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[1];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setPrimaryVariant(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState primaryVariant$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[1];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getSecondary()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondary$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[2];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setSecondary(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondary$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[2];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getSecondaryVariant()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondaryVariant$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[3];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setSecondaryVariant(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState secondaryVariant$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[3];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getBackground()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState background$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[4];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setBackground(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState background$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[4];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getSurface()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState surface$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[5];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setSurface(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState surface$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[5];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getError()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState error$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[6];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setError(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState error$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[6];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getOnPrimary()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onPrimary$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[7];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setOnPrimary(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onPrimary$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[7];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getOnSecondary()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSecondary$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[8];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setOnSecondary(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSecondary$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[8];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getOnBackground()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onBackground$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[9];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setOnBackground(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onBackground$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[9];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getOnSurface()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSurface$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[10];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setOnSurface(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onSurface$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[10];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public long getOnError()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.graphics.Color $r6;
        long $l0;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onError$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[11];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.graphics.Color) $r5;

        $l0 = virtualinvoke $r6.<androidx.ui.graphics.Color: long unbox-impl()>();

        return $l0;
    }

    public void setOnError(long)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        androidx.ui.graphics.Color r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState onError$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[11];

        r3 = staticinvoke <androidx.ui.graphics.Color: androidx.ui.graphics.Color box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public boolean isLight()
    {
        androidx.ui.material.ObservableColorPalette r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        $r3 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState isLight$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[12];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    public void setLight(boolean)
    {
        androidx.ui.material.ObservableColorPalette r0;
        boolean z0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        java.lang.Boolean r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.ui.material.ObservableColorPalette: androidx.compose.MutableState isLight$delegate>;

        $r4 = <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[12];

        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public void <init>(long, long, long, long, long, long, long, long, long, long, long, long, boolean, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.material.ObservableColorPalette r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11;
        boolean z0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.material.ObservableColorPalette;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        l8 := @parameter8: long;

        l9 := @parameter9: long;

        l10 := @parameter10: long;

        l11 := @parameter11: long;

        z0 := @parameter12: boolean;

        r1 := @parameter13: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.material.ObservableColorPalette: void <init>(long,long,long,long,long,long,long,long,long,long,long,long,boolean)>(l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, z0);

        return;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1, $r7, $r13, $r19, $r25, $r31, $r37, $r43, $r49, $r55, $r61, $r67, $r73;
        kotlin.reflect.KClass $r2, $r8, $r14, $r20, $r26, $r32, $r38, $r44, $r50, $r56, $r62, $r68, $r74;
        kotlin.reflect.KDeclarationContainer $r3, $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r51, $r57, $r63, $r69, $r75;
        kotlin.jvm.internal.MutablePropertyReference1 $r4, $r10, $r16, $r22, $r28, $r34, $r40, $r46, $r52, $r58, $r64, $r70, $r76;
        kotlin.reflect.KMutableProperty1 $r5, $r11, $r17, $r23, $r29, $r35, $r41, $r47, $r53, $r59, $r65, $r71, $r77;
        kotlin.reflect.KProperty $r6, $r12, $r18, $r24, $r30, $r36, $r42, $r48, $r54, $r60, $r66, $r72, $r78;

        r0 = newarray (kotlin.reflect.KProperty)[13];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "primary", "getPrimary()J");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        $r7 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r8 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r9 = (kotlin.reflect.KDeclarationContainer) $r8;

        specialinvoke $r7.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r9, "primaryVariant", "getPrimaryVariant()J");

        $r10 = (kotlin.jvm.internal.MutablePropertyReference1) $r7;

        $r11 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r10);

        $r12 = (kotlin.reflect.KProperty) $r11;

        r0[1] = $r12;

        $r13 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r14 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r15 = (kotlin.reflect.KDeclarationContainer) $r14;

        specialinvoke $r13.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r15, "secondary", "getSecondary()J");

        $r16 = (kotlin.jvm.internal.MutablePropertyReference1) $r13;

        $r17 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r16);

        $r18 = (kotlin.reflect.KProperty) $r17;

        r0[2] = $r18;

        $r19 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r20 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r21 = (kotlin.reflect.KDeclarationContainer) $r20;

        specialinvoke $r19.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r21, "secondaryVariant", "getSecondaryVariant()J");

        $r22 = (kotlin.jvm.internal.MutablePropertyReference1) $r19;

        $r23 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r22);

        $r24 = (kotlin.reflect.KProperty) $r23;

        r0[3] = $r24;

        $r25 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r26 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r27 = (kotlin.reflect.KDeclarationContainer) $r26;

        specialinvoke $r25.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r27, "background", "getBackground()J");

        $r28 = (kotlin.jvm.internal.MutablePropertyReference1) $r25;

        $r29 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r28);

        $r30 = (kotlin.reflect.KProperty) $r29;

        r0[4] = $r30;

        $r31 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r32 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r33 = (kotlin.reflect.KDeclarationContainer) $r32;

        specialinvoke $r31.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r33, "surface", "getSurface()J");

        $r34 = (kotlin.jvm.internal.MutablePropertyReference1) $r31;

        $r35 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r34);

        $r36 = (kotlin.reflect.KProperty) $r35;

        r0[5] = $r36;

        $r37 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r38 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r39 = (kotlin.reflect.KDeclarationContainer) $r38;

        specialinvoke $r37.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r39, "error", "getError()J");

        $r40 = (kotlin.jvm.internal.MutablePropertyReference1) $r37;

        $r41 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r40);

        $r42 = (kotlin.reflect.KProperty) $r41;

        r0[6] = $r42;

        $r43 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r44 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r45 = (kotlin.reflect.KDeclarationContainer) $r44;

        specialinvoke $r43.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r45, "onPrimary", "getOnPrimary()J");

        $r46 = (kotlin.jvm.internal.MutablePropertyReference1) $r43;

        $r47 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r46);

        $r48 = (kotlin.reflect.KProperty) $r47;

        r0[7] = $r48;

        $r49 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r50 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r51 = (kotlin.reflect.KDeclarationContainer) $r50;

        specialinvoke $r49.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r51, "onSecondary", "getOnSecondary()J");

        $r52 = (kotlin.jvm.internal.MutablePropertyReference1) $r49;

        $r53 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r52);

        $r54 = (kotlin.reflect.KProperty) $r53;

        r0[8] = $r54;

        $r55 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r56 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r57 = (kotlin.reflect.KDeclarationContainer) $r56;

        specialinvoke $r55.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r57, "onBackground", "getOnBackground()J");

        $r58 = (kotlin.jvm.internal.MutablePropertyReference1) $r55;

        $r59 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r58);

        $r60 = (kotlin.reflect.KProperty) $r59;

        r0[9] = $r60;

        $r61 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r62 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r63 = (kotlin.reflect.KDeclarationContainer) $r62;

        specialinvoke $r61.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r63, "onSurface", "getOnSurface()J");

        $r64 = (kotlin.jvm.internal.MutablePropertyReference1) $r61;

        $r65 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r64);

        $r66 = (kotlin.reflect.KProperty) $r65;

        r0[10] = $r66;

        $r67 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r68 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r69 = (kotlin.reflect.KDeclarationContainer) $r68;

        specialinvoke $r67.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r69, "onError", "getOnError()J");

        $r70 = (kotlin.jvm.internal.MutablePropertyReference1) $r67;

        $r71 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r70);

        $r72 = (kotlin.reflect.KProperty) $r71;

        r0[11] = $r72;

        $r73 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r74 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ObservableColorPalette;");

        $r75 = (kotlin.reflect.KDeclarationContainer) $r74;

        specialinvoke $r73.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r75, "isLight", "isLight()Z");

        $r76 = (kotlin.jvm.internal.MutablePropertyReference1) $r73;

        $r77 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r76);

        $r78 = (kotlin.reflect.KProperty) $r77;

        r0[12] = $r78;

        <androidx.ui.material.ObservableColorPalette: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

