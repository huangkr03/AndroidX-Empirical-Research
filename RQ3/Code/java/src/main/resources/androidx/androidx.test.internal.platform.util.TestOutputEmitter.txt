androidx.test.internal.platform.util.TestOutputEmitter
<androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler debugHandler>
    static androidx.test.internal.platform.util.TestOutputHandler lambda$static$0()
    {
        androidx.test.internal.platform.util.TestOutputEmitter$1 $r0;

        $r0 = new androidx.test.internal.platform.util.TestOutputEmitter$1;

        specialinvoke $r0.<androidx.test.internal.platform.util.TestOutputEmitter$1: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 $r0;
        java.lang.Object $r1;
        androidx.test.internal.platform.util.TestOutputHandler $r2;

        $r0 = <androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0: androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 INSTANCE>;

        $r1 = staticinvoke <androidx.test.internal.platform.ServiceLoaderWrapper: java.lang.Object loadSingleService(java.lang.Class,androidx.test.internal.platform.ServiceLoaderWrapper$Factory)>(class "Landroidx/test/internal/platform/util/TestOutputHandler;", $r0);

        $r2 = (androidx.test.internal.platform.util.TestOutputHandler) $r1;

        <androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler debugHandler> = $r2;

        return;
    }

    private void <init>()
    {
        androidx.test.internal.platform.util.TestOutputEmitter r0;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void dumpThreadStates(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.internal.platform.util.TestOutputHandler $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler debugHandler>;

        interfaceinvoke $r1.<androidx.test.internal.platform.util.TestOutputHandler: void dumpThreadStates(java.lang.String)>(r0);

        return;
    }

    public static boolean addOutputProperties(java.util.Map)
    {
        java.util.Map r0;
        androidx.test.internal.platform.util.TestOutputHandler $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        $r1 = <androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler debugHandler>;

        $z0 = interfaceinvoke $r1.<androidx.test.internal.platform.util.TestOutputHandler: boolean addOutputProperties(java.util.Map)>(r0);

        return $z0;
    }

    public static boolean captureWindowHierarchy(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.internal.platform.util.TestOutputHandler $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler debugHandler>;

        $z0 = interfaceinvoke $r1.<androidx.test.internal.platform.util.TestOutputHandler: boolean captureWindowHierarchy(java.lang.String)>(r0);

        return $z0;
    }

    public static boolean takeScreenshot(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.internal.platform.util.TestOutputHandler $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler debugHandler>;

        $z0 = interfaceinvoke $r1.<androidx.test.internal.platform.util.TestOutputHandler: boolean takeScreenshot(java.lang.String)>(r0);

        return $z0;
    }

androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0
<androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0: androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 INSTANCE>
    public final java.lang.Object create()
    {
        androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 r0;
        androidx.test.internal.platform.util.TestOutputHandler $r1;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0;

        $r1 = staticinvoke <androidx.test.internal.platform.util.TestOutputEmitter: androidx.test.internal.platform.util.TestOutputHandler lambda$static$0()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 $r0;

        $r0 = new androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0;

        specialinvoke $r0.<androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0: void <init>()>();

        <androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0: androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0 r0;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$$ExternalSyntheticLambda0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.internal.platform.util.TestOutputEmitter$1
    void <init>()
    {
        androidx.test.internal.platform.util.TestOutputEmitter$1 r0;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dumpThreadStates(java.lang.String)
    {
        androidx.test.internal.platform.util.TestOutputEmitter$1 r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$1;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean addOutputProperties(java.util.Map)
    {
        androidx.test.internal.platform.util.TestOutputEmitter$1 r0;
        java.util.Map r1;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$1;

        r1 := @parameter0: java.util.Map;

        return 0;
    }

    public boolean captureWindowHierarchy(java.lang.String)
    {
        androidx.test.internal.platform.util.TestOutputEmitter$1 r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$1;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean takeScreenshot(java.lang.String)
    {
        androidx.test.internal.platform.util.TestOutputEmitter$1 r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.platform.util.TestOutputEmitter$1;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

