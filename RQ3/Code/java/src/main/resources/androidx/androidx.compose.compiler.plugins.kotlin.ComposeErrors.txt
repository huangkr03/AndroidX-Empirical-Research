androidx.compose.compiler.plugins.kotlin.ComposeErrors
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_INVOCATION>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_EXPECTED>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_PROPERTY_BACKING_FIELD>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_VAR>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_SUSPEND_FUN>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 CAPTURED_COMPOSABLE_INVOCATION>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 ILLEGAL_ASSIGN_TO_UNIONTYPE>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE>
<androidx.compose.compiler.plugins.kotlin.ComposeErrors: androidx.compose.compiler.plugins.kotlin.ComposeErrors INSTANCE>
    private void <init>()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeErrors r0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeErrors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeErrors r0, $r1;
        org.jetbrains.kotlin.diagnostics.Severity $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 $r3, $r5, $r7, $r9, $r11, $r17;
        org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 $r13, $r15;
        androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages $r18;
        org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages$Extension $r19;

        $r1 = new androidx.compose.compiler.plugins.kotlin.ComposeErrors;

        specialinvoke $r1.<androidx.compose.compiler.plugins.kotlin.ComposeErrors: void <init>()>();

        r0 = $r1;

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: androidx.compose.compiler.plugins.kotlin.ComposeErrors INSTANCE> = r0;

        $r2 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r3 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory0: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 create(org.jetbrains.kotlin.diagnostics.Severity)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "DiagnosticFactory0.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_INVOCATION> = $r3;

        $r4 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r5 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory0: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 create(org.jetbrains.kotlin.diagnostics.Severity)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "DiagnosticFactory0.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_EXPECTED> = $r5;

        $r6 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r7 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory0: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 create(org.jetbrains.kotlin.diagnostics.Severity)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "DiagnosticFactory0.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_PROPERTY_BACKING_FIELD> = $r7;

        $r8 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r9 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory0: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 create(org.jetbrains.kotlin.diagnostics.Severity)>($r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "DiagnosticFactory0.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_VAR> = $r9;

        $r10 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r11 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory0: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 create(org.jetbrains.kotlin.diagnostics.Severity)>($r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "DiagnosticFactory0.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 COMPOSABLE_SUSPEND_FUN> = $r11;

        $r12 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r13 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory2: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 create(org.jetbrains.kotlin.diagnostics.Severity)>($r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "DiagnosticFactory2.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 CAPTURED_COMPOSABLE_INVOCATION> = $r13;

        $r14 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r15 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory2: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 create(org.jetbrains.kotlin.diagnostics.Severity)>($r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "DiagnosticFactory2.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 ILLEGAL_ASSIGN_TO_UNIONTYPE> = $r15;

        $r16 = <org.jetbrains.kotlin.diagnostics.Severity: org.jetbrains.kotlin.diagnostics.Severity ERROR>;

        $r17 = staticinvoke <org.jetbrains.kotlin.diagnostics.DiagnosticFactory0: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 create(org.jetbrains.kotlin.diagnostics.Severity)>($r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "DiagnosticFactory0.creat\u2026 Severity.ERROR\n        )");

        <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory0 ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE> = $r17;

        $r18 = new androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages;

        specialinvoke $r18.<androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages: void <init>()>();

        $r19 = (org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages$Extension) $r18;

        staticinvoke <org.jetbrains.kotlin.diagnostics.Errors$Initializer: void initializeFactoryNamesAndDefaultErrorMessages(java.lang.Class,org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages$Extension)>(class "Landroidx/compose/compiler/plugins/kotlin/ComposeErrors;", $r19);

        return;
    }

