androidx.media3.datasource.DefaultHttpDataSource
<androidx.media3.datasource.DefaultHttpDataSource: int DEFAULT_CONNECT_TIMEOUT_MILLIS>
<androidx.media3.datasource.DefaultHttpDataSource: int DEFAULT_READ_TIMEOUT_MILLIS>
<androidx.media3.datasource.DefaultHttpDataSource: java.lang.String TAG>
<androidx.media3.datasource.DefaultHttpDataSource: int MAX_REDIRECTS>
<androidx.media3.datasource.DefaultHttpDataSource: int HTTP_STATUS_TEMPORARY_REDIRECT>
<androidx.media3.datasource.DefaultHttpDataSource: int HTTP_STATUS_PERMANENT_REDIRECT>
<androidx.media3.datasource.DefaultHttpDataSource: long MAX_BYTES_TO_DRAIN>
<androidx.media3.datasource.DefaultHttpDataSource: boolean allowCrossProtocolRedirects>
<androidx.media3.datasource.DefaultHttpDataSource: int connectTimeoutMillis>
<androidx.media3.datasource.DefaultHttpDataSource: int readTimeoutMillis>
<androidx.media3.datasource.DefaultHttpDataSource: java.lang.String userAgent>
<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>
<androidx.media3.datasource.DefaultHttpDataSource: boolean keepPostFor302Redirects>
<androidx.media3.datasource.DefaultHttpDataSource: com.google.common.base.Predicate contentTypePredicate>
<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.DataSpec dataSpec>
<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>
<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream>
<androidx.media3.datasource.DefaultHttpDataSource: boolean opened>
<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>
<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead>
<androidx.media3.datasource.DefaultHttpDataSource: long bytesRead>
    public void <init>()
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void <init>(java.lang.String,int,int)>(null, 8000, 8000);

        return;
    }

    public void <init>(java.lang.String)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void <init>(java.lang.String,int,int)>(r1, 8000, 8000);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void <init>(java.lang.String,int,int,boolean,androidx.media3.datasource.HttpDataSource$RequestProperties)>(r1, i0, i1, 0, null);

        return;
    }

    public void <init>(java.lang.String, int, int, boolean, androidx.media3.datasource.HttpDataSource$RequestProperties)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0;
        androidx.media3.datasource.HttpDataSource$RequestProperties r2;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void <init>(java.lang.String,int,int,boolean,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,boolean)>(r1, i0, i1, z0, r2, null, 0);

        return;
    }

    private void <init>(java.lang.String, int, int, boolean, androidx.media3.datasource.HttpDataSource$RequestProperties, com.google.common.base.Predicate, boolean)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0, z1;
        androidx.media3.datasource.HttpDataSource$RequestProperties r2, $r4;
        com.google.common.base.Predicate r3;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r3 := @parameter5: com.google.common.base.Predicate;

        z1 := @parameter6: boolean;

        specialinvoke r0.<androidx.media3.datasource.BaseDataSource: void <init>(boolean)>(1);

        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.lang.String userAgent> = r1;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: int connectTimeoutMillis> = i0;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: int readTimeoutMillis> = i1;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean allowCrossProtocolRedirects> = z0;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = r2;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: com.google.common.base.Predicate contentTypePredicate> = r3;

        $r4 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r4.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties> = $r4;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean keepPostFor302Redirects> = z1;

        return;
    }

    public void setContentTypePredicate(com.google.common.base.Predicate)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        com.google.common.base.Predicate r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: com.google.common.base.Predicate;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: com.google.common.base.Predicate contentTypePredicate> = r1;

        return;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.net.HttpURLConnection $r1, $r2;
        java.net.URL $r3;
        java.lang.String $r4;
        android.net.Uri $r5;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.net.URL getURL()>();

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String toString()>();

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

     label2:
        return $r5;
    }

    public int getResponseCode()
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.net.HttpURLConnection $r1;
        int $i0, $i1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        if $r1 == null goto label1;

        $i0 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        if $i0 > 0 goto label2;

     label1:
        $i1 = -1;

        goto label3;

     label2:
        $i1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

     label3:
        return $i1;
    }

    public java.util.Map getResponseHeaders()
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.net.HttpURLConnection $r1, $r3;
        java.util.Map $r4, r7;
        com.google.common.collect.ImmutableMap $r5;
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r6;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r5;

     label1:
        r6 = new androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $r3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        specialinvoke r6.<androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: void <init>(java.util.Map)>($r4);

        r7 = (java.util.Map) r6;

        return r7;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1, r2;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r5;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r5.<androidx.media3.datasource.HttpDataSource$RequestProperties: void set(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void clearRequestProperty(java.lang.String)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r3;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r3.<androidx.media3.datasource.HttpDataSource$RequestProperties: void remove(java.lang.String)>(r1);

        return;
    }

    public void clearAllRequestProperties()
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r1.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clear()>();

        return;
    }

    public long open(androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        java.lang.String r2, $r6, $r10, $r11, r31;
        java.net.HttpURLConnection r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i9, $i10;
        long $l5, $l7, $l11, $l12, $l13, $l16, $l17, l19, $l20, $l21, l22, l23, $l24;
        byte $b6, $b8, $b14, $b15, $b18;
        com.google.common.base.Predicate $r7, $r13;
        java.io.InputStream $r9, r25, $r32;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r15, $r17, $r20, $r21, r23, r28, r33, r34, r41, r42, r43, r44, r45, r46;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r19, $r22, r39, r40;
        java.util.Map r24;
        byte[] $r26, r27;
        androidx.media3.datasource.DataSourceException $r29, r30, r35;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r36;
        androidx.media3.datasource.HttpDataSource$InvalidContentTypeException r37;
        java.util.zip.GZIPInputStream r38;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.DataSpec dataSpec> = r1;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesRead> = 0L;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead> = 0L;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void transferInitializing(androidx.media3.datasource.DataSpec)>(r1);

     label01:
        $r4 = specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(androidx.media3.datasource.DataSpec)>(r1);

        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection> = $r4;

        r3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        $i0 = virtualinvoke r3.<java.net.HttpURLConnection: int getResponseCode()>();

        r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode> = $i0;

        r2 = virtualinvoke r3.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r23 = $r21;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        $r22 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException,androidx.media3.datasource.DataSpec,int)>(r23, r1, 1);

        r41 = (java.lang.Throwable) $r22;

        throw r41;

     label04:
        $i1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        if $i1 < 200 goto label05;

        $i9 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        if $i9 <= 299 goto label17;

     label05:
        r24 = virtualinvoke r3.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $i2 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        if $i2 != 416 goto label08;

        $r6 = virtualinvoke r3.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Range");

        l19 = staticinvoke <androidx.media3.datasource.HttpUtil: long getDocumentSize(java.lang.String)>($r6);

        $l5 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b6 = $l5 cmp l19;

        if $b6 != 0 goto label08;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean opened> = 1;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void transferStarted(androidx.media3.datasource.DataSpec)>(r1);

        $l7 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b8 = $l7 cmp -1L;

        if $b8 == 0 goto label06;

        $l20 = r1.<androidx.media3.datasource.DataSpec: long length>;

        goto label07;

     label06:
        $l20 = 0L;

     label07:
        return $l20;

     label08:
        r25 = virtualinvoke r3.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label09:
        if r25 == null goto label10;

        $r26 = staticinvoke <androidx.media3.common.util.Util: byte[] toByteArray(java.io.InputStream)>(r25);

        goto label11;

     label10:
        $r26 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

     label11:
        r27 = $r26;

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;

        r28 = $r20;

        r27 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

     label14:
        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        $i3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        if $i3 != 416 goto label15;

        r35 = new androidx.media3.datasource.DataSourceException;

        $r29 = r35;

        specialinvoke r35.<androidx.media3.datasource.DataSourceException: void <init>(int)>(2008);

        goto label16;

     label15:
        $r29 = null;

     label16:
        r30 = $r29;

        r36 = new androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        $i4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        specialinvoke r36.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[])>($i4, r2, r30, r24, r1, r27);

        r42 = (java.lang.Throwable) r36;

        throw r42;

     label17:
        r31 = virtualinvoke r3.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $r7 = r0.<androidx.media3.datasource.DefaultHttpDataSource: com.google.common.base.Predicate contentTypePredicate>;

        if $r7 == null goto label18;

        $r13 = r0.<androidx.media3.datasource.DefaultHttpDataSource: com.google.common.base.Predicate contentTypePredicate>;

        $z0 = interfaceinvoke $r13.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r31);

        if $z0 != 0 goto label18;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        r37 = new androidx.media3.datasource.HttpDataSource$InvalidContentTypeException;

        specialinvoke r37.<androidx.media3.datasource.HttpDataSource$InvalidContentTypeException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec)>(r31, r1);

        r43 = (java.lang.Throwable) r37;

        throw r43;

     label18:
        $i10 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int responseCode>;

        if $i10 != 200 goto label19;

        $l17 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label19;

        $l21 = r1.<androidx.media3.datasource.DataSpec: long position>;

        goto label20;

     label19:
        $l21 = 0L;

     label20:
        l22 = $l21;

        z2 = staticinvoke <androidx.media3.datasource.DefaultHttpDataSource: boolean isCompressed(java.net.HttpURLConnection)>(r3);

        if z2 != 0 goto label24;

        $l13 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b14 = $l13 cmp -1L;

        if $b14 == 0 goto label21;

        $l16 = r1.<androidx.media3.datasource.DataSpec: long length>;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead> = $l16;

        goto label25;

     label21:
        $r10 = virtualinvoke r3.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Length");

        $r11 = virtualinvoke r3.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Range");

        l23 = staticinvoke <androidx.media3.datasource.HttpUtil: long getContentLength(java.lang.String,java.lang.String)>($r10, $r11);

        $b15 = l23 cmp -1L;

        if $b15 == 0 goto label22;

        $l24 = l23 - l22;

        goto label23;

     label22:
        $l24 = -1L;

     label23:
        r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead> = $l24;

        goto label25;

     label24:
        $l11 = r1.<androidx.media3.datasource.DataSpec: long length>;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead> = $l11;

     label25:
        $r32 = virtualinvoke r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream> = $r32;

        if z2 == 0 goto label26;

        r38 = new java.util.zip.GZIPInputStream;

        $r9 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream>;

        specialinvoke r38.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r9);

        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream> = r38;

     label26:
        goto label28;

     label27:
        $r15 := @caughtexception;

        r33 = $r15;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        r39 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke r39.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r33, r1, 2000, 1);

        r44 = (java.lang.Throwable) r39;

        throw r44;

     label28:
        r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean opened> = 1;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void transferStarted(androidx.media3.datasource.DataSpec)>(r1);

     label29:
        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void skipFully(long,androidx.media3.datasource.DataSpec)>(l22, r1);

     label30:
        goto label33;

     label31:
        $r17 := @caughtexception;

        r34 = $r17;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        $z1 = r34 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z1 == 0 goto label32;

        $r19 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) r34;

        r45 = (java.lang.Throwable) $r19;

        throw r45;

     label32:
        r40 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke r40.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r34, r1, 2000, 1);

        r46 = (java.lang.Throwable) r40;

        throw r46;

     label33:
        $l12 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead>;

        return $l12;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label09 to label12 with label13;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.IOException from label29 to label30 with label31;
    }

    public int read(byte[], int, int) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        byte[] r1;
        int i0, i1, $i2;
        java.lang.Throwable r2, $r3, r8;
        androidx.media3.datasource.DataSpec $r4, $r6;
        java.lang.Object $r5;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r7;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $i2 = specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: int readInternal(byte[],int,int)>(r1, i0, i1);

     label2:
        return $i2;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.datasource.DataSpec) $r5;

        $r7 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException,androidx.media3.datasource.DataSpec,int)>(r2, $r6, 2);

        r8 = (java.lang.Throwable) $r7;

        throw r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.io.InputStream r1;
        long l0, $l1, $l3, $l4, $l5;
        java.lang.Throwable r2, r3, $r5, $r10, r12;
        boolean $z0, $z1;
        byte $b2;
        java.net.HttpURLConnection $r4;
        androidx.media3.datasource.DataSpec $r7, $r9;
        java.lang.Object $r8;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r11;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

     label01:
        r1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream>;

        if r1 == null goto label07;

        $l1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label02;

        $l5 = -1L;

        goto label03;

     label02:
        $l4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead>;

        $l3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesRead>;

        $l5 = $l4 - $l3;

     label03:
        l0 = $l5;

        $r4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        staticinvoke <androidx.media3.datasource.DefaultHttpDataSource: void maybeTerminateInputStream(java.net.HttpURLConnection,long)>($r4, l0);

     label04:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r5 := @caughtexception;

        r2 = $r5;

        r11 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        $r7 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.DataSpec dataSpec>;

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r7);

        $r9 = (androidx.media3.datasource.DataSpec) $r8;

        specialinvoke r11.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r2, $r9, 2000, 3);

        r12 = (java.lang.Throwable) r11;

        throw r12;

     label07:
        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream> = null;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        $z0 = r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean opened>;

        if $z0 == 0 goto label11;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean opened> = 0;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void transferEnded()>();

        goto label11;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream> = null;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void closeConnectionQuietly()>();

        $z1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean opened>;

        if $z1 == 0 goto label10;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean opened> = 0;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void transferEnded()>();

     label10:
        throw r3;

     label11:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private java.net.HttpURLConnection makeConnection(androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        long l0, l1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.net.HttpURLConnection r2, $r15;
        int i2, i3, i4, $i5;
        java.lang.String r3, $r6, $r12;
        android.net.Uri $r5;
        java.lang.StringBuilder $r10, $r11, r19;
        java.util.Map $r13, $r14;
        java.net.URL r16, r18;
        byte[] r17;
        java.net.NoRouteToHostException r20;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r21;
        java.lang.Throwable r22;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        r18 = new java.net.URL;

        $r5 = r1.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String toString()>();

        specialinvoke r18.<java.net.URL: void <init>(java.lang.String)>($r6);

        r16 = r18;

        i3 = r1.<androidx.media3.datasource.DataSpec: int httpMethod>;

        r17 = r1.<androidx.media3.datasource.DataSpec: byte[] httpBody>;

        l0 = r1.<androidx.media3.datasource.DataSpec: long position>;

        l1 = r1.<androidx.media3.datasource.DataSpec: long length>;

        z0 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: boolean isFlagSet(int)>(1);

        $z2 = r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean allowCrossProtocolRedirects>;

        if $z2 != 0 goto label01;

        $z3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean keepPostFor302Redirects>;

        if $z3 != 0 goto label01;

        $r14 = r1.<androidx.media3.datasource.DataSpec: java.util.Map httpRequestHeaders>;

        $r15 = specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(java.net.URL,int,byte[],long,long,boolean,boolean,java.util.Map)>(r16, i3, r17, l0, l1, z0, 1, $r14);

        return $r15;

     label01:
        i4 = 0;

     label02:
        $i5 = i4;

        i4 = i4 + 1;

        if $i5 > 20 goto label12;

        $r13 = r1.<androidx.media3.datasource.DataSpec: java.util.Map httpRequestHeaders>;

        r2 = specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(java.net.URL,int,byte[],long,long,boolean,boolean,java.util.Map)>(r16, i3, r17, l0, l1, z0, 0, $r13);

        i2 = virtualinvoke r2.<java.net.HttpURLConnection: int getResponseCode()>();

        r3 = virtualinvoke r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

        if i3 == 1 goto label03;

        if i3 != 3 goto label05;

     label03:
        if i2 == 300 goto label04;

        if i2 == 301 goto label04;

        if i2 == 302 goto label04;

        if i2 == 303 goto label04;

        if i2 == 307 goto label04;

        if i2 != 308 goto label05;

     label04:
        virtualinvoke r2.<java.net.HttpURLConnection: void disconnect()>();

        r16 = specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.URL handleRedirect(java.net.URL,java.lang.String,androidx.media3.datasource.DataSpec)>(r16, r3, r1);

        goto label11;

     label05:
        if i3 != 2 goto label10;

        if i2 == 300 goto label06;

        if i2 == 301 goto label06;

        if i2 == 302 goto label06;

        if i2 != 303 goto label10;

     label06:
        virtualinvoke r2.<java.net.HttpURLConnection: void disconnect()>();

        $z4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean keepPostFor302Redirects>;

        if $z4 == 0 goto label07;

        if i2 != 302 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z1 = $z5;

        if z1 != 0 goto label09;

        i3 = 1;

        r17 = null;

     label09:
        r16 = specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.URL handleRedirect(java.net.URL,java.lang.String,androidx.media3.datasource.DataSpec)>(r16, r3, r1);

        goto label11;

     label10:
        return r2;

     label11:
        goto label02;

     label12:
        r21 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r20 = new java.net.NoRouteToHostException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many redirects: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.net.NoRouteToHostException: void <init>(java.lang.String)>($r12);

        specialinvoke r21.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r20, r1, 2001, 1);

        r22 = (java.lang.Throwable) r21;

        throw r22;
    }

    private java.net.HttpURLConnection makeConnection(java.net.URL, int, byte[], long, long, boolean, boolean, java.util.Map) throws java.io.IOException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.net.URL r1;
        int i0, $i3, $i4, $i5;
        byte[] r2;
        long l1, l2;
        boolean z0, z1, $z2, $z3;
        java.util.Map r3, $r9, $r23;
        java.net.HttpURLConnection r4;
        java.util.HashMap r5, $r6;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r7, $r8, $r22;
        java.util.Set $r10;
        java.lang.String $r11, $r12, $r16, $r19, $r21, r26, $r27;
        java.lang.Object $r17, $r18, $r20;
        java.util.Iterator r24;
        java.util.Map$Entry r25;
        java.io.OutputStream r28;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.net.URL;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r3 := @parameter7: java.util.Map;

        r4 = virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection openConnection(java.net.URL)>(r1);

        $i3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int connectTimeoutMillis>;

        virtualinvoke r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i3);

        $i4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: int readTimeoutMillis>;

        virtualinvoke r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i4);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r5 = $r6;

        $r7 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        if $r7 == null goto label01;

        $r22 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r23 = virtualinvoke $r22.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map getSnapshot()>();

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>($r23);

     label01:
        $r8 = r0.<androidx.media3.datasource.DefaultHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        $r9 = virtualinvoke $r8.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map getSnapshot()>();

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>($r9);

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r3);

        $r10 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>();

        r24 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r17 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.util.Map$Entry) $r17;

        $r18 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r18;

        $r20 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (java.lang.String) $r20;

        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r19, $r21);

        goto label02;

     label03:
        r26 = staticinvoke <androidx.media3.datasource.HttpUtil: java.lang.String buildRangeRequestHeader(long,long)>(l1, l2);

        if r26 == null goto label04;

        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Range", r26);

     label04:
        $r11 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.lang.String userAgent>;

        if $r11 == null goto label05;

        $r16 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.lang.String userAgent>;

        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r16);

     label05:
        if z0 == 0 goto label06;

        $r27 = "gzip";

        goto label07;

     label06:
        $r27 = "identity";

     label07:
        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", $r27);

        virtualinvoke r4.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(z1);

        if r2 == null goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        virtualinvoke r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z3);

        $r12 = staticinvoke <androidx.media3.datasource.DataSpec: java.lang.String getStringForHttpMethod(int)>(i0);

        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r12);

        if r2 == null goto label10;

        $i5 = lengthof r2;

        virtualinvoke r4.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i5);

        virtualinvoke r4.<java.net.HttpURLConnection: void connect()>();

        r28 = virtualinvoke r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke r28.<java.io.OutputStream: void write(byte[])>(r2);

        virtualinvoke r28.<java.io.OutputStream: void close()>();

        goto label11;

     label10:
        virtualinvoke r4.<java.net.HttpURLConnection: void connect()>();

     label11:
        return r4;
    }

    java.net.HttpURLConnection openConnection(java.net.URL) throws java.io.IOException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.net.URL r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        return $r3;
    }

    private java.net.URL handleRedirect(java.net.URL, java.lang.String, androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.net.URL r1, r4, r29;
        java.lang.String r2, $r6, $r7, $r11, $r16, $r17, $r22, r27;
        androidx.media3.datasource.DataSpec r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r20, $r21, r31, r33;
        java.lang.Throwable $r24, r26, r35, r36, r37, r38;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r28, r30, r32, r34;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.datasource.DataSpec;

        if r2 != null goto label1;

        r28 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke r28.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>("Null location redirect", r3, 2001, 1);

        r35 = (java.lang.Throwable) r28;

        throw r35;

     label1:
        r29 = new java.net.URL;

        specialinvoke r29.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r1, r2);

        r4 = r29;

     label2:
        goto label4;

     label3:
        $r24 := @caughtexception;

        r26 = $r24;

        r30 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke r30.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r26, r3, 2001, 1);

        r36 = (java.lang.Throwable) r30;

        throw r36;

     label4:
        r27 = virtualinvoke r4.<java.net.URL: java.lang.String getProtocol()>();

        $r6 = "https";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r27);

        if $z0 != 0 goto label5;

        $r17 = "http";

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r27);

        if $z3 != 0 goto label5;

        r32 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported protocol redirect: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>($r22, r3, 2001, 1);

        r37 = (java.lang.Throwable) r32;

        throw r37;

     label5:
        $z1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: boolean allowCrossProtocolRedirects>;

        if $z1 != 0 goto label6;

        $r7 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z2 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label6;

        r34 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed cross-protocol redirect (");

        $r11 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r34.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>($r16, r3, 2001, 1);

        r38 = (java.lang.Throwable) r34;

        throw r38;

     label6:
        return r4;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private void skipFully(long, androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        byte[] r2;
        int i0, i1, $i4;
        byte $b2, $b3;
        long $l5, $l6, $l7, l8;
        java.io.InputStream $r3, $r5;
        java.lang.Object $r4;
        java.lang.Thread $r6;
        boolean $z0;
        java.io.InterruptedIOException r10;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r11, r12;
        java.lang.Throwable r13, r14;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        l8 := @parameter0: long;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        $b2 = l8 cmp 0L;

        if $b2 != 0 goto label1;

        return;

     label1:
        r2 = newarray (byte)[4096];

     label2:
        $b3 = l8 cmp 0L;

        if $b3 <= 0 goto label5;

        $i4 = lengthof r2;

        $l5 = (long) $i4;

        $l6 = staticinvoke <java.lang.Math: long min(long,long)>(l8, $l5);

        i0 = (int) $l6;

        $r3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r5 = (java.io.InputStream) $r4;

        i1 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i0);

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r6.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 == 0 goto label3;

        r11 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r10 = new java.io.InterruptedIOException;

        specialinvoke r10.<java.io.InterruptedIOException: void <init>()>();

        specialinvoke r11.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r10, r1, 2000, 1);

        r13 = (java.lang.Throwable) r11;

        throw r13;

     label3:
        if i1 != -1 goto label4;

        r12 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke r12.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(androidx.media3.datasource.DataSpec,int,int)>(r1, 2008, 1);

        r14 = (java.lang.Throwable) r12;

        throw r14;

     label4:
        $l7 = (long) i1;

        l8 = l8 - $l7;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void bytesTransferred(int)>(i1);

        goto label2;

     label5:
        return;
    }

    private int readInternal(byte[], int, int) throws java.io.IOException
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        byte[] r1;
        int i0, i11, i13;
        long $l1, $l3, $l4, $l5, $l6, $l7, $l9, $l10, l12;
        byte $b2, $b8;
        java.io.InputStream $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i11 := @parameter2: int;

        if i11 != 0 goto label1;

        return 0;

     label1:
        $l1 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label3;

        $l7 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesToRead>;

        $l6 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesRead>;

        l12 = $l7 - $l6;

        $b8 = l12 cmp 0L;

        if $b8 != 0 goto label2;

        return -1;

     label2:
        $l9 = (long) i11;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>($l9, l12);

        i11 = (int) $l10;

     label3:
        $r2 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.io.InputStream inputStream>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        $r4 = (java.io.InputStream) $r3;

        i13 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i11);

        if i13 != -1 goto label4;

        return -1;

     label4:
        $l4 = r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesRead>;

        $l3 = (long) i13;

        $l5 = $l4 + $l3;

        r0.<androidx.media3.datasource.DefaultHttpDataSource: long bytesRead> = $l5;

        virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void bytesTransferred(int)>(i13);

        return i13;
    }

    private static void maybeTerminateInputStream(java.net.HttpURLConnection, long)
    {
        java.net.HttpURLConnection r0;
        long l0;
        java.lang.String r1, $r5, $r12;
        java.lang.Class r2, $r4, $r6, $r9;
        java.lang.reflect.Method r3;
        int $i1, $i2, $i5;
        byte $b3, $b4;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.Class[] $r8;
        java.lang.Object[] $r10;
        java.lang.Throwable $r13, r15;
        java.io.InputStream r14;

        r0 := @parameter0: java.net.HttpURLConnection;

        l0 := @parameter1: long;

        if r0 == null goto label01;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 19 goto label01;

        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 <= 20 goto label02;

     label01:
        return;

     label02:
        r14 = virtualinvoke r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $b3 = l0 cmp -1L;

        if $b3 != 0 goto label04;

        $i5 = virtualinvoke r14.<java.io.InputStream: int read()>();

        if $i5 != -1 goto label06;

     label03:
        return;

     label04:
        $b4 = l0 cmp 2048L;

        if $b4 > 0 goto label06;

     label05:
        return;

     label06:
        $r4 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r5 = "com.android.okhttp.internal.http.HttpTransport$ChunkedInputStream";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label07;

        $r12 = "com.android.okhttp.internal.http.HttpTransport$FixedLengthInputStream";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label08;

     label07:
        $r6 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.lang.Class) $r7;

        $r8 = newarray (java.lang.Class)[0];

        r3 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("unexpectedEndOfInput", $r8);

        virtualinvoke r3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r14, $r10);

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        r15 = $r13;

     label10:
        return;

        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label08 with label09;
    }

    private void closeConnectionQuietly()
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.Throwable r1, $r4;
        java.net.HttpURLConnection $r2, $r3;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        $r2 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        if $r2 == null goto label5;

     label1:
        $r3 = r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection>;

        virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DefaultHttpDataSource", "Unexpected error while disconnecting", r1);

     label4:
        r0.<androidx.media3.datasource.DefaultHttpDataSource: java.net.HttpURLConnection connection> = null;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static boolean isCompressed(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.net.HttpURLConnection;

        r1 = virtualinvoke r0.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Encoding");

        $r2 = "gzip";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z0;
    }

    void <init>(java.lang.String, int, int, boolean, androidx.media3.datasource.HttpDataSource$RequestProperties, com.google.common.base.Predicate, boolean, androidx.media3.datasource.DefaultHttpDataSource$1)
    {
        androidx.media3.datasource.DefaultHttpDataSource r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0, z1;
        androidx.media3.datasource.HttpDataSource$RequestProperties r2;
        com.google.common.base.Predicate r3;
        androidx.media3.datasource.DefaultHttpDataSource$1 r4;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r3 := @parameter5: com.google.common.base.Predicate;

        z1 := @parameter6: boolean;

        r4 := @parameter7: androidx.media3.datasource.DefaultHttpDataSource$1;

        specialinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource: void <init>(java.lang.String,int,int,boolean,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,boolean)>(r1, i0, i1, z0, r2, r3, z1);

        return;
    }

androidx.media3.datasource.DefaultHttpDataSource$1
androidx.media3.datasource.DefaultHttpDataSource$Factory
<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: com.google.common.base.Predicate contentTypePredicate>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: java.lang.String userAgent>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: int connectTimeoutMs>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: int readTimeoutMs>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: boolean allowCrossProtocolRedirects>
<androidx.media3.datasource.DefaultHttpDataSource$Factory: boolean keepPostFor302Redirects>
    public void <init>()
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r1.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = $r1;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: int connectTimeoutMs> = 8000;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: int readTimeoutMs> = 8000;

        return;
    }

    public final androidx.media3.datasource.DefaultHttpDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        java.util.Map r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r2;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        virtualinvoke $r2.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clearAndSet(java.util.Map)>(r1);

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setUserAgent(java.lang.String)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: java.lang.String userAgent> = r1;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setConnectTimeoutMs(int)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: int connectTimeoutMs> = i0;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setReadTimeoutMs(int)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: int readTimeoutMs> = i0;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setAllowCrossProtocolRedirects(boolean)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: boolean allowCrossProtocolRedirects> = z0;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setContentTypePredicate(com.google.common.base.Predicate)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        com.google.common.base.Predicate r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        r1 := @parameter0: com.google.common.base.Predicate;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: com.google.common.base.Predicate contentTypePredicate> = r1;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        androidx.media3.datasource.TransferListener r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener> = r1;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource$Factory setKeepPostFor302Redirects(boolean)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: boolean keepPostFor302Redirects> = z0;

        return r0;
    }

    public androidx.media3.datasource.DefaultHttpDataSource createDataSource()
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        androidx.media3.datasource.DefaultHttpDataSource r1, $r2;
        boolean $z0, $z1;
        com.google.common.base.Predicate $r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r4;
        int $i0, $i1;
        java.lang.String $r5;
        androidx.media3.datasource.TransferListener $r6, $r7;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        $r2 = new androidx.media3.datasource.DefaultHttpDataSource;

        $r5 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: java.lang.String userAgent>;

        $i1 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: int connectTimeoutMs>;

        $i0 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: int readTimeoutMs>;

        $z1 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: boolean allowCrossProtocolRedirects>;

        $r4 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r3 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: com.google.common.base.Predicate contentTypePredicate>;

        $z0 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: boolean keepPostFor302Redirects>;

        specialinvoke $r2.<androidx.media3.datasource.DefaultHttpDataSource: void <init>(java.lang.String,int,int,boolean,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,boolean,androidx.media3.datasource.DefaultHttpDataSource$1)>($r5, $i1, $i0, $z1, $r4, $r3, $z0, null);

        r1 = $r2;

        $r6 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>;

        if $r6 == null goto label1;

        $r7 = r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>;

        virtualinvoke r1.<androidx.media3.datasource.DefaultHttpDataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>($r7);

     label1:
        return r1;
    }

    public volatile androidx.media3.datasource.HttpDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0, $r2;
        java.util.Map r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setDefaultRequestProperties(java.util.Map)>(r1);

        return $r2;
    }

    public volatile androidx.media3.datasource.HttpDataSource createDataSource()
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        androidx.media3.datasource.DefaultHttpDataSource $r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource createDataSource()>();

        return $r1;
    }

    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory r0;
        androidx.media3.datasource.DefaultHttpDataSource $r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource createDataSource()>();

        return $r1;
    }

androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap
<androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: java.util.Map headers>
    public void <init>(java.util.Map)
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.util.Map r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.google.common.collect.ForwardingMap: void <init>()>();

        r0.<androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: java.util.Map headers> = r1;

        return;
    }

    protected java.util.Map delegate()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.util.Map $r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $r1 = r0.<androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: java.util.Map headers>;

        return $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.util.List get(java.lang.Object)
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.lang.Object r1, $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = specialinvoke r0.<com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.util.List) $r2;

     label2:
        return $r3;
    }

    public java.util.Set keySet()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.util.Set $r1, $r3;
        com.google.common.base.Predicate $r2;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $r1 = specialinvoke r0.<com.google.common.collect.ForwardingMap: java.util.Set keySet()>();

        $r2 = dynamicinvoke "apply" <com.google.common.base.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: boolean lambda$keySet$0(java.lang.String)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        $r3 = staticinvoke <com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>($r1, $r2);

        return $r3;
    }

    public java.util.Set entrySet()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.util.Set $r1, $r3;
        com.google.common.base.Predicate $r2;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $r1 = specialinvoke r0.<com.google.common.collect.ForwardingMap: java.util.Set entrySet()>();

        $r2 = dynamicinvoke "apply" <com.google.common.base.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: boolean lambda$entrySet$1(java.util.Map$Entry)>, methodtype: boolean __METHODTYPE__(java.util.Map$Entry));

        $r3 = staticinvoke <com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>($r1, $r2);

        return $r3;
    }

    public int size()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        int $i0, $i1;
        boolean $z0;
        byte $b2;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $i0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: int size()>();

        $z0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>(null);

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $i1 = $i0 - $b2;

        return $i1;
    }

    public boolean isEmpty()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $z0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: int size()>();

        if $i0 != 1 goto label2;

        $z1 = specialinvoke r0.<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>(null);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean containsValue(java.lang.Object)
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: boolean standardContainsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: boolean standardEquals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        int $i0;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $i0 = specialinvoke r0.<com.google.common.collect.ForwardingMap: int standardHashCode()>();

        return $i0;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: java.util.List get(java.lang.Object)>(r1);

        return $r2;
    }

    protected volatile java.lang.Object delegate()
    {
        androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap r0;
        java.util.Map $r1;

        r0 := @this: androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap: java.util.Map delegate()>();

        return $r1;
    }

    private static boolean lambda$entrySet$1(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean lambda$keySet$0(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

